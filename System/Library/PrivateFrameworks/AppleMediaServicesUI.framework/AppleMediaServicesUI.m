void sub_100004A80()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t *v7;
  char *v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;

  sub_100020620();
  if (v4)
  {
    sub_100048B58();
    if (v5 != v6)
    {
      sub_100046134();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_10004D67C();
  if (v3)
  {
    sub_100043478(v7);
    v8 = (char *)sub_10002D348();
    v9 = j__malloc_size(v8);
    sub_10004A028(v9 - 32);
  }
  else
  {
    v8 = (char *)&_swiftEmptyArrayStorage;
  }
  if (v1)
  {
    sub_1000724CC((char *)(v0 + 32), v2, v8 + 32);
    sub_100049CDC();
  }
  else
  {
    v10 = sub_10005338C();
    sub_100004B74(v10, v11, v12, v13, v14);
  }
}

uint64_t sub_100004B34()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_10005249C();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100004B74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_100022904();
    sub_100049830();
    goto LABEL_11;
  }
  unint64_t v6 = a4 + 8 * a1 + 32;
  unint64_t v7 = a3 + 8 * v5;
  if (v6 >= v7 || v6 + 8 * v5 <= a3)
  {
    sub_100043478(a5);
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v7;
  }
  sub_100022904();
  sub_10004DBF0();
LABEL_11:
  uint64_t result = sub_10004AA78();
  __break(1u);
  return result;
}

void sub_100004C58()
{
  sub_1000209F4();
  id v54 = v0;
  unint64_t v2 = v1;
  type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin();
  v59 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v2 >> 62) {
    goto LABEL_21;
  }
  uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = 0;
    unint64_t v53 = v2 & 0xC000000000000001;
    unint64_t v48 = v2 + 32;
    unint64_t v6 = &type metadata for String;
    long long v50 = xmmword_1001C3120;
    v49 = (void *)0x80000001001D1A70;
    uint64_t v51 = v4;
    unint64_t v52 = v2;
    while (1)
    {
      unint64_t v7 = v53;
      sub_1000BA1D0(v5, v53 == 0, v2);
      id v8 = v7 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v48 + 8 * v5);
      v9 = v8;
      BOOL v10 = __OFADD__(v5, 1);
      uint64_t v11 = v5 + 1;
      if (v10) {
        break;
      }
      uint64_t v58 = v11;
      uint64_t v12 = 0;
      *(void *)&long long v65 = 0;
      *((void *)&v65 + 1) = 0xE000000000000000;
      do
      {
        uint64_t v13 = *(uint64_t *)((char *)&off_10020C3E0 + v12 + 32);
        v14 = *(_UNKNOWN **)((char *)&off_10020C3E0 + v12 + 40);
        v64._countAndFlagsBits = 0;
        v64._object = (void *)0xE000000000000000;
        swift_bridgeObjectRetain();
        v15._countAndFlagsBits = v13;
        v15._object = v14;
        String.append(_:)(v15);
        v16._countAndFlagsBits = 61;
        v16._object = (void *)0xE100000000000000;
        String.append(_:)(v16);
        NSString v17 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v18 = [v9 propertyForBodyKey:v17];

        if (v18)
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
          sub_100043510(&v60, &v62);
        }
        else
        {
          v63 = v6;
          *(void *)&long long v62 = 0;
          *((void *)&v62 + 1) = 0xE000000000000000;
        }
        _print_unlocked<A, B>(_:_:)();
        sub_10004377C((uint64_t)&v62);
        v19._countAndFlagsBits = 8251;
        v19._object = (void *)0xE200000000000000;
        String.append(_:)(v19);
        String.append(_:)(v64);
        swift_bridgeObjectRelease();
        v12 += 16;
      }
      while (v12 != 48);
      if (qword_10022C490 != -1) {
        swift_once();
      }
      uint64_t v57 = qword_1002440F8;
      sub_100043478(&qword_10022E560);
      uint64_t v20 = type metadata accessor for LogMessage();
      sub_100044798(v20);
      uint64_t v22 = *(void *)(v21 + 72);
      unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = v50;
      unint64_t v56 = v25 + v24;
      v63 = (void *)type metadata accessor for JSMetrics();
      *(void *)&long long v62 = v54;
      id v26 = v54;
      id v27 = (id)AMSLogKey();
      if (v27)
      {
        v28 = v27;
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v55 = v22;
        uint64_t v30 = v29;
        uint64_t v32 = v31;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v33._countAndFlagsBits = 0;
        v33._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v33);
        sub_100049788(&v62, (uint64_t)v63);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
        *(void *)&long long v60 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v60, &qword_10022F490);
        v35._countAndFlagsBits = 5972026;
        v35._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v35);
        uint64_t v36 = (uint64_t)v6;
        uint64_t MetatypeMetadata = (uint64_t)v6;
        *(void *)&long long v60 = v30;
        *((void *)&v60 + 1) = v32;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v60, &qword_10022F490);
        v37._countAndFlagsBits = 93;
        v37._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v37);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        sub_100020E60();
        sub_100049788(&v62, (uint64_t)v63);
        uint64_t v38 = swift_getDynamicType();
        uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
        *(void *)&long long v60 = v38;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v60, &qword_10022F490);
        v39._countAndFlagsBits = 58;
        v39._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v39);
        LogMessage.init(stringInterpolation:)();
        uint64_t v36 = (uint64_t)v6;
      }
      sub_10004377C((uint64_t)&v62);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v40._countAndFlagsBits = 0xD000000000000020;
      v40._object = v49;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      id v41 = [v9 topic];
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v44 = v43;

      v63 = (void *)v36;
      *(void *)&long long v62 = v42;
      *((void *)&v62 + 1) = v44;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v62, &qword_10022F490);
      v45._countAndFlagsBits = 8251;
      v45._object = (void *)0xE200000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      v63 = (void *)v36;
      long long v62 = v65;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v62, &qword_10022F490);
      sub_100020E60();
      LogMessage.init(stringInterpolation:)();
      uint64_t v46 = static os_log_type_t.default.getter();
      sub_10004841C(v46);
      swift_bridgeObjectRelease();

      unint64_t v2 = v52;
      uint64_t v5 = v58;
      unint64_t v6 = (void *)v36;
      if (v58 == v51)
      {
        swift_bridgeObjectRelease();
        sub_100020FDC();
        return;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
  sub_100020FDC();
  swift_bridgeObjectRelease();
}

uint64_t sub_100005234()
{
  return Promise.resolve(_:)();
}

uint64_t sub_100005258(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  sub_100043478(&qword_100230868);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = 0xD000000000000013;
  *(void *)(inited + 40) = 0x80000001001D1510;
  *(void *)(inited + 48) = [a1 authorizationStatus];
  uint64_t v6 = Dictionary.init(dictionaryLiteral:)();
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v27 = type metadata accessor for JSUserNotifications();
  v26[0] = a2;
  id v7 = a2;
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(v26, v27);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v24[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v24);
    v15._countAndFlagsBits = 5972026;
    v15._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    uint64_t MetatypeMetadata = &type metadata for String;
    v24[0] = v10;
    v24[1] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v24);
    v16._countAndFlagsBits = 93;
    v16._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    sub_100049788(v26, v27);
    uint64_t v18 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v24[0] = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v24);
    v19._countAndFlagsBits = 58;
    v19._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v26);
  LogMessage.init(stringLiteral:)();
  uint64_t v20 = sub_100043478(&qword_100230870);
  uint64_t v27 = v20;
  v26[0] = v6;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)v26);
  uint64_t v21 = static os_log_type_t.default.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1001C3110;
  *(void *)(v22 + 56) = v20;
  *(void *)(v22 + 32) = v6;
  sub_10001147C(v22);
  return swift_bridgeObjectRelease();
}

void *sub_10000564C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v11 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v12 = *v11++;
      swift_bridgeObjectRetain();
      sub_1000F6048(a3, a4, v12, a5);
      swift_bridgeObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v8;
    }
    while (v8);
  }
  else
  {
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return &_swiftEmptyArrayStorage;
}

void *sub_1000057B8(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * v7);
      v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000058E0(void *a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  type metadata accessor for ActivityObserver();
  swift_initStaticObject();
  if (sub_100007568())
  {
    if (qword_10022C498 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v36 = type metadata accessor for EngagementService();
    v35[0] = a1;
    id v3 = a1;
    id v4 = (id)AMSLogKey();
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v8 = v7;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v9._countAndFlagsBits = 0;
      v9._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v9);
      sub_100049788(v35, v36);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v32 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v32, &qword_10022F490);
      v11._countAndFlagsBits = 5972026;
      v11._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v11);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v32 = v6;
      uint64_t v33 = v8;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v32, &qword_10022F490);
      v12._countAndFlagsBits = 93;
      v12._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v12);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v23._countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      sub_100049788(v35, v36);
      uint64_t v24 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v32 = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v32, &qword_10022F490);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v35);
    LogMessage.init(stringLiteral:)();
    uint64_t v26 = static os_log_type_t.default.getter();
    sub_10004841C(v26);
    swift_bridgeObjectRelease();
    swift_initStaticObject();
    return sub_10006854C(0);
  }
  else
  {
    if (qword_10022C498 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v36 = type metadata accessor for EngagementService();
    v35[0] = a1;
    id v13 = a1;
    id v14 = (id)AMSLogKey();
    if (v14)
    {
      Swift::String v15 = v14;
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v18 = v17;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      sub_100049788(v35, v36);
      uint64_t v20 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v32 = v20;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v32, &qword_10022F490);
      v21._countAndFlagsBits = 5972026;
      v21._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v32 = v16;
      uint64_t v33 = v18;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v32, &qword_10022F490);
      v22._countAndFlagsBits = 93;
      v22._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v28._countAndFlagsBits = 0;
      v28._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      sub_100049788(v35, v36);
      uint64_t v29 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v32 = v29;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v32, &qword_10022F490);
      v30._countAndFlagsBits = 58;
      v30._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v35);
    LogMessage.init(stringLiteral:)();
    uint64_t v31 = static os_log_type_t.info.getter();
    sub_10004841C(v31);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100005EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  v24[0] = a1;
  uint64_t v11 = type metadata accessor for Optional();
  sub_1000448FC();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v24 - v15;
  sub_1000448FC();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  Swift::String v21 = (char *)v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a2, v11);
  if (sub_10004FD40((uint64_t)v16, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v11);
    a6[3] = a3;
    a6[4] = a5;
    Swift::String v22 = sub_10003BAA4(a6);
    return (*(uint64_t (**)(uint64_t *, void, uint64_t))(*(void *)(a3 - 8) + 16))(v22, v24[1], a3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v16, a4);
    AsyncObjectGraphBuilder.satisfying<A>(_:with:)();
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v21, a4);
  }
}

uint64_t sub_100006084(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022FB40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AppURLSession()
{
  return self;
}

uint64_t type metadata accessor for JSFamily()
{
  return self;
}

uint64_t type metadata accessor for JSLocalize()
{
  return self;
}

uint64_t sub_100006158(uint64_t a1, char a2, char a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v24 - v14;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 24) = 0u;
  uint64_t v16 = a1;
  uint64_t v18 = v17;
  sub_10000AE64(v16, a2, a3, (uint64_t)v24 - v14);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v18);
  uint64_t v19 = *(void **)*(&off_10020E388 + a2);
  type metadata accessor for SQLDatabase();
  id v20 = v19;
  uint64_t v21 = SQLDatabase.__allocating_init(url:readonly:fileProtection:schemaBlock:corruptionBlock:)((uint64_t)v13, 0, v19, (uint64_t)sub_100054A4C, 0, 0, 0);
  if (v4)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v18);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    type metadata accessor for AppDatabase();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v5 + 16) = v21;
    uint64_t v22 = swift_retain();
    sub_10002D18C(v22, v22);
    sub_10002D520();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v18);
  }
  return v5;
}

uint64_t type metadata accessor for JSMediaAPI()
{
  return self;
}

uint64_t type metadata accessor for JSApp()
{
  return self;
}

uint64_t sub_100006428()
{
  sub_10004782C();
  v1();
  if (v0)
  {
    sub_10004D568();
    return swift_errorRelease();
  }
  else
  {
    Promise.resolve(_:)();
    return swift_bridgeObjectRelease();
  }
}

id sub_100006554(uint64_t a1, const void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtC14amsengagementd8JSFamily_accountStore] = a1;
  memcpy(&v2[OBJC_IVAR____TtC14amsengagementd8JSFamily_config], a2, 0x50uLL);
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for JSFamily();
  return objc_msgSendSuper2(&v4, "init");
}

uint64_t type metadata accessor for JSClientDemo()
{
  return self;
}

id sub_100006600()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_metrics);
}

uint64_t type metadata accessor for JSDevice()
{
  return self;
}

uint64_t sub_100006630(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for JSRequest();
  sub_100044E90(v3);
  uint64_t v5 = v1[2];
  uint64_t v6 = (void *)v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return sub_10001CE30(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t type metadata accessor for JSExtension()
{
  return self;
}

id sub_1000066B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  id v8 = [v4 initWithMemoryCapacity:a1 diskCapacity:a2 diskPath:v7];

  return v8;
}

uint64_t sub_100006734(void *a1)
{
  uint64_t v3 = sub_100043478(&qword_10022FA90);
  sub_100020DEC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100020EAC();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = (uint64_t)sub_100049788(a1, a1[3]);
  sub_1000544E8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    uint64_t v10 = KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
  }
  sub_10004377C((uint64_t)a1);
  return v10;
}

uint64_t type metadata accessor for JSClient()
{
  return self;
}

uint64_t sub_100006878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_10008BDBC(a1, a2, a3, (uint64_t)sub_10005346C, a5, a6, a7, a8, a9, a10);
}

uint64_t type metadata accessor for JSPrivacy()
{
  return self;
}

uint64_t sub_1000068B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 8))
  {
    sub_10002CC68(a1, (uint64_t *)&unk_10022E590);
    uint64_t v5 = sub_10004405C();
    sub_10008AA78(v5, v6, v7);
    swift_bridgeObjectRelease();
    return sub_10002CC68((uint64_t)v9, (uint64_t *)&unk_10022E590);
  }
  else
  {
    sub_1000549E0(a1, (uint64_t)v9);
    sub_100053A7C((uint64_t)v9, a2, a3);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100006944(uint64_t a1)
{
  Date.timeIntervalSince1970.getter();
  id v2 = [self standardUserDefaults];
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  NSString v4 = sub_10004C7A0();
  [v2 setValue:isa forKey:v4];

  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(a1, v5);
}

uint64_t sub_100006A24()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100006A74()
{
  type metadata accessor for JSCallable();
  sub_100044830();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 32) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_release();

  uint64_t v8 = sub_1000210B4();
  v9(v8);
  return _swift_deallocObject(v0, v6, v7);
}

uint64_t type metadata accessor for JSNetwork()
{
  return self;
}

uint64_t type metadata accessor for JSServerDataCache()
{
  return self;
}

void sub_100006B54(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  objc_msgSend(a3, "set_sourceApplicationBundleIdentifier:", v4);
}

id sub_100006BAC(void *__src)
{
  *(void *)&v1[OBJC_IVAR____TtC14amsengagementd11JSExtension____lazy_storage___extensionLoader] = 0;
  memcpy(&v1[OBJC_IVAR____TtC14amsengagementd11JSExtension_config], __src, 0x50uLL);
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for JSExtension();
  return objc_msgSendSuper2(&v3, "init");
}

void sub_100006C04()
{
  sub_1000209F4();
  uint64_t v0 = sub_1000463B8();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  os_log_type_t v2 = sub_1000468CC();
  if (sub_10004A208(v2))
  {
    static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v3 = sub_100046E18();
    sub_100044798(v3);
    NSString v4 = (__n128 *)sub_100048808();
    uint64_t v5 = sub_10004A3D0(v4, (__n128)xmmword_1001C3FC0);
    sub_10002123C(v5);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100043CE0();
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100048E08();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000458E0(MetatypeMetadata);
      sub_1000423CC((uint64_t)v11);
      sub_100020E44();
      sub_100049A34();
      sub_1000423CC((uint64_t)v11);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100043C78();
      uint64_t v8 = swift_getMetatypeMetadata();
      sub_1000472AC(v8);
      sub_1000423CC((uint64_t)v11);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004377C((uint64_t)v12);
    sub_100040B18();
    LogMessage.init(stringLiteral:)();
    uint64_t v9 = sub_10004786C();
    sub_10004AC44(v9, v10);
    sub_1000423CC((uint64_t)v12);
    sub_100049E30();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10004770C();
    sub_100020FDC();
    swift_release();
  }
}

uint64_t type metadata accessor for JSFollowUp()
{
  return self;
}

void sub_100006DF0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, unsigned char *))
{
  sub_10005370C(a1, v24);
  uint64_t v3 = v24[0];
  uint64_t v25 = v24[1];
  int64_t v4 = v24[3];
  unint64_t v5 = v24[4];
  int64_t v6 = (unint64_t)(v24[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v21 = &_swiftEmptyArrayStorage;
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v8 = v7 | (v4 << 6);
      goto LABEL_20;
    }
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_26;
    }
    unint64_t v10 = *(void *)(v25 + 8 * v9);
    int64_t v11 = v4 + 1;
    if (!v10)
    {
      int64_t v11 = v4 + 2;
      if (v4 + 2 >= v6) {
        goto LABEL_26;
      }
      unint64_t v10 = *(void *)(v25 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v4 + 3;
        if (v4 + 3 >= v6) {
          goto LABEL_26;
        }
        unint64_t v10 = *(void *)(v25 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v4 + 4;
          if (v4 + 4 >= v6) {
            goto LABEL_26;
          }
          unint64_t v10 = *(void *)(v25 + 8 * v11);
          if (!v10)
          {
            int64_t v11 = v4 + 5;
            if (v4 + 5 >= v6) {
              goto LABEL_26;
            }
            unint64_t v10 = *(void *)(v25 + 8 * v11);
            if (!v10)
            {
              int64_t v12 = v4 + 6;
              while (v12 < v6)
              {
                unint64_t v10 = *(void *)(v25 + 8 * v12++);
                if (v10)
                {
                  int64_t v11 = v12 - 1;
                  goto LABEL_19;
                }
              }
LABEL_26:
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    int64_t v4 = v11;
LABEL_20:
    uint64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    sub_100043520(*(void *)(v3 + 56) + 32 * v8, (uint64_t)v23);
    v22[0] = v14;
    v22[1] = v15;
    swift_bridgeObjectRetain();
    uint64_t v16 = a2(v14, v15, v23);
    sub_10002CC0C((uint64_t)v22, &qword_10022E208);
    if (v16)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100053710();
        uint64_t v21 = v19;
      }
      unint64_t v17 = v21[2];
      unint64_t v18 = v17 + 1;
      if (v17 >= v21[3] >> 1)
      {
        sub_100053710();
        unint64_t v18 = v17 + 1;
        uint64_t v21 = v20;
      }
      v21[2] = v18;
      v21[v17 + 4] = v16;
    }
  }
  __break(1u);
}

uint64_t type metadata accessor for JSUserNotifications()
{
  return self;
}

uint64_t sub_100007054(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v4, v3))
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v5 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v5;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
    {
      uint64_t v7 = v5 & 0xFFFFFFFFFFFFFF8;
      if (v4 + v3 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_12;
      }
    }
  }
  if (v5 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v8;
    uint64_t v7 = v8 & 0xFFFFFFFFFFFFFF8;
LABEL_12:
    uint64_t result = sub_100053868(v7 + 8 * *(void *)(v7 + 16) + 32, (*(void *)(v7 + 24) >> 1) - *(void *)(v7 + 16), a1);
    if (v10 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v10 >= 1)
  {
    uint64_t v11 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v12 = __OFADD__(v11, v10);
    uint64_t v13 = v11 + v10;
    if (v12)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v13;
  }
  swift_bridgeObjectRelease();
  return specialized Array._endMutation()();
}

uint64_t type metadata accessor for JSTelephony()
{
  return self;
}

id sub_100007240()
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC14amsengagementd16JSTreatmentStore____lazy_storage___dateFormatter] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "init");
}

uint64_t type metadata accessor for JSLocation()
{
  return self;
}

id sub_1000072A8(uint64_t a1)
{
  objc_super v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = &v3[OBJC_IVAR____TtC14amsengagementd5JSBag_bag];
  uint64_t v5 = type metadata accessor for Bag();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v3;
  v9.super_class = v1;
  id v7 = objc_msgSendSuper2(&v9, "init");
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

void sub_100007384(void *a1)
{
  id v1 = [a1 virtualMachine];
  if (v1)
  {
    id v2 = v1;
    [v1 shrinkFootprintWhenIdle];
  }
  else
  {
    __break(1u);
  }
}

void *sub_1000073E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  sub_100043520(a3, (uint64_t)v13);
  sub_100043478(&qword_10022FE80);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v9 = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10000564C(v12, v9, a1, a2, a5);
  swift_bridgeObjectRelease();
  return v10;
}

#error "1000074EC: call analysis failed (funcsize=15)"

uint64_t sub_1000074F8()
{
  sub_10000752C();
  return swift_deallocClassInstance();
}

uint64_t sub_10000752C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100007568()
{
  uint64_t v0 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v2 = v1;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  sub_100020DEC();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100020EAC();
  uint64_t v15 = (void *)(v14 - v13);
  if (qword_10022C588 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_100244180;
  *uint64_t v15 = qword_100244180;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v9);
  id v17 = (id)v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v15, v9);
  if (v16)
  {
    if (sub_100007E94() == 0.0)
    {
      return 0;
    }
    else
    {
      static Date.now.getter();
      sub_10006826C();
      Date.timeIntervalSince(_:)();
      double v20 = v19;
      uint64_t v21 = *(void (**)(char *, uint64_t))(v2 + 8);
      v21(v6, v0);
      v21(v8, v0);
      return sub_100007E94() <= v20;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100007774(void *a1, double a2)
{
  JSContextGroupRef Group = JSContextGetGroup((JSContextRef)[a1 JSGlobalContextRef]);
  v4.n128_f64[0] = a2 + 2.0;
  return _JSContextGroupSetExecutionTimeLimit(Group, sub_1000D0A8C, 0, v4);
}

uint64_t sub_1000077D0(void *a1)
{
  id v1 = [a1 subscriptions];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_10004D510(0, &qword_1002307C8);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_100007840(id *a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [*a1 uuid];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  char v7 = static UUID.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

uint64_t sub_10000794C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v9 - 8);
  sub_10004B0C0((uint64_t)&v30);
  if (!v5)
  {
    uint64_t v10 = v31;
    if (v31)
    {
      uint64_t v11 = v30;
      uint64_t v33 = v30;
      uint64_t v34 = v31;
      sub_100043510(v32, v35);
      uint64_t v30 = v11;
      uint64_t v31 = v10;
      sub_100043520((uint64_t)v35, (uint64_t)v32);
      sub_100043520((uint64_t)v35, (uint64_t)v28);
      sub_100043510(v28, v29);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_10003E698((uint64_t)v29, v11, v10);
      swift_endAccess();
      sub_10002CC0C((uint64_t)&v33, &qword_10022E208);
      sub_10004377C((uint64_t)v32);
    }
    else
    {
      sub_10002CC0C((uint64_t)&v30, &qword_10022E200);
      if (qword_10022C468 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      uint64_t v36 = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      *((void *)&v35[0] + 1) = type metadata accessor for AppKeyValueTable();
      uint64_t v33 = a2;
      swift_retain();
      id v12 = (id)AMSLogKey();
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v16._countAndFlagsBits = 0;
        v16._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v16);
        sub_100049788(&v33, *((uint64_t *)&v35[0] + 1));
        uint64_t DynamicType = swift_getDynamicType();
        *((void *)&v32[0] + 1) = swift_getMetatypeMetadata();
        uint64_t v30 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v30, &qword_10022F490);
        v18._countAndFlagsBits = 5972026;
        v18._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v18);
        *((void *)&v32[0] + 1) = &type metadata for String;
        uint64_t v30 = v27;
        uint64_t v31 = v15;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v30, &qword_10022F490);
        v19._countAndFlagsBits = 93;
        v19._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v19);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v20._countAndFlagsBits = 0;
        v20._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v20);
        sub_100049788(&v33, *((uint64_t *)&v35[0] + 1));
        uint64_t v21 = swift_getDynamicType();
        *((void *)&v32[0] + 1) = swift_getMetatypeMetadata();
        uint64_t v30 = v21;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v30, &qword_10022F490);
        v22._countAndFlagsBits = 58;
        v22._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v22);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v33);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v23._object = (void *)0x80000001001CBA40;
      v23._countAndFlagsBits = 0xD000000000000018;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      *((void *)&v35[0] + 1) = &type metadata for String;
      uint64_t v33 = a4;
      uint64_t v34 = a5;
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v33, &qword_10022F490);
      v24._countAndFlagsBits = 0;
      v24._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      LogMessage.init(stringInterpolation:)();
      uint64_t v25 = static os_log_type_t.error.getter();
      sub_10004841C(v25);
      swift_bridgeObjectRelease();
    }
  }
  return 1;
}

id sub_100007E10()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_serverDataCache);
}

uint64_t initializeWithCopy for AppConfiguration(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

double sub_100007E94()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  sub_100020EAC();
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v3 = sub_1000484EC();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 doubleForKey:v4];

  id v6 = [v5 valuePromise];
  v27[0] = 0;
  id v7 = [v6 resultWithError:v27];

  if (v7)
  {
    id v8 = v27[0];
    [v7 doubleValue];
    double v10 = v9;
  }
  else
  {
    id v11 = v27[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10022C478 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v12 = sub_10002D318();
    sub_100044798(v12);
    sub_10003BDC8();
    *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3130;
    uint64_t v28 = type metadata accessor for ActivityObserver();
    v27[0] = v1;
    swift_retain();
    id v13 = (id)AMSLogKey();
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      sub_1000470E8();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100041FB4(MetatypeMetadata);
      sub_10002CC0C((uint64_t)v26, &qword_10022F490);
      sub_100020E44();
      void v26[3] = &type metadata for String;
      v26[0] = v24;
      v26[1] = v16;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v26, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      sub_1000470E8();
      uint64_t v20 = swift_getMetatypeMetadata();
      sub_100041FB4(v20);
      sub_10002CC0C((uint64_t)v26, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v27);
    LogMessage.init(stringLiteral:)();
    swift_getErrorValue();
    uint64_t v28 = v25;
    uint64_t v21 = sub_10003BAA4((uint64_t *)v27);
    (*(void (**)(uint64_t *))(*(void *)(v25 - 8) + 16))(v21);
    static LogMessage.safe(_:)();
    sub_10002CC0C((uint64_t)v27, &qword_10022F490);
    uint64_t v22 = static os_log_type_t.debug.getter();
    sub_10004841C(v22);

    swift_errorRelease();
    swift_bridgeObjectRelease();
    return 900.0;
  }
  return v10;
}

#error "1000082F4: call analysis failed (funcsize=39)"

uint64_t sub_100008358(char a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v8 = v7;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v18 - v13;
  sub_10003CE10(a1);
  sub_10004DDC8();
  URL.appendingPathComponent(_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v12, v6);
  v18[0] = 0x2E74757074756FLL;
  v18[1] = 0xE700000000000000;
  v16._countAndFlagsBits = a2;
  v16._object = a3;
  String.append(_:)(v16);
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v15)(v14, v6);
}

uint64_t sub_1000084A8()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == sub_10004A678() && v0 == v2)
  {
    uint64_t v5 = 0x400000;
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v5;
  }
  uint64_t v4 = sub_1000473B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (v4 == sub_10004A678() && v0 == v7)
    {
      uint64_t v5 = 0x100000;
    }
    else
    {
      uint64_t v9 = sub_1000473B4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v9) {
        return 0x100000;
      }
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (v9 == sub_10004A678() && v0 == v10)
      {
        uint64_t v5 = 0x200000;
      }
      else
      {
        uint64_t v12 = sub_1000473B4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v12) {
          return 0x200000;
        }
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v5 = 3145728;
        if (v12 != sub_10004A678() || v0 != v13)
        {
          if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
            uint64_t v5 = 3145728;
          }
          else {
            uint64_t v5 = 0;
          }
        }
      }
    }
    goto LABEL_8;
  }
  return 0x400000;
}

uint64_t sub_100008614(uint64_t *a1, uint64_t (*a2)(uint64_t *, uint64_t *))
{
  unint64_t v4 = *(void *)(*a1 + 16);
  swift_retain();
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
  specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  uint64_t result = specialized ContiguousArray._endMutation()();
  if (v4)
  {
    while (1)
    {
      unint64_t v6 = *(void *)(*a1 + 16);
      if (v4 >= v6) {
        break;
      }
      uint64_t v7 = *a1 + 32;
      uint64_t v17 = *(void *)(v7 + 8 * v4);
      unint64_t v8 = v4 - 1;
      unint64_t v9 = (v4 - 1) >> 1;
      if (v9 >= v6) {
        goto LABEL_18;
      }
      uint64_t v16 = *(void *)(v7 + 8 * v9);
      swift_retain();
      swift_retain();
      char v10 = a2(&v17, &v16);
      swift_release();
      uint64_t result = swift_release();
      if ((v10 & 1) == 0) {
        return result;
      }
      if (v4 != v9)
      {
        uint64_t v11 = *a1;
        unint64_t v12 = *(void *)(*a1 + 16);
        if (v4 >= v12) {
          goto LABEL_19;
        }
        if (v9 >= v12) {
          goto LABEL_20;
        }
        uint64_t v13 = *(void *)(v11 + 32 + 8 * v4);
        uint64_t v14 = *(void *)(v11 + 32 + 8 * v9);
        swift_retain();
        swift_retain();
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v11;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_100037618(v11);
          uint64_t v11 = result;
          *a1 = result;
        }
        if (v4 >= *(void *)(v11 + 16)) {
          goto LABEL_21;
        }
        *(void *)(v11 + 8 * v4 + 32) = v14;
        swift_release();
        specialized ContiguousArray._endMutation()();
        uint64_t v15 = *a1;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v15;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_100037618(v15);
          uint64_t v15 = result;
          *a1 = result;
        }
        if (v9 >= *(void *)(v15 + 16)) {
          goto LABEL_22;
        }
        *(void *)(v15 + 8 * v9 + 32) = v13;
        swift_release();
        uint64_t result = specialized ContiguousArray._endMutation()();
      }
      unint64_t v4 = (v4 - 1) >> 1;
      if (v8 <= 1) {
        return result;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  return result;
}

uint64_t SQLDatabase.__allocating_init(url:readonly:fileProtection:schemaBlock:corruptionBlock:)(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (URL.isFileURL.getter())
  {
    uint64_t v22 = a7;
    uint64_t v14 = a3;
    uint64_t v15 = URL.path.getter();
    uint64_t v21 = a5;
    uint64_t v17 = v16;
    type metadata accessor for SQLDatabase();
    a1 = swift_allocObject();
    SQLDatabase.init(path:readonly:fileProtection:schemaBlock:corruptionBlock:)(v15, v17, a2 & 1, v14, a4, v21, a6, v22);
  }
  else
  {
    sub_10017D8D4();
    sub_100021180();
    *Swift::String v19 = 4;
    swift_willThrow();
    sub_10003E0EC(a6);
    sub_10003E0EC(a4);
  }
  type metadata accessor for URL();
  sub_100043B1C();
  sub_100043FB0();
  v18();
  return a1;
}

id sub_10000896C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v33 = a4;
  uint64_t v31 = a2;
  int v32 = a1 & 1;
  uint64_t v7 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v7 - 8);
  uint64_t v34 = (uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v29 = (char *)&v29 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v29 - v20;
  __chkstk_darwin(v19);
  uint64_t v30 = (char *)&v29 - v22;
  uint64_t v23 = *(unsigned __int8 *)(a3 + 1);
  sub_10000AB64(*(unsigned char *)(a3 + 1));
  sub_100009304(v23, 0);
  URL.appendingPathComponent(_:)();
  URL.appendingPathExtension(_:)();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v16, v9);
  sub_10003C158(v23, v34);
  sub_10003CE10(v23);
  URL.appendingPathComponent(_:)();
  v24(v13, v9);
  uint64_t v25 = (int *)type metadata accessor for JSStackContext();
  sub_100008358(v23, 0x6B63617074656ALL, (void *)0xE700000000000000);
  sub_100006084(v31, a5 + v25[8]);
  uint64_t v26 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v26(a5, v30, v9);
  sub_10003CDA8(v34, a5 + v25[5]);
  v26(a5 + v25[6], v21, v9);
  v26(a5 + v25[7], v29, v9);
  v26(a5 + v25[9], v16, v9);
  *(unsigned char *)(a5 + v25[11]) = v32;
  uint64_t v27 = v33;
  *(void *)(a5 + v25[12]) = v33;
  return v27;
}

uint64_t sub_100008CB0(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 32));
  uint64_t v4 = sub_100021A68();
  return _swift_deallocObject(v4, v5, 7);
}

uint64_t sub_100008D10(void *a1)
{
  JSContextGroupRef Group = JSContextGetGroup((JSContextRef)[a1 JSGlobalContextRef]);
  return _JSContextGroupClearExecutionTimeLimit(Group);
}

uint64_t sub_100008D44()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_10002068C();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100008D84()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  sub_10004520C();
  sub_10004874C();
  v0();
  swift_errorRelease();
  uint64_t v1 = sub_100048170();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_100008E1C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10004D254();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100008E60()
{
  swift_release();
  swift_release();

  uint64_t v1 = sub_10002068C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t destroy for AppConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100008EEC()
{
  type metadata accessor for Date();
  sub_1000456E0();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v2 | 7;
  unint64_t v4 = (*(void *)(v1 + 64) + ((v2 + 16) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100043FB0();
  v5();

  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, ((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v3);
}

uint64_t sub_100008FA4()
{
  type metadata accessor for JSCallable();
  sub_100043B1C();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = ((v2 + 16) & ~v2) + *(void *)(v1 + 56);
  uint64_t v4 = v2 | 7;
  sub_100043FB0();
  v5();
  return _swift_deallocObject(v0, v3, v4);
}

uint64_t sub_100009028(void (*a1)(void), uint64_t a2)
{
  swift_release();
  a1(*(void *)(v2 + 32));
  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_100009084()
{
  sub_10019D6B0();
  sub_10004A41C();
  sub_10005261C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10002219C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100052880;
  sub_1000473E8();
  sub_100049FEC();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

void sub_100009118(uint64_t a1)
{
  sub_100006DF0(a1, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_100053D8C);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v2; ++i)
    {
      unint64_t v4 = swift_bridgeObjectRetain();
      sub_100007054(v4);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_100004C58();
  if (qword_10022C3E8 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_10022D998;
  sub_10004D510(0, (unint64_t *)&qword_10022D810);
  id v6 = v5;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 enqueueEvents:isa];
}

id sub_100009278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3) {
    NSString v5 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v5 = 0;
  }

  memcpy(v8, (const void *)(a4 + 16), sizeof(v8));
  id v6 = objc_allocWithZone((Class)type metadata accessor for AppURLSession());
  sub_10002C008((uint64_t)v8);
  return sub_10000B620((uint64_t)v8);
}

uint64_t sub_100009304(char a1, char a2)
{
  uint64_t v5 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v5 - 8);
  sub_100020EAC();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_1000468B0();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v22 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v22 - v17;
  if (a2)
  {
    sub_10003CE10(a1);
    sub_10004DDC8();
    URL.appendingPathComponent(_:)();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v2, v9);
  }
  else
  {
    sub_10003C948();
    sub_1000481CC(v8);
    if (v19)
    {
      sub_10003CF18();
      sub_10002CC0C(v8, &qword_10022FB40);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v16, v8, v9);
    }
    sub_1000487DC();
    switch(a1)
    {
      case 1:
        sub_100046178();
        break;
      case 2:
        sub_100046164();
        break;
      case 3:
        sub_100040B04();
        break;
      default:
        break;
    }
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v11 + 8);
    v21(v16, v9);
    URL.appendingPathComponent(_:isDirectory:)();
    return ((uint64_t (*)(char *, uint64_t))v21)(v18, v9);
  }
}

id sub_10000955C(uint64_t a1)
{
  id v1 = sub_10000D2A8(a1);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(self, "ams_sharedAccountStoreForMediaType:", v1);
  id v4 = objc_msgSend(v3, "ams_fetchLocaliTunesAccount");
  id v15 = 0;
  id v5 = [v4 resultWithError:&v15];
  id v6 = v15;
  if (!v5)
  {
    id v12 = v15;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    return 0;
  }
  id v7 = v5;
  uint64_t v8 = (objc_class *)type metadata accessor for JSAccount();
  uint64_t v9 = (char *)objc_allocWithZone(v8);
  *(void *)&v9[OBJC_IVAR____TtC14amsengagementd9JSAccount_account] = v7;
  v14.receiver = v9;
  v14.super_class = v8;
  id v10 = v6;
  id v11 = objc_msgSendSuper2(&v14, "init");

  return v11;
}

uint64_t sub_1000096BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = Promise.__allocating_init()();
  id v5 = (void *)swift_allocObject();
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = v4;
  id v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = v4;
  swift_retain_n();
  swift_retain_n();
  sub_10003A184();
  swift_release();
  swift_release();
  return v4;
}

id sub_1000097D0(void *a1, uint64_t a2)
{
  uint64_t v5 = OBJC_IVAR____TtC14amsengagementd8JSClient_demo;
  id v6 = objc_allocWithZone((Class)type metadata accessor for JSClientDemo());
  id v7 = v2;
  *(void *)&v2[v5] = [v6 init];
  char v8 = *(unsigned char *)(a2 + 1);
  uint64_t v9 = &v7[OBJC_IVAR____TtC14amsengagementd8JSClient_clientInfo];
  *(void *)uint64_t v9 = a1;
  v9[8] = v8;
  id v10 = a1;

  v13.receiver = v7;
  v13.super_class = (Class)type metadata accessor for JSClient();
  id v11 = objc_msgSendSuper2(&v13, "init");
  sub_100024DF0(a2);

  return v11;
}

uint64_t sub_100009894()
{
  swift_unknownObjectRelease();
  id v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1000545CC(v0 + OBJC_IVAR____TtC14amsengagementd13SourceFetcher_context, (void (*)(void))type metadata accessor for JSStackContext);

  return v0;
}

uint64_t sub_100009924(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for JSStackContext();
  __chkstk_darwin(v10 - 8);
  sub_100020EAC();
  uint64_t v13 = v12 - v11;
  sub_100020130(a2, v12 - v11);
  type metadata accessor for SourceFetcher();
  swift_allocObject();
  sub_1000546C4(a1, v13, (uint64_t)a3, (uint64_t)a4, a5);
  sub_10002C008((uint64_t)a1);
  id v14 = a3;
  id v15 = a4;
  swift_unknownObjectRetain();
  sub_100043478(&qword_10022FB40);
  type metadata accessor for URL();
  return PipelinePhase.init(mapOutput:)();
}

uint64_t sub_100009A48(int a1, int a2, void *aBlock, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v4[4] = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v4[5] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_10001825C;
  return sub_100009D78();
}

uint64_t sub_100009B2C()
{
  swift_release();
  swift_errorRelease();
  swift_release();

  uint64_t v1 = sub_10004274C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_100009B7C(uint64_t a1)
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100009BE0()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  swift_release();

  uint64_t v1 = sub_1000210B4();
  v2(v1);
  uint64_t v3 = sub_100048198();
  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_100009C74()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  uint64_t v7 = ((*(void *)(v4 + 64) + v5 + ((v5 + 24) & ~v5)) & ~v5) + *(void *)(v4 + 64);
  swift_release();
  char v8 = *(void (**)(void))(v2 + 8);
  sub_10004874C();
  v8();
  sub_10004874C();
  v8();
  return _swift_deallocObject(v0, v7, v6);
}

uint64_t sub_100009D30()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100009D78()
{
  sub_100020958();
  uint64_t v3 = sub_1000225D0(v1, v2);
  sub_1000208F0(v3);
  *(void *)(v0 + 352) = sub_10003634C();
  sub_100043FD8();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_100009DEC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100009E44(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));
  swift_release();
  return _swift_deallocObject(v1, 40, 7);
}

uint64_t sub_100009E8C()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 32) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_release();

  sub_10004874C();
  v8();
  return _swift_deallocObject(v0, v6, v7);
}

uint64_t sub_100009F30(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3 = a1;
  return a2(&v3);
}

uint64_t sub_100009F6C()
{
  return Promise.resolve(_:)();
}

uint64_t sub_100009FA0()
{
  return sub_100009F6C();
}

uint64_t sub_100009FA8()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  uint64_t v1 = sub_100044104();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_100009FE0()
{
  uint64_t v1 = SecTaskCreateFromSelf(0);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  CFErrorRef error = 0;
  CFTypeRef v3 = SecTaskCopyValueForEntitlement(v1, *(CFStringRef *)(v0 + OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyEntitlementFineGrained), &error);
  if (!v3)
  {

    return 0;
  }
  CFTypeID v4 = CFGetTypeID(v3);
  if (v4 != CFArrayGetTypeID())
  {

    swift_unknownObjectRelease();
    return 0;
  }
  swift_unknownObjectRetain();
  sub_100043478(&qword_100232940);
  uint64_t v5 = swift_dynamicCast();
  if (v5)
  {
    uint64_t v6 = *(void *)(v13 + 16);
    if (v6)
    {
      uint64_t v7 = v0 + OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyEntitlementFineGrainedItemSPI;
      uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyEntitlementFineGrainedItemSPI);
      uint64_t v9 = *(void *)(v7 + 8);
      uint64_t v10 = (void *)(v13 + 40);
      while (1)
      {
        BOOL v11 = *(v10 - 1) == v8 && *v10 == v9;
        if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          break;
        }
        v10 += 2;
        if (!--v6) {
          goto LABEL_13;
        }
      }
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_13:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
  }
  else
  {

    swift_unknownObjectRelease();
  }
  return v5;
}

id sub_10000A178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3) {
    NSString v6 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v6 = 0;
  }

  memcpy(v10, (const void *)(a4 + 16), sizeof(v10));
  id result = [objc_allocWithZone((Class)JSVirtualMachine) init];
  if (result)
  {
    uint64_t v8 = result;
    type metadata accessor for JSStackProvider();
    uint64_t v9 = sub_10000E9A4(v10, a1, v8);

    return (id)v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10000A23C()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_10002068C();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10000A27C()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10000A2BC()
{
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  return _swift_deallocObject(v0, 64, 7);
}

id sub_10000A314(uint64_t a1)
{
  sub_10000A4BC(a1 + 24, (uint64_t)v13);
  sub_10000A4BC((uint64_t)v13, (uint64_t)v1 + OBJC_IVAR____TtC14amsengagementd5JSLog_logKey);
  unint64_t v3 = 0xE900000000000073;
  uint64_t v4 = 0x636974796C616E61;
  switch(*(unsigned char *)(a1 + 1))
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v4 = 0x6C616E7265746E69;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v4 = 0x7379656E72756F6ALL;
      break;
    case 3:
      unint64_t v3 = 0xEF736E6F69746164;
      uint64_t v4 = 0x6E656D6D6F636572;
      break;
    default:
      break;
  }
  uint64_t v11 = 762343521;
  unint64_t v12 = 0xE400000000000000;
  unint64_t v5 = v3;
  String.append(_:)(*(Swift::String *)&v4);
  NSString v6 = v1;
  sub_10002AB90((uint64_t)v13);
  swift_bridgeObjectRelease();
  type metadata accessor for Log();
  uint64_t v7 = swift_allocObject();
  sub_100053724();
  *(void *)(v7 + 16) = OS_os_log.init(subsystem:category:)();
  *(void *)&v6[OBJC_IVAR____TtC14amsengagementd5JSLog_logger] = v7;

  v10.receiver = v6;
  v10.super_class = (Class)type metadata accessor for JSLog();
  id v8 = objc_msgSendSuper2(&v10, "init");
  sub_100024DF0(a1);
  return v8;
}

uint64_t sub_10000A4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022E060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000A584(uint64_t a1, void *a2)
{
  unint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_connections);
  swift_beginAccess();
  id v4 = a2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  sub_100053864(*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10));
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_10000A60C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_10000A66C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10000A6B4(uint64_t *a1)
{
  sub_100043478(a1);
  sub_100043B1C();
  v2 += 8;
  uint64_t v3 = *(unsigned __int8 *)(v2 + 72);
  uint64_t v4 = ((v3 + 16) & ~v3) + *(void *)(v2 + 56);
  uint64_t v5 = v3 | 7;
  sub_100043FB0();
  v6();
  return _swift_deallocObject(v1, v4, v5);
}

uint64_t sub_10000A734(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v26 = *v3;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  uint64_t v31 = v6;
  __chkstk_darwin(v7);
  sub_100046690();
  type metadata accessor for DispatchQoS();
  sub_100020DEC();
  uint64_t v29 = v9;
  uint64_t v30 = v8;
  __chkstk_darwin(v8);
  sub_10002D300();
  uint64_t v10 = type metadata accessor for DispatchTime();
  sub_100020DEC();
  uint64_t v12 = v11;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v25 - v17;
  uint64_t v27 = v3[2];
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v12 + 8);
  v28(v16, v10);
  char v19 = (void *)swift_allocObject();
  v19[2] = v3;
  v19[3] = a1;
  uint64_t v20 = v26;
  v19[4] = a2;
  v19[5] = v20;
  aBlock[4] = sub_10002E61C;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  aBlock[3] = &unk_100217100;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  int v32 = &_swiftEmptyArrayStorage;
  sub_10002AFB0((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v21);
  sub_100043FB0();
  v22();
  sub_100043FB0();
  v23();
  v28(v18, v10);
  return swift_release();
}

id sub_10000AA9C()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_database);
}

id sub_10000AADC()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_network);
}

uint64_t SQLDatabase.__deallocating_deinit()
{
  SQLDatabase.deinit();
  return swift_deallocClassInstance();
}

uint64_t SQLDatabase.deinit()
{
  swift_bridgeObjectRelease();
  sub_10003E0EC(*(void *)(v0 + 40));

  sub_10003E0EC(*(void *)(v0 + 88));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10000AB64(char a1)
{
  uint64_t v2 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_100020EAC();
  uint64_t v8 = v7 - v6;
  id v9 = [self defaultManager];
  id v10 = [v9 temporaryDirectory];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000487DC();
  switch(a1)
  {
    case 1:
      sub_100046178();
      break;
    case 2:
      sub_100046164();
      break;
    case 3:
      sub_100040B04();
      break;
    default:
      break;
  }
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

id sub_10000ACC8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for Bag();
  sub_100020DEC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100020EAC();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = v3;
  id v15 = objc_msgSend(a1, "ams_activeiTunesAccount");
  *(void *)&v14[OBJC_IVAR____TtC14amsengagementd11JSMarketing_account] = v15;
  v14[OBJC_IVAR____TtC14amsengagementd11JSMarketing_app] = *(unsigned char *)(a3 + 1);
  if (qword_10022C3E0 != -1) {
    swift_once();
  }
  swift_unknownObjectRetain();
  Bag.init(from:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 32))(&v14[OBJC_IVAR____TtC14amsengagementd11JSMarketing_bag], v13, v7);
  *(void *)&v14[OBJC_IVAR____TtC14amsengagementd11JSMarketing_clientInfo] = a2;
  long long v20 = *(_OWORD *)(a3 + 40);
  *(_OWORD *)&v14[OBJC_IVAR____TtC14amsengagementd11JSMarketing_mediaClient] = v20;
  id v16 = a2;
  sub_10002AB90((uint64_t)&v20);

  v19.receiver = v14;
  v19.super_class = (Class)type metadata accessor for JSMarketing();
  id v17 = objc_msgSendSuper2(&v19, "init");
  sub_100024DF0(a3);

  return v17;
}

uint64_t sub_10000AE64@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  v33[0] = a1;
  uint64_t v7 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  id v17 = (char *)v33 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  long long v20 = (char *)v33 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v33 - v21;
  v33[1] = a4;
  switch(a2)
  {
    case 1:
    case 2:
    case 3:
      char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_4;
      }
      v29._countAndFlagsBits = (a2 - 1) + 65;
      uint64_t v34 = 45;
      unint64_t v35 = 0xE100000000000000;
      v29._object = (void *)0xE100000000000000;
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      uint64_t v24 = v34;
      unint64_t v25 = v35;
      if (a3) {
        goto LABEL_5;
      }
      goto LABEL_7;
    default:
      swift_bridgeObjectRelease();
LABEL_4:
      uint64_t v24 = 0;
      unint64_t v25 = 0xE000000000000000;
      if (a3)
      {
LABEL_5:
        uint64_t v34 = 7566955;
        unint64_t v35 = 0xE300000000000000;
        unint64_t v26 = v25;
        String.append(_:)(*(Swift::String *)&v24);
        swift_bridgeObjectRelease();
        v27._countAndFlagsBits = 6448174;
        v27._object = (void *)0xE300000000000000;
        String.append(_:)(v27);
        sub_10003CF18();
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v22, v10);
      }
      else
      {
LABEL_7:
        uint64_t v34 = 7368801;
        unint64_t v35 = 0xE300000000000000;
        unint64_t v30 = v25;
        String.append(_:)(*(Swift::String *)&v24);
        swift_bridgeObjectRelease();
        v31._countAndFlagsBits = 6448174;
        v31._object = (void *)0xE300000000000000;
        String.append(_:)(v31);
        sub_10003C948();
        if (sub_10004FD40((uint64_t)v9, 1, v10) == 1)
        {
          sub_10003CF18();
          sub_10002CC0C((uint64_t)v9, &qword_10022FB40);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v20, v9, v10);
        }
        URL.appendingPathComponent(_:isDirectory:)();
        swift_bridgeObjectRelease();
        URL.appendingPathComponent(_:isDirectory:)();
        int v32 = *(void (**)(char *, uint64_t))(v11 + 8);
        v32(v14, v10);
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        v32(v17, v10);
        return ((uint64_t (*)(char *, uint64_t))v32)(v20, v10);
      }
  }
}

uint64_t sub_10000B2C8()
{
  sub_100041F70();
  sub_1000447B0();
  uint64_t v3 = v2;
  sub_100044DDC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_100020EBC();
  *uint64_t v6 = v5;
  *(void *)(v3 + 416) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 344);
    return _swift_task_switch(sub_100199590, v7, 0);
  }
  else
  {
    sub_100043FF8();
    swift_release();
    swift_task_dealloc();
    uint64_t v8 = sub_1000475F0();
    return v9(v8);
  }
}

id sub_10000B3E8(const void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC14amsengagementd10JSMediaAPI_encoders;
  uint64_t v4 = self;
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 mapTableWithKeyOptions:0 valueOptions:5];
  uint64_t v6 = OBJC_IVAR____TtC14amsengagementd10JSMediaAPI_tokenServices;
  *(void *)&v5[v6] = [self mapTableWithKeyOptions:5 valueOptions:5];
  uint64_t v7 = OBJC_IVAR____TtC14amsengagementd10JSMediaAPI_urlSessions;
  *(void *)&v5[v7] = [self mapTableWithKeyOptions:5 valueOptions:5];
  memcpy(&v5[OBJC_IVAR____TtC14amsengagementd10JSMediaAPI_config], a1, 0x50uLL);
  sub_10002C008((uint64_t)a1);

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for JSMediaAPI();
  id v8 = objc_msgSendSuper2(&v10, "init");
  sub_100024DF0((uint64_t)a1);
  return v8;
}

id sub_10000B510(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [a1 valueForEntitlement:v2];

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_100053404((uint64_t)v7, (uint64_t)v8);
  if (!v9)
  {
    sub_1000423CC((uint64_t)v8);
    return 0;
  }
  sub_10004D510(0, (unint64_t *)&qword_100231E00);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v4 = [v6 BOOLValue];

  return v4;
}

id sub_10000B620(uint64_t a1)
{
  NSString v2 = v1;
  id v4 = self;
  id v5 = [self currentProcess];
  id v6 = objc_msgSend(v4, "ams_configurationWithProcessInfo:bag:", v5, 0);

  sub_100006B54(0xD000000000000012, 0x80000001001CBCA0, v6);
  id v7 = objc_allocWithZone((Class)NSURLCache);
  id v8 = sub_1000066B0(0, 10000000, 0, 0);
  [v6 setURLCache:v8];

  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for AppURLSession();
  id v9 = objc_msgSendSuper2(&v11, "initWithConfiguration:delegate:delegateQueue:", v6, 0, 0);
  sub_100024DF0(a1);

  return v9;
}

uint64_t sub_10000B754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v41 = a5;
  uint64_t v42 = a6;
  uint64_t v38 = a4;
  uint64_t v37 = a3;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v43 = type metadata accessor for DispatchWorkItemFlags();
  sub_1000448FC();
  uint64_t v46 = v6;
  __chkstk_darwin(v7);
  sub_10002D300();
  type metadata accessor for DispatchQoS();
  sub_1000448FC();
  uint64_t v44 = v9;
  uint64_t v45 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v36 = v10;
  sub_1000448FC();
  uint64_t v12 = v11;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v19 = type metadata accessor for DispatchQoS.QoSClass();
  sub_1000448FC();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v24, enum case for DispatchQoS.QoSClass.default(_:), v19);
  uint64_t v34 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v19);
  static DispatchTime.now()();
  + infix(_:_:)();
  unint64_t v35 = *(void (**)(char *, uint64_t))(v12 + 8);
  v35(v16, v10);
  static DispatchQoS.background.getter();
  uint64_t v25 = swift_allocObject();
  swift_weakInit();
  unint64_t v26 = (void *)swift_allocObject();
  uint64_t v27 = v39;
  uint64_t v28 = v40;
  v26[2] = v25;
  void v26[3] = v27;
  void v26[4] = v28;
  aBlock[4] = v41;
  aBlock[5] = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  aBlock[3] = v42;
  Swift::String v29 = _Block_copy(aBlock);
  uint64_t v47 = _swiftEmptyArrayStorage;
  sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unint64_t v30 = (void *)v34;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v29);

  sub_100043FB0();
  v31();
  sub_100043FB0();
  v32();
  v35(v18, v36);
  swift_release();
  swift_release();
  return swift_retain();
}

uint64_t sub_10000BB7C()
{
  sub_10000BBB0();
  return swift_deallocClassInstance();
}

void sub_10000BBB0()
{
  sub_1000209F4();
  sub_100045024();
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  sub_100011D4C();
  sub_100049788((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v3 = swift_retain();
  sub_10002D078(v3, v3);
  sub_10004377C(v0 + 16);
  sub_10004377C(v0 + 56);
  sub_100020FDC();
}

void sub_10000BF44(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  id v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  if (!sub_10004FD40(v6, 1, v4)) {
    v5(v6, v4);
  }
  v5(a1 + a2[6], v4);
  v5(a1 + a2[7], v4);
  uint64_t v7 = a1 + a2[8];
  if (!sub_10004FD40(v7, 1, v4)) {
    v5(v7, v4);
  }
  v5(a1 + a2[9], v4);
  v5(a1 + a2[10], v4);
  uint64_t v8 = *(void **)(a1 + a2[12]);
}

uint64_t sub_10000C08C()
{
  uint64_t v1 = type metadata accessor for URL.DirectoryHint();
  sub_100020DEC();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_100020EAC();
  uint64_t v7 = v6 - v5;
  type metadata accessor for URL();
  sub_100020DEC();
  __chkstk_darwin(v8);
  sub_100020EAC();
  strcpy((char *)v19, "metadata.plist");
  HIBYTE(v19[1]) = -18;
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v7, enum case for URL.DirectoryHint.inferFromPath(_:), v1);
  sub_10003C8FC();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  swift_bridgeObjectRelease();
  uint64_t v9 = Data.init(contentsOf:options:)();
  if (v0)
  {
    uint64_t v11 = sub_1000487F0();
    return v12(v11);
  }
  else
  {
    uint64_t v14 = v9;
    unint64_t v15 = v10;
    type metadata accessor for PropertyListDecoder();
    swift_allocObject();
    PropertyListDecoder.init()();
    sub_1000543FC();
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
    uint64_t v16 = sub_1000487F0();
    v17(v16);
    swift_release();
    sub_10004B278(v14, v15);
    if (v19[0] == 1)
    {
      return 0;
    }
    else if (v19[0] == 2)
    {
      return 1;
    }
    else
    {
      sub_1000FAD60();
      swift_allocError();
      *uint64_t v18 = 2;
      return swift_willThrow();
    }
  }
}

uint64_t sub_10000C2FC(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  sub_100020EAC();
  uint64_t v5 = sub_100043478(&qword_1002306F8);
  __chkstk_darwin(v5);
  sub_100020EAC();
  uint64_t v8 = (unsigned char *)(v7 - v6);
  uint64_t v9 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v9 - 8);
  sub_100020EAC();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v15 = v14;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v32 - v20;
  sub_10003CE10(*(unsigned char *)(a1 + 1));
  URL.appendingPathComponent(_:)();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v15 + 8);
  v34(v19, v13);
  unsigned int v22 = *(unsigned __int8 *)(a1 + 64);
  unint64_t v35 = a2;
  if (v22 > 1)
  {
    sub_1000CDDE0((const void *)a1);
    uint64_t v37 = type metadata accessor for SyncTaskScheduler();
    uint64_t v38 = &protocol witness table for SyncTaskScheduler;
    sub_10003BAA4(v36);
    SyncTaskScheduler.init()();
    Promise.map<A>(on:_:)();
    swift_release();
    sub_10004377C((uint64_t)v36);
    uint64_t v24 = v34;
  }
  else
  {
    uint64_t v33 = v5;
    char v23 = sub_10000C08C() & 1;
    uint64_t v24 = v34;
    sub_100043478(&qword_100230708);
    sub_100021AC0(v12, 1, 1, v13);
    uint64_t v25 = (uint64_t)&v8[*(int *)(v33 + 48)];
    *uint64_t v8 = v23;
    sub_10003CDA8(v12, v25);
    Promise.__allocating_init(value:)();
  }
  uint64_t v26 = swift_allocObject();
  memcpy((void *)(v26 + 16), (const void *)a1, 0x50uLL);
  uint64_t v27 = v35;
  *(void *)(v26 + 96) = v35;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_100054598;
  *(void *)(v28 + 24) = v26;
  uint64_t v37 = type metadata accessor for SyncTaskScheduler();
  uint64_t v38 = &protocol witness table for SyncTaskScheduler;
  sub_10003BAA4(v36);
  sub_10002C008(a1);
  id v29 = v27;
  SyncTaskScheduler.init()();
  type metadata accessor for JSStackContext();
  uint64_t v30 = Promise.map<A>(on:_:)();
  swift_release();
  swift_release();
  sub_10004377C((uint64_t)v36);
  v24(v21, v13);
  return v30;
}

id sub_10000C8F0(void *a1)
{
  return sub_10000C930(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), &qword_10022FEE8, (void (*)(NSString))&Bag.subscript.getter, &qword_10022D6F0);
}

id sub_10000C930(void *a1, uint64_t a2, void *a3, uint64_t *a4, void (*a5)(NSString), uint64_t *a6)
{
  id v29 = a6;
  id v31 = a1;
  uint64_t v10 = type metadata accessor for Bag();
  sub_100020DEC();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100043478(a4);
  sub_100020DEC();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2 + OBJC_IVAR____TtC14amsengagementd5JSBag_bag, v10);
  id result = (id)sub_10001EA1C(a3);
  if (!v23)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  a5(v24);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
  Bag.Value.currentOrNil()();
  uint64_t v25 = v30[0];
  if (v30[0])
  {
    sub_10004D510(0, &qword_10022FEE0);
    v30[3] = sub_100043478(v29);
    v30[0] = v25;
    id v26 = v31;
    id v27 = v31;
    id result = sub_10001EA80(v30, v26);
    if (result)
    {
      id v28 = result;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v16);
      return v28;
    }
    goto LABEL_8;
  }
  id result = objc_msgSend(self, "valueWithUndefinedInContext:", v31, v29);
  id v28 = result;
  if (result) {
    goto LABEL_6;
  }
LABEL_9:
  __break(1u);
  return result;
}

id sub_10000CB90()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC14amsengagementd9JSAccount_account), "ams_isHSA2");
}

id sub_10000CBBC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;
  if (a5) {
    a5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v15 = a1;
  uint64_t v16 = (void *)a6(v9, v11, v12, v14, a5);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_10000CCA4()
{
  swift_getObjectType();
  sub_100010084();
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_10000CD3C()
{
  return sub_10000CCA4();
}

uint64_t sub_10000CD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  __chkstk_darwin(v9);
  swift_bridgeObjectRetain();
  sub_1000542A8(a2, a3);
  if (qword_10022C498 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3FC0;
  *((void *)&v31 + 1) = swift_getMetatypeMetadata();
  *(void *)&long long v30 = a4;
  id v10 = (id)AMSLogKey();
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    sub_100049788(&v30, *((uint64_t *)&v31 + 1));
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v28, &qword_10022F490);
    v17._countAndFlagsBits = 5972026;
    v17._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    uint64_t MetatypeMetadata = &type metadata for String;
    v28[0] = v12;
    v28[1] = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v28, &qword_10022F490);
    v18._countAndFlagsBits = 93;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    sub_100049788(&v30, *((uint64_t *)&v31 + 1));
    uint64_t v20 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = v20;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v28, &qword_10022F490);
    v21._countAndFlagsBits = 58;
    v21._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v30);
  *((void *)&v31 + 1) = &type metadata for String;
  *(void *)&long long v30 = 0xD000000000000018;
  *((void *)&v30 + 1) = 0x80000001001CD9B0;
  static LogMessage.safe(_:)();
  sub_100027BD8((uint64_t)&v30, &qword_10022F490);
  LogMessage.init(stringLiteral:)();
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v22._object = (void *)0x80000001001CD9F0;
  v22._countAndFlagsBits = 0xD000000000000015;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  uint64_t v23 = *(void *)(a1 + OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseToken + 8);
  if (v23)
  {
    uint64_t v24 = *(void *)(a1 + OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseToken);
    *((void *)&v31 + 1) = &type metadata for String;
    *(void *)&long long v30 = v24;
    *((void *)&v30 + 1) = v23;
  }
  else
  {
    long long v30 = 0u;
    long long v31 = 0u;
  }
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)&v30, &qword_10022F490);
  v25._countAndFlagsBits = 41;
  v25._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v25);
  LogMessage.init(stringInterpolation:)();
  uint64_t v26 = static os_log_type_t.debug.getter();
  sub_10004841C(v26);
  return swift_bridgeObjectRelease();
}

id sub_10000D1E0(uint64_t a1)
{
  id v1 = sub_10000D2A8(a1);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(self, "ams_sharedAccountStoreForMediaType:", v1);
  id v4 = objc_msgSend(v3, "ams_activeiTunesAccount");
  if (v4)
  {
    uint64_t v5 = (objc_class *)type metadata accessor for JSAccount();
    uint64_t v6 = (char *)objc_allocWithZone(v5);
    *(void *)&v6[OBJC_IVAR____TtC14amsengagementd9JSAccount_account] = v4;
    v8.receiver = v6;
    v8.super_class = v5;
    id v4 = objc_msgSendSuper2(&v8, "init");
  }

  return v4;
}

id sub_10000D2A8(uint64_t a1)
{
  switch(a1)
  {
    case 100:
      id v1 = (id *)&AMSAccountMediaTypeAppStore;
      break;
    case 400:
      id v1 = (id *)&AMSAccountMediaTypeProduction;
      break;
    case 102:
      id v1 = (id *)&AMSAccountMediaTypeAppStoreSandbox;
      break;
    case 200:
      id v1 = (id *)&AMSAccountMediaTypeBooks;
      break;
    case 300:
      id v1 = (id *)&AMSAccountMediaTypeiTunes;
      break;
    case 101:
      id v1 = (id *)&AMSAccountMediaTypeAppStoreBeta;
      break;
    default:
      return 0;
  }
  id v2 = *v1;
  id v3 = *v1;
  return v2;
}

uint64_t sub_10000D34C@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v52 = a1;
  uint64_t v2 = type metadata accessor for JetPackPath();
  uint64_t v61 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  if (qword_10022C470 != -1) {
    swift_once();
  }
  uint64_t v55 = qword_1002440D8;
  uint64_t v6 = sub_100043478(&qword_10022E560);
  uint64_t v7 = *(void *)(type metadata accessor for LogMessage() - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = (v9 + 32) & ~v9;
  uint64_t v51 = v6;
  uint64_t v48 = v9 | 7;
  uint64_t v49 = v10 + 2 * v8;
  uint64_t v11 = swift_allocObject();
  long long v47 = xmmword_1001C3120;
  *(_OWORD *)(v11 + 16) = xmmword_1001C3120;
  uint64_t v50 = v10;
  uint64_t v54 = v11 + v10;
  uint64_t v12 = sub_100043478(&qword_100232A50);
  uint64_t v45 = sub_100043478(&qword_100232AB8);
  uint64_t v46 = v12;
  uint64_t v60 = v45;
  v59[0] = v12;
  id v13 = (id)AMSLogKey();
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    sub_100049788(v59, v60);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v56 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)&v56, &qword_10022F490);
    v19._countAndFlagsBits = 5972026;
    v19._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v56 = v53;
    uint64_t v57 = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)&v56, &qword_10022F490);
    v20._countAndFlagsBits = 93;
    v20._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    sub_100049788(v59, v60);
    uint64_t v22 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v56 = v22;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)&v56, &qword_10022F490);
    v23._countAndFlagsBits = 58;
    v23._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v59);
  LogMessage.init(stringLiteral:)();
  uint64_t v24 = static os_log_type_t.debug.getter();
  sub_10004841C(v24);
  swift_bridgeObjectRelease();
  JetPackPath.init(_:)();
  uint64_t v25 = DiskJetPackResourceBundle.fileData(atPath:)();
  if (v1) {
    return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v4, v2);
  }
  uint64_t v28 = v25;
  unint64_t v29 = v26;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v4, v2);
  if (v29 >> 60 == 15)
  {
    *(_OWORD *)(swift_allocObject() + 16) = v47;
    uint64_t v60 = v45;
    v59[0] = v46;
    id v30 = (id)AMSLogKey();
    if (v30)
    {
      long long v31 = v30;
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v34 = v33;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v35._countAndFlagsBits = 0;
      v35._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      sub_100049788(v59, v60);
      uint64_t v36 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v56 = v36;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000435D4((uint64_t)&v56, &qword_10022F490);
      v37._countAndFlagsBits = 5972026;
      v37._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v56 = v32;
      uint64_t v57 = v34;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000435D4((uint64_t)&v56, &qword_10022F490);
      v38._countAndFlagsBits = 93;
      v38._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v40._countAndFlagsBits = 0;
      v40._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      sub_100049788(v59, v60);
      uint64_t v41 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v56 = v41;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000435D4((uint64_t)&v56, &qword_10022F490);
      v42._countAndFlagsBits = 58;
      v42._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v59);
    LogMessage.init(stringLiteral:)();
    uint64_t v43 = static os_log_type_t.error.getter();
    sub_10004841C(v43);
    swift_bridgeObjectRelease();
    sub_1000FAD60();
    swift_allocError();
    *uint64_t v44 = 1;
    return swift_willThrow();
  }
  else
  {
    uint64_t v39 = v52;
    *unint64_t v52 = v28;
    v39[1] = v29;
  }
  return result;
}

uint64_t sub_10000D9E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v27[4] = a2;
  v27[5] = a3;
  uint64_t v32 = a1;
  uint64_t v4 = type metadata accessor for JetPackPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  if (qword_10022C470 != -1) {
    swift_once();
  }
  id v27[3] = qword_1002440D8;
  sub_100043478(&qword_10022E560);
  v27[2] = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v9 = sub_100043478(&qword_100232A48);
  uint64_t v31 = sub_100043478(&qword_100232AA8);
  v30[0] = v9;
  id v10 = (id)AMSLogKey();
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v27[1] = v3;
    uint64_t v13 = v5;
    uint64_t v14 = v4;
    uint64_t v15 = v12;
    uint64_t v17 = v16;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    sub_100049788(v30, v31);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v28, &qword_10022F490);
    v20._countAndFlagsBits = 5972026;
    v20._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    uint64_t MetatypeMetadata = &type metadata for String;
    v28[0] = v15;
    v28[1] = v17;
    uint64_t v4 = v14;
    uint64_t v5 = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v28, &qword_10022F490);
    v21._countAndFlagsBits = 93;
    v21._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    sub_100049788(v30, v31);
    uint64_t v23 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v28, &qword_10022F490);
    v24._countAndFlagsBits = 58;
    v24._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v30);
  LogMessage.init(stringLiteral:)();
  uint64_t v25 = static os_log_type_t.debug.getter();
  sub_10004841C(v25);
  swift_bridgeObjectRelease();
  type metadata accessor for JSStackContext();
  static JetPackPath.sourcePath.getter();
  DiskJetPackResourceBundle.memoryMappedSource(atPath:virtualMachine:cacheURL:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_10000DE44()
{
  id result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC14amsengagementd14JSAccountStore_accountStore), "ams_activeiTunesAccount");
  if (result)
  {
    id v2 = result;
    uint64_t v3 = (objc_class *)type metadata accessor for JSAccount();
    uint64_t v4 = (char *)objc_allocWithZone(v3);
    *(void *)&v4[OBJC_IVAR____TtC14amsengagementd9JSAccount_account] = v2;
    v5.receiver = v4;
    v5.super_class = v3;
    return objc_msgSendSuper2(&v5, "init");
  }
  return result;
}

uint64_t sub_10000DEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  if (qword_10022C468 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v27 = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  unint64_t v26 = (void *)sub_100043478(&qword_10022DE08);
  v25[0] = v2;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v25, (uint64_t)v26);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v23, &qword_10022F490);
    v14._countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v9;
    v23[1] = v11;
    uint64_t v4 = v3;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v23, &qword_10022F490);
    v15._countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(v25, (uint64_t)v26);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v23, &qword_10022F490);
    v18._countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v25);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._object = (void *)0x80000001001CB7C0;
  v19._countAndFlagsBits = 0xD00000000000002FLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  unint64_t v26 = &type metadata for Int;
  v25[0] = a2;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)v25, &qword_10022F490);
  v20._countAndFlagsBits = 41;
  v20._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  LogMessage.init(stringInterpolation:)();
  uint64_t v21 = static os_log_type_t.debug.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  uint64_t result = 5;
  switch(a2)
  {
    case 0:
      uint64_t result = sub_1000841D0(7566955, (void *)0xE300000000000000);
      if (!v4) {
        uint64_t result = 1;
      }
      break;
    case 1:
      uint64_t result = sub_100078138();
      if (!v4)
      {
        sub_10007C3C8();
        sub_100085150(0x656C756465686373, (void *)0xE900000000000073);
        uint64_t result = 2;
      }
      break;
    case 2:
      uint64_t result = sub_10007C4E0();
      if (!v4) {
        uint64_t result = 3;
      }
      break;
    case 3:
      uint64_t result = sub_1000782CC();
      if (!v4) {
        uint64_t result = 4;
      }
      break;
    case 4:
      return result;
    case 5:
      uint64_t result = sub_100087FB4(0x676F6C6B636162, (void *)0xE700000000000000, 1701669236, (void *)0xE400000000000000);
      if (!v4)
      {
        sub_100087FB4(0x746E65746E6F63, (void *)0xE700000000000000, 0x69646F4D7473616CLL, (void *)0xEC00000064656966);
        uint64_t result = 6;
      }
      break;
    case 6:
      uint64_t result = sub_10007C678();
      if (!v4) {
        goto LABEL_20;
      }
      break;
    case 7:
LABEL_20:
      uint64_t result = 7;
      break;
    default:
      sub_100080010();
      swift_allocError();
      uint64_t result = swift_willThrow();
      break;
  }
  return result;
}

id sub_10000E464()
{
  uint64_t v1 = type metadata accessor for DispatchQoS.QoSClass();
  sub_100020DEC();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR____TtC14amsengagementd9JSNetwork_networkMonitor;
  type metadata accessor for NWPathMonitor();
  swift_allocObject();
  uint64_t v8 = v0;
  *(void *)&v0[v7] = NWPathMonitor.init()();

  uint64_t v9 = (objc_class *)type metadata accessor for JSNetwork();
  v16.receiver = v8;
  v16.super_class = v9;
  id v10 = objc_msgSendSuper2(&v16, "init");
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v11 = v10;
  swift_retain();
  swift_retain();
  sub_100050578((uint64_t)sub_100053D3C);
  NWPathMonitor.pathUpdateHandler.setter();
  swift_release();
  swift_release_n();
  sub_1000438EC();
  uint64_t v12 = sub_100049500();
  v13(v12);
  swift_retain();
  Swift::String v14 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  NWPathMonitor.start(queue:)();
  swift_release();

  return v11;
}

uint64_t sub_10000E644(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_10000E690()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000E6D0()
{
  sub_100045354();
  return _swift_deallocObject(v0, 176, 7);
}

uint64_t sub_10000E704(uint64_t *a1)
{
  sub_100043478(a1);
  sub_1000456E0();
  v2 += 8;
  uint64_t v3 = *(unsigned __int8 *)(v2 + 72);
  uint64_t v4 = ((v3 + 16) & ~v3) + *(void *)(v2 + 56);
  uint64_t v5 = v3 | 7;
  sub_100043FB0();
  v6();
  return _swift_deallocObject(v1, v4, v5);
}

uint64_t sub_10000E788()
{
  swift_release();

  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10000E7D8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10000E818(void (*a1)(void), void (*a2)(void), uint64_t a3)
{
  a1(*(void *)(v3 + 24));
  a2(*(void *)(v3 + 40));
  return _swift_deallocObject(v3, a3, 7);
}

id sub_10000E8C0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC14amsengagementd14JSAccountStore_accountStore);
  id v2 = objc_msgSend(v1, "ams_activeiCloudAccount");
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(v1, "ams_iTunesAccountForAccount:", v2);
  uint64_t v5 = (objc_class *)type metadata accessor for JSAccount();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  if (v4)
  {
    *(void *)&v6[OBJC_IVAR____TtC14amsengagementd9JSAccount_account] = v4;
    v9.receiver = v6;
    v9.super_class = v5;
    id v7 = objc_msgSendSuper2(&v9, "init");
  }
  else
  {
    *(void *)&v6[OBJC_IVAR____TtC14amsengagementd9JSAccount_account] = v3;
    v10.receiver = v6;
    v10.super_class = v5;
    return objc_msgSendSuper2(&v10, "init");
  }
  return v7;
}

uint64_t sub_10000E9A4(const void *a1, uint64_t a2, void *a3)
{
  sub_10000C2FC((uint64_t)a1, a3);
  id v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v3;
  memcpy(v7 + 3, a1, 0x50uLL);
  v7[13] = a2;
  uint64_t v8 = type metadata accessor for SyncTaskScheduler();
  uint64_t v15 = v8;
  objc_super v16 = &protocol witness table for SyncTaskScheduler;
  sub_10003BAA4(v14);
  sub_10002C008((uint64_t)a1);
  swift_retain();
  SyncTaskScheduler.init()();
  sub_100043478(&qword_100230720);
  sub_100053B2C();
  Promise.flatMap<A>(on:_:)();
  swift_release();
  swift_release();
  sub_10004377C((uint64_t)v14);
  objc_super v9 = (void *)swift_allocObject();
  v9[2] = v3;
  v9[3] = a3;
  v9[4] = a2;
  memcpy(v9 + 5, a1, 0x50uLL);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100054558;
  *(void *)(v10 + 24) = v9;
  uint64_t v15 = v8;
  objc_super v16 = &protocol witness table for SyncTaskScheduler;
  sub_10003BAA4(v14);
  sub_10002C008((uint64_t)a1);
  swift_retain();
  id v11 = a3;
  SyncTaskScheduler.init()();
  type metadata accessor for JSStack();
  uint64_t v12 = Promise.map<A>(on:_:)();
  swift_release();
  swift_release();
  sub_10004377C((uint64_t)v14);
  return v12;
}

uint64_t sub_10000EBA0(int a1, int a2, void *aBlock, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v4[4] = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v4[5] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_100053090;
  return sub_1000135F8();
}

uint64_t sub_10000EC84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  if (qword_10022C470 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v23 = &type metadata for RemoteJetpackV2Loader;
  id v3 = (id)AMSLogKey();
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::String v18 = a1;
    uint64_t v7 = v6;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v8);
    sub_100049788(v22, (uint64_t)v23);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v20, &qword_10022F490);
    v10._countAndFlagsBits = 5972026;
    v10._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    uint64_t MetatypeMetadata = &type metadata for String;
    v20[0] = v5;
    v20[1] = v7;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v20, &qword_10022F490);
    v11._countAndFlagsBits = 93;
    v11._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    LogMessage.init(stringInterpolation:)();
    a1 = v18;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v22, (uint64_t)v23);
    uint64_t v13 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v20, &qword_10022F490);
    v14._countAndFlagsBits = 58;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v22);
  LogMessage.init(stringLiteral:)();
  swift_getErrorValue();
  uint64_t v23 = v19;
  uint64_t v15 = sub_10003BAA4(v22);
  (*((void (**)(uint64_t *))v19[-1].Description + 2))(v15);
  static LogMessage.safe(_:)();
  sub_1000435D4((uint64_t)v22, &qword_10022F490);
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_10004841C(v16);
  swift_bridgeObjectRelease();
  uint64_t result = Dictionary.init(dictionaryLiteral:)();
  *a1 = result;
  return result;
}

void sub_10000F038(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  sub_100020EAC();
  if (*(unsigned char *)(a1 + 64) && *(unsigned char *)(a1 + 64) != 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v3 & 1) == 0) {
      goto LABEL_7;
    }
  }
  type metadata accessor for JSStackContext();
  sub_1000FA888();
LABEL_7:
  sub_10000F63C();
  type metadata accessor for JSStackContext();
  sub_10000F63C();
  sub_10000F63C();
}

void sub_10000F63C()
{
  uint64_t v0 = self;
  id v1 = [v0 defaultManager];
  URL.path.getter();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v3 = [v1 fileExistsAtPath:v2];

  if ((v3 & 1) == 0)
  {
    id v4 = [v0 defaultManager];
    URL._bridgeToObjectiveC()(v5);
    uint64_t v7 = v6;
    id v11 = 0;
    unsigned int v8 = [v4 createDirectoryAtURL:v6 withIntermediateDirectories:1 attributes:0 error:&v11];

    if (v8)
    {
      id v9 = v11;
    }
    else
    {
      id v10 = v11;
      _convertNSErrorToError(_:)();

      swift_willThrow();
    }
  }
}

uint64_t sub_10000F794(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWPath.Status();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unsigned int v8 = (char *)v29 - v7;
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v9 - 8);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v11 = (void *)result;
    uint64_t v32 = a1;
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v31 = qword_1002440C8;
    sub_100043478(&qword_10022E560);
    v29[1] = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v36 = (void *)type metadata accessor for JSNetwork();
    v35[0] = v11;
    id v30 = v11;
    id v12 = (id)AMSLogKey();
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      sub_100049788(v35, (uint64_t)v36);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v33[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v33);
      v19._countAndFlagsBits = 5972026;
      v19._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      uint64_t MetatypeMetadata = &type metadata for String;
      v33[0] = v14;
      v33[1] = v16;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v33);
      v20._countAndFlagsBits = 93;
      v20._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v21._countAndFlagsBits = 0;
      v21._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      sub_100049788(v35, (uint64_t)v36);
      uint64_t v22 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v33[0] = v22;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v33);
      v23._countAndFlagsBits = 58;
      v23._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v35);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v24._object = (void *)0x80000001001D1E80;
    v24._countAndFlagsBits = 0xD000000000000014;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    NWPath.status.getter();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for NWPath.Status.satisfied(_:), v2);
    char v25 = static NWPath.Status.== infix(_:_:)();
    unint64_t v26 = *(void (**)(char *, uint64_t))(v3 + 8);
    v26(v6, v2);
    v26(v8, v2);
    uint64_t v36 = &type metadata for Bool;
    LOBYTE(v35[0]) = v25 & 1;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v35);
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)();
    uint64_t v28 = static os_log_type_t.debug.getter();
    sub_10004841C(v28);

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10000FC2C(void *a1)
{
  return sub_10000FC60(a1, (uint64_t)&unk_100212990, (uint64_t)sub_100013054);
}

uint64_t sub_10000FC60(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_10000FC98(a1, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), a2, a3);
}

uint64_t sub_10000FC98(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  type metadata accessor for RunLoopWorkerThread();
  uint64_t result = static RunLoopWorkerThread.current.getter();
  if (!result)
  {
    type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000002CLL, 0x80000001001D0CC0, 0, 0);
    swift_willThrow();
    return v10;
  }
  uint64_t v17 = result;
  uint64_t v18 = HIBYTE(a3) & 0xF;
  uint64_t v19 = a2 & 0xFFFFFFFFFFFFLL;
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v20 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v20 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v20)
  {
LABEL_50:
    type metadata accessor for JSError();
    sub_1000DE184(2, 0x2073692044495344, 0xEF64696C61766E69, 0, 0);
    swift_willThrow();
    swift_release();
    return v10;
  }
  if ((a3 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = (uint64_t)sub_1000C67BC(a2, a3, 10);
    LOBYTE(a2) = v43;
    swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  if ((a3 & 0x2000000000000000) == 0)
  {
    if ((a2 & 0x1000000000000000) != 0) {
      Swift::String v21 = (unsigned __int8 *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      Swift::String v21 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    uint64_t v22 = (uint64_t)sub_1000100C4(v21, v19, 10);
    LOBYTE(a2) = v23 & 1;
LABEL_48:
    if ((a2 & 1) == 0)
    {
      id v38 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v22];
      sub_100010084();
      uint64_t v39 = (void *)swift_allocObject();
      v39[2] = a4;
      v39[3] = v38;
      v39[4] = a5;
      v39[5] = a6;
      v39[6] = v17;
      v39[7] = a7;
      swift_bridgeObjectRetain();
      id v40 = v38;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v10 = sub_100010358(a1, a9, (uint64_t)v39);
      swift_release();

      swift_release();
      return v10;
    }
    goto LABEL_50;
  }
  if (a2 == 43)
  {
    if (!v18) {
      goto LABEL_62;
    }
    if (v18 == 1) {
      goto LABEL_34;
    }
    sub_1000462A4();
    if (!v27 & v26) {
      goto LABEL_34;
    }
    uint64_t v22 = v29;
    if (v28 != 2)
    {
      sub_1000462A4();
      if (!v27 & v26) {
        goto LABEL_34;
      }
      uint64_t v22 = 10 * v22 + v31;
      if (v30 != 3)
      {
        while (1)
        {
          sub_100045F0C();
          if (!v27 & v26) {
            goto LABEL_34;
          }
          sub_100045140();
          if (!v27) {
            goto LABEL_34;
          }
          uint64_t v22 = v33 + v32;
          if (__OFADD__(v33, v32)) {
            goto LABEL_34;
          }
          sub_100046374();
          if (v27) {
            goto LABEL_48;
          }
        }
      }
    }
LABEL_47:
    LOBYTE(a2) = 0;
    goto LABEL_48;
  }
  if (a2 != 45)
  {
    if (!v18 || (a2 - 48) > 9u) {
      goto LABEL_34;
    }
    uint64_t v22 = (a2 - 48);
    if (v18 != 1)
    {
      sub_1000462A4();
      if (!v27 & v26) {
        goto LABEL_34;
      }
      uint64_t v22 = 10 * (a2 - 48) + v35;
      if (v34 != 2)
      {
        while (1)
        {
          sub_100045F0C();
          if (!v27 & v26) {
            goto LABEL_34;
          }
          sub_100045140();
          if (!v27) {
            goto LABEL_34;
          }
          uint64_t v22 = v37 + v36;
          if (__OFADD__(v37, v36)) {
            goto LABEL_34;
          }
          sub_100046374();
          if (v27) {
            goto LABEL_48;
          }
        }
      }
    }
    goto LABEL_47;
  }
  if (v18)
  {
    if (v18 != 1)
    {
      sub_1000462A4();
      if (!(!v27 & v26))
      {
        if (v24 == 2)
        {
          LOBYTE(a2) = 0;
          uint64_t v22 = -(uint64_t)v25;
          goto LABEL_48;
        }
        if ((BYTE2(a2) - 48) <= 9u)
        {
          uint64_t v22 = -10 * v25 - (BYTE2(a2) - 48);
          if (v24 == 3) {
            goto LABEL_47;
          }
          while (1)
          {
            sub_100045F0C();
            if (!v27 & v26) {
              break;
            }
            sub_100045140();
            if (!v27) {
              break;
            }
            uint64_t v22 = v42 - v41;
            if (__OFSUB__(v42, v41)) {
              break;
            }
            sub_100046374();
            if (v27) {
              goto LABEL_48;
            }
          }
        }
      }
    }
LABEL_34:
    uint64_t v22 = 0;
    LOBYTE(a2) = 1;
    goto LABEL_48;
  }
  __break(1u);
LABEL_62:
  __break(1u);
  return result;
}

unint64_t sub_100010084()
{
  unint64_t result = qword_10022FE70;
  if (!qword_10022FE70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10022FE70);
  }
  return result;
}

unsigned __int8 *sub_1000100C4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000100DC(a1, a2, a3);
}

unsigned __int8 *sub_1000100DC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v15 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v16 = a3 + 48;
        unsigned __int8 v17 = a3 + 55;
        unsigned __int8 v18 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = 58;
        }
        else
        {
          unsigned __int8 v18 = 97;
          unsigned __int8 v17 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          uint64_t v19 = result + 1;
          do
          {
            unsigned int v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                uint64_t v13 = 0;
                if (v20 < 0x61 || v20 >= v18) {
                  return (unsigned __int8 *)v13;
                }
                char v21 = -87;
              }
              else
              {
                char v21 = -55;
              }
            }
            else
            {
              char v21 = -48;
            }
            uint64_t v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21))) {
              return 0;
            }
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        unsigned __int8 v23 = a3 + 48;
        unsigned __int8 v24 = a3 + 55;
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v23 = 58;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v24 = 65;
        }
        if (result)
        {
          uint64_t v26 = 0;
          do
          {
            unsigned int v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                uint64_t v13 = 0;
                if (v27 < 0x61 || v27 >= v25) {
                  return (unsigned __int8 *)v13;
                }
                char v28 = -87;
              }
              else
              {
                char v28 = -55;
              }
            }
            else
            {
              char v28 = -48;
            }
            uint64_t v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
              return 0;
            }
            uint64_t v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28))) {
              return 0;
            }
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      uint64_t v5 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v6 = a3 + 48;
        unsigned __int8 v7 = a3 + 55;
        unsigned __int8 v8 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = 58;
        }
        else
        {
          unsigned __int8 v8 = 97;
          unsigned __int8 v7 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          for (uint64_t i = result + 1; ; ++i)
          {
            unsigned int v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                uint64_t v13 = 0;
                if (v11 < 0x61 || v11 >= v8) {
                  return (unsigned __int8 *)v13;
                }
                char v12 = -87;
              }
              else
              {
                char v12 = -55;
              }
            }
            else
            {
              char v12 = -48;
            }
            uint64_t v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12))) {
              return 0;
            }
            if (!--v5) {
              return (unsigned __int8 *)v9;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100010358(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for JSPromise();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v11 = a1;
    swift_retain();
    JSPromise.init(in:executor:)();
    if (v3)
    {
    }
    else
    {
      a3 = JSPromise.value.getter();

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  else
  {
    sub_100010084();
    char v12 = (void *)static JSContext.requiredCurrent.getter();
    __chkstk_darwin(v12);
    v14[-2] = a2;
    v14[-1] = a3;
    a3 = JSContext.propagateErrorsToExceptions(_:)();
  }
  return a3;
}

uint64_t sub_1000104E8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v4);
  Promise.resolve(_:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100010578@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for JSONObject();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100043478(&qword_10022FE18);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  JSResponse.body.getter();
  CoarselyTimed.contained.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v10 = sub_10001AA98();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v10 && (v11 = sub_10001075C(v10), uint64_t result = swift_bridgeObjectRelease(), v11))
  {
    *a1 = v11;
  }
  else
  {
    sub_1000D0F28();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_10001075C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100043478((uint64_t *)&unk_100234670);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  sub_100010AF8(a1, v44);
  uint64_t v3 = v44[0];
  uint64_t v4 = v44[3];
  int64_t v32 = (unint64_t)(v44[2] + 64) >> 6;
  uint64_t v33 = v44[1];
  unint64_t v5 = v44[4];
  uint64_t v6 = &__src[40];
  uint64_t v7 = &__dst[40];
  uint64_t v8 = &v38;
  uint64_t v9 = &v40;
  unint64_t result = swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v34 = (v5 - 1) & v5;
  uint64_t v35 = v4;
  for (unint64_t i = __clz(__rbit64(v5)) | (v4 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v16 << 6))
  {
    sub_1000433B4(*(void *)(v3 + 48) + 40 * i, (uint64_t)__src);
    sub_100043520(*(void *)(v3 + 56) + 32 * i, (uint64_t)v6);
    memcpy(__dst, __src, sizeof(__dst));
    sub_1000433B4((uint64_t)__dst, (uint64_t)v37);
    if (!swift_dynamicCast())
    {
      sub_10002CC0C((uint64_t)__dst, &qword_100230968);
      swift_bridgeObjectRelease();
      sub_100048E40();
      sub_100011E28();
      swift_release();
      return 0;
    }
    sub_100043520((uint64_t)v7, (uint64_t)v37);
    sub_10002CC0C((uint64_t)__dst, &qword_100230968);
    sub_100043510(v37, v8);
    long long v39 = v36;
    sub_100043510(v8, v9);
    long long v19 = v39;
    sub_100043510(v9, v41);
    sub_100043510(v41, &v39);
    unint64_t result = sub_100042ADC(v19, *((uint64_t *)&v19 + 1));
    unint64_t v20 = result;
    if (v21)
    {
      uint64_t v22 = v9;
      unsigned __int8 v23 = v8;
      unsigned __int8 v24 = v7;
      uint64_t v25 = v3;
      uint64_t v26 = v6;
      unsigned int v27 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *unsigned int v27 = v19;
      uint64_t v6 = v26;
      uint64_t v3 = v25;
      uint64_t v7 = v24;
      uint64_t v8 = v23;
      uint64_t v9 = v22;
      char v28 = (_OWORD *)(v2[7] + 32 * v20);
      sub_10004377C((uint64_t)v28);
      unint64_t result = (unint64_t)sub_100043510(&v39, v28);
      goto LABEL_29;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    sub_100048200((result >> 3) & 0x1FFFFFFFFFFFFFF8);
    *(_OWORD *)(v29 + 16 * v20) = v19;
    unint64_t result = (unint64_t)sub_100043510(&v39, (_OWORD *)(v2[7] + 32 * v20));
    uint64_t v30 = v2[2];
    BOOL v14 = __OFADD__(v30, 1);
    uint64_t v31 = v30 + 1;
    if (v14) {
      goto LABEL_35;
    }
    v2[2] = v31;
LABEL_29:
    unint64_t v5 = v34;
    uint64_t v4 = v35;
    if (v34) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v4, 1)) {
      goto LABEL_36;
    }
    sub_100048830();
    if (v13 == v14) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v33 + 8 * v12);
    uint64_t v16 = v12;
    if (!v15)
    {
      uint64_t v16 = v12 + 1;
      if (v12 + 1 >= v32) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v33 + 8 * v16);
      if (!v15)
      {
        uint64_t v16 = v12 + 2;
        if (v12 + 2 >= v32) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v33 + 8 * v16);
        if (!v15)
        {
          uint64_t v16 = v12 + 3;
          if (v12 + 3 >= v32) {
            goto LABEL_32;
          }
          unint64_t v15 = *(void *)(v33 + 8 * v16);
          if (!v15)
          {
            uint64_t v16 = v12 + 4;
            if (v12 + 4 >= v32) {
              goto LABEL_32;
            }
            unint64_t v15 = *(void *)(v33 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                sub_100048830();
                if (v13 == v14) {
                  break;
                }
                unint64_t v15 = *(void *)(v33 + 8 * v17);
                uint64_t v18 = v17 + 1;
                if (v15)
                {
                  uint64_t v16 = v18 - 1;
                  goto LABEL_22;
                }
              }
LABEL_32:
              sub_100048E40();
              sub_100011E28();
              return (unint64_t)v2;
            }
          }
        }
      }
    }
LABEL_22:
    uint64_t v34 = (v15 - 1) & v15;
    uint64_t v35 = v16;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100010AF8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

id sub_100010B64()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_device);
}

id sub_100010BA4()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_accounts);
}

uint64_t sub_100010BB0()
{
  sub_10019D6B0();
  sub_10004A41C();
  sub_10005261C();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_10002219C(v0);
  *id v1 = v2;
  v1[1] = sub_100052880;
  sub_1000473E8();
  sub_100049FEC();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

void sub_100010C44(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = type metadata accessor for JSCallable();
  sub_100044798(v3);
  uint64_t v4 = sub_100046890();
  sub_100010CAC(v4, v1 + v5, *(void *)(v1 + v6), v1 + v7, a1);
}

void sub_100010CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  if (a1)
  {
    uint64_t v7 = qword_10022C490;
    swift_bridgeObjectRetain();
    if (v7 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v8 = type metadata accessor for LogMessage();
    sub_100044798(v8);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    sub_1000481A8();
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    v27[0] = 0x7465722061746164;
    v27[1] = 0xEF20646576656972;
    v9._countAndFlagsBits = Dictionary.description.getter();
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    char v28 = &type metadata for String;
    static LogMessage.safe(_:)();
    uint64_t v10 = sub_1000423CC((uint64_t)v27);
    uint64_t v11 = a5(v10);
    sub_10004841C(v11);
    swift_bridgeObjectRelease();
    sub_100043478(&qword_10022D808);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1001C3110;
    *(void *)(v12 + 56) = sub_100043478(&qword_10022D6F0);
    *(void *)(v12 + 32) = a1;
    sub_10001147C(v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    BOOL v14 = (objc_class *)type metadata accessor for JSError();
    if (a3)
    {
      objc_allocWithZone(v14);
      swift_errorRetain();
      uint64_t v15 = (uint64_t)sub_100027FB8(a3);
    }
    else
    {
      uint64_t v15 = sub_1000DE184(0, 0x206E776F6E6B6E55, 0xED0000726F727265, 0, 0);
    }
    uint64_t v16 = (void *)v15;
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v17 = type metadata accessor for LogMessage();
    sub_100044798(v17);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    sub_1000481A8();
    _StringGuts.grow(_:)(23);
    swift_bridgeObjectRelease();
    id v18 = v16;
    id v19 = objc_msgSend(v18, "description", 0xD000000000000015, 0x80000001001D2260);
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;

    v23._countAndFlagsBits = v20;
    v23._object = v22;
    String.append(_:)(v23);

    swift_bridgeObjectRelease();
    char v28 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)v27);
    uint64_t v24 = static os_log_type_t.error.getter();
    sub_10004841C(v24);
    swift_bridgeObjectRelease();
    sub_100043478(&qword_10022D808);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1001C3110;
    *(void *)(v25 + 56) = type metadata accessor for JSError();
    *(void *)(v25 + 32) = v18;
    id v26 = v18;
    sub_10001147C(v25);
    swift_bridgeObjectRelease();
  }
}

void sub_1000110F4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = (void *)a2(a1);
}

void sub_10001147C(uint64_t a1)
{
}

uint64_t sub_100011494@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for OSSignpostID();
  sub_100044798(v5);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100011524(a1, *(void **)(v2 + 16), v2 + v10, *(void *)(v2 + v11), *(unsigned __int8 *)(v2 + v11 + 8), a2);
}

uint64_t sub_100011524@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, void *a6@<X8>)
{
  uint64_t v7 = v6;
  int v44 = a5;
  uint64_t v48 = a4;
  uint64_t v38 = a3;
  uint64_t v45 = a6;
  uint64_t v43 = type metadata accessor for OSSignpostID();
  uint64_t v42 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  long long v39 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for OSSignposter();
  uint64_t v40 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000119BC(*a1);
  uint64_t v14 = sub_100032620(v13, a2);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  id v21 = [objc_allocWithZone((Class)AMSEngagementEnqueueResult) init];
  [v21 setRequest:v20];
  if (v18)
  {
    swift_bridgeObjectRetain();
    v22.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v22.super.Class isa = 0;
  }
  [v21 setData:v22.super.isa];

  if (v14 && *(void *)(v14 + 16))
  {
    uint64_t v23 = qword_10022C498;
    swift_bridgeObjectRetain();
    if (v23 != -1) {
      swift_once();
    }
    uint64_t v37 = v7;
    id v24 = *(id *)(qword_100244100 + 16);
    OSSignposter.init(logHandle:)();
    swift_bridgeObjectRetain();
    uint64_t v25 = OSSignposter.logHandle.getter();
    int v26 = static os_signpost_type_t.event.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      unsigned int v27 = v39;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v39, v38, v43);
      char v28 = (uint8_t *)swift_slowAlloc();
      LODWORD(v38) = v26;
      uint64_t v29 = v28;
      *(_DWORD *)char v28 = 134217984;
      __dst[0] = *(void *)(v14 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      os_signpost_id_t v30 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v25, (os_signpost_type_t)v38, v30, "ActionRunner", "Actions running: %ld", v29, 0xCu);
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v41);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v27, v43);
    }
    else
    {

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v41);
    }
    type metadata accessor for ActionRunner();
    memcpy(__dst, (const void *)(v48 + 56), 0x50uLL);
    uint64_t v31 = sub_1000679FC(v14, (uint64_t)__dst, v44 & 1);
    swift_bridgeObjectRelease();
    sub_1000BED1C((uint64_t)v31, v21);
  }
  int64_t v32 = memcpy(v46, (const void *)(v48 + 56), sizeof(v46));
  uint64_t v35 = sub_1000BD734((uint64_t)v32, v16, v33, v34, (uint64_t)v46);
  sub_1000BE048(v35, v16);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v45 = v21;
  return result;
}

void sub_1000119BC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100043478(&qword_10022F100);
    uint64_t v4 = (Swift::Int *)sub_10004A1D4();
  }
  else
  {
    uint64_t v4 = (Swift::Int *)&_swiftEmptyDictionarySingleton;
  }
  sub_100043E88();
  uint64_t v7 = v6 & v5;
  sub_100020DD8();
  sub_1000BC544();
  uint64_t v8 = v4 + 8;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v9 = 0;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_5:
  v7 &= v7 - 1;
  while (1)
  {
    sub_100011E44();
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    sub_100043520(v25 + 32 * v24, (uint64_t)v44);
    *(void *)&long long v43 = v23;
    *((void *)&v43 + 1) = v22;
    _OWORD v41[2] = v43;
    v42[0] = v44[0];
    v42[1] = v44[1];
    *(void *)&v41[0] = v23;
    *((void *)&v41[0] + 1) = v22;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_100043510(v42, v1);
    long long v38 = v35;
    long long v39 = v36;
    uint64_t v40 = v37;
    sub_100043510(v1, v2);
    long long v35 = v38;
    long long v36 = v39;
    uint64_t v37 = v40;
    sub_100043510(v2, v41);
    sub_100043510(v41, &v38);
    AnyHashable._rawHashValue(seed:)(v4[5]);
    sub_100035E20();
    if (((v28 << v27) & ~v8[v26]) == 0)
    {
      sub_10004ABAC();
      while (++v31 != v32 || (v30 & 1) == 0)
      {
        BOOL v33 = v31 == v32;
        if (v31 == v32) {
          uint64_t v31 = 0;
        }
        v30 |= v33;
        if (v8[v31] != -1)
        {
          sub_10004D6A0();
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_1000499B8();
LABEL_36:
    *(Swift::Int *)((char *)v8 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    uint64_t v34 = v4[6] + 40 * v29;
    *(_OWORD *)uint64_t v34 = v35;
    *(_OWORD *)(v34 + 16) = v36;
    *(void *)(v34 + 32) = v37;
    sub_100043510(&v38, (_OWORD *)(v4[7] + 32 * v29));
    sub_100018FB8();
    if (v7) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v9, 1)) {
      goto LABEL_40;
    }
    sub_100024554();
    if (v10 == v11) {
      goto LABEL_38;
    }
    sub_100035DE4();
    if (!v12)
    {
      sub_100050D8C();
      if (v10 == v11) {
        goto LABEL_38;
      }
      sub_10003631C();
      if (!v13)
      {
        sub_100050D8C();
        if (v10 == v11) {
          goto LABEL_38;
        }
        sub_10003631C();
        if (!v14)
        {
          sub_100050D8C();
          if (v10 == v11) {
            goto LABEL_38;
          }
          sub_10003631C();
          if (!v15)
          {
            sub_100024554();
            if (v10 == v11)
            {
LABEL_38:
              swift_release();
              sub_100021B0C();
              return;
            }
            if (!*(void *)(a1 + 64 + 8 * v16)) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    sub_1000BC4EC();
    uint64_t v7 = v19 & v18;
    uint64_t v9 = v20;
  }
  while (!__OFADD__(v16, 1))
  {
    sub_100050D8C();
    if (v10 == v11) {
      goto LABEL_38;
    }
    sub_100036AFC();
    if (v17) {
      goto LABEL_26;
    }
  }
LABEL_41:
  __break(1u);
}

uint64_t sub_100011CC0()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100011CD8()
{
  sub_100049788((void *)(v0 - 168), *(void *)(v0 - 144));
  return swift_getDynamicType();
}

uint64_t sub_100011D10()
{
  return swift_allocObject();
}

void sub_100011D34()
{
  sub_10004D400();
}

uint64_t sub_100011D64()
{
  return swift_allocObject();
}

uint64_t sub_100011D7C(uint64_t a1)
{
  *(void *)(v2 - 176) = a1;
  *(void *)(v2 - 200) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100011D9C()
{
  return sub_10002CBB4(v1 - 160, v0);
}

uint64_t sub_100011DB4()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100011DF0()
{
  return v0;
}

uint64_t sub_100011DFC()
{
  return v0;
}

uint64_t sub_100011E0C(uint64_t a1)
{
  *(void *)(v1 + 376) = a1;
  return type metadata accessor for LogMessage();
}

uint64_t sub_100011E28()
{
  return swift_release();
}

__n128 sub_100011E30(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 272);
  a1[1] = result;
  return result;
}

uint64_t sub_100011E64()
{
  return sub_100027BD8(v1 - 168, v0);
}

uint64_t sub_100011E7C()
{
  return swift_dynamicCast();
}

uint64_t sub_100011E9C()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_100011ED0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 160) = *(void *)(a1 - 256);
  *(void *)(v2 - 152) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100011FA0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  v4._countAndFlagsBits = sub_100012420(0x73616C4361746164, 0xE900000000000073, a1);
  if (!v4._object)
  {
    v4._countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
  }
  sub_100012474(v4);
  type metadata accessor for AppDatabase();
  uint64_t v5 = sub_1000124C0(*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC14amsengagementd15JSDatabaseStore_config + 1));
  sub_100043478(&qword_10022D330);
  uint64_t inited = (__n128 *)swift_initStackObject();
  sub_1000451A8(inited, (__n128)xmmword_1001C3110);
  uint64_t v7 = (objc_class *)type metadata accessor for JSDatabase();
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  *(void *)&v8[OBJC_IVAR____TtC14amsengagementd10JSDatabase_database] = v5;
  v12.receiver = v8;
  v12.super_class = v7;
  swift_retain();
  id v9 = objc_msgSendSuper2(&v12, "init");
  inited[4].n128_u64[1] = (unint64_t)v7;
  inited[3].n128_u64[0] = (unint64_t)v9;
  uint64_t v10 = Dictionary.init(dictionaryLiteral:)();
  swift_release();
  return v10;
}

uint64_t sub_100012420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_100042ADC(a1, a2);
    if (v3) {
      swift_bridgeObjectRetain();
    }
  }
  return sub_100022570();
}

unint64_t sub_100012474(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020BC18, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_1000124C0(uint64_t a1)
{
  if (qword_10022C400 != -1) {
    a1 = swift_once();
  }
  __chkstk_darwin(a1);
  type metadata accessor for AppDatabase();
  uint64_t result = OS_dispatch_queue.sync<A>(execute:)();
  if (!v1) {
    return v3;
  }
  return result;
}

uint64_t type metadata accessor for JSDatabase()
{
  return self;
}

uint64_t sub_1000125D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  sub_10000F038(a3);
  uint64_t v9 = type metadata accessor for JSStackContext();
  if (*(unsigned char *)(a1 + *(int *)(v9 + 44))) {
    uint64_t v10 = &type metadata for RemoteJetpackV2Loader;
  }
  else {
    uint64_t v10 = &type metadata for RemoteJetpackLoader;
  }
  char v11 = &off_100215B18;
  if (*(unsigned char *)(a1 + *(int *)(v9 + 44))) {
    char v11 = &off_100215BC0;
  }
  long long v39 = v10;
  uint64_t v40 = v11;
  if (qword_10022C470 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v37 = sub_100043478(&qword_100230700);
  v36[0] = a2;
  id v12 = (id)AMSLogKey();
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = a4;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    sub_100049788(v36, v37);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v34[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v34);
    v20._countAndFlagsBits = 5972026;
    v20._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    uint64_t MetatypeMetadata = &type metadata for String;
    v34[0] = v15;
    v34[1] = v17;
    a4 = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v34);
    v21._countAndFlagsBits = 93;
    v21._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
    uint64_t v10 = v39;
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    sub_100049788(v36, v37);
    uint64_t v23 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v34[0] = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v34);
    v24._countAndFlagsBits = 58;
    v24._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v36);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v25._object = (void *)0x80000001001D2440;
  v25._countAndFlagsBits = 0xD00000000000001BLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v25);
  uint64_t v26 = sub_100049788(v38, (uint64_t)v10);
  uint64_t v37 = (uint64_t)v10;
  char v27 = sub_10003BAA4(v36);
  (*((void (**)(uint64_t *, void *, ValueMetadata *))v10[-1].Description + 2))(v27, v26, v10);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)v36);
  v28._countAndFlagsBits = 41;
  v28._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  LogMessage.init(stringInterpolation:)();
  uint64_t v29 = static os_log_type_t.debug.getter();
  sub_10004841C(v29);
  swift_bridgeObjectRelease();
  uint64_t v30 = (uint64_t)v39;
  uint64_t v31 = v40;
  sub_100049788(v38, (uint64_t)v39);
  uint64_t v32 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **))v31[1])(a3, a1, a4, v30, v31);
  sub_10004377C((uint64_t)v38);
  return v32;
}

uint64_t sub_100012A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v8);
  char v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = a1 + v9;
  uint64_t v14 = a2 + v9;
  swift_bridgeObjectRetain();
  v7(v13, v14, v6);
  return a1;
}

void sub_100012AD8()
{
  sub_1000209F4();
  uint64_t v23 = v0;
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  sub_100045B24();
  uint64_t v3 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100020EAC();
  uint64_t v9 = v8 - v7;
  sub_10002064C();
  URL.init(fileURLWithPath:isDirectory:)();
  sub_100043478(&qword_10022E560);
  uint64_t v10 = type metadata accessor for LogMessage();
  sub_100044798(v10);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v26 = sub_100043478(&qword_100234980);
  v25[0] = v3;
  id v11 = (id)AMSLogKey();
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v22 = v9;
    uint64_t v13 = v5;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_10002CAC4();
    sub_100020F04(v25);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_10004CE40(MetatypeMetadata);
    sub_10002CBB4((uint64_t)v24, &qword_10022F490);
    sub_100020E44();
    void v24[3] = &type metadata for String;
    v24[0] = v14;
    v24[1] = v16;
    uint64_t v5 = v13;
    uint64_t v9 = v22;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v24, &qword_10022F490);
    sub_1000208D8();
    sub_100035DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_10002CAC4();
    sub_100020F04(v25);
    uint64_t v18 = swift_getMetatypeMetadata();
    sub_10004CE40(v18);
    sub_10002CBB4((uint64_t)v24, &qword_10022F490);
    sub_100020E94();
    sub_100035DB4();
  }
  sub_10004377C((uint64_t)v25);
  LogMessage.init(stringLiteral:)();
  uint64_t v26 = v3;
  uint64_t v19 = sub_10003BAA4(v25);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v19, v9, v3);
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)v25, &qword_10022F490);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v20 = static os_log_type_t.debug.getter();
  sub_10004841C(v20);
  swift_bridgeObjectRelease();
  static ClassicDataVaultUtilities.createDataVault(at:for:)();
  sub_100045500();
  v21();
  sub_100021AC0(v23, 0, 1, v3);
  sub_100020FDC();
}

void sub_100013054(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100013098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  sub_1000130E0(a1, a2, a3, v7[2], v7[3], v7[4], v7[5], v7[6], v7[7], a4, a5, a6, a7);
}

void sub_1000130E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, SEL *a13)
{
  uint64_t v47 = a8;
  uint64_t v48 = a5;
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v45 = a12;
  uint64_t v46 = a13;
  uint64_t v43 = a10;
  uint64_t v44 = a11;
  uint64_t v14 = type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v16 = v15;
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v20 = __chkstk_darwin(v19);
  Swift::String v21 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v38 - v22;
  uint64_t v24 = sub_10001348C(a4);
  char v26 = v25;
  if (qword_10022C3F0 != -1) {
    swift_once();
  }
  if (v26) {
    uint64_t v27 = 0;
  }
  else {
    uint64_t v27 = v24;
  }
  uint64_t v42 = v27;
  id v39 = *(id *)(qword_100244080 + 16);
  NSString v28 = String._bridgeToObjectiveC()();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v29(v23, v40, v14);
  v29(v21, v41, v14);
  uint64_t v30 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v31 = (v30 + 24) & ~v30;
  uint64_t v32 = (v18 + v30 + v31) & ~v30;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v47;
  uint64_t v34 = v33 + v31;
  long long v35 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 32);
  v35(v34, v23, v14);
  v35(v33 + v32, v21, v14);
  aBlock[4] = v44;
  aBlock[5] = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000190E4;
  aBlock[3] = v45;
  long long v36 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v37 = v39;
  objc_msgSend(v39, *v46, v48, v28, v42, v36);
  _Block_release(v36);
}

#error "1000133B4: call analysis failed (funcsize=17)"

uint64_t sub_1000133C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void (*a21)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_1000209F4();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  char v26 = v25;
  NSString v28 = v27;
  uint64_t v30 = _Block_copy(v29);
  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v33 = v32;
  sub_100036260();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v30;
  id v35 = v26;
  id v36 = v28;
  a21(v35, v31, v33, v24, v22, v34);

  swift_bridgeObjectRelease();
  sub_100020FDC();
  return swift_release();
}

uint64_t sub_10001348C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (*(void *)(result + 16)
      && (unint64_t v2 = sub_100042ADC(0x506B726F7774656ELL, 0xED00007963696C6FLL), (v3 & 1) != 0)
      && (sub_100043520(*(void *)(v1 + 56) + 32 * v2, (uint64_t)v5), (swift_dynamicCast() & 1) != 0))
    {
      return v4;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100013540()
{
  sub_100020958();
  uint64_t v1 = swift_task_alloc();
  sub_100021AB4(v1);
  sub_100043478(&qword_100234628);
  sub_10019D674();
  *uint64_t v0 = v2;
  v0[1] = sub_100013BF0;
  sub_1000454D4();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_1000135F8()
{
  sub_100020958();
  uint64_t v3 = sub_1000225D0(v1, v2);
  sub_1000208F0(v3);
  *(void *)(v0 + 352) = sub_10003634C();
  sub_100043FD8();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_10001366C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10001CAF0;
  return v6(a1);
}

uint64_t sub_100013748(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100155CE8;
  return v6(a1);
}

uint64_t sub_100013824(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_100052880;
  return v6();
}

uint64_t sub_1000138F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1001B9F44;
  return v6();
}

uint64_t sub_1000139BC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_100052880;
  return v7();
}

uint64_t sub_100013A88(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1001B9F44;
  return v7();
}

uint64_t sub_100013B54()
{
  sub_100041F70();
  if (qword_10022C5D0 != -1) {
    swift_once();
  }
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v1 = swift_retain();
  return v3(v1);
}

uint64_t sub_100013BF0()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v3 = v2;
  sub_100044DDC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_100020EBC();
  *uint64_t v6 = v5;
  *(void *)(v3 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_100043E7C();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    uint64_t v10 = sub_10004A258();
    return v11(v10);
  }
}

char *sub_100013CE8()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  sub_100040A70();
  uint64_t v85 = v3;
  uint64_t v4 = sub_100043478(&qword_1002307C0);
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_100040A70();
  uint64_t v82 = v6;
  type metadata accessor for UUID();
  sub_100020DEC();
  uint64_t v83 = v8;
  uint64_t v84 = v7;
  uint64_t v9 = __chkstk_darwin(v7);
  v81 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v80 = (char *)&v80 - v11;
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100020DEC();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_100020EAC();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v19);
  sub_100020EAC();
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v21 = sub_1000208F0(v20);
  __chkstk_darwin(v21);
  sub_100020EAC();
  *(void *)&v0[OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyContext] = 0;
  uint64_t v22 = OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyEntitlementFineGrained;
  uint64_t v23 = v0;
  sub_10002064C();
  *(void *)&v0[v22] = String._bridgeToObjectiveC()();
  uint64_t v24 = &v23[OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyEntitlementFineGrainedItemSPI];
  *(void *)uint64_t v24 = 6910067;
  *((void *)v24 + 1) = 0xE300000000000000;
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  static DispatchQoS.unspecified.getter();
  v88[0] = _swiftEmptyArrayStorage;
  sub_1000537C0();
  sub_100043478((uint64_t *)&unk_100231D60);
  sub_100053810();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v18, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v12);
  sub_10002064C();
  uint64_t v25 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v23[OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyQueue] = v25;
  id v26 = [objc_allocWithZone((Class)CoreTelephonyClient) initWithQueue:v25];
  *(void *)&v23[OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyClient] = v26;

  uint64_t v27 = (objc_class *)type metadata accessor for JSTelephony();
  v86.receiver = v23;
  v86.super_class = v27;
  NSString v28 = (char *)objc_msgSendSuper2(&v86, "init");
  uint64_t v29 = OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyClient;
  uint64_t v30 = *(void **)&v28[OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyClient];
  uint64_t v31 = v28;
  [v30 setDelegate:v31];
  NSString v32 = sub_10004DDDC();
  LODWORD(v22) = MGGetBoolAnswer();

  if (!v22)
  {
    sub_100043478(&qword_10022E560);
    uint64_t v45 = type metadata accessor for LogMessage();
    sub_100044798(v45);
    uint64_t v46 = (__n128 *)sub_10004CEE8();
    id v47 = sub_100020B58(v46, (__n128)xmmword_1001C3120);
    id v48 = (id)AMSLogKey();
    if (v48) {
      goto LABEL_17;
    }
    goto LABEL_21;
  }
  if ((sub_100009FE0() & 1) == 0)
  {
    sub_100043478(&qword_10022E560);
    uint64_t v49 = type metadata accessor for LogMessage();
    sub_100044798(v49);
    uint64_t v50 = (__n128 *)sub_10004CEE8();
    id v47 = sub_100020B58(v50, (__n128)xmmword_1001C3120);
    id v48 = (id)AMSLogKey();
    if (v48)
    {
LABEL_17:
      uint64_t v51 = v48;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100049518();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100048DEC(MetatypeMetadata);
      sub_100048DBC();
      sub_100020E44();
      sub_100043B98((uint64_t)&type metadata for String);
      sub_100048DBC();
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
LABEL_22:
      sub_10004377C((uint64_t)v88);
      sub_100020924();
      LogMessage.init(stringLiteral:)();
      if (qword_10022C460 != -1) {
        swift_once();
      }
      uint64_t v65 = static os_log_type_t.error.getter();
      sub_10004841C(v65);
      swift_bridgeObjectRelease();

      return v31;
    }
LABEL_21:
    sub_100020E78();
    sub_100020E60();
    sub_100049518();
    uint64_t v64 = swift_getMetatypeMetadata();
    sub_100048DEC(v64);
    sub_10002CC0C((uint64_t)v87, &qword_10022F490);
    sub_100020E94();
    sub_10001D6F8();
    goto LABEL_22;
  }
  uint64_t v33 = *(void **)&v28[v29];
  v88[0] = 0;
  id v34 = [v33 getActiveContexts:v88];
  if (v34)
  {
    id v35 = v34;
    id v36 = v88[0];
    unint64_t v37 = sub_1000077D0(v35);
    if (v37)
    {
      unint64_t v38 = v37;
      if (v37 >> 62)
      {
        uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
        if (v39) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v39 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v39)
        {
LABEL_7:
          v88[0] = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)();
          if (v39 < 0) {
            __break(1u);
          }
          uint64_t v40 = 0;
          do
          {
            if ((v38 & 0xC000000000000001) != 0) {
              id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v41 = *(id *)(v38 + 8 * v40 + 32);
            }
            uint64_t v42 = v41;
            ++v40;
            id v43 = [v41 context];

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          while (v39 != v40);
          uint64_t v44 = v88[0];
          swift_bridgeObjectRelease();
LABEL_33:
          id v69 = [v35 voicePreferred];
          uint64_t v71 = v83;
          uint64_t v70 = v84;
          uint64_t v72 = v82;
          if (v69)
          {
            v73 = v69;
            v74 = v81;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            v75 = *(void (**)(uint64_t, char *, uint64_t))(v71 + 32);
            v75(v72, v74, v70);
            sub_100021AC0(v72, 0, 1, v70);
            if (sub_10004FD40(v72, 1, v70) != 1)
            {
              v76 = v80;
              uint64_t v77 = ((uint64_t (*)(char *, uint64_t, uint64_t))v75)(v80, v72, v70);
              __chkstk_darwin(v77);
              *(&v80 - 2) = v76;
              v78 = sub_1000057B8(sub_100054890, (uint64_t)(&v80 - 4), (unint64_t)v44);

              (*(void (**)(char *, uint64_t))(v71 + 8))(v76, v70);
              swift_bridgeObjectRelease();
              v79 = *(void **)&v31[OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyContext];
              *(void *)&v31[OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyContext] = v78;

              return v31;
            }
          }
          else
          {
            sub_100021AC0(v82, 1, 1, v84);
          }

          swift_bridgeObjectRelease();
          sub_10002CC0C(v72, &qword_1002307C0);
          return v31;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v44 = _swiftEmptyArrayStorage;
      goto LABEL_33;
    }
  }
  else
  {
    id v53 = v88[0];
    uint64_t v54 = _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100043478(&qword_10022E560);
    uint64_t v55 = type metadata accessor for LogMessage();
    sub_100044798(v55);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    v88[3] = v27;
    v88[0] = v31;
    uint64_t v56 = v31;
    id v57 = (id)AMSLogKey();
    if (v57)
    {
      uint64_t v58 = v57;
      uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v84 = v54;
      uint64_t v60 = v56;
      uint64_t v62 = v61;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100049518();
      uint64_t v63 = swift_getMetatypeMetadata();
      sub_100048DEC(v63);
      sub_10002CC0C((uint64_t)v87, &qword_10022F490);
      sub_100020E44();
      v87[3] = &type metadata for String;
      v87[0] = v59;
      v87[1] = v62;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v87, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      uint64_t v56 = v60;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100049518();
      uint64_t v67 = swift_getMetatypeMetadata();
      sub_100048DEC(v67);
      sub_10002CC0C((uint64_t)v87, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v88);
    sub_100020924();
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v68 = static os_log_type_t.error.getter();
    sub_10004841C(v68);
    swift_bridgeObjectRelease();

    swift_errorRelease();
  }
  return v31;
}

uint64_t sub_1000147F4(uint64_t a1, void (*a2)(void *, void))
{
  v4[0] = a1;
  v4[1] = a1;
  swift_retain();
  a2(v4, 0);
  swift_release();
  return Promise.resolve(_:)();
}

uint64_t sub_10001485C(uint64_t *a1, uint64_t a2, uint64_t a3, NSString a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  __chkstk_darwin(v11);
  uint64_t v12 = *a1;
  if (a4) {
    a4 = String._bridgeToObjectiveC()();
  }

  sub_100043478(&qword_10022F0D0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1001C3110;
  Date.timeIntervalSinceNow.getter();
  *(void *)(v13 + 56) = &type metadata for Double;
  *(void *)(v13 + 64) = &protocol witness table for Double;
  *(double *)(v13 + 32) = fabs(v14);
  uint64_t v51 = String.init(format:_:)();
  uint64_t v16 = v15;
  if (v12)
  {
    *(void *)(a6 + 96) = v12;
    swift_retain_n();
    swift_release();
    if (qword_10022C470 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    *((void *)&v57 + 1) = type metadata accessor for JSAppEngine();
    *(void *)&long long v56 = a6;
    swift_retain();
    id v17 = (id)AMSLogKey();
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v16;
      uint64_t v22 = v21;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v23._countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      sub_100049788(&v56, *((uint64_t *)&v57 + 1));
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v53 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v53, &qword_10022F490);
      v25._countAndFlagsBits = 5972026;
      v25._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v53 = v19;
      uint64_t v54 = v22;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v53, &qword_10022F490);
      v26._countAndFlagsBits = 93;
      v26._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      LogMessage.init(stringInterpolation:)();
      uint64_t v16 = v20;
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v36._countAndFlagsBits = 0;
      v36._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      sub_100049788(&v56, *((uint64_t *)&v57 + 1));
      uint64_t v37 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v53 = v37;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v53, &qword_10022F490);
      v38._countAndFlagsBits = 58;
      v38._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v56);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v39._countAndFlagsBits = 0xD000000000000015;
    v39._object = (void *)0x80000001001CFB50;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    *((void *)&v57 + 1) = &type metadata for String;
    *(void *)&long long v56 = v51;
    *((void *)&v56 + 1) = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)&v56, &qword_10022F490);
    v40._countAndFlagsBits = 41;
    v40._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v40);
    LogMessage.init(stringInterpolation:)();
    uint64_t v41 = static os_log_type_t.default.getter();
    sub_10004841C(v41);
    swift_release();
  }
  else
  {
    uint64_t v50 = v15;
    if (qword_10022C470 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    *((void *)&v57 + 1) = type metadata accessor for JSAppEngine();
    *(void *)&long long v56 = a6;
    swift_retain();
    id v27 = (id)AMSLogKey();
    if (v27)
    {
      NSString v28 = v27;
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v31 = v30;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v32._countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      sub_100049788(&v56, *((uint64_t *)&v57 + 1));
      uint64_t v33 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v53 = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v53, &qword_10022F490);
      v34._countAndFlagsBits = 5972026;
      v34._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v53 = v29;
      uint64_t v54 = v31;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v53, &qword_10022F490);
      v35._countAndFlagsBits = 93;
      v35._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v42._countAndFlagsBits = 0;
      v42._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      sub_100049788(&v56, *((uint64_t *)&v57 + 1));
      uint64_t v43 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v53 = v43;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v53, &qword_10022F490);
      v44._countAndFlagsBits = 58;
      v44._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v44);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v56);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v45._object = (void *)0x80000001001CFB30;
    v45._countAndFlagsBits = 0xD000000000000012;
    LogMessage.StringInterpolation.appendLiteral(_:)(v45);
    *((void *)&v57 + 1) = &type metadata for String;
    *(void *)&long long v56 = v51;
    *((void *)&v56 + 1) = v50;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)&v56, &qword_10022F490);
    v46._countAndFlagsBits = 41;
    v46._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    LogMessage.init(stringInterpolation:)();
    if (a2)
    {
      swift_getErrorValue();
      *((void *)&v57 + 1) = v52;
      id v47 = sub_10003BAA4((uint64_t *)&v56);
      (*(void (**)(uint64_t *))(*(void *)(v52 - 8) + 16))(v47);
    }
    else
    {
      long long v56 = 0u;
      long long v57 = 0u;
    }
    static LogMessage.safe(_:)();
    sub_10004357C((uint64_t)&v56, &qword_10022F490);
    uint64_t v48 = static os_log_type_t.error.getter();
    sub_10004841C(v48);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100015038(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(v3) = a3;
  uint64_t v45 = a2;
  uint64_t v46 = a1;
  uint64_t v4 = type metadata accessor for JetPackFileStreamSource();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v51 = &v41[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v52 = type metadata accessor for DiskJetPackLoader();
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v48 = &v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = type metadata accessor for JetPackSigningPolicy();
  uint64_t v8 = *(void *)(v49 - 8);
  uint64_t v9 = __chkstk_darwin(v49);
  Swift::String v44 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  id v47 = &v41[-v11];
  uint64_t v12 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v12 - 8);
  if (qword_10022C470 != -1) {
    swift_once();
  }
  uint64_t v43 = qword_1002440D8;
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v13 = sub_100043478(&qword_100232A60);
  uint64_t v57 = sub_100043478((uint64_t *)&unk_100232AC0);
  v56[0] = v13;
  id v14 = (id)AMSLogKey();
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    int v42 = v3;
    uint64_t v3 = v5;
    uint64_t v17 = v4;
    uint64_t v19 = v18;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    sub_100049788(v56, v57);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v53[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v53, &qword_10022F490);
    v22._countAndFlagsBits = 5972026;
    v22._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t MetatypeMetadata = &type metadata for String;
    v53[0] = v16;
    v53[1] = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v53, &qword_10022F490);
    v23._countAndFlagsBits = 93;
    v23._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    LogMessage.init(stringInterpolation:)();
    uint64_t v4 = v17;
    uint64_t v5 = v3;
    LOBYTE(v3) = v42;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    sub_100049788(v56, v57);
    uint64_t v25 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v53[0] = v25;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v53, &qword_10022F490);
    v26._countAndFlagsBits = 58;
    v26._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v56);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v27._object = (void *)0x80000001001D65E0;
  v27._countAndFlagsBits = 0xD00000000000001BLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  uint64_t v28 = type metadata accessor for URL();
  uint64_t v57 = v28;
  uint64_t v29 = sub_10003BAA4(v56);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v29, v46, v28);
  LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
  sub_1000435D4((uint64_t)v56, &qword_10022F490);
  v30._countAndFlagsBits = 41;
  v30._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v30);
  LogMessage.init(stringInterpolation:)();
  uint64_t v31 = static os_log_type_t.debug.getter();
  sub_10004841C(v31);
  swift_bridgeObjectRelease();
  type metadata accessor for JSStackContext();
  static DiskJetPackResourceBundle.cleanUpOldSessions(baseURL:)();
  Swift::String v32 = (unsigned int *)&enum case for JetPackSigningPolicy.required(_:);
  if ((v3 & 1) == 0) {
    Swift::String v32 = (unsigned int *)&enum case for JetPackSigningPolicy.ignore(_:);
  }
  uint64_t v33 = v47;
  uint64_t v34 = v49;
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v47, *v32, v49);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v44, v33, v34);
  uint64_t v57 = type metadata accessor for JetPackManagedKeyProvider();
  uint64_t v58 = &protocol witness table for JetPackManagedKeyProvider;
  sub_10003BAA4(v56);
  JetPackManagedKeyProvider.init()();
  Swift::String v35 = v48;
  DiskJetPackLoader.init(signingPolicy:keyProvider:)();
  URL.path.getter();
  Swift::String v36 = v51;
  JetPackFileStreamSource.init(path:)();
  uint64_t v57 = v4;
  uint64_t v58 = &protocol witness table for JetPackFileStreamSource;
  uint64_t v37 = sub_10003BAA4(v56);
  (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v5 + 16))(v37, v36, v4);
  uint64_t v38 = static DiskJetPackLoader.sharedUnpackQueue.getter();
  uint64_t MetatypeMetadata = (void *)sub_10004D510(0, (unint64_t *)&qword_10022F690);
  uint64_t v55 = &protocol witness table for OS_dispatch_queue;
  v53[0] = v38;
  uint64_t v39 = DiskJetPackLoader.bundle(from:baseURL:automaticallyCleanUp:on:)();
  sub_10004377C((uint64_t)v53);
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v36, v4);
  (*(void (**)(unsigned char *, uint64_t))(v50 + 8))(v35, v52);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v33, v34);
  sub_10004377C((uint64_t)v56);
  return v39;
}

uint64_t sub_100015734()
{
  swift_release();
  uint64_t v1 = sub_100044104();
  return _swift_deallocObject(v1, v2, v3);
}

id sub_1000157B0()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC14amsengagementd14JSAccountStore_accountStore), "ams_fetchLocaliTunesAccount");
  id v12 = 0;
  id v2 = [v1 resultWithError:&v12];
  id v3 = v12;
  if (v2)
  {
    id v4 = v2;
    uint64_t v5 = (objc_class *)type metadata accessor for JSAccount();
    uint64_t v6 = (char *)objc_allocWithZone(v5);
    *(void *)&v6[OBJC_IVAR____TtC14amsengagementd9JSAccount_account] = v4;
    v11.receiver = v6;
    v11.super_class = v5;
    id v7 = v3;
    id v8 = objc_msgSendSuper2(&v11, "init");
  }
  else
  {
    id v9 = v12;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    return 0;
  }
  return v8;
}

uint64_t type metadata accessor for JSAccount()
{
  return self;
}

uint64_t sub_1000158F4(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v106 = a3;
  uint64_t v6 = v5;
  uint64_t v102 = a1;
  v103 = a5;
  id v101 = a2;
  uint64_t v8 = type metadata accessor for Bag();
  __chkstk_darwin(v8 - 8);
  v104 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for JSStack.StandardGlobalConfiguration();
  uint64_t v108 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  v105 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v14 = (char *)&v87 - v13;
  uint64_t v15 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10022C470 != -1) {
    swift_once();
  }
  uint64_t v100 = qword_1002440D8;
  uint64_t v18 = sub_100043478(&qword_10022E560);
  uint64_t v19 = *(void *)(type metadata accessor for LogMessage() - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v115 = *(void *)(v19 + 72);
  uint64_t v93 = v18;
  uint64_t v91 = v21 + 2 * v115;
  uint64_t v90 = v20 | 7;
  uint64_t v22 = swift_allocObject();
  long long v89 = xmmword_1001C3120;
  *(_OWORD *)(v22 + 16) = xmmword_1001C3120;
  uint64_t v92 = v21;
  uint64_t v88 = sub_100043478(&qword_100230700);
  uint64_t v114 = v88;
  uint64_t v94 = v6;
  v113[0] = v6;
  id v23 = (id)AMSLogKey();
  uint64_t v109 = v10;
  if (v23)
  {
    Swift::String v24 = v23;
    uint64_t v25 = v14;
    uint64_t v26 = a4;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v29 = v28;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    sub_100049788(v113, v114);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v110 = (char *)DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v110);
    v32._countAndFlagsBits = 5972026;
    v32._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    uint64_t MetatypeMetadata = &type metadata for String;
    v110 = (char *)v27;
    uint64_t v111 = v29;
    a4 = v26;
    id v14 = v25;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v110);
    v33._countAndFlagsBits = 93;
    v33._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v33);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v34._countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v34);
    sub_100049788(v113, v114);
    uint64_t v35 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v110 = (char *)v35;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v110);
    v36._countAndFlagsBits = 58;
    v36._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    LogMessage.init(stringInterpolation:)();
  }
  uint64_t v97 = a4;
  v98 = v14;
  sub_10004377C((uint64_t)v113);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v37._countAndFlagsBits = 0xD000000000000025;
  v37._object = (void *)0x80000001001D23F0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  uint64_t v38 = v103[7];
  uint64_t v39 = (uint64_t)v103;
  type metadata accessor for QualityOfService(0);
  uint64_t v114 = v40;
  uint64_t v99 = v38;
  v113[0] = v38;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)v113);
  v41._countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v41);
  v87 = v17;
  LogMessage.init(stringInterpolation:)();
  uint64_t v42 = static os_log_type_t.debug.getter();
  sub_10004841C(v42);
  swift_bridgeObjectRelease();
  sub_10004D510(0, &qword_10022D5A8);
  type metadata accessor for BaseObjectGraph();
  inject<A, B>(_:from:)();
  id v96 = (id)v113[0];
  sub_10004D510(0, &qword_10022FDF0);
  inject<A, B>(_:from:)();
  uint64_t v43 = (void *)v113[0];
  static JSStack.StandardGlobalConfiguration.default.getter();
  sub_100043478(&qword_100230730);
  uint64_t v44 = type metadata accessor for JSStack.Prerequisite();
  uint64_t v45 = *(void *)(v44 - 8);
  unint64_t v46 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  uint64_t v95 = *(void *)(v45 + 72);
  uint64_t v47 = v95;
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_1001C3130;
  uint64_t v100 = v48;
  unint64_t v49 = v48 + v46;
  sub_10005416C((uint64_t)v101, v48 + v46);
  uint64_t v50 = *(void (**)(void *, uint64_t, uint64_t))(v45 + 104);
  v50((void *)v49, enum case for JSStack.Prerequisite.source(_:), v44);
  uint64_t v51 = (void *)(v49 + v47);
  id v52 = objc_allocWithZone((Class)type metadata accessor for JSAMS());
  id v53 = (id)v39;
  sub_10002C008(v39);
  uint64_t v54 = v96;
  id v55 = v43;
  uint64_t v56 = v102;
  swift_bridgeObjectRetain();
  uint64_t v57 = v53;
  uint64_t v58 = v50;
  uint64_t v59 = v44;
  v103 = v54;
  id v101 = v55;
  id v60 = sub_10002B770(v57, v54, v55, v56);
  *uint64_t v51 = 5459265;
  v51[1] = 0xE300000000000000;
  v51[2] = v60;
  uint64_t v61 = enum case for JSStack.Prerequisite.globalObject(_:);
  v50(v51, enum case for JSStack.Prerequisite.globalObject(_:), v44);
  uint64_t v62 = (void *)(v49 + 2 * v95);
  type metadata accessor for JSBag();
  if (qword_10022C3E0 != -1) {
    swift_once();
  }
  swift_unknownObjectRetain();
  uint64_t v63 = (uint64_t)v104;
  Bag.init(from:)();
  id v64 = sub_1000072A8(v63);
  *uint64_t v62 = 6775138;
  v62[1] = 0xE300000000000000;
  v62[2] = v64;
  v58(v62, v61, v59);
  type metadata accessor for JSStack();
  uint64_t v66 = v108;
  uint64_t v65 = v109;
  uint64_t v67 = v98;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v105, v98, v109);
  swift_retain();
  id v68 = v106;
  uint64_t v69 = v107;
  uint64_t v70 = JSStack.__allocating_init(asPartOf:virtualMachine:configuration:customPrerequisites:qualityOfService:)();
  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v65);
  }
  else
  {
    uint64_t v71 = v67;
    JSStack.withUnsafeContext(_:)();
    if (sub_10004EF18())
    {
      type metadata accessor for Defaults();
      if (sub_10003A8F4(4))
      {
        uint64_t v72 = (void *)qword_1002440D8;
        uint64_t v73 = swift_allocObject();
        *(_OWORD *)(v73 + 16) = v89;
        uint64_t v107 = v73 + v92;
        uint64_t v114 = v88;
        v113[0] = v94;
        id v74 = (id)AMSLogKey();
        if (v74)
        {
          v75 = v74;
          v105 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v106 = v72;
          uint64_t v77 = v76;

          swift_bridgeObjectRetain();
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v78._countAndFlagsBits = 0;
          v78._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v78);
          sub_100049788(v113, v114);
          uint64_t v79 = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          v110 = (char *)v79;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_1000423CC((uint64_t)&v110);
          v80._countAndFlagsBits = 5972026;
          v80._object = (void *)0xE300000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v80);
          uint64_t MetatypeMetadata = &type metadata for String;
          v110 = v105;
          uint64_t v111 = v77;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_1000423CC((uint64_t)&v110);
          v81._countAndFlagsBits = 93;
          v81._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v81);
          LogMessage.init(stringInterpolation:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v82._countAndFlagsBits = 0;
          v82._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v82);
          sub_100049788(v113, v114);
          uint64_t v83 = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          v110 = (char *)v83;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_1000423CC((uint64_t)&v110);
          v84._countAndFlagsBits = 58;
          v84._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v84);
          LogMessage.init(stringInterpolation:)();
        }
        sub_10004377C((uint64_t)v113);
        LogMessage.init(stringLiteral:)();
        uint64_t v85 = static os_log_type_t.debug.getter();
        sub_10004841C(v85);
        swift_bridgeObjectRelease();
        JSStack.makeRemoteInspectable()();
      }
    }

    (*(void (**)(char *, uint64_t))(v66 + 8))(v71, v65);
  }
  return v70;
}

id sub_100016370()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_log);
}

uint64_t sub_10001637C()
{
  sub_100041F70();
  sub_1000447B0();
  uint64_t v3 = v2;
  sub_100044DDC();
  *id v4 = v3;
  uint64_t v5 = *v1;
  sub_100020EBC();
  *uint64_t v6 = v5;
  *(void *)(v3 + 416) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 344);
    return _swift_task_switch(sub_10019D668, v7, 0);
  }
  else
  {
    sub_100043FF8();
    swift_release();
    swift_task_dealloc();
    uint64_t v8 = sub_1000475F0();
    return v9(v8);
  }
}

uint64_t sub_10001649C(uint64_t *a1, uint64_t a2)
{
  return sub_1000164C0(*a1, a2, &qword_100234630);
}

uint64_t sub_1000164C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10001653C()
{
  uint64_t v0 = type metadata accessor for NWPath.Status();
  sub_100020DEC();
  uint64_t v2 = v1;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = type metadata accessor for NWPath();
  sub_100020DEC();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  id v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  NWPathMonitor.currentPath.getter();
  swift_release();
  NWPath.status.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
  uint64_t v15 = sub_100049500();
  v16(v15);
  char v17 = static NWPath.Status.== infix(_:_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v2 + 8);
  v18(v6, v0);
  v18(v8, v0);
  return v17 & 1;
}

uint64_t sub_1000166D4(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000368C8;
  return sub_100052EE4();
}

uint64_t sub_1000167F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100016818(*(unsigned __int8 *)(v1 + 16), *(unsigned char *)(v1 + 17), *(void *)(v1 + 24), a1);
}

uint64_t sub_100016818@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  v26[1] = a3;
  Swift::String v32 = a4;
  v26[0] = type metadata accessor for DispatchTimeInterval();
  uint64_t v8 = *(void *)(v26[0] - 8);
  __chkstk_darwin(v26[0]);
  uint64_t v10 = (void *)((char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  unint64_t v11 = 0xE900000000000073;
  uint64_t v12 = 0x636974796C616E61;
  switch((char)a1)
  {
    case 1:
      unint64_t v11 = 0xE800000000000000;
      uint64_t v12 = 0x6C616E7265746E69;
      break;
    case 2:
      unint64_t v11 = 0xE800000000000000;
      uint64_t v12 = 0x7379656E72756F6ALL;
      break;
    case 3:
      unint64_t v11 = 0xEF736E6F69746164;
      uint64_t v12 = 0x6E656D6D6F636572;
      break;
    default:
      break;
  }
  unint64_t v13 = v11;
  String.append(_:)(*(Swift::String *)&v12);
  swift_bridgeObjectRelease();
  unint64_t v14 = 0xE100000000000000;
  v15._countAndFlagsBits = 45;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t v16 = 65;
  switch(a2)
  {
    case 1:
      break;
    case 2:
      uint64_t v16 = 66;
      break;
    case 3:
      uint64_t v16 = 67;
      break;
    default:
      unint64_t v14 = 0xE700000000000000;
      uint64_t v16 = 0x746C7561666564;
      break;
  }
  unint64_t v17 = v14;
  String.append(_:)(*(Swift::String *)&v16);
  swift_bridgeObjectRelease();
  uint64_t v18 = v27;
  uint64_t v19 = v28;
  if (qword_10022C3F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v20 = qword_10022DCC0;
  swift_bridgeObjectRetain();
  sub_100016C14(v18, v19, v20, (uint64_t)v30);
  swift_bridgeObjectRelease();
  if (v31 == 1)
  {
    sub_10002CC0C((uint64_t)v30, (uint64_t *)&unk_10022E590);
    swift_endAccess();
  }
  else
  {
    uint64_t Strong = swift_weakLoadStrong();
    sub_10002CC0C((uint64_t)v30, (uint64_t *)&unk_10022E590);
    swift_endAccess();
    if (Strong)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  type metadata accessor for AppDatabase();
  swift_allocObject();
  uint64_t v22 = sub_100006158(a1, a2, 0);
  if (v5) {
    return swift_bridgeObjectRelease();
  }
  uint64_t Strong = v22;
  swift_weakInit();
  uint64_t v24 = swift_weakAssign();
  sub_10004382C(v24, (uint64_t)v30, &qword_10022DE00);
  char v31 = 0;
  swift_beginAccess();
  sub_1000068B4((uint64_t)v30, v18, v19);
  swift_endAccess();
LABEL_18:
  uint64_t v29 = type metadata accessor for AppDatabase();
  uint64_t v27 = Strong;
  *uint64_t v10 = 500;
  uint64_t v25 = v26[0];
  (*(void (**)(void *, void, void))(v8 + 104))(v10, enum case for DispatchTimeInterval.milliseconds(_:), v26[0]);
  swift_retain();
  sub_100016CD4((uint64_t)&v27);
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v25);
  uint64_t result = sub_10004377C((uint64_t)&v27);
  *Swift::String v32 = Strong;
  return result;
}

uint64_t type metadata accessor for AppDatabase()
{
  return self;
}

uint64_t sub_100016C14@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (uint64_t result = sub_100042ADC(result, a2), (v6 & 1) != 0))
  {
    uint64_t result = sub_100016C6C(*(void *)(a3 + 56) + 8 * result, a4);
    char v7 = 0;
  }
  else
  {
    *(void *)a4 = 0;
    char v7 = 1;
  }
  *(unsigned char *)(a4 + 8) = v7;
  return result;
}

uint64_t sub_100016C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022DE00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100016CD4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = v5;
  __chkstk_darwin(v5);
  char v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)v18 - v13;
  if (qword_10022C400 != -1) {
    swift_once();
  }
  v18[1] = qword_10022DCC8;
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v12, v8);
  sub_100043520(a1, (uint64_t)v26);
  sub_100043520((uint64_t)v26, (uint64_t)v25);
  uint64_t v15 = swift_allocObject();
  sub_100043510(v25, (_OWORD *)(v15 + 16));
  aBlock[4] = nullsub_1;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  aBlock[3] = &unk_10020E278;
  uint64_t v16 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  id v23 = &_swiftEmptyArrayStorage;
  sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
  sub_10004377C((uint64_t)v26);
  v19(v14, v8);
  return swift_release();
}

uint64_t sub_1000170C0()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v3 = v2;
  sub_100044DDC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_100020EBC();
  *uint64_t v6 = v5;
  *(void *)(v3 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_100043E7C();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    uint64_t v10 = sub_10004A258();
    return v11(v10);
  }
}

uint64_t sub_1000171B8(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  unsigned int v5 = [a2 processIdentifier];
  unsigned __int8 v6 = sub_10000B510(a2);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  if (v6)
  {
    unsigned __int8 v45 = v6;
    uint64_t v48 = (void *)type metadata accessor for XPCServiceProvider();
    *(void *)&long long aBlock = v2;
    uint64_t v7 = v2;
    id v8 = (id)AMSLogKey();
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100046794();
      sub_1000420D0();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100049768(MetatypeMetadata);
      sub_1000423CC((uint64_t)&v51);
      v14._countAndFlagsBits = 5972026;
      v14._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v14);
      id v52 = &type metadata for String;
      *(void *)&long long v51 = v10;
      *((void *)&v51 + 1) = v12;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v51);
      v15._countAndFlagsBits = 93;
      v15._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      sub_1000490AC();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100046794();
      sub_1000420D0();
      uint64_t v25 = swift_getMetatypeMetadata();
      sub_100049768(v25);
      sub_1000423CC((uint64_t)&v51);
      v26._countAndFlagsBits = 58;
      v26._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      sub_1000490AC();
    }
    sub_10004377C((uint64_t)&aBlock);
    LogMessage.init(stringLiteral:)();
    sub_1000489B4();
    sub_1000423CC((uint64_t)&aBlock);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v27 = static os_log_type_t.default.getter();
    sub_10004841C(v27);
    swift_bridgeObjectRelease();
    unint64_t v28 = *(void **)&v7[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_exportedInterface];
    unsigned __int8 v6 = v45;
    if (v28)
    {
      uint64_t v29 = (uint64_t)&v7[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_exportedObject];
      swift_beginAccess();
      sub_100043410(v29, (uint64_t)&v51);
      if (v52)
      {
        sub_100043510(&v51, &aBlock);
        id v30 = v28;
        [a2 setExportedInterface:v30];
        sub_100049788(&aBlock, (uint64_t)v48);
        [a2 setExportedObject:_bridgeAnythingToObjectiveC<A>(_:)()];
        swift_unknownObjectRelease();

        sub_10004377C((uint64_t)&aBlock);
      }
      else
      {
        sub_1000423CC((uint64_t)&v51);
      }
    }
    uint64_t v34 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v34;
    *(_DWORD *)(v35 + 24) = v5;
    unint64_t v49 = sub_1001B16B8;
    uint64_t v50 = v35;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v47 = sub_10002CD0C;
    uint64_t v48 = &unk_100218F28;
    Swift::String v36 = _Block_copy(&aBlock);
    swift_release();
    [a2 setInterruptionHandler:v36];
    _Block_release(v36);
    uint64_t v37 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v38 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v37;
    *(void *)(v39 + 24) = v38;
    *(_DWORD *)(v39 + 32) = v5;
    unint64_t v49 = sub_1001B1704;
    uint64_t v50 = v39;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v47 = sub_10002CD0C;
    uint64_t v48 = &unk_100218FA0;
    uint64_t v40 = _Block_copy(&aBlock);
    swift_release();
    [a2 setInvalidationHandler:v40];
    _Block_release(v40);
    if (*(void *)&v7[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_remoteObjectInterface]) {
      objc_msgSend(a2, "setRemoteObjectInterface:");
    }
    Swift::String v41 = *(void **)&v7[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_connectionsLock];
    uint64_t v42 = v7;
    id v43 = a2;
    [v41 lock];
    sub_10000A584((uint64_t)v42, v43);
    [v41 unlock];

    [v43 resume];
  }
  else
  {
    uint64_t v48 = (void *)type metadata accessor for XPCServiceProvider();
    *(void *)&long long aBlock = v2;
    id v16 = v2;
    id v17 = (id)AMSLogKey();
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100046794();
      sub_1000420D0();
      uint64_t v22 = swift_getMetatypeMetadata();
      sub_100049768(v22);
      sub_1000423CC((uint64_t)&v51);
      v23._countAndFlagsBits = 5972026;
      v23._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      id v52 = &type metadata for String;
      *(void *)&long long v51 = v19;
      *((void *)&v51 + 1) = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v51);
      v24._countAndFlagsBits = 93;
      v24._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      sub_1000490AC();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100046794();
      sub_1000420D0();
      uint64_t v31 = swift_getMetatypeMetadata();
      sub_100049768(v31);
      sub_1000423CC((uint64_t)&v51);
      v32._countAndFlagsBits = 58;
      v32._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      sub_1000490AC();
    }
    sub_10004377C((uint64_t)&aBlock);
    LogMessage.init(stringLiteral:)();
    sub_1000489B4();
    sub_1000423CC((uint64_t)&aBlock);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v33 = static os_log_type_t.error.getter();
    sub_10004841C(v33);
    swift_bridgeObjectRelease();
  }
  return v6 & 1;
}

uint64_t sub_1000178EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v4);
  return Promise.resolve(_:)();
}

id sub_10001796C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1000179DC(SEL *a1)
{
  id v1 = [self *a1];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

uint64_t sub_100017A3C()
{
  return sub_1000179DC((SEL *)&selRef_productVersion);
}

uint64_t sub_100017A48()
{
  return sub_1000179DC((SEL *)&selRef_productType);
}

uint64_t sub_100017B38(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, void (*a7)(void, uint64_t, uint64_t, uint64_t))
{
  a4();
  uint64_t v11 = sub_100035CB8();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  swift_retain();
  a7(0, 1, a6, v11);
  swift_release();
  return swift_release();
}

void sub_100017BD0()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  __chkstk_darwin(v3);
  sub_100040C78();
  sub_100020DEC();
  __chkstk_darwin(v4);
  sub_100045B24();
  sub_100043478(&qword_10022D338);
  uint64_t v5 = Promise.__allocating_init()();
  unsigned __int8 v6 = (void *)sub_100011D64();
  v6[2] = v2;
  v6[3] = v0;
  v6[4] = v5;
  v14[4] = sub_1000314BC;
  v14[5] = v6;
  v14[0] = _NSConcreteStackBlock;
  sub_100022644(COERCE_DOUBLE(1107296256));
  void v14[2] = sub_10002CD0C;
  uint64_t v14[3] = &unk_100210068;
  uint64_t v7 = _Block_copy(v14);
  id v8 = v2;
  id v9 = v0;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  sub_100040FB8();
  sub_100011E9C();
  _Block_release(v7);
  uint64_t v10 = sub_100046BEC();
  v11(v10);
  uint64_t v12 = sub_1000BC4FC();
  v13(v12);
  swift_release();
  sub_100017EDC();
  swift_release();
  sub_100020FDC();
}

uint64_t sub_100017E2C()
{
  return sub_100027BD8(v1 - 160, v0);
}

uint64_t sub_100017E68@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 112) = a1;
  *(void *)(v2 - 104) = (v1 - 32) | 0x8000000000000000;
  return v2 - 112;
}

uint64_t sub_100017E7C()
{
  return sub_10004377C(v0 - 128);
}

void sub_100017EDC()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for DispatchQoS.QoSClass();
  sub_100020DEC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10002D2D4();
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  uint64_t v7 = sub_10004D23C();
  v8(v7);
  id v9 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  sub_100017FE4(v2, 0, v9);

  sub_100020FDC();
}

uint64_t sub_100017FE4(uint64_t a1, uint64_t a2, void *a3)
{
  v10[3] = sub_10004D510(0, (unint64_t *)&qword_10022F690);
  v10[4] = &protocol witness table for OS_dispatch_queue;
  v10[0] = a3;
  id v6 = a3;
  uint64_t v7 = Promise.__allocating_init()();
  id v8 = (void *)sub_100011D64();
  v8[2] = v7;
  v8[3] = a1;
  v8[4] = a2;
  swift_retain_n();
  swift_retain();
  Promise.then(perform:orCatchError:on:)();
  swift_release();
  swift_release();
  sub_10004377C((uint64_t)v10);
  return v7;
}

uint64_t sub_1000181E4()
{
  sub_10004D510(0, (unint64_t *)&qword_10022FE70);
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_10001825C()
{
  sub_10019D6B0();
  sub_10004A41C();
  uint64_t v2 = v0;
  sub_1000447B0();
  uint64_t v4 = v3;
  sub_100044DDC();
  *uint64_t v5 = v4;
  uint64_t v6 = *v1;
  sub_100020EBC();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v8 = _convertErrorToNSError(_:)();
    swift_errorRelease();
    id v9 = (void *)v8;
  }
  else
  {
    sub_100043478(&qword_100230818);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v9 = isa;
  }
  uint64_t v11 = sub_1000226F8();
  v12(v11);

  _Block_release(v4);
  sub_100040954();
  sub_100049FEC();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20);
}

uint64_t sub_1000183D4()
{
  __n128 v0 = sub_10004A0AC();
  return sub_100018408(v1, v9, v3, v4, v5, v6, v7, v8, v0.n128_i64[0], v0.n128_i64[1], v10, v2);
}

uint64_t sub_100018408(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(uint64_t, uint64_t))
{
  uint64_t v12 = a12;
  int v13 = *a1;
  uint64_t v14 = 1;
  uint64_t v15 = *((void *)a1 + 1);
  switch(a2)
  {
    case 0:
      LODWORD(v14) = v13 ^ 1;
      goto LABEL_9;
    case 1:
      if ((v13 & 1) == 0) {
        goto LABEL_9;
      }
      uint64_t v16 = 0;
      uint64_t v14 = 0;
      goto LABEL_10;
    case 2:
    case 3:
      if ((v13 & 1) == 0) {
        goto LABEL_9;
      }
      uint64_t v16 = 0;
      uint64_t v14 = 2;
      goto LABEL_10;
    case 4:
      goto LABEL_9;
    case 5:
      if (v13)
      {
        uint64_t v16 = 0;
      }
      else
      {
LABEL_9:
        uint64_t v18 = v15;
        swift_bridgeObjectRetain();
        uint64_t v12 = a12;
        uint64_t v14 = v14;
        uint64_t v16 = v18;
      }
LABEL_10:
      v12(v16, v14);
      uint64_t result = sub_100019190(v16, v14);
      break;
    default:
      sub_1000441D8();
      sub_10002281C();
      uint64_t result = sub_100049FC4();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_100018564(uint64_t a1, int a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  HIDWORD(v28) = a2;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = a4;
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = a5;
  v18[3] = a6;
  v18[4] = a7;
  v18[5] = a8;
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = a5;
  v19[3] = a8;
  v19[4] = a6;
  v19[5] = a7;
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = a5;
  void v20[3] = a6;
  v20[4] = a7;
  v20[5] = a9;
  v20[6] = a10;
  v20[7] = a3;
  v20[8] = a4;
  id v21 = a5;
  swift_bridgeObjectRetain_n();
  id v22 = v21;
  swift_retain_n();
  id v23 = a8;
  id v24 = v22;
  id v25 = v23;
  swift_retain();
  sub_1000187A0(a1, HIDWORD(v28), (uint64_t)sub_100018FFC, v17, (uint64_t)sub_10017A6D4, (uint64_t)v18, (uint64_t)sub_10017A720, (uint64_t)v19, (uint64_t)sub_10017A774, (uint64_t)v20, (uint64_t)&qword_10022D6F0, (uint64_t)&unk_100216540, (uint64_t)&unk_100216568, (uint64_t)sub_10017B12C, (uint64_t)sub_10017B0E4, (uint64_t)&unk_100216590, (uint64_t)sub_10017B098, a9, a10,
    a1,
    v28,
    a11,
    v29,
    v30,
    v31,
    v32,
    v33);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1000187A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  sub_1000209F4();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  char v35 = v34;
  uint64_t v37 = v36;
  uint64_t v38 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v39 = sub_1000208F0(v38);
  __chkstk_darwin(v39);
  sub_100011D4C();
  if (!v35)
  {
    uint64_t v76 = v33;
    uint64_t v77 = v37;
    uint64_t v48 = qword_10022C5A8;
    swift_bridgeObjectRetain();
    if (v48 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v49 = type metadata accessor for LogMessage();
    sub_100044798(v49);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    *((void *)&v82 + 1) = sub_100043478(&qword_100232EE0);
    *(void *)&long long v81 = v27;
    id v50 = (id)AMSLogKey();
    if (v50)
    {
      long long v51 = v50;
      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v54 = v53;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100049788(&v81, *((uint64_t *)&v82 + 1));
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v78 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v78, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v78 = v52;
      uint64_t v79 = v54;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v78, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
      uint64_t v37 = v77;
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100044FF4(&v81);
      uint64_t v64 = swift_getMetatypeMetadata();
      sub_100046DA4(v64);
      sub_10002CBB4((uint64_t)&v78, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v81);
    LogMessage.init(stringLiteral:)();
    if (v37)
    {
      *((void *)&v82 + 1) = sub_100043478(a23);
      *(void *)&long long v81 = v37;
    }
    else
    {
      long long v81 = 0u;
      long long v82 = 0u;
    }
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)&v81, &qword_10022F490);
    uint64_t v74 = static os_log_type_t.default.getter();
    sub_10004841C(v74);
    uint64_t v75 = swift_bridgeObjectRelease();
    v31(v75);
    v76(&v77, 0);
    goto LABEL_27;
  }
  if (v35 == 1)
  {
    uint64_t v40 = v33;
    uint64_t v77 = v37;
    uint64_t v41 = qword_10022C5A8;
    swift_bridgeObjectRetain();
    if (v41 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v42 = type metadata accessor for LogMessage();
    sub_100044798(v42);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    *((void *)&v82 + 1) = sub_100043478(&qword_100232EE0);
    *(void *)&long long v81 = v27;
    id v43 = (id)AMSLogKey();
    if (v43)
    {
      uint64_t v44 = v43;
      uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v47 = v46;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_10004D260();
      swift_getMetatypeMetadata();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100011D9C();
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v78 = v45;
      uint64_t v79 = v47;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100011D9C();
      sub_1000208D8();
      sub_100020BE4();
      swift_bridgeObjectRelease();
      uint64_t v37 = v77;
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100044FF4(&v81);
      uint64_t v63 = swift_getMetatypeMetadata();
      sub_100046DA4(v63);
      sub_10002CBB4((uint64_t)&v78, &qword_10022F490);
      sub_100020E94();
      sub_100020BE4();
    }
    sub_10004377C((uint64_t)&v81);
    LogMessage.init(stringLiteral:)();
    if (v37)
    {
      *((void *)&v82 + 1) = sub_100043478(a23);
      *(void *)&long long v81 = v37;
    }
    else
    {
      long long v81 = 0u;
      long long v82 = 0u;
    }
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)&v81, &qword_10022F490);
    uint64_t v73 = static os_log_type_t.default.getter();
    sub_10004841C(v73);
    swift_bridgeObjectRelease();
    v40(&v77, 0);
LABEL_27:
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  uint64_t v56 = a27;
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v57 = sub_10017B1B8();
  sub_100044798(v57);
  sub_10004A1C4();
  *(_OWORD *)(sub_10017B204() + 16) = xmmword_1001C3120;
  *((void *)&v82 + 1) = sub_100043478(&qword_100232EE0);
  *(void *)&long long v81 = v27;
  id v58 = (id)AMSLogKey();
  if (v58)
  {
    uint64_t v59 = v58;
    uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v62 = v61;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_10004D260();
    swift_getMetatypeMetadata();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100011D9C();
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v78 = v60;
    uint64_t v79 = v62;
    uint64_t v56 = a27;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100011D9C();
    sub_1000208D8();
    sub_100011CC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100044FF4(&v81);
    uint64_t v65 = swift_getMetatypeMetadata();
    sub_100046DA4(v65);
    sub_10002CBB4((uint64_t)&v78, &qword_10022F490);
    sub_100020E94();
    sub_100011CC0();
  }
  sub_10004377C((uint64_t)&v81);
  LogMessage.init(stringLiteral:)();
  uint64_t v66 = static os_log_type_t.default.getter();
  sub_10004841C(v66);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_1002346A0);
  Promise.__allocating_init()();
  uint64_t v67 = Promise.makeCompletionAdapter()();
  uint64_t v69 = v68;
  uint64_t v70 = sub_100035CB8();
  *(void *)(v70 + 16) = v67;
  *(void *)(v70 + 24) = v69;
  uint64_t v71 = sub_100035CB8();
  *(void *)(v71 + 16) = a26;
  *(void *)(v71 + 24) = v70;
  v29(v56, v71);
  swift_release();
  uint64_t v72 = sub_100035CB8();
  *(void *)(v72 + 16) = a21;
  *(void *)(v72 + 24) = a22;
  swift_retain();
  sub_10016DBD8();
  swift_release();
  swift_release();
LABEL_28:
  sub_100020FDC();
}

void sub_100018FB8()
{
  ++*(void *)(v0 + 16);
}

uint64_t sub_100018FC8(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 160) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100019000(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_100019030(uint64_t a1, uint64_t a2)
{
  sub_100019038(a1, a2, *(void *)(v2 + 16));
}

void sub_100019038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    v5.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    if (a2)
    {
LABEL_3:
      uint64_t v6 = _convertErrorToNSError(_:)();
      goto LABEL_6;
    }
  }
  else
  {
    v5.super.Class isa = 0;
    if (a2) {
      goto LABEL_3;
    }
  }
  uint64_t v6 = 0;
LABEL_6:
  id v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, v5.super.isa);
}

uint64_t sub_1000190E4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100019190(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000191A4()
{
  return sub_1000191C4();
}

uint64_t sub_1000191C4()
{
  sub_10004DDB4();
  uint64_t v5 = type metadata accessor for JSCallable();
  sub_100044798(v5);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  return sub_100019250(v4, v3, *(void *)(v1 + 16), v1 + ((v10 + 24) & ~v10), v1 + ((*(void *)(v9 + 64) + v10 + ((v10 + 24) & ~v10)) & ~v10), v2, v0);
}

uint64_t sub_100019250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v30 = a3;
  uint64_t v31 = a7;
  uint64_t v28 = a6;
  uint64_t v29 = a2;
  uint64_t v10 = type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v12 = v11;
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v28 - v18;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v20((char *)&v28 - v18, a4, v10);
  v20(v17, a5, v10);
  uint64_t v21 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v22 = (v21 + 24) & ~v21;
  unint64_t v23 = (v14 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = (v21 + v23 + 8) & ~v21;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a1;
  Swift::String v26 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v26(v25 + v22, v19, v10);
  *(void *)(v25 + v23) = v29;
  v26(v25 + v24, v17, v10);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  return swift_release();
}

uint64_t sub_1000193EC(uint64_t a1, void (*a2)(char *, void))
{
  uint64_t v4 = sub_100043478(&qword_10022FE30);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for JSResponse();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, a1, v7);
  sub_100021AC0((uint64_t)v6, 0, 1, v7);
  a2(v6, 0);
  sub_10004357C((uint64_t)v6, &qword_10022FE30);
  return Promise.resolve(_:)();
}

uint64_t sub_1000194FC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Date();
  sub_100044798(v5);
  sub_100051578();
  uint64_t v9 = *(void *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + v10);
  return sub_100019580(a1, a2, v6, v7, v9, v2 + v8, v11);
}

uint64_t sub_100019580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v90 = a6;
  uint64_t v91 = a1;
  uint64_t v87 = a2;
  uint64_t v9 = type metadata accessor for JSONObject();
  uint64_t v85 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100043478(&qword_10022FE18);
  uint64_t v84 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100043478(&qword_10022FE30);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for JSResponse();
  uint64_t v89 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v88 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  objc_super v86 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    if (qword_10022C470 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    *((void *)&v99 + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v98 = a7;
    id v25 = (id)AMSLogKey();
    if (v25)
    {
      Swift::String v26 = v25;
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v29 = v28;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v30._countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      sub_100049788(&v98, *((uint64_t *)&v99 + 1));
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v95 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v95, &qword_10022F490);
      v32._countAndFlagsBits = 5972026;
      v32._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v95 = v27;
      uint64_t v96 = v29;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v95, &qword_10022F490);
      v33._countAndFlagsBits = 93;
      v33._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v61._countAndFlagsBits = 0;
      v61._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v61);
      sub_100049788(&v98, *((uint64_t *)&v99 + 1));
      uint64_t v62 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v95 = v62;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v95, &qword_10022F490);
      v63._countAndFlagsBits = 58;
      v63._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v63);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v98);
    LogMessage.init(stringLiteral:)();
    uint64_t v64 = static os_log_type_t.error.getter();
    sub_10004841C(v64);
    return swift_bridgeObjectRelease();
  }
  uint64_t v23 = Strong;
  if (a5) {
    NSString v24 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v24 = 0;
  }

  sub_10001D71C();
  sub_100043478(&qword_10022F0D0);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1001C3110;
  Date.timeIntervalSinceNow.getter();
  *(void *)(v34 + 56) = &type metadata for Double;
  *(void *)(v34 + 64) = &protocol witness table for Double;
  *(double *)(v34 + 32) = fabs(v35);
  uint64_t v36 = String.init(format:_:)();
  uint64_t v38 = v37;
  sub_10001AB0C(v91, (uint64_t)v17);
  uint64_t v39 = v92;
  if (sub_10004FD40((uint64_t)v17, 1, v92) == 1)
  {
    sub_10004357C((uint64_t)v17, &qword_10022FE30);
    if (v87)
    {
      uint64_t v91 = v38;
      swift_errorRetain();
      if (qword_10022C470 != -1) {
        swift_once();
      }
      uint64_t v92 = qword_1002440D8;
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      *((void *)&v99 + 1) = type metadata accessor for JSAppEngine();
      *(void *)&long long v98 = v23;
      swift_retain();
      id v40 = (id)AMSLogKey();
      if (v40)
      {
        uint64_t v41 = v40;
        uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v44 = v43;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v45._countAndFlagsBits = 0;
        v45._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v45);
        sub_100049788(&v98, *((uint64_t *)&v99 + 1));
        uint64_t v46 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v95 = v46;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10004357C((uint64_t)&v95, &qword_10022F490);
        v47._countAndFlagsBits = 5972026;
        v47._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v47);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v95 = v42;
        uint64_t v96 = v44;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10004357C((uint64_t)&v95, &qword_10022F490);
        v48._countAndFlagsBits = 93;
        v48._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v48);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v73._countAndFlagsBits = 0;
        v73._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v73);
        sub_100049788(&v98, *((uint64_t *)&v99 + 1));
        uint64_t v74 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v95 = v74;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10004357C((uint64_t)&v95, &qword_10022F490);
        v75._countAndFlagsBits = 58;
        v75._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v75);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v98);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v76._countAndFlagsBits = 0xD000000000000012;
      v76._object = (void *)0x80000001001CFBB0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v76);
      *((void *)&v99 + 1) = &type metadata for String;
      *(void *)&long long v98 = v36;
      *((void *)&v98 + 1) = v91;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v98, &qword_10022F490);
      v77._countAndFlagsBits = 0x3A726F7272652029;
      v77._object = (void *)0xE900000000000020;
      LogMessage.StringInterpolation.appendLiteral(_:)(v77);
      swift_getErrorValue();
      uint64_t v78 = v93;
      uint64_t v79 = v94;
      *((void *)&v99 + 1) = v94;
      Swift::String v80 = sub_10003BAA4((uint64_t *)&v98);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v79 - 8) + 16))(v80, v78, v79);
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v98, &qword_10022F490);
      v81._countAndFlagsBits = 0;
      v81._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v81);
      LogMessage.init(stringInterpolation:)();
      uint64_t v82 = static os_log_type_t.error.getter();
      sub_10004841C(v82);
      swift_bridgeObjectRelease();
      swift_release();
      return swift_errorRelease();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v87 = v36;
  uint64_t v91 = v38;
  (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v88, v17, v39);
  JSResponse.body.getter();
  CoarselyTimed.contained.getter();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v14, v12);
  uint64_t v49 = sub_10001A338();
  uint64_t v51 = v50;
  (*(void (**)(char *, uint64_t))(v85 + 8))(v11, v9);
  if (qword_10022C470 != -1) {
    swift_once();
  }
  uint64_t v85 = qword_1002440D8;
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  *((void *)&v99 + 1) = type metadata accessor for JSAppEngine();
  *(void *)&long long v98 = v23;
  uint64_t v90 = v23;
  swift_retain();
  id v52 = (id)AMSLogKey();
  if (v52)
  {
    uint64_t v53 = v52;
    uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v56 = v55;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v57._countAndFlagsBits = 0;
    v57._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v57);
    sub_100049788(&v98, *((uint64_t *)&v99 + 1));
    uint64_t v58 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v95 = v58;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)&v95, &qword_10022F490);
    v59._countAndFlagsBits = 5972026;
    v59._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v59);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v95 = v54;
    uint64_t v96 = v56;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)&v95, &qword_10022F490);
    v60._countAndFlagsBits = 93;
    v60._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v60);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v66._countAndFlagsBits = 0;
    v66._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v66);
    sub_100049788(&v98, *((uint64_t *)&v99 + 1));
    uint64_t v67 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v95 = v67;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)&v95, &qword_10022F490);
    v68._countAndFlagsBits = 58;
    v68._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v68);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v98);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v69._countAndFlagsBits = 0xD000000000000013;
  v69._object = (void *)0x80000001001CFBD0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v69);
  *((void *)&v99 + 1) = &type metadata for String;
  *(void *)&long long v98 = v87;
  *((void *)&v98 + 1) = v91;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10004357C((uint64_t)&v98, &qword_10022F490);
  v70._countAndFlagsBits = 0x203A617461642029;
  v70._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v70);
  if (v51)
  {
    *((void *)&v99 + 1) = &type metadata for String;
    *(void *)&long long v98 = v49;
    *((void *)&v98 + 1) = v51;
  }
  else
  {
    long long v98 = 0u;
    long long v99 = 0u;
  }
  LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
  sub_10004357C((uint64_t)&v98, &qword_10022F490);
  v71._countAndFlagsBits = 0;
  v71._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v71);
  LogMessage.init(stringInterpolation:)();
  uint64_t v72 = static os_log_type_t.default.getter();
  sub_10004841C(v72);
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v88, v92);
}

uint64_t sub_10001A338()
{
  uint64_t v0 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_10001AA98();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = self;
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    unsigned int v6 = [v4 isValidJSONObject:isa];

    if (v6)
    {
      Class v7 = Dictionary._bridgeToObjectiveC()().super.isa;
      v61[0] = 0;
      id v8 = [v4 dataWithJSONObject:v7 options:2 error:v61];

      id v9 = v61[0];
      if (v8)
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v12 = v11;

        static String.Encoding.utf8.getter();
        uint64_t v13 = String.init(data:encoding:)();
        sub_10004B278(v10, v12);
        return v13;
      }
      uint64_t v38 = v9;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
      sub_100043478(&qword_10022E560);
      uint64_t v39 = type metadata accessor for LogMessage();
      sub_100044798(v39);
      *(_OWORD *)(sub_1000487B4() + 16) = xmmword_1001C3120;
      uint64_t v40 = type metadata accessor for JSONObject();
      sub_100046358(v40);
      sub_10004AC34();
      sub_100048DA8();
      v41();
      id v42 = (id)AMSLogKey();
      if (v42)
      {
        uint64_t v43 = v42;
        uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v46 = v45;

        swift_bridgeObjectRetain();
        sub_100049814();
        sub_100044E44();
        sub_100044AE0();
        uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
        sub_100043C38(MetatypeMetadata);
        sub_1000423CC((uint64_t)&v58);
        sub_100020E44();
        Swift::String v60 = &type metadata for String;
        uint64_t v58 = v44;
        uint64_t v59 = v46;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v58);
        v48._countAndFlagsBits = 93;
        v48._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v48);
        sub_100046D6C();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020ECC();
        sub_100044E44();
        sub_100044AE0();
        uint64_t v53 = swift_getMetatypeMetadata();
        sub_100043C38(v53);
        sub_1000423CC((uint64_t)&v58);
        v54._countAndFlagsBits = 58;
        v54._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v54);
        sub_100046D6C();
      }
      sub_10004377C((uint64_t)v61);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      unint64_t v52 = 0x80000001001D1F50;
      unint64_t v51 = 0xD000000000000015;
    }
    else
    {
      sub_100043478(&qword_10022E560);
      uint64_t v24 = type metadata accessor for LogMessage();
      sub_100044798(v24);
      *(_OWORD *)(sub_1000487B4() + 16) = xmmword_1001C3120;
      uint64_t v25 = type metadata accessor for JSONObject();
      sub_100046358(v25);
      sub_10004AC34();
      sub_100048DA8();
      v26();
      id v27 = (id)AMSLogKey();
      if (v27)
      {
        uint64_t v28 = v27;
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v31 = v30;

        swift_bridgeObjectRetain();
        sub_100049814();
        sub_100044E44();
        sub_100044AE0();
        uint64_t v32 = swift_getMetatypeMetadata();
        sub_100043C38(v32);
        sub_1000423CC((uint64_t)&v58);
        sub_100020E44();
        Swift::String v60 = &type metadata for String;
        uint64_t v58 = v29;
        uint64_t v59 = v31;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v58);
        v33._countAndFlagsBits = 93;
        v33._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v33);
        sub_100046D6C();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020ECC();
        sub_100044E44();
        sub_100044AE0();
        uint64_t v49 = swift_getMetatypeMetadata();
        sub_100043C38(v49);
        sub_1000423CC((uint64_t)&v58);
        v50._countAndFlagsBits = 58;
        v50._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v50);
        sub_100046D6C();
      }
      sub_10004377C((uint64_t)v61);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      unint64_t v51 = 0xD00000000000002BLL;
      unint64_t v52 = 0x80000001001D1F20;
    }
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v51);
    v61[3] = (id)sub_100043478(&qword_10022D6F0);
    v61[0] = v3;
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
    sub_1000423CC((uint64_t)v61);
    v55._countAndFlagsBits = 0;
    v55._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v55);
  }
  else
  {
    sub_100043478(&qword_10022E560);
    uint64_t v14 = type metadata accessor for LogMessage();
    sub_100044798(v14);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v15 = type metadata accessor for JSONObject();
    sub_100046358(v15);
    sub_10004AC34();
    sub_100048DA8();
    v16();
    id v17 = (id)AMSLogKey();
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      swift_bridgeObjectRetain();
      sub_100049814();
      sub_100044E44();
      sub_100044AE0();
      uint64_t v22 = swift_getMetatypeMetadata();
      sub_100043C38(v22);
      sub_1000423CC((uint64_t)&v58);
      sub_100020E44();
      Swift::String v60 = &type metadata for String;
      uint64_t v58 = v19;
      uint64_t v59 = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v58);
      v23._countAndFlagsBits = 93;
      v23._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020ECC();
      sub_100044E44();
      sub_100044AE0();
      uint64_t v34 = swift_getMetatypeMetadata();
      sub_100043C38(v34);
      sub_1000423CC((uint64_t)&v58);
      v35._countAndFlagsBits = 58;
      v35._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v61);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v36._countAndFlagsBits = 0xD000000000000028;
    v36._object = (void *)0x80000001001D1EF0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    JSONObject.untyped.getter();
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
    sub_1000423CC((uint64_t)v61);
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  }
  LogMessage.init(stringInterpolation:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v56 = static os_log_type_t.error.getter();
  sub_10004841C(v56);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10001AA98()
{
  JSONObject.untyped.getter();
  if (v3)
  {
    sub_100043478(&qword_10022D6F0);
    if (swift_dynamicCast()) {
      return v1;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1000423CC((uint64_t)v2);
    return 0;
  }
}

uint64_t sub_10001AB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022FE30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001AB74()
{
  return JSStack.withUnsafeContext(_:)();
}

Class sub_10001ABB0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  id v8 = a1;
  uint64_t v9 = sub_10004C838();
  a4(v9, v7);

  swift_bridgeObjectRelease();
  v10.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  return v10.super.isa;
}

void sub_10001AC54()
{
  sub_1000209F4();
  unint64_t v1 = v0;
  unint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_100020658();
  sub_10004CFE8();
  sub_10001AF7C(v3, v1);
  swift_release();
  sub_100020FDC();
}

unint64_t sub_10001AF7C(unint64_t a1, unint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  sub_100040A70();
  _StringGuts.grow(_:)(41);
  swift_bridgeObjectRelease();
  unint64_t v40 = 0xD000000000000022;
  unint64_t v41 = 0x80000001001CBA10;
  uint64_t v7 = v2[3];
  id v8 = (void *)v2[4];
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  sub_1000465EC();
  sub_100048BF0();
  v10._countAndFlagsBits = 0x3F20454B494C20;
  v10._object = (void *)0xE700000000000000;
  String.append(_:)(v10);
  sub_100043478(&qword_10022D780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  *(unsigned char *)(inited + 48) = 3;
  uint64_t v12 = swift_allocObject();
  swift_bridgeObjectRetain();
  *(void *)(v12 + 16) = Dictionary.init(dictionaryLiteral:)();
  uint64_t v13 = v2[2];
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v3;
  uint64_t v14[3] = v12;
  v14[4] = a1;
  v14[5] = a2;
  uint64_t v33 = v13;
  unint64_t v34 = 0xD000000000000022;
  unint64_t v35 = 0x80000001001CBA10;
  uint64_t v36 = inited;
  Swift::String v37 = sub_10005430C;
  uint64_t v38 = v14;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v15 = v43;
  sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)v32);
  if (v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v43 = v12;
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_10022C468 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v16 = type metadata accessor for LogMessage();
    sub_100044798(v16);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    id v42 = (void *)type metadata accessor for AppKeyValueTable();
    unint64_t v40 = (unint64_t)v3;
    swift_retain();
    id v17 = (id)AMSLogKey();
    unint64_t v18 = a2;
    if (v17)
    {
      uint64_t v19 = v17;
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;

      swift_bridgeObjectRetain();
      sub_100020FF4();
      sub_100020E60();
      sub_100049318();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000485C4(MetatypeMetadata);
      sub_10002CC0C((uint64_t)v39, &qword_10022F490);
      sub_100020E44();
      v39[3] = &type metadata for String;
      v39[0] = v20;
      v39[1] = v22;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v39, &qword_10022F490);
      v24._countAndFlagsBits = 93;
      v24._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      sub_10004BE94();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000498B0();
      sub_100020E60();
      sub_100049318();
      uint64_t v25 = swift_getMetatypeMetadata();
      sub_1000485C4(v25);
      sub_10002CC0C((uint64_t)v39, &qword_10022F490);
      v26._countAndFlagsBits = 58;
      v26._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      sub_10004BE94();
    }
    sub_10004377C((uint64_t)&v40);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100047FEC();
    swift_beginAccess();
    uint64_t v27 = v43;
    unint64_t v28 = *(void *)(v43 + 16);
    id v42 = (void *)sub_100043478(&qword_10022E1F8);
    unint64_t v40 = v28;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v40, &qword_10022F490);
    v29._countAndFlagsBits = 0x6E69686374616D20;
    v29._object = (void *)0xEB00000000203A67;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    id v42 = &type metadata for String;
    unint64_t v40 = a1;
    unint64_t v41 = v18;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v40, &qword_10022F490);
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    uint64_t v30 = static os_log_type_t.debug.getter();
    sub_10004841C(v30);
    swift_bridgeObjectRelease();
    a2 = *(void *)(v27 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  return a2;
}

uint64_t sub_10001B4C0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  return sub_10001B4DC(*a1, a2, a3, a4);
}

uint64_t sub_10001B4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if (qword_10022C4B0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_10001B9B4();
  uint64_t v5 = Promise.resolve(_:)();
  return a4(v5);
}

uint64_t sub_10001B584()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10001B5AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_10001B5D4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10001B5FC(uint64_t a1)
{
  return sub_1000A3724(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_10001B604()
{
  return sub_10001B614(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_10001B614(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v28 = a5;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(a1 + 96);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v26 = v17;
  uint64_t v27 = v12;
  *(void *)(a1 + 96) = v22;
  if (qword_10022C4B0 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_10001BB80();
  Swift::String v23 = (void *)swift_allocObject();
  v23[2] = a1;
  void v23[3] = a2;
  v23[4] = a3;
  v23[5] = a4;
  v23[6] = v28;
  v23[7] = a6;
  aBlock[4] = sub_10002FE38;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  aBlock[3] = &unk_1002159B8;
  Swift::String v24 = _Block_copy(aBlock);
  swift_retain();
  a2;
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  Swift::String v29 = _swiftEmptyArrayStorage;
  sub_10001B96C((unint64_t *)&qword_100231DA0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B6DC((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v26);
  return swift_release();
}

uint64_t sub_10001B96C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10001B9B4()
{
  sub_1000209F4();
  uint64_t v0 = sub_1000463B8();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  os_log_type_t v2 = sub_1000468CC();
  if (sub_10004A208(v2))
  {
    static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v3 = sub_100046E18();
    sub_100044798(v3);
    uint64_t v4 = (__n128 *)sub_100048808();
    uint64_t v5 = sub_10004A3D0(v4, (__n128)xmmword_1001C3FC0);
    sub_10002123C(v5);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100043CE0();
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100048E08();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000458E0(MetatypeMetadata);
      sub_1000423CC((uint64_t)v11);
      sub_100020E44();
      sub_100049A34();
      sub_1000423CC((uint64_t)v11);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100043C78();
      uint64_t v8 = swift_getMetatypeMetadata();
      sub_1000472AC(v8);
      sub_1000423CC((uint64_t)v11);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004A588();
    sub_100050DB0();
    sub_1000524E4();
    LogMessage.init(stringLiteral:)();
    uint64_t v9 = sub_10004786C();
    sub_10004AC44(v9, v10);
    sub_1000423CC((uint64_t)&v12);
    sub_100049E30();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10004770C();
    sub_100020FDC();
    swift_release();
  }
}

void sub_10001BB80()
{
  sub_1000209F4();
  uint64_t v0 = sub_1000463B8();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  os_log_type_t v2 = sub_1000468CC();
  if (sub_10004A208(v2))
  {
    static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v3 = sub_100046E18();
    sub_100044798(v3);
    uint64_t v4 = (__n128 *)sub_100048808();
    uint64_t v5 = sub_100043A2C(v4, (__n128)xmmword_1001C3FC0);
    sub_10002123C(v5);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100043CE0();
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100048E08();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000458E0(MetatypeMetadata);
      sub_1000423CC((uint64_t)v11);
      sub_100020E44();
      sub_100049A34();
      sub_1000423CC((uint64_t)v11);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100043C78();
      uint64_t v8 = swift_getMetatypeMetadata();
      sub_1000472AC(v8);
      sub_1000423CC((uint64_t)v11);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004A588();
    sub_1000409B8();
    LogMessage.init(stringLiteral:)();
    uint64_t v9 = sub_10004A724();
    sub_10004AC44(v9, v10);
    sub_1000423CC((uint64_t)&v12);
    sub_100049E30();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10004770C();
    sub_100020FDC();
    swift_release();
  }
}

uint64_t sub_10001BD5C()
{
  return sub_10001BD68(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10001BD68(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v113 = a2;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for OSSignpostID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v108 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v98 - v10;
  uint64_t v12 = *(void **)(a1 + OBJC_IVAR____TtC14amsengagementd16TransactionStore_transactionSet);
  NSString v13 = String._bridgeToObjectiveC()();
  [v12 addObject:v13];

  uint64_t v112 = a1;
  uint64_t v14 = a1 + OBJC_IVAR____TtC14amsengagementd16TransactionStore_signposter;
  String._bridgeToObjectiveC()();
  uint64_t v109 = v14;
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:object:)();
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v12 countForObject:v15];

  uint64_t v110 = v6;
  uint64_t v111 = v11;
  if (v16 == (id)1)
  {
    if (qword_10022C4D0 != -1) {
      swift_once();
    }
    uint64_t v107 = (void (*)(char *, char *, uint64_t))qword_100244138;
    uint64_t v17 = sub_100043478(&qword_10022E560);
    uint64_t v18 = *(void *)(type metadata accessor for LogMessage() - 8);
    uint64_t v19 = *(void *)(v18 + 72);
    uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
    uint64_t v21 = (v20 + 32) & ~v20;
    uint64_t v106 = v17;
    uint64_t v104 = v21 + 2 * v19;
    uint64_t v103 = v20 | 7;
    uint64_t v22 = swift_allocObject();
    long long v102 = xmmword_1001C3120;
    *(_OWORD *)(v22 + 16) = xmmword_1001C3120;
    uint64_t v105 = v21;
    id v101 = (void *)type metadata accessor for TransactionStore();
    v119 = v101;
    uint64_t v117 = v112;
    swift_retain();
    id v23 = (id)AMSLogKey();
    if (v23)
    {
      Swift::String v24 = v23;
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v27 = v26;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v28._countAndFlagsBits = 0;
      v28._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      sub_100049788(&v117, (uint64_t)v119);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v114 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v114);
      v30._countAndFlagsBits = 5972026;
      v30._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v114 = v25;
      uint64_t v115 = v27;
      uint64_t v11 = v111;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v114);
      v31._countAndFlagsBits = 93;
      v31._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v42._countAndFlagsBits = 0;
      v42._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      sub_100049788(&v117, (uint64_t)v119);
      uint64_t v43 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v114 = v43;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v114);
      v44._countAndFlagsBits = 58;
      v44._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v44);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v117);
    uint64_t v100 = v19;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v45._countAndFlagsBits = 0xD000000000000016;
    v45._object = (void *)0x80000001001D8250;
    LogMessage.StringInterpolation.appendLiteral(_:)(v45);
    v119 = &type metadata for String;
    uint64_t v46 = v113;
    uint64_t v117 = v113;
    unint64_t v118 = a3;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v117);
    v47._countAndFlagsBits = 0;
    v47._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v47);
    LogMessage.init(stringInterpolation:)();
    uint64_t v48 = static os_log_type_t.info.getter();
    sub_10004841C(v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v49 = OSSignposter.logHandle.getter();
    int v50 = static os_signpost_type_t.begin.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      uint64_t v107 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      uint64_t v109 = v7;
      unint64_t v51 = v108;
      v107(v108, v11, v6);
      uint64_t v52 = swift_slowAlloc();
      HIDWORD(v99) = v50;
      uint64_t v53 = (uint8_t *)v52;
      uint64_t v117 = swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v114 = sub_100024E94(v113, a3, &v117);
      Swift::String v54 = v111;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      os_signpost_id_t v55 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v49, BYTE4(v99), v55, "Transaction", "%s", v53, 0xCu);
      swift_arrayDestroy();
      uint64_t v46 = v113;
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v56 = v51;
      uint64_t v57 = v109;
      (*(void (**)(char *, uint64_t))(v109 + 8))(v56, v6);
      v107(v56, v54, v6);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      uint64_t v57 = v7;
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v108, v11, v6);
    }
    type metadata accessor for OSSignpostIntervalState();
    swift_allocObject();
    OSSignpostIntervalState.init(id:isOpen:)();
    uint64_t v58 = v112;
    uint64_t v59 = (uint64_t *)(v112 + OBJC_IVAR____TtC14amsengagementd16TransactionStore_transactionSignpostStateStore);
    swift_beginAccess();
    uint64_t v60 = *v59;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_100033C7C(v46, a3, v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v7 = v57;
    if (v61)
    {
      *(_OWORD *)(swift_allocObject() + 16) = v102;
      v119 = v101;
      uint64_t v117 = v58;
      swift_retain();
      id v62 = (id)AMSLogKey();
      if (v62)
      {
        Swift::String v63 = v62;
        uint64_t v109 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v65 = v64;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v66._countAndFlagsBits = 0;
        v66._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v66);
        sub_100049788(&v117, (uint64_t)v119);
        uint64_t v67 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v114 = v67;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v114);
        v68._countAndFlagsBits = 5972026;
        v68._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v68);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v114 = v109;
        uint64_t v115 = v65;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v114);
        v69._countAndFlagsBits = 93;
        v69._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v69);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v81._countAndFlagsBits = 0;
        v81._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v81);
        sub_100049788(&v117, (uint64_t)v119);
        uint64_t v82 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v114 = v82;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v114);
        v83._countAndFlagsBits = 58;
        v83._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v83);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v117);
      LogMessage.init(stringLiteral:)();
      uint64_t v84 = static os_log_type_t.fault.getter();
      sub_10004841C(v84);
      swift_bridgeObjectRelease();
      uint64_t v46 = v113;
    }
    String.utf8CString.getter();
    swift_bridgeObjectRetain();
    uint64_t v85 = os_transaction_create();
    swift_release();
    swift_beginAccess();
    if (v85)
    {
      sub_100006878(v85, v46, a3, v86, v87, v88, v89, v90, v98, v99);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000082B4(v46, a3);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    uint64_t v80 = v110;
    swift_endAccess();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v91 = swift_retain();
    sub_100053A5C(v91, v46, a3, v92, v93, v94, v95, v96, v98, v99);
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v11 = v111;
  }
  else
  {
    if (qword_10022C4D0 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    v119 = (void *)type metadata accessor for TransactionStore();
    uint64_t v117 = v112;
    swift_retain();
    id v32 = (id)AMSLogKey();
    if (v32)
    {
      uint64_t v33 = v32;
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v35 = v7;
      uint64_t v37 = v36;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v38._countAndFlagsBits = 0;
      v38._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      sub_100049788(&v117, (uint64_t)v119);
      uint64_t v39 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v114 = v39;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v114);
      v40._countAndFlagsBits = 5972026;
      v40._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v114 = v34;
      uint64_t v115 = v37;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v114);
      v41._countAndFlagsBits = 93;
      v41._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      LogMessage.init(stringInterpolation:)();
      uint64_t v7 = v35;
      uint64_t v11 = v111;
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v70._countAndFlagsBits = 0;
      v70._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v70);
      sub_100049788(&v117, (uint64_t)v119);
      uint64_t v71 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v114 = v71;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v114);
      v72._countAndFlagsBits = 58;
      v72._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v72);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v117);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v73._object = (void *)0x80000001001D8230;
    v73._countAndFlagsBits = 0xD000000000000014;
    LogMessage.StringInterpolation.appendLiteral(_:)(v73);
    v119 = &type metadata for String;
    uint64_t v117 = v113;
    unint64_t v118 = a3;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v117);
    v74._countAndFlagsBits = 0;
    v74._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v74);
    LogMessage.init(stringInterpolation:)();
    uint64_t v75 = static os_log_type_t.info.getter();
    sub_10004841C(v75);
    swift_bridgeObjectRelease();
    Swift::String v76 = OSSignposter.logHandle.getter();
    os_signpost_type_t v77 = static os_signpost_type_t.event.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v78 = 0;
      os_signpost_id_t v79 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v76, v77, v79, "Transaction", "Transaction joined", v78, 2u);
      swift_slowDealloc();
    }

    uint64_t v80 = v110;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, v80);
}

uint64_t sub_10001CAF0()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v1 = *v0;
  sub_100020EBC();
  *os_log_type_t v2 = v1;
  swift_task_dealloc();
  sub_100040954();
  return v3();
}

uint64_t sub_10001CBB4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10001CBDC()
{
  return sub_10001CC28(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10001CC28(uint64_t a1, uint64_t a2)
{
  *(void *)(swift_allocObject() + 16) = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000502F8();
  uint64_t v3 = v2;
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_10001CCE8()
{
  return sub_10001CC28(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10001CD34(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = a1;
  uint64_t v7 = sub_10004C838();
  a4(v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10001CD9C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = swift_bridgeObjectRetain() + 40;
    do
    {
      sub_1000476EC();
      sub_10004C46C();
      sub_10002CBB4((uint64_t)&v3, &qword_10022F490);
      swift_bridgeObjectRelease();
      v2 += 16;
      --v1;
    }
    while (v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10001CE30(uint64_t *a1, uint64_t a2, NSString a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v43 = a5;
  uint64_t v44 = a6;
  uint64_t v11 = type metadata accessor for JSRequest();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v46 = v13;
  Swift::String v47 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v14 - 8);
  uint64_t v45 = *a1;
  if (a3) {
    a3 = String._bridgeToObjectiveC()();
  }

  if (qword_10022C470 != -1) {
    swift_once();
  }
  uint64_t v42 = qword_1002440D8;
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  unint64_t v51 = (void *)type metadata accessor for JSAppEngine();
  v50[0] = a4;
  swift_retain();
  id v15 = (id)AMSLogKey();
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v41 = a7;
    uint64_t v18 = v11;
    uint64_t v20 = v19;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    sub_100049788(v50, (uint64_t)v51);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v48[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v48, &qword_10022F490);
    v23._countAndFlagsBits = 5972026;
    v23._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    uint64_t MetatypeMetadata = &type metadata for String;
    v48[0] = v17;
    v48[1] = v20;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v48, &qword_10022F490);
    v24._countAndFlagsBits = 93;
    v24._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    LogMessage.init(stringInterpolation:)();
    uint64_t v11 = v18;
    a7 = v41;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    sub_100049788(v50, (uint64_t)v51);
    uint64_t v26 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v48[0] = v26;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v48, &qword_10022F490);
    v27._countAndFlagsBits = 58;
    v27._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v50);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v28._object = (void *)0x80000001001CFBF0;
  v28._countAndFlagsBits = 0xD000000000000014;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  unint64_t v51 = &type metadata for String;
  v50[0] = v43;
  v50[1] = v44;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10004357C((uint64_t)v50, &qword_10022F490);
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  LogMessage.init(stringInterpolation:)();
  uint64_t v30 = static os_log_type_t.default.getter();
  sub_10004841C(v30);
  swift_bridgeObjectRelease();
  type metadata accessor for JSStack();
  type metadata accessor for BaseObjectGraph();
  inject<A, B>(_:from:)();
  uint64_t v31 = v50[0];
  JSStack.withUnsafeContext(_:)();
  uint64_t v32 = JSRequest.timeoutInterval.getter();
  if ((v33 & 1) == 0) {
    sub_10001D3D4(*(double *)&v32);
  }
  uint64_t v34 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v47, a7, v11);
  unint64_t v35 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v31;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v36 + v35, v34, v11);
  swift_retain();
  sub_10001D9F8((uint64_t (*)(CFIndex))sub_10001E240, v36);
  swift_release();
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a4;
  *(void *)(v37 + 24) = v31;
  swift_retain();
  swift_retain();
  uint64_t v38 = sub_100039E88((uint64_t)sub_10001AB74, v37);
  swift_release();
  swift_release();
  swift_release();
  return v38;
}

uint64_t sub_10001D3D4(double a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_100011D4C();
  if (qword_10022C470 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v6 = type metadata accessor for LogMessage();
  sub_100044798(v6);
  *(_OWORD *)(sub_1000471E4() + 16) = xmmword_1001C3120;
  uint64_t v22 = (void *)type metadata accessor for JSAppEngine();
  v21[0] = v1;
  swift_retain();
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v21, (uint64_t)v22);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v19[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v19, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v19[0] = v9;
    v19[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v19, &qword_10022F490);
    sub_1000208D8();
    sub_10001D6F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049788(v21, (uint64_t)v22);
    uint64_t v13 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v19[0] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v19, &qword_10022F490);
    sub_100020E94();
    sub_10001D6F8();
  }
  sub_10004377C((uint64_t)v21);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._object = (void *)0x80000001001CFA90;
  v14._countAndFlagsBits = 0xD000000000000027;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  uint64_t v22 = &type metadata for Double;
  *(double *)Swift::String v21 = a1;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10004357C((uint64_t)v21, &qword_10022F490);
  v15._countAndFlagsBits = 41;
  v15._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  sub_10001D6F8();
  uint64_t v16 = static os_log_type_t.info.getter();
  sub_10004841C(v16);
  swift_bridgeObjectRelease();
  uint64_t v17 = swift_allocObject();
  *(double *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = v3;
  JSStack.withUnsafeContext(_:)();
  return swift_release();
}

uint64_t sub_10001D6F8()
{
  return LogMessage.init(stringInterpolation:)();
}

void sub_10001D710(double a1)
{
  *uint64_t v1 = (uint64_t)a1;
}

void sub_10001D71C()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  sub_100011D4C();
  if (*(void *)(v0 + 96))
  {
    type metadata accessor for JSStack();
    type metadata accessor for BaseObjectGraph();
    swift_retain();
    inject<A, B>(_:from:)();
    if (qword_10022C470 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v3 = type metadata accessor for LogMessage();
    sub_100044798(v3);
    *(_OWORD *)(sub_1000471E4() + 16) = xmmword_1001C3120;
    uint64_t v15 = type metadata accessor for JSAppEngine();
    v14[0] = v0;
    swift_retain();
    id v4 = (id)AMSLogKey();
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v8 = v7;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100049788(v14, v15);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v12[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)v12, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      v12[0] = v6;
      v12[1] = v8;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)v12, &qword_10022F490);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100049788(v14, v15);
      uint64_t v10 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v12[0] = v10;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)v12, &qword_10022F490);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004377C((uint64_t)v14);
    LogMessage.init(stringLiteral:)();
    uint64_t v11 = static os_log_type_t.debug.getter();
    sub_10004841C(v11);
    swift_bridgeObjectRelease();
    JSStack.requestGarbageCollection()();
    swift_release();
    swift_release();
  }
}

uint64_t type metadata accessor for JSAppEngine()
{
  return self;
}

uint64_t sub_10001D9F8(uint64_t (*a1)(CFIndex), uint64_t a2)
{
  id v62 = a1;
  uint64_t v63 = a2;
  uint64_t v58 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v60 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  id v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v61 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v59 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTimeInterval();
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v56 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v57 = (char *)&v49 - v14;
  uint64_t v15 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v15 - 8);
  type metadata accessor for Defaults();
  CFIndex v16 = sub_10003A7F4(2);
  if (v17) {
    return v62(v16);
  }
  CFIndex v18 = v16;
  if (v16 < 1) {
    return v62(v16);
  }
  uint64_t v53 = v5;
  if (qword_10022C470 != -1) {
    swift_once();
  }
  uint64_t v52 = v4;
  uint64_t v51 = qword_1002440D8;
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v65 = (void *)type metadata accessor for JSAppEngine();
  aBlock[0] = v2;
  swift_retain();
  id v19 = (id)AMSLogKey();
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    sub_100049788(aBlock, (uint64_t)v65);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v68[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v68, &qword_10022F490);
    v25._countAndFlagsBits = 5972026;
    v25._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    uint64_t MetatypeMetadata = &type metadata for String;
    v68[0] = v50;
    v68[1] = v22;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v68, &qword_10022F490);
    v26._countAndFlagsBits = 93;
    v26._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    sub_100049788(aBlock, (uint64_t)v65);
    uint64_t v29 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v68[0] = v29;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v68, &qword_10022F490);
    v30._countAndFlagsBits = 58;
    v30._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)aBlock);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v31._countAndFlagsBits = 0x676E69796C707041;
  v31._object = (void *)0xE900000000000020;
  LogMessage.StringInterpolation.appendLiteral(_:)(v31);
  uint64_t v65 = &type metadata for Int;
  aBlock[0] = v18;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10004357C((uint64_t)aBlock, &qword_10022F490);
  v32._object = (void *)0x80000001001CFC10;
  v32._countAndFlagsBits = 0xD000000000000011;
  LogMessage.StringInterpolation.appendLiteral(_:)(v32);
  LogMessage.init(stringInterpolation:)();
  uint64_t v33 = static os_log_type_t.info.getter();
  sub_10004841C(v33);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022FE00);
  uint64_t v34 = Promise.__allocating_init()();
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  uint64_t v35 = v34;
  uint64_t v50 = v34;
  swift_retain();
  uint64_t v51 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  CFIndex *v9 = v18;
  uint64_t v37 = v55;
  uint64_t v36 = v56;
  (*(void (**)(CFIndex *, void, uint64_t))(v55 + 104))(v9, enum case for DispatchTimeInterval.seconds(_:), v56);
  uint64_t v38 = v57;
  + infix(_:_:)();
  (*(void (**)(CFIndex *, uint64_t))(v37 + 8))(v9, v36);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v54 + 8);
  v39(v13, v10);
  uint64_t v40 = (void *)swift_allocObject();
  uint64_t v41 = v62;
  uint64_t v42 = v63;
  v40[2] = v35;
  v40[3] = v41;
  v40[4] = v42;
  Swift::String v66 = sub_1000D1098;
  uint64_t v67 = v40;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  uint64_t v65 = &unk_1002112C8;
  uint64_t v43 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v44 = v10;
  uint64_t v45 = v59;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10002352C();
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B6DC((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  uint64_t v46 = v52;
  uint64_t v47 = v58;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v48 = (void *)v51;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v43);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v46, v47);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v45, v53);
  v39(v38, v44);
  return v50;
}

uint64_t sub_10001E240()
{
  uint64_t v0 = type metadata accessor for JSRequest();
  sub_100044E90(v0);
  return JSStack.performRequest(_:)();
}

uint64_t sub_10001E284(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, _OWORD *))
{
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;
  if (a4)
  {
    id v11 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
    id v12 = a1;
  }
  a5(v8, v10, v14);

  swift_bridgeObjectRelease();
  return sub_10002CBB4((uint64_t)v14, &qword_10022F490);
}

void sub_10001E334(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  if (*a1 == 1)
  {
    if (qword_10022C4D8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v23 = type metadata accessor for TreatmentStoreService();
    v22[0] = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    sub_100049788(v22, v23);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v19 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)&v19, &qword_10022F490);
    v11._countAndFlagsBits = 5972026;
    v11._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v19 = a3;
    uint64_t v20 = a4;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)&v19, &qword_10022F490);
    v12._countAndFlagsBits = 93;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)v22);
    LogMessage.init(stringLiteral:)();
    uint64_t v13 = static os_log_type_t.info.getter();
    sub_10004841C(v13);
    swift_bridgeObjectRelease();
    sub_100197010();
  }
  else
  {
    if (qword_10022C4D8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v23 = type metadata accessor for TreatmentStoreService();
    v22[0] = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    sub_100049788(v22, v23);
    uint64_t v15 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v19 = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)&v19, &qword_10022F490);
    v16._countAndFlagsBits = 5972026;
    v16._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v19 = a3;
    uint64_t v20 = a4;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)&v19, &qword_10022F490);
    v17._countAndFlagsBits = 93;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)v22);
    LogMessage.init(stringLiteral:)();
    uint64_t v18 = static os_log_type_t.info.getter();
    sub_10004841C(v18);
    swift_bridgeObjectRelease();
    sub_100043478(&qword_10022F198);
    Promise.__allocating_init(value:)();
  }
}

id sub_10001E78C(void *a1)
{
  return sub_10001E7A8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

id sub_10001E7A8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Bag();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100043478(&qword_10022FF10);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2 + OBJC_IVAR____TtC14amsengagementd5JSBag_bag, v6);
  id result = (id)sub_10001EA1C(a3);
  if (!v15)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Bag.subscript.getter();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  Bag.Value.currentOrNil()();
  uint64_t v17 = v22;
  if (v22)
  {
    uint64_t v18 = v21;
    sub_10004D510(0, &qword_10022FEE0);
    uint64_t v23 = &type metadata for String;
    uint64_t v21 = v18;
    uint64_t v22 = v17;
    id v19 = a1;
    id result = sub_10001EA80(&v21, a1);
    if (result)
    {
      id v20 = result;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return v20;
    }
    goto LABEL_8;
  }
  id result = [self valueWithUndefinedInContext:a1];
  id v20 = result;
  if (result) {
    goto LABEL_6;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10001EA1C(void *a1)
{
  id v1 = [a1 toString];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

id sub_10001EA80(void *a1, void *a2)
{
  uint64_t v3 = a1[3];
  if (v3)
  {
    uint64_t v5 = sub_100049788(a1, a1[3]);
    uint64_t v6 = *(void *)(v3 - 8);
    __chkstk_darwin(v5);
    uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v3);
    sub_10004377C((uint64_t)a1);
  }
  else
  {
    uint64_t v9 = 0;
  }
  id v10 = [(id)swift_getObjCClassFromMetadata() valueWithObject:v9 inContext:a2];
  swift_unknownObjectRelease();

  return v10;
}

id sub_10001EBD4(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  return v7;
}

uint64_t sub_10001EC54(SEL *a1)
{
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC14amsengagementd9JSAccount_account) *a1];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

void *sub_10001ECC4()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC14amsengagementd9JSAccount_account), "ams_DSID");
  id v2 = v1;
  if (v1)
  {
    id v3 = [v1 stringValue];

    id v2 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return v2;
}

uint64_t sub_10001ED54()
{
  return sub_10001EC54((SEL *)&selRef_ams_firstName);
}

uint64_t sub_10001ED60()
{
  return sub_10001EC54((SEL *)&selRef_username);
}

uint64_t sub_10001ED6C()
{
  return sub_10001EC54((SEL *)&selRef_ams_lastName);
}

uint64_t sub_10001ED78()
{
  return sub_10001EC54((SEL *)&selRef_ams_fullName);
}

uint64_t sub_10001ED84()
{
  return sub_10001EC54((SEL *)&selRef_ams_storefront);
}

uint64_t sub_10001ED90()
{
  id v2 = (int *)type metadata accessor for JSStackContext();
  uint64_t v3 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(*((void *)v2 - 1) + 64);
  uint64_t v6 = type metadata accessor for URL();
  NSString v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v0 + v4, v6);
  if (!sub_100043D78(v2[5])) {
    v7(v1, v6);
  }
  uint64_t v8 = sub_1000453E0(v2[6]);
  ((void (*)(uint64_t))v7)(v8);
  uint64_t v9 = sub_1000453E0(v2[7]);
  ((void (*)(uint64_t))v7)(v9);
  if (!sub_100043D78(v2[8])) {
    v7(v1, v6);
  }
  uint64_t v10 = sub_1000453E0(v2[9]);
  ((void (*)(uint64_t))v7)(v10);
  uint64_t v11 = sub_1000453E0(v2[10]);
  ((void (*)(uint64_t))v7)(v11);

  return _swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10001EF08()
{
  type metadata accessor for JSStackContext();
  sub_1000469A8();
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = type metadata accessor for URL();
  sub_100043B1C();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v1 + v5, v8);
  if (!sub_100043D78(v0[5])) {
    v10(v2, v8);
  }
  uint64_t v11 = sub_1000453E0(v0[6]);
  ((void (*)(uint64_t))v10)(v11);
  uint64_t v12 = sub_1000453E0(v0[7]);
  ((void (*)(uint64_t))v10)(v12);
  if (!sub_100043D78(v0[8])) {
    v10(v2, v8);
  }
  uint64_t v13 = sub_1000453E0(v0[9]);
  ((void (*)(uint64_t))v10)(v13);
  uint64_t v14 = sub_1000453E0(v0[10]);
  ((void (*)(uint64_t))v10)(v14);

  return _swift_deallocObject(v1, v5 + v7, v4 | 7);
}

uint64_t sub_10001F04C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v121 = a3;
  type metadata accessor for DispatchQoS.QoSClass();
  sub_100020DEC();
  uint64_t v119 = v6;
  uint64_t v120 = v5;
  __chkstk_darwin(v5);
  sub_100040A70();
  uint64_t v118 = v7;
  sub_100043478(&qword_100232950);
  sub_100020DEC();
  uint64_t v116 = v9;
  uint64_t v117 = v8;
  __chkstk_darwin(v8);
  sub_100040A70();
  uint64_t v115 = v10;
  sub_100043478(&qword_100232A48);
  sub_100020DEC();
  uint64_t v113 = v12;
  uint64_t v114 = v11;
  __chkstk_darwin(v11);
  sub_100040A70();
  uint64_t v112 = v13;
  uint64_t v111 = sub_100043478(&qword_100232960);
  sub_100020DEC();
  uint64_t v110 = v14;
  __chkstk_darwin(v15);
  sub_100040A70();
  sub_1000464A0(v16);
  uint64_t v122 = sub_100043478(&qword_100232968);
  sub_100020DEC();
  uint64_t v109 = v17;
  __chkstk_darwin(v18);
  sub_100040A70();
  sub_1000464A0(v19);
  uint64_t v107 = sub_100043478(&qword_100232A50);
  sub_100020DEC();
  uint64_t v106 = v20;
  __chkstk_darwin(v21);
  sub_100040A70();
  sub_1000464A0(v22);
  uint64_t v104 = sub_100043478(&qword_100232A58);
  sub_100020DEC();
  uint64_t v103 = v23;
  __chkstk_darwin(v24);
  sub_100040A70();
  sub_1000464A0(v25);
  id v105 = (id)type metadata accessor for JSStackContext();
  sub_100020DEC();
  uint64_t v99 = v26;
  __chkstk_darwin(v27);
  uint64_t v100 = v28;
  sub_1000464A0((uint64_t)&v92 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v102 = sub_100043478(&qword_100232A60);
  sub_100020DEC();
  uint64_t v101 = v29;
  __chkstk_darwin(v30);
  sub_100040A70();
  sub_1000464A0(v31);
  uint64_t v98 = sub_100043478(&qword_100232980);
  sub_100020DEC();
  uint64_t v97 = v32;
  __chkstk_darwin(v33);
  sub_100020EAC();
  uint64_t v96 = sub_100043478(&qword_100232988);
  sub_100020DEC();
  uint64_t v95 = v34;
  __chkstk_darwin(v35);
  sub_100020EAC();
  uint64_t v36 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v36 - 8);
  sub_100020EAC();
  if (qword_10022C470 != -1) {
    swift_once();
  }
  uint64_t v94 = qword_1002440D8;
  sub_100043478(&qword_10022E560);
  uint64_t v37 = type metadata accessor for LogMessage();
  sub_100044798(v37);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  v124 = &type metadata for RemoteJetpackV2Loader;
  id v38 = (id)AMSLogKey();
  if (v38)
  {
    uint64_t v39 = v38;
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v92 = a1;
    uint64_t v41 = a2;
    uint64_t v43 = v42;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v44._countAndFlagsBits = 0;
    v44._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v44);
    uint64_t v45 = sub_100044C7C();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v126[0] = v45;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v126, &qword_10022F490);
    v46._countAndFlagsBits = 5972026;
    v46._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    uint64_t MetatypeMetadata = &type metadata for String;
    v126[0] = v40;
    v126[1] = v43;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v126, &qword_10022F490);
    v47._countAndFlagsBits = 93;
    v47._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v47);
    LogMessage.init(stringInterpolation:)();
    a2 = v41;
    a1 = v92;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v48._countAndFlagsBits = 0;
    v48._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v48);
    uint64_t v49 = sub_100044C7C();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v126[0] = v49;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v126, &qword_10022F490);
    v50._countAndFlagsBits = 58;
    v50._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v50);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v123);
  LogMessage.init(stringLiteral:)();
  uint64_t v51 = static os_log_type_t.info.getter();
  sub_10004841C(v51);
  swift_bridgeObjectRelease();
  sub_10004D510(0, &qword_10022FDF0);
  type metadata accessor for BaseObjectGraph();
  inject<A, B>(_:from:)();
  uint64_t v52 = v123;
  sub_100043478(&qword_10022FB40);
  static Pipeline.start<A>(with:)();
  sub_10004D510(0, &qword_10022FDE8);
  inject<A, B>(_:from:)();
  uint64_t v53 = v123;
  if (qword_10022C3E0 != -1) {
    swift_once();
  }
  uint64_t v54 = qword_10022D990;
  swift_unknownObjectRetain();
  id v105 = v52;
  sub_100009924(a1, a2, v53, v52, v54);

  swift_unknownObjectRelease();
  type metadata accessor for URL();
  sub_10002B6DC(&qword_1002329A8, &qword_100232988);
  uint64_t v55 = PipelineTask.andThen<A>(_:)();
  sub_100043FB0();
  v56();
  sub_100043FB0();
  v57();
  v123 = (void *)v55;
  BOOL v59 = !sub_10004EF18()
     || (type metadata accessor for Defaults(), char v58 = sub_10003A8F4(0), v58 == 2)
     || (v58 & 1) == 0;
  uint64_t v60 = v108;
  sub_100020130(a2, v108);
  uint64_t v61 = *(unsigned __int8 *)(v99 + 80);
  uint64_t v62 = ((v61 + 16) & ~v61) + v100;
  uint64_t v63 = (v61 + 16) & ~v61;
  uint64_t v121 = v63;
  uint64_t v100 = v61 | 7;
  uint64_t v64 = v62;
  uint64_t v65 = swift_allocObject();
  sub_1000200CC(v60, v65 + v63);
  *(unsigned char *)(v65 + v64) = v59;
  uint64_t v99 = v64;
  type metadata accessor for DiskJetPackResourceBundle();
  PipelinePhase.init(mapOutput:)();
  sub_100043478(&qword_1002329B0);
  uint64_t v93 = a2;
  sub_10002B6DC(&qword_1002329B8, &qword_1002329B0);
  uint64_t v66 = PipelineTask.andThen<A>(_:)();
  sub_100043FB0();
  v67();
  swift_release();
  v123 = (void *)v66;
  static PipelinePhase.cacheValueIfSuccessful()();
  sub_100043478(&qword_100232A68);
  sub_10004604C(&qword_100232A70);
  uint64_t v68 = PipelineTask.andThen<A>(_:)();
  sub_100043FB0();
  v69();
  swift_release();
  v123 = (void *)v68;
  uint64_t v102 = v68;
  PipelinePhase.init(mapOutput:)();
  uint64_t v104 = sub_100043478(&qword_100232A78);
  uint64_t v103 = sub_10002B6DC(&qword_100232A80, &qword_100232A78);
  uint64_t v70 = PipelineTask.andThen<A>(_:)();
  sub_1000212E0();
  sub_100043FB0();
  v71();
  v123 = (void *)v70;
  sub_100020130(a2, v60);
  uint64_t v72 = swift_allocObject();
  sub_1000200CC(v60, v72 + v121);
  type metadata accessor for JSPackageIndex();
  PipelinePhase.init(mapOutput:)();
  sub_100043478(&qword_100232A88);
  sub_10004604C(&qword_100232A90);
  uint64_t v73 = PipelineTask.andThen<A>(_:)();
  sub_1000212E0();
  sub_100043FB0();
  v74();
  swift_release();
  v123 = (void *)v73;
  static PipelinePhase.cacheValueIfSuccessful()();
  sub_100043478(&qword_100232A00);
  sub_10004604C(&qword_100232A08);
  uint64_t v122 = PipelineTask.andThen<A>(_:)();
  sub_1000212E0();
  sub_100043FB0();
  v75();
  swift_release();
  v123 = (void *)v68;
  sub_100020130(v93, v60);
  uint64_t v76 = swift_allocObject();
  sub_1000200CC(v60, v76 + v121);
  sub_100043478(&qword_100232A10);
  PipelinePhase.init(mapOutput:)();
  uint64_t v77 = PipelineTask.andThen<A>(_:)();
  sub_100043FB0();
  v78();
  v123 = (void *)v77;
  static PipelinePhase.cacheValueIfSuccessful()();
  sub_100043478(&qword_100232A98);
  sub_10004604C(&qword_100232AA0);
  uint64_t v121 = PipelineTask.andThen<A>(_:)();
  sub_100043FB0();
  v79();
  swift_release();
  dispatch thunk of MapPipelineTask.run()();
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  uint64_t v80 = enum case for DispatchQoS.QoSClass.default(_:);
  uint64_t v81 = v118;
  uint64_t v82 = v119;
  Swift::String v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 104);
  uint64_t v84 = v120;
  v83(v118, enum case for DispatchQoS.QoSClass.default(_:), v120);
  uint64_t v85 = (void *)static OS_dispatch_queue.global(qos:)();
  uint64_t v86 = *(void (**)(uint64_t))(v82 + 8);
  uint64_t v87 = sub_10004C058();
  v86(v87);
  uint64_t v119 = sub_10001FFAC((uint64_t)sub_100162414, 0, v85);

  swift_release();
  dispatch thunk of MapPipelineTask.run()();
  v124 = (ValueMetadata *)type metadata accessor for SyncTaskScheduler();
  v125 = &protocol witness table for SyncTaskScheduler;
  sub_10003BAA4((uint64_t *)&v123);
  SyncTaskScheduler.init()();
  Promise.map<A>(on:_:)();
  swift_release();
  sub_10004377C((uint64_t)&v123);
  v83(v81, v80, v84);
  uint64_t v88 = (void *)static OS_dispatch_queue.global(qos:)();
  uint64_t v89 = sub_10004C058();
  v86(v89);
  sub_10001FFAC((uint64_t)sub_1000540B4, 0, v88);

  swift_release();
  sub_100043478(&qword_100232A28);
  sub_10002B6DC(&qword_100232A30, &qword_100232A28);
  uint64_t v90 = Promise.join<A>(with:)();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v90;
}

uint64_t sub_10001FFAC(uint64_t a1, uint64_t a2, void *a3)
{
  v10[3] = sub_10004D510(0, (unint64_t *)&qword_10022F690);
  v10[4] = &protocol witness table for OS_dispatch_queue;
  v10[0] = a3;
  id v6 = a3;
  uint64_t v7 = Promise.__allocating_init()();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = a1;
  v8[4] = a2;
  swift_retain_n();
  swift_retain();
  Promise.then(perform:orCatchError:on:)();
  swift_release();
  swift_release();
  sub_10004377C((uint64_t)v10);
  return v7;
}

uint64_t sub_1000200CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSStackContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100020130(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSStackContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for JSStackContext()
{
  uint64_t result = qword_1002305D8;
  if (!qword_1002305D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_1000201DC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (sub_10004FD40((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_100043478(&qword_10022FB40);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    sub_100021AC0((uint64_t)v9, 0, 1, v6);
  }
  v7(&a1[a3[6]], &a2[a3[6]], v6);
  v7(&a1[a3[7]], &a2[a3[7]], v6);
  uint64_t v12 = a3[8];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  if (sub_10004FD40((uint64_t)&a2[v12], 1, v6))
  {
    uint64_t v15 = sub_100043478(&qword_10022FB40);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v7(v13, v14, v6);
    sub_100021AC0((uint64_t)v13, 0, 1, v6);
  }
  v7(&a1[a3[9]], &a2[a3[9]], v6);
  v7(&a1[a3[10]], &a2[a3[10]], v6);
  uint64_t v16 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  uint64_t v17 = *(void **)&a2[v16];
  *(void *)&a1[v16] = v17;
  id v18 = v17;
  return a1;
}

uint64_t sub_1000203E0()
{
  sub_10004A41C();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = (int *)v0[4];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_10002219C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_100052880;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1002344D0 + dword_1002344D0);
  return v9(v2, v3, v4, v5);
}

uint64_t sub_1000204A4(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = (int *)v1[4];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_10002219C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1001B9F44;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1002350F8 + dword_1002350F8);
  return v9(a1, v3, v4, v5);
}

uint64_t sub_10002056C()
{
  sub_100041F70();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10002219C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100045A38;
  uint64_t v3 = sub_100022570();
  return v4(v3);
}

uint64_t sub_10002060C()
{
  return v0;
}

uint64_t sub_100020630(uint64_t a1)
{
  return *(void *)(v1 + 56) + 32 * a1;
}

uint64_t sub_10002068C()
{
  return v0;
}

uint64_t sub_10002069C(uint64_t a1)
{
  *(void *)(v2 - 120) = a1;
  *(void *)(v2 - 144) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

void sub_1000206BC(uint64_t a1)
{
  sub_10002D078(a1, a1);
}

uint64_t sub_1000206E8()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100020704()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_100020740()
{
  sub_100041F70();
  uint64_t v2 = v1;
  uint64_t v3 = *(int **)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10002219C(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_100045A38;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1002344E0 + dword_1002344E0);
  return v7(v2, v3);
}

uint64_t sub_1000207F0(uint64_t a1)
{
  uint64_t v3 = *(int **)(v1 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10002219C(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1000699CC;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100235108 + dword_100235108);
  return v7(a1, v3);
}

uint64_t sub_1000208A4()
{
  return 0x6564756C637865;
}

uint64_t sub_1000208BC()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

void sub_1000208D8()
{
  uint64_t v1 = 93;
  unint64_t v2 = 0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_1000208F0(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_1000208FC()
{
  return type metadata accessor for LogMessage();
}

uint64_t sub_100020930()
{
  return swift_allocObject();
}

uint64_t sub_100020980()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

void sub_1000209B4()
{
  uint64_t v1 = 0x3B5458455420;
  unint64_t v2 = 0xE600000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_1000209D8()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100020A0C()
{
  *(unsigned char *)(v0 - 66) = 1;
  return v0 - 66;
}

uint64_t sub_100020A20()
{
  return _NativeDictionary._delete(at:)();
}

uint64_t sub_100020A44(uint64_t result)
{
  *(void *)(v1 + 1008) = result;
  return result;
}

BOOL sub_100020A58(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v20, v21);
}

uint64_t sub_100020A78(uint64_t a1)
{
  *(void *)(v1 - 152) = a1;
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_100020AB4()
{
  return swift_allocObject();
}

uint64_t sub_100020AE0()
{
  return v0;
}

uint64_t sub_100020AF4()
{
  return v0;
}

void sub_100020B08()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t *sub_100020B24()
{
  *(void *)(v0 - 96) = *(void *)(v0 - 176);
  return sub_10003BAA4((uint64_t *)(v0 - 120));
}

uint64_t sub_100020B40()
{
  return LogMessage.init(stringInterpolation:)();
}

id sub_100020B58(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  *(void *)(v4 - 96) = v3;
  *(void *)(v4 - 120) = v2;
  return v2;
}

uint64_t sub_100020B84()
{
  return sub_10004377C(v0);
}

uint64_t sub_100020BAC()
{
  sub_100049788((void *)(v0 - 152), *(void *)(v0 - 128));
  return swift_getDynamicType();
}

uint64_t sub_100020BE4()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100020BFC(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100020C1C()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

void sub_100020C38()
{
  if (!v1 & v0) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = 0;
  }
  sub_100052734(v5, v2, 1, v3);
}

uint64_t sub_100020C64@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 104) = a1;
  *(void *)(v3 - 128) = v2;
  *(void *)(v3 - 120) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100020C8C()
{
  sub_10019D6B0();
  sub_10004A41C();
  sub_10005261C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10002219C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100052880;
  sub_1000473E8();
  sub_100049FEC();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100020D20()
{
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10002219C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1001B9F44;
  uint64_t v3 = sub_1000473E8();
  return v4(v3);
}

BOOL sub_100020DC4@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_100020E08()
{
  return String.hash(into:)();
}

void sub_100020E44()
{
  uint64_t v1 = 5972026;
  unint64_t v2 = 0xE300000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

void sub_100020E60()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100020E78()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

void sub_100020E94()
{
  uint64_t v1 = 58;
  unint64_t v2 = 0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100020ECC()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_100020EE8()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_100020F04(void *a1)
{
  sub_100049788(a1, v1);
  return swift_getDynamicType();
}

__n128 sub_100020F34(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 448);
  a1[1] = result;
  *(void *)(v1 - 160) = *(void *)(v1 - 464);
  return result;
}

uint64_t sub_100020F60()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

void sub_100020F8C()
{
  uint64_t v1 = 0x61747320444E4120;
  unint64_t v2 = 0xEE003F203D206574;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100020FC0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100020FF4()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

void *sub_100021018(void *result)
{
  result[2] = v4;
  result[3] = v2;
  result[4] = v3;
  result[5] = v1;
  return result;
}

uint64_t sub_10002102C()
{
  uint64_t v2 = *(void *)(v0 - 192);
  *(void *)(v0 - 168) = *(void *)(v0 - 200);
  *(void *)(v0 - 160) = v2;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_10002104C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10002106C(void *a1)
{
  sub_100049788(a1, v1);
  return swift_getDynamicType();
}

uint64_t sub_1000210B4()
{
  return v0 + v1;
}

uint64_t sub_1000210CC@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t sub_1000210F8(uint64_t a1)
{
  v1[18] = a1;
  uint64_t result = v1[11];
  v1[15] = result;
  return result;
}

uint64_t sub_10002110C()
{
  sub_100049788((void *)(v0 + 496), *(void *)(v0 + 520));
  return swift_getDynamicType();
}

uint64_t sub_100021144(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 160) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100021164()
{
  return AsyncObjectGraphBuilder.withDependenciesSatisfied.getter(v0, v1);
}

uint64_t sub_100021180()
{
  return swift_allocError();
}

BOOL sub_100021198()
{
  return (!v1 & v0) != 0;
}

uint64_t sub_1000211AC()
{
  sub_100049788((void *)(v0 - 120), *(void *)(v0 - 96));
  return swift_getDynamicType();
}

char *sub_1000211F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return &a13;
}

void sub_100021220()
{
  uint64_t v2 = *(void **)(v0 + 16);
}

uint64_t sub_10002123C(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return swift_retain();
}

uint64_t sub_100021258(uint64_t a1, unsigned char *a2)
{
  *a2 = 2;
  return swift_willThrow();
}

uint64_t sub_100021278(uint64_t a1, uint64_t a2)
{
  return _swift_deallocObject(a1, a2, 7);
}

uint64_t sub_100021280()
{
  return v0;
}

id sub_100021294(uint64_t *a1, double a2)
{
  return sub_100148CE4(a1, 0, a2);
}

uint64_t sub_10002129C()
{
  return swift_allocObject();
}

uint64_t sub_1000212C4()
{
  return v0;
}

uint64_t sub_1000212E0()
{
  return v0;
}

uint64_t sub_10002130C()
{
  return 0x656D697265707865;
}

uint64_t sub_10002132C()
{
  *(void *)(v1 - 176) = *(void *)(v1 - 240);
  *(void *)(v1 - 200) = v0;
  return swift_retain();
}

uint64_t sub_10002134C()
{
  return swift_allocObject();
}

uint64_t sub_100021378()
{
  return v0;
}

uint64_t SQLRow.__deallocating_deinit()
{
  SQLRow.deinit();
  return swift_deallocClassInstance();
}

uint64_t SQLRow.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

id sub_1000213E8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  id v9 = a1;
  a4(v19, v6, v8);

  swift_bridgeObjectRelease();
  uint64_t v10 = v20;
  if (v20)
  {
    sub_100049788(v19, v20);
    sub_1000448FC();
    uint64_t v12 = v11;
    __chkstk_darwin(v13);
    sub_100020EAC();
    uint64_t v16 = v15 - v14;
    (*(void (**)(uint64_t))(v12 + 16))(v15 - v14);
    uint64_t v17 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
    sub_10004377C((uint64_t)v19);
  }
  else
  {
    uint64_t v17 = 0;
  }
  return v17;
}

uint64_t sub_100021524(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  id v9 = a1;
  a4(v6, v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100021590(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v26 = (void *)type metadata accessor for JSLog();
  v25[0] = v3;
  uint64_t v8 = *(void *)&v3[OBJC_IVAR____TtC14amsengagementd5JSLog_logKey + 8];
  if (v8)
  {
    id v9 = a3;
    uint64_t v10 = *(void *)&v3[OBJC_IVAR____TtC14amsengagementd5JSLog_logKey];
    uint64_t v11 = v3;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    uint64_t v13 = sub_100043C78();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    v14._countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v10;
    v23[1] = v8;
    a3 = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    uint64_t v15 = 93;
  }
  else
  {
    uint64_t v16 = v3;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    uint64_t v18 = sub_100043C78();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    uint64_t v15 = 58;
  }
  unint64_t v19 = 0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v15);
  LogMessage.init(stringInterpolation:)();
  sub_10004377C((uint64_t)v25);
  uint64_t v26 = &type metadata for String;
  v25[0] = a1;
  v25[1] = a2;
  swift_bridgeObjectRetain();
  static LogMessage.sensitive(_:)();
  uint64_t v20 = sub_1000423CC((uint64_t)v25);
  uint64_t v21 = a3(v20);
  sub_10004841C(v21);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for JSLog()
{
  return self;
}

uint64_t sub_100021858(uint64_t a1, uint64_t a2)
{
  return sub_100021590(a1, a2, (uint64_t (*)(void))&static os_log_type_t.default.getter);
}

uint64_t sub_100021870(uint64_t a1, uint64_t a2)
{
  return sub_100021590(a1, a2, (uint64_t (*)(void))&static os_log_type_t.error.getter);
}

uint64_t sub_100021888(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100043478(&qword_10022D340);
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_10004A85C();
  uint64_t v7 = type metadata accessor for TaskPriority();
  sub_100021AC0(v2, 1, 1, v7);
  uint64_t v8 = (void *)sub_1000526E4();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a1;
  v8[5] = a2;
  id v9 = (void *)sub_1000526E4();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = &unk_1002344C8;
  v9[5] = v8;
  sub_100021B40(v2, (uint64_t)&unk_1002344D8, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_100021964(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_1002350E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  sub_100021AC0((uint64_t)v6, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a1;
  v8[5] = a2;
  id v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = &unk_1002350F0;
  v9[5] = v8;
  sub_100021CB0((uint64_t)v6, (uint64_t)&unk_100235100, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_100021A68()
{
  return v0;
}

void sub_100021A74()
{
  *(void *)(v0 - 112) = 0;
  *(void *)(v0 - 104) = 0xE000000000000000;
  _StringGuts.grow(_:)(38);
}

void sub_100021A94()
{
  _StringGuts.grow(_:)(30);
}

uint64_t sub_100021AB4(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t sub_100021AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_100021AF4()
{
  return swift_allocObject();
}

uint64_t sub_100021B0C()
{
  sub_100011E28();
  return v0;
}

uint64_t sub_100021B30()
{
  return v0;
}

uint64_t sub_100021B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  if (sub_10004FD40(a1, 1, v6) == 1)
  {
    sub_1000435D4(a1, &qword_10022D340);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_100021CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  if (sub_10004FD40(a1, 1, v6) == 1)
  {
    sub_10002CC68(a1, &qword_1002350E0);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_100021E20(uint64_t a1, uint64_t a2, void *a3)
{
  v10[3] = sub_10004D510(0, (unint64_t *)&qword_10022F690);
  v10[4] = &protocol witness table for OS_dispatch_queue;
  v10[0] = a3;
  id v6 = a3;
  uint64_t v7 = Promise.__allocating_init()();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = a1;
  v8[4] = a2;
  swift_retain_n();
  swift_retain();
  Promise.then(perform:orCatchError:on:)();
  swift_release();
  swift_release();
  sub_10004377C((uint64_t)v10);
  return v7;
}

#error "100021F88: call analysis failed (funcsize=15)"

void sub_100021F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  sub_10004C1B0();
  a27 = v28;
  a28 = v29;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  [v36 lock];
  sub_10004D1BC();
  uint64_t v40 = *(void (**)(uint64_t *, void))(v35 + 16);
  uint64_t v41 = *(void *)(v35 + 24);
  sub_1000227A4();
  *(void *)(v35 + 16) = 0;
  *(void *)(v35 + 24) = 0;
  v33(v40, v41);
  uint64_t v42 = sub_10002FDB4();
  v31(v42);
  [v37 unlock];
  if (v40)
  {
    a10 = v39;
    v33(v40, v41);
    swift_bridgeObjectRetain();
    v40(&a10, 0);
    ((void (*)(void, uint64_t))v31)(v40, v41);
    ((void (*)(void, uint64_t))v31)(v40, v41);
    swift_bridgeObjectRelease();
  }
  sub_100020670();
}

void sub_100022084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  sub_10004C1B0();
  a27 = v33;
  a28 = v34;
  sub_10004D5B0();
  [v32 lock];
  sub_10004D1BC();
  uint64_t v35 = *(void (**)(void **, void))(v31 + 16);
  uint64_t v36 = *(void *)(v31 + 24);
  sub_1000227A4();
  uint64_t v37 = sub_10002A0FC();
  v30(v37);
  uint64_t v38 = sub_10002FDB4();
  v28(v38);
  [v32 unlock];
  if (v35)
  {
    a10 = v29;
    ((void (*)(void, uint64_t))v30)(v35, v36);
    id v39 = v29;
    v35(&a10, 0);
    ((void (*)(void, uint64_t))v28)(v35, v36);
    ((void (*)(void, uint64_t))v28)(v35, v36);
  }
  sub_100020670();
}

uint64_t sub_100022158(uint64_t a1)
{
  return sub_10004841C(a1);
}

uint64_t sub_100022170()
{
  uint64_t v2 = *(void *)(v0 - 184);
  *(void *)(v0 - 112) = *(void *)(v0 - 192);
  *(void *)(v0 - 104) = v2;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_10002219C(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

void sub_1000221A8()
{
  sub_1000209F4();
  sub_100020A78(v3);
  sub_100020DEC();
  __chkstk_darwin(v4);
  sub_10004998C(v5, v36);
  sub_100020DEC();
  __chkstk_darwin(v6);
  sub_1000210CC(v7, v37);
  sub_100020DEC();
  id v9 = v8;
  __chkstk_darwin(v10);
  sub_100049D70();
  sub_100020DEC();
  __chkstk_darwin(v11);
  sub_10002257C();
  __chkstk_darwin(v12);
  sub_100036188();
  uint64_t v13 = sub_100035CB8();
  sub_1000BC598(v13);
  id v14 = objc_allocWithZone((Class)NSLock);
  sub_1000228C0();
  id v15 = [v0 init];
  if (v2) {
    goto LABEL_9;
  }
  sub_1000228F8();
  if (qword_10022C588 != -1) {
    swift_once();
  }
  static DispatchTime.now()();
  sub_10004A8BC();
  if (v17)
  {
    __break(1u);
  }
  else if (v16 > -9.22337204e18)
  {
    sub_100042B54();
    if (!v19) {
      goto LABEL_12;
    }
    sub_10001D710(v18);
    uint64_t v20 = sub_100043BE0();
    v21(v20);
    sub_100045B74();
    uint64_t v22 = sub_1000420B8();
    v23(v22);
    uint64_t v24 = sub_10004AB8C();
    v25(v24);
    uint64_t v26 = sub_100035CB8();
    *(void *)(v26 + 16) = v15;
    *(void *)(v26 + 24) = v1;
    v38[4] = sub_1000BB864;
    v38[5] = v26;
    v38[0] = _NSConcreteStackBlock;
    sub_100022644(COERCE_DOUBLE(1107296256));
    v38[2] = sub_10002CD0C;
    void v38[3] = &unk_100210338;
    uint64_t v27 = _Block_copy(v38);
    id v28 = v15;
    swift_retain();
    sub_100023FDC();
    sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    id v9 = &unk_10022F4C0;
    sub_100043478((uint64_t *)&unk_10022F4C0);
    sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
    sub_1000480EC();
    sub_10004BEFC();
    _Block_release(v27);
    sub_100043FB0();
    v29();
    sub_100043FB0();
    v30();
    uint64_t v31 = sub_10004A38C();
    v32(v31);
    swift_release();
LABEL_9:
    uint64_t v33 = sub_100035CB8();
    sub_10002289C(v33);
    uint64_t v34 = sub_100035CB8();
    sub_1000BC56C(v34);
    sub_1000BC4A8();
    id v35 = v9;
    sub_10004A06C();
    swift_release();

    swift_release();
    swift_release();
    sub_100020FDC();
    return;
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

uint64_t sub_100022570()
{
  return v0;
}

uint64_t sub_100022598()
{
  return sub_10004B6AC(v1, v0);
}

uint64_t sub_1000225B0(uint64_t a1)
{
  *(void *)(v2 - 192) = a1;
  *(void *)(v2 - 216) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_1000225D0(uint64_t a1, uint64_t a2)
{
  v3[42] = a2;
  v3[43] = v2;
  v3[41] = a1;
  return type metadata accessor for LogMessage.StringInterpolation();
}

uint64_t sub_1000225EC()
{
  return v0;
}

BOOL sub_1000225F8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v10, v11);
}

uint64_t sub_100022618()
{
  return swift_allocObject();
}

void sub_100022644(double a1)
{
  *(double *)(v1 - 120) = a1;
}

uint64_t sub_100022650()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100022668()
{
  sub_100049788((void *)(v0 - 112), *(void *)(v0 - 88));
  return swift_getDynamicType();
}

uint64_t sub_1000226A0(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = v3;
  a1[2].n128_u64[1] = v2;
  a1[3].n128_u8[0] = 3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000226C4()
{
  return swift_retain();
}

uint64_t sub_1000226E0()
{
  return swift_allocObject();
}

uint64_t sub_1000226F8()
{
  return *(void *)(v0 + 24);
}

__n128 sub_10002272C(__n128 *a1)
{
  return a1[2];
}

uint64_t sub_100022740()
{
  return swift_allocObject();
}

void sub_100022768()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t sub_1000227A4()
{
  return swift_beginAccess();
}

uint64_t sub_1000227C4()
{
  return LogMessage.init(stringLiteral:)();
}

uint64_t sub_1000227E8(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return swift_retain();
}

uint64_t sub_100022828()
{
  return sub_1000435D4(v1 - 152, v0);
}

uint64_t sub_100022840@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(unsigned char *)(result + 1) = a2;
  return result;
}

uint64_t sub_100022884(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for ContentManager();
}

uint64_t sub_10002289C(uint64_t result)
{
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v1;
  return result;
}

uint64_t sub_1000228A8()
{
  return sub_100027BD8(v1 - 128, v0);
}

uint64_t sub_1000228C0()
{
  return swift_retain();
}

uint64_t sub_1000228D8()
{
  return Dictionary.init(dictionaryLiteral:)();
}

void sub_1000228F8()
{
  *(void *)(v1 - 216) = v0;
}

uint64_t sub_100022918()
{
  return swift_beginAccess();
}

uint64_t sub_100022938(void **a1, uint64_t a2)
{
  return sub_100027434(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100022944(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_100022974(uint64_t a1, uint64_t a2)
{
}

void sub_100022990(uint64_t a1, uint64_t a2)
{
  if (a2) {
    _convertErrorToNSError(_:)();
  }
  uint64_t v2 = sub_100022570();
  id v5 = v3;
  v4(v2);
}

uint64_t sub_1000229FC(uint64_t a1, uint64_t a2)
{
  return sub_100022A08(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

#error "100022A48: call analysis failed (funcsize=16)"

void sub_100022A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1000209F4();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v41 = v32;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  __chkstk_darwin(v33);
  sub_10002D300();
  type metadata accessor for DispatchQoS();
  sub_100020DEC();
  __chkstk_darwin(v34);
  sub_100045B24();
  uint64_t v43 = v31;
  id v35 = (void *)swift_allocObject();
  sub_100024E38((uint64_t)&v43, (uint64_t)(v35 + 2), v41);
  void v35[3] = v27;
  v35[4] = v29;
  v35[5] = v25;
  v35[6] = v23;
  v42[4] = a21;
  v42[5] = v35;
  v42[0] = _NSConcreteStackBlock;
  v42[1] = 1107296256;
  _OWORD v42[2] = sub_10002CD0C;
  v42[3] = a22;
  uint64_t v36 = _Block_copy(v42);
  id v37 = v31;
  swift_retain();
  swift_errorRetain();
  swift_retain();
  id v38 = v23;
  static DispatchQoS.unspecified.getter();
  sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v36);
  sub_100043FB0();
  v39();
  sub_100043FB0();
  v40();
  swift_release();
  sub_100020FDC();
}

void sub_100022CB0(uint64_t a1, uint64_t a2)
{
  sub_100022CB8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

void sub_100022CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    uint64_t v7 = *(void *)(a4 + 16);
    if (v7)
    {
      sub_100027304(0, v7, 0);
      uint64_t v8 = (unsigned __int8 *)(a4 + 33);
      do
      {
        int v9 = *v8;
        v8 += 80;
        unint64_t v10 = 0xE900000000000073;
        uint64_t v11 = 0x636974796C616E61;
        switch(v9)
        {
          case 1:
            unint64_t v10 = 0xE800000000000000;
            uint64_t v11 = 0x6C616E7265746E69;
            break;
          case 2:
            unint64_t v10 = 0xE800000000000000;
            uint64_t v11 = 0x7379656E72756F6ALL;
            break;
          case 3:
            unint64_t v10 = 0xEF736E6F69746164;
            uint64_t v11 = 0x6E656D6D6F636572;
            break;
          default:
            break;
        }
        unint64_t v13 = _swiftEmptyArrayStorage[2];
        unint64_t v12 = _swiftEmptyArrayStorage[3];
        if (v13 >= v12 >> 1) {
          sub_100027304(v12 > 1, v13 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v13 + 1;
        id v14 = &_swiftEmptyArrayStorage[2 * v13];
        v14[4] = v11;
        v14[5] = v10;
        --v7;
      }
      while (v7);
    }
    sub_1000230D4((uint64_t)_swiftEmptyArrayStorage);

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v15 = swift_unknownObjectWeakLoadStrong();
  if (v15)
  {
    double v16 = (void *)v15;
    sub_100022E84();
  }
}

uint64_t sub_100022E74(uint64_t a1, uint64_t a2)
{
  return sub_1000253FC(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

void sub_100022E84()
{
  sub_1000209F4();
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10004A85C();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  sub_100020DEC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10002D300();
  if (qword_10022C588 != -1) {
    swift_once();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v0;
  v14[4] = sub_100054264;
  v14[5] = v11;
  v14[0] = _NSConcreteStackBlock;
  sub_100022644(COERCE_DOUBLE(1107296256));
  _OWORD v14[2] = sub_10002CD0C;
  void v14[3] = &unk_1002106A8;
  unint64_t v12 = _Block_copy(v14);
  id v13 = v0;
  static DispatchQoS.unspecified.getter();
  sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v7);
  swift_release();
  sub_100020FDC();
}

uint64_t sub_1000230D4(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = swift_bridgeObjectRetain();
    uint64_t v2 = sub_10002318C(v1);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_100023240(v2, (uint64_t)sub_1000BC33C, v3);
  swift_release_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10002318C(uint64_t a1)
{
  uint64_t v2 = Set.init(minimumCapacity:)();
  uint64_t v10 = v2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_10004A8EC(&v9, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    uint64_t v7 = v2;
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_100023240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v22[0] = a2;
  uint64_t v6 = *v3;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  unint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DispatchQoS();
  sub_100020DEC();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  char v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = v3[12];
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  char v19 = (void *)swift_allocObject();
  void v19[2] = v18;
  void v19[3] = a1;
  v19[4] = v22[0];
  v19[5] = a3;
  v19[6] = v6;
  aBlock[4] = sub_100030A24;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  void aBlock[3] = &unk_100210C90;
  uint64_t v20 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_10002352C();
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_1000234D8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v23);
  swift_release();
  return swift_release();
}

unint64_t sub_1000234D8()
{
  unint64_t result = qword_100231DB0;
  if (!qword_100231DB0)
  {
    sub_10006026C((uint64_t *)&unk_10022F4C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100231DB0);
  }
  return result;
}

unint64_t sub_10002352C()
{
  unint64_t result = qword_100231DA0;
  if (!qword_100231DA0)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100231DA0);
  }
  return result;
}

void sub_100023580()
{
}

void sub_10002358C()
{
}

void sub_1000235A8()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  sub_100011D4C();
  sub_10002CAAC();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    if (v5)
    {
      uint64_t v10 = (void *)_convertErrorToNSError(_:)();
      if (qword_10022C498 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      uint64_t v11 = type metadata accessor for LogMessage();
      sub_100044798(v11);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v26 = type metadata accessor for EngagementService();
      v25[0] = v9;
      id v12 = v9;
      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020E60();
      sub_100049788(v25, v26);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v22 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v22, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v22 = v3;
      uint64_t v23 = v1;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v22, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      sub_10004377C((uint64_t)v25);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v14._countAndFlagsBits = 0xD000000000000029;
      v14._object = (void *)0x80000001001CD3D0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v14);
      uint64_t v26 = sub_10004D510(0, (unint64_t *)&qword_100234520);
      v25[0] = v10;
      id v15 = v10;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v25, &qword_10022F490);
      sub_100020E60();
      LogMessage.init(stringInterpolation:)();
      uint64_t v16 = static os_log_type_t.error.getter();
      sub_10004841C(v16);
    }
    else
    {
      if (qword_10022C498 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      uint64_t v17 = type metadata accessor for LogMessage();
      sub_100044798(v17);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v26 = type metadata accessor for EngagementService();
      v25[0] = v9;
      id v18 = v9;
      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020E60();
      sub_100049788(v25, v26);
      uint64_t v19 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v22 = v19;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v22, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v22 = v3;
      uint64_t v23 = v1;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v22, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      sub_10004377C((uint64_t)v25);
      LogMessage.init(stringLiteral:)();
      uint64_t v20 = static os_log_type_t.default.getter();
      sub_10004841C(v20);
    }
    swift_bridgeObjectRelease();
    sub_100023A0C();
    if (qword_10022C5C8 != -1) {
      swift_once();
    }
    sub_10002064C();
    sub_10000A734(0xD000000000000013, v21);
  }
  sub_100020FDC();
}

uint64_t sub_100023A0C()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v44 = type metadata accessor for DispatchTimeInterval();
  sub_100020DEC();
  uint64_t v42 = v1;
  __chkstk_darwin(v2);
  uint64_t v4 = (void *)((char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = type metadata accessor for DispatchTime();
  sub_100020DEC();
  uint64_t v49 = v5;
  __chkstk_darwin(v6);
  sub_100011EC0();
  uint64_t v40 = v7 - v8;
  __chkstk_darwin(v9);
  uint64_t v41 = (char *)v36 - v10;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  uint64_t v48 = v11;
  __chkstk_darwin(v12);
  sub_100045B24();
  type metadata accessor for DispatchQoS();
  sub_100020DEC();
  uint64_t v46 = v13;
  uint64_t v47 = v14;
  __chkstk_darwin(v13);
  sub_10002D2D4();
  type metadata accessor for UUID();
  sub_100020DEC();
  __chkstk_darwin(v15);
  sub_100011D4C();
  UUID.init()();
  uint64_t v16 = UUID.uuidString.getter();
  uint64_t v39 = v16;
  uint64_t v18 = v17;
  uint64_t v19 = sub_100021A68();
  v20(v19);
  v36[6] = *(void *)&v0[OBJC_IVAR____TtC14amsengagementd17EngagementService_serviceQueue];
  uint64_t v21 = (void *)sub_1000526E4();
  v21[2] = v0;
  void v21[3] = v16;
  uint64_t v37 = v18;
  uint64_t v22 = ObjectType;
  v21[4] = v18;
  v21[5] = v22;
  uint64_t v55 = sub_10005426C;
  uint64_t v56 = v21;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v52 = 1107296256;
  id v38 = &v53;
  uint64_t v53 = sub_10002CD0C;
  uint64_t v54 = &unk_1002106F8;
  uint64_t v23 = _Block_copy(&aBlock);
  v36[1] = v0;
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  Swift::String v50 = _swiftEmptyArrayStorage;
  v36[5] = sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  v36[4] = sub_100043478((uint64_t *)&unk_10022F4C0);
  uint64_t v36[3] = sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v23);
  uint64_t v24 = *(void *)(v48 + 8);
  v48 += 8;
  v36[2] = v24;
  sub_100011DF0();
  sub_100043FB0();
  v25();
  uint64_t v26 = *(void (**)(void))(v47 + 8);
  v47 += 8;
  sub_10005156C();
  v26();
  swift_release();
  static DispatchTime.now()();
  *uint64_t v4 = 1;
  (*(void (**)(void *, void, uint64_t))(v42 + 104))(v4, enum case for DispatchTimeInterval.seconds(_:), v44);
  + infix(_:_:)();
  sub_100043FB0();
  v27();
  uint64_t v28 = *(void (**)(void))(v49 + 8);
  v49 += 8;
  sub_10005156C();
  v28();
  uint64_t v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v30 = (void *)sub_1000526E4();
  uint64_t v31 = v39;
  v30[2] = v29;
  void v30[3] = v31;
  uint64_t v32 = ObjectType;
  void v30[4] = v37;
  v30[5] = v32;
  uint64_t v55 = sub_1000BC298;
  uint64_t v56 = v30;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v52 = 1107296256;
  uint64_t v53 = sub_10002CD0C;
  uint64_t v54 = &unk_100210748;
  uint64_t v33 = _Block_copy(&aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  Swift::String v50 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v33);
  sub_100011DF0();
  sub_100043FB0();
  v34();
  sub_10005156C();
  v26();
  sub_10005156C();
  v28();
  swift_release();
  return swift_release();
}

uint64_t sub_100023FBC()
{
  return LogMessage.init(stringLiteral:)();
}

uint64_t sub_100023FDC()
{
  return static DispatchQoS.unspecified.getter();
}

void sub_100023FF4()
{
  sub_1000209F4();
  uint64_t v49 = v0;
  char v39 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v13 = sub_1000208F0(v12);
  __chkstk_darwin(v13);
  sub_100011EC0();
  __chkstk_darwin(v14);
  char v42 = *(unsigned char *)v11;
  char v41 = *(unsigned char *)(v11 + 1);
  uint64_t v47 = *(void **)(v11 + 8);
  uint64_t v40 = *(void *)(v11 + 16);
  uint64_t v46 = *(void *)(v11 + 40);
  uint64_t v48 = *(void *)(v11 + 48);
  uint64_t v45 = *(void *)(v11 + 56);
  char v44 = *(unsigned char *)(v11 + 64);
  uint64_t v43 = *(void *)(v11 + 72);
  sub_100024E38(v11 + 24, (uint64_t)v52, &qword_10022E060);
  uint64_t v53 = v9;
  unint64_t v54 = v7;
  swift_bridgeObjectRetain();
  v15._countAndFlagsBits = 95;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t v16 = v53;
  unint64_t v17 = v54;
  uint64_t v53 = v5;
  sub_10002C008(v11);
  uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v20 = v19;
  uint64_t v53 = v16;
  unint64_t v54 = v17;
  swift_bridgeObjectRetain();
  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v53;
  unint64_t v23 = v54;
  swift_bridgeObjectRetain_n();
  sub_10002711C((uint64_t)v52);
  if (qword_10022C498 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v24 = sub_10002D318();
  sub_100044798(v24);
  *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
  uint64_t v25 = type metadata accessor for EngagementService();
  uint64_t v56 = (void *)v25;
  uint64_t v53 = v3;
  swift_bridgeObjectRetain();
  uint64_t v26 = v3;
  sub_100049814();
  sub_100044E44();
  sub_100049788(&v53, v25);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
  v50[0] = DynamicType;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)v50, &qword_10022F490);
  sub_100020E44();
  uint64_t MetatypeMetadata = &type metadata for String;
  v50[0] = v22;
  v50[1] = v23;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)v50, &qword_10022F490);
  sub_1000208D8();
  LogMessage.init(stringInterpolation:)();
  swift_bridgeObjectRelease();
  sub_10004377C((uint64_t)&v53);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v28._countAndFlagsBits = 0x20676E696E6E7552;
  v28._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  if (v39)
  {
    if (v39 == 1)
    {
      unint64_t v29 = 0xEF636E7953746867;
      uint64_t v30 = 0x696577746867696CLL;
    }
    else
    {
      unint64_t v29 = 0xE400000000000000;
      uint64_t v30 = 1668184435;
    }
  }
  else
  {
    unint64_t v29 = 0xE700000000000000;
    uint64_t v30 = 0x65756575716E65;
  }
  uint64_t v56 = &type metadata for String;
  uint64_t v53 = (void *)v30;
  unint64_t v54 = v29;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100011E64();
  v31._countAndFlagsBits = 0x7473657571657220;
  v31._object = (void *)0xEF203A7070612820;
  LogMessage.StringInterpolation.appendLiteral(_:)(v31);
  uint64_t v56 = &unk_10020E0E8;
  LOBYTE(v53) = v41;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100011E64();
  sub_10002064C();
  v32._countAndFlagsBits = 0xD000000000000012;
  LogMessage.StringInterpolation.appendLiteral(_:)(v32);
  uint64_t v56 = &type metadata for Bool;
  LOBYTE(v53) = v42;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100011E64();
  v33._countAndFlagsBits = 0x69726F697270202CLL;
  v33._object = (void *)0xEC000000203A7974;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  uint64_t v34 = sub_100027148();
  uint64_t v56 = &type metadata for String;
  uint64_t v53 = (void *)v34;
  unint64_t v54 = v35;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100011E64();
  v36._countAndFlagsBits = 41;
  v36._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v36);
  LogMessage.init(stringInterpolation:)();
  uint64_t v37 = static os_log_type_t.default.getter();
  sub_10004841C(v37);
  swift_bridgeObjectRelease();
  LOBYTE(v53) = v42;
  BYTE1(v53) = v41;
  unint64_t v54 = (unint64_t)v47;
  uint64_t v55 = v40;
  uint64_t v56 = v22;
  unint64_t v57 = v23;
  uint64_t v58 = v46;
  uint64_t v59 = v48;
  uint64_t v60 = v45;
  char v61 = v44;
  uint64_t v62 = v43;
  id v38 = v47;
  swift_bridgeObjectRetain();
  v49(&v53);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  sub_100020FDC();
}

uint64_t sub_100024534()
{
  return LogMessage.init(stringInterpolation:)();
}

void *sub_100024560(unsigned char *a1)
{
  return sub_100024570(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48));
}

void *sub_100024570(unsigned char *a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  char v61 = a6;
  uint64_t v72 = type metadata accessor for OSSignposter();
  uint64_t v74 = *(void *)(v72 - 8);
  uint64_t v11 = __chkstk_darwin(v72);
  uint64_t v71 = &v57[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v14 = &v57[-v13];
  uint64_t v70 = type metadata accessor for OSSignpostID();
  uint64_t v69 = *(void *)(v70 - 8);
  uint64_t v15 = __chkstk_darwin(v70);
  uint64_t v66 = &v57[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v63 = &v57[-v18];
  __chkstk_darwin(v17);
  uint64_t v73 = &v57[-v19];
  uint64_t v68 = a3;
  unint64_t v20 = 0xE000000000000000;
  uint64_t v76 = 0;
  unint64_t v77 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  if (*a1) {
    uint64_t v21 = 3041653;
  }
  else {
    uint64_t v21 = 0;
  }
  if (*a1) {
    unint64_t v20 = 0xE300000000000000;
  }
  unint64_t v22 = v20;
  String.append(_:)(*(Swift::String *)&v21);
  swift_bridgeObjectRelease();
  v23._object = (void *)0x80000001001CD810;
  v23._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v23);
  uint64_t v24 = v76;
  uint64_t v25 = v77;
  [a2 lock];
  swift_beginAccess();
  uint64_t v65 = v24;
  uint64_t v64 = v25;
  sub_1000258D8(0xD000000000000017, 0x80000001001CD870, v24, v25);
  swift_endAccess();
  uint64_t v26 = a1[1];
  uint64_t v27 = 0x636974796C616E61;
  unint64_t v28 = 0xE900000000000073;
  uint64_t v60 = v26;
  switch(v26)
  {
    case 1:
      unint64_t v28 = 0xE800000000000000;
      uint64_t v27 = 0x6C616E7265746E69;
      break;
    case 2:
      unint64_t v28 = 0xE800000000000000;
      uint64_t v27 = 0x7379656E72756F6ALL;
      break;
    case 3:
      uint64_t v27 = 0x6E656D6D6F636572;
      unint64_t v28 = 0xEF736E6F69746164;
      break;
    default:
      break;
  }
  swift_beginAccess();
  *(void *)(a4 + 16) = v27;
  *(void *)(a4 + 24) = v28;
  swift_bridgeObjectRelease();
  uint64_t v67 = a2;
  [a2 unlock];
  sub_100025E8C();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  type metadata accessor for EnqueueRunner();
  swift_allocObject();
  uint64_t v33 = sub_10002ABE0(a1, v30, v32);
  sub_100025334((uint64_t)a5 + OBJC_IVAR____TtC14amsengagementd17EngagementService_appDefaultsProvider, (uint64_t)&v76);
  sub_100024E38((uint64_t)&v76, (uint64_t)v75, &qword_10022F0F0);
  swift_beginAccess();
  sub_10002C008((uint64_t)a1);
  uint64_t v62 = v30;
  swift_unknownObjectRetain();
  sub_100025394((uint64_t)v75, v33 + 16);
  swift_endAccess();
  char v61 = (void *)sub_100037EF4(v61);
  sub_100024D7C();
  swift_retain();
  OSSignposter.logHandle.getter();
  uint64_t v34 = v73;
  OSSignpostID.init(log:object:)();
  unint64_t v35 = *(void (**)(unsigned char *, uint64_t))(v74 + 8);
  v74 += 8;
  v35(v14, v72);
  sub_100024D7C();
  sub_10002C008((uint64_t)a1);
  sub_10002C008((uint64_t)a1);
  Swift::String v36 = OSSignposter.logHandle.getter();
  int v37 = static os_signpost_type_t.begin.getter();
  char v38 = OS_os_log.signpostsEnabled.getter();
  uint64_t v39 = v70;
  if (v38)
  {
    int v58 = v37;
    uint64_t v59 = a5;
    uint64_t v40 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v69 + 16);
    v40(v63, v34, v70);
    char v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v76 = swift_slowAlloc();
    *(_DWORD *)char v41 = 136315138;
    unint64_t v42 = 0xE900000000000073;
    uint64_t v43 = 0x636974796C616E61;
    switch((int)v60)
    {
      case 1:
        unint64_t v42 = 0xE800000000000000;
        uint64_t v43 = 0x6C616E7265746E69;
        break;
      case 2:
        unint64_t v42 = 0xE800000000000000;
        uint64_t v43 = 0x7379656E72756F6ALL;
        break;
      case 3:
        uint64_t v43 = 0x6E656D6D6F636572;
        unint64_t v42 = 0xEF736E6F69746164;
        break;
      default:
        break;
    }
    v75[0] = sub_100024E94(v43, v42, &v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100024DF0((uint64_t)a1);
    sub_100024DF0((uint64_t)a1);
    uint64_t v45 = v63;
    os_signpost_id_t v46 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v36, (os_signpost_type_t)v58, v46, "Enqueue", "%s enqueue", v41, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v44 = v69;
    uint64_t v39 = v70;
    (*(void (**)(unsigned char *, uint64_t))(v69 + 8))(v45, v70);
    a5 = v59;
  }
  else
  {

    sub_100024DF0((uint64_t)a1);
    sub_100024DF0((uint64_t)a1);
    uint64_t v44 = v69;
    uint64_t v40 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v69 + 16);
  }
  uint64_t v47 = v73;
  v40(v66, v73, v39);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  uint64_t v48 = OSSignpostIntervalState.init(id:isOpen:)();
  v35(v71, v72);
  uint64_t v49 = (void *)swift_allocObject();
  Swift::String v50 = v67;
  uint64_t v51 = v68;
  v49[2] = v67;
  v49[3] = v51;
  uint64_t v52 = v64;
  v49[4] = v65;
  v49[5] = v52;
  v49[6] = a5;
  v49[7] = v48;
  id v53 = v50;
  swift_retain();
  id v54 = a5;
  swift_retain();
  uint64_t v55 = v61;
  sub_1000221A8();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v47, v39);
  return v55;
}

uint64_t sub_100024D7C()
{
  if (qword_10022C498 != -1) {
    swift_once();
  }
  id v0 = *(id *)(qword_100244100 + 16);
  return OSSignposter.init(logHandle:)();
}

uint64_t sub_100024DF0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100024E38(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100043478(a3);
  sub_1000456E0();
  uint64_t v4 = sub_100022570();
  v5(v4);
  return a2;
}

uint64_t sub_100024E94(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100024F68(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100043520((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100043520((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10004377C((uint64_t)v12);
  return v7;
}

uint64_t sub_100024F68(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1000BA5A0((char *)__src, HIBYTE(a6) & 0xF, __dst);
      UnsafeMutableRawBufferPointer.subscript.setter();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = (uint64_t)sub_1000250C0(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = _StringObject.sharedUTF8.getter();
    if (!v8)
    {
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_1000250C0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_100025158(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000BA6D4(0, v2[2] + 1, 1, (uint64_t)v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1000BA6D4((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  }
  v2[2] = v4 + 1;
  *((unsigned char *)v2 + v4 + 32) = 0;
  return v2;
}

void *sub_100025158(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v2 = String.UTF8View._foreignCount()();
    if (v2) {
      goto LABEL_6;
    }
    return _swiftEmptyArrayStorage;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    Swift::Int v2 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
LABEL_6:
  unint64_t v3 = sub_1000252CC(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = _StringGuts.copyUTF8(into:)();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return v4;
  }
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
LABEL_14:
  uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1000252CC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_100043478(&qword_10022F0F8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  void v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_100025334(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  sub_1000456E0();
  (*v3)(a2);
  return a2;
}

uint64_t sub_100025394(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022F0F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000253FC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v52 = a6;
  uint64_t v53 = a2;
  uint64_t v8 = type metadata accessor for OSSignpostError();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v45 - v12;
  uint64_t v14 = type metadata accessor for OSSignpostID();
  uint64_t v50 = *(void *)(v14 - 8);
  uint64_t v51 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v45 - v18;
  uint64_t v20 = type metadata accessor for OSSignposter();
  uint64_t v48 = *(void *)(v20 - 8);
  uint64_t v49 = v20;
  uint64_t v21 = __chkstk_darwin(v20);
  Swift::String v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v45 - v24;
  [a3 lock];
  swift_beginAccess();
  sub_1000258D8(0xD00000000000001BLL, 0x80000001001CD890, a5, v52);
  swift_endAccess();
  [a3 unlock];
  if (v53)
  {
    sub_100024D7C();
    uint64_t v26 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v27 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v29 = v46;
      uint64_t v28 = v47;
      if ((*(unsigned int (**)(char *, uint64_t))(v46 + 88))(v11, v47) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v30 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v28);
        uint64_t v30 = "Failed";
      }
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      os_signpost_id_t v41 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v26, v27, v41, "Enqueue", v30, v40, 2u);
LABEL_14:
      uint64_t v37 = v50;
      uint64_t v36 = v51;
      uint64_t v39 = v48;
      uint64_t v38 = v49;
      swift_slowDealloc();
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v31 = v13;
    sub_100024D7C();
    uint64_t v26 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v32 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v34 = v46;
      uint64_t v33 = v47;
      if ((*(unsigned int (**)(char *, uint64_t))(v46 + 88))(v31, v47) == enum case for OSSignpostError.doubleEnd(_:))
      {
        unint64_t v35 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
        unint64_t v35 = "Succeeded";
      }
      unint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v42 = 0;
      os_signpost_id_t v43 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v26, v32, v43, "Enqueue", v35, v42, 2u);
      uint64_t v17 = v19;
      Swift::String v23 = v25;
      goto LABEL_14;
    }
    uint64_t v17 = v19;
    Swift::String v23 = v25;
  }
  uint64_t v37 = v50;
  uint64_t v36 = v51;
  uint64_t v39 = v48;
  uint64_t v38 = v49;
LABEL_15:

  (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v23, v38);
}

uint64_t sub_1000258D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v20 = &type metadata for String;
  uint64_t v21 = v12;
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  swift_bridgeObjectRetain();
  sub_10003E698((uint64_t)&v18, 0x6567617373656DLL, 0xE700000000000000);
  uint64_t v20 = &type metadata for String;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  swift_bridgeObjectRetain();
  sub_10003E698((uint64_t)&v18, 0x79726F6765746163, 0xE800000000000000);
  static Date.now.getter();
  Date.timeIntervalSince1970.getter();
  double v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v15 = v21;
  uint64_t v20 = (void *)sub_100043478(&qword_10022D7B0);
  uint64_t v18 = v15;
  return sub_100025A8C((uint64_t)&v18, v14);
}

uint64_t sub_100025A8C(uint64_t a1, double a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_100043510((_OWORD *)a1, v19);
    return sub_100025B94(v19, a2);
  }
  else
  {
    sub_10002CC68(a1, &qword_10022F490);
    unint64_t v5 = sub_100025D40(a2);
    if (v6)
    {
      unint64_t v7 = v5;
      swift_isUniquelyReferenced_nonNull_native();
      sub_100044914();
      int v8 = sub_100043478(&qword_10022E5A8);
      sub_100044F60(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
      sub_100043510((_OWORD *)(*(void *)(v18 + 56) + 32 * v7), v19);
      _NativeDictionary._delete(at:)();
      *uint64_t v2 = v18;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v19, 0, sizeof(v19));
    }
    return sub_10002CC68((uint64_t)v19, &qword_10022F490);
  }
}

uint64_t sub_100025B94(_OWORD *a1, double a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_100025C1C(a1, isUniquelyReferenced_nonNull_native, a2);
  *uint64_t v2 = v7;
  return swift_bridgeObjectRelease();
}

_OWORD *sub_100025C1C(_OWORD *a1, char a2, double a3)
{
  uint64_t v4 = (void **)v3;
  int v8 = (void *)*v3;
  unint64_t v9 = sub_100025D40(a3);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_100043478(&qword_10022E5A8);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a2 & 1, v13)) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_100025D40(a3);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_13:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = *v4;
  if (v15)
  {
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v14);
    sub_10004377C((uint64_t)v19);
    return sub_100043510(a1, v19);
  }
  else
  {
    return sub_100025E20(v14, a1, v18, a3);
  }
}

unint64_t sub_100025D40(double a1)
{
  uint64_t v2 = static Hasher._hash(seed:_:)();
  return sub_100025D88(v2, a1);
}

unint64_t sub_100025D88(uint64_t a1, double a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      uint64_t v7 = ~v4;
      for (unint64_t result = (result + 1) & v7;
            ((*(void *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2) {
          break;
        }
      }
    }
  }
  return result;
}

_OWORD *sub_100025E20(unint64_t a1, _OWORD *a2, void *a3, double a4)
{
  a3[(a1 >> 6) + 8] |= 1 << a1;
  *(double *)(a3[6] + 8 * a1) = a4;
  unint64_t result = sub_100043510(a2, (_OWORD *)(a3[7] + 32 * a1));
  uint64_t v6 = a3[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a3[2] = v8;
  }
  return result;
}

void sub_100025E8C()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC14amsengagementd17EngagementService_currentEnginePerformer + 8];
  if (!v5) {
    goto LABEL_8;
  }
  uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC14amsengagementd17EngagementService_currentEnginePerformer];
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v6 == sub_10002A708() && v5 == v7)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
LABEL_8:
      if (qword_10022C498 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      uint64_t v10 = sub_10002D318();
      sub_100044798(v10);
      *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
      uint64_t v37 = (void *)type metadata accessor for EngagementService();
      unint64_t v35 = (unint64_t)v0;
      v0;
      id v11 = (id)AMSLogKey();
      if (v11)
      {
        BOOL v12 = v11;
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;

        swift_bridgeObjectRetain();
        sub_100049814();
        sub_100044E44();
        sub_100041F7C();
        uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
        sub_1000450B0(MetatypeMetadata);
        sub_100027BD8((uint64_t)&v32, &qword_10022F490);
        sub_100020E44();
        uint64_t v34 = &type metadata for String;
        uint64_t v32 = v13;
        uint64_t v33 = v15;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v32, &qword_10022F490);
        sub_1000208D8();
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020ECC();
        sub_100044E44();
        sub_100041F7C();
        uint64_t v24 = swift_getMetatypeMetadata();
        sub_1000450B0(v24);
        sub_100027BD8((uint64_t)&v32, &qword_10022F490);
        sub_100020E94();
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v35);
      uint64_t v37 = &type metadata for String;
      unint64_t v35 = 0xD00000000000001DLL;
      unint64_t v36 = 0x80000001001CDAE0;
      static LogMessage.safe(_:)();
      sub_100027BD8((uint64_t)&v35, &qword_10022F490);
      uint64_t v25 = static os_log_type_t.debug.getter();
      sub_10004841C(v25);
      swift_bridgeObjectRelease();
      type metadata accessor for JSAppEngine();
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 96) = 0;
      memcpy((void *)(v26 + 16), v2, 0x50uLL);
      sub_10002C008((uint64_t)v2);
      swift_retain();
      uint64_t v27 = sub_10002A708();
      sub_100054278(v27, v28, v26, (uint64_t)&off_100211010);
      goto LABEL_21;
    }
  }
  if (qword_10022C498 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v17 = sub_10002D318();
  sub_100044798(v17);
  *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
  uint64_t v37 = (void *)type metadata accessor for EngagementService();
  unint64_t v35 = (unint64_t)v0;
  uint64_t v18 = v0;
  id v19 = (id)AMSLogKey();
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;

    swift_bridgeObjectRetain();
    sub_100049814();
    sub_100044E44();
    sub_100041F7C();
    uint64_t v23 = swift_getMetatypeMetadata();
    sub_1000450B0(v23);
    sub_100027BD8((uint64_t)&v32, &qword_10022F490);
    sub_100020E44();
    uint64_t v34 = &type metadata for String;
    uint64_t v32 = v31;
    uint64_t v33 = v22;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v32, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020ECC();
    sub_100044E44();
    sub_100041F7C();
    uint64_t v29 = swift_getMetatypeMetadata();
    sub_1000450B0(v29);
    sub_100027BD8((uint64_t)&v32, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v35);
  uint64_t v37 = &type metadata for String;
  unint64_t v35 = 0xD00000000000001FLL;
  unint64_t v36 = 0x80000001001CDB00;
  static LogMessage.safe(_:)();
  sub_100027BD8((uint64_t)&v35, &qword_10022F490);
  uint64_t v30 = static os_log_type_t.debug.getter();
  sub_10004841C(v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_21:
  sub_100020FDC();
}

uint64_t sub_1000263C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v102 = a2;
  uint64_t v103 = a3;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v108 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v105 = (char *)&v87 - v9;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v89 = *(void *)(v10 - 8);
  uint64_t v90 = v10;
  __chkstk_darwin(v10);
  uint64_t v88 = (uint64_t)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  id v12 = (id)AMSLogKey();
  if (!v12) {
    id v12 = (id)AMSGenerateLogCorrelationKey();
  }
  uint64_t v109 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v110 = v13;

  if (qword_10022C5C8 != -1) {
    swift_once();
  }
  sub_10002A570(0xD000000000000013, 0x80000001001CCB70);
  if (qword_10022C498 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100043478(&qword_10022E560);
  uint64_t v15 = *(void *)(type metadata accessor for LogMessage() - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = (v16 + 32) & ~v16;
  uint64_t v104 = *(void *)(v15 + 72);
  uint64_t v101 = v14;
  uint64_t v98 = v16 | 7;
  uint64_t v99 = v17 + 2 * v104;
  uint64_t v18 = swift_allocObject();
  long long v97 = xmmword_1001C3120;
  *(_OWORD *)(v18 + 16) = xmmword_1001C3120;
  uint64_t v100 = v17;
  uint64_t v96 = (void *)type metadata accessor for EngagementService();
  *((void *)&v131 + 1) = v96;
  v130[0] = (uint64_t)v4;
  id v114 = v4;
  id v19 = (id)AMSLogKey();
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    sub_100049788(v130, *((uint64_t *)&v131 + 1));
    uint64_t DynamicType = swift_getDynamicType();
    v129[3] = swift_getMetatypeMetadata();
    v129[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v129, &qword_10022F490);
    v26._countAndFlagsBits = 5972026;
    v26._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    v129[3] = &type metadata for String;
    v129[0] = v21;
    v129[1] = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v129, &qword_10022F490);
    v27._countAndFlagsBits = 93;
    v27._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    sub_100049788(v130, *((uint64_t *)&v131 + 1));
    uint64_t v29 = swift_getDynamicType();
    v129[3] = swift_getMetatypeMetadata();
    v129[0] = v29;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v129, &qword_10022F490);
    v30._countAndFlagsBits = 58;
    v30._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v130);
  LogMessage.init(stringLiteral:)();
  uint64_t v31 = static os_log_type_t.default.getter();
  sub_10004841C(v31);
  swift_bridgeObjectRelease();
  unint64_t v122 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v123 = (uint64_t)_swiftEmptyArrayStorage;
  v130[0] = a1;
  swift_bridgeObjectRetain();
  sub_100028C90(v130);
  uint64_t v32 = v130[0];
  uint64_t v107 = *(void *)(v130[0] + 16);
  if (v107)
  {
    uint64_t v33 = 0;
    uint64_t v116 = 0;
    uint64_t v94 = (long long *)&v125;
    uint64_t v95 = OBJC_IVAR____TtC14amsengagementd17EngagementService_priorityQueue;
    uint64_t v91 = 0x80000001001CD2F0;
    uint64_t v92 = (void *)0x80000001001CD2D0;
    uint64_t v93 = (long long *)&v126;
    uint64_t v106 = v130[0];
    while (1)
    {
      uint64_t v34 = v32 + v33;
      memcpy(v129, (const void *)(v32 + v33 + 32), sizeof(v129));
      uint64_t v35 = *(unsigned __int8 *)(v32 + v33 + 32);
      uint64_t v36 = *(unsigned __int8 *)(v32 + v33 + 33);
      uint64_t v37 = *(void *)(v34 + 40);
      long long v38 = *(_OWORD *)(v34 + 48);
      long long v39 = *(_OWORD *)(v34 + 64);
      uint64_t v41 = *(void *)(v34 + 80);
      uint64_t v40 = *(void *)(v34 + 88);
      uint64_t v42 = *(unsigned __int8 *)(v34 + 96);
      uint64_t v43 = *(void *)(v34 + 104);
      int v115 = LOBYTE(v129[8]);
      uint64_t v113 = v33;
      long long v111 = v39;
      long long v112 = v38;
      if (LOBYTE(v129[8]) && LOBYTE(v129[8]) != 1)
      {
        char v137 = v129[0];
        sub_10002C008((uint64_t)v129);
        swift_bridgeObjectRelease();
      }
      else
      {
        char v137 = v129[0];
        char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_10002C008((uint64_t)v129);
        swift_bridgeObjectRelease();
        if ((v44 & 1) == 0) {
          goto LABEL_19;
        }
      }
      v130[0] = v35 | (v36 << 8);
      v130[1] = v37;
      long long v131 = v112;
      long long v132 = v111;
      uint64_t v133 = v41;
      uint64_t v134 = v40;
      uint64_t v135 = v42;
      uint64_t v136 = v43;
      sub_10002C008((uint64_t)v129);
      BOOL v45 = sub_1000B3318((uint64_t)v130);
      sub_100024DF0((uint64_t)v129);
      if (!v45)
      {
LABEL_19:
        *(_OWORD *)(swift_allocObject() + 16) = v97;
        uint64_t v121 = v96;
        uint64_t v49 = v114;
        uint64_t v119 = (uint64_t)v114;
        uint64_t v50 = v110;
        swift_bridgeObjectRetain_n();
        id v51 = v49;
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v52._countAndFlagsBits = 0;
        v52._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v52);
        sub_100049788(&v119, (uint64_t)v121);
        uint64_t v53 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v117[0] = v53;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v117, &qword_10022F490);
        v54._countAndFlagsBits = 5972026;
        v54._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v54);
        uint64_t MetatypeMetadata = &type metadata for String;
        v117[0] = v109;
        v117[1] = v50;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v117, &qword_10022F490);
        v55._countAndFlagsBits = 93;
        v55._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v55);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
        sub_10004377C((uint64_t)&v119);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v56._countAndFlagsBits = 0x6E69756575716E45;
        v56._object = (void *)0xEA00000000002067;
        LogMessage.StringInterpolation.appendLiteral(_:)(v56);
        if (v115)
        {
          if (v115 == 1)
          {
            uint64_t v57 = 0x696577746867696CLL;
            unint64_t v58 = 0xEF636E7953746867;
          }
          else
          {
            unint64_t v58 = 0xE400000000000000;
            uint64_t v57 = 1668184435;
          }
        }
        else
        {
          unint64_t v58 = 0xE700000000000000;
          uint64_t v57 = 0x65756575716E65;
        }
        uint64_t v121 = &type metadata for String;
        uint64_t v119 = v57;
        unint64_t v120 = v58;
        char v59 = BYTE1(v129[0]);
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v119, &qword_10022F490);
        v60._countAndFlagsBits = 0x7473657571657220;
        v60._object = (void *)0xEF203A7070612820;
        LogMessage.StringInterpolation.appendLiteral(_:)(v60);
        uint64_t v121 = &unk_10020E0E8;
        LOBYTE(v119) = v59;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v119, &qword_10022F490);
        v61._countAndFlagsBits = 0xD000000000000012;
        v61._object = v92;
        LogMessage.StringInterpolation.appendLiteral(_:)(v61);
        uint64_t v121 = &type metadata for Bool;
        LOBYTE(v119) = v137;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v119, &qword_10022F490);
        v62._countAndFlagsBits = 0x69726F697270202CLL;
        v62._object = (void *)0xEC000000203A7974;
        LogMessage.StringInterpolation.appendLiteral(_:)(v62);
        uint64_t v63 = sub_100027148();
        uint64_t v121 = &type metadata for String;
        uint64_t v119 = v63;
        unint64_t v120 = v64;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v119, &qword_10022F490);
        v65._countAndFlagsBits = 41;
        v65._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v65);
        LogMessage.init(stringInterpolation:)();
        uint64_t v66 = static os_log_type_t.default.getter();
        sub_10004841C(v66);
        swift_bridgeObjectRelease();
        uint64_t v67 = sub_100027148();
        uint64_t v69 = v68;
        uint64_t v70 = swift_allocObject();
        memcpy((void *)(v70 + 16), v129, 0x50uLL);
        uint64_t v71 = v110;
        *(void *)(v70 + 96) = v109;
        *(void *)(v70 + 104) = v71;
        *(void *)(v70 + 112) = v116;
        *(void *)(v70 + 120) = v51;
        *(unsigned char *)(v70 + 128) = v115;
        uint64_t v72 = v103;
        *(void *)(v70 + 136) = v102;
        *(void *)(v70 + 144) = v72;
        id v73 = v51;
        swift_bridgeObjectRetain();
        sub_10002C008((uint64_t)v129);
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1000299D4(v59, v67, v69, (uint64_t)&v124);
        sub_10002A91C();
        long long v128 = *v94;
        sub_10002711C((uint64_t)&v128);
        long long v127 = *v93;
        sub_10002711C((uint64_t)&v127);
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_25;
      }
      sub_100043478(&qword_10022D338);
      NSString v46 = String._bridgeToObjectiveC()();
      NSString v47 = String._bridgeToObjectiveC()();
      id v48 = (id)AMSError();

      Promise.__allocating_init(error:)();
LABEL_25:
      uint64_t v32 = v106;
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      if (v137 == 1)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        swift_release();
      }
      uint64_t v74 = v116 + 1;
      sub_100024DF0((uint64_t)v129);
      uint64_t v33 = v113 + 80;
      uint64_t v116 = v74;
      if (v107 == v74)
      {
        swift_release();
        unint64_t v75 = v122;
        goto LABEL_35;
      }
    }
  }
  swift_release();
  unint64_t v75 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_35:
  if (!(v75 >> 62))
  {
    if (*(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_37;
    }
LABEL_41:
    uint64_t v76 = 0;
    goto LABEL_42;
  }
  swift_bridgeObjectRetain();
  uint64_t v77 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v77) {
    goto LABEL_41;
  }
LABEL_37:
  if ((v75 & 0xC000000000000001) != 0)
  {
    uint64_t v76 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_42;
  }
  if (*(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v76 = *(void *)(v75 + 32);
    swift_retain();
LABEL_42:
    uint64_t v78 = v123;
    swift_retain();
    unint64_t v79 = swift_bridgeObjectRetain();
    uint64_t v80 = sub_10002B040(v79);
    swift_bridgeObjectRelease();
    uint64_t v81 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v82 = (void *)swift_allocObject();
    uint64_t v84 = v109;
    uint64_t v83 = v110;
    v82[2] = v81;
    v82[3] = v84;
    v82[4] = v83;
    swift_bridgeObjectRetain();
    sub_10002869C(0, 1, (uint64_t)sub_10002357C, (uint64_t)v82);
    swift_release();
    uint64_t v85 = v88;
    sub_10002A110(v84, v83, v78, v80, v75, v76, v88, (uint64_t)&unk_1002103C0, (uint64_t)sub_100029B04, (uint64_t)sub_1000221A8, v87, v88, v89, v90, v91, (uint64_t)v92, (uint64_t)v93, (uint64_t)v94, v95,
      (uint64_t)v96,
      v97,
      *((void (**)(void, uint64_t, uint64_t, uint64_t))&v97 + 1));
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v85, v90);
    return v78;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_10002711C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100027148()
{
  BOOL v1 = (*v0 & 1) == 0;
  sub_100027304(0, 3, 0);
  uint64_t v2 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v4 = v3;
  unint64_t v6 = *((void *)&_swiftEmptyArrayStorage + 2);
  unint64_t v5 = *((void *)&_swiftEmptyArrayStorage + 3);
  unint64_t v7 = v6 + 1;
  if (v6 >= v5 >> 1) {
    sub_1000465A4(v5);
  }
  *((void *)&_swiftEmptyArrayStorage + 2) = v7;
  uint64_t v8 = (char *)&_swiftEmptyArrayStorage + 16 * v6;
  *((void *)v8 + 4) = v2;
  *((void *)v8 + 5) = v4;
  dispatch thunk of CustomStringConvertible.description.getter();
  sub_100047F68();
  if (v10) {
    sub_1000465A4(v9);
  }
  *((void *)&_swiftEmptyArrayStorage + 2) = v7;
  uint64_t v11 = (char *)&_swiftEmptyArrayStorage + 16 * v1;
  *((void *)v11 + 4) = v2;
  *((void *)v11 + 5) = v4;
  dispatch thunk of CustomStringConvertible.description.getter();
  sub_100047F68();
  if (v10) {
    sub_1000465A4(v12);
  }
  *((void *)&_swiftEmptyArrayStorage + 2) = v7;
  uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 16 * v1;
  *((void *)v13 + 4) = v2;
  *((void *)v13 + 5) = v4;
  sub_100043478(&qword_100232940);
  sub_10002B6DC((unint64_t *)&qword_10022D988, &qword_100232940);
  uint64_t v14 = BidirectionalCollection<>.joined(separator:)();
  swift_release();
  return v14;
}

void sub_100027304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000736B8(a1, a2, a3, *v3, (uint64_t)&qword_10022D738, (void (*)(uint64_t))sub_10004A0C4, (void (*)(uint64_t))sub_100027354);
  *uint64_t v3 = v4;
}

uint64_t sub_100027354(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_100027434(void **a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  uint64_t v11 = *a1;
  if (*a1)
  {
    uint64_t v12 = qword_10022C498;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    *((void *)&v58 + 1) = type metadata accessor for EngagementService();
    *(void *)&long long v57 = a3;
    id v14 = a3;
    uint64_t v15 = sub_100027C50(a4);
    if (v16)
    {
      uint64_t v17 = v15;
      uint64_t v18 = v16;
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      sub_100049788(&v57, *((uint64_t *)&v58 + 1));
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v54 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v54, &qword_10022F490);
      v21._countAndFlagsBits = 5972026;
      v21._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v54 = v17;
      uint64_t v55 = v18;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v54, &qword_10022F490);
      v22._countAndFlagsBits = 93;
      v22._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v32._countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      sub_100049788(&v57, *((uint64_t *)&v58 + 1));
      uint64_t v33 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v54 = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v54, &qword_10022F490);
      v34._countAndFlagsBits = 58;
      v34._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v57);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v35._countAndFlagsBits = 0xD000000000000019;
    v35._object = (void *)0x80000001001CD850;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    uint64_t v36 = sub_100027D14(v13);
    if (v36) {
      swift_bridgeObjectRelease();
    }
    *((void *)&v58 + 1) = &type metadata for Bool;
    LOBYTE(v57) = v36 != 0;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v57, &qword_10022F490);
    v37._countAndFlagsBits = 0x7473657571655220;
    v37._object = (void *)0xEA0000000000203ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
    id v38 = [v13 request];
    id v39 = v38;
    if (v38) {

    }
    *((void *)&v58 + 1) = &type metadata for Bool;
    LOBYTE(v57) = v39 != 0;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v57, &qword_10022F490);
    v40._countAndFlagsBits = 0x736E6F6974634120;
    v40._object = (void *)0xEA0000000000203ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v40);
    uint64_t v41 = sub_100027CB0(v13);
    if (v41)
    {
      uint64_t v42 = *(void *)(v41 + 16);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v42 = 0;
    }
    *((void *)&v58 + 1) = &type metadata for Int;
    *(void *)&long long v57 = v42;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v57, &qword_10022F490);
    v43._countAndFlagsBits = 41;
    v43._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v43);
    LogMessage.init(stringInterpolation:)();
    uint64_t v44 = static os_log_type_t.default.getter();
    sub_10004841C(v44);
  }
  else
  {
    if (qword_10022C498 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    *((void *)&v58 + 1) = type metadata accessor for EngagementService();
    *(void *)&long long v57 = a3;
    id v23 = a3;
    uint64_t v24 = sub_100027C50(a4);
    if (v25)
    {
      uint64_t v26 = v24;
      uint64_t v27 = v25;
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v28._countAndFlagsBits = 0;
      v28._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      sub_100049788(&v57, *((uint64_t *)&v58 + 1));
      uint64_t v29 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v54 = v29;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v54, &qword_10022F490);
      v30._countAndFlagsBits = 5972026;
      v30._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v54 = v26;
      uint64_t v55 = v27;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v54, &qword_10022F490);
      v31._countAndFlagsBits = 93;
      v31._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v45._countAndFlagsBits = 0;
      v45._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      sub_100049788(&v57, *((uint64_t *)&v58 + 1));
      uint64_t v46 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v54 = v46;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v54, &qword_10022F490);
      v47._countAndFlagsBits = 58;
      v47._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v47);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v57);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v48._object = (void *)0x80000001001CD830;
    v48._countAndFlagsBits = 0xD000000000000010;
    LogMessage.StringInterpolation.appendLiteral(_:)(v48);
    if (a2)
    {
      swift_getErrorValue();
      *((void *)&v58 + 1) = v53;
      uint64_t v49 = sub_10003BAA4((uint64_t *)&v57);
      (*(void (**)(uint64_t *))(*(void *)(v53 - 8) + 16))(v49);
    }
    else
    {
      long long v57 = 0u;
      long long v58 = 0u;
    }
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v57, &qword_10022F490);
    v50._countAndFlagsBits = 0;
    v50._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v50);
    LogMessage.init(stringInterpolation:)();
    uint64_t v51 = static os_log_type_t.error.getter();
    sub_10004841C(v51);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100027BD8(uint64_t a1, uint64_t *a2)
{
  sub_100043478(a2);
  sub_1000456E0();
  sub_100043FB0();
  v3();
  return a1;
}

uint64_t type metadata accessor for EngagementService()
{
  return self;
}

uint64_t sub_100027C50(void *a1)
{
  id v1 = [a1 logKey];
  if (v1)
  {
    uint64_t v2 = v1;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return sub_100022570();
}

uint64_t sub_100027CB0(void *a1)
{
  id v1 = [a1 actions];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_100043478(&qword_10022D6F0);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_100027D14(void *a1)
{
  id v1 = [a1 data];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

Class sub_100027D80(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  v5.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  return v5.super.isa;
}

uint64_t sub_100027DFC()
{
  if (qword_10022C5D8 != -1) {
    swift_once();
  }
  id v1 = sub_100028504(*(unsigned char *)(v0 + OBJC_IVAR____TtC14amsengagementd15JSDatabaseStore_config + 1));
  sub_100043478(&qword_10022D330);
  uint64_t inited = (__n128 *)swift_initStackObject();
  sub_1000451A8(inited, (__n128)xmmword_1001C3110);
  uint64_t v3 = (objc_class *)type metadata accessor for JSUbiquitousDatabase();
  id v4 = (char *)objc_allocWithZone(v3);
  *(void *)&v4[OBJC_IVAR____TtC14amsengagementd20JSUbiquitousDatabase_keyValueStore] = v1;
  v9.receiver = v4;
  v9.super_class = v3;
  id v5 = v1;
  id v6 = objc_msgSendSuper2(&v9, "init");
  inited[4].n128_u64[1] = (unint64_t)v3;
  inited[3].n128_u64[0] = (unint64_t)v6;
  uint64_t v7 = Dictionary.init(dictionaryLiteral:)();

  return v7;
}

id sub_100027FB8(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    type metadata accessor for JSError();
    sub_1000DE184(0, 0x206E776F6E6B6E55, 0xED0000726F727245, 0, 0);
  }
  swift_errorRetain();
  id v4 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  id v5 = [v4 userInfo];
  uint64_t v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  v43[5] = v6;
  if (!a1
    || (v43[0] = a1,
        swift_errorRetain(),
        sub_100043478((uint64_t *)&unk_100233150),
        sub_100043478(&qword_100230208),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v42 = 0;
    long long v40 = 0u;
    long long v41 = 0u;
    goto LABEL_14;
  }
  if (!*((void *)&v41 + 1))
  {
LABEL_14:
    sub_1000DE478((uint64_t)&v40);
    goto LABEL_15;
  }
  sub_100028270(&v40, (uint64_t)v43);
  sub_1000494B0(v43);
  dispatch thunk of LocalizedError.errorDescription.getter();
  if (v7)
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100044B68(v8, v9, v10, v11, v12, v13, v14, v15, (uint64_t)v39.receiver, (uint64_t)v39.super_class, v40, *((uint64_t *)&v40 + 1), v41, *((uint64_t *)&v41 + 1));
  }
  sub_1000494B0(v43);
  dispatch thunk of LocalizedError.failureReason.getter();
  if (v16)
  {
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100044B68(v17, v18, v19, v20, v21, v22, v23, v24, (uint64_t)v39.receiver, (uint64_t)v39.super_class, v40, *((uint64_t *)&v40 + 1), v41, *((uint64_t *)&v41 + 1));
  }
  sub_1000494B0(v43);
  dispatch thunk of LocalizedError.recoverySuggestion.getter();
  if (v25)
  {
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100044B68(v26, v27, v28, v29, v30, v31, v32, v33, (uint64_t)v39.receiver, (uint64_t)v39.super_class, v40, *((uint64_t *)&v40 + 1), v41, *((uint64_t *)&v41 + 1));
  }
  sub_10004377C((uint64_t)v43);
LABEL_15:
  NSString v34 = [v4 domain];
  if (!v34)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v35 = [v4 code];
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v39.receiver = v2;
  v39.super_class = (Class)type metadata accessor for JSError();
  id v37 = objc_msgSendSuper2(&v39, "initWithDomain:code:userInfo:", v34, v35, isa);
  swift_errorRelease();

  return v37;
}

uint64_t sub_100028270(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_100028288()
{
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3140;
  *(void *)(inited + 32) = 0x6E69616D6F64;
  *(void *)(inited + 40) = 0xE600000000000000;
  id v2 = [v0 domain];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 1701080931;
  *(void *)(inited + 88) = 0xE400000000000000;
  *(void *)(inited + 96) = [v0 code];
  *(void *)(inited + 120) = &type metadata for Int;
  *(void *)(inited + 128) = 0x6567617373656DLL;
  *(void *)(inited + 136) = 0xE700000000000000;
  uint64_t v6 = sub_1000284EC();
  if (v7) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v7) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = 0xE000000000000000;
  }
  *(void *)(inited + 144) = v8;
  *(void *)(inited + 152) = v9;
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 176) = 0x656C746974;
  *(void *)(inited + 184) = 0xE500000000000000;
  uint64_t v10 = sub_1000284F8();
  if (v11) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = 0;
  }
  if (v11) {
    unint64_t v13 = v11;
  }
  else {
    unint64_t v13 = 0xE000000000000000;
  }
  *(void *)(inited + 192) = v12;
  *(void *)(inited + 200) = v13;
  *(void *)(inited + 216) = &type metadata for String;
  *(void *)(inited + 224) = 0x6F666E4972657375;
  *(void *)(inited + 232) = 0xE800000000000000;
  id v14 = [v0 userInfo];
  uint64_t v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)(inited + 264) = sub_100043478(&qword_10022D7B0);
  *(void *)(inited + 240) = v15;
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_100028450(SEL *a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for JSError();
  id v3 = objc_msgSendSuper2(&v7, *a1);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v3;
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v5;
}

uint64_t type metadata accessor for JSError()
{
  return self;
}

{
  return type metadata accessor for JSError();
}

uint64_t sub_1000284EC()
{
  return sub_100028450((SEL *)&selRef_ams_message);
}

uint64_t sub_1000284F8()
{
  return sub_100028450((SEL *)&selRef_ams_title);
}

void *sub_100028504(unsigned __int8 a1)
{
  if (*((unsigned char *)v1 + 24) != 1)
  {
    sub_100028610();
    swift_allocError();
    char v5 = 1;
    goto LABEL_7;
  }
  if (!sub_100057CE8())
  {
    sub_100028610();
    swift_allocError();
    char v5 = 0;
    goto LABEL_7;
  }
  swift_beginAccess();
  uint64_t v3 = *((void *)v1 + 2);
  swift_bridgeObjectRetain();
  id v1 = sub_100088BD0(a1, v3);
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_100028610();
    swift_allocError();
    char v5 = 2;
LABEL_7:
    *uint64_t v4 = v5;
    swift_willThrow();
  }
  return v1;
}

unint64_t sub_100028610()
{
  unint64_t result = qword_1002347F8;
  if (!qword_1002347F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002347F8);
  }
  return result;
}

uint64_t sub_10002865C()
{
  return String.init<A>(describing:)();
}

uint64_t sub_10002868C()
{
  return sub_10002865C();
}

uint64_t sub_10002869C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  double v44 = *(double *)&a1;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  __chkstk_darwin(v9);
  long long v40 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  id v38 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchTimeInterval();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (void *)((char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v37 = *(void *)(v45 - 8);
  uint64_t v16 = __chkstk_darwin(v45);
  uint64_t v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v36 - v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a3;
  *(void *)(v21 + 24) = a4;
  id v22 = objc_allocWithZone((Class)NSLock);
  swift_retain();
  id v23 = [v22 init];
  if (a2) {
    goto LABEL_8;
  }
  v36[1] = v5;
  if (qword_10022C588 != -1) {
    swift_once();
  }
  uint64_t result = static DispatchTime.now()();
  if ((~*(void *)&v44 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v44 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v44 < 9.22337204e18)
  {
    *uint64_t v15 = (uint64_t)v44;
    (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchTimeInterval.seconds(_:), v12);
    v36[0] = v20;
    + infix(_:_:)();
    (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
    double v44 = *(double *)(v37 + 8);
    (*(void (**)(char *, uint64_t))&v44)(v18, v45);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v23;
    *(void *)(v25 + 24) = v21;
    aBlock[4] = sub_1000BB864;
    aBlock[5] = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002CD0C;
    void aBlock[3] = &unk_100210270;
    uint64_t v26 = _Block_copy(aBlock);
    id v27 = v23;
    swift_retain();
    uint64_t v28 = v38;
    static DispatchQoS.unspecified.getter();
    uint64_t v46 = _swiftEmptyArrayStorage;
    sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100043478((uint64_t *)&unk_10022F4C0);
    sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
    uint64_t v29 = v40;
    uint64_t v30 = v43;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v31 = v36[0];
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v30);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v41);
    (*(void (**)(uint64_t, uint64_t))&v44)(v31, v45);
    swift_release();
LABEL_8:
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v23;
    *(void *)(v32 + 24) = v21;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v23;
    *(void *)(v33 + 24) = v21;
    id v34 = v23;
    swift_retain_n();
    id v35 = v34;
    sub_10004D400();
    swift_release();

    swift_release();
    return swift_release();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100028C90(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_100028CFC();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_100028DB8(v6);
  *a1 = v2;
  return result;
}

void sub_100028CFC()
{
}

void sub_100028D10()
{
  sub_10004A380();
  if (v3)
  {
    sub_100048B58();
    if (v4 != v5)
    {
      sub_100046134();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_100047120();
  if (v2)
  {
    sub_100043478(&qword_10022D740);
    uint64_t v6 = (void *)sub_10004D1A0();
    sub_100051500(v6);
  }
  objc_super v7 = (char *)sub_100045B18();
  if (v1)
  {
    sub_1000722A0(v7, v8, v9);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_10002970C((unint64_t)v7, v8, (unint64_t)v9);
  }
  swift_release();
}

uint64_t sub_100028DB8(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1000297F0(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_148;
  }
  uint64_t v5 = result;
  uint64_t result = (uint64_t)sub_1000BA2E0(v3 / 2);
  uint64_t v112 = result;
  uint64_t v119 = v6;
  uint64_t v115 = v3;
  uint64_t v110 = a1;
  if (v3 <= 0)
  {
    uint64_t v9 = (char *)_swiftEmptyArrayStorage;
    unint64_t v50 = _swiftEmptyArrayStorage[2];
LABEL_110:
    uint64_t v99 = (uint64_t)v9;
    if (v50 < 2)
    {
LABEL_125:
      uint64_t result = swift_bridgeObjectRelease();
      if (v115 >= -1)
      {
LABEL_126:
        *(void *)(v112 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_152;
    }
    uint64_t v100 = *v110;
    while (1)
    {
      unint64_t v101 = v50 - 2;
      if (v50 < 2) {
        break;
      }
      if (!v100) {
        goto LABEL_156;
      }
      uint64_t v102 = *(void *)(v99 + 32 + 16 * v101);
      uint64_t v103 = *(void *)(v99 + 32 + 16 * (v50 - 1) + 8);
      uint64_t result = sub_1000BA7AC((char *)(v100 + 80 * v102), (char *)(v100 + 80 * *(void *)(v99 + 32 + 16 * (v50 - 1))), v100 + 80 * v103, v119);
      if (v1) {
        goto LABEL_122;
      }
      if (v103 < v102) {
        goto LABEL_143;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1000BABA4(v99);
        uint64_t v99 = result;
      }
      if (v101 >= *(void *)(v99 + 16)) {
        goto LABEL_144;
      }
      uint64_t v104 = (void *)(v99 + 32 + 16 * v101);
      void *v104 = v102;
      v104[1] = v103;
      unint64_t v105 = *(void *)(v99 + 16);
      if (v50 > v105) {
        goto LABEL_145;
      }
      uint64_t result = (uint64_t)memmove((void *)(v99 + 32 + 16 * (v50 - 1)), (const void *)(v99 + 32 + 16 * v50), 16 * (v105 - v50));
      *(void *)(v99 + 16) = v105 - 1;
      unint64_t v50 = v105 - 1;
      if (v105 <= 2) {
        goto LABEL_125;
      }
    }
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
    return result;
  }
  uint64_t v111 = v5;
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v109 = *a1 + 80;
  uint64_t v106 = *a1 + 72;
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v10 = v3;
  while (1)
  {
    uint64_t v11 = v7;
    uint64_t v12 = v7 + 1;
    uint64_t v116 = v7;
    if (v7 + 1 < v10)
    {
      memcpy(__dst, (const void *)(v8 + 80 * v12), 0x50uLL);
      memcpy(v135, (const void *)(v8 + 80 * v11), sizeof(v135));
      sub_10002C008((uint64_t)__dst);
      sub_10002C008((uint64_t)v135);
      uint64_t v13 = sub_100027148();
      uint64_t v15 = v14;
      if (v13 == sub_100027148() && v15 == v16) {
        int v18 = 0;
      }
      else {
        int v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100024DF0((uint64_t)v135);
      uint64_t result = sub_100024DF0((uint64_t)__dst);
      Swift::Int v10 = v115;
      uint64_t v11 = v116;
      uint64_t v12 = v116 + 2;
      if (v116 + 2 < v115)
      {
        uint64_t v19 = v109 + 80 * v116;
        while (1)
        {
          uint64_t v20 = v12;
          memcpy(v134, (const void *)(v19 + 80), sizeof(v134));
          memcpy(v133, (const void *)v19, sizeof(v133));
          sub_10002C008((uint64_t)v134);
          sub_10002C008((uint64_t)v133);
          uint64_t v21 = sub_100027148();
          uint64_t v23 = v22;
          BOOL v25 = v21 == sub_100027148() && v23 == v24;
          int v26 = v25 ? 0 : _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100024DF0((uint64_t)v133);
          uint64_t result = sub_100024DF0((uint64_t)v134);
          if ((v18 ^ v26)) {
            break;
          }
          uint64_t v12 = v20 + 1;
          v19 += 80;
          Swift::Int v10 = v115;
          if (v20 + 1 >= v115)
          {
            uint64_t v12 = v115;
            goto LABEL_23;
          }
        }
        Swift::Int v10 = v115;
        uint64_t v12 = v20;
LABEL_23:
        uint64_t v11 = v116;
      }
      if (v18)
      {
        if (v12 < v11) {
          goto LABEL_149;
        }
        if (v11 < v12)
        {
          uint64_t v107 = v9;
          uint64_t v27 = 80 * v12;
          uint64_t v28 = 80 * v11;
          uint64_t v29 = v11;
          uint64_t v30 = v12;
          do
          {
            if (v29 != --v30)
            {
              if (!v8) {
                goto LABEL_155;
              }
              char v122 = *(unsigned char *)(v8 + v28);
              uint64_t v31 = v8 + v27;
              char v120 = *(unsigned char *)(v8 + v28 + 1);
              uint64_t v32 = *(void *)(v8 + v28 + 8);
              uint64_t v137 = *(void *)(v8 + v28 + 48);
              uint64_t v129 = *(void *)(v8 + v28 + 56);
              char v127 = *(unsigned char *)(v8 + v28 + 64);
              uint64_t v125 = *(void *)(v8 + v28 + 72);
              long long v117 = *(_OWORD *)(v8 + v28 + 16);
              long long v113 = *(_OWORD *)(v8 + v28 + 32);
              uint64_t result = (uint64_t)memmove((void *)(v8 + v28), (const void *)(v8 + v27 - 80), 0x50uLL);
              *(unsigned char *)(v31 - 80) = v122;
              *(unsigned char *)(v31 - 79) = v120;
              *(void *)(v31 - 72) = v32;
              *(_OWORD *)(v31 - 64) = v117;
              *(_OWORD *)(v31 - 48) = v113;
              *(void *)(v31 - 32) = v137;
              *(void *)(v31 - 24) = v129;
              *(unsigned char *)(v31 - 16) = v127;
              *(void *)(v31 - 8) = v125;
            }
            ++v29;
            v27 -= 80;
            v28 += 80;
          }
          while (v29 < v30);
          Swift::Int v10 = v115;
          uint64_t v11 = v116;
          uint64_t v9 = v107;
        }
      }
    }
    if (v12 < v10)
    {
      if (__OFSUB__(v12, v11)) {
        goto LABEL_147;
      }
      if (v12 - v11 < v111)
      {
        if (__OFADD__(v11, v111)) {
          goto LABEL_150;
        }
        if (v11 + v111 >= v10) {
          Swift::Int v33 = v10;
        }
        else {
          Swift::Int v33 = v11 + v111;
        }
        if (v33 < v11) {
          goto LABEL_151;
        }
        if (v12 != v33)
        {
          uint64_t v121 = v8;
          uint64_t v108 = v9;
          id v34 = (void *)(v106 + 80 * v12);
          uint64_t v114 = v33;
          do
          {
            uint64_t v35 = v11;
            uint64_t v118 = v34;
            uint64_t v123 = v12;
            while (1)
            {
              memcpy(v132, v34 - 9, sizeof(v132));
              memcpy(v131, v34 - 19, sizeof(v131));
              sub_10002C008((uint64_t)v132);
              sub_10002C008((uint64_t)v131);
              uint64_t v36 = sub_100027148();
              uint64_t v38 = v37;
              if (v36 == sub_100027148() && v38 == v39) {
                break;
              }
              char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_100024DF0((uint64_t)v131);
              uint64_t result = sub_100024DF0((uint64_t)v132);
              if ((v41 & 1) == 0) {
                goto LABEL_53;
              }
              if (!v121) {
                goto LABEL_153;
              }
              char v42 = *((unsigned char *)v34 - 72);
              char v43 = *((unsigned char *)v34 - 71);
              uint64_t v44 = *(v34 - 8);
              uint64_t v45 = *(v34 - 2);
              uint64_t v130 = *(v34 - 3);
              LODWORD(v137) = *((unsigned __int8 *)v34 - 8);
              uint64_t v46 = *v34;
              long long v126 = *(_OWORD *)(v34 - 5);
              long long v128 = *(_OWORD *)(v34 - 7);
              uint64_t result = (uint64_t)memcpy(v34 - 9, v34 - 19, 0x50uLL);
              *(v34 - 10) = v46;
              v34 -= 10;
              *((unsigned char *)v34 - 72) = v42;
              *((unsigned char *)v34 - 71) = v43;
              *(v34 - 8) = v44;
              *(_OWORD *)(v34 - 7) = v128;
              *(_OWORD *)(v34 - 5) = v126;
              *(v34 - 3) = v130;
              *(v34 - 2) = v45;
              ++v35;
              *((unsigned char *)v34 - 8) = v137;
              uint64_t v47 = v123;
              if (v123 == v35) {
                goto LABEL_54;
              }
            }
            swift_bridgeObjectRelease_n();
            sub_100024DF0((uint64_t)v131);
            uint64_t result = sub_100024DF0((uint64_t)v132);
LABEL_53:
            uint64_t v47 = v123;
LABEL_54:
            uint64_t v12 = v47 + 1;
            uint64_t v11 = v116;
            id v34 = v118 + 10;
          }
          while (v12 != v114);
          uint64_t v12 = v114;
          uint64_t v9 = v108;
          uint64_t v8 = v121;
        }
      }
    }
    if (v12 < v11) {
      goto LABEL_146;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1000BAAAC(0, *((void *)v9 + 2) + 1, 1, v9);
      uint64_t v9 = (char *)result;
    }
    unint64_t v49 = *((void *)v9 + 2);
    unint64_t v48 = *((void *)v9 + 3);
    unint64_t v50 = v49 + 1;
    if (v49 >= v48 >> 1)
    {
      uint64_t result = (uint64_t)sub_1000BAAAC((char *)(v48 > 1), v49 + 1, 1, v9);
      uint64_t v9 = (char *)result;
    }
    *((void *)v9 + 2) = v50;
    uint64_t v51 = v9 + 32;
    Swift::String v52 = &v9[16 * v49 + 32];
    *(void *)Swift::String v52 = v116;
    *((void *)v52 + 1) = v12;
    uint64_t v124 = v12;
    if (v49) {
      break;
    }
    unint64_t v50 = 1;
LABEL_104:
    Swift::Int v10 = v115;
    uint64_t v7 = v124;
    if (v124 >= v115) {
      goto LABEL_110;
    }
  }
  while (1)
  {
    unint64_t v53 = v50 - 1;
    if (v50 >= 4)
    {
      long long v58 = &v51[2 * v50];
      uint64_t v59 = *(v58 - 8);
      uint64_t v60 = *(v58 - 7);
      BOOL v64 = __OFSUB__(v60, v59);
      uint64_t v61 = v60 - v59;
      if (v64) {
        goto LABEL_131;
      }
      uint64_t v63 = *(v58 - 6);
      uint64_t v62 = *(v58 - 5);
      BOOL v64 = __OFSUB__(v62, v63);
      uint64_t v56 = v62 - v63;
      char v57 = v64;
      if (v64) {
        goto LABEL_132;
      }
      unint64_t v65 = v50 - 2;
      uint64_t v66 = &v51[2 * v50 - 4];
      uint64_t v68 = *v66;
      uint64_t v67 = v66[1];
      BOOL v64 = __OFSUB__(v67, v68);
      uint64_t v69 = v67 - v68;
      if (v64) {
        goto LABEL_133;
      }
      BOOL v64 = __OFADD__(v56, v69);
      uint64_t v70 = v56 + v69;
      if (v64) {
        goto LABEL_135;
      }
      if (v70 >= v61)
      {
        uint64_t v88 = &v51[2 * v53];
        uint64_t v90 = *v88;
        uint64_t v89 = v88[1];
        BOOL v64 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v64) {
          goto LABEL_141;
        }
        BOOL v81 = v56 < v91;
        goto LABEL_93;
      }
    }
    else
    {
      if (v50 != 3)
      {
        uint64_t v82 = *((void *)v9 + 4);
        uint64_t v83 = *((void *)v9 + 5);
        BOOL v64 = __OFSUB__(v83, v82);
        uint64_t v75 = v83 - v82;
        char v76 = v64;
        goto LABEL_87;
      }
      uint64_t v55 = *((void *)v9 + 4);
      uint64_t v54 = *((void *)v9 + 5);
      BOOL v64 = __OFSUB__(v54, v55);
      uint64_t v56 = v54 - v55;
      char v57 = v64;
    }
    if (v57) {
      goto LABEL_134;
    }
    unint64_t v65 = v50 - 2;
    uint64_t v71 = &v51[2 * v50 - 4];
    uint64_t v73 = *v71;
    uint64_t v72 = v71[1];
    BOOL v74 = __OFSUB__(v72, v73);
    uint64_t v75 = v72 - v73;
    char v76 = v74;
    if (v74) {
      goto LABEL_136;
    }
    uint64_t v77 = &v51[2 * v53];
    uint64_t v79 = *v77;
    uint64_t v78 = v77[1];
    BOOL v64 = __OFSUB__(v78, v79);
    uint64_t v80 = v78 - v79;
    if (v64) {
      goto LABEL_138;
    }
    if (__OFADD__(v75, v80)) {
      goto LABEL_140;
    }
    if (v75 + v80 >= v56)
    {
      BOOL v81 = v56 < v80;
LABEL_93:
      if (v81) {
        unint64_t v53 = v65;
      }
      goto LABEL_95;
    }
LABEL_87:
    if (v76) {
      goto LABEL_137;
    }
    uint64_t v84 = &v51[2 * v53];
    uint64_t v86 = *v84;
    uint64_t v85 = v84[1];
    BOOL v64 = __OFSUB__(v85, v86);
    uint64_t v87 = v85 - v86;
    if (v64) {
      goto LABEL_139;
    }
    if (v87 < v75) {
      goto LABEL_104;
    }
LABEL_95:
    unint64_t v92 = v53 - 1;
    if (v53 - 1 >= v50)
    {
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
      goto LABEL_142;
    }
    if (!v8) {
      goto LABEL_154;
    }
    uint64_t v93 = v9;
    uint64_t v94 = &v51[2 * v92];
    uint64_t v95 = *v94;
    uint64_t v96 = &v51[2 * v53];
    uint64_t v97 = v96[1];
    uint64_t result = sub_1000BA7AC((char *)(v8 + 80 * *v94), (char *)(v8 + 80 * *v96), v8 + 80 * v97, v119);
    if (v1) {
      break;
    }
    if (v97 < v95) {
      goto LABEL_128;
    }
    if (v53 > *((void *)v93 + 2)) {
      goto LABEL_129;
    }
    *uint64_t v94 = v95;
    v51[2 * v92 + 1] = v97;
    unint64_t v98 = *((void *)v93 + 2);
    if (v53 >= v98) {
      goto LABEL_130;
    }
    uint64_t v9 = v93;
    unint64_t v50 = v98 - 1;
    uint64_t result = (uint64_t)memmove(&v51[2 * v53], v96 + 2, 16 * (v98 - 1 - v53));
    *((void *)v93 + 2) = v98 - 1;
    if (v98 <= 2) {
      goto LABEL_104;
    }
  }
LABEL_122:
  uint64_t result = swift_bridgeObjectRelease();
  if (v115 >= -1) {
    goto LABEL_126;
  }
  __break(1u);
  return result;
}

uint64_t sub_10002970C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 80 * a2 > a1 ? (BOOL v3 = a1 + 80 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1000297F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v18 = result;
  uint64_t v21 = a3;
  if (a3 != a2)
  {
    uint64_t v20 = *a4;
    char v4 = (void *)(*a4 + 80 * a3 + 72);
    while (2)
    {
      uint64_t v5 = v18;
      uint64_t v19 = v4;
      while (1)
      {
        memcpy(__dst, v4 - 9, 0x50uLL);
        memcpy(v25, v4 - 19, sizeof(v25));
        sub_10002C008((uint64_t)__dst);
        sub_10002C008((uint64_t)v25);
        uint64_t v6 = sub_100027148();
        uint64_t v8 = v7;
        if (v6 == sub_100027148() && v8 == v9) {
          break;
        }
        char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100024DF0((uint64_t)v25);
        uint64_t result = sub_100024DF0((uint64_t)__dst);
        if (v11)
        {
          if (!v20)
          {
            __break(1u);
            return result;
          }
          char v12 = *((unsigned char *)v4 - 72);
          char v13 = *((unsigned char *)v4 - 71);
          uint64_t v14 = *(v4 - 8);
          uint64_t v15 = *(v4 - 2);
          uint64_t v24 = *(v4 - 3);
          int v27 = *((unsigned __int8 *)v4 - 8);
          uint64_t v16 = *v4;
          long long v22 = *(_OWORD *)(v4 - 5);
          long long v23 = *(_OWORD *)(v4 - 7);
          uint64_t result = (uint64_t)memcpy(v4 - 9, v4 - 19, 0x50uLL);
          *(v4 - 10) = v16;
          v4 -= 10;
          *((unsigned char *)v4 - 72) = v12;
          *((unsigned char *)v4 - 71) = v13;
          *(v4 - 8) = v14;
          *(_OWORD *)(v4 - 7) = v23;
          *(_OWORD *)(v4 - 5) = v22;
          *(v4 - 3) = v24;
          *(v4 - 2) = v15;
          ++v5;
          *((unsigned char *)v4 - 8) = v27;
          if (v21 != v5) {
            continue;
          }
        }
        goto LABEL_13;
      }
      swift_bridgeObjectRelease_n();
      sub_100024DF0((uint64_t)v25);
      uint64_t result = sub_100024DF0((uint64_t)__dst);
LABEL_13:
      char v4 = v19 + 10;
      if (++v21 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1000299D4@<X0>(char a1@<W0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v6 = 0xE900000000000073;
  uint64_t v7 = 0x636974796C616E61;
  switch(a1)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v7 = 0x6C616E7265746E69;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v7 = 0x7379656E72756F6ALL;
      break;
    case 3:
      unint64_t v6 = 0xEF736E6F69746164;
      uint64_t v7 = 0x6E656D6D6F636572;
      break;
    default:
      break;
  }
  uint64_t v13 = v7;
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = 46;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = a2;
  v11._object = a3;
  String.append(_:)(v11);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)a4 = a1;
  *(unsigned char *)(a4 + 1) = 0;
  *(void *)(a4 + 8) = v13;
  *(void *)(a4 + 16) = v6;
  *(void *)(a4 + 24) = a2;
  *(void *)(a4 + 32) = a3;
  return result;
}

uint64_t sub_100029B04(uint64_t a1, uint64_t a2)
{
  return sub_100029B20(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100029B1C);
}

uint64_t sub_100029B20(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = type metadata accessor for Date();
  sub_100044798(v6);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v12 = (*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = v3 + v11;
  uint64_t v14 = *(void *)(v3 + v12);
  uint64_t v15 = (uint64_t *)(v3 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  return a3(a1, a2, v13, v14, v16, v17);
}

void sub_100029BCC()
{
}

void sub_100029BE8()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v11 = sub_1000208F0(v10);
  __chkstk_darwin(v11);
  sub_100011EC0();
  __chkstk_darwin(v12);
  sub_100043478(&qword_10022F0D0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1001C3110;
  Date.timeIntervalSinceNow.getter();
  *(void *)(v13 + 56) = &type metadata for Double;
  *(void *)(v13 + 64) = &protocol witness table for Double;
  *(double *)(v13 + 32) = fabs(v14);
  String.init(format:_:)();
  if (v9)
  {
    if (qword_10022C498 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v15 = sub_10002D318();
    sub_100044798(v15);
    *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
    *((void *)&v40 + 1) = type metadata accessor for EngagementService();
    *(void *)&long long v39 = v5;
    if (v1)
    {
      id v16 = v5;
      swift_bridgeObjectRetain();
      sub_100049814();
      sub_100044E44();
      sub_100041F7C();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000450B0(MetatypeMetadata);
      sub_10002E604();
      sub_100020E44();
      uint64_t v38 = &type metadata for String;
      uint64_t v36 = v3;
      uint64_t v37 = v1;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002E604();
      uint64_t v18 = 93;
    }
    else
    {
      id v23 = v5;
      sub_100020ECC();
      sub_100044E44();
      sub_100041F7C();
      uint64_t v24 = swift_getMetatypeMetadata();
      sub_1000450B0(v24);
      sub_100027BD8((uint64_t)&v36, &qword_10022F490);
      uint64_t v18 = 58;
    }
    unint64_t v25 = 0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v18);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)&v39);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v26._countAndFlagsBits = 0xD000000000000020;
    v26._object = (void *)0x80000001001CD380;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    *((void *)&v40 + 1) = &type metadata for String;
    sub_100022170();
    sub_100027BD8((uint64_t)&v39, &qword_10022F490);
    v27._countAndFlagsBits = 41;
    v27._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)();
    uint64_t v28 = static os_log_type_t.default.getter();
  }
  else
  {
    if (qword_10022C498 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v19 = sub_10002D318();
    sub_100044798(v19);
    *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
    *((void *)&v40 + 1) = type metadata accessor for EngagementService();
    *(void *)&long long v39 = v5;
    if (v1)
    {
      id v20 = v5;
      swift_bridgeObjectRetain();
      sub_100049814();
      sub_100044E44();
      sub_100041F7C();
      uint64_t v21 = swift_getMetatypeMetadata();
      sub_1000450B0(v21);
      sub_10002E604();
      sub_100020E44();
      uint64_t v38 = &type metadata for String;
      uint64_t v36 = v3;
      uint64_t v37 = v1;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002E604();
      uint64_t v22 = 93;
    }
    else
    {
      id v29 = v5;
      sub_100020ECC();
      sub_100044E44();
      sub_100041F7C();
      uint64_t v30 = swift_getMetatypeMetadata();
      sub_1000450B0(v30);
      sub_100027BD8((uint64_t)&v36, &qword_10022F490);
      uint64_t v22 = 58;
    }
    unint64_t v31 = 0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v22);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)&v39);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_10002064C();
    v32._countAndFlagsBits = 0xD00000000000001ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    *((void *)&v40 + 1) = &type metadata for String;
    sub_100022170();
    sub_100027BD8((uint64_t)&v39, &qword_10022F490);
    v33._countAndFlagsBits = 8233;
    v33._object = (void *)0xE200000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v33);
    if (v7)
    {
      swift_getErrorValue();
      *((void *)&v40 + 1) = v35;
      sub_10003BAA4((uint64_t *)&v39);
      sub_1000456E0();
      (*(void (**)(void))(v34 + 16))();
    }
    else
    {
      long long v39 = 0u;
      long long v40 = 0u;
    }
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v39, &qword_10022F490);
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    uint64_t v28 = static os_log_type_t.error.getter();
  }
  sub_10004841C(v28);
  swift_bridgeObjectRelease();
  sub_100020FDC();
}

uint64_t sub_10002A0FC()
{
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  return v0;
}

void sub_10002A110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(void, uint64_t, uint64_t, uint64_t))
{
  sub_1000209F4();
  uint64_t v67 = v23;
  id v68 = v22;
  uint64_t v65 = v24;
  uint64_t v66 = v25;
  unint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v30 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v32 = v31;
  uint64_t v34 = *(void *)(v33 + 64);
  __chkstk_darwin(v35);
  uint64_t v36 = (char *)v57 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v38 = sub_1000208F0(v37);
  __chkstk_darwin(v38);
  sub_100011D4C();
  if (!(v27 >> 62))
  {
    uint64_t v39 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v39) {
      goto LABEL_3;
    }
LABEL_11:
    if (qword_10022C498 == -1)
    {
LABEL_12:
      sub_100043478(&qword_10022E560);
      uint64_t v47 = type metadata accessor for LogMessage();
      sub_100044798(v47);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v72 = type metadata accessor for EngagementService();
      v71[0] = v68;
      id v48 = v68;
      id v49 = (id)AMSLogKey();
      if (v49)
      {
        unint64_t v50 = v49;
        uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v53 = v52;

        swift_bridgeObjectRetain();
        sub_100020F60();
        sub_100020E60();
        sub_100049788(v71, v72);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v69[0] = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v69, &qword_10022F490);
        sub_100020E44();
        uint64_t MetatypeMetadata = &type metadata for String;
        v69[0] = v51;
        v69[1] = v53;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v69, &qword_10022F490);
        sub_1000208D8();
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        sub_100020E60();
        sub_100049788(v71, v72);
        uint64_t v55 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v69[0] = v55;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v69, &qword_10022F490);
        sub_100020E94();
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v71);
      LogMessage.init(stringLiteral:)();
      uint64_t v56 = static os_log_type_t.error.getter();
      sub_10004841C(v56);
      goto LABEL_16;
    }
LABEL_18:
    swift_once();
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v39) {
    goto LABEL_11;
  }
LABEL_3:
  if (v39 < 1)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v61 = a21;
  uint64_t v62 = a22;
  uint64_t v59 = v32 + 16;
  unint64_t v60 = v27 & 0xC000000000000001;
  v57[1] = v32 + 32;
  uint64_t v58 = v34 + 7;
  swift_bridgeObjectRetain();
  uint64_t v40 = 0;
  uint64_t v63 = v39;
  unint64_t v64 = v27;
  do
  {
    if (v60) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    ++v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v36, v66, v30);
    unint64_t v41 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    unint64_t v42 = (v58 + v41) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v43 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v43 + v41, v36, v30);
    id v44 = v68;
    *(void *)(v43 + v42) = v68;
    uint64_t v45 = (void *)(v43 + ((v42 + 15) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v45 = v65;
    v45[1] = v29;
    id v46 = v44;
    swift_bridgeObjectRetain();
    v62(0, 1, v61, v43);
    swift_release();
    swift_release();
  }
  while (v63 != v40);
LABEL_16:
  swift_bridgeObjectRelease();
  sub_100020FDC();
}

uint64_t sub_10002A570(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = v3[2];
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v3;
  v8[3] = a1;
  v8[4] = a2;
  v8[5] = v6;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10001BD5C;
  *(void *)(v9 + 24) = v8;
  v12[4] = sub_10001B5D4;
  v12[5] = v9;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10001B5AC;
  void v12[3] = &unk_100217178;
  uint64_t v10 = _Block_copy(v12);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v7, v10);
  _Block_release(v10);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v7) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10002A708()
{
  type metadata accessor for UUID();
  sub_100044830();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_100047480();
  if (*(unsigned __int8 *)(v1 + 64) - 1 > 1)
  {
    sub_100043478(&qword_10022D738);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1001C3120;
    unint64_t v8 = 0xE900000000000073;
    uint64_t v9 = 0x636974796C616E61;
    uint64_t v10 = v7;
    switch(*(unsigned char *)(v1 + 1))
    {
      case 1:
        unint64_t v8 = 0xE800000000000000;
        uint64_t v9 = 0x6C616E7265746E69;
        break;
      case 2:
        unint64_t v8 = 0xE800000000000000;
        uint64_t v9 = 0x7379656E72756F6ALL;
        break;
      case 3:
        unint64_t v8 = 0xEF736E6F69746164;
        uint64_t v9 = 0x6E656D6D6F636572;
        break;
      default:
        break;
    }
    *(void *)(v7 + 32) = v9;
    *(void *)(v7 + 40) = v8;
    *(void *)(v7 + 48) = String.init<A>(_:)();
    *(void *)(v10 + 56) = v11;
    sub_100043478(&qword_100232940);
    sub_10002B6DC((unint64_t *)&qword_10022D988, &qword_100232940);
    uint64_t v6 = BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    UUID.init()();
    uint64_t v6 = UUID.uuidString.getter();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v0);
  }
  return v6;
}

void sub_10002A91C()
{
  sub_1000209F4();
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v21 = v8;
  uint64_t v10 = v9;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  __chkstk_darwin(v11);
  uint64_t v24 = sub_100040C78();
  sub_100020DEC();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_10002D300();
  sub_100043478(v5);
  uint64_t v15 = Promise.__allocating_init()();
  long long v16 = *(_OWORD *)(v10 + 8);
  long long v26 = *(_OWORD *)(v10 + 24);
  long long v27 = v16;
  uint64_t v17 = swift_allocObject();
  long long v18 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)(v17 + 24) = *(_OWORD *)v10;
  *(void *)(v17 + 16) = v0;
  *(_OWORD *)(v17 + 40) = v18;
  *(void *)(v17 + 56) = *(void *)(v10 + 32);
  *(void *)(v17 + 64) = v21;
  *(void *)(v17 + 72) = v7;
  *(void *)(v17 + 80) = v15;
  v25[4] = v22;
  v25[5] = v17;
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 1107296256;
  _OWORD v25[2] = sub_10002CD0C;
  void v25[3] = v23;
  uint64_t v19 = _Block_copy(v25);
  swift_retain();
  sub_10002AB90((uint64_t)&v27);
  sub_10002AB90((uint64_t)&v26);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  sub_100040FB8();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);
  sub_100043FB0();
  v20();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v24);
  swift_release();
  sub_100020FDC();
}

uint64_t sub_10002AB90(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for EnqueueRunner()
{
  return self;
}

uint64_t sub_10002ABE0(void *__src, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 48) = 0;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  memcpy((void *)(v3 + 56), __src, 0x50uLL);
  char v7 = *((unsigned char *)__src + 1);
  *(void *)(v3 + 136) = a2;
  *(void *)(v3 + 144) = a3;
  *(unsigned char *)(v3 + 152) = v7;
  return v3;
}

uint64_t SQLDatabase.init(path:readonly:fileProtection:schemaBlock:corruptionBlock:)(uint64_t a1, uint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = v8;
  type metadata accessor for OS_dispatch_queue.Attributes();
  sub_100043B1C();
  __chkstk_darwin(v14);
  sub_100040A70();
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v16 = sub_1000208F0(v15);
  __chkstk_darwin(v16);
  sub_100040A70();
  uint64_t v29 = type metadata accessor for DispatchQoS.QoSClass();
  sub_100020DEC();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_10002D300();
  uint64_t v20 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100020DEC();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  sub_100020EAC();
  uint64_t v26 = v25 - v24;
  *(unsigned char *)(v10 + 56) = 0;
  *(void *)(v10 + 64) = 0;
  *(unsigned char *)(v10 + 112) = 0;
  *(void *)(v10 + 40) = a7;
  *(void *)(v10 + 48) = a8;
  *(void *)(v10 + 96) = a6;
  *(void *)(v10 + 104) = &_swiftEmptyArrayStorage;
  *(unsigned char *)(v10 + 32) = a3;
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 80) = a4;
  *(void *)(v10 + 88) = a5;
  sub_1000438EC();
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v26, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v20);
  (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v9, enum case for DispatchQoS.QoSClass.default(_:), v29);
  sub_100050578(a7);
  sub_100050578(a5);
  id v27 = a4;
  static OS_dispatch_queue.global(qos:)();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v9, v29);
  static DispatchQoS.unspecified.getter();
  sub_10002AFB0((unint64_t *)&qword_10022F470, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100043478((uint64_t *)&unk_100231D60);
  sub_10002B720((unint64_t *)&qword_10022F480, (uint64_t *)&unk_100231D60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_10002064C();
  *(void *)(v10 + 72) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  if (qword_10022C5B0 != -1) {
    swift_once();
  }
  OS_dispatch_queue.setSpecific<A>(key:value:)();
  sub_10003E0EC(a7);
  sub_10003E0EC(a5);

  return v10;
}

uint64_t sub_10002AFB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002AFF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002B040(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  __chkstk_darwin(v5);
  char v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v39 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_100043478(&qword_10022F140);
  uint64_t v41 = v12;
  if (v12)
  {
    unint64_t v40 = a1;
    uint64_t v30 = v10;
    uint64_t v31 = v9;
    uint64_t v32 = v4;
    uint64_t v33 = v2;
    uint64_t v38 = Promise.__allocating_init()();
    uint64_t v13 = dispatch_group_create();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = _swiftEmptyArrayStorage;
    uint64_t v34 = sub_10004D510(0, (unint64_t *)&qword_10022F690);
    if (qword_10022C588 != -1) {
      swift_once();
    }
    id v15 = (id)qword_100244180;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100050588((unint64_t *)&qword_10022F470, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
    sub_100043478((uint64_t *)&unk_100231D60);
    sub_10002B720((unint64_t *)&qword_10022F480, (uint64_t *)&unk_100231D60);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    (*(void (**)(char *, void, uint64_t))(v36 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v37);
    uint64_t v16 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = _swiftEmptyArrayStorage;
    if (v41 < 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v18 = result;
      unint64_t v19 = v40 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      uint64_t v20 = 0;
      do
      {
        if (v19) {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          swift_retain();
        }
        ++v20;
        dispatch_group_enter(v13);
        uint64_t v21 = (void *)swift_allocObject();
        v21[2] = v16;
        void v21[3] = v18;
        v21[4] = v14;
        v21[5] = v13;
        swift_retain();
        swift_retain();
        id v22 = v16;
        uint64_t v23 = v13;
        sub_1000221A8();
        swift_release();
        swift_release();
      }
      while (v41 != v20);
      swift_bridgeObjectRelease();
      uint64_t v24 = (void *)swift_allocObject();
      uint64_t v25 = v38;
      void v24[2] = v14;
      void v24[3] = v25;
      void v24[4] = v18;
      aBlock[4] = sub_10002FB6C;
      aBlock[5] = v24;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10002CD0C;
      void aBlock[3] = &unk_100210450;
      uint64_t v26 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_retain();
      id v27 = v39;
      static DispatchQoS.unspecified.getter();
      unint64_t v42 = _swiftEmptyArrayStorage;
      sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100043478((uint64_t *)&unk_10022F4C0);
      sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
      uint64_t v28 = v32;
      uint64_t v29 = v33;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v28, v29);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v31);
      swift_release();
      swift_release();
      swift_release();
      return v38;
    }
  }
  else
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    return Promise.__allocating_init(value:)();
  }
  return result;
}

uint64_t sub_10002B6DC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006026C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002B720(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006026C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10002B770(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  sub_100020EAC();
  uint64_t v89 = type metadata accessor for UUID();
  uint64_t v87 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  sub_100020EAC();
  uint64_t v11 = v10 - v9;
  uint64_t v90 = sub_100043478(&qword_10022FCB0);
  __chkstk_darwin(v90);
  sub_100020EAC();
  uint64_t v14 = v13 - v12;
  id v15 = (objc_class *)type metadata accessor for JSAccountStore();
  uint64_t v16 = (char *)objc_allocWithZone(v15);
  *(void *)&v16[OBJC_IVAR____TtC14amsengagementd14JSAccountStore_accountStore] = a2;
  v100.receiver = v16;
  v100.super_class = v15;
  uint64_t v17 = v4;
  id v18 = a2;
  id v19 = objc_msgSendSuper2(&v100, "init");
  sub_100049484((uint64_t)v19, OBJC_IVAR____TtC14amsengagementd5JSAMS_accounts);
  id v20 = objc_allocWithZone((Class)type metadata accessor for JSApp());
  sub_100048704();
  id v21 = sub_100053E7C((uint64_t)a1);
  sub_100049484((uint64_t)v21, OBJC_IVAR____TtC14amsengagementd5JSAMS_app);
  id v22 = (objc_class *)type metadata accessor for JSBacklog();
  id v23 = objc_allocWithZone(v22);
  sub_100045164((uint64_t)v23, OBJC_IVAR____TtC14amsengagementd9JSBacklog_config);
  sub_10002C008((uint64_t)a1);
  v99.receiver = v23;
  v99.super_class = v22;
  id v24 = objc_msgSendSuper2(&v99, "init");
  sub_100049484((uint64_t)v24, OBJC_IVAR____TtC14amsengagementd5JSAMS_backlog);
  id v25 = objc_allocWithZone((Class)type metadata accessor for JSClient());
  sub_100048704();
  id v26 = a3;
  id v27 = sub_1000097D0(v26, (uint64_t)a1);
  sub_100049484((uint64_t)v27, OBJC_IVAR____TtC14amsengagementd5JSAMS_client);
  uint64_t v28 = (objc_class *)type metadata accessor for JSContent();
  id v29 = objc_allocWithZone(v28);
  sub_100045164((uint64_t)v29, OBJC_IVAR____TtC14amsengagementd9JSContent_config);
  sub_10002C008((uint64_t)a1);
  v98.receiver = v29;
  v98.super_class = v28;
  id v30 = objc_msgSendSuper2(&v98, "init");
  sub_100049484((uint64_t)v30, OBJC_IVAR____TtC14amsengagementd5JSAMS_content);
  uint64_t v31 = (objc_class *)type metadata accessor for JSDatabaseStore();
  id v32 = objc_allocWithZone(v31);
  sub_100045164((uint64_t)v32, OBJC_IVAR____TtC14amsengagementd15JSDatabaseStore_config);
  sub_10002C008((uint64_t)a1);
  v97.receiver = v32;
  v97.super_class = v31;
  id v33 = objc_msgSendSuper2(&v97, "init");
  sub_100049484((uint64_t)v33, OBJC_IVAR____TtC14amsengagementd5JSAMS_database);
  id v34 = [objc_allocWithZone((Class)type metadata accessor for JSDevice()) init];
  sub_100049484((uint64_t)v34, OBJC_IVAR____TtC14amsengagementd5JSAMS_device);
  id v35 = objc_allocWithZone((Class)type metadata accessor for JSFamily());
  id v36 = v18;
  sub_10002C008((uint64_t)a1);
  id v37 = sub_100006554((uint64_t)v36, a1);
  sub_100049484((uint64_t)v37, OBJC_IVAR____TtC14amsengagementd5JSAMS_family);
  id v38 = objc_allocWithZone((Class)type metadata accessor for JSFollowUp());
  id v39 = v36;
  id v40 = sub_100054BD0((uint64_t)v39);
  sub_100049484((uint64_t)v40, OBJC_IVAR____TtC14amsengagementd5JSAMS_followUp);
  id v41 = [objc_allocWithZone((Class)type metadata accessor for JSLocalize()) init];
  sub_100049484((uint64_t)v41, OBJC_IVAR____TtC14amsengagementd5JSAMS_localize);
  id v42 = [objc_allocWithZone((Class)type metadata accessor for JSLocation()) init];
  sub_100049484((uint64_t)v42, OBJC_IVAR____TtC14amsengagementd5JSAMS_location);
  id v43 = objc_allocWithZone((Class)type metadata accessor for JSLog());
  sub_100048704();
  id v44 = sub_10000A314((uint64_t)a1);
  sub_100049484((uint64_t)v44, OBJC_IVAR____TtC14amsengagementd5JSAMS_log);
  id v45 = objc_allocWithZone((Class)type metadata accessor for JSMarketing());
  id v46 = v39;
  sub_10002C008((uint64_t)a1);
  id v47 = v26;
  uint64_t v86 = v46;
  id v48 = sub_10000ACC8(v46, v47, (uint64_t)a1);
  sub_100049484((uint64_t)v48, OBJC_IVAR____TtC14amsengagementd5JSAMS_marketing);
  id v49 = objc_allocWithZone((Class)type metadata accessor for JSMediaAPI());
  sub_100048704();
  id v50 = sub_10000B3E8(a1);
  sub_100049484((uint64_t)v50, OBJC_IVAR____TtC14amsengagementd5JSAMS_media);
  uint64_t v51 = (objc_class *)type metadata accessor for JSMetrics();
  id v52 = objc_allocWithZone(v51);
  sub_100045164((uint64_t)v52, OBJC_IVAR____TtC14amsengagementd9JSMetrics_config);
  sub_10002C008((uint64_t)a1);
  v96.receiver = v52;
  v96.super_class = v51;
  id v53 = objc_msgSendSuper2(&v96, "init");
  sub_100049484((uint64_t)v53, OBJC_IVAR____TtC14amsengagementd5JSAMS_metrics);
  id v54 = [objc_allocWithZone((Class)type metadata accessor for JSNetwork()) init];
  sub_100049484((uint64_t)v54, OBJC_IVAR____TtC14amsengagementd5JSAMS_network);
  id v55 = objc_allocWithZone((Class)type metadata accessor for JSExtension());
  sub_100048704();
  id v56 = sub_100006BAC(a1);
  sub_100049484((uint64_t)v56, OBJC_IVAR____TtC14amsengagementd5JSAMS_plugin);
  *(void *)&v17[OBJC_IVAR____TtC14amsengagementd5JSAMS_privacy] = [objc_allocWithZone((Class)type metadata accessor for JSPrivacy()) init];
  *(void *)&v17[OBJC_IVAR____TtC14amsengagementd5JSAMS_props] = a4;
  id v57 = [objc_allocWithZone((Class)type metadata accessor for JSServerDataCache()) init];
  sub_100049484((uint64_t)v57, OBJC_IVAR____TtC14amsengagementd5JSAMS_serverDataCache);
  uint64_t v58 = (objc_class *)type metadata accessor for JSSubscriptionStatus();
  id v59 = objc_allocWithZone(v58);
  sub_100045164((uint64_t)v59, OBJC_IVAR____TtC14amsengagementd20JSSubscriptionStatus_config);
  sub_10002C008((uint64_t)a1);
  v95.receiver = v59;
  v95.super_class = v58;
  id v60 = objc_msgSendSuper2(&v95, "init");
  sub_100049484((uint64_t)v60, OBJC_IVAR____TtC14amsengagementd5JSAMS_subscription);
  id v61 = [objc_allocWithZone((Class)type metadata accessor for JSTelephony()) init];
  sub_100049484((uint64_t)v61, OBJC_IVAR____TtC14amsengagementd5JSAMS_telephony);
  id v62 = [objc_allocWithZone((Class)type metadata accessor for JSTreatmentStore()) init];
  sub_100049484((uint64_t)v62, OBJC_IVAR____TtC14amsengagementd5JSAMS_treatmentStore);
  *(void *)&v17[OBJC_IVAR____TtC14amsengagementd5JSAMS_userNotifications] = [objc_allocWithZone((Class)type metadata accessor for JSUserNotifications()) init];
  UUID.init()();
  sub_10005401C(v11, v14);
  (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v11, v89);
  sub_100054804(v14, (uint64_t)&v17[OBJC_IVAR____TtC14amsengagementd5JSAMS_uuid]);

  uint64_t v63 = (objc_class *)type metadata accessor for JSAMS();
  v94.receiver = v17;
  v94.super_class = v63;
  id v64 = objc_msgSendSuper2(&v94, "init");
  uint64_t v65 = qword_10022C470;
  id v66 = v64;
  if (v65 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v67 = type metadata accessor for LogMessage();
  sub_100044798(v67);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v93 = (uint64_t)v63;
  v92[0] = (uint64_t)v66;
  id v68 = v66;
  id v69 = (id)AMSLogKey();
  if (v69)
  {
    uint64_t v70 = v69;
    uint64_t v88 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v72 = v71;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v73._countAndFlagsBits = 0;
    v73._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v73);
    sub_10004B448();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100048120(MetatypeMetadata);
    sub_10002CC0C((uint64_t)v91, &qword_10022F490);
    v75._countAndFlagsBits = 5972026;
    v75._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v75);
    v91[3] = &type metadata for String;
    v91[0] = v88;
    v91[1] = v72;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v91, &qword_10022F490);
    v76._countAndFlagsBits = 93;
    v76._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v76);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v77._countAndFlagsBits = 0;
    v77._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v77);
    sub_10004B448();
    uint64_t v78 = swift_getMetatypeMetadata();
    sub_100048120(v78);
    sub_10002CC0C((uint64_t)v91, &qword_10022F490);
    v79._countAndFlagsBits = 58;
    v79._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v79);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v92);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v80._countAndFlagsBits = 0x696C616974696E49;
  v80._object = (void *)0xEC0000002064657ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v80);
  uint64_t v81 = (uint64_t)v68 + OBJC_IVAR____TtC14amsengagementd5JSAMS_uuid;
  uint64_t v93 = v90;
  uint64_t v82 = sub_10003BAA4(v92);
  sub_10005479C(v81, (uint64_t)v82);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)v92, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v83 = static os_log_type_t.debug.getter();
  sub_10004841C(v83);

  sub_100024DF0((uint64_t)a1);
  swift_bridgeObjectRelease();

  return v68;
}

uint64_t sub_10002C008(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

uint64_t sub_10002C050(uint64_t a1)
{
  uint64_t v76 = a1;
  sub_100045024();
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  sub_100011EC0();
  __chkstk_darwin(v3);
  uint64_t v4 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v4 - 8);
  sub_100011EC0();
  uint64_t v7 = v5 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v72 - v9;
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v77 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_100011EC0();
  uint64_t v14 = v12 - v13;
  uint64_t v16 = __chkstk_darwin(v15);
  id v18 = (char *)v72 - v17;
  unsigned int v19 = *(unsigned __int8 *)(v1 + 88);
  uint64_t v78 = v16;
  if (v19 > 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v11 = v78;
    if ((v20 & 1) == 0)
    {
      if (qword_10022C470 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      uint64_t v21 = type metadata accessor for LogMessage();
      sub_100044798(v21);
      *(_OWORD *)(sub_100048944() + 16) = xmmword_1001C3120;
      sub_10004AD38();
      id v22 = (id)AMSLogKey();
      if (v22)
      {
        id v23 = v22;
        uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v26 = v25;

        swift_bridgeObjectRetain();
        sub_1000208BC();
        sub_100020E60();
        sub_100044C7C();
        uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
        sub_1000469F0(MetatypeMetadata);
        sub_100048338();
        sub_100020E44();
        uint64_t v84 = &type metadata for String;
        uint64_t v82 = v24;
        uint64_t v83 = v26;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100048338();
        v28._countAndFlagsBits = 93;
        v28._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v28);
        sub_100011DB4();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020E78();
        sub_100020E60();
        sub_100044C7C();
        uint64_t v51 = swift_getMetatypeMetadata();
        sub_1000469F0(v51);
        sub_10002CCBC((uint64_t)&v82, &qword_10022F490);
        v52._countAndFlagsBits = 58;
        v52._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v52);
        sub_100011DB4();
      }
      sub_10004377C((uint64_t)&v79);
      LogMessage.init(stringLiteral:)();
      uint64_t v53 = static os_log_type_t.info.getter();
LABEL_21:
      sub_10004841C(v53);
      swift_bridgeObjectRelease();
      sub_100043478((uint64_t *)&unk_100233130);
      uint64_t v56 = v1 + OBJC_IVAR____TtC14amsengagementd13SourceFetcher_context;
      uint64_t v57 = type metadata accessor for JSStackContext();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16))(v14, v56 + *(int *)(v57 + 40), v78);
      return Promise.__allocating_init(value:)();
    }
  }
  sub_100006084(v76, (uint64_t)v10);
  if (sub_10004FD40((uint64_t)v10, 1, v11) == 1)
  {
    sub_10002CCBC((uint64_t)v10, &qword_10022FB40);
    if (qword_10022C470 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v29 = type metadata accessor for LogMessage();
    sub_100044798(v29);
    *(_OWORD *)(sub_100048944() + 16) = xmmword_1001C3120;
    sub_10004AD38();
    id v30 = (id)AMSLogKey();
    if (v30)
    {
      uint64_t v31 = v30;
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v34 = v33;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100044C7C();
      uint64_t v35 = swift_getMetatypeMetadata();
      sub_1000469F0(v35);
      sub_100048338();
      sub_100020E44();
      uint64_t v84 = &type metadata for String;
      uint64_t v82 = v32;
      uint64_t v83 = v34;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100048338();
      v36._countAndFlagsBits = 93;
      v36._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      sub_100011DB4();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100044C7C();
      uint64_t v54 = swift_getMetatypeMetadata();
      sub_1000469F0(v54);
      sub_10002CCBC((uint64_t)&v82, &qword_10022F490);
      v55._countAndFlagsBits = 58;
      v55._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v55);
      sub_100011DB4();
    }
    sub_10004377C((uint64_t)&v79);
    LogMessage.init(stringLiteral:)();
    uint64_t v53 = static os_log_type_t.error.getter();
    goto LABEL_21;
  }
  Swift::String v73 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
  v73(v18, v10, v11);
  if (qword_10022C470 != -1) {
    swift_once();
  }
  uint64_t v75 = qword_1002440D8;
  sub_100043478(&qword_10022E560);
  uint64_t v37 = type metadata accessor for LogMessage();
  sub_100044798(v37);
  unint64_t v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v74 = *(void *)(v38 + 72);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1001C3120;
  unint64_t v42 = v41 + v40;
  sub_10004AD38();
  id v43 = (id)AMSLogKey();
  if (v43)
  {
    id v44 = v43;
    uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v72[1] = v42;
    uint64_t v46 = v45;
    uint64_t v48 = v47;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100044C7C();
    uint64_t v49 = swift_getMetatypeMetadata();
    sub_1000469F0(v49);
    sub_100048338();
    sub_100020E44();
    uint64_t v84 = &type metadata for String;
    uint64_t v82 = v46;
    uint64_t v83 = v48;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100048338();
    v50._countAndFlagsBits = 93;
    v50._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v50);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100044C7C();
    uint64_t v59 = swift_getMetatypeMetadata();
    sub_1000469F0(v59);
    sub_10002CCBC((uint64_t)&v82, &qword_10022F490);
    v60._countAndFlagsBits = 58;
    v60._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v60);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v79);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v61._object = (void *)0x80000001001D75D0;
  v61._countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v61);
  sub_100006084(v76, v7);
  uint64_t v62 = v78;
  if (sub_10004FD40(v7, 1, v78) == 1)
  {
    sub_10002CCBC(v7, &qword_10022FB40);
    long long v79 = 0u;
    long long v80 = 0u;
  }
  else
  {
    *((void *)&v80 + 1) = v62;
    uint64_t v63 = sub_10003BAA4((uint64_t *)&v79);
    v73((char *)v63, (char *)v7, v62);
  }
  uint64_t v64 = v62;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CCBC((uint64_t)&v79, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v65 = static os_log_type_t.info.getter();
  sub_10004841C(v65);
  swift_bridgeObjectRelease();
  sub_100043478((uint64_t *)&unk_100233130);
  uint64_t v58 = Promise.__allocating_init()();
  sub_10017BF54((uint64_t)v18);
  uint64_t v66 = type metadata accessor for SyncTaskScheduler();
  *((void *)&v80 + 1) = v66;
  uint64_t v81 = &protocol witness table for SyncTaskScheduler;
  sub_10003BAA4((uint64_t *)&v79);
  SyncTaskScheduler.init()();
  type metadata accessor for URLRequest();
  Promise.map<A>(on:_:)();
  swift_release();
  sub_10004377C((uint64_t)&v79);
  *((void *)&v80 + 1) = v66;
  uint64_t v81 = &protocol witness table for SyncTaskScheduler;
  sub_10003BAA4((uint64_t *)&v79);
  swift_retain();
  SyncTaskScheduler.init()();
  sub_100043478((uint64_t *)&unk_100233E60);
  sub_10017D734();
  Promise.flatMap<A>(on:_:)();
  swift_release();
  swift_release();
  sub_10004377C((uint64_t)&v79);
  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = v1;
  *(void *)(v67 + 24) = v58;
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = v58;
  *(void *)(v68 + 24) = v1;
  uint64_t v69 = sub_10004D510(0, (unint64_t *)&qword_10022F690);
  swift_retain_n();
  swift_retain_n();
  uint64_t v70 = static OS_dispatch_queue.main.getter();
  *((void *)&v80 + 1) = v69;
  uint64_t v81 = &protocol witness table for OS_dispatch_queue;
  *(void *)&long long v79 = v70;
  Promise.then(perform:orCatchError:on:)();
  swift_release();
  swift_release();
  swift_release();
  sub_10004377C((uint64_t)&v79);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v18, v64);
  return v58;
}

uint64_t sub_10002CAAC()
{
  return swift_beginAccess();
}

void sub_10002CAC4()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

void sub_10002CB00(uint64_t a1)
{
  *(unsigned char *)(a1 + 16) = v1;
  sub_10009981C();
}

uint64_t sub_10002CB20()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t sub_10002CB40()
{
  return sub_100027BD8(v1 - 128, v0);
}

void sub_10002CB58(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000010;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10002CB7C()
{
  return sub_1000435D4(v1, v0);
}

uint64_t sub_10002CB94@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A638C(0, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t sub_10002CBB4(uint64_t a1, uint64_t *a2)
{
  sub_100043478(a2);
  sub_1000456E0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10002CC0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100043478(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10002CC68(uint64_t a1, uint64_t *a2)
{
  sub_100043478(a2);
  sub_100043B1C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10002CCBC(uint64_t a1, uint64_t *a2)
{
  sub_100043478(a2);
  sub_1000457D8();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10002CD0C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_10002CD50()
{
  return sub_10019CF18((uint64_t (*)(void, void, void, void, void, void))sub_10002CD68);
}

uint64_t sub_10002CD68(uint64_t a1, uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  sub_100050044();
  uint64_t v5 = swift_retain();
  sub_10002D18C(v5, v5);
  sub_10002D520();
  swift_release();
  a3(v8, a1);
  Promise.resolve(_:)();
  swift_bridgeObjectRelease();
  sub_100050044();
  uint64_t v6 = swift_retain();
  sub_10002D078(v6, v6);
  return swift_release();
}

void sub_10002D078(uint64_t a1, uint64_t a2)
{
  sub_100043EF4();
  if (qword_10022C5B0 != -1) {
    swift_once();
  }
  static OS_dispatch_queue.getSpecific<A>(key:)();
  sub_1000410C0();
  if (!v4 && (v3 & 1) != 0)
  {
    sub_10003E764(a2);
    swift_release();
  }
  else
  {
    sub_10002D49C();
    __chkstk_darwin(v5);
    sub_100048FF8();
    *(void *)(v6 - 16) = sub_10003E748;
    *(void *)(v6 - 8) = a2;
    OS_dispatch_queue.sync<A>(execute:)();
    sub_100046D18();
  }
  sub_100040B70();
}

void sub_10002D18C(uint64_t a1, uint64_t a2)
{
  sub_100043EF4();
  if (qword_10022C5B0 != -1) {
    swift_once();
  }
  static OS_dispatch_queue.getSpecific<A>(key:)();
  sub_1000410C0();
  if (!v4 && (v3 & 1) != 0)
  {
    sub_10003ED70(a2);
    swift_release();
  }
  else
  {
    sub_10002D49C();
    __chkstk_darwin(v5);
    sub_100048FF8();
    *(void *)(v6 - 16) = sub_10003ED54;
    *(void *)(v6 - 8) = a2;
    OS_dispatch_queue.sync<A>(execute:)();
    sub_100046D18();
  }
  sub_100040B70();
}

void *sub_10002D2B0()
{
  return sub_100049788(v0, v0[3]);
}

void sub_10002D2EC(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= v1;
}

uint64_t sub_10002D318()
{
  return type metadata accessor for LogMessage();
}

uint64_t sub_10002D330()
{
  return swift_allocObject();
}

uint64_t sub_10002D348()
{
  return swift_allocObject();
}

void sub_10002D360(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13 = v11;
  uint64_t v14 = v10;
  String.append(_:)(*(Swift::String *)&v13);
}

uint64_t sub_10002D380()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_10002D3B4()
{
  return v0;
}

uint64_t sub_10002D3D8()
{
  return sub_10002CBB4(v1 - 152, v0);
}

uint64_t sub_10002D3F0()
{
  return sub_10002CBB4(v1 - 120, v0);
}

uint64_t sub_10002D408()
{
  return v0;
}

uint64_t sub_10002D41C()
{
  sub_100049788(v0, v0[3]);
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t sub_10002D450()
{
  return v0;
}

uint64_t sub_10002D464(uint64_t a1)
{
  *(void *)(v2 - 104) = a1;
  *(void *)(v2 - 128) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

id sub_10002D484(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, 1);
}

void sub_10002D4AC()
{
  uint64_t v1 = 41;
  unint64_t v2 = 0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10002D4C4()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_10002D4DC()
{
  return swift_getErrorValue();
}

uint64_t sub_10002D4F8()
{
  return swift_allocObject();
}

void sub_10002D520()
{
  sub_100044DC4();
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100020EAC();
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 88);
  if (v33)
  {
    swift_retain();
    uint64_t v5 = sub_10002DAD4();
    if (!v1)
    {
      uint64_t v6 = v5;
      sub_100020640();
      uint64_t v31 = v7;
      sub_100020640();
      id v30 = v8;
      uint64_t v32 = v0;
      while (1)
      {
        uint64_t v9 = v33(v2, v6);
        if (v6 == v9) {
          break;
        }
        uint64_t v40 = v9;
        if (qword_10022C468 != -1) {
          swift_once();
        }
        sub_100043478(&qword_10022E560);
        uint64_t v10 = type metadata accessor for LogMessage();
        sub_100044798(v10);
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
        uint64_t v34 = type metadata accessor for SQLDatabase();
        uint64_t v39 = (void *)v34;
        v38[0] = v2;
        swift_retain();
        id v11 = (id)AMSLogKey();
        if (v11)
        {
          uint64_t v12 = v11;
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;

          swift_bridgeObjectRetain();
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          sub_1000480D0();
          sub_1000211AC();
          uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
          sub_100045E30(MetatypeMetadata);
          sub_1000435D4((uint64_t)&v35, &qword_10022F490);
          sub_100020E44();
          uint64_t v37 = &type metadata for String;
          uint64_t v35 = v13;
          uint64_t v36 = v15;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_100022828();
          sub_1000208D8();
          LogMessage.init(stringInterpolation:)();
          uint64_t v2 = v32;
          swift_bridgeObjectRelease();
        }
        else
        {
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          sub_1000480D0();
          sub_1000211AC();
          uint64_t v17 = swift_getMetatypeMetadata();
          sub_100045E30(v17);
          sub_1000435D4((uint64_t)&v35, &qword_10022F490);
          sub_100020E94();
          LogMessage.init(stringInterpolation:)();
        }
        sub_10004377C((uint64_t)v38);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v18._countAndFlagsBits = 0xD000000000000023;
        v18._object = v31;
        LogMessage.StringInterpolation.appendLiteral(_:)(v18);
        uint64_t v39 = &type metadata for Int;
        v38[0] = v6;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000435D4((uint64_t)v38, &qword_10022F490);
        v19._countAndFlagsBits = 0x5677656E206F7420;
        v19._object = (void *)0xEF206E6F69737265;
        LogMessage.StringInterpolation.appendLiteral(_:)(v19);
        uint64_t v39 = &type metadata for Int;
        v38[0] = v40;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000435D4((uint64_t)v38, &qword_10022F490);
        sub_100020E60();
        LogMessage.init(stringInterpolation:)();
        uint64_t v20 = static os_log_type_t.debug.getter();
        sub_10004841C(v20);
        swift_bridgeObjectRelease();
        sub_10017F810();
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
        uint64_t v39 = (void *)v34;
        v38[0] = v2;
        swift_retain();
        id v21 = (id)AMSLogKey();
        if (v21)
        {
          id v22 = v21;
          uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v25 = v24;

          swift_bridgeObjectRetain();
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          sub_1000480D0();
          sub_1000211AC();
          uint64_t v26 = swift_getMetatypeMetadata();
          sub_100045E30(v26);
          sub_100022828();
          sub_100020E44();
          uint64_t v37 = &type metadata for String;
          uint64_t v35 = v23;
          uint64_t v36 = v25;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_100022828();
          sub_1000208D8();
          LogMessage.init(stringInterpolation:)();
          uint64_t v2 = v32;
          swift_bridgeObjectRelease();
        }
        else
        {
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          sub_1000480D0();
          sub_1000211AC();
          uint64_t v27 = swift_getMetatypeMetadata();
          sub_100045E30(v27);
          sub_100022828();
          sub_100020E94();
          LogMessage.init(stringInterpolation:)();
        }
        sub_10004377C((uint64_t)v38);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v28._countAndFlagsBits = 0xD00000000000001BLL;
        v28._object = v30;
        LogMessage.StringInterpolation.appendLiteral(_:)(v28);
        uint64_t v39 = &type metadata for Int;
        v38[0] = v40;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000435D4((uint64_t)v38, &qword_10022F490);
        sub_100020E60();
        LogMessage.init(stringInterpolation:)();
        uint64_t v29 = static os_log_type_t.default.getter();
        sub_10004841C(v29);
        swift_bridgeObjectRelease();
        uint64_t v6 = sub_10002DAD4();
      }
    }
    sub_10003E0EC((uint64_t)v33);
  }
  sub_100020E2C();
}

uint64_t sub_10002DA84()
{
  return 0;
}

void sub_10002DA94()
{
  _StringGuts.grow(_:)(27);
}

uint64_t sub_10002DAB4(uint64_t a1)
{
  return sub_100021AC0(v1, 1, 1, a1);
}

uint64_t sub_10002DAD4()
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 24) = 1;
  uint64_t v9 = v0;
  unint64_t v10 = 0xD000000000000014;
  sub_100020640();
  uint64_t v11 = v3;
  uint64_t v12 = &_swiftEmptyArrayStorage;
  uint64_t v13 = sub_10003F5D4;
  uint64_t v14 = v4;
  sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)&v8);
  if (v1) {
    return swift_release();
  }
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 16);
  int v7 = *(unsigned __int8 *)(v2 + 24);
  swift_release();
  if (v7) {
    return 0;
  }
  else {
    return v6;
  }
}

uint64_t sub_10002DBC8(uint64_t a1, uint64_t a2)
{
  return sub_10002DBEC(a1, a2);
}

uint64_t sub_10002DBEC(uint64_t a1, uint64_t a2)
{
  if (a2 != 2)
  {
    if (a2 == 1)
    {
      _StringGuts.grow(_:)(37);
      swift_bridgeObjectRelease();
      v40._countAndFlagsBits = 0xD00000000000002FLL;
      v40._object = (void *)0x80000001001D8700;
      SQLDatabase.execute(sql:parameters:)(v40, (Swift::OpaquePointer)&_swiftEmptyArrayStorage);
      if (!v41) {
        return 2;
      }
    }
    else if (a2)
    {
      sub_1001920B0();
      swift_allocError();
      *unint64_t v42 = 0;
      v42[1] = 0;
      swift_willThrow();
    }
    else
    {
      _StringGuts.grow(_:)(73);
      v2._countAndFlagsBits = 0x5420455441455243;
      v2._object = (void *)0xED000020454C4241;
      String.append(_:)(v2);
      v3._countAndFlagsBits = 0x7361657261;
      v3._object = (void *)0xE500000000000000;
      String.append(_:)(v3);
      v4._countAndFlagsBits = 10272;
      v4._object = (void *)0xE200000000000000;
      String.append(_:)(v4);
      v5._countAndFlagsBits = 0x696669746E656469;
      v5._object = (void *)0xEA00000000007265;
      String.append(_:)(v5);
      v6._countAndFlagsBits = 0xD000000000000013;
      v6._object = (void *)0x80000001001CBB10;
      String.append(_:)(v6);
      v7._countAndFlagsBits = 1953259891;
      v7._object = (void *)0xE400000000000000;
      String.append(_:)(v7);
      v8._countAndFlagsBits = 0x202C5458455420;
      v8._object = (void *)0xE700000000000000;
      String.append(_:)(v8);
      v9._object = (void *)0x80000001001D8540;
      v9._countAndFlagsBits = 0xD000000000000010;
      String.append(_:)(v9);
      v10._countAndFlagsBits = 0x202C5458455420;
      v10._object = (void *)0xE700000000000000;
      String.append(_:)(v10);
      v11._object = (void *)0xEA00000000006E69;
      v11._countAndFlagsBits = 0x616D6F4464656573;
      String.append(_:)(v11);
      v12._countAndFlagsBits = 0x202C5458455420;
      v12._object = (void *)0xE700000000000000;
      String.append(_:)(v12);
      v13._countAndFlagsBits = 0x6570795464656573;
      v13._object = (void *)0xE800000000000000;
      String.append(_:)(v13);
      v14._countAndFlagsBits = 0x295458455420;
      v14._object = (void *)0xE600000000000000;
      String.append(_:)(v14);
      v15._countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      SQLDatabase.execute(sql:parameters:)(v15, (Swift::OpaquePointer)&_swiftEmptyArrayStorage);
      swift_bridgeObjectRelease();
      if (!v16)
      {
        _StringGuts.grow(_:)(34);
        swift_bridgeObjectRelease();
        v17._countAndFlagsBits = 0xD00000000000003BLL;
        v17._object = (void *)0x80000001001D8730;
        SQLDatabase.execute(sql:parameters:)(v17, (Swift::OpaquePointer)&_swiftEmptyArrayStorage);
        if (!v18)
        {
          _StringGuts.grow(_:)(34);
          swift_bridgeObjectRelease();
          v19._countAndFlagsBits = 0xD000000000000033;
          v19._object = (void *)0x80000001001D8770;
          SQLDatabase.execute(sql:parameters:)(v19, (Swift::OpaquePointer)&_swiftEmptyArrayStorage);
          if (!v20)
          {
            _StringGuts.grow(_:)(85);
            v21._countAndFlagsBits = 0x5420455441455243;
            v21._object = (void *)0xED000020454C4241;
            String.append(_:)(v21);
            v22._object = (void *)0xEA00000000007374;
            v22._countAndFlagsBits = 0x6E656D7461657274;
            String.append(_:)(v22);
            v23._countAndFlagsBits = 10272;
            v23._object = (void *)0xE200000000000000;
            String.append(_:)(v23);
            v24._countAndFlagsBits = 0x444961657261;
            v24._object = (void *)0xE600000000000000;
            String.append(_:)(v24);
            v25._countAndFlagsBits = 0x202C5458455420;
            v25._object = (void *)0xE700000000000000;
            String.append(_:)(v25);
            v26._object = (void *)0xE900000000000078;
            v26._countAndFlagsBits = 0x614D74656B637562;
            String.append(_:)(v26);
            v27._countAndFlagsBits = 0x52454745544E4920;
            v27._object = (void *)0xEA0000000000202CLL;
            String.append(_:)(v27);
            v28._object = (void *)0xE90000000000006ELL;
            v28._countAndFlagsBits = 0x694D74656B637562;
            String.append(_:)(v28);
            v29._countAndFlagsBits = 0x52454745544E4920;
            v29._object = (void *)0xEA0000000000202CLL;
            String.append(_:)(v29);
            v30._countAndFlagsBits = 0x65746144646E65;
            v30._object = (void *)0xE700000000000000;
            String.append(_:)(v30);
            v31._countAndFlagsBits = 0x202C4C41455220;
            v31._object = (void *)0xE700000000000000;
            String.append(_:)(v31);
            v32._countAndFlagsBits = 0x696669746E656469;
            v32._object = (void *)0xEA00000000007265;
            String.append(_:)(v32);
            v33._countAndFlagsBits = 0x202C5458455420;
            v33._object = (void *)0xE700000000000000;
            String.append(_:)(v33);
            v34._countAndFlagsBits = 0x7461447472617473;
            v34._object = (void *)0xE900000000000065;
            String.append(_:)(v34);
            v35._countAndFlagsBits = 0x202C4C41455220;
            v35._object = (void *)0xE700000000000000;
            String.append(_:)(v35);
            v36._object = (void *)0xEA0000000000746ELL;
            v36._countAndFlagsBits = 0x6F726665726F7473;
            String.append(_:)(v36);
            v37._countAndFlagsBits = 0x295458455420;
            v37._object = (void *)0xE600000000000000;
            String.append(_:)(v37);
            v38._countAndFlagsBits = 0;
            v38._object = (void *)0xE000000000000000;
            SQLDatabase.execute(sql:parameters:)(v38, (Swift::OpaquePointer)&_swiftEmptyArrayStorage);
            swift_bridgeObjectRelease();
            if (!v39) {
              return 1;
            }
          }
        }
      }
    }
  }
  return a2;
}

uint64_t sub_10002E15C@<X0>(void *a1@<X8>)
{
  return sub_10002E18C(*(void *)(v1 + 16), (uint64_t (*)(uint64_t, uint64_t))sub_10002E498, a1);
}

uint64_t sub_10002E18C@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t)@<X2>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v37 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v38 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  Swift::String v9 = &_swiftEmptyDictionarySingleton;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v7));
  uint64_t v11 = (v7 - 1) & v7;
  for (unint64_t i = v10 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v8 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    swift_bridgeObjectRetain();
    uint64_t v19 = a2(v17, v18);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t v20 = v19;
    unint64_t v41 = v11;
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v42 = v9;
    unint64_t v22 = sub_100042ADC(v17, v18);
    uint64_t v24 = v9[2];
    BOOL v25 = (v23 & 1) == 0;
    Swift::Int v26 = v24 + v25;
    if (__OFADD__(v24, v25))
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    unint64_t v27 = v22;
    char v28 = v23;
    sub_100043478(&qword_100234638);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v26))
    {
      unint64_t v29 = sub_100042ADC(v17, v18);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_37;
      }
      unint64_t v27 = v29;
    }
    Swift::String v9 = v42;
    if (v28)
    {
      uint64_t v31 = v42[7];
      swift_bridgeObjectRelease();
      *(void *)(v31 + 8 * v27) = v20;
    }
    else
    {
      v42[(v27 >> 6) + 8] |= 1 << v27;
      Swift::String v32 = (uint64_t *)(v42[6] + 16 * v27);
      *Swift::String v32 = v17;
      v32[1] = v18;
      *(void *)(v42[7] + 8 * v27) = v20;
      uint64_t v33 = v42[2];
      BOOL v13 = __OFADD__(v33, 1);
      uint64_t v34 = v33 + 1;
      if (v13) {
        goto LABEL_34;
      }
      _OWORD v42[2] = v34;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = 0;
    unint64_t v7 = v41;
    if (v41) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v13 = __OFADD__(v8++, 1);
    if (v13) {
      goto LABEL_35;
    }
    if (v8 >= v38) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v37 + 8 * v8);
    if (!v14) {
      break;
    }
LABEL_15:
    uint64_t v11 = (v14 - 1) & v14;
  }
  int64_t v15 = v8 + 1;
  if (v8 + 1 >= v38) {
    goto LABEL_32;
  }
  unint64_t v14 = *(void *)(v37 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v8 + 2;
  if (v8 + 2 >= v38) {
    goto LABEL_32;
  }
  unint64_t v14 = *(void *)(v37 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v8 + 3;
  if (v8 + 3 >= v38)
  {
LABEL_32:
    uint64_t result = swift_release();
    *a3 = v9;
    return result;
  }
  unint64_t v14 = *(void *)(v37 + 8 * v15);
  if (v14)
  {
LABEL_14:
    int64_t v8 = v15;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v8 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v8 >= v38) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v37 + 8 * v8);
    ++v15;
    if (v14) {
      goto LABEL_15;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10002E498()
{
  sub_100048380();
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = v1;
  *(void *)(inited + 40) = v2;
  sub_100043B2C(inited);
  uint64_t v4 = sub_100021AF4();
  *(void *)(v4 + 16) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRetain();
  _OWORD v7[2] = sub_100050044();
  v7[3] = 0xD00000000000002FLL;
  v7[4] = 0x80000001001D8600;
  v7[5] = inited;
  v7[6] = sub_10003E130;
  v7[7] = v4;
  sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)v7);
  if (v0)
  {
    swift_release();
    swift_release();
    swift_setDeallocating();
    uint64_t v5 = inited;
    sub_1000500CC();
  }
  else
  {
    swift_setDeallocating();
    sub_1000500CC();
    swift_release();
    sub_10002CAAC();
    uint64_t v5 = *(void *)(v4 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v5;
}

uint64_t sub_10002E604()
{
  return sub_100027BD8(v1 - 144, v0);
}

uint64_t sub_10002E61C()
{
  return sub_10002E628(v0[2], v0[3], v0[4]);
}

uint64_t sub_10002E628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for OSSignpostError();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = (char *)v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for OSSignpostID();
  unint64_t v10 = *(char **)(v109 - 8);
  uint64_t v11 = __chkstk_darwin(v109);
  uint64_t v108 = (char *)v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)v97 - v13;
  uint64_t v15 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v15 - 8);
  uint64_t v111 = a1;
  uint64_t v16 = *(void **)(a1 + OBJC_IVAR____TtC14amsengagementd16TransactionStore_transactionSet);
  NSString v17 = String._bridgeToObjectiveC()();
  [v16 removeObject:v17];

  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v16 countForObject:v18];

  uint64_t v110 = a2;
  if (v19)
  {
    if (qword_10022C4D0 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    long long v117 = (void *)type metadata accessor for TransactionStore();
    uint64_t v115 = v111;
    swift_retain();
    id v20 = (id)AMSLogKey();
    if (v20)
    {
      Swift::String v21 = v20;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v106 = v10;
      uint64_t v107 = a3;
      uint64_t v24 = v23;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v25._countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      sub_100049788(&v115, (uint64_t)v117);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v112 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v112);
      v27._countAndFlagsBits = 5972026;
      v27._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v112 = v22;
      uint64_t v113 = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v112);
      v28._countAndFlagsBits = 93;
      v28._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      LogMessage.init(stringInterpolation:)();
      unint64_t v10 = v106;
      a3 = v107;
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v45._countAndFlagsBits = 0;
      v45._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      sub_100049788(&v115, (uint64_t)v117);
      uint64_t v46 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v112 = v46;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v112);
      v47._countAndFlagsBits = 58;
      v47._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v47);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v115);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v48._object = (void *)0x80000001001D81B0;
    v48._countAndFlagsBits = 0xD000000000000012;
    LogMessage.StringInterpolation.appendLiteral(_:)(v48);
    long long v117 = &type metadata for String;
    uint64_t v115 = v110;
    uint64_t v116 = a3;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v115);
    v49._countAndFlagsBits = 0;
    v49._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v49);
    LogMessage.init(stringInterpolation:)();
    uint64_t v50 = static os_log_type_t.info.getter();
    sub_10004841C(v50);
    swift_bridgeObjectRelease();
    String._bridgeToObjectiveC()();
    OSSignposter.logHandle.getter();
    uint64_t v51 = v108;
    OSSignpostID.init(log:object:)();
    Swift::String v52 = OSSignposter.logHandle.getter();
    os_signpost_type_t v53 = static os_signpost_type_t.event.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v54 = 0;
      os_signpost_id_t v55 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v52, v53, v55, "Transaction", "Transaction left", v54, 2u);
      swift_slowDealloc();
    }

    return (*((uint64_t (**)(char *, uint64_t))v10 + 1))(v51, v109);
  }
  else
  {
    objc_super v98 = v9;
    uint64_t v100 = v7;
    uint64_t v99 = v6;
    uint64_t v106 = v14;
    if (qword_10022C4D0 != -1) {
      swift_once();
    }
    uint64_t v108 = (char *)qword_100244138;
    uint64_t v29 = sub_100043478(&qword_10022E560);
    uint64_t v30 = *(void *)(type metadata accessor for LogMessage() - 8);
    uint64_t v31 = *(void *)(v30 + 72);
    uint64_t v32 = *(unsigned __int8 *)(v30 + 80);
    uint64_t v33 = (v32 + 32) & ~v32;
    uint64_t v107 = v29;
    uint64_t v103 = v32 | 7;
    uint64_t v104 = v33 + 2 * v31;
    uint64_t v34 = swift_allocObject();
    long long v102 = xmmword_1001C3120;
    *(_OWORD *)(v34 + 16) = xmmword_1001C3120;
    uint64_t v105 = v33;
    unint64_t v101 = (void *)type metadata accessor for TransactionStore();
    long long v117 = v101;
    uint64_t v115 = v111;
    swift_retain();
    id v35 = (id)AMSLogKey();
    Swift::String v36 = (void (**)(char *, uint64_t))v10;
    if (v35)
    {
      uint64_t v37 = v35;
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v97[1] = v31;
      uint64_t v40 = v39;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v41._countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      sub_100049788(&v115, (uint64_t)v117);
      uint64_t v42 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v112 = v42;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v112);
      v43._countAndFlagsBits = 5972026;
      v43._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v112 = v38;
      uint64_t v113 = v40;
      Swift::String v36 = (void (**)(char *, uint64_t))v10;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v112);
      v44._countAndFlagsBits = 93;
      v44._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v44);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v57._countAndFlagsBits = 0;
      v57._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v57);
      sub_100049788(&v115, (uint64_t)v117);
      uint64_t v58 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v112 = v58;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v112);
      v59._countAndFlagsBits = 58;
      v59._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v59);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v115);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v60._countAndFlagsBits = 0xD000000000000013;
    v60._object = (void *)0x80000001001D81D0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v60);
    long long v117 = &type metadata for String;
    uint64_t v61 = v110;
    uint64_t v115 = v110;
    uint64_t v116 = a3;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v115);
    v62._countAndFlagsBits = 0;
    v62._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v62);
    LogMessage.init(stringInterpolation:)();
    uint64_t v63 = static os_log_type_t.info.getter();
    sub_10004841C(v63);
    swift_bridgeObjectRelease();
    uint64_t v64 = (uint64_t *)(v111 + OBJC_IVAR____TtC14amsengagementd16TransactionStore_transactionSignpostStateStore);
    swift_beginAccess();
    uint64_t v65 = *v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v66 = sub_100033C7C(v61, a3, v65);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v66)
    {
      uint64_t v67 = OSSignposter.logHandle.getter();
      uint64_t v68 = v106;
      OSSignpostIntervalState.signpostID.getter();
      os_signpost_type_t v69 = static os_signpost_type_t.end.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        uint64_t v107 = a3;
        uint64_t v70 = v36;
        swift_retain();
        uint64_t v71 = v98;
        checkForErrorAndConsumeState(state:)();
        swift_release();
        uint64_t v72 = v100;
        uint64_t v73 = v99;
        if ((*(unsigned int (**)(char *, uint64_t))(v100 + 88))(v71, v99) == enum case for OSSignpostError.doubleEnd(_:))
        {
          uint64_t v74 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v73);
          uint64_t v74 = "";
        }
        uint64_t v87 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v87 = 0;
        uint64_t v88 = v106;
        os_signpost_id_t v89 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v67, v69, v89, "Transaction", v74, v87, 2u);
        uint64_t v68 = v88;
        swift_slowDealloc();
        Swift::String v36 = v70;
        a3 = v107;
      }

      v36[1](v68, v109);
      swift_release();
      swift_beginAccess();
      uint64_t v90 = v110;
      sub_1000082B4(v110, a3);
      swift_endAccess();
      swift_unknownObjectRelease();
      swift_beginAccess();
      sub_100053B0C(v90, a3);
      swift_endAccess();
      return swift_release();
    }
    else
    {
      uint64_t v75 = swift_allocObject();
      uint64_t v76 = v111;
      *(_OWORD *)(v75 + 16) = v102;
      long long v117 = v101;
      uint64_t v115 = v76;
      swift_retain();
      id v77 = (id)AMSLogKey();
      if (v77)
      {
        uint64_t v78 = v77;
        uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v81 = v80;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v82._countAndFlagsBits = 0;
        v82._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v82);
        sub_100049788(&v115, (uint64_t)v117);
        uint64_t v83 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v112 = v83;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v112);
        v84._countAndFlagsBits = 5972026;
        v84._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v84);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v112 = v79;
        uint64_t v113 = v81;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v112);
        v85._countAndFlagsBits = 93;
        v85._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v85);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v91._countAndFlagsBits = 0;
        v91._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v91);
        sub_100049788(&v115, (uint64_t)v117);
        uint64_t v92 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v112 = v92;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v112);
        v93._countAndFlagsBits = 58;
        v93._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v93);
        LogMessage.init(stringInterpolation:)();
      }
      uint64_t v86 = v110;
      sub_10004377C((uint64_t)&v115);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v94._countAndFlagsBits = 0xD000000000000038;
      v94._object = (void *)0x80000001001D81F0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v94);
      long long v117 = &type metadata for String;
      uint64_t v115 = v86;
      uint64_t v116 = a3;
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v115);
      v95._countAndFlagsBits = 0x6361736E61727420;
      v95._object = (void *)0xEC0000006E6F6974;
      LogMessage.StringInterpolation.appendLiteral(_:)(v95);
      LogMessage.init(stringInterpolation:)();
      uint64_t v96 = static os_log_type_t.fault.getter();
      sub_10004841C(v96);
      return swift_bridgeObjectRelease();
    }
  }
}

uint64_t type metadata accessor for TransactionStore()
{
  uint64_t result = qword_100233B00;
  if (!qword_100233B00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10002F3F8(void *a1, void *a2, void *a3)
{
  uint64_t v46 = *a3;
  uint64_t v6 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v48 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v47 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100027C50(a1);
  if (v8)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }

  v49[3] = &type metadata for AMSFlags;
  v49[4] = sub_10002FDEC();
  LOBYTE(v49[0]) = 0;
  char v10 = isFeatureEnabled(_:)();
  sub_10004377C((uint64_t)v49);
  if (v10) {
    sub_1000B4F88();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = Dictionary.init(dictionaryLiteral:)();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0xE000000000000000;
  id v13 = [objc_allocWithZone((Class)NSLock) init];
  sub_1000314C8(a1);
  unint64_t v14 = sub_1000322C8(a1);
  if (v14[2])
  {
    sub_1000B58F4((uint64_t)v14);
    swift_bridgeObjectRelease();
    id v15 = [objc_allocWithZone((Class)AMSEngagementEnqueueResult) init];
    v49[0] = v15;
    Promise.resolve(_:)();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v45 = v6;
    swift_bridgeObjectRelease();
    sub_1000258D8(0xD00000000000001CLL, 0x80000001001CD7F0, 0xD000000000000012, 0x80000001001CD810);
    uint64_t v16 = sub_1000318B4(a1);
    NSString v17 = (void *)swift_allocObject();
    v17[2] = v13;
    v17[3] = v11;
    v17[4] = v12;
    v17[5] = a2;
    v17[6] = a1;
    id v41 = v13;
    swift_retain();
    swift_retain();
    id v18 = a2;
    id v19 = v16;
    id v20 = v18;
    id v21 = a1;
    uint64_t v22 = sub_1000263C4((uint64_t)v16, (uint64_t)sub_100024560, (uint64_t)v17);
    uint64_t v43 = v23;
    uint64_t v44 = v22;
    uint64_t v42 = v24;
    uint64_t v26 = v25;
    swift_release();
    type metadata accessor for Defaults();
    sub_10003A8F4(3);
    uint64_t v40 = a3;
    if (v26)
    {
      swift_retain();
      sub_100053BA0(0x2065756575716E45, 0xEF74756F656D6974);
      uint64_t v46 = v26;
      swift_release();
    }
    else
    {
      id v27 = objc_allocWithZone((Class)AMSEngagementEnqueueResult);
      v49[0] = objc_msgSend(v27, "init", v40);
      Promise.__allocating_init(value:)();
      uint64_t v46 = 0;
    }
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v20;
    *(void *)(v28 + 24) = v21;
    id v29 = v20;
    id v30 = v21;
    sub_1000221A8();
    swift_release();
    uint64_t v31 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v31;
    *(void *)(v32 + 24) = v19;
    sub_10002869C(0, 1, (uint64_t)sub_100022CB0, v32);
    swift_release();
    uint64_t v33 = (void *)swift_allocObject();
    uint64_t v34 = v41;
    void v33[2] = v41;
    void v33[3] = v11;
    v33[4] = v12;
    sub_10004D510(0, (unint64_t *)&qword_10022F690);
    Swift::String v36 = v47;
    uint64_t v35 = v48;
    uint64_t v37 = v45;
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v47, enum case for DispatchQoS.QoSClass.default(_:), v45);
    id v38 = v34;
    swift_retain();
    swift_retain();
    uint64_t v39 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
    sub_100017FE4((uint64_t)sub_1000BBE80, (uint64_t)v33, v39);

    swift_release();
    sub_10002FA3C();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for Defaults()
{
  return self;
}

uint64_t sub_10002FA3C()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = sub_100009F68;
  *(void *)(v1 + 24) = v0;
  swift_retain_n();
  sub_10004D400();
  swift_release();
  swift_release();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = j_j___s9JetEngine7PromiseC6rejectyys5Error_pF;
  *(void *)(v2 + 24) = v0;
  swift_retain_n();
  sub_10004D400();
  swift_release();
  return swift_release();
}

uint64_t sub_10002FB70()
{
  return sub_10002FB90(*(void *)(v0 + 16));
}

uint64_t sub_10002FB90(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 16) + 16))
  {
    swift_errorRetain();
    Promise.reject(_:)();
    return swift_errorRelease();
  }
  else
  {
    sub_10002CAAC();
    swift_bridgeObjectRetain();
    Promise.resolve(_:)();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10002FC2C()
{
  return sub_10002FC48((uint64_t (*)(void *, void, void, void, void))sub_10002FC44);
}

uint64_t sub_10002FC48(uint64_t (*a1)(void *, void, void, void, void))
{
  return a1(v1 + 2, v1[3], v1[4], v1[5], v1[6]);
}

void sub_10002FC60(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
}

void sub_10002FC7C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, dispatch_group_t group)
{
  if (a1)
  {
    sub_100022918();
    id v10 = a1;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    sub_10002FDC0(*(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10));
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  if (a3)
  {
    uint64_t v11 = (uint64_t *)(a4 + 16);
    sub_100022918();
    swift_errorRetain();
    sub_1000BA43C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100070E88);
    uint64_t v12 = *(void *)(*(void *)(a4 + 16) + 16);
    sub_1000BA558(v12, (uint64_t (*)(BOOL))sub_100070E88);
    uint64_t v13 = *v11;
    *(void *)(v13 + 16) = v12 + 1;
    *(void *)(v13 + 8 * v12 + 32) = a3;
    swift_endAccess();
  }
  dispatch_group_leave(group);
}

uint64_t sub_10002FD7C()
{
  sub_100049788((void *)(v0 + 272), *(void *)(v0 + 296));
  return swift_getDynamicType();
}

uint64_t sub_10002FDB4()
{
  return v0;
}

uint64_t sub_10002FDC0(uint64_t result)
{
  if (result + 1 > *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  return result;
}

unint64_t sub_10002FDEC()
{
  unint64_t result = qword_10022E938;
  if (!qword_10022E938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E938);
  }
  return result;
}

uint64_t sub_10002FE38()
{
  return sub_10003471C(v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_10002FE68@<X0>(void *a1@<X8>)
{
  return sub_10002E18C(*(void *)(v1 + 16), (uint64_t (*)(uint64_t, uint64_t))sub_100031350, a1);
}

uint64_t sub_10002FE98(uint64_t a1, uint64_t a2)
{
  return sub_1000304F0(a1, a2);
}

void sub_10002FEBC()
{
  sub_10002FEC8(v0[2], v0[3], v0[4]);
}

void sub_10002FEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = *sub_100049788((void *)(a1 + 16), *(void *)(a1 + 40));
  uint64_t v8 = swift_retain();
  sub_10002D18C(v8, v7);
  sub_10002D520();
  if (a2 == 0xD000000000000018 && a3 == 0x80000001001CA6E0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    sub_10010D4BC();
  }
  else if (a2 == 0xD000000000000010 && a3 == 0x80000001001CA6C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    sub_10010D668();
  }
  else if (a2 == 0xD000000000000013 && a3 == 0x80000001001CA700 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    char v9 = sub_10010D814(0);
  }
  else
  {
    sub_10003054C();
  }
  LOBYTE(v12) = v9 & 1;
  uint64_t v13 = v10;
  Promise.resolve(_:)();
  swift_bridgeObjectRelease();
  sub_100049788((void *)(a1 + 16), *(void *)(a1 + 40));
  uint64_t v11 = swift_retain();
  sub_10002D078(v11, v11);
}

uint64_t sub_1000304F0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1001138EC();
    swift_allocError();
    *uint64_t v2 = 5;
    swift_willThrow();
  }
  return 0;
}

void sub_10003054C()
{
  sub_100043FBC();
  sub_10004D580();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = v5;
  v6._object = v3;
  String.append(_:)(v6);
  v7._countAndFlagsBits = 96;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  sub_100047538((void *)(v1 + 16), *(void *)(v1 + 40));
  char v8 = sub_10003081C(v5, v3);
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else if (v8)
  {
    uint64_t v9 = sub_100021AF4();
    *(void *)(v9 + 16) = 0;
    uint64_t v10 = sub_100030788();
    *(unsigned char *)(v10 + 16) = 0;
    sub_100049788((void *)(v1 + 16), *(void *)(v1 + 40));
    uint64_t v11 = sub_100035CB8();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = v9;
    sub_100030960(0xD00000000000001DLL, 0x80000001001D39D0, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)sub_10003FBE0, v11);
    swift_retain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    sub_10002CAAC();
    if (*(void *)(v9 + 16))
    {
      sub_10002CAAC();
      swift_bridgeObjectRetain();
      swift_release();
      swift_release();
      goto LABEL_4;
    }
    sub_1001138EC();
    sub_100021180();
    sub_10004BF9C(v14, 1);
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1001138EC();
    uint64_t v12 = sub_100021180();
    sub_100021258(v12, v13);
  }
  swift_willThrow();
LABEL_4:
  sub_10004FC48();
}

uint64_t sub_100030788()
{
  return swift_allocObject();
}

void sub_1000307A0(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + a1) |= v3;
}

void *sub_1000307B8(uint64_t a1)
{
  *(void *)(a1 + 16) = 0;
  return sub_100049788(v2, *(void *)(v1 + 40));
}

uint64_t sub_1000307E4()
{
  return 0;
}

uint64_t sub_1000307FC()
{
  return sub_10004377C(v0);
}

uint64_t sub_10003081C(uint64_t a1, void *a2)
{
  LOBYTE(v3) = v2;
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = 0;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  String.append(_:)(v7);
  v8._countAndFlagsBits = 10592;
  v8._object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  sub_100030960(0xD000000000000013, 0x80000001001D37D0, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)sub_10003FB68, v6);
  if (v2)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v3 = *(unsigned __int8 *)(v6 + 16);
    swift_release();
  }
  return v3 & 1;
}

uint64_t sub_100030960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a4;
  *(void *)(v11 + 24) = a5;
  uint64_t v14 = v5;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  id v18 = sub_10003FAC4;
  uint64_t v19 = v11;
  swift_retain();
  sub_1000489E4((void (*)(void))sub_10003DAF8, (uint64_t)&v13);
  return swift_release();
}

uint64_t sub_100030A24()
{
  return sub_100030A34(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void *, unint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_100030A34(uint64_t a1, uint64_t a2, void (*a3)(void *, unint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v9 - 8);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_100030D74(a2, a3);
    sub_1000C7664(a2, (void (*)(uint64_t, unint64_t))a3, a4);
    return swift_release();
  }
  else
  {
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    v26[0] = a5;
    id v11 = (id)AMSLogKey();
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v16._countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v16);
      sub_100049788(v26, MetatypeMetadata);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t v25 = (void *)swift_getMetatypeMetadata();
      v24[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v24);
      v18._countAndFlagsBits = 5972026;
      v18._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v25 = &type metadata for String;
      v24[0] = v13;
      v24[1] = v15;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v24);
      v19._countAndFlagsBits = 93;
      v19._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v20._countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      sub_100049788(v26, MetatypeMetadata);
      uint64_t v21 = swift_getDynamicType();
      uint64_t v25 = (void *)swift_getMetatypeMetadata();
      v24[0] = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v24);
      v22._countAndFlagsBits = 58;
      v22._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v26);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v23 = static os_log_type_t.error.getter();
    sub_10004841C(v23);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100030D74(uint64_t a1, void (*a2)(void *, unint64_t))
{
  uint64_t v3 = v2;
  uint64_t v6 = (void *)*v2;
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  Swift::String v8 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(v8 - 1);
  __chkstk_darwin(v8);
  id v11 = (void *)((char *)&v37[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (void *)v3[12];
  *id v11 = v12;
  (*(void (**)(void *, void, void *))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  uint64_t v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v9 + 8))(v11, v8);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
LABEL_11:
    uint64_t v34 = static os_log_type_t.debug.getter();
    sub_10004841C(v34);

    return swift_bridgeObjectRelease();
  }
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  Swift::String v8 = sub_100051DF8();
  uint64_t v14 = (uint64_t)String._bridgeToObjectiveC()();
  id v15 = [v8 dictionaryForKey:v14];
  id v39 = 0;
  id v16 = [v15 valueWithError:&v39];

  if (!v16)
  {
    id v19 = v39;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    id v41 = v6;
    id v39 = v3;
    swift_retain();
    id v20 = (id)AMSLogKey();
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v25._countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      sub_100049788(&v39, (uint64_t)v41);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v37[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v37);
      v27._countAndFlagsBits = 5972026;
      v27._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      uint64_t MetatypeMetadata = &type metadata for String;
      v37[0] = v22;
      v37[1] = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v37);
      v28._countAndFlagsBits = 93;
      v28._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v29._countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      sub_100049788(&v39, (uint64_t)v41);
      uint64_t v30 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v37[0] = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v37);
      v31._countAndFlagsBits = 58;
      v31._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v39);
    id v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    id v39 = (id)0xD000000000000015;
    unint64_t v40 = 0x80000001001CE590;
    v32._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    v33._countAndFlagsBits = 0x7070696B73202D20;
    v33._object = (void *)0xEB00000000676E69;
    String.append(_:)(v33);
    id v41 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)&v39);
    if (qword_10022C460 == -1) {
      goto LABEL_11;
    }
    goto LABEL_14;
  }
  id v17 = v39;
  if (a1) {
    uint64_t v18 = a1;
  }
  else {
    uint64_t v18 = sub_1000C8E94();
  }
  swift_bridgeObjectRetain();
  sub_1000C9028(v18, v16, a2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100031350()
{
  sub_100048380();
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = v1;
  *(void *)(inited + 40) = v2;
  sub_100043B2C(inited);
  uint64_t v4 = sub_100021AF4();
  *(void *)(v4 + 16) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRetain();
  _OWORD v7[2] = sub_100050044();
  v7[3] = 0xD000000000000037;
  v7[4] = 0x80000001001D8630;
  v7[5] = inited;
  v7[6] = sub_10003E130;
  v7[7] = v4;
  sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)v7);
  if (v0)
  {
    swift_release();
    swift_release();
    swift_setDeallocating();
    uint64_t v5 = inited;
    sub_1000500CC();
  }
  else
  {
    swift_setDeallocating();
    sub_1000500CC();
    swift_release();
    sub_10002CAAC();
    uint64_t v5 = *(void *)(v4 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v5;
}

void sub_1000314BC()
{
  sub_10002F3F8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

void sub_1000314C8(void *a1)
{
  uint64_t v1 = sub_100038AF8(a1);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = *(void *)(v1 + 16);
    if (v3)
    {
      unint64_t v4 = 0;
      uint64_t v5 = _swiftEmptyArrayStorage;
      while (v4 < *(void *)(v2 + 16))
      {
        uint64_t v6 = *(void *)(v2 + 32 + 8 * v4);
        uint64_t v13 = v6;
        swift_bridgeObjectRetain();
        if (sub_100031688(&v13))
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v14 = v5;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1000734F4();
            uint64_t v5 = v14;
          }
          unint64_t v9 = v5[2];
          unint64_t v8 = v5[3];
          if (v9 >= v8 >> 1)
          {
            sub_1000A2948(v8);
            sub_1000734F4();
            uint64_t v5 = v14;
          }
          v5[2] = v9 + 1;
          v5[v9 + 4] = v6;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        if (v3 == ++v4) {
          goto LABEL_16;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = _swiftEmptyArrayStorage;
LABEL_16:
      swift_bridgeObjectRelease();
      uint64_t v10 = v5[2];
      if (v10)
      {
        type metadata accessor for PodcastsEventManager();
        swift_retain();
        swift_initStaticObject();
        uint64_t v11 = 0;
        do
        {
          ++v11;
          uint64_t v12 = swift_bridgeObjectRetain();
          sub_100157ECC(v12);
          swift_bridgeObjectRelease();
        }
        while (v10 != v11);
        swift_release();
      }
      swift_release();
    }
  }
}

uint64_t sub_100031688(uint64_t *a1)
{
  uint64_t v1 = *a1;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v5, v1, &v6);
  sub_1000434BC((uint64_t)v5);
  if (!v7) {
    goto LABEL_7;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v5, v1, &v6);
  sub_1000434BC((uint64_t)v5);
  if (!v7)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_100027BD8((uint64_t)&v6, &qword_10022F490);
    goto LABEL_8;
  }
  if (swift_dynamicCast())
  {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v4)
    {
      char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      return v2 & 1;
    }
  }
  swift_bridgeObjectRelease();
LABEL_8:
  char v2 = 0;
  return v2 & 1;
}

void *sub_1000318B4(void *a1)
{
  unint64_t v2 = sub_10003247C(a1);
  if (v2)
  {
    uint64_t v3 = sub_100031A30(v2, v1);
  }
  else
  {
    uint64_t v5 = sub_100078E48();
    long long v6 = (char *)v5[2];
    if (!v6)
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    sub_10002DA84();
    sub_100073484();
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v7 = self;
    unint64_t v8 = 0;
    do
    {
      char v9 = v8[(void)v5 + 32];
      id v10 = [v7 currentProcess];
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1)
      {
        sub_1000A2948(v11);
        sub_100073484();
      }
      _swiftEmptyArrayStorage[2] = v12 + 1;
      uint64_t v13 = &_swiftEmptyArrayStorage[10 * v12];
      *((unsigned char *)v13 + 32) = 0;
      ++v8;
      *((unsigned char *)v13 + 33) = v9;
      v13[5] = v10;
      v13[6] = -1;
      v13[7] = 0;
      v13[8] = 0;
      v13[9] = 0xD000000000000018;
      v13[10] = 0x80000001001CA820;
      v13[11] = 25;
      *((unsigned char *)v13 + 96) = 0;
      v13[13] = 10485760;
    }
    while (v6 != v8);
  }
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_100031A30(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v20 = v3 & 0xC000000000000001;
    uint64_t v5 = _swiftEmptyArrayStorage;
    uint64_t v6 = 4;
    uint64_t v18 = v4;
    unint64_t v19 = v3;
    while (1)
    {
      id v7 = v20 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v3 + 8 * v6);
      unint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      uint64_t v35 = v7;
      sub_100031E08(&v35, a2, (uint64_t)&v27);
      if (v2)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v5;
      }

      uint64_t v10 = v28;
      if (v28)
      {
        __int16 v11 = v27;
        long long v24 = v30;
        long long v25 = v29;
        uint64_t v22 = v32;
        char v12 = v33;
        uint64_t v26 = v34;
        uint64_t v23 = v31;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100031C64();
          uint64_t v5 = v15;
        }
        unint64_t v13 = v5[2];
        if (v13 >= v5[3] >> 1)
        {
          sub_100031C64();
          uint64_t v5 = v16;
        }
        v5[2] = v13 + 1;
        uint64_t v14 = &v5[10 * v13];
        *((unsigned char *)v14 + 32) = v11 & 1;
        *((unsigned char *)v14 + 33) = HIBYTE(v11);
        v14[5] = v10;
        *((_OWORD *)v14 + 3) = v25;
        *((_OWORD *)v14 + 4) = v24;
        v14[10] = v23;
        v14[11] = v22;
        *((unsigned char *)v14 + 96) = v12;
        v14[13] = v26;
        uint64_t v4 = v18;
        unint64_t v3 = v19;
      }
      ++v6;
      if (v9 == v4)
      {

        swift_bridgeObjectRelease();
        return v5;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }

  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_100031C64()
{
  sub_10004A380();
  if (v2)
  {
    sub_100048B58();
    if (v3 != v4)
    {
      sub_100046134();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_100047120();
  if (v1)
  {
    sub_100043478(&qword_10022D740);
    uint64_t v5 = (void *)sub_10004D1A0();
    sub_100051500(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)sub_100045B18();
    sub_1000722A0(v6, v7, v8);
    sub_100049CDC();
  }
  else
  {
    uint64_t v9 = sub_10004CD80();
    sub_100031D08(v9, v10, v11, v12);
  }
}

uint64_t sub_100031D08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_100031E08@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = *a1;
  id v8 = [v7 identifier];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v11 = v10;

  v39._countAndFlagsBits = v9;
  v39._object = v11;
  unsigned __int8 v12 = sub_10003227C(v39);
  if (v12 == 4)
  {
    if (qword_10022C498 != -1) {
      swift_once();
    }
    uint64_t v38 = qword_100244100;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v37 = type metadata accessor for EngagementService();
    v36[0] = a2;
    id v13 = a2;
    id v14 = (id)AMSLogKey();
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v18 = v17;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      sub_100049788(v36, v37);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v34[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v34, &qword_10022F490);
      v21._countAndFlagsBits = 5972026;
      v21._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      uint64_t MetatypeMetadata = &type metadata for String;
      v34[0] = v16;
      v34[1] = v18;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v34, &qword_10022F490);
      v22._countAndFlagsBits = 93;
      v22._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v27._countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      sub_100049788(v36, v37);
      uint64_t v28 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v34[0] = v28;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v34, &qword_10022F490);
      v29._countAndFlagsBits = 58;
      v29._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v36);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    uint64_t v37 = sub_10004D510(0, &qword_10022EC18);
    v36[0] = v7;
    id v31 = v7;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v36, &qword_10022F490);
    v32._countAndFlagsBits = 0xD00000000000002ALL;
    v32._object = (void *)0x80000001001CDB40;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    LogMessage.init(stringInterpolation:)();
    uint64_t v33 = static os_log_type_t.error.getter();
    sub_10004841C(v33);
    id result = (id)swift_bridgeObjectRelease();
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  else
  {
    unsigned __int8 v23 = v12;
    id v24 = [self currentProcess];
    unsigned int v25 = [v7 allowsResponse];
    id result = [v7 components];
    *(void *)a3 = v25 & 0xFFFF00FF | ((unint64_t)v23 << 8);
    *(void *)(a3 + 8) = v24;
    *(void *)(a3 + 16) = result;
    *(void *)(a3 + 24) = 0;
    *(void *)(a3 + 32) = 0;
    *(void *)(a3 + 40) = 0xD000000000000018;
    *(void *)(a3 + 48) = 0x80000001001CA820;
    *(_OWORD *)(a3 + 56) = xmmword_1001C5090;
    *(void *)(a3 + 72) = 10485760;
  }
  return result;
}

unint64_t sub_10003227C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020BA88, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

void *sub_1000322C8(void *a1)
{
  uint64_t v2 = sub_100038AF8(a1);
  unint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    uint64_t v4 = v2;
    id v15 = _swiftEmptyArrayStorage;
    uint64_t v5 = *(void *)(v2 + 16);
    if (v5)
    {
      uint64_t v6 = 0;
      sub_10004097C();
      do
      {
        uint64_t v7 = *(void *)(v4 + 8 * v6 + 32);
        swift_bridgeObjectRetain();
        AnyHashable.init<A>(_:)();
        if (*(void *)(v7 + 16) && (unint64_t v8 = sub_100043670((uint64_t)v12), (v9 & 1) != 0))
        {
          sub_100043520(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v13);
        }
        else
        {
          long long v13 = 0u;
          long long v14 = 0u;
        }
        sub_1000434BC((uint64_t)v12);
        if (*((void *)&v14 + 1))
        {
          if (swift_dynamicCast() & 1) != 0 && (v1)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_1000734F4();
            }
            unint64_t v3 = v15;
            unint64_t v1 = v15[2];
            unint64_t v10 = v15[3];
            if (v1 >= v10 >> 1)
            {
              sub_1000A2948(v10);
              sub_1000734F4();
              unint64_t v3 = v15;
            }
            v3[2] = v1 + 1;
            v3[v1 + 4] = v7;
            sub_10004097C();
            goto LABEL_18;
          }
        }
        else
        {
          sub_100027BD8((uint64_t)&v13, &qword_10022F490);
        }
        swift_bridgeObjectRelease();
LABEL_18:
        ++v6;
      }
      while (v5 != v6);
    }
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_10003247C(void *a1)
{
  swift_getObjectType();
  uint64_t v3 = sub_1000325B0(a1);
  if (!v3)
  {
    unsigned __int8 v12 = &type metadata for AMSFlags;
    unint64_t v13 = sub_10002FDEC();
    v11[0] = 0;
    uint64_t v4 = isFeatureEnabled(_:)();
    sub_10004377C((uint64_t)v11);
    if (v4)
    {
      uint64_t v5 = sub_100038AF8(a1);
      if (v5)
      {
        if (*(void *)(v5 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          uint64_t v7 = sub_100078E48();
          unint64_t v8 = v1;
          char v9 = isa;
          uint64_t v3 = (uint64_t)sub_1000AE3E8((uint64_t)v7, v8, v9);

          swift_bridgeObjectRelease();
          return v3;
        }
        swift_bridgeObjectRelease();
      }
    }
    return 0;
  }
  return v3;
}

uint64_t sub_1000325B0(void *a1)
{
  id v1 = [a1 destinations];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_10004D510(0, &qword_10022EC18);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_100032620(uint64_t a1, void *a2)
{
  *(void *)&long long v55 = 0x736E6F69746361;
  *((void *)&v55 + 1) = 0xE700000000000000;
  uint64_t v3 = AnyHashable.init<A>(_:)();
  sub_10004945C(v3, v4, v5, v6, v7, v8, v9, v10, v45, v49[0], v49[1], v50[0], v51, v52, v53, v54, v55);
  sub_1000434BC((uint64_t)v50);
  if (v56)
  {
    sub_100043478(&qword_10022F258);
    if (sub_100044A84()) {
      uint64_t v11 = v49[0];
    }
    else {
      uint64_t v11 = 0;
    }
  }
  else
  {
    sub_1000423CC((uint64_t)&v55);
    uint64_t v11 = 0;
  }
  strcpy((char *)v49, "allowedEvents");
  HIWORD(v49[1]) = -4864;
  swift_bridgeObjectRetain();
  uint64_t v12 = AnyHashable.init<A>(_:)();
  sub_10004945C(v12, v13, v14, v15, v16, v17, v18, v19, v46, v49[0], v49[1], v50[0], v51, v52, v53, v54, v55);
  sub_1000434BC((uint64_t)v50);
  if (!v56)
  {
    sub_1000423CC((uint64_t)&v55);
LABEL_10:
    uint64_t v20 = AnyHashable.init<A>(_:)();
    sub_10004945C(v20, v21, v22, v23, v24, v25, v26, v27, v47, 0xD000000000000011, 0x80000001001CDC20, v50[0], v51, v52, v53, v54, v55);
    sub_1000434BC((uint64_t)v50);
    if (v56)
    {
      sub_100043478(&qword_10022F258);
      sub_100044A84();
    }
    else
    {
      sub_1000423CC((uint64_t)&v55);
    }
    goto LABEL_13;
  }
  sub_100043478(&qword_10022F258);
  if (!sub_100044A84()) {
    goto LABEL_10;
  }
LABEL_13:
  *(void *)&long long v55 = 1635017060;
  *((void *)&v55 + 1) = 0xE400000000000000;
  swift_bridgeObjectRetain();
  uint64_t v28 = AnyHashable.init<A>(_:)();
  sub_10004945C(v28, v29, v30, v31, v32, v33, v34, v35, v47, v49[0], v49[1], v50[0], v51, v52, v53, v54, v55);
  sub_1000434BC((uint64_t)v50);
  if (v56)
  {
    sub_100043478(&qword_10022D6F0);
    sub_100044A84();
  }
  else
  {
    sub_1000423CC((uint64_t)&v55);
  }
  swift_bridgeObjectRetain();
  uint64_t v36 = AnyHashable.init<A>(_:)();
  sub_10004945C(v36, v37, v38, v39, v40, v41, v42, v43, v48, 0xD000000000000011, 0x80000001001CDC40, v50[0], v51, v52, v53, v54, v55);
  swift_bridgeObjectRelease();
  sub_1000434BC((uint64_t)v50);
  if (v56)
  {
    sub_100043478(&qword_10022D6F0);
    if (sub_100044A84())
    {
      sub_1000BD244(v49[0]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {

    sub_1000423CC((uint64_t)&v55);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

double sub_100032918@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v4 = sub_100043670(a1), (v5 & 1) != 0))
  {
    uint64_t v6 = sub_100020630(v4);
    sub_100043520(v6, v7);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_100032974()
{
  return sub_100032994((uint64_t)&unk_100210528, (uint64_t)sub_100036B70);
}

uint64_t sub_100032994(uint64_t a1, uint64_t a2)
{
  return sub_1000329C4(*(void *)(v2 + 16), (long long *)(v2 + 24), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), a1, a2);
}

uint64_t sub_1000329C4(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_100033980(a2);
  if (qword_10022C4B0 != -1) {
    swift_once();
  }
  swift_retain();
  swift_retain();
  sub_100021A68();
  sub_1000334F4();
  uint64_t v12 = (void *)sub_1000526E4();
  v12[2] = a1;
  void v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100032AD4(a7, (uint64_t)v12);
  swift_release();
  sub_100034248();
  return swift_release();
}

void sub_100032AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_10004CF68();
  swift_retain();
  sub_10003347C();
  uint64_t v7 = v3[4];
  uint64_t v8 = v3[5] >> 1;
  uint64_t v9 = v8 - v7;
  if (__OFSUB__(v8, v7))
  {
    __break(1u);
    goto LABEL_5;
  }
  sub_100032C90(v8 - v7);
  sub_100032BD8((void *)(v9 + 1));
  uint64_t v10 = (uint64_t (**)(uint64_t *))(v3[3] + 16 * v3[4] + 16 * v9);
  *uint64_t v10 = sub_1000350F8;
  v10[1] = (uint64_t (*)(uint64_t *))v6;
  swift_endAccess();
  if (qword_10022C4B0 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_100021A68();
  sub_10003378C();
}

void *sub_100032BD8(void *result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  unint64_t v4 = v3 >> 1;
  BOOL v5 = __OFSUB__(v3 >> 1, v2);
  uint64_t v6 = (v3 >> 1) - v2;
  if (v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v7 = (char *)result - v6;
  if (__OFSUB__(result, v6))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v7) {
    return result;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain();
  double result = (void *)swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    double result = _swiftEmptyArrayStorage;
  }
  uint64_t v8 = result[2];
  BOOL v5 = __OFADD__(v8, v7);
  uint64_t v9 = &v7[v8];
  if (v5) {
    goto LABEL_13;
  }
  result[2] = v9;
  double result = (void *)swift_release();
  uint64_t v10 = &v7[v4];
  if (__OFADD__(v4, v7))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (((unint64_t)v10 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  *(void *)(v1 + 24) = v3 & 1 | (2 * (void)v10);
  return result;
}

uint64_t sub_100032C90(uint64_t result)
{
  uint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  uint64_t v5 = (v3 >> 1) - v4;
  if (__OFSUB__(v3 >> 1, v4))
  {
    __break(1u);
LABEL_11:
    return sub_100032D8C(v1);
  }
  uint64_t v1 = (void *)result;
  if (v3)
  {
    uint64_t v6 = v2[1];
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_unknownObjectRetain();
    uint64_t v7 = (void *)swift_dynamicCastClass();
    if (!v7)
    {
      swift_unknownObjectRelease();
      uint64_t v7 = _swiftEmptyArrayStorage;
    }
    uint64_t v8 = v7[2];
    if ((void *)(v6 + 16 * v4 + 16 * v5) == &v7[2 * v8 + 4])
    {
      unint64_t v9 = v7[3];
      double result = swift_release();
      uint64_t v10 = (v9 >> 1) - v8;
      BOOL v11 = __OFADD__(v5, v10);
      v5 += v10;
      if (v11)
      {
        __break(1u);
        return result;
      }
    }
    else
    {
      double result = swift_release();
    }
  }
  if (v5 < (uint64_t)v1 + 1) {
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_100032D8C(void *a1)
{
  uint64_t v3 = (uint64_t)a1 + 1;
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  unint64_t v7 = v1[3];
  swift_unknownObjectRetain();
  uint64_t v8 = sub_1000330C8(a1, v3, v4, v5, v6, v7);
  swift_unknownObjectRelease();
  BOOL v11 = v8;
  unint64_t v9 = sub_1000330AC();
  sub_100032E48((uint64_t)&v11, (uint64_t)a1, 0, (void (*)(uint64_t, uint64_t))v9);
  swift_release();
  return swift_release();
}

uint64_t sub_100032E48(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = v4[2];
  unint64_t v6 = (unint64_t)v4[3] >> 1;
  unint64_t v7 = (void *)(v6 - v5);
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v9 = *(void *)result;
  uint64_t v10 = *(void *)(*(void *)result + 16);
  BOOL v11 = __OFSUB__(v10, a2);
  uint64_t v12 = v10 - a2;
  if (v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v13 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v14 = (char *)v7 - a2;
  if (__OFSUB__(v7, a2))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  BOOL v11 = __OFSUB__(v14, v13);
  uint64_t v15 = &v14[-v13];
  if (v11)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v32 = v15;
  uint64_t v17 = (char *)(v9 + 32);
  uint64_t v18 = v9 + 32 + 16 * a2;
  uint64_t v30 = v13;
  uint64_t v31 = (char *)(v18 + 16 * a3);
  double result = sub_100033310(v7);
  if (result)
  {
    uint64_t v19 = result;
    uint64_t v29 = v4[2];
    uint64_t v28 = a4;
    uint64_t v20 = (char *)(v4[1] + 16 * v29);
    sub_100043478(&qword_10022D840);
    swift_arrayDestroy();
    sub_1000334F0(v20, a2, v17);
    swift_arrayDestroy();
    v28(v18, a3);
    sub_1000334F0(&v20[16 * a2 + 16 * (void)v32], v30, v31);
    swift_arrayDestroy();
    *(void *)(v19 + 16) = 0;
    uint64_t v21 = v29;
    swift_release();
LABEL_15:
    swift_retain();
    swift_unknownObjectRelease();
    double result = sub_1000332C8(v9, v21);
    *uint64_t v4 = result;
    v4[1] = v25;
    void v4[2] = v26;
    v4[3] = v27;
    return result;
  }
  uint64_t v21 = v4[2];
  uint64_t v22 = v21 + a2;
  if (__OFADD__(v21, a2)) {
    goto LABEL_21;
  }
  if (v22 < v21)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (__OFSUB__(v22, v21))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_100043478(&qword_10022D840);
  swift_arrayInitWithCopy();
  double result = ((uint64_t (*)(char *, uint64_t))a4)(&v17[16 * a2], a3);
  int64_t v23 = (int64_t)&v32[v22];
  if (__OFADD__(v22, v32))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v24 = (unint64_t)v4[3] >> 1;
  if (v24 < v23)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (!__OFSUB__(v24, v23))
  {
    swift_arrayInitWithCopy();
    goto LABEL_15;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t (*sub_1000330AC())()
{
  return nullsub_1;
}

void *sub_1000330C8(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_32:
    if (v8 >= v7) {
      goto LABEL_21;
    }
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v7 = a2;
  unint64_t v6 = result;
  if ((a6 & 1) == 0) {
    goto LABEL_32;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain();
  BOOL v11 = (void *)swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    BOOL v11 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = v11[2];
  uint64_t v13 = a4 + 16 * a5 + 16 * v8;
  if ((void *)v13 == &v11[2 * v12 + 4])
  {
    unint64_t v15 = v11[3];
    double result = (void *)swift_release();
    uint64_t v16 = (v15 >> 1) - v12;
    uint64_t v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  else
  {
    swift_release();
    uint64_t v14 = v8;
  }
  swift_unknownObjectRetain();
  uint64_t v17 = (void *)swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      uint64_t v17 = _swiftEmptyArrayStorage;
    }
    uint64_t v18 = v17[2];
    if ((void *)v13 == &v17[2 * v18 + 4])
    {
      unint64_t v20 = v17[3];
      double result = (void *)swift_release();
      uint64_t v21 = (v20 >> 1) - v18;
      BOOL v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    else
    {
      double result = (void *)swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    uint64_t v17 = _swiftEmptyArrayStorage;
  }
  uint64_t v19 = v17[2];
  if ((void *)v13 == &v17[2 * v19 + 4])
  {
    unint64_t v23 = v17[3];
    double result = (void *)swift_release();
    uint64_t v24 = (v23 >> 1) - v19;
    BOOL v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22) {
      goto LABEL_21;
    }
LABEL_37:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7) {
    uint64_t v25 = v7;
  }
  else {
    uint64_t v25 = v8;
  }
  if (v25 <= (uint64_t)v6) {
    uint64_t v26 = v6;
  }
  else {
    uint64_t v26 = (void *)v25;
  }
  if (!v26) {
    return _swiftEmptyArrayStorage;
  }
  sub_100043478(&qword_100232868);
  uint64_t v27 = (void *)swift_allocObject();
  size_t v28 = j__malloc_size(v27);
  v27[2] = v6;
  void v27[3] = 2 * ((uint64_t)(v28 - 32) / 16);
  return v27;
}

uint64_t sub_1000332C8(uint64_t result, uint64_t a2)
{
  if (__OFSUB__(0, a2))
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v2 = *(void *)(result + 16);
  BOOL v3 = __OFADD__(a2, v2);
  uint64_t v4 = a2 + v2;
  if (v3)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v4 < a2)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0) {
LABEL_9:
  }
    __break(1u);
  return result;
}

uint64_t sub_100033310(void *a1)
{
  uint64_t isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!isUniquelyReferenced_nonNull) {
    return 0;
  }
  uint64_t v6 = v1[2];
  unint64_t v5 = v1[3];
  uint64_t v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = v1[1];
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain();
  uint64_t v9 = (void *)swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  uint64_t v10 = v9[2];
  if ((void *)(v8 + 16 * v6 + 16 * v7) != &v9[2 * v10 + 4])
  {
    swift_release();
LABEL_8:
    uint64_t v11 = v7;
    goto LABEL_10;
  }
  unint64_t v12 = v9[3];
  uint64_t result = swift_release();
  uint64_t v14 = (v12 >> 1) - v10;
  BOOL v15 = __OFADD__(v7, v14);
  uint64_t v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < (uint64_t)a1) {
      return 0;
    }
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_unknownObjectRetain();
    a1 = (void *)swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = _swiftEmptyArrayStorage;
    }
    uint64_t v16 = (v8 + 16 * v6 - (uint64_t)a1 - 32) / 16;
    uint64_t isUniquelyReferenced_nonNull = v7 + v16;
    if (!__OFADD__(v7, v16))
    {
      uint64_t v4 = a1[2];
      if (isUniquelyReferenced_nonNull >= v4) {
        return (uint64_t)a1;
      }
LABEL_19:
      sub_10015C0AC(isUniquelyReferenced_nonNull, v4, 0);
      return (uint64_t)a1;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_10003347C()
{
  unint64_t v1 = v0[3];
  if ((v1 & 1) == 0 || (v2 = *v0, result = swift_isUniquelyReferenced_nonNull(), *char v0 = v2, (result & 1) == 0))
  {
    uint64_t v4 = v0[2];
    uint64_t result = (v1 >> 1) - v4;
    if (__OFSUB__(v1 >> 1, v4))
    {
      __break(1u);
    }
    else
    {
      return sub_100032D8C((void *)result);
    }
  }
  return result;
}

void sub_1000334F4()
{
  sub_1000209F4();
  uint64_t v0 = sub_100035CD0();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  os_log_type_t v2 = sub_100040CB8();
  if (sub_10004FC30(v2))
  {
    uint64_t v3 = static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v4 = type metadata accessor for LogMessage();
    sub_100044798(v4);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3FC0;
    uint64_t v5 = type metadata accessor for PriorityQueue();
    sub_1000227E8(v5);
    id v6 = (id)AMSLogKey();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = v3;
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      uint64_t v12 = sub_100042B84();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v18[0] = v12;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v18);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      v18[0] = v9;
      v18[1] = v11;
      uint64_t v3 = v8;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v18);
      sub_1000208D8();
      sub_100011DB4();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      uint64_t v13 = sub_100022668();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v18[0] = v13;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v18);
      sub_100020E94();
      sub_100011DB4();
    }
    sub_10004377C((uint64_t)v20);
    sub_100050DB0();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v14._countAndFlagsBits = 0x6965756575716E45;
    v14._object = (void *)0xEE00206F7420676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t v15 = type metadata accessor for Worker();
    sub_10002123C(v15);
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v20);
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    uint64_t v16 = PriorityQueue.debugDescription.getter();
    void v20[3] = &type metadata for String;
    v20[0] = v16;
    v20[1] = v17;
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)v20);
    sub_10004841C(v3);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  swift_release();
  sub_100020FDC();
}

void sub_10003378C()
{
  sub_1000209F4();
  uint64_t v0 = sub_1000463B8();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  os_log_type_t v2 = sub_1000468CC();
  if (sub_10004A208(v2))
  {
    static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v3 = sub_100046E18();
    sub_100044798(v3);
    uint64_t v4 = (__n128 *)sub_100048808();
    uint64_t v5 = sub_100043A2C(v4, (__n128)xmmword_1001C3FC0);
    sub_10002123C(v5);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100043CE0();
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100048E08();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000458E0(MetatypeMetadata);
      sub_1000423CC((uint64_t)v11);
      sub_100020E44();
      sub_100049A34();
      sub_1000423CC((uint64_t)v11);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100043C78();
      uint64_t v8 = swift_getMetatypeMetadata();
      sub_1000472AC(v8);
      sub_1000423CC((uint64_t)v11);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004A588();
    LogMessage.init(stringLiteral:)();
    LogMessage.init(stringLiteral:)();
    uint64_t v9 = sub_10004A724();
    sub_10004AC44(v9, v10);
    sub_1000423CC((uint64_t)&v12);
    sub_100049E30();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10004770C();
    sub_100020FDC();
    swift_release();
  }
}

uint64_t sub_100033980(long long *a1)
{
  uint64_t v4 = v1;
  type metadata accessor for DispatchPredicate();
  sub_100020DEC();
  __chkstk_darwin(v6);
  sub_1000488F4(v7, v27);
  uint64_t v8 = sub_100049B48();
  v9(v8);
  id v10 = v3;
  _dispatchPreconditionTest(_:)();
  uint64_t v11 = sub_10004ACF8();
  v12(v11);
  if ((v3 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v13 = *((void *)a1 + 1);
  uint64_t v14 = *((void *)a1 + 2);
  sub_10002CAAC();
  uint64_t v15 = v4[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_100033C7C(v13, v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v16 = qword_10022C4B0;
    swift_retain();
    if (v16 == -1)
    {
LABEL_4:
      swift_retain();
      swift_retain();
      sub_100053FFC();
      goto LABEL_8;
    }
LABEL_10:
    swift_once();
    goto LABEL_4;
  }
  long long v30 = *(long long *)((char *)a1 + 24);
  type metadata accessor for Worker();
  uint64_t v2 = swift_allocObject();
  long long v17 = *a1;
  *(_OWORD *)(v2 + 64) = a1[1];
  *(void *)(v2 + 80) = *((void *)a1 + 4);
  *(_OWORD *)(v2 + 88) = xmmword_1001C7940;
  *(void *)(v2 + 16) = _swiftEmptyArrayStorage;
  *(void *)(v2 + 24) = &_swiftEmptyArrayStorage[4];
  *(_OWORD *)(v2 + 32) = xmmword_1001C6950;
  *(_OWORD *)(v2 + 48) = v17;
  swift_bridgeObjectRetain();
  sub_10002AB90((uint64_t)&v30);
  uint64_t v18 = qword_10022C4B0;
  swift_retain();
  if (v18 != -1) {
    swift_once();
  }
  swift_retain();
  swift_retain();
  sub_100053FD4();
  sub_10004CF68();
  swift_bridgeObjectRetain();
  uint64_t v19 = swift_retain();
  sub_1000350D8(v19, v13, v14, v20, v21, v22, v23, v24, v28, v29);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_10004CF68();
  uint64_t v25 = (uint64_t (*)(uint64_t *, uint64_t *))v4[5];
  swift_retain();
  sub_100008614(v4 + 4, v25);
  swift_endAccess();
  swift_release();
LABEL_8:
  swift_release();
  return v2;
}

uint64_t sub_100033C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_100042ADC(a1, a2), (v3 & 1) != 0)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

void sub_100033C80()
{
  sub_1000209F4();
  char v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_100035CD0();
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  os_log_type_t v8 = sub_100040CB8();
  if (sub_10004FC30(v8))
  {
    v19._countAndFlagsBits = v5;
    v19._object = v3;
    unsigned int v20 = static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v9 = sub_100046E18();
    sub_100044798(v9);
    sub_100109CB8();
    *(_OWORD *)(sub_10004211C() + 16) = xmmword_1001C3FC0;
    uint64_t v23 = type metadata accessor for PriorityQueue();
    v22[0] = v1;
    swift_retain();
    swift_retain();
    id v10 = (id)AMSLogKey();
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100043C78();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000472AC(MetatypeMetadata);
      sub_1000423CC((uint64_t)v21);
      sub_100020E44();
      void v21[3] = &type metadata for String;
      v21[0] = v12;
      v21[1] = v14;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v21);
      sub_1000208D8();
      sub_100020B40();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100045BC8();
      uint64_t v16 = swift_getMetatypeMetadata();
      sub_10004C1F0(v16);
      sub_1000423CC((uint64_t)v21);
      sub_100020E94();
      sub_100020B40();
    }
    sub_10004377C((uint64_t)v22);
    sub_100020924();
    LogMessage.init(stringLiteral:)();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    uint64_t v23 = type metadata accessor for Worker();
    v22[0] = v0;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    uint64_t v17 = PriorityQueue.debugDescription.getter();
    sub_10004275C(v17, v18);
    sub_1000423CC((uint64_t)v22);
    sub_10004841C(v20);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  swift_release();
  sub_100020FDC();
}

uint64_t sub_100033EE8(char a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v10 = (void *)a2[9];
  void *v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_8:
    swift_once();
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v12 = *(void *)(a3 + 64);
  uint64_t v14 = sub_10003466C();
  uint64_t v16 = v15;
  swift_beginAccess();
  sub_100034228(v14, v16);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  swift_beginAccess();
  if (a1)
  {
    swift_bridgeObjectRetain();
    sub_100034228(v13, v12);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = (uint64_t (*)(uint64_t *, uint64_t *))a2[5];
    swift_retain();
    sub_100008614(a2 + 4, v17);
    swift_endAccess();
  }
  swift_release();
  if (qword_10022C4B0 != -1) {
    goto LABEL_8;
  }
LABEL_6:
  swift_retain();
  swift_retain();
  sub_100035564();
  return sub_100034248();
}

#error "10003419C: call analysis failed (funcsize=45)"

uint64_t type metadata accessor for Worker()
{
  return self;
}

uint64_t sub_100034228(uint64_t a1, uint64_t a2)
{
  return sub_100034150(a1, a2, &unk_10022E668, type metadata accessor for Worker);
}

void sub_100034248()
{
  sub_1000209F4();
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  sub_100020DEC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100022558();
  uint64_t v7 = (void *)v2[9];
  *uint64_t v1 = v7;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v1, enum case for DispatchPredicate.onQueue(_:), v3);
  v7;
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v1, v3);
  if (v8)
  {
    if (qword_10022C4B0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_retain();
  sub_100021A68();
  sub_1000344B4();
  unint64_t v9 = v2[7];
  sub_10002CAAC();
  if (*(void *)(v2[8] + 16) < (int64_t)v9)
  {
    while (1)
    {
      sub_100036F58();
      if (!v10) {
        break;
      }
      uint64_t v11 = v10;
      uint64_t v12 = sub_10003466C();
      uint64_t v14 = v13;
      sub_10004CF68();
      uint64_t v15 = swift_retain();
      sub_1000350D8(v15, v12, v14, v16, v17, v18, v19, v20, v22, v23);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_retain();
      swift_retain();
      sub_100021A68();
      sub_100035190();
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v2;
      *(void *)(v21 + 24) = v11;
      swift_retain_n();
      swift_retain();
      sub_10003471C();
      swift_release();
      swift_release();
      swift_release();
      if (*(void *)(v2[8] + 16) >= v9) {
        goto LABEL_8;
      }
    }
    swift_retain();
    sub_100021A68();
    sub_100006C04();
  }
LABEL_8:
  sub_100020FDC();
}

void sub_1000344B4()
{
  sub_1000209F4();
  uint64_t v0 = sub_1000463B8();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  os_log_type_t v2 = sub_1000468CC();
  if (sub_10004A208(v2))
  {
    static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v3 = sub_100046E18();
    sub_100044798(v3);
    uint64_t v4 = (__n128 *)sub_100048808();
    uint64_t v5 = sub_10004A3D0(v4, (__n128)xmmword_1001C3FC0);
    sub_10002123C(v5);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100043CE0();
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100048E08();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000458E0(MetatypeMetadata);
      sub_1000423CC((uint64_t)v11);
      sub_100020E44();
      sub_100049A34();
      sub_1000423CC((uint64_t)v11);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100043C78();
      uint64_t v8 = swift_getMetatypeMetadata();
      sub_1000472AC(v8);
      sub_1000423CC((uint64_t)v11);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004377C((uint64_t)v12);
    sub_100040B18();
    sub_100041028();
    uint64_t v9 = sub_10004786C();
    sub_10004AC44(v9, v10);
    sub_1000423CC((uint64_t)v12);
    sub_100049E30();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10004770C();
    sub_100020FDC();
    swift_release();
  }
}

uint64_t sub_10003466C()
{
  if (v0[1]) {
    return 0x72656972726162;
  }
  uint64_t result = 0x636974796C616E61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C616E7265746E69;
      break;
    case 2:
      uint64_t result = 0x7379656E72756F6ALL;
      break;
    case 3:
      uint64_t result = 0x6E656D6D6F636572;
      break;
    default:
      return result;
  }
  return result;
}

void sub_10003471C()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  sub_100020DEC();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_100020EAC();
  uint64_t v18 = v17 - v16;
  *(void *)(v17 - v16) = v11;
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v17 - v16, enum case for DispatchPredicate.onQueue(_:), v12);
  id v19 = v11;
  char v20 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v18, v12);
  if (v20)
  {
    if (qword_10022C4B0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_retain();
  sub_100034A1C();
  swift_beginAccess();
  uint64_t v21 = v1[4];
  unint64_t v22 = v1[5];
  if (v21 == v22 >> 1)
  {
    swift_retain();
    sub_100035388();
    v1[12] = 0;
    uint64_t v23 = 1;
    goto LABEL_8;
  }
  if (v21 < (uint64_t)(v22 >> 1))
  {
    uint64_t v24 = *(void (**)(void *))(v1[3] + 16 * v21);
    swift_retain();
    if ((v9(v1) & 1) == 0)
    {
      uint64_t v36 = v3;
      uint64_t v37 = v24;
      uint64_t v25 = v1[2];
      uint64_t v26 = v1[3];
      uint64_t v35 = v19;
      uint64_t v28 = v1[4];
      unint64_t v27 = v1[5];
      swift_unknownObjectRetain();
      v1[2] = sub_100034E10(1, v25, v26, v28, v27);
      v1[3] = v29;
      v1[4] = v30;
      v1[5] = v31;
      swift_unknownObjectRelease();
      swift_retain();
      sub_1000351AC();
      uint64_t v32 = (void *)swift_allocObject();
      _OWORD v32[2] = v1;
      v32[3] = v35;
      v32[4] = v9;
      v32[5] = v7;
      v32[6] = v5;
      v32[7] = v36;
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = sub_10001B604;
      *(void *)(v33 + 24) = v32;
      v38[0] = sub_10001B5D4;
      v38[1] = v33;
      id v34 = v35;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v37(v38);
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_10;
    }
    swift_release();
    swift_retain();
    sub_100109308();
    v1[12] = 0;
    uint64_t v23 = 0;
LABEL_8:
    v5(v23);
LABEL_10:
    sub_100020FDC();
    return;
  }
  __break(1u);
}

void sub_100034A1C()
{
  sub_1000209F4();
  uint64_t v0 = sub_1000463B8();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  os_log_type_t v2 = sub_1000468CC();
  if (sub_10004A208(v2))
  {
    static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v3 = sub_100046E18();
    sub_100044798(v3);
    uint64_t v4 = (__n128 *)sub_100048808();
    uint64_t v5 = sub_100043A2C(v4, (__n128)xmmword_1001C3FC0);
    sub_10002123C(v5);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100043CE0();
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100048E08();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000458E0(MetatypeMetadata);
      sub_1000423CC((uint64_t)v11);
      sub_100020E44();
      sub_100049A34();
      sub_1000423CC((uint64_t)v11);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100043C78();
      uint64_t v8 = swift_getMetatypeMetadata();
      sub_1000472AC(v8);
      sub_1000423CC((uint64_t)v11);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004A588();
    sub_1000409B8();
    sub_100041028();
    uint64_t v9 = sub_10004A724();
    sub_10004AC44(v9, v10);
    sub_1000423CC((uint64_t)&v12);
    sub_100049E30();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10004770C();
    sub_100020FDC();
    swift_release();
  }
}

void sub_100034BD4()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_100035CD0();
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  os_log_type_t v6 = sub_100040CB8();
  if (sub_10004FC30(v6))
  {
    v19._countAndFlagsBits = v3;
    v19._object = v1;
    unsigned int v20 = static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v7 = sub_100046E18();
    sub_100044798(v7);
    sub_100109CB8();
    *(_OWORD *)(sub_10004211C() + 16) = xmmword_1001C3FC0;
    uint64_t v8 = type metadata accessor for PriorityQueue();
    sub_1000227E8(v8);
    id v9 = (id)AMSLogKey();
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100043C78();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000472AC(MetatypeMetadata);
      sub_1000423CC((uint64_t)v21);
      sub_100020E44();
      void v21[3] = &type metadata for String;
      v21[0] = v11;
      v21[1] = v13;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v21);
      sub_1000208D8();
      sub_100020B40();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100045BC8();
      uint64_t v15 = swift_getMetatypeMetadata();
      sub_10004C1F0(v15);
      sub_1000423CC((uint64_t)v21);
      sub_100020E94();
      sub_100020B40();
    }
    sub_10004377C((uint64_t)v22);
    sub_100040B18();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    uint64_t v16 = type metadata accessor for Worker();
    sub_10002123C(v16);
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    uint64_t v17 = PriorityQueue.debugDescription.getter();
    sub_10004275C(v17, v18);
    sub_1000423CC((uint64_t)v22);
    sub_10004841C(v20);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  swift_release();
  sub_100020FDC();
}

uint64_t sub_100034E10(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = a5 >> 1;
    uint64_t result = sub_100034F48(a4, result, a5 >> 1);
    if (v10) {
      uint64_t result = v9;
    }
    if (v9 >= result)
    {
      uint64_t v11 = sub_100034ECC(result, v9, a2, a3, a4, a5);
      swift_unknownObjectRelease();
      return v11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100034ECC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_100034F48(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2) {
      return 0;
    }
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  BOOL v5 = __OFADD__(result, a2);
  result += a2;
  if (v5) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_100034F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100045DEC();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  swift_isUniquelyReferenced_nonNull_native();
  sub_100048C2C();
  v12(v18, v16, v14);
  *char v10 = a10;
  sub_1000498F8();
  return swift_bridgeObjectRelease();
}

void sub_100035018()
{
  sub_1000209F4();
  sub_100046660(v6, v7, v8);
  sub_100049370();
  if (v9)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  sub_100046C4C();
  if (sub_10004B3B0())
  {
    sub_100043B38();
    sub_10004BEB4();
    if (!v11) {
      goto LABEL_12;
    }
    unint64_t v4 = v10;
  }
  uint64_t v12 = *v3;
  if (v5)
  {
    uint64_t v13 = *(void *)(v12 + 56);
    swift_release();
    *(void *)(v13 + 8 * v4) = v0;
    sub_100020FDC();
  }
  else
  {
    sub_1000506D8(v4, v2, v1, v0, v12);
    sub_100020FDC();
    swift_bridgeObjectRetain();
  }
}

uint64_t sub_1000350D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_100034F94(a1, a2, a3, (uint64_t)&unk_10022E668, (uint64_t)sub_100035018, a6, a7, a8, a9, a10);
}

uint64_t sub_1000350F8(uint64_t *a1)
{
  return sub_100035100(a1, *(void (**)(uint64_t (*)(), uint64_t))(v1 + 16));
}

uint64_t sub_100035100(uint64_t *a1, void (*a2)(uint64_t (*)(), uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  a2(sub_10001B584, v5);
  return swift_release();
}

void sub_100035190()
{
}

void sub_1000351AC()
{
  sub_1000209F4();
  uint64_t v0 = sub_1000463B8();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  os_log_type_t v2 = sub_1000468CC();
  if (sub_10004A208(v2))
  {
    static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v3 = sub_100046E18();
    sub_100044798(v3);
    uint64_t v4 = (__n128 *)sub_100048808();
    uint64_t v5 = sub_100043A2C(v4, (__n128)xmmword_1001C3FC0);
    sub_10002123C(v5);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100043CE0();
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100048E08();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000458E0(MetatypeMetadata);
      sub_1000423CC((uint64_t)v11);
      sub_100020E44();
      sub_100049A34();
      sub_1000423CC((uint64_t)v11);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100043C78();
      uint64_t v8 = swift_getMetatypeMetadata();
      sub_1000472AC(v8);
      sub_1000423CC((uint64_t)v11);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004A588();
    sub_100043B80();
    sub_100020924();
    LogMessage.init(stringLiteral:)();
    uint64_t v9 = sub_10004A724();
    sub_10004AC44(v9, v10);
    sub_1000423CC((uint64_t)&v12);
    sub_100049E30();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10004770C();
    sub_100020FDC();
    swift_release();
  }
}

void sub_100035388()
{
  sub_1000209F4();
  uint64_t v0 = sub_1000463B8();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  os_log_type_t v2 = sub_1000468CC();
  if (sub_10004A208(v2))
  {
    static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v3 = sub_100046E18();
    sub_100044798(v3);
    uint64_t v4 = (__n128 *)sub_100048808();
    uint64_t v5 = sub_100043A2C(v4, (__n128)xmmword_1001C3FC0);
    sub_10002123C(v5);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100043CE0();
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100048E08();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000458E0(MetatypeMetadata);
      sub_1000423CC((uint64_t)v11);
      sub_100020E44();
      sub_100049A34();
      sub_1000423CC((uint64_t)v11);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100043C78();
      uint64_t v8 = swift_getMetatypeMetadata();
      sub_1000472AC(v8);
      sub_1000423CC((uint64_t)v11);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004A588();
    sub_1000409B8();
    LogMessage.init(stringLiteral:)();
    uint64_t v9 = sub_10004A724();
    sub_10004AC44(v9, v10);
    sub_1000423CC((uint64_t)&v12);
    sub_100049E30();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10004770C();
    sub_100020FDC();
    swift_release();
  }
}

void sub_100035564()
{
}

#error "100035684: call analysis failed (funcsize=170)"

uint64_t sub_10003586C(void *a1, uint64_t a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v8 = sub_10002D318();
  sub_100044798(v8);
  sub_10004A1C4();
  *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3FC0;
  uint64_t v9 = sub_100035D54();
  sub_100035DF0(v9, v10, v11, v12, v13, v14, v15, v16, v57, v61, v65, v69);
  sub_10004D704();
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  v17._object = a3;
  v17._countAndFlagsBits = a2;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0x69736420726F6620;
  v18._object = (void *)0xEA00000000003A64;
  String.append(_:)(v18);
  uint64_t v19 = static LogMessage.safe(_:)();
  sub_100035DF0(v19, v20, v21, v22, v23, v24, v25, v26, v58, v62, v66, v70);
  sub_10004D510(0, (unint64_t *)&qword_100231E00);
  id v27 = a1;
  uint64_t v28 = static LogMessage.sensitive(_:)();
  sub_100035DF0(v28, v29, v30, v31, v32, v33, v34, v35, v59, v63, v67, v71);
  sub_10004D704();
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  v36._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  v37._countAndFlagsBits = 32;
  v37._object = (void *)0xE100000000000000;
  String.append(_:)(v37);
  uint64_t v38 = sub_100035D54();
  sub_100035DF0(v38, v39, v40, v41, v42, v43, v44, v45, v60, v64, v68, v72);
  uint64_t v46 = static os_log_type_t.info.getter();
  sub_10004841C(v46);
  swift_bridgeObjectRelease();
  if (a4 >= 6)
  {
    sub_1000441D8();
    sub_10002281C();
    uint64_t result = sub_10004757C();
    __break(1u);
  }
  else
  {
    type metadata accessor for MercuryCacheDatabase();
    id v47 = v27;
    sub_1000363B4();
    uint64_t v49 = v48;
    sub_100036B48();
    uint64_t v50 = (void *)sub_100035E38();
    v50[2] = a4;
    void v50[3] = a5;
    v50[4] = a6;
    v50[5] = v75;
    v50[6] = a2;
    v50[7] = a3;
    char v50[8] = v47;
    v50[9] = v49;
    v50[10] = 5 - a4;
    v50[11] = ObjectType;
    uint64_t v51 = (void *)sub_100035E38();
    v51[2] = a4;
    v51[3] = v75;
    v51[4] = a2;
    v51[5] = a3;
    v51[6] = a5;
    v51[7] = a6;
    v51[8] = v47;
    v51[9] = v49;
    v51[10] = 5 - a4;
    v51[11] = ObjectType;
    id v52 = v47;
    swift_retain_n();
    id v53 = v75;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    id v54 = v52;
    id v55 = v53;
    sub_10003A184();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100035C84()
{
  return swift_release();
}

uint64_t sub_100035CA0()
{
  return sub_100027BD8(v1 - 160, v0);
}

uint64_t sub_100035CB8()
{
  return swift_allocObject();
}

uint64_t sub_100035CD0()
{
  return type metadata accessor for LogMessage.StringInterpolation();
}

void *sub_100035CF0()
{
  uint64_t v2 = v0[3];
  return sub_100049788(v0, v2);
}

uint64_t sub_100035D14()
{
  *(void *)(v2 - 104) = *(void *)(v0 + 128);
  sub_100021AC0(v1, 1, 1, *(void *)(v2 - 152));
  return swift_retain();
}

uint64_t sub_100035D54()
{
  return static LogMessage.safe(_:)();
}

void sub_100035D70()
{
}

uint64_t sub_100035DB4()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100035DCC(uint64_t a1)
{
  return sub_10004841C(a1);
}

uint64_t sub_100035DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  return sub_10002CBB4((uint64_t)va, v12);
}

uint64_t sub_100035E08()
{
  return sub_1000435D4(v0, v1);
}

uint64_t sub_100035E38()
{
  return swift_allocObject();
}

#error "100035F48: call analysis failed (funcsize=172)"

uint64_t sub_10003613C()
{
  return 0;
}

uint64_t sub_10003614C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t sub_100036160()
{
  *(void *)(v0 - 104) = *(void *)(v0 - 368);
  *(void *)(v0 - 128) = *(void *)(v0 - 296);
  return AMSLogKey();
}

uint64_t sub_1000361C0()
{
  return Promise.flatMap<A>(on:_:)();
}

uint64_t sub_100036214()
{
  return v0;
}

uint64_t sub_100036230()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_100036250()
{
  return 0;
}

uint64_t sub_100036260()
{
  return v0;
}

id sub_1000362A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v12 + 176) = v11;
  *(void *)(v12 + 200) = a11;
  return v11;
}

uint64_t sub_1000362E0()
{
  return swift_allocObject();
}

uint64_t sub_100036328@<X0>(uint64_t a1@<X8>)
{
  return sub_10003081C(0xD000000000000010, (void *)((a1 - 32) | 0x8000000000000000));
}

uint64_t sub_10003634C()
{
  return swift_task_alloc();
}

uint64_t sub_100036364()
{
  return sub_100027BD8(v1 - 112, v0);
}

uint64_t type metadata accessor for MercuryCacheDatabase()
{
  return self;
}

void sub_1000363B4()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  type metadata accessor for URL();
  sub_1000448FC();
  __chkstk_darwin(v4);
  sub_100022558();
  [v3 integerValue];
  sub_10003B3F4();
  v5._countAndFlagsBits = 1635017060;
  v5._object = (void *)0xE400000000000000;
  URL.appendPathComponent(_:)(v5);
  v6._countAndFlagsBits = 25188;
  v6._object = (void *)0xE200000000000000;
  URL.appendPathExtension(_:)(v6);
  uint64_t v7 = URL.path.getter();
  uint64_t v9 = v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  uint64_t v11 = type metadata accessor for SQLDatabase();
  swift_allocObject();
  uint64_t v12 = SQLDatabase.init(path:readonly:fileProtection:schemaBlock:corruptionBlock:)(v7, v9, 0, 0, (uint64_t)sub_10002FE98, v10, 0, 0);
  id v13 = [self defaultManager];
  uint64_t v22 = sub_10004D510(0, (unint64_t *)&qword_10022D5B8);
  uint64_t v23 = &off_100210B78;
  *(void *)&long long v21 = v13;
  void v20[3] = v11;
  void v20[4] = &off_10020EE60;
  v20[0] = v12;
  uint64_t v14 = (void *)swift_allocObject();
  sub_10003660C((uint64_t)v20, v11);
  sub_1000448FC();
  __chkstk_darwin(v15);
  sub_10002D300();
  (*(void (**)(uint64_t *))(v16 + 16))(v1);
  uint64_t v17 = *v1;
  v14[5] = v11;
  void v14[6] = &off_10020EE60;
  _OWORD v14[2] = v17;
  sub_100028270(&v21, (uint64_t)(v14 + 7));
  v14[12] = &type metadata for LiveMercuryCacheUpdateReporter;
  v14[13] = &off_1002145F0;
  sub_10004377C((uint64_t)v20);

  sub_100020B78();
  v19(v18);
  sub_100020FDC();
}

uint64_t sub_10003660C(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_10003665C()
{
  sub_1000209F4();
  uint64_t v16 = v2;
  uint64_t v17 = v3;
  uint64_t v5 = v4;
  uint64_t v15 = v6;
  type metadata accessor for DispatchWorkItemFlags();
  sub_1000448FC();
  __chkstk_darwin(v7);
  uint64_t v18 = sub_10004DE0C();
  sub_1000448FC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10002D300();
  sub_100043478(&qword_100230AB8);
  uint64_t v11 = Promise.__allocating_init()();
  if (qword_10022C4F8 != -1) {
    swift_once();
  }
  sub_10004D254();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v0;
  void v12[3] = v15;
  v12[4] = v5;
  v12[5] = v11;
  v19[4] = v16;
  v19[5] = v12;
  v19[0] = _NSConcreteStackBlock;
  sub_100022644(COERCE_DOUBLE(1107296256));
  _OWORD v19[2] = sub_10002CD0C;
  void v19[3] = v17;
  id v13 = _Block_copy(v19);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B6DC((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  sub_10004883C();
  sub_100036A94();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  sub_100020B78();
  v14();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v18);
  swift_release();
  sub_100036B08();
  sub_100020FDC();
}

uint64_t sub_1000368C8()
{
  sub_1000BC4E0();
  uint64_t v3 = *v2;
  uint64_t v4 = *(void **)(*v2 + 16);
  uint64_t v5 = *v2;
  sub_100020EBC();
  *uint64_t v6 = v5;
  swift_task_dealloc();

  uint64_t v7 = *(void (***)(void, void, void))(v3 + 24);
  if (v0)
  {
    uint64_t v8 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    ((void (**)(void, void, void *))v7)[2](v7, 0, v8);

    _Block_release(v7);
  }
  else
  {
    v7[2](v7, v1, 0);
    _Block_release(v7);
    swift_unknownObjectRelease();
  }
  uint64_t v9 = *(uint64_t (**)(void))(v5 + 8);
  return v9();
}

uint64_t sub_100036A60(uint64_t a1)
{
  *(void *)(v2 - 144) = a1;
  *(void *)(v2 - 168) = v1;
  return swift_retain();
}

void sub_100036A7C()
{
  sub_10004D400();
}

uint64_t sub_100036A94()
{
  return 0;
}

uint64_t sub_100036AA8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 112) = a1;
  return type metadata accessor for DynamicActivityTaskScheduler();
}

uint64_t sub_100036AC0()
{
  return sub_1000435D4(v0, v1);
}

uint64_t sub_100036AD8()
{
  uint64_t v2 = *(void *)(v0 - 288);
  *(void *)(v0 - 168) = *(void *)(v0 - 296);
  *(void *)(v0 - 160) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100036B08()
{
  return v0;
}

id sub_100036B14(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  *(void *)(v1 + 16) = v2;
  return v2;
}

uint64_t sub_100036B30(uint64_t a1)
{
  return sub_10004841C(a1);
}

void sub_100036B48()
{
}

uint64_t sub_100036B70(uint64_t a1, uint64_t a2)
{
  return sub_100036BD0(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_100036BD0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  if (qword_10022C4B0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100036D4C();
  a4();
  uint64_t v11 = (void *)sub_1000526E4();
  v11[2] = a3;
  v11[3] = a6;
  v11[4] = a1;
  v11[5] = a2;
  uint64_t v12 = (void *)sub_1000526E4();
  v12[2] = a3;
  void v12[3] = a6;
  v12[4] = a1;
  v12[5] = a2;
  id v13 = *(void **)(a3 + 72);
  v16[3] = sub_10004D510(0, (unint64_t *)&qword_10022F690);
  v16[4] = &protocol witness table for OS_dispatch_queue;
  v16[0] = v13;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  id v14 = v13;
  Promise.then(perform:orCatchError:on:)();
  swift_release();
  swift_release();
  swift_release();
  return sub_10004377C((uint64_t)v16);
}

void sub_100036D4C()
{
  sub_1000209F4();
  uint64_t v0 = sub_1000463B8();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  os_log_type_t v2 = sub_1000468CC();
  if (sub_10004A208(v2))
  {
    static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v3 = sub_100046E18();
    sub_100044798(v3);
    uint64_t v4 = (__n128 *)sub_100048808();
    uint64_t v5 = sub_10004A3D0(v4, (__n128)xmmword_1001C3FC0);
    sub_10002123C(v5);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100043CE0();
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100048E08();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000458E0(MetatypeMetadata);
      sub_1000423CC((uint64_t)v11);
      sub_100020E44();
      sub_100049A34();
      sub_1000423CC((uint64_t)v11);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100043C78();
      uint64_t v8 = swift_getMetatypeMetadata();
      sub_1000472AC(v8);
      sub_1000423CC((uint64_t)v11);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004A588();
    sub_100050DB0();
    LogMessage.init(stringLiteral:)();
    uint64_t v9 = sub_10004786C();
    sub_10004AC44(v9, v10);
    sub_1000423CC((uint64_t)&v12);
    sub_100049E30();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10004770C();
    sub_100020FDC();
    swift_release();
  }
}

void sub_100036F28()
{
}

void sub_100036F58()
{
  sub_1000209F4();
  uint64_t v2 = v0;
  type metadata accessor for DispatchPredicate();
  sub_100020DEC();
  __chkstk_darwin(v3);
  sub_1000488F4(v4, v25);
  uint64_t v5 = sub_100049B48();
  v6(v5);
  id v7 = v1;
  _dispatchPreconditionTest(_:)();
  uint64_t v8 = sub_10004ACF8();
  v9(v8);
  if ((v1 & 1) == 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  sub_10002CAAC();
  uint64_t v10 = (uint64_t *)(v0 + 64);
  swift_retain();
  swift_retain();
  sub_10002CAAC();
  uint64_t v11 = sub_100037330(0);
  if (!v11) {
    goto LABEL_29;
  }
  while (1)
  {
    char v12 = *(unsigned char *)(v11 + 49);
    uint64_t v13 = *v10;
    uint64_t v14 = *(void *)(*v10 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = 0xE700000000000000;
      sub_100042ADC(0x72656972726162, 0xE700000000000000);
      char v17 = v16;
      swift_bridgeObjectRelease();
      sub_100046014();
      if (v18) {
        goto LABEL_12;
      }
    }
    else
    {
      char v17 = 0;
      if (*(unsigned char *)(v11 + 49))
      {
        uint64_t v15 = 0xE700000000000000;
        sub_100046014();
        goto LABEL_12;
      }
    }
    uint64_t v15 = 0xE900000000000073;
    uint64_t v13 = 0x636974796C616E61;
    switch(*(unsigned char *)(v11 + 48))
    {
      case 1:
        uint64_t v15 = 0xE800000000000000;
        uint64_t v13 = 0x6C616E7265746E69;
        break;
      case 2:
        uint64_t v15 = 0xE800000000000000;
        uint64_t v13 = 0x7379656E72756F6ALL;
        break;
      case 3:
        uint64_t v15 = 0xEF736E6F69746164;
        uint64_t v13 = 0x6E656D6D6F636572;
        break;
      default:
        break;
    }
LABEL_12:
    if (!*(void *)(*v10 + 16)) {
      break;
    }
    swift_bridgeObjectRetain();
    sub_100042ADC(v13, v15);
    char v20 = v19;
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0) {
      break;
    }
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_22;
    }
LABEL_18:
    if (qword_10022C4B0 != -1) {
      swift_once();
    }
    swift_retain();
    swift_retain();
    sub_1001090B0();
    swift_release();
    uint64_t v11 = sub_100037330(0);
    if (!v11) {
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
    if ((v17 & 1) == 0) {
      goto LABEL_26;
    }
    goto LABEL_18;
  }
LABEL_22:
  if (v14)
  {
    if (qword_10022C4B0 != -1) {
      swift_once();
    }
    swift_retain();
    sub_100021A68();
    sub_100108EC4();
    swift_release();
    goto LABEL_31;
  }
LABEL_26:
  sub_10004CF68();
  uint64_t v21 = *(void *)(v2 + 32);
  swift_retain();
  unint64_t v22 = sub_10003762C(v11, v21);
  char v24 = v23;
  swift_release();
  if ((v24 & 1) == 0)
  {
    sub_100037330(v22);
    swift_release();
  }
  swift_endAccess();
LABEL_29:
  if (qword_10022C4B0 != -1) {
LABEL_33:
  }
    swift_once();
  swift_retain();
  sub_100021A68();
  sub_100037938();
LABEL_31:
  swift_release();
  swift_release();
  sub_100020FDC();
}

uint64_t sub_100037330(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + 1;
  uint64_t v3 = v1[1];
  uint64_t v5 = *(void *)(v3 + 16);
  if (!v5) {
    return 0;
  }
  unint64_t v7 = sub_100037538(a1, v3);
  unint64_t v8 = v5 - 1;
  if (!v8) {
    goto LABEL_12;
  }
  type metadata accessor for Worker();
  sub_100037538(a1, v3);
  sub_100037538(v8, v3);
  sub_100037704();
  char v10 = v9;
  swift_release();
  swift_release();
  if (v10) {
    goto LABEL_12;
  }
  char v12 = (uint64_t (*)(unint64_t *, uint64_t *))v2[2];
  uint64_t v11 = v2[3];
  uint64_t v13 = v2[1];
  unint64_t v19 = sub_100037538(a1, v13);
  unint64_t v18 = sub_100037538(*(void *)(v13 + 16) - 1, v13);
  swift_retain();
  char v14 = v12(&v19, (uint64_t *)&v18);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v15 = v2[1];
  unint64_t v16 = sub_100037538(*(void *)(v15 + 16) - 1, v15);
  if ((v14 & 1) == 0)
  {
    swift_retain();
    sub_10015A1DC(v4, v12, v11, a1, v16);
    swift_release();
    swift_release();
LABEL_12:
    sub_10003755C();
    goto LABEL_13;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v15;
  if ((result & 1) == 0)
  {
    uint64_t result = sub_100037618(v15);
    uint64_t v15 = result;
    *uint64_t v4 = result;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v15 + 16) > a1)
  {
    swift_release();
    *(void *)(v15 + 8 * a1 + 32) = v16;
    specialized ContiguousArray._endMutation()();
    sub_10003755C();
    swift_release();
    swift_retain();
    sub_100159F40((unint64_t)v4, (uint64_t (*)(unint64_t *, unint64_t *))v12, v11, a1);
LABEL_13:
    swift_release();
    return v7;
  }
  __break(1u);
  return result;
}

unint64_t sub_100037538(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a2 + 16) > result)
  {
    return swift_retain();
  }
  __break(1u);
  return result;
}

void sub_10003755C()
{
  if (*(void *)(*(void *)v0 + 16))
  {
    if (!sub_1000375AC())
    {
      unint64_t v1 = *(void *)(*(void *)v0 + 16) - 1;
      sub_10015C160(v1);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000375AC()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if ((result & 1) == 0)
  {
    uint64_t result = sub_100037618(v1);
    uint64_t v1 = result;
    *uint64_t v0 = result;
  }
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = v3 - 1;
    uint64_t v5 = *(void *)(v1 + 8 * v4 + 32);
    *(void *)(v1 + 16) = v4;
    specialized ContiguousArray._endMutation()();
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100037618(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_10003762C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  type metadata accessor for Worker();
  swift_retain();
  sub_100037704();
  char v4 = v3;
  swift_release();
  uint64_t v5 = 0;
  if ((v4 & 1) == 0)
  {
    uint64_t v6 = v2 - 1;
    while (v6 != v5)
    {
      swift_retain();
      sub_100037704();
      char v8 = v7;
      swift_release();
      ++v5;
      if (v8) {
        return v5;
      }
    }
    return 0;
  }
  return v5;
}

void sub_100037704()
{
  sub_1000209F4();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v5 + 56);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(v5 + 72);
  uint64_t v9 = *(void *)(v5 + 80);
  if (sub_1000377C8(*(unsigned char *)(v0 + 48), *(unsigned char *)(v5 + 48)))
  {
    BOOL v10 = v3 == v8 && v4 == v9;
    if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)()) && (v1 != v6 || v2 != v7)) {
      _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  sub_100020FDC();
}

uint64_t sub_1000377C8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000073;
  uint64_t v3 = 0x636974796C616E61;
  uint64_t v4 = a1;
  uint64_t v5 = 0x636974796C616E61;
  unint64_t v6 = 0xE900000000000073;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x6C616E7265746E69;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x7379656E72756F6ALL;
      break;
    case 3:
      uint64_t v5 = 0x6E656D6D6F636572;
      unint64_t v6 = 0xEF736E6F69746164;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6C616E7265746E69;
      break;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x7379656E72756F6ALL;
      break;
    case 3:
      uint64_t v3 = 0x6E656D6D6F636572;
      unint64_t v2 = 0xEF736E6F69746164;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1000209D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_100037938()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v3 = sub_1000208F0(v2);
  uint64_t v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (sub_10004FC30(v5))
  {
    unsigned int v21 = static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v6 = sub_100046E18();
    sub_100044798(v6);
    *(_OWORD *)(sub_10004211C() + 16) = xmmword_1001C3FC0;
    uint64_t v7 = type metadata accessor for PriorityQueue();
    sub_10002123C(v7);
    id v8 = (id)AMSLogKey();
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      char v20 = v1;
      uint64_t v12 = v11;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100045BC8();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_10004C1F0(MetatypeMetadata);
      sub_1000423CC((uint64_t)v22);
      sub_100020E44();
      void v22[3] = &type metadata for String;
      v22[0] = v10;
      v22[1] = v12;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v22);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      uint64_t v1 = v20;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100045BC8();
      uint64_t v15 = swift_getMetatypeMetadata();
      sub_10004C1F0(v15);
      sub_1000423CC((uint64_t)v22);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v23);
    sub_100020924();
    LogMessage.init(stringLiteral:)();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._countAndFlagsBits = 0x6E696E7275746572;
    v16._object = (void *)0xEB00000000203A67;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    uint64_t v17 = *v1;
    if (*v1)
    {
      *((void *)&v24 + 1) = type metadata accessor for Worker();
      *(void *)&long long v23 = v17;
    }
    else
    {
      long long v23 = 0u;
      long long v24 = 0u;
    }
    swift_retain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v23);
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    uint64_t v18 = PriorityQueue.debugDescription.getter();
    *((void *)&v24 + 1) = &type metadata for String;
    *(void *)&long long v23 = v18;
    *((void *)&v23 + 1) = v19;
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)&v23);
    sub_10004841C(v21);
    swift_release();
    swift_bridgeObjectRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10004770C();
    sub_100020FDC();
    swift_release();
  }
}

uint64_t sub_100037C44(void *a1)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  sub_100020DEC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100022558();
  id v8 = *(void **)(v1 + 72);
  *uint64_t v2 = v8;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v2, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v2, v4);
  if (v8)
  {
    uint64_t v12 = a1[9];
    uint64_t v11 = a1[10];
    swift_bridgeObjectRetain();
    if (sub_100037E88() == v12 && v13 == v11)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15)
      {
        sub_10002CAAC();
        uint64_t v16 = sub_100037E50(*(void *)(v1 + 32));
        if (v16)
        {
          uint64_t v17 = v16;
          uint64_t v19 = *(void *)(v16 + 72);
          uint64_t v18 = *(void *)(v16 + 80);
          swift_bridgeObjectRetain();
          if (sub_100037E88() == v19 && v20 == v18) {
            char v22 = 0;
          }
          else {
            char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (a1[12] >= a1[11])
          {
            if (v12 == *(void *)(v17 + 72) && v11 == *(void *)(v17 + 80))
            {
              swift_release();
              char v23 = 1;
            }
            else
            {
              char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_release();
              char v23 = v22 & v25 ^ 1;
            }
          }
          else
          {
            swift_release();
            char v23 = v22 ^ 1;
          }
          return v23 & 1;
        }
      }
    }
    char v23 = 0;
    return v23 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_100037E50(uint64_t a1)
{
  if (*(void *)(a1 + 16)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

uint64_t sub_100037E7C(char a1)
{
  return sub_100033EE8(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100037E88()
{
  if (*(void *)(v0 + 88))
  {
    uint64_t v1 = *(void *)(v0 + 80);
  }
  else
  {
    uint64_t v1 = sub_10015A9E0();
    *(void *)(v0 + 80) = v1;
    *(void *)(v0 + 88) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100037EF4(void *a1)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  long long v102 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OSSignposter();
  sub_100020DEC();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100011D4C();
  uint64_t v9 = type metadata accessor for OSSignpostID();
  sub_100020DEC();
  uint64_t v11 = v10;
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v15 = __chkstk_darwin(v14);
  unint64_t v101 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v96 - v16;
  uint64_t v105 = a1;
  uint64_t v18 = sub_100038AF8(a1);
  uint64_t v19 = _swiftEmptyArrayStorage;
  if (v18) {
    uint64_t v19 = (void *)v18;
  }
  uint64_t v104 = v19;
  if (qword_10022C498 != -1) {
    swift_once();
  }
  id v20 = *(id *)(qword_100244100 + 16);
  OSSignposter.init(logHandle:)();
  OSSignposter.logHandle.getter();
  swift_unknownObjectRetain();
  OSSignpostID.init(log:object:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
  uint64_t v21 = *(void *)(v1 + 72);
  if ((v21 & 2) != 0) {
    sub_1000BE330((uint64_t)v104);
  }
  uint64_t v106 = v1;
  if ((v21 & 1) == 0)
  {
    sub_100043478(&qword_10022E560);
    uint64_t v22 = sub_10002D318();
    sub_100044798(v22);
    uint64_t v24 = *(void *)(v23 + 72);
    unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v27 = type metadata accessor for EnqueueRunner();
    uint64_t v28 = sub_1000210F8(v27);
    if (v26)
    {
      uint64_t v103 = v9;
      uint64_t v29 = *(void *)(v28 + 80);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v106 = v24;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v30._countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      uint64_t v31 = sub_100020F04(v109);
      *((void *)&v113 + 1) = swift_getMetatypeMetadata();
      *(void *)&long long v112 = v31;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v112, &qword_10022F490);
      sub_100020E44();
      *((void *)&v113 + 1) = &type metadata for String;
      *(void *)&long long v112 = v29;
      *((void *)&v112 + 1) = v26;
      uint64_t v9 = v103;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v112, &qword_10022F490);
      uint64_t v32 = 93;
    }
    else
    {
      swift_retain();
      sub_100020E78();
      sub_100020E60();
      uint64_t v70 = sub_100046704(v109);
      *((void *)&v113 + 1) = swift_getMetatypeMetadata();
      *(void *)&long long v112 = v70;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v112, &qword_10022F490);
      uint64_t v32 = 58;
    }
    unint64_t v71 = 0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v32);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)v109);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v72._countAndFlagsBits = 0xD000000000000036;
    v72._object = (void *)0x80000001001CDD60;
    LogMessage.StringInterpolation.appendLiteral(_:)(v72);
    uint64_t v73 = v104[2];
    swift_bridgeObjectRelease();
    uint64_t v110 = &type metadata for Int;
    v109[0] = v73;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v109, &qword_10022F490);
    v74._countAndFlagsBits = 0x7328746E65766520;
    v74._object = (void *)0xE900000000000029;
    LogMessage.StringInterpolation.appendLiteral(_:)(v74);
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v75 = static os_log_type_t.info.getter();
    sub_10004841C(v75);
    swift_bridgeObjectRelease();
    sub_100043478(&qword_10022D338);
    v109[0] = (uint64_t)[objc_allocWithZone((Class)AMSEngagementEnqueueResult) init];
    uint64_t v76 = Promise.__allocating_init(value:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v9);
    return v76;
  }
  uint64_t v98 = v13;
  uint64_t v99 = v17;
  uint64_t v100 = v11;
  uint64_t v103 = v9;
  id v33 = [v105 clientInfo];
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  long long v96 = xmmword_1001C3120;
  *(_OWORD *)(inited + 16) = xmmword_1001C3120;
  *(void *)(inited + 32) = 0x746E65696C63;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v35 = swift_initStackObject();
  *(_OWORD *)(v35 + 16) = xmmword_1001C3FC0;
  *(void *)(v35 + 32) = 0x6449656C646E7562;
  *(void *)(v35 + 40) = 0xE800000000000000;
  uint64_t v36 = sub_100038B5C(v33, (SEL *)&selRef_bundleIdentifier);
  if (v37) {
    uint64_t v38 = v36;
  }
  else {
    uint64_t v38 = 0;
  }
  if (v37) {
    unint64_t v39 = v37;
  }
  else {
    unint64_t v39 = 0xE000000000000000;
  }
  *(void *)(v35 + 48) = v38;
  *(void *)(v35 + 56) = v39;
  *(void *)(v35 + 72) = &type metadata for String;
  *(void *)(v35 + 80) = 0x6E6F6973726576;
  *(void *)(v35 + 88) = 0xE700000000000000;
  uint64_t v40 = sub_100038B5C(v33, (SEL *)&selRef_clientVersion);
  if (v41) {
    uint64_t v42 = v40;
  }
  else {
    uint64_t v42 = 0;
  }
  if (v41) {
    unint64_t v43 = v41;
  }
  else {
    unint64_t v43 = 0xE000000000000000;
  }
  *(void *)(v35 + 96) = v42;
  *(void *)(v35 + 104) = v43;
  *(void *)(v35 + 120) = &type metadata for String;
  *(void *)(v35 + 128) = 1701667182;
  *(void *)(v35 + 136) = 0xE400000000000000;
  id v97 = v33;
  uint64_t v44 = sub_100038B5C(v33, (SEL *)&selRef_executableName);
  if (v45) {
    uint64_t v46 = v44;
  }
  else {
    uint64_t v46 = 0;
  }
  if (v45) {
    unint64_t v47 = v45;
  }
  else {
    unint64_t v47 = 0xE000000000000000;
  }
  *(void *)(v35 + 144) = v46;
  *(void *)(v35 + 152) = v47;
  *(void *)(v35 + 168) = &type metadata for String;
  *(void *)(v35 + 176) = 6580592;
  *(void *)(v35 + 184) = 0xE300000000000000;
  id v48 = [self processInfo];
  unsigned int v49 = [v48 processIdentifier];

  *(void *)(v35 + 216) = &type metadata for Int32;
  *(_DWORD *)(v35 + 192) = v49;
  uint64_t v50 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v51 = sub_100043478(&qword_10022D7B0);
  *(void *)(inited + 48) = v50;
  *(void *)(inited + 72) = v51;
  *(void *)(inited + 80) = 0x73746E657665;
  *(void *)(inited + 88) = 0xE600000000000000;
  *(void *)(inited + 120) = sub_100043478(&qword_10022F258);
  *(void *)(inited + 96) = v104;
  uint64_t v52 = Dictionary.init(dictionaryLiteral:)();
  int v53 = sub_10004EF18();
  uint64_t v54 = v106;
  if (v53)
  {
    sub_100038CA4(v52, (void *)v54);
  }
  uint64_t v56 = *(void *)(v54 + 136);
  uint64_t v57 = *(void *)(v54 + 144);
  uint64_t v58 = (void *)*(unsigned __int8 *)(v54 + 152);
  sub_100039400(v56, v57, v58);
  uint64_t v104 = (void *)sub_100039414(v52);
  sub_100038C90(v56, v57, v58);
  swift_bridgeObjectRelease();
  uint64_t v59 = sub_100038AF8(v105);
  if (!v59)
  {
    char v68 = 0;
    uint64_t v69 = v103;
    goto LABEL_63;
  }
  uint64_t v60 = v59;
  uint64_t v61 = *(void *)(v59 + 16);
  if (!v61)
  {
LABEL_49:
    char v68 = 0;
    uint64_t v69 = v103;
    goto LABEL_62;
  }
  swift_bridgeObjectRetain();
  uint64_t v62 = 0;
  sub_100020AA0();
  while (1)
  {
    uint64_t v63 = *(void *)(v60 + 8 * v62 + 32);
    uint64_t v107 = v58;
    unint64_t v108 = 0xE900000000000065;
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    if (*(void *)(v63 + 16) && (unint64_t v64 = sub_100043670((uint64_t)v109), (v65 & 1) != 0))
    {
      sub_100043520(*(void *)(v63 + 56) + 32 * v64, (uint64_t)&v112);
    }
    else
    {
      long long v112 = 0u;
      long long v113 = 0u;
    }
    sub_1000434BC((uint64_t)v109);
    if (!*((void *)&v113 + 1))
    {
      sub_10002CBB4((uint64_t)&v112, &qword_10022F490);
LABEL_46:
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v58 = &type metadata for String;
    if (v107 == (void *)0x526567617373654DLL && v108 == 0xEE00747365757165) {
      break;
    }
    char v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100020AA0();
    if (v67) {
      goto LABEL_56;
    }
LABEL_47:
    if (v61 == ++v62)
    {
      swift_bridgeObjectRelease();
      goto LABEL_49;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_56:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022E560);
  uint64_t v77 = sub_10002D318();
  sub_100044798(v77);
  *(_OWORD *)(swift_allocObject() + 16) = v96;
  uint64_t v78 = type metadata accessor for EnqueueRunner();
  uint64_t v79 = sub_1000210F8(v78);
  uint64_t v69 = v103;
  if (&type metadata for String)
  {
    uint64_t v80 = *(void *)(v79 + 80);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v109, (uint64_t)v110);
    uint64_t DynamicType = swift_getDynamicType();
    *((void *)&v113 + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v112 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)&v112, &qword_10022F490);
    sub_100020E44();
    *((void *)&v113 + 1) = &type metadata for String;
    *(void *)&long long v112 = v80;
    *((void *)&v112 + 1) = &type metadata for String;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)&v112, &qword_10022F490);
    uint64_t v82 = 93;
  }
  else
  {
    swift_retain();
    sub_100020E78();
    sub_100020E60();
    uint64_t v83 = sub_100049944(v109);
    *((void *)&v113 + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v112 = v83;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)&v112, &qword_10022F490);
    uint64_t v82 = 58;
  }
  unint64_t v84 = 0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v82);
  LogMessage.init(stringInterpolation:)();
  sub_10004377C((uint64_t)v109);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v85 = static os_log_type_t.default.getter();
  sub_10004841C(v85);
  char v68 = 1;
LABEL_62:
  swift_bridgeObjectRelease();
LABEL_63:
  uint64_t v86 = v100;
  uint64_t v87 = v101;
  uint64_t v88 = v99;
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v101, v99, v69);
  unint64_t v89 = (*(unsigned __int8 *)(v86 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  unint64_t v90 = (v98 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v91 = swift_allocObject();
  uint64_t v92 = v105;
  *(void *)(v91 + 16) = v105;
  (*(void (**)(unint64_t, char *, uint64_t))(v86 + 32))(v91 + v89, v87, v69);
  unint64_t v93 = v91 + v90;
  *(void *)unint64_t v93 = v106;
  *(unsigned char *)(v93 + 8) = v68;
  uint64_t v110 = (void *)type metadata accessor for SyncTaskScheduler();
  uint64_t v111 = &protocol witness table for SyncTaskScheduler;
  sub_10003BAA4(v109);
  swift_retain();
  id v94 = v92;
  SyncTaskScheduler.init()();
  sub_100038BBC();
  uint64_t v76 = Promise.map<A>(on:_:)();

  swift_release();
  swift_release();
  sub_10004377C((uint64_t)v109);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v88, v69);
  return v76;
}

uint64_t sub_100038AF8(void *a1)
{
  id v1 = [a1 events];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_100043478(&qword_10022D6F0);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_100038B5C(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

unint64_t sub_100038BBC()
{
  unint64_t result = qword_10022F358;
  if (!qword_10022F358)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10022F358);
  }
  return result;
}

uint64_t sub_100038BFC()
{
  sub_100038C30();
  return swift_deallocClassInstance();
}

uint64_t sub_100038C30()
{
  sub_10002CBB4(v0 + 16, &qword_10022F0F0);
  id v1 = *(void **)(v0 + 64);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_100038C90(*(void *)(v0 + 136), *(void *)(v0 + 144), *(unsigned char *)(v0 + 152));
  return v0;
}

uint64_t sub_100038C90(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100038CA4(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = self;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v51[0] = 0;
  id v6 = [v4 dataWithJSONObject:isa options:0 error:v51];

  id v7 = v51[0];
  if (v6)
  {
    uint64_t v8 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    uint64_t v11 = Data.count.getter();
    uint64_t result = sub_10004B278(v8, v10);
    if ((double)v11 / 1000.0 / 1000.0 > 0.1)
    {
      id v13 = [objc_allocWithZone((Class)NSByteCountFormatter) init];
      [v13 setAllowedUnits:4];
      id v14 = [v13 stringFromByteCount:v11];
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v46 = v16;
      unint64_t v47 = (void *)v15;

      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v52 = (void *)type metadata accessor for EnqueueRunner();
      v51[0] = a2;
      swift_retain();
      id v17 = (id)AMSLogKey();
      if (v17)
      {
        uint64_t v18 = v17;
        uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v21 = v20;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v22._countAndFlagsBits = 0;
        v22._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v22);
        sub_100049788(v51, (uint64_t)v52);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v48 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CBB4((uint64_t)&v48, &qword_10022F490);
        v24._countAndFlagsBits = 5972026;
        v24._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v24);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v48 = v19;
        uint64_t v49 = v21;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CBB4((uint64_t)&v48, &qword_10022F490);
        v25._countAndFlagsBits = 93;
        v25._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v25);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v40._countAndFlagsBits = 0;
        v40._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v40);
        sub_100049788(v51, (uint64_t)v52);
        uint64_t v41 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v48 = v41;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CBB4((uint64_t)&v48, &qword_10022F490);
        v42._countAndFlagsBits = 58;
        v42._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v42);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v51);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v43._object = (void *)0x80000001001CDE10;
      v43._countAndFlagsBits = 0xD00000000000001FLL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      uint64_t v52 = &type metadata for String;
      v51[0] = v47;
      v51[1] = v46;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v51, &qword_10022F490);
      v44._countAndFlagsBits = 0x65756C617620;
      v44._object = (void *)0xE600000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v44);
      LogMessage.init(stringInterpolation:)();
      if (qword_10022C460 != -1) {
        swift_once();
      }
      uint64_t v45 = static os_log_type_t.default.getter();
      sub_10004841C(v45);

      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    unint64_t v26 = v7;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v52 = (void *)type metadata accessor for EnqueueRunner();
    v51[0] = a2;
    swift_retain();
    id v27 = (id)AMSLogKey();
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v31 = v30;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v32._countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      sub_100049788(v51, (uint64_t)v52);
      uint64_t v33 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v48 = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v48, &qword_10022F490);
      v34._countAndFlagsBits = 5972026;
      v34._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v48 = v29;
      uint64_t v49 = v31;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v48, &qword_10022F490);
      v35._countAndFlagsBits = 93;
      v35._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v36._countAndFlagsBits = 0;
      v36._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      sub_100049788(v51, (uint64_t)v52);
      uint64_t v37 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v48 = v37;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v48, &qword_10022F490);
      v38._countAndFlagsBits = 58;
      v38._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v51);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v39 = static os_log_type_t.default.getter();
    sub_10004841C(v39);
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100039400(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_100039414(uint64_t a1)
{
  id v2 = v1;
  uint64_t v104 = *v2;
  uint64_t v107 = type metadata accessor for DispatchQoS.QoSClass();
  sub_100020DEC();
  uint64_t v106 = v4;
  __chkstk_darwin(v5);
  sub_100040A70();
  uint64_t v105 = v6;
  uint64_t v100 = type metadata accessor for JSONObject();
  sub_100020DEC();
  uint64_t v99 = v7;
  __chkstk_darwin(v8);
  sub_100040A70();
  uint64_t v98 = v9;
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v11 = sub_1000208F0(v10);
  uint64_t v12 = __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  type metadata accessor for JSRoute();
  sub_100020DEC();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v114 = v17;
  uint64_t v115 = v16;
  __chkstk_darwin(v16);
  sub_100042108();
  uint64_t v103 = v18;
  uint64_t v102 = v19;
  __chkstk_darwin(v20);
  uint64_t v116 = (char *)v96 - v21;
  type metadata accessor for JSRequest();
  sub_100020DEC();
  uint64_t v112 = v23;
  uint64_t v113 = v22;
  __chkstk_darwin(v22);
  sub_100042108();
  uint64_t v97 = v24;
  v96[3] = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)v96 - v27;
  BOOL v29 = *((unsigned char *)v2 + 80) == 0;
  sub_10003A778(*((unsigned char *)v2 + 80));
  swift_bridgeObjectRetain();
  sub_10003A188(v29, a1);
  id v30 = (id)AMSLogKey();
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v109 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v101 = v32;
  }
  else
  {
    uint64_t v109 = 0;
    uint64_t v101 = 0;
  }
  Date.init()();
  uint64_t v110 = sub_10003AB68();
  *(void *)&long long v117 = 0;
  *((void *)&v117 + 1) = 0xE000000000000000;
  JSRequest.route.getter();
  uint64_t v33 = JSRoute.service.getter();
  uint64_t v35 = v34;
  Swift::String v36 = *(void (**)(uint64_t))(v14 + 8);
  uint64_t v37 = sub_100020AE0();
  v36(v37);
  swift_bridgeObjectRelease();
  *(void *)&long long v117 = v33;
  *((void *)&v117 + 1) = v35;
  v38._countAndFlagsBits = 46;
  v38._object = (void *)0xE100000000000000;
  String.append(_:)(v38);
  uint64_t v111 = v28;
  JSRequest.route.getter();
  uint64_t v39 = JSRoute.function.getter();
  uint64_t v41 = v40;
  uint64_t v42 = sub_100020AE0();
  v36(v42);
  v43._countAndFlagsBits = v39;
  v43._object = v41;
  String.append(_:)(v43);
  swift_bridgeObjectRelease();
  uint64_t v108 = *((void *)&v117 + 1);
  uint64_t v44 = v117;
  if (qword_10022C470 != -1) {
    swift_once();
  }
  v96[2] = qword_1002440D8;
  sub_100043478(&qword_10022E560);
  uint64_t v45 = type metadata accessor for LogMessage();
  sub_100044798(v45);
  v96[1] = *(void *)(v46 + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  *((void *)&v118 + 1) = type metadata accessor for JSAppEngine();
  *(void *)&long long v117 = v2;
  swift_retain();
  id v47 = (id)AMSLogKey();
  if (v47)
  {
    uint64_t v48 = v47;
    uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v50 = v44;
    uint64_t v52 = v51;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v53._countAndFlagsBits = 0;
    v53._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v53);
    sub_1000420D0();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100043C38(MetatypeMetadata);
    sub_10004357C((uint64_t)v120, &qword_10022F490);
    sub_100020E44();
    v120[3] = &type metadata for String;
    v120[0] = v49;
    v120[1] = v52;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v120, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    uint64_t v44 = v50;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v55._countAndFlagsBits = 0;
    v55._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v55);
    sub_1000420D0();
    uint64_t v56 = swift_getMetatypeMetadata();
    sub_100043C38(v56);
    sub_10004357C((uint64_t)v120, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v117);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v57._object = (void *)0x80000001001CFB70;
  v57._countAndFlagsBits = 0xD000000000000016;
  LogMessage.StringInterpolation.appendLiteral(_:)(v57);
  *((void *)&v118 + 1) = &type metadata for String;
  *(void *)&long long v117 = v44;
  *((void *)&v117 + 1) = v108;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10004357C((uint64_t)&v117, &qword_10022F490);
  v58._countAndFlagsBits = 0x736E6F6974706F20;
  v58._object = (void *)0xEA0000000000203ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v58);
  uint64_t v59 = v111;
  uint64_t v60 = JSRequest.options.getter();
  *((void *)&v118 + 1) = sub_100043478(&qword_10022D7B0);
  *(void *)&long long v117 = v60;
  JSONObject.init(wrapping:)();
  uint64_t v61 = sub_10001A338();
  uint64_t v63 = v62;
  sub_100043FB0();
  v64();
  if (v63)
  {
    *((void *)&v118 + 1) = &type metadata for String;
    *(void *)&long long v117 = v61;
    *((void *)&v117 + 1) = v63;
  }
  else
  {
    long long v117 = 0u;
    long long v118 = 0u;
  }
  LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
  sub_10004357C((uint64_t)&v117, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v65 = static os_log_type_t.default.getter();
  sub_10004841C(v65);
  swift_bridgeObjectRelease();
  uint64_t v66 = v112;
  uint64_t v67 = v113;
  uint64_t v68 = v97;
  (*(void (**)(uint64_t, char *, uint64_t))(v112 + 16))(v97, v59, v113);
  uint64_t v69 = v66;
  unint64_t v70 = (*(unsigned __int8 *)(v66 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  unint64_t v71 = (char *)swift_allocObject();
  uint64_t v72 = v101;
  *((void *)v71 + 2) = v109;
  *((void *)v71 + 3) = v72;
  *((void *)v71 + 4) = v2;
  *((void *)v71 + 5) = v44;
  *((void *)v71 + 6) = v108;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(&v71[v70], v68, v67);
  *((void *)&v118 + 1) = type metadata accessor for SyncTaskScheduler();
  uint64_t v119 = &protocol witness table for SyncTaskScheduler;
  sub_10003BAA4((uint64_t *)&v117);
  swift_bridgeObjectRetain();
  swift_retain();
  SyncTaskScheduler.init()();
  sub_100043478(&qword_10022FE00);
  sub_10002B6DC(&qword_10022FE08, &qword_10022FE00);
  uint64_t v108 = Promise.flatMap<A>(on:_:)();
  swift_release();
  sub_10004377C((uint64_t)&v117);
  uint64_t v73 = swift_allocObject();
  swift_weakInit();
  uint64_t v74 = v114;
  uint64_t v75 = v115;
  uint64_t v76 = v103;
  (*(void (**)(uint64_t, char *, uint64_t))(v114 + 16))(v103, v116, v115);
  uint64_t v77 = v74;
  unint64_t v78 = (*(unsigned __int8 *)(v74 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  unint64_t v79 = (v102 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v80 = (char *)swift_allocObject();
  uint64_t v81 = v109;
  *((void *)v80 + 2) = v73;
  *((void *)v80 + 3) = v81;
  *((void *)v80 + 4) = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(&v80[v78], v76, v75);
  *(void *)&v80[v79] = v104;
  sub_100039E88((uint64_t)sub_1000194FC, (uint64_t)v80);
  swift_release();
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  uint64_t v82 = enum case for DispatchQoS.QoSClass.default(_:);
  uint64_t v83 = v106;
  unint64_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 104);
  uint64_t v85 = v105;
  uint64_t v86 = v107;
  v84(v105, enum case for DispatchQoS.QoSClass.default(_:), v107);
  uint64_t v87 = (void *)static OS_dispatch_queue.global(qos:)();
  uint64_t v88 = *(void (**)(uint64_t))(v83 + 8);
  uint64_t v89 = sub_100020AF4();
  v88(v89);
  uint64_t v109 = sub_10003A648((uint64_t)sub_1000D0358, 0, v87);

  swift_release();
  v84(v85, v82, v86);
  unint64_t v90 = (void *)static OS_dispatch_queue.global(qos:)();
  uint64_t v91 = sub_100020AF4();
  v88(v91);
  uint64_t v92 = sub_10003A530((uint64_t)sub_100010578, 0, v90);

  swift_release();
  swift_release();
  swift_release();
  sub_100043FB0();
  v93();
  sub_100043FB0();
  v94();
  return v92;
}

uint64_t sub_100039E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = Promise.__allocating_init()();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = v4;
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v6[2] = a1;
  v6[3] = a2;
  v6[4] = v4;
  swift_retain_n();
  swift_retain_n();
  sub_10003A184();
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_100039F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v17 = a1;
  uint64_t v3 = sub_100043478(&qword_100234630);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v9((char *)&v16 - v7, a1, v3);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v12(v11 + v10, v8, v3);
  uint64_t v13 = v18;
  v9(v18, v17, v3);
  uint64_t v14 = swift_allocObject();
  v12(v14 + v10, v13, v3);
  sub_10003A184();
  swift_release();
  return swift_release();
}

uint64_t sub_10003A188(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for JSRoute();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v26 - v8;
  JSRoute.init(service:function:)();
  uint64_t v27 = v9;
  uint64_t v28 = v4;
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v29 = v3;
  v10(v7, v9, v3);
  uint64_t result = JSRequest.init(route:timeoutInterval:version:)();
  int64_t v12 = 0;
  uint64_t v13 = a2 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(a2 + 64);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  int64_t v26 = v17 - 1;
  if (!v16) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  unint64_t v19 = v18 | (v12 << 6);
  while (2)
  {
    uint64_t v20 = *(void *)(a2 + 56);
    uint64_t v21 = (void *)(*(void *)(a2 + 48) + 16 * v19);
    uint64_t v22 = v21[1];
    *(void *)&long long v30 = *v21;
    *((void *)&v30 + 1) = v22;
    sub_100043520(v20 + 32 * v19, (uint64_t)v31);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_10003A4C8((uint64_t)&v30, (uint64_t)v32);
      if (!v32[1])
      {
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v27, v29);
      }
      sub_100043510(&v33, &v30);
      JSRequest.addOption(_:withName:)();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1000423CC((uint64_t)&v30);
      if (v16) {
        goto LABEL_4;
      }
LABEL_6:
      int64_t v23 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v23 < v17)
      {
        unint64_t v24 = *(void *)(v13 + 8 * v23);
        if (v24) {
          goto LABEL_9;
        }
        int64_t v25 = v12 + 2;
        ++v12;
        if (v23 + 1 < v17)
        {
          unint64_t v24 = *(void *)(v13 + 8 * v25);
          if (v24) {
            goto LABEL_12;
          }
          int64_t v12 = v23 + 1;
          if (v23 + 2 < v17)
          {
            unint64_t v24 = *(void *)(v13 + 8 * (v23 + 2));
            if (v24)
            {
              v23 += 2;
              goto LABEL_9;
            }
            int64_t v25 = v23 + 3;
            int64_t v12 = v23 + 2;
            if (v23 + 3 < v17) {
              break;
            }
          }
        }
      }
LABEL_23:
      unint64_t v16 = 0;
      memset(v31, 0, sizeof(v31));
      long long v30 = 0u;
    }
    unint64_t v24 = *(void *)(v13 + 8 * v25);
    if (v24)
    {
LABEL_12:
      int64_t v23 = v25;
LABEL_9:
      unint64_t v16 = (v24 - 1) & v24;
      unint64_t v19 = __clz(__rbit64(v24)) + (v23 << 6);
      int64_t v12 = v23;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v23 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v23 >= v17)
    {
      int64_t v12 = v26;
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v13 + 8 * v23);
    ++v25;
    if (v24) {
      goto LABEL_9;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10003A4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022E200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003A530(uint64_t a1, uint64_t a2, void *a3)
{
  v10[3] = sub_10004D510(0, (unint64_t *)&qword_10022F690);
  v10[4] = &protocol witness table for OS_dispatch_queue;
  v10[0] = a3;
  sub_100043478(&qword_10022FE10);
  id v6 = a3;
  uint64_t v7 = Promise.__allocating_init()();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  void v8[3] = a1;
  v8[4] = a2;
  swift_retain_n();
  swift_retain();
  Promise.then(perform:orCatchError:on:)();
  swift_release();
  swift_release();
  sub_10004377C((uint64_t)v10);
  return v7;
}

uint64_t sub_10003A648(uint64_t a1, uint64_t a2, void *a3)
{
  v10[3] = sub_10004D510(0, (unint64_t *)&qword_10022F690);
  v10[4] = &protocol witness table for OS_dispatch_queue;
  v10[0] = a3;
  id v6 = a3;
  uint64_t v7 = Promise.__allocating_init()();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  void v8[3] = a1;
  v8[4] = a2;
  swift_retain_n();
  swift_retain();
  Promise.then(perform:orCatchError:on:)();
  swift_release();
  swift_release();
  sub_10004377C((uint64_t)v10);
  return v7;
}

double sub_10003A778(char a1)
{
  type metadata accessor for Defaults();
  if (sub_10003A8F4(3)) {
    double v2 = 600.0;
  }
  else {
    double v2 = dbl_1001C3F60[a1];
  }
  double v3 = (double)sub_10003A7F4(2);
  if (v4) {
    double v3 = -0.0;
  }
  return v2 + v3;
}

CFIndex sub_10003A7F4(char a1)
{
  sub_1000466F4();
  sub_1000493A4();
  double v2 = (__CFString *)sub_1000449C0();
  swift_bridgeObjectRelease();
  CFPreferencesAppSynchronize(v2);

  Boolean keyExistsAndHasValidFormat = 0;
  sub_10003A9FC(a1);
  double v3 = (__CFString *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  char v4 = (__CFString *)sub_1000449C0();
  swift_bridgeObjectRelease();
  CFIndex AppIntegerValue = CFPreferencesGetAppIntegerValue(v3, v4, &keyExistsAndHasValidFormat);

  if (keyExistsAndHasValidFormat) {
    return AppIntegerValue;
  }
  else {
    return 0;
  }
}

uint64_t sub_10003A8F4(char a1)
{
  sub_1000466F4();
  sub_1000493A4();
  double v2 = (__CFString *)sub_1000449C0();
  swift_bridgeObjectRelease();
  CFPreferencesAppSynchronize(v2);

  Boolean keyExistsAndHasValidFormat = 0;
  sub_10003A9FC(a1);
  double v3 = (__CFString *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  char v4 = (__CFString *)sub_1000449C0();
  swift_bridgeObjectRelease();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v3, v4, &keyExistsAndHasValidFormat);

  if (keyExistsAndHasValidFormat) {
    return AppBooleanValue != 0;
  }
  else {
    return 2;
  }
}

unint64_t sub_10003A9FC(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x79616C6544736ALL;
      break;
    case 3:
      unint64_t result = 0x6954646E65747865;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x636E79537473616CLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0x764F656372756F73;
      break;
    case 8:
      unint64_t result = 0x727265764F6C7275;
      break;
    case 9:
    case 12:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 10:
      unint64_t result = 0xD000000000000021;
      break;
    case 11:
      unint64_t result = 0xD000000000000020;
      break;
    case 13:
      unint64_t result = 0xD000000000000026;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10003AB68()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100043478(&qword_10022FDE0);
  uint64_t v3 = sub_1000208F0(v2);
  uint64_t v4 = __chkstk_darwin(v3);
  id v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v55 - v7;
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v10 = sub_1000208F0(v9);
  __chkstk_darwin(v10);
  sub_100011D4C();
  type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  unint64_t v19 = (char *)&v55 - v18;
  uint64_t v20 = *(void *)(v0 + 96);
  if (v20)
  {
    sub_100043478(&qword_10022FDF8);
    v77[0] = v20;
    swift_retain();
    return Promise.__allocating_init(value:)();
  }
  else
  {
    uint64_t v56 = v6;
    Swift::String v58 = v14;
    uint64_t v59 = v17;
    uint64_t v61 = v16;
    uint64_t v62 = v15;
    id v22 = (id)AMSLogKey();
    if (v22)
    {
      int64_t v23 = v22;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v65 = v25;
      uint64_t v66 = v24;
    }
    else
    {
      uint64_t v65 = 0;
      uint64_t v66 = 0;
    }
    uint64_t v60 = v19;
    Date.init()();
    if (qword_10022C470 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v26 = type metadata accessor for LogMessage();
    sub_100044798(v26);
    sub_100045F1C();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v78 = type metadata accessor for JSAppEngine();
    v77[0] = v0;
    swift_retain();
    id v27 = (id)AMSLogKey();
    uint64_t v63 = v8;
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v31 = v30;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      uint64_t v32 = sub_100048D28();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v74[0] = v32;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)v74, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      v74[0] = v29;
      v74[1] = v31;
      uint64_t v8 = v63;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)v74, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      uint64_t v33 = sub_100048D28();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v74[0] = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)v74, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v77);
    LogMessage.init(stringLiteral:)();
    uint64_t v34 = static os_log_type_t.info.getter();
    sub_10004841C(v34);
    swift_bridgeObjectRelease();
    uint64_t v35 = self;
    id v57 = *(id *)(v1 + 24);
    id v36 = [v57 accountMediaType];
    id v64 = objc_msgSend(v35, "ams_sharedAccountStoreForMediaType:", v36);

    type metadata accessor for BaseObjectGraph();
    static BaseObjectGraph.build(withName:)();
    uint64_t v37 = type metadata accessor for Bag();
    sub_100021AC0((uint64_t)v8, 1, 1, v37);
    if (*(unsigned char *)(v1 + 80))
    {
      if (qword_10022C3E0 != -1) {
        swift_once();
      }
      swift_unknownObjectRetain();
      uint64_t v38 = (uint64_t)v56;
      Bag.init(from:)();
      sub_10004357C((uint64_t)v8, &qword_10022FDE0);
      sub_100021AC0(v38, 0, 1, v37);
      sub_1000D0AB8(v38, (uint64_t)v8);
    }
    sub_100049788(v77, v78);
    sub_100021164();
    uint64_t v39 = MetatypeMetadata;
    uint64_t v40 = v76;
    sub_100049788(v74, (uint64_t)MetatypeMetadata);
    sub_100005EA8(v37, (uint64_t)v8, (uint64_t)v39, v37, v40, v73);
    sub_100049788(v73, v73[3]);
    sub_10004D510(0, &qword_10022FDE8);
    uint64_t v41 = (void *)swift_allocObject();
    uint64_t v43 = v65;
    uint64_t v42 = v66;
    _OWORD v41[2] = v66;
    _OWORD v41[3] = v43;
    uint64_t v66 = v42;
    unsigned char v41[4] = v1;
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = sub_100054984;
    *(void *)(v44 + 24) = v41;
    swift_bridgeObjectRetain();
    swift_retain();
    AsyncObjectGraphBuilder.satisfying<A>(_:with:)();
    swift_release();
    sub_100049788(v72, v72[3]);
    sub_10004D510(0, &qword_10022FDF0);
    v70[0] = v57;
    sub_10004C818();
    sub_100049788(v71, v71[3]);
    sub_10004D510(0, &qword_10022D5A8);
    v69[0] = v64;
    sub_10004C818();
    sub_100049788(v70, v70[3]);
    sub_100021164();
    sub_100049788(v69, v69[3]);
    type metadata accessor for JSStack();
    uint64_t v45 = (void *)swift_allocObject();
    v45[2] = v42;
    v45[3] = v43;
    uint64_t v65 = v43;
    v45[4] = v1;
    swift_retain();
    swift_bridgeObjectRetain();
    dispatch thunk of AsyncObjectGraphBuilder.satisfying<A>(_:with:)();
    swift_release();
    sub_100049788(v68, v68[3]);
    sub_100021164();
    sub_100049788(v67, v67[3]);
    dispatch thunk of AsyncObjectGraphBuilder.makeObjectGraph()();
    sub_10004377C((uint64_t)v67);
    sub_10004377C((uint64_t)v68);
    sub_10004377C((uint64_t)v69);
    sub_10004377C((uint64_t)v70);
    sub_10004377C((uint64_t)v71);
    sub_10004377C((uint64_t)v72);
    sub_10004377C((uint64_t)v73);
    sub_10004377C((uint64_t)v74);
    id v47 = v60;
    uint64_t v46 = v61;
    uint64_t v48 = v58;
    uint64_t v49 = v62;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v60, v62);
    unint64_t v50 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    unint64_t v51 = (v59 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v52 = swift_allocObject();
    uint64_t v53 = v65;
    *(void *)(v52 + 16) = v66;
    *(void *)(v52 + 24) = v53;
    (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v52 + v50, v48, v49);
    *(void *)(v52 + v51) = v1;
    swift_retain();
    uint64_t v21 = sub_1000096BC((uint64_t)sub_1000548F8, v52);

    swift_release();
    swift_release();
    sub_10004357C((uint64_t)v63, &qword_10022FDE0);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v49);
    sub_10004377C((uint64_t)v77);
  }
  return v21;
}

void sub_10003B3F4()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v32 = v3;
  uint64_t v4 = sub_100043478(&qword_10022FB40);
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_100020EAC();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for URL.DirectoryHint();
  sub_100020DEC();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100020EAC();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_10004A6B8();
  uint64_t v21 = __chkstk_darwin(v20);
  int64_t v23 = (char *)&v31 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v31 - v24;
  sub_10003B69C();
  uint64_t v33 = v2;
  uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v34 = v26;
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v15, enum case for URL.DirectoryHint.inferFromPath(_:), v9);
  sub_10003C8FC();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v9);
  swift_bridgeObjectRelease();
  id v27 = *(void (**)(char *, uint64_t))(v18 + 8);
  v27(v23, v16);
  id v28 = [self defaultManager];
  sub_10003D34C();

  uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 32);
  v29((uint64_t)v0, v25, v16);
  sub_100049074(v8);
  if (v30)
  {
    v29(v32, v0, v16);
    sub_10002CBB4(v8, &qword_10022FB40);
  }
  else
  {
    v27(v0, v16);
    v29(v32, (char *)v8, v16);
  }
  sub_100020FDC();
}

void sub_10003B69C()
{
  sub_1000209F4();
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  uint64_t v5 = sub_100043478(&qword_10022FB40);
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_10002257C();
  __chkstk_darwin(v7);
  uint64_t v8 = sub_100042274();
  sub_100020DEC();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_1000464AC();
  __chkstk_darwin(v12);
  sub_1000477AC();
  id v13 = objc_msgSend(self, "ams_engagementDirectory");
  if (v13)
  {
    uint64_t v14 = v13;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = *(void (**)(void))(v10 + 32);
    sub_100045500();
    v15();
    sub_100021AC0(v2, 0, 1, v8);
    sub_100049074(v2);
    if (!v16)
    {
      sub_100045500();
      v15();
      v17._countAndFlagsBits = 0x6144726576726553;
      v17._object = (void *)0xEF65686361436174;
      URL.appendPathComponent(_:)(v17);
      id v18 = [self defaultManager];
      sub_1000478F8();

      sub_100049074(v0);
      if (v16)
      {
        sub_100045500();
        v15();
        sub_10002CBB4(v0, &qword_10022FB40);
      }
      else
      {
        (*(void (**)(void *, uint64_t))(v10 + 8))(v1, v8);
        sub_100045500();
        v15();
      }
      goto LABEL_13;
    }
  }
  else
  {
    sub_10004C968();
  }
  sub_10002CBB4(v2, &qword_10022FB40);
  sub_100043478(&qword_10022E560);
  uint64_t v19 = type metadata accessor for LogMessage();
  sub_100044798(v19);
  *(_OWORD *)(sub_10002D4F8() + 16) = xmmword_1001C3120;
  void v28[3] = sub_100043478(&qword_100234980);
  v28[0] = v8;
  id v20 = (id)AMSLogKey();
  if (v20)
  {
    uint64_t v21 = v20;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    sub_100043C78();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_1000472AC(MetatypeMetadata);
    sub_100047624();
    sub_100020E44();
    sub_100043AC0((uint64_t)&type metadata for String);
    sub_100047624();
    sub_1000208D8();
    sub_100040C54();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    sub_100045EA4();
    uint64_t v23 = swift_getMetatypeMetadata();
    sub_100040FDC(v23);
    sub_10002CBB4((uint64_t)&v27, &qword_10022F490);
    sub_100020E94();
    sub_100040C54();
  }
  sub_10004377C((uint64_t)v28);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v24 = static os_log_type_t.fault.getter();
  sub_10004841C(v24);
  swift_bridgeObjectRelease();
  id v25 = [self defaultManager];
  id v26 = [v25 temporaryDirectory];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_13:
  sub_100020FDC();
}

uint64_t *sub_10003BAA4(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t type metadata accessor for TreatmentStoreService()
{
  return self;
}

void sub_10003BB2C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CocoaError.Code();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_10004A85C();
  uint64_t v5 = type metadata accessor for CocoaError();
  sub_100020DEC();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100022558();
  if (a1)
  {
    if (a1 == 1)
    {
      sub_10003BE18();
    }
    else if (a1 == 2)
    {
      sub_100197010();
    }
    else
    {
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  else
  {
    char v9 = sub_10003BD38();
    sub_100043478(&qword_10022F198);
    if (v9)
    {
      static CocoaError.Code.fileReadNoSuchFile.getter();
      sub_10019C5E4((uint64_t)&_swiftEmptyArrayStorage);
      sub_1000505D0(&qword_100234668, (void (*)(uint64_t))&type metadata accessor for CocoaError);
      _BridgedStoredNSError.init(_:userInfo:)();
      CocoaError._nsError.getter();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
      Promise.__allocating_init(error:)();
    }
    else
    {
      Promise.__allocating_init(value:)();
    }
  }
}

uint64_t sub_10003BD38()
{
  id v0 = [self defaultManager];
  URL.path.getter();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v2 = [v0 fileExistsAtPath:v1];

  return v2 ^ 1;
}

uint64_t sub_10003BDD4()
{
  return sub_100027BD8(v1 - 160, v0);
}

uint64_t sub_10003BDFC(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

void sub_10003BE18()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_10002D300();
  if (sub_10003BD38())
  {
    sub_100020FDC();
    sub_100197010();
  }
  else
  {
    id v5 = (id)AMSSetLogKeyIfNeeded();
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    if (qword_10022C4D8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v9 = type metadata accessor for LogMessage();
    sub_100044798(v9);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v15 = type metadata accessor for TreatmentStoreService();
    v14[0] = v1;
    swift_bridgeObjectRetain_n();
    swift_retain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v10._countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    sub_100049788(v14, v15);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v17[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v17, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v17[0] = v6;
    v17[1] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v17, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
    sub_10004377C((uint64_t)v14);
    LogMessage.init(stringLiteral:)();
    uint64_t v12 = static os_log_type_t.info.getter();
    sub_10004841C(v12);
    swift_bridgeObjectRelease();
    sub_10019608C();
    id v13 = (void *)swift_allocObject();
    void v13[2] = v1;
    v13[3] = v6;
    v13[4] = v8;
    uint64_t v15 = type metadata accessor for SyncTaskScheduler();
    char v16 = &protocol witness table for SyncTaskScheduler;
    sub_10003BAA4(v14);
    swift_retain();
    SyncTaskScheduler.init()();
    sub_100043478(&qword_10022F198);
    sub_10002B6DC(&qword_100234660, &qword_10022F198);
    Promise.flatMap<A>(on:_:)();
    swift_release();
    swift_release();
    sub_10004377C((uint64_t)v14);
    sub_100020FDC();
  }
}

uint64_t sub_10003C158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  sub_100020EAC();
  uint64_t v5 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100020EAC();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for URL.DirectoryHint();
  sub_100020DEC();
  uint64_t v66 = v13;
  __chkstk_darwin(v14);
  sub_100020EAC();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v18 - 8);
  sub_1000468B0();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v63 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  id v25 = (char *)&v63 - v24;
  __chkstk_darwin(v23);
  uint64_t v68 = (uint64_t)&v63 - v26;
  sub_100012AD8();
  int v27 = sub_10004FD40((uint64_t)v25, 1, v5);
  uint64_t v65 = a1;
  if (v27 == 1)
  {
    sub_10002CC0C((uint64_t)v25, &qword_10022FB40);
    uint64_t v28 = 1;
    uint64_t v29 = v68;
  }
  else
  {
    uint64_t v64 = v11;
    unint64_t v30 = 0xE900000000000073;
    uint64_t v31 = 0x636974796C616E61;
    uint64_t v32 = v7;
    switch((char)a1)
    {
      case 1:
        unint64_t v30 = 0xE800000000000000;
        uint64_t v31 = 0x6C616E7265746E69;
        break;
      case 2:
        unint64_t v30 = 0xE800000000000000;
        uint64_t v31 = 0x7379656E72756F6ALL;
        break;
      case 3:
        unint64_t v30 = 0xEF736E6F69746164;
        uint64_t v31 = 0x6E656D6D6F636572;
        break;
      default:
        break;
    }
    uint64_t v71 = v31;
    unint64_t v72 = v30;
    uint64_t v33 = v66;
    uint64_t v34 = sub_100048DD4();
    v35(v34);
    sub_10003C8FC();
    uint64_t v29 = v68;
    URL.appending<A>(path:directoryHint:)();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v17, v12);
    swift_bridgeObjectRelease();
    uint64_t v7 = v32;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v5);
    uint64_t v28 = 0;
    uint64_t v11 = v64;
  }
  sub_100021AC0(v29, v28, 1, v5);
  sub_100006084(v29, (uint64_t)v22);
  sub_1000481CC((uint64_t)v22);
  if (v46)
  {
    sub_10002CC0C((uint64_t)v22, &qword_10022FB40);
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v73 = (void *)sub_100043478(&qword_100230638);
    uint64_t v71 = (uint64_t)&type metadata for JSStackLocations;
    id v36 = (id)AMSLogKey();
    if (v36)
    {
      uint64_t v37 = v36;
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v40 = v39;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v41._countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      sub_100049788(&v71, (uint64_t)v73);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v69[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v69, &qword_10022F490);
      v43._countAndFlagsBits = 5972026;
      v43._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      uint64_t MetatypeMetadata = &type metadata for String;
      v69[0] = v38;
      v69[1] = v40;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v69, &qword_10022F490);
      v44._countAndFlagsBits = 93;
      v44._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v44);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v55._countAndFlagsBits = 0;
      v55._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v55);
      sub_100049788(&v71, (uint64_t)v73);
      uint64_t v56 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v69[0] = v56;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v69, &qword_10022F490);
      v57._countAndFlagsBits = 58;
      v57._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v57);
      LogMessage.init(stringInterpolation:)();
    }
    uint64_t v58 = v68;
    sub_10004377C((uint64_t)&v71);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v59._object = (void *)0x80000001001D2360;
    v59._countAndFlagsBits = 0xD00000000000002ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v59);
    uint64_t v73 = &unk_10020E0E8;
    LOBYTE(v71) = v65;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v71, &qword_10022F490);
    v60._countAndFlagsBits = 41;
    v60._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v60);
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v61 = static os_log_type_t.debug.getter();
    sub_10004841C(v61);
    swift_bridgeObjectRelease();
    uint64_t v48 = v58;
    goto LABEL_19;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v11, v22, v5);
  id v45 = [self defaultManager];
  sub_10003D34C();

  sub_1000481CC(v2);
  if (v46)
  {
    sub_100045280();
    v47();
    sub_10002CC0C(v68, &qword_10022FB40);
    uint64_t v48 = v2;
LABEL_19:
    sub_10002CC0C(v48, &qword_10022FB40);
    uint64_t v54 = 1;
    uint64_t v52 = v67;
    return sub_100021AC0(v52, v54, 1, v5);
  }
  uint64_t v71 = 0x426B63617074656ALL;
  unint64_t v72 = 0xEF65646F43657479;
  uint64_t v49 = v66;
  uint64_t v50 = sub_100048DD4();
  v51(v50);
  sub_10003C8FC();
  uint64_t v52 = v67;
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v17, v12);
  swift_bridgeObjectRelease();
  uint64_t v53 = *(void (**)(void))(v7 + 8);
  sub_100045280();
  v53();
  sub_10002CC0C(v68, &qword_10022FB40);
  sub_100045280();
  v53();
  uint64_t v54 = 0;
  return sub_100021AC0(v52, v54, 1, v5);
}

unint64_t sub_10003C8FC()
{
  unint64_t result = qword_100232380;
  if (!qword_100232380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100232380);
  }
  return result;
}

void sub_10003C948()
{
  sub_1000209F4();
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_100022558();
  uint64_t v7 = sub_100043478(&qword_10022FB40);
  uint64_t v8 = sub_1000208F0(v7);
  __chkstk_darwin(v8);
  sub_1000464AC();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v31 - v11;
  __chkstk_darwin(v10);
  sub_1000477AC();
  uint64_t v13 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_100045B24();
  id v17 = objc_msgSend(self, "ams_dataVaultDirectory");
  if (v17)
  {
    uint64_t v18 = v17;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v19 = 1;
  }
  sub_100040A14(v2, v19);
  sub_10003CDA8(v2, (uint64_t)v12);
  if (sub_10004FD40((uint64_t)v12, 1, v13) == 1)
  {
    sub_10002CBB4((uint64_t)v12, &qword_10022FB40);
    sub_100040A14(v0, 1);
  }
  else
  {
    URL.appendingPathComponent(_:isDirectory:)();
    uint64_t v20 = *(void (**)(char *, uint64_t))(v15 + 8);
    v20(v12, v13);
    sub_100040A14(v0, 0);
    if (sub_10004FD40(v0, 1, v13) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v1, v0, v13);
      id v30 = [self defaultManager];
      sub_10003D34C();

      v20(v1, v13);
      goto LABEL_14;
    }
  }
  sub_10002CBB4(v0, &qword_10022FB40);
  sub_100043478(&qword_10022E560);
  uint64_t v21 = type metadata accessor for LogMessage();
  sub_100044798(v21);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  v32[3] = sub_100043478(&qword_100234980);
  v32[0] = v13;
  id v22 = (id)AMSLogKey();
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_1000448B8();
    sub_100020F04(v32);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_10002069C(MetatypeMetadata);
    sub_10002CBB4((uint64_t)v31, &qword_10022F490);
    sub_100020E44();
    v31[3] = &type metadata for String;
    v31[0] = v24;
    v31[1] = v26;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v31, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_1000448B8();
    sub_100020F04(v32);
    uint64_t v28 = swift_getMetatypeMetadata();
    sub_10002069C(v28);
    sub_10002CBB4((uint64_t)v31, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v32);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v29 = static os_log_type_t.fault.getter();
  sub_10004841C(v29);
  swift_bridgeObjectRelease();
  sub_100040A14(v4, 1);
LABEL_14:
  sub_100020FDC();
}

uint64_t sub_10003CDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022FB40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003CE10(char a1)
{
  type metadata accessor for URL();
  sub_100044830();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100047480();
  sub_10003CF18();
  switch(a1)
  {
    case 1:
      sub_100046178();
      break;
    case 2:
      sub_100046164();
      break;
    case 3:
      sub_100044EC0();
      break;
    default:
      break;
  }
  URL.appendingPathComponent(_:isDirectory:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v1);
}

void sub_10003CF18()
{
  sub_1000209F4();
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_100011D4C();
  uint64_t v4 = sub_100043478(&qword_10022FB40);
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_10002257C();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_100042274();
  sub_100020DEC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10004A6B8();
  uint64_t v12 = __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  id v13 = objc_msgSend(self, "ams_engagementDirectory");
  if (v13)
  {
    uint64_t v14 = v13;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = *(void (**)(void))(v9 + 32);
    sub_100045A08();
    v15();
    sub_100021AC0(v1, 0, 1, v7);
    sub_100049074(v1);
    if (!v16)
    {
      sub_100045A08();
      v15();
      id v17 = [self defaultManager];
      sub_10003D34C();

      sub_100045A08();
      v15();
      sub_100049074(v0);
      if (v16)
      {
        sub_100045A08();
        v15();
        sub_10002CBB4(v0, &qword_10022FB40);
      }
      else
      {
        uint64_t v26 = sub_100040BC8();
        v27(v26);
        sub_100045A08();
        v15();
      }
      goto LABEL_13;
    }
  }
  else
  {
    sub_10004C968();
  }
  sub_10002CBB4(v1, &qword_10022FB40);
  sub_100043478(&qword_10022E560);
  uint64_t v18 = type metadata accessor for LogMessage();
  sub_100044798(v18);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  v29[3] = sub_100043478(&qword_100234980);
  v29[0] = v7;
  id v19 = (id)AMSLogKey();
  if (v19)
  {
    uint64_t v20 = v19;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    sub_100043C78();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_1000472AC(MetatypeMetadata);
    sub_100047624();
    sub_100020E44();
    sub_100043AC0((uint64_t)&type metadata for String);
    sub_100047624();
    sub_1000208D8();
    sub_100040C54();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    sub_100045EA4();
    uint64_t v22 = swift_getMetatypeMetadata();
    sub_100040FDC(v22);
    sub_10002CBB4((uint64_t)&v28, &qword_10022F490);
    sub_100020E94();
    sub_100040C54();
  }
  sub_10004377C((uint64_t)v29);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v23 = static os_log_type_t.fault.getter();
  sub_10004841C(v23);
  swift_bridgeObjectRelease();
  id v24 = [self defaultManager];
  id v25 = [v24 temporaryDirectory];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_13:
  sub_100020FDC();
}

void sub_10003D34C()
{
  sub_1000209F4();
  Class isa = v1;
  char v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v10 = sub_1000208F0(v9);
  __chkstk_darwin(v10);
  sub_100022558();
  URL.path.getter();
  NSString v11 = String._bridgeToObjectiveC()();
  unsigned int v12 = [v0 fileExistsAtPath:v11];
  swift_bridgeObjectRelease();

  if (v12)
  {
    uint64_t v13 = type metadata accessor for URL();
    sub_1000456E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v8, v6, v13);
    sub_100020FDC();
    sub_100021AC0(v15, v16, v17, v18);
  }
  else
  {
    sub_100043478(&qword_10022E560);
    uint64_t v20 = type metadata accessor for LogMessage();
    sub_100044798(v20);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    unint64_t v55 = sub_1001AD080();
    unint64_t v61 = v55;
    v60[0] = v0;
    id v53 = v0;
    id v21 = (id)AMSLogKey();
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v25 = v24;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_1000448B8();
      sub_100020F04(v60);
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100021144(MetatypeMetadata);
      sub_10002CBB4((uint64_t)&v57, &qword_10022F490);
      sub_100020E44();
      Swift::String v59 = &type metadata for String;
      uint64_t v57 = v23;
      uint64_t v58 = v25;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v57, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_1000448B8();
      sub_100020F04(v60);
      uint64_t v27 = swift_getMetatypeMetadata();
      sub_100021144(v27);
      sub_10002CBB4((uint64_t)&v57, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v60);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_10002064C();
    v28._countAndFlagsBits = 0xD000000000000014;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    uint64_t v29 = type metadata accessor for URL();
    unint64_t v61 = v29;
    sub_10003BAA4((uint64_t *)v60);
    sub_1000456E0();
    uint64_t v31 = *(void (**)(void))(v30 + 16);
    sub_100050240();
    v31();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v60, &qword_10022F490);
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v32 = static os_log_type_t.debug.getter();
    sub_10004841C(v32);
    swift_bridgeObjectRelease();
    id v33 = [self defaultManager];
    URL._bridgeToObjectiveC()(v34);
    id v36 = v35;
    if (isa)
    {
      type metadata accessor for FileAttributeKey(0);
      sub_1000C5A7C();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    }
    v60[0] = 0;
    unsigned int v37 = objc_msgSend(v33, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v36, v4 & 1, isa, v60, v53);

    if (v37)
    {
      sub_100050240();
      v31();
      sub_100021AC0(v8, 0, 1, v29);
      sub_100020FDC();
      id v40 = v38;
    }
    else
    {
      id v41 = v60[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      unint64_t v61 = v55;
      v60[0] = v54;
      id v42 = v54;
      id v43 = (id)AMSLogKey();
      if (v43)
      {
        Swift::String v44 = v43;
        uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v47 = v46;

        swift_bridgeObjectRetain();
        sub_100020F60();
        sub_1000448B8();
        sub_100020F04(v60);
        uint64_t v48 = swift_getMetatypeMetadata();
        sub_100021144(v48);
        sub_10002CBB4((uint64_t)&v57, &qword_10022F490);
        sub_100020E44();
        Swift::String v59 = &type metadata for String;
        uint64_t v57 = v45;
        uint64_t v58 = v47;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CBB4((uint64_t)&v57, &qword_10022F490);
        sub_1000208D8();
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020980();
        sub_1000448B8();
        sub_100020F04(v60);
        uint64_t v49 = swift_getMetatypeMetadata();
        sub_100021144(v49);
        sub_10002CBB4((uint64_t)&v57, &qword_10022F490);
        sub_100020E94();
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v60);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_10002064C();
      LogMessage.StringInterpolation.appendLiteral(_:)(v50);
      swift_getErrorValue();
      unint64_t v61 = v56;
      sub_10003BAA4((uint64_t *)v60);
      sub_1000456E0();
      (*(void (**)(void))(v51 + 16))();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v60, &qword_10022F490);
      sub_100020E60();
      LogMessage.init(stringInterpolation:)();
      uint64_t v52 = static os_log_type_t.error.getter();
      sub_10004841C(v52);
      swift_errorRelease();
      swift_bridgeObjectRelease();
      sub_100021AC0(v8, 1, 1, v29);
      sub_100020FDC();
    }
  }
}

uint64_t sub_10003DAA0()
{
  return sub_10003DAB8();
}

uint64_t sub_10003DAB8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10003DAE0()
{
  return sub_10003DAF8();
}

uint64_t sub_10003DAF8()
{
  v1._rawValue = *(void **)(v0 + 40);
  return sub_10003DB1C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v1, *(uint64_t (**)(void *))(v0 + 48));
}

uint64_t sub_10003DB1C(uint64_t a1, uint64_t a2, uint64_t a3, Swift::OpaquePointer a4, uint64_t (*a5)(void *))
{
  uint64_t result = SQLDatabase.prepare(sql:)(a2, a3);
  if (!v5)
  {
    SQLStatement.bind(parameters:)(a4);
    if (!v10)
    {
      do
      {
        uint64_t v14 = SQLStatement.step()(v9);
        NSString v11 = v14;
        if (!v14) {
          break;
        }
        if (!a5)
        {
          swift_release();
          return swift_release();
        }
        swift_retain();
        char v13 = a5(v11);
        sub_10003E0EC((uint64_t)a5);
        uint64_t v9 = swift_release();
      }
      while ((v13 & 1) != 0);
    }
    return swift_release();
  }
  return result;
}

void *SQLStatement.step()(uint64_t a1)
{
  uint64_t v3 = v1;
  char v4 = *(void **)(v1 + 56);
  if (!v4)
  {
    sub_10017D8D4();
    uint64_t v9 = sub_100021180();
    sub_100046A0C(v9, v10);
LABEL_12:
    swift_willThrow();
    return v4;
  }
  char v14 = 31;
  uint64_t v5 = *(void *)(v3 + 64);
  __chkstk_darwin(a1);
  void v13[2] = v3;
  v13[3] = v4;
  v13[4] = &v14;
  uint64_t v6 = swift_retain_n();
  sub_100040804(v6, v5, (void (*)(void))sub_100041B40, (uint64_t)v13);
  swift_release();
  if (!v2)
  {
    char v7 = v14;
    if (v14 == 7)
    {
      return 0;
    }
    else
    {
      if (v14 != 27)
      {
        if (v14 == 31)
        {
          sub_10017D8D4();
          sub_100021180();
          char v7 = 6;
        }
        else
        {
          sub_10007CA54();
          sub_100021180();
        }
        *uint64_t v8 = v7;
        goto LABEL_12;
      }
      uint64_t v11 = *(void *)(v3 + 64);
      type metadata accessor for SQLRow();
      swift_allocObject();
      char v4 = sub_10003E120(v11, (uint64_t)v4);
      swift_beginAccess();
      *(void *)(v3 + 32) = v4;
      swift_retain();
      swift_retain();
      swift_release();
    }
  }
  return v4;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLStatement.bind(parameters:)(Swift::OpaquePointer parameters)
{
  uint64_t v2 = *(sqlite3_stmt **)(v1 + 56);
  if (v2)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v4 = swift_retain();
    sub_10004068C(v4, v1, v2, (uint64_t)parameters._rawValue);
    swift_release();
  }
  else
  {
    sub_10017D8D4();
    uint64_t v5 = sub_100021180();
    sub_100046A0C(v5, v6);
    swift_willThrow();
  }
}

uint64_t SQLDatabase.prepare(sql:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = *(void *)(v2 + 64);
  if (v5)
  {
    uint64_t v10 = 0;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_10003DF34(v4, &v10, v4, v5, a1, a2);
    uint64_t result = v10;
    if (v3)
    {
      return swift_release();
    }
    else if (!v10)
    {
      __break(1u);
    }
  }
  else
  {
    sub_10017D8D4();
    sub_100021180();
    unsigned char *v9 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_10003DF34(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1000438EC();
  if (qword_10022C5B0 != -1) {
    swift_once();
  }
  uint64_t v12 = static OS_dispatch_queue.getSpecific<A>(key:)();
  if (v15 != 2 && (v15 & 1) != 0)
  {
    sub_10004018C(a2, a3, a4, a5, a6);
    if (v6)
    {
      swift_bridgeObjectRelease();
      return swift_release();
    }
    swift_release();
  }
  else
  {
    __chkstk_darwin(v12);
    OS_dispatch_queue.sync<A>(execute:)();
    if (v6)
    {
      swift_bridgeObjectRelease();
      return swift_release();
    }
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003E0EC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for SQLRow()
{
  return self;
}

void *sub_10003E120(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = 0;
  v2[2] = a2;
  return v2;
}

uint64_t sub_10003E130()
{
  return sub_10003E150() & 1;
}

uint64_t sub_10003E150()
{
  sub_100051648();
  uint64_t v1 = sub_10003F9D0();
  if (!v0)
  {
    Swift::Int v4 = v2;
    if (v2)
    {
      Swift::Int v5 = v1;
      swift_beginAccess();
      sub_10004A8EC(&v7, v5, v4);
      swift_endAccess();
      swift_bridgeObjectRelease();
      char v3 = 1;
    }
    else
    {
      char v3 = 0;
    }
  }
  return v3 & 1;
}

uint64_t sub_10003E1F0(uint64_t a1)
{
  return sub_10003E214(a1, v1[2], v1[3], v1[4]) & 1;
}

uint64_t sub_10003E214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  sub_10004B0C0((uint64_t)&v29);
  if (!v4)
  {
    uint64_t v8 = v30;
    if (v30)
    {
      uint64_t v9 = v29;
      v32[0] = v29;
      v32[1] = v30;
      sub_100043510(v31, v33);
      uint64_t v29 = v9;
      uint64_t v30 = v8;
      sub_100043520((uint64_t)v33, (uint64_t)v31);
      sub_100043520((uint64_t)v33, (uint64_t)v27);
      sub_100043510(v27, v28);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_10003E698((uint64_t)v28, v9, v8);
      swift_endAccess();
      sub_10002CC0C((uint64_t)v32, &qword_10022E208);
      sub_10004377C((uint64_t)v31);
    }
    else
    {
      sub_10002CC0C((uint64_t)&v29, &qword_10022E200);
      if (qword_10022C468 != -1) {
        swift_once();
      }
      uint64_t v10 = qword_1002440D0;
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      *((void *)&v33[0] + 1) = type metadata accessor for AppKeyValueTable();
      v32[0] = a2;
      swift_retain();
      id v11 = (id)AMSLogKey();
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v34 = v10;
        uint64_t v15 = v14;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v16._countAndFlagsBits = 0;
        v16._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v16);
        sub_100049788(v32, *((uint64_t *)&v33[0] + 1));
        uint64_t DynamicType = swift_getDynamicType();
        *((void *)&v31[0] + 1) = swift_getMetatypeMetadata();
        uint64_t v29 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v29, &qword_10022F490);
        v18._countAndFlagsBits = 5972026;
        v18._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v18);
        *((void *)&v31[0] + 1) = &type metadata for String;
        uint64_t v29 = v13;
        uint64_t v30 = v15;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v29, &qword_10022F490);
        v19._countAndFlagsBits = 93;
        v19._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v19);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v20._countAndFlagsBits = 0;
        v20._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v20);
        sub_100049788(v32, *((uint64_t *)&v33[0] + 1));
        uint64_t v21 = swift_getDynamicType();
        *((void *)&v31[0] + 1) = swift_getMetatypeMetadata();
        uint64_t v29 = v21;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v29, &qword_10022F490);
        v22._countAndFlagsBits = 58;
        v22._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v22);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v32);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v23._object = (void *)0x80000001001CBA60;
      v23._countAndFlagsBits = 0xD000000000000015;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      *((void *)&v33[0] + 1) = sub_100043478(&qword_100232940);
      v32[0] = a4;
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v32, &qword_10022F490);
      v24._countAndFlagsBits = 0;
      v24._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      LogMessage.init(stringInterpolation:)();
      uint64_t v25 = static os_log_type_t.error.getter();
      sub_10004841C(v25);
      swift_bridgeObjectRelease();
    }
  }
  return 1;
}

uint64_t sub_10003E698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_100043510((_OWORD *)a1, v7);
    sub_10004A120(v7, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10002CC68(a1, &qword_10022F490);
    uint64_t v6 = sub_10004405C();
    sub_10008A4B8(v6);
    swift_bridgeObjectRelease();
    return sub_10002CC68((uint64_t)v7, &qword_10022F490);
  }
}

void sub_10003E728()
{
  sub_1000411FC(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_10003E748()
{
  return sub_10003E764(v0);
}

uint64_t sub_10003E764(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t result = __chkstk_darwin(v4);
  if (*(void *)(a1 + 64))
  {
    id v40 = *(sqlite3 **)(a1 + 64);
    if (qword_10022C468 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v39 = (void *)type metadata accessor for SQLDatabase();
    uint64_t v37 = a1;
    swift_retain();
    id v6 = (id)AMSLogKey();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v11._countAndFlagsBits = 0;
      v11._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v11);
      sub_100049788(&v37, (uint64_t)v39);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v35[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000435D4((uint64_t)v35, &qword_10022F490);
      v13._countAndFlagsBits = 5972026;
      v13._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v13);
      uint64_t MetatypeMetadata = &type metadata for String;
      v35[0] = v8;
      v35[1] = v10;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000435D4((uint64_t)v35, &qword_10022F490);
      v14._countAndFlagsBits = 93;
      v14._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v14);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v15._countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      sub_100049788(&v37, (uint64_t)v39);
      uint64_t v16 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v35[0] = v16;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000435D4((uint64_t)v35, &qword_10022F490);
      v17._countAndFlagsBits = 58;
      v17._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v37);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v18._object = (void *)0x80000001001D7790;
    v18._countAndFlagsBits = 0xD000000000000010;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    BOOL v19 = *(unsigned char *)(a1 + 32) == 0;
    uint64_t v20 = 0x6E6F646165722820;
    if (!*(unsigned char *)(a1 + 32)) {
      uint64_t v20 = 0;
    }
    unint64_t v21 = 0xE000000000000000;
    uint64_t v39 = &type metadata for String;
    if (!v19) {
      unint64_t v21 = 0xEB0000000029796CLL;
    }
    uint64_t v37 = v20;
    unint64_t v38 = v21;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)&v37, &qword_10022F490);
    v22._countAndFlagsBits = 8250;
    v22._object = (void *)0xE200000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t v24 = *(void *)(a1 + 16);
    unint64_t v23 = *(void *)(a1 + 24);
    uint64_t v39 = &type metadata for String;
    uint64_t v37 = v24;
    unint64_t v38 = v23;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)&v37, &qword_10022F490);
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    LogMessage.init(stringInterpolation:)();
    uint64_t v26 = static os_log_type_t.debug.getter();
    sub_10004841C(v26);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v27 = *(void *)(a1 + 104);
    uint64_t v28 = *(void *)(v27 + 16);
    if (v28)
    {
      uint64_t v29 = v27 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_10003ECE8(v29, (uint64_t)v35);
        if (swift_weakLoadStrong())
        {
          sub_10003FFAC();
          if (v2)
          {
            swift_release();
            swift_errorRelease();
            sub_1000435D4((uint64_t)v35, &qword_10022D8B0);
            uint64_t v2 = 0;
          }
          else
          {
            sub_1000435D4((uint64_t)v35, &qword_10022D8B0);
            swift_release();
          }
        }
        else
        {
          sub_1000435D4((uint64_t)v35, &qword_10022D8B0);
        }
        v29 += 8;
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease();
    }
    *(void *)(a1 + 104) = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    int v30 = sqlite3_close(v40);
    uint64_t result = sub_1000416F0(v30);
    *(void *)(a1 + 64) = 0;
    if ((_BYTE)result)
    {
      char v31 = result;
      sub_10007CA54();
      uint64_t v32 = swift_allocError();
      *id v33 = v31;
      sub_10017E314(0xD00000000000001FLL, 0x80000001001D77B0, 0, 0, v32);
      swift_errorRelease();
      swift_allocError();
      *uint64_t v34 = v31;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_10003ECE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022D8B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10003ED54()
{
  sub_10003ED70(v0);
}

void sub_10003ED70(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  __chkstk_darwin(v4);
  if (!*(void *)(a1 + 64))
  {
    if (qword_10022C468 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v5 = *(void *)(type metadata accessor for LogMessage() - 8);
    unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1001C3120;
    unint64_t v36 = v7 + v6;
    uint64_t v35 = (void *)type metadata accessor for SQLDatabase();
    uint64_t v33 = a1;
    swift_retain();
    id v8 = (id)AMSLogKey();
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v13._countAndFlagsBits = 0;
      v13._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v13);
      sub_100049788(&v33, (uint64_t)v35);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v31[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000435D4((uint64_t)v31, &qword_10022F490);
      v15._countAndFlagsBits = 5972026;
      v15._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      uint64_t MetatypeMetadata = &type metadata for String;
      v31[0] = v10;
      v31[1] = v12;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000435D4((uint64_t)v31, &qword_10022F490);
      v16._countAndFlagsBits = 93;
      v16._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v16);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      sub_100049788(&v33, (uint64_t)v35);
      uint64_t v18 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v31[0] = v18;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000435D4((uint64_t)v31, &qword_10022F490);
      v19._countAndFlagsBits = 58;
      v19._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v33);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v20._object = (void *)0x80000001001D7770;
    v20._countAndFlagsBits = 0xD000000000000010;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    BOOL v21 = *(unsigned char *)(a1 + 32) == 0;
    uint64_t v22 = 0x6E6F646165722820;
    if (!*(unsigned char *)(a1 + 32)) {
      uint64_t v22 = 0;
    }
    unint64_t v23 = 0xE000000000000000;
    uint64_t v35 = &type metadata for String;
    if (!v21) {
      unint64_t v23 = 0xEB0000000029796CLL;
    }
    uint64_t v33 = v22;
    unint64_t v34 = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)&v33, &qword_10022F490);
    v24._countAndFlagsBits = 8250;
    v24._object = (void *)0xE200000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    uint64_t v26 = *(void *)(a1 + 16);
    unint64_t v25 = *(void *)(a1 + 24);
    uint64_t v35 = &type metadata for String;
    uint64_t v33 = v26;
    unint64_t v34 = v25;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)&v33, &qword_10022F490);
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)();
    uint64_t v28 = static os_log_type_t.debug.getter();
    sub_10004841C(v28);
    swift_bridgeObjectRelease();
    sub_10003F278();
    if (!v1) {
      goto LABEL_18;
    }
    uint64_t v33 = v1;
    swift_errorRetain();
    sub_100043478((uint64_t *)&unk_100233150);
    if ((swift_dynamicCast() & 1) != 0 && LOBYTE(v31[0]) <= 0x14u && ((1 << SLOBYTE(v31[0])) & 0x104040) != 0)
    {
      sub_10017F03C();
      swift_errorRelease();
      sub_10003F278();
LABEL_18:
      *(unsigned char *)(a1 + 56) = 0;
      *(void *)(a1 + 64) = v29;
      return;
    }
    swift_willThrow();
  }
}

uint64_t type metadata accessor for SQLDatabase()
{
  return self;
}

void sub_10003F278()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  sub_100020DEC();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10002D300();
  unint64_t v6 = *(void **)(v0 + 72);
  *uint64_t v1 = v6;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v1, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v1, v2);
  if ((v6 & 1) == 0) {
    __break(1u);
  }
  ppDb = 0;
  if (*(unsigned char *)(v0 + 32))
  {
    int v8 = 2;
  }
  else
  {
    id v9 = [self defaultManager];
    NSString v10 = String._bridgeToObjectiveC()();
    NSString v11 = [v10 stringByDeletingLastPathComponent];

    if (!v11)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    uint64_t v35 = 0;
    unsigned int v12 = [v9 createDirectoryAtPath:v11 withIntermediateDirectories:1 attributes:0 error:&v35];

    if (v12)
    {
      id v13 = (id)v35;
    }
    else
    {
      id v14 = (id)v35;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
    int v8 = 6;
  }
  Swift::String v15 = *(void **)(v0 + 80);
  if (v15)
  {
    id v16 = v15;
    int v17 = sub_1000084A8();

    v8 |= v17;
  }
  NSString v18 = String._bridgeToObjectiveC()();
  Swift::String v19 = (const char *)[v18 fileSystemRepresentation];
  id v20 = v18;
  int v21 = sqlite3_open_v2(v19, &ppDb, v8, 0);
  char v22 = sub_1000416F0(v21);
  if (v22)
  {
    char v23 = v22;
    sub_10007CA54();
    sub_100021180();
    *Swift::String v24 = v23;
  }
  else
  {
    uint64_t v35 = 1;
    unint64_t v25 = ppDb;
    int v26 = sqlite3_file_control(ppDb, 0, 10, &v35);
    uint64_t v27 = sub_1000416F0(v26);
    if ((_BYTE)v27) {
      goto LABEL_19;
    }
    int v28 = sub_10004218C(v27, "PRAGMA journal_mode=WAL");
    uint64_t v27 = sub_1000416F0(v28);
    if ((_BYTE)v27
      || (v29 = sub_10004218C(v27, "pragma cache_spill = 0"), uint64_t v27 = sub_1000416F0(v29), (_BYTE)v27)
      || (int v30 = sub_10004218C(v27, "PRAGMA auto_vacuum = 2"), LOBYTE(v27) = sub_1000416F0(v30), (_BYTE)v27)
      || (int busy = sqlite3_busy_timeout(v25, 900000), LOBYTE(v27) = sub_1000416F0(busy), (_BYTE)v27))
    {
LABEL_19:
      char v32 = v27;
      sub_10007CA54();
      sub_100021180();
      *uint64_t v33 = v32;
    }
    else
    {
      if (v25) {
        goto LABEL_21;
      }
      sub_10017D8D4();
      sub_100021180();
      *unint64_t v34 = 0;
    }
  }
  swift_willThrow();
LABEL_21:
  sub_100043A68();
}

uint64_t sub_10003F5D4(uint64_t a1)
{
  return sub_10003F5F4(a1, v1) & 1;
}

uint64_t sub_10003F5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003F668(0);
  if (!v2)
  {
    uint64_t v6 = v4;
    char v7 = v5;
    swift_beginAccess();
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7 & 1;
  }
  return 0;
}

uint64_t sub_10003F668(uint64_t a1)
{
  return sub_10003F688(a1);
}

uint64_t sub_10003F688(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    memset(v10, 0, sizeof(v10));
    uint64_t v4 = swift_retain();
    sub_10004242C(v4, v2, a1, v10);
    swift_release();
    sub_100043410((uint64_t)v10, (uint64_t)&v9);
    sub_100043478(&qword_10022F490);
    char v5 = sub_100045450();
    if ((v5 & 1) == 0) {
      uint64_t v11 = 0;
    }
    char v12 = v5 ^ 1;
    sub_1000423CC((uint64_t)v10);
    return v11;
  }
  else
  {
    sub_10017D8D4();
    uint64_t v7 = sub_100021180();
    return sub_100044CC8(v7, v8);
  }
}

uint64_t sub_10003F750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100192B60);
}

uint64_t sub_10003F764()
{
  return sub_1000491CC();
}

uint64_t sub_10003F784(uint64_t a1)
{
  return sub_10003F7A4(a1, v1) & 1;
}

uint64_t sub_10003F7A4(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_10004B78C();
  if (!v2 && (v5 & 1) == 0)
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_10003F9D0();
    uint64_t v9 = v8;
    if (v8)
    {
      uint64_t v10 = v7;
      uint64_t v11 = sub_10003F9D0();
      uint64_t v14 = v12;
      if (v12)
      {
        uint64_t v15 = v11;
        uint64_t v16 = sub_10003F9D0();
        uint64_t v18 = v17;
        if (v17)
        {
          uint64_t v29 = v16;
          uint64_t v27 = sub_10003F9D0();
          uint64_t v28 = v19;
          uint64_t v20 = sub_10003F9D0();
          BOOL v26 = v6 != 0;
          uint64_t v22 = v21;
          swift_beginAccess();
          uint64_t v23 = a2[2];
          uint64_t v24 = a2[3];
          uint64_t v25 = a2[4];
          a2[2] = v26;
          a2[3] = v10;
          a2[4] = v9;
          a2[5] = v27;
          a2[6] = v28;
          a2[7] = v20;
          a2[8] = v22;
          a2[9] = v15;
          a2[10] = v14;
          a2[11] = v29;
          a2[12] = v18;
          sub_100051744(v23, v24, v25);
          return 0;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

uint64_t sub_10003F9D0()
{
  if (*(void *)(v0 + 16))
  {
    memset(v6, 0, sizeof(v6));
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100041D54();
    swift_release();
    if (v1)
    {
      return sub_1000423CC((uint64_t)v6);
    }
    else
    {
      sub_100043410((uint64_t)v6, (uint64_t)&v5);
      sub_100043478(&qword_10022F490);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v7 = 0;
        uint64_t v8 = 0;
      }
      sub_1000423CC((uint64_t)v6);
      return v7;
    }
  }
  else
  {
    sub_10017D8D4();
    uint64_t v3 = sub_100021180();
    return sub_100044CC8(v3, v4);
  }
}

uint64_t sub_10003FAC4(uint64_t a1)
{
  return sub_10003FAE4(a1, *(uint64_t (**)(void *))(v1 + 16)) & 1;
}

uint64_t sub_10003FAE4(uint64_t a1, uint64_t (*a2)(void *))
{
  v6[3] = type metadata accessor for SQLRow();
  v6[4] = &off_10020EE38;
  v6[0] = a1;
  swift_retain();
  char v4 = a2(v6);
  sub_10004377C((uint64_t)v6);
  return v4 & 1;
}

uint64_t sub_10003FB68(uint64_t a1)
{
  return sub_10003FB88(a1, v1) & 1;
}

uint64_t sub_10003FB88(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 16) = 1;
  return 0;
}

uint64_t sub_10003FBE0(void *a1)
{
  return sub_10003FC00(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_10003FC00(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100049788(a1, a1[3]);
  sub_10003F764();
  if (v3)
  {
    swift_errorRelease();
  }
  else if ((v11 & 1) == 0)
  {
    Date.init(timeIntervalSinceReferenceDate:)();
    Date.timeIntervalSinceNow.getter();
    BOOL v13 = v12 < 0.0;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_beginAccess();
    *(unsigned char *)(a2 + 16) = v13;
  }
  sub_100049788(a1, a1[3]);
  sub_10004B6C0(v25);
  unint64_t v14 = *((void *)&v25[0] + 1);
  if (*((void *)&v25[0] + 1) >> 60 == 15) {
    goto LABEL_11;
  }
  uint64_t v15 = *(void *)&v25[0];
  uint64_t v16 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  *(void *)&v25[0] = 0;
  id v18 = [v16 JSONObjectWithData:isa options:0 error:v25];

  if (!v18)
  {
    id v23 = *(id *)&v25[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_10004B6AC(v15, v14);
    swift_errorRelease();
    goto LABEL_11;
  }
  id v19 = *(id *)&v25[0];
  _bridgeAnyObjectToAny(_:)();
  sub_10004B6AC(v15, v14);
  swift_unknownObjectRelease();
  sub_100043478(&qword_10022D6F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    sub_1001138EC();
    swift_allocError();
    *uint64_t v21 = 4;
    swift_willThrow();
    return 0;
  }
  uint64_t v20 = v24[1];
  swift_beginAccess();
  *(void *)(a3 + 16) = v20;
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t SQLStatement.__deallocating_deinit()
{
  SQLStatement.deinit();
  return swift_deallocClassInstance();
}

uint64_t SQLStatement.deinit()
{
  sub_10003FFAC();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_10003FFAC()
{
  return sub_10003FFD8((uint64_t)sub_100040DC0);
}

uint64_t sub_10003FFD8(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 56);
  if (v2)
  {
    uint64_t v3 = (void (*)(uint64_t, uint64_t, uint64_t))result;
    swift_retain();
    uint64_t v4 = swift_retain();
    v3(v4, v1, v2);
    return swift_release();
  }
  return result;
}

void sub_10004003C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100045C28(a1, a2, a3);
  if (qword_10022C5B0 != -1) {
    swift_once();
  }
  static OS_dispatch_queue.getSpecific<A>(key:)();
  sub_1000410C0();
  if (!v7 && (v6 & 1) != 0)
  {
    sub_10004119C();
    uint64_t v10 = sqlite3_reset(v4);
    (*(void (**)(uint64_t, uint64_t, unint64_t))(v3 + 16))(v10, 0x7473207465736572, 0xEF746E656D657461);
    swift_release();
  }
  else
  {
    __chkstk_darwin(v5);
    sub_100048FF8();
    *(void *)(v8 - 16) = sub_10017FC74;
    *(void *)(v8 - 8) = &v11;
    OS_dispatch_queue.sync<A>(execute:)();
    sub_100046D18();
  }
  sub_100040B70();
}

uint64_t sub_10004018C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for SQLStatement();
  uint64_t v11 = (void *)swift_allocObject();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t result = (uint64_t)sub_1000404B8(a2, a3, a4, a5, v11, a2, a4, a5);
  if (!v5)
  {
    *a1 = result;
    swift_release();
    sub_100043478(&qword_10022D8B8);
    uint64_t result = swift_initStackObject();
    *(_OWORD *)(result + 16) = xmmword_1001C3110;
    if (*a1)
    {
      uint64_t v13 = result + 32;
      swift_weakInit();
      swift_weakAssign();
      sub_100040428((uint64_t)&v15, v13);
      swift_beginAccess();
      uint64_t v14 = swift_bridgeObjectRetain();
      sub_1000402E8(v14);
      swift_endAccess();
      swift_setDeallocating();
      return sub_1000403C4();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_1000402E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 + v2 > *(void *)(v3 + 24) >> 1)
  {
    sub_10004700C();
    uint64_t v3 = v6;
  }
  if (!*(void *)(a1 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_100045628(a1 + 32, v2);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_1000403C4()
{
  sub_100043478(&qword_10022D8B0);
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_100040428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022D8B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SQLStatement()
{
  return self;
}

void *sub_1000404B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  a5[3] = v16;
  a5[4] = 0;
  a5[7] = 0;
  a5[8] = a1;
  a5[2] = sub_1000414F8;
  a5[5] = a3;
  a5[6] = a4;
  uint64_t v24 = 0;
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v17 = swift_retain_n();
  uint64_t v18 = v23;
  sub_100041B60(v17, a2, a3, a4, (uint64_t)&v24, a6, a7, a8, v22, v23, SWORD2(v23), SBYTE6(v23), SHIBYTE(v23));
  if (v18)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release_n();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v19 = v24;
    if (v24)
    {
      swift_release();
      swift_release();
      a5[7] = v19;
    }
    else
    {
      swift_release();
      sub_10017D8D4();
      sub_100021180();
      *uint64_t v20 = 2;
      swift_willThrow();
      swift_release();
      swift_release();
    }
  }
  return a5;
}

void sub_10004068C(uint64_t a1, uint64_t a2, sqlite3_stmt *a3, uint64_t a4)
{
  sub_100040D1C(a1, a2, (uint64_t)a3, a4);
  if (qword_10022C5B0 != -1) {
    swift_once();
  }
  static OS_dispatch_queue.getSpecific<A>(key:)();
  sub_100040A3C();
  if (!v9 && (v8 & 1) != 0)
  {
    sub_100044248(a2, a3, a4);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_12;
    }
    swift_release();
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_10004C22C();
  __chkstk_darwin(v10);
  sub_100048FF8();
  *(void *)(v11 - 16) = sub_10017FC90;
  *(void *)(v11 - 8) = &v13;
  OS_dispatch_queue.sync<A>(execute:)();
  if (!v4)
  {
    swift_release();
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  swift_release();
LABEL_12:
  sub_100040B70();
}

void sub_100040804(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_100040D1C(a1, a2, (uint64_t)a3, a4);
  if (qword_10022C5B0 != -1) {
    swift_once();
  }
  static OS_dispatch_queue.getSpecific<A>(key:)();
  sub_100040A3C();
  if (!v7 && (v6 & 1) != 0)
  {
    sub_1000411FC(a2, a3);
    swift_release();
  }
  else
  {
    sub_10004C22C();
    __chkstk_darwin(v8);
    sub_100048FF8();
    *(void *)(v9 - 16) = sub_10003E728;
    *(void *)(v9 - 8) = &v11;
    OS_dispatch_queue.sync<A>(execute:)();
    sub_100046D18();
  }
  sub_100040B70();
}

uint64_t sub_100040934()
{
  return Hasher.init(_seed:)();
}

uint64_t sub_100040954()
{
  return v0 + 8;
}

uint64_t sub_100040960(uint64_t a1)
{
  *(void *)(v2 - 128) = a1;
  *(void *)(v2 - 152) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_1000409A0()
{
  return sub_100027BD8(v1 - 144, v0);
}

uint64_t sub_1000409B8()
{
  return LogMessage.init(stringLiteral:)();
}

void sub_1000409D8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  sub_100040804(a1, a1, a3, v3);
}

uint64_t sub_100040A14(uint64_t a1, uint64_t a2)
{
  return sub_100021AC0(a1, a2, 1, v2);
}

uint64_t sub_100040A48@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 1) = a2;
  return result;
}

void sub_100040A68(uint64_t a1@<X8>)
{
  *uint64_t v1 = a1;
}

uint64_t sub_100040A84()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100040AA0()
{
  return swift_retain_n();
}

uint64_t sub_100040AB8()
{
  return LogMessage.init(stringInterpolation:)();
}

double sub_100040AD0()
{
  return sub_100032918(v1 - 152, v0, (_OWORD *)(v1 - 112));
}

uint64_t sub_100040AEC()
{
  return sub_10002CBB4(v1 - 120, v0);
}

uint64_t sub_100040B04()
{
  return 0x6E656D6D6F636572;
}

uint64_t sub_100040B18()
{
  return LogMessage.init(stringLiteral:)();
}

__n128 sub_100040B48()
{
  return *(__n128 *)(v0 + 72);
}

void sub_100040B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 - 96) = a4;
}

void sub_100040B94()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t sub_100040BA8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100040BC8()
{
  return v0;
}

uint64_t sub_100040BE0()
{
  return String.hash(into:)();
}

uint64_t sub_100040C0C(uint64_t a1, void *a2)
{
  return sub_10007C838(a1, a2, v3, v2);
}

uint64_t sub_100040C2C()
{
  return sub_10002CBB4(v1 - 120, v0);
}

uint64_t sub_100040C54()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100040C78()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_100040CA0()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100040CB8()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_100040CE0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 112) = a1;
  *(void *)(v2 - 104) = (v1 - 32) | 0x8000000000000000;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100040D00()
{
  return sub_100088240(v0 - 200, v0 - 168);
}

unint64_t sub_100040D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 - 80) = a2;
  *(void *)(v4 - 72) = a3;
  *(void *)(v4 - 64) = a4;
  return sub_1000438EC();
}

uint64_t sub_100040D3C()
{
  return v0;
}

uint64_t sub_100040D54(uint64_t a1)
{
  *(void *)(v1 + 264) = a1;
  *(void *)(v1 + 240) = v2;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100040D74()
{
  *(void *)(v1 - 176) = v0;
  *(unsigned char *)(v1 - 200) = *(void *)(v1 - 232);
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100040D94()
{
  return *(void *)(*(void *)(v0 + 56) + 16 * v1);
}

uint64_t sub_100040DA8(uint64_t a1)
{
  return sub_1001ACEC0(a1, v1, 0);
}

void sub_100040DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100045C28(a1, a2, a3);
  if (qword_10022C5B0 != -1) {
    swift_once();
  }
  static OS_dispatch_queue.getSpecific<A>(key:)();
  sub_1000410C0();
  if (!v6 && (v5 & 1) != 0)
  {
    sub_10004119C();
    *(void *)(v3 + 56) = 0;
    uint64_t v9 = sqlite3_finalize(v4);
    (*(void (**)(uint64_t, unint64_t, unint64_t))(v3 + 16))(v9, 0xD000000000000012, 0x80000001001D7A10);
    swift_release();
  }
  else
  {
    __chkstk_darwin();
    sub_100048FF8();
    *(void *)(v7 - 16) = sub_10017FCB0;
    *(void *)(v7 - 8) = &v10;
    OS_dispatch_queue.sync<A>(execute:)();
    sub_100046D18();
  }
  sub_100040B70();
}

void sub_100040F0C(uint64_t a1)
{
  sub_100058474(a1, v3, v2, v1);
}

uint64_t sub_100040F28()
{
  return sub_100021AC0(v0, 1, 1, v1);
}

__n128 sub_100040F48(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 240);
  a1[1] = result;
  *(void *)(v1 - 96) = *(void *)(v1 - 256);
  return result;
}

uint64_t sub_100040F68()
{
  sub_100049788((void *)(v0 - 128), *(void *)(v0 - 104));
  return swift_getDynamicType();
}

uint64_t sub_100040FA0()
{
  return sub_100027BD8(v1 - 160, v0);
}

uint64_t sub_100040FB8()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_100040FDC(uint64_t a1)
{
  *(void *)(v2 - 120) = a1;
  *(void *)(v2 - 144) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100040FF8(void *a1)
{
  sub_100049788(a1, v1);
  return swift_getDynamicType();
}

uint64_t sub_100041028()
{
  return LogMessage.init(stringLiteral:)();
}

uint64_t sub_100041050()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100041068()
{
  sub_100049788((void *)(v0 - 136), *(void *)(v0 - 112));
  return swift_getDynamicType();
}

uint64_t sub_1000410A0()
{
  return swift_dynamicCast();
}

uint64_t sub_1000410CC()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100041124(uint64_t a1, sqlite3_stmt *a2, unsigned char *a3)
{
  sub_10004119C();
  int v7 = sqlite3_step(a2);
  uint64_t result = (*(uint64_t (**)(void))(a1 + 16))();
  if (!v3)
  {
    uint64_t result = sub_1000416F0(v7);
    *a3 = result;
  }
  return result;
}

uint64_t sub_10004119C()
{
  swift_retain();
  uint64_t v1 = swift_retain();
  sub_100042C28(v1, v0);
  return swift_release();
}

void sub_1000411FC(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = *(sqlite3 **)(a1 + 64);
  if (!v3)
  {
    sub_10017D8D4();
    swift_allocError();
    *uint64_t v10 = 0;
    goto LABEL_18;
  }
  char v5 = *(unsigned char *)(a1 + 112);
  if ((v5 & 1) == 0)
  {
    uint64_t v17 = a2;
    *(unsigned char *)(a1 + 112) = 1;
    if (*(unsigned char *)(a1 + 32)) {
      uint64_t v6 = 0xD00000000000001ALL;
    }
    else {
      uint64_t v6 = 0xD00000000000001BLL;
    }
    if (*(unsigned char *)(a1 + 32)) {
      uint64_t v7 = 0x80000001001D79F0;
    }
    else {
      uint64_t v7 = 0x80000001001D79D0;
    }
    uint64_t v8 = String.utf8CString.getter();
    int v9 = sqlite3_exec(v3, (const char *)(v8 + 32), 0, 0, 0);
    swift_release();
    sub_100041544(v9, 0xD000000000000011, (void *)0x80000001001D7A30, v6, v7);
    swift_bridgeObjectRelease();
    if (v2)
    {
      *(unsigned char *)(a1 + 112) = 0;
LABEL_18:
      swift_willThrow();
      return;
    }
    a2 = v17;
  }
  a2();
  if (v2) {
    uint64_t v11 = v2;
  }
  else {
    uint64_t v11 = 0;
  }
  if ((v5 & 1) == 0)
  {
    if (v11) {
      uint64_t v12 = 0x4B4341424C4C4F52;
    }
    else {
      uint64_t v12 = 0x3B54494D4D4F43;
    }
    if (v11) {
      uint64_t v13 = 0xE90000000000003BLL;
    }
    else {
      uint64_t v13 = 0xE700000000000000;
    }
    *(unsigned char *)(a1 + 112) = 0;
    uint64_t v14 = String.utf8CString.getter();
    int v15 = sqlite3_exec(v3, (const char *)(v14 + 32), 0, 0, 0);
    swift_release();
    sub_100041544(v15, 0x6E61727420646E65, (void *)0xEF6E6F6974636173, v12, v13);
    swift_bridgeObjectRelease();
    int v16 = sqlite3_exec(v3, "PRAGMA incremental_vacuum(256)", 0, 0, 0);
    sub_100041544(v16, 0xD000000000000010, (void *)0x80000001001D7A70, 0xD00000000000001ELL, 0x80000001001D7A50);
  }
  if (v11) {
    goto LABEL_18;
  }
}

void sub_1000414CC(int a1, uint64_t a2, void *a3)
{
  sub_100041544(a1, a2, a3, *(void *)(v3 + 24), *(void *)(v3 + 32));
}

void sub_1000414F8(int a1, uint64_t a2, void *a3)
{
  sub_100041518(a1, a2, a3, v3[2], v3[3], v3[4]);
}

void sub_100041518(int a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

void sub_100041544(int a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v12 = sub_1000416F0(a1);
  int v13 = v12;
  if (v12 > 0x1Bu || ((1 << v12) & 0x8000081) == 0)
  {
    unsigned __int8 v15 = v12;
    _StringGuts.grow(_:)(23);
    swift_bridgeObjectRelease();
    v16._countAndFlagsBits = a2;
    v16._object = a3;
    String.append(_:)(v16);
    char v17 = sub_1000416F0(a1);
    sub_10007CA54();
    uint64_t v18 = sub_100021180();
    *uint64_t v19 = v17;
    sub_10017E314(0xD000000000000015, 0x80000001001D79B0, a4, a5, v18);
    swift_errorRelease();
    swift_bridgeObjectRelease();
    if (v13 != 20)
    {
      if (v13 == 14) {
        goto LABEL_13;
      }
      if (v13 != 6) {
        goto LABEL_15;
      }
    }
    if (*(unsigned char *)(v5 + 56))
    {
      sub_10017EDCC();
      goto LABEL_14;
    }
    *(unsigned char *)(v5 + 56) = 1;
LABEL_13:
    sub_10017EE40();
LABEL_14:
    if (v6) {
      return;
    }
LABEL_15:
    sub_100021180();
    *uint64_t v20 = v15;
    swift_willThrow();
  }
}

uint64_t sub_1000416F0(int a1)
{
  type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin();
  uint64_t result = 0;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      goto LABEL_39;
    case 2:
      uint64_t result = 12;
      break;
    case 3:
      uint64_t result = 23;
      break;
    case 4:
      uint64_t result = 1;
      break;
    case 5:
      uint64_t result = 3;
      break;
    case 6:
      uint64_t result = 15;
      break;
    case 7:
      uint64_t result = 19;
      break;
    case 8:
      uint64_t result = 26;
      break;
    case 9:
      uint64_t result = 13;
      break;
    case 10:
      uint64_t result = 14;
      break;
    case 11:
      uint64_t result = 6;
      break;
    case 12:
      uint64_t result = 21;
      break;
    case 13:
      uint64_t result = 11;
      break;
    case 14:
      uint64_t result = 4;
      break;
    case 15:
      uint64_t result = 24;
      break;
    case 16:
      uint64_t result = 8;
      break;
    case 17:
      uint64_t result = 28;
      break;
    case 18:
      uint64_t result = 29;
      break;
    case 19:
      uint64_t result = 5;
      break;
    case 20:
      uint64_t result = 16;
      break;
    case 21:
      uint64_t result = 17;
      break;
    case 22:
      uint64_t result = 18;
      break;
    case 23:
      uint64_t result = 2;
      break;
    case 24:
      uint64_t result = 10;
      break;
    case 25:
      uint64_t result = 25;
      break;
    case 26:
      uint64_t result = 20;
      break;
    case 27:
      uint64_t result = 22;
      break;
    case 28:
      uint64_t result = 30;
      break;
    default:
      if (a1 == 100)
      {
        uint64_t result = 27;
      }
      else if (a1 == 101)
      {
        uint64_t result = 7;
      }
      else
      {
        sub_100043478(&qword_10022E560);
        type metadata accessor for LogMessage();
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
        uint64_t v21 = &type metadata for SQLite3Status;
        LOBYTE(v20[0]) = 9;
        id v3 = (id)AMSLogKey();
        if (v3)
        {
          uint64_t v4 = v3;
          uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v7 = v6;

          swift_bridgeObjectRetain();
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v8._countAndFlagsBits = 0;
          v8._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v8);
          sub_100049788(v20, (uint64_t)v21);
          uint64_t DynamicType = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          v18[0] = DynamicType;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_1000423CC((uint64_t)v18);
          v10._countAndFlagsBits = 5972026;
          v10._object = (void *)0xE300000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v10);
          uint64_t MetatypeMetadata = &type metadata for String;
          v18[0] = v5;
          v18[1] = v7;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_1000423CC((uint64_t)v18);
          v11._countAndFlagsBits = 93;
          v11._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v11);
          LogMessage.init(stringInterpolation:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v12._countAndFlagsBits = 0;
          v12._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v12);
          sub_100049788(v20, (uint64_t)v21);
          uint64_t v13 = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          v18[0] = v13;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_1000423CC((uint64_t)v18);
          v14._countAndFlagsBits = 58;
          v14._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v14);
          LogMessage.init(stringInterpolation:)();
        }
        sub_10004377C((uint64_t)v20);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v15._object = (void *)0x80000001001D7B40;
        v15._countAndFlagsBits = 0xD000000000000031;
        LogMessage.StringInterpolation.appendLiteral(_:)(v15);
        uint64_t v21 = (ValueMetadata *)&type metadata for Int32;
        LODWORD(v20[0]) = a1;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)v20);
        v16._countAndFlagsBits = 0;
        v16._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v16);
        LogMessage.init(stringInterpolation:)();
        if (qword_10022C460 != -1) {
          swift_once();
        }
        uint64_t v17 = static os_log_type_t.fault.getter();
        sub_10004841C(v17);
        swift_bridgeObjectRelease();
LABEL_39:
        uint64_t result = 9;
      }
      break;
  }
  return result;
}

uint64_t sub_100041B40()
{
  return sub_100041124(*(void *)(v0 + 16), *(sqlite3_stmt **)(v0 + 24), *(unsigned char **)(v0 + 32));
}

void sub_100041B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_100044DC4();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  BOOL v26 = v25;
  uint64_t v27 = (void *)swift_allocObject();
  _OWORD v27[2] = v18;
  void v27[3] = v16;
  v27[4] = v14;
  void v32[2] = v26;
  v32[3] = v24;
  void v32[4] = v22;
  v32[5] = v20;
  v32[6] = sub_1000414CC;
  v32[7] = v27;
  sub_1000438EC();
  uint64_t v28 = qword_10022C5B0;
  swift_retain();
  swift_bridgeObjectRetain();
  if (v28 != -1) {
    swift_once();
  }
  uint64_t v29 = static OS_dispatch_queue.getSpecific<A>(key:)();
  if (a13 != 2 && (a13 & 1) != 0)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    sub_100045534(v26, v24, v22, v20, v18, v16, v14);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    __chkstk_darwin(v29);
    sub_100048FF8();
    *(void *)(v30 - 16) = sub_10017FD70;
    *(void *)(v30 - 8) = v32;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_100020E2C();
}

void sub_100041D54()
{
  sub_100044DC4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  v15[2] = v3;
  v15[3] = v5;
  v15[4] = v6;
  v15[5] = v1;
  sub_1000438EC();
  if (qword_10022C5B0 != -1) {
    swift_once();
  }
  static OS_dispatch_queue.getSpecific<A>(key:)();
  if (LOBYTE(v16[0]) != 2 && (v16[0] & 1) != 0)
  {
    sub_1000427C4();
    uint64_t v10 = *(void *)(v4 + 32);
    if (v10)
    {
      Swift::String v11 = String.lowercased()();
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_100042294(v11._countAndFlagsBits, (uint64_t)v11._object, v10);
      char v14 = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        sub_1000422DC(v12, v16);
        if (v0)
        {
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_15;
        }
        sub_100042698((uint64_t)v16, v2);
      }
    }
    swift_release();
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_10004C22C();
  __chkstk_darwin(v7);
  sub_100048FF8();
  *(void *)(v8 - 16) = sub_10017FCCC;
  *(void *)(v8 - 8) = v15;
  OS_dispatch_queue.sync<A>(execute:)();
  if (!v0)
  {
    swift_release();
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  swift_release();
LABEL_15:
  sub_100020E2C();
}

uint64_t sub_100041F50()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_100041F7C()
{
  sub_100049788((void *)(v0 - 112), *(void *)(v0 - 88));
  return swift_getDynamicType();
}

uint64_t sub_100041FB4(uint64_t a1)
{
  *(void *)(v2 - 144) = a1;
  *(void *)(v2 - 168) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100041FD4()
{
  return swift_allocObject();
}

void sub_100042014()
{
  uint64_t v1 = 0x2E2E2E2029;
  unint64_t v2 = 0xE500000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100042048(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 160) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100042068()
{
  return sub_10009F4E0();
}

uint64_t sub_100042090()
{
  return sub_10004377C(v0 - 120);
}

uint64_t sub_1000420B8()
{
  return v0;
}

uint64_t sub_1000420D0()
{
  sub_100049788((void *)(v0 - 176), *(void *)(v0 - 152));
  return swift_getDynamicType();
}

uint64_t sub_10004211C()
{
  return swift_allocObject();
}

uint64_t sub_100042134()
{
  return type metadata accessor for Date();
}

uint64_t sub_10004215C()
{
  return sub_10004357C(v1 - 120, v0);
}

uint64_t sub_10004218C(uint64_t a1, const char *a2)
{
  return sqlite3_exec(v2, a2, 0, 0, 0);
}

uint64_t sub_1000421AC()
{
  sub_100049788((void *)(v0 - 112), *(void *)(v0 - 88));
  return swift_getDynamicType();
}

NSString sub_1000421E4()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100042204(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  *(void *)(v2 + 232) = v3;
  *(void *)(v2 + 208) = v4;
  return swift_bridgeObjectRetain();
}

id sub_100042258(uint64_t a1)
{
  *(void *)(v3 + 88) = a1;
  *(void *)(v3 + 64) = v1;
  return v2;
}

uint64_t sub_100042274()
{
  return type metadata accessor for URL();
}

uint64_t sub_100042294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (unint64_t v4 = sub_100042ADC(a1, a2), (v5 & 1) != 0)) {
    return *(void *)(*(void *)(a3 + 56) + 8 * v4);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000422DC@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    memset(v10, 0, sizeof(v10));
    uint64_t v6 = swift_retain();
    sub_10004242C(v6, v3, a1, v10);
    swift_release();
    sub_100043410((uint64_t)v10, (uint64_t)&v9);
    sub_100043478(&qword_10022F490);
    if ((swift_dynamicCast() & 1) == 0)
    {
      *a2 = 0u;
      a2[1] = 0u;
    }
    return sub_1000423CC((uint64_t)v10);
  }
  else
  {
    sub_10017D8D4();
    sub_100021180();
    *uint64_t v8 = 1;
    return swift_willThrow();
  }
}

uint64_t sub_1000423CC(uint64_t a1)
{
  uint64_t v2 = sub_100043478(&qword_10022F490);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10004242C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  sub_100040D1C(a1, a2, a3, (uint64_t)a4);
  if (qword_10022C5B0 != -1) {
    swift_once();
  }
  static OS_dispatch_queue.getSpecific<A>(key:)();
  sub_100040A3C();
  if (!v8 && (v7 & 1) != 0)
  {
    sub_100042554(a2, a3, a4);
  }
  else
  {
    sub_10004C22C();
    __chkstk_darwin(v9);
    sub_100048FF8();
    *(void *)(v10 - 16) = sub_10017FCEC;
    *(void *)(v10 - 8) = &v12;
    OS_dispatch_queue.sync<A>(execute:)();
  }
  sub_100043A68();
}

uint64_t sub_100042554(uint64_t result, uint64_t iCol, _OWORD *a3)
{
  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_15;
  }
  int v3 = iCol;
  if (iCol > 0x7FFFFFFF)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  char v5 = (sqlite3_stmt *)result;
  uint64_t result = sqlite3_column_type((sqlite3_stmt *)result, iCol);
  switch((int)result)
  {
    case 1:
      uint64_t v6 = (sqlite3_stmt *)sub_1000439C8();
      uint64_t v18 = &type metadata for Int;
      v17[0] = sqlite3_column_int64(v6, v7);
      return sub_100042698((uint64_t)v17, (uint64_t)a3);
    case 2:
      char v8 = (sqlite3_stmt *)sub_1000439C8();
      uint64_t v18 = &type metadata for Double;
      v17[0] = sqlite3_column_double(v8, v9);
      return sub_100042698((uint64_t)v17, (uint64_t)a3);
    case 3:
      uint64_t v10 = (sqlite3_stmt *)sub_1000439C8();
      uint64_t result = (uint64_t)sqlite3_column_text(v10, v11);
      if (!result) {
        return result;
      }
      uint64_t v12 = String.init(cString:)();
      char v14 = &type metadata for String;
      break;
    case 4:
      sqlite3_column_bytes(v5, v3);
      uint64_t v15 = (sqlite3_stmt *)sub_1000439C8();
      uint64_t result = (uint64_t)sqlite3_column_blob(v15, v16);
      if (!result) {
        return result;
      }
      uint64_t v12 = Data.init(bytes:count:)();
      char v14 = &type metadata for Data;
      break;
    case 5:
      uint64_t result = sub_1000423CC((uint64_t)a3);
      *a3 = 0u;
      a3[1] = 0u;
      return result;
    default:
      return result;
  }
  uint64_t v18 = v14;
  v17[0] = v12;
  v17[1] = v13;
  return sub_100042698((uint64_t)v17, (uint64_t)a3);
}

uint64_t sub_100042698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022F490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004270C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10004272C(uint64_t a1)
{
  return sub_10004FD40(a1, 1, v1);
}

uint64_t sub_10004274C()
{
  return v0;
}

uint64_t sub_10004275C(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 - 88) = v2;
  *(void *)(v3 - 112) = a1;
  *(void *)(v3 - 104) = a2;
  return static LogMessage.safe(_:)();
}

uint64_t sub_10004277C()
{
  return 0;
}

uint64_t sub_100042798()
{
  return swift_getWitnessTable();
}

void sub_1000427C4()
{
  if (*(void *)(v0 + 32)) {
    return;
  }
  uint64_t v1 = *(sqlite3_stmt **)(v0 + 16);
  if (!v1) {
    return;
  }
  uint64_t v2 = (void *)Dictionary.init(dictionaryLiteral:)();
  unsigned int v3 = sqlite3_column_count(v1);
  if ((v3 & 0x80000000) == 0)
  {
    if (!v3)
    {
LABEL_19:
      *(void *)(v0 + 32) = v2;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v4 = 0;
    uint64_t v5 = v3;
    uint64_t v21 = v3;
    while (v5 != v4)
    {
      if (sqlite3_column_name(v1, v4))
      {
        uint64_t v6 = v1;
        String.init(cString:)();
        Swift::String v7 = String.lowercased()();
        swift_bridgeObjectRelease();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v9 = sub_100042ADC(v7._countAndFlagsBits, (uint64_t)v7._object);
        uint64_t v11 = v2[2];
        BOOL v12 = (v10 & 1) == 0;
        Swift::Int v13 = v11 + v12;
        if (__OFADD__(v11, v12)) {
          goto LABEL_23;
        }
        unint64_t v14 = v9;
        char v15 = v10;
        sub_100043478(&qword_100233548);
        if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v13))
        {
          unint64_t v16 = sub_100042ADC(v7._countAndFlagsBits, (uint64_t)v7._object);
          if ((v15 & 1) != (v17 & 1)) {
            goto LABEL_26;
          }
          unint64_t v14 = v16;
        }
        if (v15)
        {
          *(void *)(v2[7] + 8 * v14) = v4;
        }
        else
        {
          v2[(v14 >> 6) + 8] |= 1 << v14;
          *(Swift::String *)(v2[6] + 16 * v14) = v7;
          *(void *)(v2[7] + 8 * v14) = v4;
          uint64_t v18 = v2[2];
          BOOL v19 = __OFADD__(v18, 1);
          uint64_t v20 = v18 + 1;
          if (v19) {
            goto LABEL_24;
          }
          v2[2] = v20;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v1 = v6;
        uint64_t v5 = v21;
      }
      if (v5 == ++v4) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  __break(1u);
LABEL_26:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

unint64_t sub_1000429F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        Swift::Int v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_100042ADC(uint64_t a1, uint64_t a2)
{
  sub_10004A038();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();
  return sub_1000429F8(a1, a2, v4);
}

void sub_100042B4C(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 16) = a2;
}

uint64_t sub_100042B64()
{
  return swift_dynamicCast();
}

uint64_t sub_100042B84()
{
  sub_100049788((void *)(v0 - 112), *(void *)(v0 - 88));
  return swift_getDynamicType();
}

uint64_t sub_100042BBC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100042BD8()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100042BF0()
{
  return swift_allocObject();
}

uint64_t sub_100042C08(void (*a1)(void))
{
  return sub_100009028(a1, 48);
}

void sub_100042C10(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 56) + 8 * a1) = v2;
  ++*(void *)(v1 + 16);
}

void sub_100042C28(uint64_t a1, uint64_t a2)
{
  sub_100043EF4();
  if (qword_10022C5B0 != -1) {
    swift_once();
  }
  static OS_dispatch_queue.getSpecific<A>(key:)();
  if (v5 != 2 && (v5 & 1) != 0)
  {
    swift_beginAccess();
    if (*(void *)(a2 + 32))
    {
      swift_retain();
      sub_100046A84();
      swift_release();
    }
    *(void *)(a2 + 32) = 0;
    swift_release();
    swift_release();
  }
  else
  {
    sub_10002D49C();
    __chkstk_darwin();
    sub_100048FF8();
    *(void *)(v3 - 16) = sub_10017FB38;
    *(void *)(v3 - 8) = a2;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
  }
  sub_100043A68();
}

void sub_100042D84(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100043410(a1, (uint64_t)&v52);
  if (*((void *)&v53 + 1))
  {
    uint64_t v4 = sub_100043478(&qword_10022DE18);
    if (swift_dynamicCast())
    {
      char v5 = a2;
      uint64_t v6 = *(void *)(v48 + 16);
      if (v6)
      {
        uint64_t v7 = v48 + 32;
        char v8 = _swiftEmptyArrayStorage;
        do
        {
          sub_100043520(v7, (uint64_t)&v52);
          sub_100042D84(&v48, &v52);
          sub_10002CC0C((uint64_t)&v52, &qword_10022F490);
          if (*((void *)&v49 + 1))
          {
            sub_100043510(&v48, &v52);
            sub_100043520((uint64_t)&v52, (uint64_t)&v48);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_10004D73C(0, v8[2] + 1, 1, (uint64_t)v8);
              char v8 = v11;
            }
            unint64_t v10 = v8[2];
            unint64_t v9 = v8[3];
            if (v10 >= v9 >> 1)
            {
              sub_10004D73C(v9 > 1, v10 + 1, 1, (uint64_t)v8);
              char v8 = v12;
            }
            v8[2] = v10 + 1;
            sub_100043510(&v48, &v8[4 * v10 + 4]);
            sub_10004377C((uint64_t)&v52);
          }
          else
          {
            sub_10002CC0C((uint64_t)&v48, &qword_10022F490);
          }
          v7 += 32;
          --v6;
        }
        while (v6);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        char v8 = _swiftEmptyArrayStorage;
      }
      v5[3] = v4;
      *char v5 = v8;
      return;
    }
  }
  else
  {
    sub_10002CC0C((uint64_t)&v52, &qword_10022F490);
  }
  sub_100043410(a1, (uint64_t)&v52);
  if (*((void *)&v53 + 1))
  {
    uint64_t v13 = sub_100043478(&qword_10022D6F0);
    if (swift_dynamicCast())
    {
      uint64_t v39 = v13;
      id v40 = (uint64_t *)a2;
      uint64_t v14 = v48;
      uint64_t v15 = Dictionary.init(dictionaryLiteral:)();
      int64_t v16 = 0;
      uint64_t v41 = v48 + 64;
      uint64_t v17 = 1 << *(unsigned char *)(v48 + 32);
      uint64_t v18 = -1;
      if (v17 < 64) {
        uint64_t v18 = ~(-1 << v17);
      }
      unint64_t v19 = v18 & *(void *)(v48 + 64);
      int64_t v42 = (unint64_t)(v17 + 63) >> 6;
      while (v19)
      {
        unint64_t v20 = __clz(__rbit64(v19));
        v19 &= v19 - 1;
        unint64_t v21 = v20 | (v16 << 6);
LABEL_22:
        sub_1000433B4(*(void *)(v14 + 48) + 40 * v21, (uint64_t)&v48);
        sub_100043520(*(void *)(v14 + 56) + 32 * v21, (uint64_t)v50 + 8);
LABEL_41:
        sub_10004382C((uint64_t)&v48, (uint64_t)&v52, &qword_10022E210);
        if (!*((void *)&v53 + 1))
        {
          swift_release();
          v40[3] = v39;
          *id v40 = v15;
          return;
        }
        long long v48 = v52;
        long long v49 = v53;
        *(void *)&v50[0] = v54;
        sub_100043510(v55, v46);
        sub_100042D84(&v44, v46);
        sub_10002CC0C((uint64_t)v46, &qword_10022F490);
        if (v45)
        {
          sub_100043510(&v44, v47);
          sub_1000433B4((uint64_t)&v48, (uint64_t)&v44);
          sub_100043520((uint64_t)v47, (uint64_t)v46);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          id v43 = (void *)v15;
          unint64_t v26 = sub_100043670((uint64_t)&v44);
          uint64_t v28 = *(void *)(v15 + 16);
          BOOL v29 = (v27 & 1) == 0;
          Swift::Int v30 = v28 + v29;
          if (__OFADD__(v28, v29))
          {
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
            goto LABEL_65;
          }
          unint64_t v31 = v26;
          char v32 = v27;
          sub_100043478(qword_10022E218);
          if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v30))
          {
            unint64_t v33 = sub_100043670((uint64_t)&v44);
            if ((v32 & 1) != (v34 & 1)) {
              goto LABEL_66;
            }
            unint64_t v31 = v33;
          }
          uint64_t v15 = (uint64_t)v43;
          if (v32)
          {
            uint64_t v35 = (_OWORD *)(v43[7] + 32 * v31);
            sub_10004377C((uint64_t)v35);
            sub_100043510(v46, v35);
          }
          else
          {
            v43[(v31 >> 6) + 8] |= 1 << v31;
            sub_1000433B4((uint64_t)&v44, v43[6] + 40 * v31);
            sub_100043510(v46, (_OWORD *)(v43[7] + 32 * v31));
            uint64_t v36 = v43[2];
            BOOL v37 = __OFADD__(v36, 1);
            uint64_t v38 = v36 + 1;
            if (v37) {
              goto LABEL_64;
            }
            v43[2] = v38;
          }
          swift_bridgeObjectRelease();
          sub_1000434BC((uint64_t)&v44);
          sub_10004377C((uint64_t)v47);
          sub_1000434BC((uint64_t)&v48);
        }
        else
        {
          sub_1000434BC((uint64_t)&v48);
          sub_10002CC0C((uint64_t)&v44, &qword_10022F490);
        }
      }
      int64_t v22 = v16 + 1;
      if (__OFADD__(v16, 1)) {
        goto LABEL_63;
      }
      if (v22 >= v42)
      {
LABEL_40:
        unint64_t v19 = 0;
        uint64_t v51 = 0;
        memset(v50, 0, sizeof(v50));
        long long v48 = 0u;
        long long v49 = 0u;
        goto LABEL_41;
      }
      unint64_t v23 = *(void *)(v41 + 8 * v22);
      if (!v23)
      {
        int64_t v24 = v16 + 2;
        ++v16;
        if (v22 + 1 >= v42) {
          goto LABEL_40;
        }
        unint64_t v23 = *(void *)(v41 + 8 * v24);
        if (!v23)
        {
          int64_t v16 = v22 + 1;
          if (v22 + 2 >= v42) {
            goto LABEL_40;
          }
          unint64_t v23 = *(void *)(v41 + 8 * (v22 + 2));
          if (v23)
          {
            v22 += 2;
            goto LABEL_26;
          }
          int64_t v24 = v22 + 3;
          int64_t v16 = v22 + 2;
          if (v22 + 3 >= v42) {
            goto LABEL_40;
          }
          unint64_t v23 = *(void *)(v41 + 8 * v24);
          if (!v23)
          {
            while (1)
            {
              int64_t v22 = v24 + 1;
              if (__OFADD__(v24, 1)) {
                break;
              }
              if (v22 >= v42)
              {
                int64_t v16 = v42 - 1;
                goto LABEL_40;
              }
              unint64_t v23 = *(void *)(v41 + 8 * v22);
              ++v24;
              if (v23) {
                goto LABEL_26;
              }
            }
LABEL_65:
            __break(1u);
LABEL_66:
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
            __break(1u);
            return;
          }
        }
        int64_t v22 = v24;
      }
LABEL_26:
      unint64_t v19 = (v23 - 1) & v23;
      unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
      int64_t v16 = v22;
      goto LABEL_22;
    }
  }
  else
  {
    sub_10002CC0C((uint64_t)&v52, &qword_10022F490);
  }
  sub_100043410(a1, (uint64_t)&v52);
  if (*((void *)&v53 + 1))
  {
    sub_10004392C();
    if (swift_dynamicCast())
    {

      *a2 = 0u;
      a2[1] = 0u;
      return;
    }
  }
  else
  {
    sub_10002CC0C((uint64_t)&v52, &qword_10022F490);
  }
  sub_100043410(a1, (uint64_t)a2);
}

uint64_t sub_1000433B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100043410(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022F490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100043478(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1000434BC(uint64_t a1)
{
  return a1;
}

_OWORD *sub_100043510(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100043520(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10004357C(uint64_t a1, uint64_t *a2)
{
  sub_100043478(a2);
  sub_100043FB0();
  v3();
  return a1;
}

uint64_t sub_1000435D4(uint64_t a1, uint64_t *a2)
{
  sub_100043478(a2);
  sub_100043B1C();
  sub_100043FB0();
  v3();
  return a1;
}

uint64_t sub_100043624(uint64_t a1, uint64_t *a2)
{
  sub_100043478(a2);
  sub_1000457D8();
  sub_100043FB0();
  v3();
  return a1;
}

unint64_t sub_100043670(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_1000436B4(a1, v4);
}

unint64_t sub_1000436B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_1000433B4(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_1000434BC((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_10004377C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1000437CC()
{
  sub_100042700();
  uint64_t v3 = sub_100043478(v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 32))(v0, v1, v3);
  return v0;
}

uint64_t sub_10004382C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100043478(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100043890(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100043478(a3);
  sub_100043B1C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unint64_t sub_1000438EC()
{
  unint64_t result = qword_10022F690;
  if (!qword_10022F690)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10022F690);
  }
  return result;
}

unint64_t sub_10004392C()
{
  unint64_t result = qword_10022DE28[0];
  if (!qword_10022DE28[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_10022DE28);
  }
  return result;
}

void sub_100043974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001A2A14(a1, a4);
}

uint64_t sub_100043998(uint64_t a1)
{
  *(void *)(v2 - 120) = a1;
  *(void *)(v2 - 144) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_1000439C8()
{
  return v0;
}

uint64_t sub_1000439D4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 104) = *(void *)(a1 - 256);
  *(void *)(v2 - 128) = v1;
  return swift_retain();
}

uint64_t sub_1000439F4()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100043A18@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF) {
    LODWORD(a1) = -1;
  }
  return (a1 + 1);
}

uint64_t sub_100043A2C(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for Worker();
}

NSString sub_100043A48()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100043A74()
{
  return *v0;
}

uint64_t sub_100043A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v10 + 144) = a1;
  *(void *)(v10 + 120) = a10;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100043AC0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 120) = a1;
  *(void *)(v3 - 144) = v2;
  *(void *)(v3 - 136) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100043ADC()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_100043AFC(uint64_t a1)
{
  *(void *)(v2 - 128) = a1;
  *(void *)(v2 - 152) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100043B2C(uint64_t result)
{
  *(unsigned char *)(result + 48) = 3;
  return result;
}

unint64_t sub_100043B38()
{
  return sub_100042ADC(v1, v0);
}

uint64_t sub_100043B54()
{
  return swift_allocObject();
}

uint64_t sub_100043B80()
{
  return LogMessage.init(stringLiteral:)();
}

uint64_t sub_100043B98@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 128) = a1;
  *(void *)(v3 - 152) = v2;
  *(void *)(v3 - 144) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100043BC8()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100043BE0()
{
  return v0;
}

void sub_100043BFC(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000017;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v3);
}

uint64_t sub_100043C1C()
{
  return swift_allocError();
}

uint64_t sub_100043C38(uint64_t a1)
{
  *(void *)(v2 - 112) = a1;
  *(void *)(v2 - 136) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

char *sub_100043C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  return &a15;
}

uint64_t sub_100043C78()
{
  sub_100049788((void *)(v0 - 112), *(void *)(v0 - 88));
  return swift_getDynamicType();
}

uint64_t sub_100043CC4(uint64_t a1)
{
  return a1 + v1;
}

void sub_100043CE0()
{
}

uint64_t sub_100043CFC()
{
  return swift_allocObject();
}

void sub_100043D14()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100043D30(void *a1)
{
  sub_100049788(a1, v1);
  return swift_getDynamicType();
}

id sub_100043D60(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return v1;
}

uint64_t sub_100043D78@<X0>(uint64_t a1@<X8>)
{
  return sub_10004FD40(v1 + a1, 1, v2);
}

uint64_t sub_100043D98()
{
  return type metadata accessor for Date();
}

uint64_t sub_100043DC0()
{
  return sub_1000435D4(v1 - 144, v0);
}

uint64_t sub_100043DD8()
{
  return swift_dynamicCast();
}

void *sub_100043DFC()
{
  return sub_100049788(v0, v1);
}

uint64_t sub_100043E1C()
{
  return 0x696669746E656469;
}

uint64_t sub_100043E30()
{
  return *(void *)v0;
}

uint64_t sub_100043E3C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100043E58@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 264) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_100043EA8()
{
  return 0;
}

uint64_t sub_100043EB4()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t sub_100043ED8()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

unint64_t sub_100043EF4()
{
  return sub_1000438EC();
}

uint64_t sub_100043F0C()
{
  return v0 - 72;
}

uint64_t sub_100043F20()
{
  sub_100049788(v1, v0);
  return swift_getDynamicType();
}

unint64_t sub_100043F54()
{
  return sub_100042ADC(v1, v0);
}

uint64_t sub_100043F70(uint64_t a1)
{
  return sub_10004FD40(a1, 1, v1);
}

uint64_t sub_100043F90()
{
  return __CocoaDictionary.count.getter();
}

uint64_t sub_100043FF8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100044018()
{
  return 0;
}

uint64_t sub_100044028()
{
  sub_100049788(v0, v1);
  return swift_getDynamicType();
}

uint64_t sub_10004405C()
{
  return v0;
}

uint64_t sub_100044068()
{
  return v0;
}

void sub_10004407C()
{
  uint64_t v1 = 0x617461646174656DLL;
  unint64_t v2 = 0xE800000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_1000440DC()
{
  return type metadata accessor for URL();
}

uint64_t sub_100044104()
{
  return v0;
}

void sub_10004413C()
{
  uint64_t v1 = 8238;
  unint64_t v2 = 0xE200000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100044160()
{
  return 0;
}

uint64_t sub_10004417C(uint64_t a1)
{
  *(void *)(v2 - 184) = a1;
  *(void *)(v2 - 208) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_1000441B8()
{
  return type metadata accessor for JSStackContext();
}

uint64_t sub_1000441E8(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return swift_retain();
}

void sub_100044204(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  SQLDatabase.execute(sql:parameters:)(*(Swift::String *)(&a2 - 1), v2);
}

void sub_100044224()
{
}

void sub_100044248(uint64_t a1, sqlite3_stmt *a2, uint64_t a3)
{
  SQLStatement.reset()();
  if (!v5)
  {
    sqlite3_clear_bindings(a2);
    uint64_t v6 = *(void *)(a3 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = 0;
      uint64_t v52 = v6;
      char v8 = (unsigned __int8 *)(a3 + 48);
      while (1)
      {
        uint64_t v9 = v7 + 1;
        sqlite3_int64 v11 = *((void *)v8 - 2);
        unint64_t v10 = *((void *)v8 - 1);
        int v12 = *v8;
        v8 += 24;
        char v53 = v12;
        unint64_t v54 = v10;
        switch(v12)
        {
          case 1:
            unint64_t v20 = (sqlite3_stmt *)sub_100044CE8();
            sqlite3_bind_int64(v20, v21, v11);
            goto LABEL_16;
          case 2:
            int64_t v22 = (sqlite3_stmt *)sub_100044CE8();
            sqlite3_bind_double(v22, v23, v24);
            goto LABEL_16;
          case 3:
            uint64_t v5 = qword_10022C5B8;
            swift_bridgeObjectRetain();
            if (v5 != -1) {
              swift_once();
            }
            uint64_t v25 = (void (__cdecl *)(void *))qword_1002441B0;
            String.utf8CString.getter();
            unint64_t v26 = (sqlite3_stmt *)sub_100044CE8();
            sqlite3_bind_text(v26, v27, v28, -1, v25);
            swift_release();
            uint64_t v6 = v52;
            goto LABEL_16;
          case 4:
            BOOL v29 = (sqlite3_stmt *)sub_100044CE8();
            sqlite3_bind_null(v29, v30);
            goto LABEL_16;
          default:
            switch(v10 >> 62)
            {
              case 1uLL:
                if ((int)v11 > v11 >> 32) {
                  goto LABEL_45;
                }
                swift_retain();
                sub_10004EA44(v11, v10);
                char v32 = (char *)__DataStorage._bytes.getter();
                if (!v32) {
                  goto LABEL_24;
                }
                uint64_t v33 = __DataStorage._offset.getter();
                if (__OFSUB__((int)v11, v33)) {
                  goto LABEL_50;
                }
                v32 += (int)v11 - v33;
LABEL_24:
                __DataStorage._length.getter();
                if (__OFSUB__(HIDWORD(v11), v11)) {
                  goto LABEL_47;
                }
                if (qword_10022C5B8 != -1) {
                  swift_once();
                }
                char v34 = (sqlite3_stmt *)sub_100044CE8();
                sqlite3_bind_blob(v34, v35, v32, HIDWORD(v11) - v11, v36);
                goto LABEL_42;
              case 2uLL:
                uint64_t v37 = *(void *)(v11 + 16);
                swift_retain();
                swift_retain();
                sub_1000A2E28(v11, v10, 0);
                swift_retain();
                swift_retain();
                uint64_t v38 = __DataStorage._bytes.getter();
                if (v38)
                {
                  uint64_t v39 = v38;
                  uint64_t v40 = __DataStorage._offset.getter();
                  if (__OFSUB__(v37, v40)) {
                    goto LABEL_51;
                  }
                  uint64_t v51 = (void *)(v39 + v37 - v40);
                }
                else
                {
                  uint64_t v51 = 0;
                }
                __DataStorage._length.getter();
                uint64_t v46 = *(void *)(v11 + 16);
                uint64_t v45 = *(void *)(v11 + 24);
                uint64_t v47 = v45 - v46;
                if (__OFSUB__(v45, v46)) {
                  goto LABEL_46;
                }
                if (v47 < (uint64_t)0xFFFFFFFF80000000) {
                  goto LABEL_48;
                }
                if (v47 > 0x7FFFFFFF) {
                  goto LABEL_49;
                }
                if (qword_10022C5B8 != -1) {
                  swift_once();
                }
                long long v48 = (sqlite3_stmt *)sub_100044CE8();
                sqlite3_bind_blob(v48, v49, v51, v47, v50);
                swift_release();
                swift_release();
LABEL_42:
                sub_100044D8C(v11, v54, 0);
LABEL_16:
                sub_100045474();
                v31();
                if (v5)
                {
                  swift_bridgeObjectRelease();
                  sub_100044D8C(v11, v54, v53);
                  return;
                }
                sub_100044D8C(v11, v54, v53);
                if (v7 == 2147483646)
                {
                  __break(1u);
LABEL_45:
                  __break(1u);
LABEL_46:
                  __break(1u);
LABEL_47:
                  __break(1u);
LABEL_48:
                  __break(1u);
LABEL_49:
                  __break(1u);
LABEL_50:
                  __break(1u);
LABEL_51:
                  __break(1u);
                }
                ++v7;
                if (v6 == v9)
                {
                  swift_bridgeObjectRelease();
                  return;
                }
                break;
              case 3uLL:
                if (qword_10022C5B8 != -1) {
                  swift_once();
                }
                uint64_t v41 = (sqlite3_stmt *)sub_100044CE8();
                sqlite3_bind_blob(v41, v42, v43, 0, v44);
                uint64_t v19 = v11;
                unint64_t v18 = v10;
                goto LABEL_34;
              default:
                if (qword_10022C5B8 != -1) {
                  swift_once();
                }
                uint64_t v13 = (sqlite3_stmt *)sub_100044CE8();
                sqlite3_bind_blob(v13, v14, v15, v16, v17);
                unint64_t v18 = v10;
                uint64_t v19 = v11;
LABEL_34:
                sub_100044D8C(v19, v18, 0);
                sub_100044D8C(v11, v18, 0);
                sub_10004B278(v11, v18);
                goto LABEL_16;
            }
            break;
        }
      }
    }
  }
}

uint64_t sub_100044798(uint64_t a1)
{
  return a1 - 8;
}

double sub_1000447C8()
{
  return sub_100032918(v1 - 136, v0, (_OWORD *)(v1 - 96));
}

void *sub_1000447E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v3[9] = a3;
  v3[6] = a1;
  v3[7] = a2;
  return v3 + 6;
}

uint64_t sub_1000447F8(unsigned int a1)
{
  return a1 | 0x6761676E00000000;
}

void sub_100044850()
{
  sub_10008C218();
}

void sub_100044878()
{
  uint64_t v1 = 0x79654B6568636163;
  unint64_t v2 = 0xE800000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10004489C()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void sub_1000448B8()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

void sub_1000448D4()
{
  uint64_t v1 = 0x696669746E656469;
  unint64_t v2 = 0xEA00000000007265;
  String.append(_:)(*(Swift::String *)&v1);
}

void sub_100044914()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t sub_100044930(uint64_t a1)
{
  *(void *)(v2 - 120) = a1;
  *(void *)(v2 - 144) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100044950()
{
  sub_100049788((void *)(v0 - 168), *(void *)(v0 - 144));
  return swift_getDynamicType();
}

uint64_t sub_100044988()
{
  sub_100049788((void *)(v0 - 192), *(void *)(v0 - 168));
  return swift_getDynamicType();
}

NSString sub_1000449C0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_1000449D8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100044A84()
{
  return swift_dynamicCast();
}

uint64_t sub_100044AA8()
{
  return _swift_deallocObject(v0, 40, 7);
}

id sub_100044AB8@<X0>(uint64_t a1@<X8>)
{
  return *(id *)(v1 + a1);
}

uint64_t sub_100044AC0()
{
  return swift_dynamicCast();
}

uint64_t sub_100044AE0()
{
  sub_100049788((void *)(v0 - 104), *(void *)(v0 - 80));
  return swift_getDynamicType();
}

uint64_t sub_100044B18()
{
  return swift_dynamicCast();
}

char *sub_100044B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  return &a11;
}

__n128 *sub_100044B4C(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x726F727265;
  result[2].n128_u64[1] = 0xE500000000000000;
  return result;
}

uint64_t sub_100044B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  a14 = v15;
  a11 = v14;
  a12 = v16;
  return sub_10003E698((uint64_t)&a11, a1, a2);
}

uint64_t sub_100044B98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL | 0x7355000000000000;
  return sub_10003E698(a1, v3, 0xEE00656D616E7265);
}

uint64_t sub_100044BBC()
{
  return 0x5465636976726573;
}

uint64_t sub_100044BDC(uint64_t a1)
{
  return _swift_task_switch(a1, 0, 0);
}

double sub_100044BE8(void *a1, uint64_t a2)
{
  double result = *(double *)a2;
  *a1 = *(void *)a2;
  a1[1] = *(void *)(a2 + 8);
  return result;
}

uint64_t sub_100044C04()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_100044C20()
{
  sub_100049788((void *)(v0 - 152), *(void *)(v0 - 128));
  return swift_getDynamicType();
}

id sub_100044C58(uint64_t a1)
{
  uint64_t v5 = *(const char **)(v3 + 1120);
  return objc_msgSend(v1, v5, v2, a1);
}

uint64_t sub_100044C7C()
{
  sub_100049788((void *)(v0 - 160), *(void *)(v0 - 136));
  return swift_getDynamicType();
}

__n128 sub_100044CB4(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 32) = v2;
  __n128 result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t sub_100044CC8(uint64_t a1, unsigned char *a2)
{
  *a2 = 1;
  return swift_willThrow();
}

uint64_t sub_100044CE8()
{
  return v0;
}

uint64_t sub_100044CF4()
{
  return swift_dynamicCast();
}

uint64_t sub_100044D18()
{
  sub_100049788((void *)(v0 - 200), *(void *)(v0 - 176));
  return swift_getDynamicType();
}

uint64_t sub_100044D8C(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 3) {
    return swift_bridgeObjectRelease();
  }
  if (!a3) {
    return sub_10004B278(result, a2);
  }
  return result;
}

uint64_t sub_100044DAC()
{
  return v0;
}

void sub_100044DE8()
{
  sub_1000707BC();
}

uint64_t sub_100044E0C()
{
  sub_100049788((void *)(v0 - 160), *(void *)(v0 - 136));
  return swift_getDynamicType();
}

void sub_100044E44()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100044E60()
{
  return swift_dynamicCast();
}

uint64_t sub_100044E90(uint64_t a1)
{
  return a1 - 8;
}

double sub_100044EA4()
{
  return sub_100032918(v1 - 160, v0, (_OWORD *)(v1 - 120));
}

uint64_t sub_100044EC0()
{
  return 0x6E656D6D6F636572;
}

void sub_100044EE4()
{
  uint64_t v1 = 0x6E6564496B736174;
  unint64_t v2 = 0xEE00726569666974;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100044F14()
{
  return v0;
}

void sub_100044F30()
{
  uint64_t v1 = 0x69646F4D7473616CLL;
  unint64_t v2 = 0xEC00000064656966;
  String.append(_:)(*(Swift::String *)&v1);
}

BOOL sub_100044F60(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v10, v11);
}

double sub_100044F9C()
{
  return sub_100032918(v1 - 168, v0, (_OWORD *)(v1 - 128));
}

uint64_t sub_100044FB8(uint64_t a1)
{
  *(void *)(v2 - 104) = a1;
  *(void *)(v2 - 128) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100044FD8()
{
  return sub_1000423CC(v0 - 112);
}

uint64_t sub_100044FF4(void *a1)
{
  sub_100049788(a1, v1);
  return swift_getDynamicType();
}

uint64_t sub_100045038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  return sub_100043520((uint64_t)&a35, a19);
}

id sub_100045068()
{
  return sub_100051DF8();
}

uint64_t sub_1000450A0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000450B0(uint64_t a1)
{
  *(void *)(v2 - 120) = a1;
  *(void *)(v2 - 144) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_1000450D0()
{
  sub_100049788((void *)(v0 - 152), *(void *)(v0 - 128));
  return swift_getDynamicType();
}

uint64_t sub_100045108()
{
  sub_100049788((void *)(v0 - 128), *(void *)(v0 - 104));
  return swift_getDynamicType();
}

void *sub_100045164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (void *)(a1 + a2);
  return memcpy(v4, v2, 0x50uLL);
}

double sub_100045180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long a11)
{
  return sub_10004D120(0x646C656966, 0xE500000000000000, v11, &a11);
}

uint64_t sub_1000451A8(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = 0x746C75736572;
  a1[2].n128_u64[1] = 0xE600000000000000;
  return 0;
}

uint64_t sub_1000451C8(uint64_t a1)
{
  return sub_10003E698(a1, 0x654D796C696D6166, 0xED0000737265626DLL);
}

void sub_1000451F8()
{
}

void sub_10004520C()
{
  uint64_t v2 = *(void **)(v0 + 16);
}

void sub_100045234(uint64_t a1, unsigned char *a2)
{
  *a2 = 0;
  sub_1000950B8();
}

uint64_t sub_100045260(uint64_t a1)
{
  *(void *)(v2 - 128) = a1;
  *(void *)(v2 - 152) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

void sub_100045290()
{
}

uint64_t sub_1000452A4()
{
  return v0;
}

void sub_1000452D8(unint64_t a1@<X8>)
{
  sub_1000733BC(a1 > 1, v1, 1);
}

unint64_t *sub_10004530C()
{
  return sub_100130560(v3, v2, v0, v1, (void *)(v4 - 136));
}

uint64_t sub_100045334()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100045354()
{
  sub_10004377C(v0 + 16);
  sub_10004377C(v0 + 56);
  sub_10004377C(v0 + 96);
  return sub_10004377C(v0 + 136);
}

uint64_t sub_100045390()
{
  return sub_10002CC0C(v1 - 112, v0);
}

uint64_t sub_1000453E0@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_1000453F4()
{
  return swift_dynamicCast();
}

uint64_t sub_100045414()
{
  return v0;
}

uint64_t sub_100045450()
{
  return swift_dynamicCast();
}

void sub_100045480()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

void sub_10004549C()
{
  _StringGuts.grow(_:)(36);
}

void sub_100045510(double a1, uint64_t a2, const char *a3)
{
  xpc_dictionary_set_int64(v3, a3, (uint64_t)a1);
}

void sub_100045528(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(v2 + a2);
  *(void *)(v2 + a2) = a1;
}

uint64_t sub_100045534(sqlite3 *a1, uint64_t a2, uint64_t a3, sqlite3_stmt **a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = String.utf8CString.getter();
  LODWORD(a4) = sqlite3_prepare_v2(a1, (const char *)(v11 + 32), -1, a4, 0);
  swift_release();
  sub_100041544((int)a4, 0xD000000000000011, (void *)0x80000001001D7B20, a6, a7);
  swift_bridgeObjectRelease();
  return swift_release();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLStatement.reset()()
{
}

uint64_t sub_100045628(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_100022904();
    sub_100049830();
LABEL_11:
    uint64_t result = sub_10004AA78();
    __break(1u);
    return result;
  }
  sub_1000456EC();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_100022904();
    sub_10004DBF0();
    goto LABEL_11;
  }
  sub_100043478(&qword_10022D8B0);
  sub_100045D54();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1000456D8(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

void sub_10004571C(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000014;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

id sub_100045740(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3, 0, 0, v4 - 144);
}

uint64_t sub_100045764()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100045788(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 160) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_1000457A8()
{
  return *(void *)(v0 + 1008) + 1;
}

uint64_t sub_1000457EC(uint64_t a1)
{
  *(void *)(v2 - 104) = a1;
  *(void *)(v2 - 128) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_10004580C(uint64_t a1)
{
  *(void *)(v1 + 208) = a1;
  *(void *)(v1 + 184) = v2;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

id sub_10004582C(uint64_t a1)
{
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 - 288);
  *(void *)(v1 - 96) = *(void *)(v1 - 304);
  uint64_t v3 = *(void **)(v1 - 272);
  *(void *)(v1 - 120) = v3;
  return v3;
}

uint64_t sub_10004586C()
{
  return swift_errorRetain();
}

BOOL sub_100045884@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_100045898()
{
  return swift_dynamicCast();
}

uint64_t sub_1000458B8()
{
  return swift_dynamicCast();
}

void sub_1000458D8()
{
}

uint64_t sub_1000458E0(uint64_t a1)
{
  *(void *)(v2 - 120) = a1;
  *(void *)(v2 - 144) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_1000458FC()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

void sub_10004591C()
{
  uint64_t v1 = 0x6574616470755FLL;
  unint64_t v2 = 0xE700000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100045940()
{
  return sub_100011E28();
}

uint64_t sub_10004596C()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_100045988()
{
  return v0;
}

uint64_t sub_1000459AC()
{
  *(void *)(v1 + 384) = v2;
  *(_DWORD *)(v1 + 424) = *(_DWORD *)(v0 + 80);
  return swift_allocObject();
}

void sub_100045A18(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000016;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v3);
}

uint64_t sub_100045A38()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v1 = *v0;
  sub_100020EBC();
  *unint64_t v2 = v1;
  swift_task_dealloc();
  sub_100040954();
  return v3();
}

uint64_t sub_100045AF8(uint64_t a1)
{
  return sub_100021AC0(v1, 1, 1, a1);
}

uint64_t sub_100045B18()
{
  return v0 + 32;
}

void sub_100045B3C()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t sub_100045B58()
{
  return swift_getErrorValue();
}

uint64_t sub_100045B74()
{
  *(void *)(v1 - 224) = v0;
  return + infix(_:_:)();
}

__n128 *sub_100045B94(__n128 *result, __n128 a2)
{
  result[1] = a2;
  *(void *)(v2 + 520) = *(void *)(v2 + 280);
  return result;
}

uint64_t sub_100045BA8()
{
  return swift_dynamicCast();
}

uint64_t sub_100045BC8()
{
  sub_100049788((void *)(v0 - 112), *(void *)(v0 - 88));
  return swift_getDynamicType();
}

uint64_t sub_100045C00()
{
  return v0;
}

unint64_t sub_100045C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 - 64) = a2;
  *(void *)(v3 - 56) = a3;
  return sub_1000438EC();
}

uint64_t sub_100045C50()
{
  return v0;
}

uint64_t sub_100045C68()
{
  return swift_allocObject();
}

__n128 *sub_100045CA0(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t sub_100045CAC()
{
  return v0 - 88;
}

uint64_t sub_100045CCC(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return swift_retain();
}

uint64_t sub_100045CF8(void *a1)
{
  sub_100049788(a1, v1);
  return swift_getDynamicType();
}

uint64_t sub_100045D28()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100045D40()
{
  return v0;
}

uint64_t sub_100045D54()
{
  return v0;
}

void sub_100045D68()
{
  uint64_t v1 = 8236;
  unint64_t v2 = 0xE200000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

void sub_100045D80()
{
  uint64_t v1 = 0x444E41203F203D20;
  unint64_t v2 = 0xE900000000000020;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100045DA8()
{
  return sub_100043520(v0, v1 - 120);
}

uint64_t sub_100045DC0()
{
  return v0;
}

uint64_t sub_100045DD8()
{
  return 0x65756C6176;
}

uint64_t sub_100045E18()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100045E30(uint64_t a1)
{
  *(void *)(v2 - 128) = a1;
  *(void *)(v2 - 152) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100045E6C(uint64_t a1)
{
  *(void *)(v2 - 112) = a1;
  *(void *)(v2 - 136) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100045E8C()
{
  return sub_10002CBB4(v1 - 240, v0);
}

uint64_t sub_100045EA4()
{
  sub_100049788((void *)(v0 - 112), *(void *)(v0 - 88));
  return swift_getDynamicType();
}

uint64_t sub_100045EDC(uint64_t a1)
{
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 176);
  *(void *)(v1 + 520) = *(void *)(v1 + 280);
  *(void *)(v1 + 496) = v2;
  return swift_retain();
}

uint64_t sub_100045F54(uint64_t a1)
{
  *(void *)(v2 - 120) = a1;
  *(void *)(v2 - 144) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100045F70(void *a1)
{
  sub_100049788(a1, a1[3]);
  return type metadata accessor for MercuryCacheUpdateData.Success(0);
}

uint64_t sub_100045FAC()
{
  *uint64_t v2 = v0;
  v2[1] = v1;
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_100045FF4()
{
  return swift_dynamicCast();
}

uint64_t sub_100046028()
{
  return PipelineTask.andThen<A>(_:)();
}

uint64_t sub_10004604C(unint64_t *a1)
{
  return sub_10002B6DC(a1, v1);
}

uint64_t sub_100046080()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000460A0()
{
  return swift_allocObject();
}

uint64_t sub_1000460C8()
{
  *(unsigned char *)(v0 - 82) = 1;
  return KeyedEncodingContainer.encode(_:forKey:)();
}

Swift::Int sub_100046108()
{
  return sub_10005B1D4();
}

uint64_t sub_100046110@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  *(unsigned char *)(v3 - 88) = a2;
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)(a1, v3 - 88, v2);
}

void sub_100046140(unint64_t a1@<X8>)
{
  sub_100027304(a1 > 1, v1, 1);
}

uint64_t sub_100046164()
{
  return 0x7379656E72756F6ALL;
}

uint64_t sub_100046178()
{
  return 0x6C616E7265746E69;
}

void sub_10004618C()
{
  uint64_t v1 = 0x52454745544E4920;
  unint64_t v2 = 0xEA0000000000202CLL;
  String.append(_:)(*(Swift::String *)&v1);
}

id sub_1000461B8()
{
  return sub_10004FB54(v2, v1, v0);
}

uint64_t sub_1000461D8()
{
  return 0x70795465756C6176;
}

uint64_t sub_100046204()
{
  return BidirectionalCollection<>.joined(separator:)();
}

id sub_100046228(id a1)
{
  *(void *)(v1 + 1016) = a1;
  return a1;
}

uint64_t sub_10004625C()
{
  return swift_release();
}

uint64_t sub_100046284(uint64_t a1)
{
  *(void *)(v2 - 232) = a1;
  *(void *)(v2 - 256) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_1000462C8()
{
  return v0;
}

uint64_t sub_1000462DC(uint64_t a1)
{
  return sub_10003E698(a1, 0x6D614E7473726966, 0xE900000000000065);
}

uint64_t sub_100046304()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_100046320()
{
  return 0x6163696669746F6ELL;
}

uint64_t sub_100046344()
{
  return v0;
}

uint64_t *sub_100046358(uint64_t a1)
{
  *(void *)(v1 - 80) = a1;
  return sub_10003BAA4((uint64_t *)(v1 - 104));
}

char *sub_100046384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1000463B8()
{
  return type metadata accessor for LogMessage.StringInterpolation();
}

uint64_t sub_1000463D4@<X0>(unint64_t a1@<X8>)
{
  return sub_100070B18(a1 > 1, v1, 1, v2);
}

uint64_t sub_1000463F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10004FD40(a1, a2, a3);
}

void sub_100046410()
{
  uint64_t v1 = 0x6C6F50676E6F6C5FLL;
  unint64_t v2 = 0xE90000000000006CLL;
  String.append(_:)(*(Swift::String *)&v1);
}

double sub_100046438()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 256) = 0u;
  *(_OWORD *)(v0 + 272) = 0u;
  return result;
}

uint64_t sub_100046454()
{
  return sub_10013336C(v3, v2, v0, v1);
}

uint64_t sub_100046478@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return v1 - 128;
}

void sub_1000464A0(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

void sub_1000464C8()
{
  uint64_t v1 = 0x6F50656863616320;
  unint64_t v2 = 0xEE00203A7963696CLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_1000464F8(uint64_t a1)
{
  return sub_10004FD40(a1, 1, v1);
}

uint64_t sub_100046550()
{
  return swift_beginAccess();
}

uint64_t sub_10004656C()
{
  return AnyHashable.init<A>(_:)();
}

void sub_1000465A4(unint64_t a1@<X8>)
{
  sub_100027304(a1 > 1, v1, 1);
}

void sub_1000465C8()
{
  uint64_t v1 = 0x6E6F6973726576;
  unint64_t v2 = 0xE700000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

void sub_1000465EC()
{
  uint64_t v1 = 0x20455245485720;
  unint64_t v2 = 0xE700000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100046610()
{
  return v0;
}

void sub_10004662C()
{
  _StringGuts.grow(_:)(25);
}

unint64_t sub_100046660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100042ADC(a2, a3);
}

uint64_t sub_100046690()
{
  return 0;
}

uint64_t sub_1000466AC(uint64_t a1)
{
  *(void *)(v2 - 104) = a1;
  *(void *)(v2 - 128) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t *sub_1000466C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

uint64_t sub_1000466D4()
{
  return sub_100021AC0(v1, 1, 1, v0);
}

uint64_t sub_100046704(void *a1)
{
  sub_100049788(a1, v1);
  return swift_getDynamicType();
}

uint64_t sub_10004675C()
{
  sub_100049788((void *)(v0 + 496), *(void *)(v0 + 520));
  return swift_getDynamicType();
}

void sub_100046794()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

unsigned char *sub_1000467B0(unsigned char *result, unsigned char *a2)
{
  *double result = *a2;
  return result;
}

uint64_t sub_1000467C4()
{
  return 0x6E6F6973726576;
}

uint64_t sub_1000467DC()
{
  return v0;
}

uint64_t sub_1000467F4(uint64_t a1)
{
  return sub_10003E698(a1, 0x7975426F546B7361, 0xEF64656C62616E45);
}

uint64_t sub_100046824()
{
  sub_100049788((void *)(v0 - 112), *(void *)(v0 - 88));
  return swift_getDynamicType();
}

double sub_10004685C@<D0>(_OWORD *a1@<X8>)
{
  return sub_10004D120(0x6163696669746F6ELL, 0xEE0064496E6F6974, v1, a1);
}

uint64_t sub_100046890()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1000468CC()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_1000468F4()
{
  return swift_task_alloc();
}

uint64_t sub_100046914()
{
  sub_100049788(v1, *(void *)(v0 + 280));
  return swift_getDynamicType();
}

unint64_t sub_10004694C()
{
  return v0
       + ((*(unsigned __int8 *)(*(void *)(v2 - 120) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 120) + 80))
       + *(void *)(*(void *)(v2 - 120) + 72) * v1;
}

uint64_t sub_10004696C(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

id sub_100046988()
{
  uint64_t v5 = *(const char **)(v3 + 1120);
  return objc_msgSend(v0, v5, v1, v2);
}

uint64_t sub_1000469C8()
{
  return 0x74536E6F6D656164;
}

uint64_t sub_1000469F0(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

void sub_100046A0C(uint64_t a1, unsigned char *a2)
{
  *a2 = 2;
}

uint64_t sub_100046A48(uint64_t a1)
{
  *(void *)(v2 - 104) = a1;
  *(void *)(v2 - 128) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100046A68(uint64_t a1)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 120) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100046A84()
{
  swift_retain();
  uint64_t v1 = swift_retain();
  sub_100046AE4(v1, v0);
  return swift_release();
}

void sub_100046AE4(uint64_t a1, uint64_t a2)
{
  sub_100043EF4();
  if (qword_10022C5B0 != -1) {
    swift_once();
  }
  static OS_dispatch_queue.getSpecific<A>(key:)();
  sub_1000410C0();
  if (!v4 && (v3 & 1) != 0)
  {
    *(void *)(a2 + 16) = 0;
    swift_release();
  }
  else
  {
    sub_10002D49C();
    __chkstk_darwin();
    sub_100048FF8();
    *(void *)(v5 - 16) = sub_10017FB54;
    *(void *)(v5 - 8) = a2;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
  }
  sub_100043A68();
}

uint64_t sub_100046BEC()
{
  return v0;
}

uint64_t sub_100046C04@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_100046C28()
{
  return v0;
}

void sub_100046C3C(uint64_t a1@<X8>)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_100046C4C()
{
  return sub_100043478(v0);
}

uint64_t sub_100046C68(uint64_t result)
{
  *(void *)(result + 48) = v1;
  *(void *)(result + 56) = 0xEE0064746E656D65;
  return result;
}

unint64_t sub_100046C90()
{
  return 0xD000000000000018;
}

uint64_t sub_100046CAC()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_100046CCC()
{
  return swift_allocObject();
}

uint64_t sub_100046CF4()
{
  return swift_retain();
}

uint64_t sub_100046D18()
{
  return swift_release();
}

double sub_100046D60()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  return result;
}

uint64_t sub_100046D6C()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100046D84()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_100046DA4(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 160) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

unint64_t sub_100046DC0()
{
  return sub_100042ADC(v0, v1);
}

uint64_t sub_100046DD8(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 160) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100046DF8()
{
  return type metadata accessor for JSCallable();
}

uint64_t sub_100046E18()
{
  return type metadata accessor for LogMessage();
}

uint64_t sub_100046E30()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100046E50()
{
  unint64_t v1 = *(void *)(v0 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_100046E68()
{
  sub_100049788((void *)(v0 - 112), *(void *)(v0 - 88));
  return swift_getDynamicType();
}

uint64_t sub_100046EAC()
{
  return sub_10002CBB4(v1 - 152, v0);
}

uint64_t sub_100046EC4()
{
  return v0;
}

uint64_t sub_100046ED8()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100046EF4()
{
  return v0 - 72;
}

uint64_t sub_100046F10@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  v2[14] = a1;
  v2[11] = a2;
  v2[12] = v3;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

unint64_t sub_100046F4C()
{
  return 0xD000000000000032;
}

void sub_100046F5C()
{
  sub_10004A380();
  if (v2)
  {
    sub_100048B58();
    if (v3 != v4)
    {
      sub_100046134();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_100047120();
  if (v1)
  {
    sub_100043478(&qword_10022D788);
    uint64_t v5 = (const void *)sub_10002D348();
    size_t v6 = j__malloc_size(v5);
    sub_1000477EC((uint64_t)(v6 - 32) / 2);
  }
  if (v0)
  {
    uint64_t v7 = (char *)sub_100045B18();
    sub_10004D5E8(v7, v8, v9);
    sub_100049CDC();
  }
  else
  {
    uint64_t v10 = sub_10004CD80();
    sub_10004F9CC(v10, v11, v12, v13);
  }
}

void sub_10004700C()
{
  sub_10004A380();
  if (v2)
  {
    sub_100048B58();
    if (v3 != v4)
    {
      sub_100046134();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_100047120();
  if (v1)
  {
    sub_100043478(&qword_10022D8B8);
    uint64_t v5 = (const void *)sub_10002D348();
    size_t v6 = j__malloc_size(v5);
    sub_1000477EC((uint64_t)(v6 - 32) / 8);
  }
  if (v0)
  {
    unint64_t v7 = sub_100045B18();
    sub_10004AFA4(v7, v8, v9);
    sub_100049CDC();
  }
  else
  {
    uint64_t v10 = sub_10004CD80();
    sub_10004EF24(v10, v11, v12, v13);
  }
}

uint64_t sub_1000470BC()
{
  return swift_allocObject();
}

uint64_t sub_1000470E8()
{
  sub_100049788((void *)(v0 - 136), *(void *)(v0 - 112));
  return swift_getDynamicType();
}

uint64_t sub_100047130()
{
  return 0x4E4952545320;
}

void sub_100047144()
{
  uint64_t v1 = 0x202C424F4C4220;
  unint64_t v2 = 0xE700000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

void sub_10004716C()
{
  uint64_t v1 = 0x3B3F203D20;
  unint64_t v2 = 0xE500000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10004718C()
{
  return v0;
}

uint64_t sub_1000471B8()
{
  return static String._fromSubstring(_:)();
}

uint64_t sub_1000471E4()
{
  return swift_allocObject();
}

uint64_t sub_10004720C()
{
  return swift_allocObject();
}

char *sub_100047234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  return &a15;
}

uint64_t sub_100047260(uint64_t a1)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 120) = v1;
  return static LogMessage.safe(_:)();
}

uint64_t sub_100047280()
{
  return type metadata accessor for JSCallable();
}

uint64_t sub_1000472AC(uint64_t a1)
{
  *(void *)(v2 - 120) = a1;
  *(void *)(v2 - 144) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

void sub_1000472C8()
{
  uint64_t v1 = 0x3A64656C69616620;
  unint64_t v2 = 0xE900000000000020;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

unint64_t sub_100047310()
{
  return sub_100042ADC(v1, v0);
}

uint64_t sub_100047328()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10004734C()
{
  return swift_allocObject();
}

uint64_t sub_100047374@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_100047394()
{
  return sub_100021AC0(v0, 1, 1, v1);
}

uint64_t sub_1000473B4()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1000473DC()
{
  return 25705;
}

uint64_t sub_1000473E8()
{
  return v0;
}

uint64_t sub_100047424()
{
  return LogMessage.init(stringLiteral:)();
}

uint64_t sub_100047448()
{
  return v0;
}

uint64_t sub_10004746C()
{
  return v0;
}

uint64_t sub_100047498()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000474F0()
{
  return LogMessage.init(stringInterpolation:)();
}

double sub_100047508()
{
  return sub_100032918(v1 - 152, v0, (_OWORD *)(v1 - 112));
}

unint64_t sub_100047524()
{
  return 0xD000000000000018;
}

void *sub_100047538(void *a1, uint64_t a2)
{
  return sub_100049788(a1, a2);
}

uint64_t sub_100047550()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100047568()
{
  return *(void *)(v0 - 184);
}

uint64_t sub_10004757C()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10004759C()
{
  return swift_allocObject();
}

uint64_t sub_1000475C4()
{
  sub_10004377C(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000475F0()
{
  return v0;
}

id sub_100047604(uint64_t a1, const char *a2)
{
  return objc_msgSend(v5, a2, v2, v4, v3);
}

uint64_t sub_100047624()
{
  return sub_10002CBB4(v1 - 144, v0);
}

uint64_t sub_10004763C()
{
  return String.hash(into:)();
}

uint64_t sub_100047660()
{
  return sub_10002CBB4(v1, v0);
}

uint64_t sub_100047678(uint64_t a1)
{
  *(void *)(v2 - 200) = a1;
  *(void *)(v2 - 224) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100047698()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000476B8()
{
  return static LogMessage.safe(_:)();
}

uint64_t sub_1000476D0()
{
  return sub_100009FA0();
}

uint64_t sub_1000476EC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10004770C()
{
  return v0;
}

uint64_t sub_100047718()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100047748()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10004776C()
{
  return swift_task_alloc();
}

uint64_t sub_1000477BC()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_1000477E0()
{
  return v0;
}

void sub_1000477EC(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * a1;
}

void sub_1000477F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unint64_t v12 = *(void **)(*(void *)(a10 + 48) + 8 * v10);
}

uint64_t sub_100047814()
{
  return sub_100027BD8(v1 - 120, v0);
}

id sub_100047844()
{
  *(void *)(v0 - 104) = *(void *)(v0 - 312);
  uint64_t v2 = *(void **)(v0 - 304);
  *(void *)(v0 - 128) = v2;
  return v2;
}

uint64_t sub_10004786C()
{
  return PriorityQueue.debugDescription.getter();
}

uint64_t *sub_100047888(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  *(void *)(v3 - 112) = v2;
  return sub_10003BAA4((uint64_t *)(v3 - 136));
}

uint64_t sub_1000478A8()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t *sub_1000478E0()
{
  *(void *)(v1 - 152) = v0;
  return sub_10003BAA4((uint64_t *)(v1 - 176));
}

void sub_1000478F8()
{
  sub_10003D34C();
}

uint64_t sub_10004791C(unint64_t a1)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  sub_100040A70();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    return Dictionary.init(dictionaryLiteral:)();
  }
  v37[1] = v5;
  uint64_t v50 = v2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = Dictionary.init(dictionaryLiteral:)();
  v37[0] = v7 + 16;
  uint64_t v8 = (void *)v1[4];
  uint64_t v41 = v1[3];
  int v42 = v8;
  id v43 = v1;
  uint64_t v40 = v1[2];
  swift_bridgeObjectRetain();
  unint64_t v44 = a1;
  unint64_t v9 = (uint64_t *)(a1 + 40);
  unint64_t v39 = 0x80000001001CBA10;
  long long v38 = xmmword_1001C3110;
  uint64_t v10 = v1;
  do
  {
    uint64_t v45 = v6;
    uint64_t v11 = *(v9 - 1);
    uint64_t v12 = *v9;
    unint64_t v47 = 0;
    unint64_t v48 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    _StringGuts.grow(_:)(39);
    swift_bridgeObjectRelease();
    unint64_t v47 = 0xD000000000000022;
    unint64_t v48 = v39;
    uint64_t v13 = v42;
    swift_bridgeObjectRetain();
    v14._countAndFlagsBits = v41;
    v14._object = v13;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    sub_1000465EC();
    sub_100048BF0();
    v15._countAndFlagsBits = 0x3F203D3D20;
    v15._object = (void *)0xE500000000000000;
    String.append(_:)(v15);
    unint64_t v17 = v47;
    unint64_t v16 = v48;
    sub_100043478(&qword_10022D780);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v38;
    *(void *)(inited + 32) = v11;
    *(void *)(inited + 40) = v12;
    *(unsigned char *)(inited + 48) = 3;
    uint64_t v19 = (void *)swift_allocObject();
    _OWORD v19[2] = v10;
    void v19[3] = v7;
    unint64_t v20 = v44;
    v19[4] = v44;
    __chkstk_darwin(v20);
    uint64_t v21 = v40;
    v37[-6] = v40;
    v37[-5] = v17;
    v37[-4] = v16;
    v37[-3] = inited;
    v37[-2] = sub_10003E1F0;
    v37[-1] = v19;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v22 = v50;
    sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)&v37[-8]);
    uint64_t v50 = v22;
    if (v22)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return v21;
    }
    v9 += 2;
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v6 = v45 - 1;
  }
  while (v45 != 1);
  swift_bridgeObjectRelease();
  if (qword_10022C468 != -1) {
    swift_once();
  }
  uint64_t v45 = qword_1002440D0;
  sub_100043478(&qword_10022E560);
  uint64_t v23 = type metadata accessor for LogMessage();
  sub_100044798(v23);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v49 = type metadata accessor for AppKeyValueTable();
  unint64_t v47 = (unint64_t)v43;
  swift_retain();
  id v24 = (id)AMSLogKey();
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v28 = v27;

    swift_bridgeObjectRetain();
    sub_100020FF4();
    sub_100020E60();
    sub_100049318();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_1000485C4(MetatypeMetadata);
    sub_10002CC0C((uint64_t)v46, &qword_10022F490);
    sub_100020E44();
    v46[3] = &type metadata for String;
    v46[0] = v26;
    v46[1] = v28;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v46, &qword_10022F490);
    v30._countAndFlagsBits = 93;
    v30._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000498B0();
    sub_100020E60();
    sub_100049318();
    uint64_t v31 = swift_getMetatypeMetadata();
    sub_1000485C4(v31);
    sub_10002CC0C((uint64_t)v46, &qword_10022F490);
    v32._countAndFlagsBits = 58;
    v32._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v47);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_100047FEC();
  swift_beginAccess();
  unint64_t v33 = *(void *)(v7 + 16);
  uint64_t v49 = sub_100043478(&qword_10022E1F8);
  unint64_t v47 = v33;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)&v47, &qword_10022F490);
  v34._countAndFlagsBits = 0x79654B6D6F726620;
  v34._object = (void *)0xEB00000000203A73;
  LogMessage.StringInterpolation.appendLiteral(_:)(v34);
  uint64_t v49 = sub_100043478(&qword_100232940);
  unint64_t v47 = v44;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)&v47, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v35 = static os_log_type_t.debug.getter();
  sub_10004841C(v35);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v7 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v21;
}

uint64_t sub_100047EFC()
{
  return Hasher.init(_seed:)();
}

uint64_t sub_100047F14()
{
  sub_100049788((void *)(v0 - 168), *(void *)(v0 - 144));
  return swift_getDynamicType();
}

void sub_100047F4C()
{
  uint64_t v1 = 1701669236;
  unint64_t v2 = 0xE400000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

void sub_100047F80()
{
  uint64_t v1 = 0x203F20454B494C20;
  unint64_t v2 = 0xEB0000000020524FLL;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100047FB0()
{
  return v0;
}

uint64_t sub_100047FCC()
{
  return 0x6C696166202E2E2ELL;
}

void sub_100047FEC()
{
  uint64_t v1 = 0x3A64656863746546;
  unint64_t v2 = 0xE900000000000020;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100048014()
{
  uint64_t v1 = *(void *)(v0 - 320);
  sub_10004B6AC(v1, *(void *)(v0 - 328));
  return v1;
}

uint64_t sub_100048048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = *v10;
  *uint64_t v10 = a10;
  return result;
}

uint64_t sub_100048058()
{
  return swift_allocObject();
}

uint64_t sub_100048090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _OWORD *a15)
{
  *(unsigned char *)(v17 - 192) = v15;
  sub_100043510(v16, a15);
  return sub_100043520((uint64_t)a15, (uint64_t)v16);
}

void sub_1000480D0()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_1000480EC()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_100048120(uint64_t a1)
{
  *(void *)(v2 - 240) = a1;
  *(void *)(v2 - 264) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100048144(uint64_t a1)
{
  *(void *)(v1 + 200) = a1;
  *(void *)(v1 + 176) = v2;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

double sub_100048164()
{
  return 0.0;
}

uint64_t sub_100048170()
{
  return v0;
}

uint64_t sub_100048180()
{
  return v0;
}

uint64_t sub_100048198()
{
  return v0;
}

uint64_t sub_1000481A8()
{
  return LogMessage.init(stringLiteral:)();
}

uint64_t sub_1000481CC(uint64_t a1)
{
  return sub_10004FD40(a1, 1, v1);
}

void sub_1000481EC()
{
}

void sub_100048200(uint64_t a1@<X8>)
{
  *(void *)(v2 + a1) |= v1;
}

uint64_t sub_100048214()
{
  return swift_dynamicCast();
}

void sub_100048238(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 16) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100048254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  sub_100049788(a20, *(void *)(v20 + 168));
  return swift_getDynamicType();
}

uint64_t sub_100048290()
{
  sub_100049788((void *)(*(void *)(v0 + 272) + 96), *(void *)(*(void *)(v0 + 272) + 120));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000482CC()
{
  return 0x4D6B726F7774656ELL;
}

uint64_t sub_1000482F0()
{
  return LogMessage.init(stringLiteral:)();
}

double sub_100048310()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 128) = 0u;
  *(_OWORD *)(v0 - 112) = 0u;
  return result;
}

uint64_t sub_10004831C()
{
  return 0;
}

uint64_t sub_100048338()
{
  return sub_10002CCBC(v1 - 112, v0);
}

uint64_t sub_100048350()
{
  return sub_10002CC0C(v1 - 248, v0);
}

uint64_t sub_100048368()
{
  return v0;
}

void sub_100048380()
{
  _StringGuts.grow(_:)(30);
}

uint64_t sub_1000483B0()
{
  return swift_allocObject();
}

uint64_t sub_10004841C(uint64_t a1)
{
  uint64_t result = os_log_type_enabled(*(os_log_t *)(v1 + 16), (os_log_type_t)a1);
  if (result)
  {
    static LogMessage.isRedactionEnabled.getter();
    uint64_t v5 = static LogMessage.describe(contentsOf:withRedaction:separator:)();
    uint64_t v7 = v6;
    sub_1000490C4(v1, a1, v5, v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1000484EC()
{
  return sub_100051DF8();
}

uint64_t sub_100048528()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_10004854C()
{
  return swift_dynamicCast();
}

NSString sub_100048568()
{
  return String._bridgeToObjectiveC()();
}

void sub_100048570()
{
  uint64_t v1 = 0x202C5458455420;
  unint64_t v2 = 0xE700000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_1000485A4(uint64_t a1)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 120) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_1000485C4(uint64_t a1)
{
  *(void *)(v2 - 184) = a1;
  *(void *)(v2 - 208) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

unint64_t sub_100048600(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 8 * (result >> 6) + 64) |= 1 << result;
  uint64_t v5 = (void *)(*(void *)(a5 + 48) + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(*(void *)(a5 + 56) + 8 * result) = a4;
  return result;
}

uint64_t sub_10004863C()
{
  return swift_allocObject();
}

uint64_t sub_100048664()
{
  return sub_10002CC0C(v1 - 128, v0);
}

uint64_t sub_10004867C()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t sub_10004868C(uint64_t a1)
{
  *(void *)(v2 - 128) = a1;
  *(void *)(v2 - 152) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_1000486AC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12 = *(void *)(a10 + 56);
  uint64_t v13 = (void *)(*(void *)(a10 + 48) + 16 * a1);
  uint64_t v14 = v13[1];
  *(void *)(v10 - 192) = *v13;
  *(void *)(v10 - 184) = v14;
  return sub_100043520(v12 + 32 * a1, a9);
}

uint64_t sub_1000486D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000258D8(a1, (a2 - 32) | 0x8000000000000000, 0x74736575716572, 0xE700000000000000);
}

uint64_t sub_100048704()
{
  return sub_10002C008(v0);
}

double sub_10004871C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long a11)
{
  return sub_10004D120(0x6F697469646E6F63, 0xEA0000000000736ELL, v11, &a11);
}

uint64_t sub_10004875C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL | 0x5344000000000000;
  return sub_10003E698(a1, v3, 0xEA00000000004449);
}

uint64_t sub_10004879C()
{
  return v0;
}

uint64_t sub_1000487B4()
{
  return swift_allocObject();
}

uint64_t sub_1000487DC()
{
  return 0x636974796C616E61;
}

uint64_t sub_1000487F0()
{
  return v0;
}

uint64_t sub_100048808()
{
  return swift_allocObject();
}

uint64_t sub_10004883C()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

double sub_100048874(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  long long v6 = va_arg(va1, _OWORD);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  return sub_100032918((uint64_t)va1, v3, (long long *)va);
}

id sub_1000488A4()
{
  return sub_1000BC5A4();
}

uint64_t sub_1000488CC@<X0>(uint64_t a1@<X8>)
{
  return sub_10003E698(v1 - 128, 0xD000000000000012, (a1 - 32) | 0x8000000000000000);
}

void sub_1000488F4(uint64_t a1@<X8>, uint64_t a2)
{
  *(uint64_t *)((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0)) = *(void *)(v2 + 72);
}

uint64_t sub_10004892C()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_100048944()
{
  return swift_allocObject();
}

uint64_t sub_100048988()
{
  return v0;
}

uint64_t sub_1000489B4()
{
  *(void *)(v2 - 152) = v0;
  *(_DWORD *)(v2 - 176) = v1;
  return static LogMessage.safe(_:)();
}

void sub_1000489E4(void (*a1)(void), uint64_t a2)
{
  sub_1000438EC();
  if (qword_10022C5B0 != -1) {
    swift_once();
  }
  static OS_dispatch_queue.getSpecific<A>(key:)();
  sub_100040A3C();
  if (!v6 && (v5 & 1) != 0)
  {
    a1();
  }
  else
  {
    __chkstk_darwin(v4);
    sub_100048FF8();
    *(void *)(v7 - 16) = a1;
    *(void *)(v7 - 8) = a2;
    OS_dispatch_queue.sync<A>(execute:)();
  }
  sub_100043A68();
}

uint64_t sub_100048AFC(uint64_t a1, uint64_t a2)
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)(a1, a2, v2);
}

uint64_t sub_100048B18(uint64_t a1)
{
  *(void *)(v2 - 104) = a1;
  *(void *)(v2 - 128) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100048B38(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

void sub_100048B68()
{
  sub_100027304(0, v0, 0);
}

NSString sub_100048B8C()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100048B98()
{
  sub_100049788((void *)(v0 - 120), *(void *)(v0 - 96));
  return swift_getDynamicType();
}

uint64_t sub_100048BD0(uint64_t a1)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 120) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

void sub_100048BF0()
{
  uint64_t v1 = 7955819;
  unint64_t v2 = 0xE300000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100048C0C()
{
  return v0;
}

void sub_100048C2C()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t sub_100048C64()
{
  return swift_dynamicCast();
}

uint64_t sub_100048C84(uint64_t result)
{
  *(void *)(v1 - 168) = result;
  *(void *)(v1 - 192) = *(void *)(v1 - 200);
  return result;
}

uint64_t sub_100048C98()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100048CB4()
{
  sub_100011E28();
  return v0;
}

uint64_t sub_100048CD4()
{
  sub_100049788((void *)(v0 - 128), *(void *)(v0 - 104));
  return swift_getDynamicType();
}

uint64_t sub_100048D0C()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_100048D28()
{
  sub_100049788((void *)(v0 - 128), *(void *)(v0 - 104));
  return swift_getDynamicType();
}

uint64_t sub_100048D60()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

double sub_100048D7C()
{
  return 0.0;
}

uint64_t sub_100048DBC()
{
  return sub_10002CC0C(v1 - 152, v0);
}

uint64_t sub_100048DD4()
{
  return v0;
}

uint64_t sub_100048DEC(uint64_t a1)
{
  *(void *)(v2 - 128) = a1;
  *(void *)(v2 - 152) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100048E08()
{
  sub_100049788((void *)(v0 - 112), *(void *)(v0 - 88));
  return swift_getDynamicType();
}

uint64_t sub_100048E40()
{
  return v0;
}

double sub_100048E54()
{
  return v0;
}

uint64_t sub_100048E68()
{
  return swift_retain();
}

unint64_t sub_100048EA0()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_100048EB4()
{
  return v0 + *(int *)(v1 + 20);
}

void sub_100048EC4()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  sub_1000733BC(0, v2, 1);
}

void sub_100048EE8()
{
  *(void *)(v1 + 8 * (v0 >> 6) + 64) |= 1 << v0;
}

uint64_t sub_100048F10()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_100048F38(uint64_t a1, uint64_t a2)
{
  return sub_10003E698(a1, a2, 0xED0000646F697265);
}

void sub_100048F58(uint64_t a1)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((a1 - 32) / 16);
}

uint64_t sub_100048F80(uint64_t a1)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 120) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100048FA0@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

double sub_100048FB4()
{
  return sub_100032918(v1 - 176, v0, (_OWORD *)(v1 - 136));
}

void sub_100048FD0()
{
  uint64_t v1 = 0x69736420726F6620;
  unint64_t v2 = 0xEA00000000002064;
  String.append(_:)(*(Swift::String *)&v1);
}

void sub_100049008()
{
  sub_100041D54();
}

uint64_t sub_100049028(uint64_t a1)
{
  *(void *)(v2 - 224) = a1;
  *(void *)(v2 - 248) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

NSString sub_100049044()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100049074(uint64_t a1)
{
  return sub_10004FD40(a1, 1, v1);
}

void sub_100049094(uint64_t a1, const char *a2)
{
  xpc_dictionary_set_BOOL(v2, a2, 1);
}

uint64_t sub_1000490AC()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_1000490C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100043478(&qword_10022F0D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1001C3110;
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_100049180();
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a4;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:type:_:)();
  return swift_bridgeObjectRelease();
}

unint64_t sub_100049180()
{
  unint64_t result = qword_100230170;
  if (!qword_100230170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230170);
  }
  return result;
}

uint64_t sub_1000491CC()
{
  if (*(void *)(v0 + 16))
  {
    sub_100049648();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100049008();
    swift_release();
    if (v1)
    {
      return sub_1000423CC((uint64_t)v7);
    }
    else
    {
      sub_100043410((uint64_t)v7, (uint64_t)&v6);
      sub_100043478(&qword_10022F490);
      char v5 = sub_100045450();
      if ((v5 & 1) == 0) {
        uint64_t v8 = 0;
      }
      char v9 = v5 ^ 1;
      sub_1000423CC((uint64_t)v7);
      return v8;
    }
  }
  else
  {
    sub_10017D8D4();
    uint64_t v3 = sub_100021180();
    return sub_100044CC8(v3, v4);
  }
}

uint64_t sub_100049290()
{
  return v0;
}

uint64_t sub_1000492A8()
{
  return swift_dynamicCast();
}

uint64_t sub_1000492D0@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1 * v2 + 32;
}

void sub_1000492F0()
{
  uint64_t v1 = 0x79654B6863746162;
  unint64_t v2 = 0xE900000000000073;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100049318()
{
  sub_100049788((void *)(v0 - 176), *(void *)(v0 - 152));
  return swift_getDynamicType();
}

void sub_100049350(unsigned __int16 a1)
{
  uint64_t v2 = a1 | 0x20455245480000;
  unint64_t v3 = 0xE700000000000000;
  String.append(_:)(*(Swift::String *)&v2);
}

uint64_t sub_100049384()
{
  return swift_dynamicCast();
}

id sub_1000493B4()
{
  return sub_100051DF8();
}

void sub_1000493F0()
{
  *(void *)(v0 + 8 * (v2 >> 6) + 64) |= 1 << v2;
  uint64_t v4 = (void *)(*(void *)(v0 + 48) + 16 * v2);
  *uint64_t v4 = v1;
  v4[1] = v3;
}

uint64_t sub_100049438()
{
  return swift_dynamicCast();
}

double sub_10004945C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, long long a17)
{
  return sub_100032918((uint64_t)&a12, v17, &a17);
}

uint64_t sub_100049478()
{
  return 32;
}

uint64_t sub_100049484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + a2) = a1;
  return 0;
}

uint64_t sub_100049490(uint64_t a1)
{
  *(void *)(v2 - 112) = a1;
  *(void *)(v2 - 136) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_1000494B0(void *a1)
{
  sub_100049788(a1, v1);
  return v1;
}

uint64_t sub_1000494D4(uint64_t a1)
{
  return sub_10003E698(a1, 0x6765746143656761, 0xEB0000000079726FLL);
}

uint64_t sub_100049500()
{
  return v0;
}

uint64_t sub_100049518()
{
  sub_100049788((void *)(v0 - 120), *(void *)(v0 - 96));
  return swift_getDynamicType();
}

uint64_t sub_100049550()
{
  return 0x6E656D6563616C70;
}

uint64_t sub_100049588()
{
  return swift_dynamicCast();
}

void sub_1000495A8()
{
  *(void *)(v0 + 8 * (v2 >> 6) + 64) |= 1 << v2;
  uint64_t v3 = (void *)(*(void *)(v0 + 48) + 16 * v2);
  uint64_t v4 = *(void *)(v1 + 200);
  *uint64_t v3 = *(void *)(v1 + 112);
  v3[1] = v4;
}

void sub_1000495E0()
{
  uint64_t v4 = *(void *)(v3 - 264);
  *(void *)(v3 - 136) = v1;
  *(void *)(v3 - 128) = v4;
  *(void *)(v3 - 120) = *(void *)(v3 - 280);
  *(void *)(v3 - 112) = v2;
  *(void *)(v3 - 104) = v0;
}

uint64_t sub_100049600(uint64_t a1)
{
  *(void *)(v2 - 128) = a1;
  *(void *)(v2 - 152) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100049620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_100162644(a1, a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a3, a4);
}

uint64_t sub_100049628()
{
  return swift_dynamicCast();
}

uint64_t sub_100049648()
{
  return swift_retain();
}

uint64_t sub_100049670()
{
  return v0;
}

id sub_100049684@<X0>(void *a1@<X8>)
{
  return a1;
}

double sub_1000496A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, long long a17)
{
  return sub_100032918((uint64_t)&a12, v17, &a17);
}

uint64_t sub_1000496C0()
{
  sub_100049788((void *)(v0 - 152), *(void *)(v0 - 128));
  return swift_getDynamicType();
}

uint64_t sub_1000496F8()
{
  return *(void *)(v0 - 104);
}

uint64_t sub_100049720()
{
  sub_100049788((void *)(v0 - 160), *(void *)(v0 - 136));
  return swift_getDynamicType();
}

uint64_t sub_100049768(uint64_t a1)
{
  *(void *)(v2 - 104) = a1;
  *(void *)(v2 - 128) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

void *sub_100049788(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t type metadata accessor for AppKeyValueTable()
{
  return self;
}

uint64_t sub_1000497F0()
{
  return 0x45746E6563726570;
}

uint64_t sub_100049814()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

void sub_100049840()
{
  uint64_t v1 = 0x64616F6C796170;
  unint64_t v2 = 0xE700000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

void sub_100049864()
{
  uint64_t v1 = 0x7463656A626FLL;
  unint64_t v2 = 0xE600000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_1000498B0()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

void sub_1000498D4()
{
  uint64_t v1 = 0x7463656A626FLL;
  unint64_t v2 = 0xE600000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100049924(double a1)
{
  *(void *)(v2 - 88) = v1;
  *(double *)(v2 - 112) = a1;
  return sub_100091FF0(v2 - 112);
}

uint64_t sub_100049944(void *a1)
{
  sub_100049788(a1, v1);
  return swift_getDynamicType();
}

double sub_100049974()
{
  uint64_t v1 = (_OWORD *)(v0 - 192);
  double result = 0.0;
  v1[1] = 0u;
  v1[2] = 0u;
  *uint64_t v1 = 0u;
  return result;
}

uint64_t sub_10004998C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_1000499CC()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_1000499FC(uint64_t a1)
{
  *(void *)(v2 - 144) = a1;
  *(void *)(v2 - 168) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

char *sub_100049A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return &a13;
}

uint64_t sub_100049A34()
{
  *(void *)(v3 - 120) = v2;
  *(void *)(v3 - 144) = v1;
  *(void *)(v3 - 136) = v0;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100049A84()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_100049B00()
{
  return swift_allocObject();
}

uint64_t sub_100049B28@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_10003E698(v2 - 128, a1, (a2 - 32) | 0x8000000000000000);
}

uint64_t sub_100049B48()
{
  return v0;
}

uint64_t sub_100049B64()
{
  return v0;
}

uint64_t sub_100049B74()
{
  return v0;
}

uint64_t sub_100049BAC()
{
  return 0x6F726665726F7473;
}

uint64_t sub_100049BCC(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = v5;
  a1[2].n128_u64[1] = v4;
  a1[3].n128_u8[0] = 3;
  a1[3].n128_u64[1] = v3;
  a1[4].n128_u64[0] = v2;
  a1[4].n128_u8[8] = 3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100049BF8()
{
  return swift_allocObject();
}

void sub_100049C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), void (*a7)(uint64_t))
{
  sub_10004A6F0();
  if (v11)
  {
    sub_100048B58();
    if (v12 != v13)
    {
      sub_100046134();
      if (v12)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_100046D3C();
  if (v8)
  {
    sub_100043478(v14);
    char v15 = (const void *)sub_10002D348();
    size_t v16 = j__malloc_size(v15);
    sub_100046C3C(v16 - 32);
  }
  if (v7)
  {
    uint64_t v17 = sub_100076B70();
    a7(v17);
    sub_100049CDC();
  }
  else
  {
    uint64_t v18 = sub_10003613C();
    a6(v18);
  }
}

uint64_t sub_100049CD4()
{
  return 1;
}

uint64_t sub_100049CDC()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

void sub_100049CF4()
{
  uint64_t v1 = 0x2044444120;
  unint64_t v2 = 0xE500000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100049D18()
{
  return _NativeDictionary._delete(at:)();
}

uint64_t sub_100049D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return sub_100043520(v14, a14);
}

uint64_t sub_100049D70()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_100049D98(uint64_t a1)
{
  *(void *)(v1 + 168) = a1;
  *(void *)(v1 + 144) = v2;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100049DB8()
{
  return type metadata accessor for LogMessage.StringInterpolation();
}

uint64_t sub_100049DE0()
{
  return 0;
}

uint64_t sub_100049E0C()
{
  return type metadata accessor for JSCallable();
}

uint64_t sub_100049E30()
{
  return sub_10004841C(v0);
}

uint64_t sub_100049E4C()
{
  return 0x203A68746977;
}

uint64_t sub_100049E60()
{
  return v0;
}

uint64_t sub_100049E74(uint64_t a1)
{
  *(void *)(v2 - 160) = a1;
  *(void *)(v2 - 184) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100049E94()
{
  return swift_allocObject();
}

uint64_t sub_100049EC0()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

void sub_100049EE0()
{
  *(void *)(v0 - 224) = 0;
  *(void *)(v0 - 216) = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
}

uint64_t sub_100049F00(uint64_t a1)
{
  v2[49] = a1;
  v2[22] = a1;
  v2[19] = v1;
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_100049F2C@<X0>(uint64_t a1@<X8>)
{
  return *(void *)a1;
}

void sub_100049F38()
{
  Hasher._combine(_:)(1u);
}

uint64_t sub_100049F50()
{
  return LogMessage.init(stringInterpolation:)();
}

BOOL sub_100049F68()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v1 & 1, v0);
}

uint64_t sub_100049F88()
{
  return static LogMessage.safe(_:)();
}

uint64_t sub_100049FB4()
{
  return v0;
}

uint64_t sub_100049FC4()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10004A01C()
{
  return v0;
}

void sub_10004A028(uint64_t a1@<X8>)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_10004A038()
{
  return Hasher.init(_seed:)();
}

uint64_t sub_10004A050()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void sub_10004A06C()
{
  sub_10004D400();
}

uint64_t sub_10004A088(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  *(void *)(v4 - 88) = v3;
  *(void *)(v4 - 112) = v2;
  return swift_retain();
}

__n128 sub_10004A0AC()
{
  return *(__n128 *)(v0 + 72);
}

char *sub_10004A0C4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_100022904();
    double result = (char *)sub_100048528();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_10004B2F0(a3, result);
  }
  return result;
}

#error "10004A160: call analysis failed (funcsize=26)"

void sub_10004A1A0()
{
  Dictionary._Variant.removeAll(keepingCapacity:)(0);
}

uint64_t sub_10004A1D4()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_10004A1F0()
{
  return sub_100027BD8(v1 - 128, v0);
}

BOOL sub_10004A208(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10004A220()
{
  return v0;
}

uint64_t sub_10004A248()
{
  return 1953259891;
}

uint64_t sub_10004A258()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_10004A284()
{
  return v0;
}

_OWORD *sub_10004A298()
{
  sub_10002CAEC();
  sub_100046660(v1, v2, v3);
  sub_100049370();
  if (v6)
  {
    __break(1u);
LABEL_14:
    double result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  uint64_t v7 = v4;
  char v8 = v5;
  sub_100043478(&qword_10022E5B0);
  if (sub_10004B3B0())
  {
    sub_100043B38();
    sub_10004A6FC();
    if (!v10) {
      goto LABEL_14;
    }
    uint64_t v7 = v9;
  }
  if (v8)
  {
    sub_10004377C(*(void *)(*(void *)v0 + 56) + 32 * v7);
    sub_100022570();
    sub_1000440B4();
    return sub_100043510(v11, v12);
  }
  else
  {
    sub_100040C44();
    sub_10004A7F4(v15, v16, v17, v18, v19);
    sub_1000440B4();
    return (_OWORD *)swift_bridgeObjectRetain();
  }
}

uint64_t sub_10004A370()
{
  return v0 - 72;
}

uint64_t sub_10004A38C()
{
  return v0;
}

uint64_t sub_10004A3A0()
{
  return AnyHashable.init<A>(_:)();
}

void sub_10004A3B8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)(&a2 - 1));
}

uint64_t sub_10004A3D0(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for PriorityQueue();
}

void sub_10004A428(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
}

uint64_t sub_10004A45C()
{
  return swift_getErrorValue();
}

void *sub_10004A47C()
{
  return sub_100049788(v0, v0[3]);
}

uint64_t sub_10004A4A0(uint64_t a1)
{
  return *(void *)a1;
}

void sub_10004A4AC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v17 = v15;
  uint64_t v18 = v14;
  String.append(_:)(*(Swift::String *)&v17);
}

uint64_t sub_10004A4CC()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

BOOL sub_10004A4EC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v10, v11);
}

void sub_10004A50C(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD00000000000001ELL;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v3);
}

void sub_10004A52C()
{
}

uint64_t sub_10004A55C()
{
  return *(void *)(v0 + 368);
}

uint64_t sub_10004A588()
{
  return sub_10004377C(v0 - 112);
}

void sub_10004A5C8()
{
  uint64_t v1 = 0x203A726F72726520;
  unint64_t v2 = 0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10004A5EC(uint64_t a1)
{
  *(void *)(v2 - 152) = a1;
  *(void *)(v2 - 176) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_10004A628()
{
  sub_10004377C(v0 - 120);
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_10004A660()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_10004A678()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

void sub_10004A694()
{
  *(void *)(v2 - 256) = v1;
}

uint64_t sub_10004A6D4()
{
  return String.hash(into:)();
}

uint64_t sub_10004A70C()
{
  return sub_100027BD8(v1 - 152, v0);
}

uint64_t sub_10004A724()
{
  return sub_10015B20C();
}

uint64_t sub_10004A74C()
{
  return v0;
}

NSString sub_10004A760()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10004A778()
{
  return v0;
}

uint64_t sub_10004A79C()
{
  return v0;
}

uint64_t sub_10004A7B4()
{
  return Hasher.init(_seed:)();
}

uint64_t sub_10004A7DC()
{
  return LogMessage.init(stringInterpolation:)();
}

void sub_10004A7F4(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  char v6 = (void *)(a5[6] + 16 * a1);
  *char v6 = a2;
  v6[1] = a3;
  sub_100043510(a4, (_OWORD *)(a5[7] + 32 * a1));
  sub_10004A890();
  if (v8) {
    __break(1u);
  }
  else {
    a5[2] = v7;
  }
}

uint64_t sub_10004A85C()
{
  return 0;
}

void sub_10004A89C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 320) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10004A8EC(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  sub_100043FE4();
  if (v11)
  {
    uint64_t v12 = *(void *)(v7 + 48);
    sub_100049F2C(v12 + 16 * v10);
    BOOL v14 = v14 && v13 == a3;
    if (v14 || (sub_10004B638() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v18 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v18;
      sub_100043FE4();
      if ((v19 & 1) == 0) {
        break;
      }
      sub_100049F2C(v12 + 16 * v10);
      BOOL v21 = v14 && v20 == a3;
      if (v21 || (sub_10004B638() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100040B94();
  swift_bridgeObjectRetain();
  sub_10004AE08(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

Swift::Int sub_10004AA58()
{
  return sub_10005A03C();
}

uint64_t sub_10004AA60@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t sub_10004AA78()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

void sub_10004AAA8()
{
  uint64_t v1 = 0x5420455441455243;
  unint64_t v2 = 0xED000020454C4241;
  String.append(_:)(*(Swift::String *)&v1);
}

void sub_10004AAE4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  uint64_t v20 = v17;
  uint64_t v21 = v18;
  String.append(_:)(*(Swift::String *)&v20);
}

uint64_t sub_10004AB14()
{
  *(void *)(v2 - 192) = v0;
  *(void *)(v2 - 184) = (v1 - 32) | 0x8000000000000000;
  return static LogMessage.safe(_:)();
}

void sub_10004AB34()
{
  *(void *)(v1 - 112) = v0;
}

uint64_t sub_10004AB48()
{
  return *(void *)(v0 + 976);
}

uint64_t sub_10004AB74()
{
  return v1 + v0;
}

uint64_t sub_10004AB8C()
{
  *(void *)(v1 - 152) = *(void *)(*(void *)(v1 - 208) + 8);
  return v0;
}

uint64_t sub_10004ABD8()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_10004ABF8(uint64_t a1)
{
  return sub_10003E698(a1, 0x656D614E7473616CLL, 0xE800000000000000);
}

uint64_t sub_10004AC44(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 - 88) = v2;
  *(void *)(v3 - 112) = a1;
  *(void *)(v3 - 104) = a2;
  return static LogMessage.safe(_:)();
}

uint64_t sub_10004AC64()
{
  sub_100049788(v1, *(void *)(v0 + 40));
  return swift_retain();
}

uint64_t sub_10004ACA8()
{
  return swift_task_alloc();
}

uint64_t sub_10004ACC4()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_10004ACEC()
{
  return v0 - 128;
}

uint64_t sub_10004ACF8()
{
  return v0;
}

uint64_t sub_10004AD14()
{
  return *(void *)(v0 - 184);
}

uint64_t sub_10004AD38()
{
  *(void *)(v2 - 136) = v1;
  *(void *)(v2 - 160) = v0;
  return swift_retain();
}

void *sub_10004AD54()
{
  return sub_100049788(v0, v0[3]);
}

void sub_10004AD78()
{
  uint64_t v1 = 0x4920545245534E49;
  unint64_t v2 = 0xEC000000204F544ELL;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10004ADA4(void (*a1)(void))
{
  return sub_100009028(a1, 40);
}

uint64_t sub_10004ADAC(uint64_t a1)
{
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 - 256);
  *(void *)(v2 - 176) = *(void *)(v2 - 240);
  *(void *)(v2 - 200) = v1;
  return swift_retain();
}

uint64_t sub_10004ADD8()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_10004ADF4()
{
  return v0;
}

Swift::Int sub_10004AE08(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  char v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_10004F5A4();
  }
  else
  {
    if (v10 > v9)
    {
      double result = (Swift::Int)sub_1001A89A8();
      goto LABEL_22;
    }
    sub_10005219C();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  double result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (double result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      double result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          double result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

unint64_t sub_10004AFA4(unint64_t result, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    double result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (a3 >= result && result + 8 * a2 > a3)
  {
    if (a3 != result)
    {
      sub_100043478(&qword_10022D8B0);
      return swift_arrayInitWithTakeBackToFront();
    }
  }
  else
  {
    sub_100043478(&qword_10022D8B0);
    return swift_arrayInitWithTakeFrontToBack();
  }
  return result;
}

_OWORD *sub_10004B0C0@<X0>(uint64_t a1@<X8>)
{
  double result = (_OWORD *)sub_10003F9D0();
  if (!v1)
  {
    uint64_t v5 = (uint64_t)result;
    uint64_t v6 = v4;
    sub_100045DD8();
    sub_10004B6C0(v7);
    sub_1000461D8();
    unint64_t v8 = sub_10004B78C();
    if (v9) {
      unint64_t v8 = -1;
    }
    char v10 = sub_10004C158(v8);
    if (v6)
    {
      char v11 = v10;
      if (*((void *)&v15[0] + 1) >> 60 != 15 && v10 != 7)
      {
        sub_10004EA44(*(uint64_t *)&v15[0], *((unint64_t *)&v15[0] + 1));
        sub_10004B7AC(v11, &v13);
        sub_10004B380();
        if (v14)
        {
          sub_10004B380();
          sub_100043510(&v13, v15);
          *(void *)a1 = v5;
          *(void *)(a1 + 8) = v6;
          return sub_100043510(v15, (_OWORD *)(a1 + 16));
        }
        sub_10002CC0C((uint64_t)&v13, &qword_10022F490);
      }
      memset(v15, 0, sizeof(v15));
      sub_10004D298((uint64_t)v15, v5, v6);
      sub_10002CC0C((uint64_t)v15, &qword_10022F490);
      sub_10004B380();
      double result = (_OWORD *)swift_bridgeObjectRelease();
    }
    else
    {
      double result = (_OWORD *)sub_10004B380();
    }
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

uint64_t sub_10004B278(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t _s14amsengagementd6SQLRowC4stmt33_F2506DABEDFA21EB58948A62CB0DBA13LLs13OpaquePointerVSgvpfi_0()
{
  return 0;
}

uint64_t sub_10004B2D8()
{
  return LogMessage.init(stringInterpolation:)();
}

void *sub_10004B2F0@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t sub_10004B30C()
{
  return 0x4220524544524F20;
}

void sub_10004B324()
{
  uint64_t v1 = 8236;
  unint64_t v2 = 0xE200000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10004B340()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t sub_10004B360()
{
  return v0 - 120;
}

uint64_t sub_10004B380()
{
  return sub_10004B6AC(v1, v0);
}

uint64_t sub_10004B398()
{
  return 0;
}

BOOL sub_10004B3B0()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v1 & 1, v0);
}

void sub_10004B3D0()
{
  *(void *)(v0 - 112) = 44;
  *(void *)(v0 - 104) = 0xE100000000000000;
}

uint64_t sub_10004B410()
{
  sub_100049788((void *)(v0 - 152), *(void *)(v0 - 128));
  return swift_getDynamicType();
}

uint64_t sub_10004B448()
{
  sub_100049788((void *)(v0 - 232), *(void *)(v0 - 208));
  return swift_getDynamicType();
}

double sub_10004B480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long a11)
{
  return sub_10004D120(0x65756C6176, 0xE500000000000000, v11, &a11);
}

char *sub_10004B4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return &a13;
}

NSString sub_10004B4D4()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10004B4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  sub_100049788(a10, v10);
  return swift_getDynamicType();
}

uint64_t sub_10004B524()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  return sub_100070B18(0, v2, 1, v0);
}

uint64_t sub_10004B558()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_10004B58C()
{
  return swift_task_dealloc();
}

uint64_t sub_10004B5B0(uint64_t result)
{
  *(void *)(v2 - 128) = result;
  *(void *)(v2 - 152) = v1;
  return result;
}

uint64_t sub_10004B5CC()
{
  return v0;
}

NSString sub_10004B608()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10004B638()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10004B654@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 96) = a1;
  return type metadata accessor for LogMessage.StringInterpolation();
}

uint64_t sub_10004B68C(void (*a1)(void), void (*a2)(void))
{
  return sub_10000E818(a1, a2, 48);
}

uint64_t sub_10004B694()
{
  return v0;
}

uint64_t sub_10004B6AC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10004B278(a1, a2);
  }
  return a1;
}

uint64_t sub_10004B6C0@<X0>(_OWORD *a1@<X8>)
{
  if (*(void *)(v1 + 16))
  {
    sub_100049648();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100049008();
    swift_release();
    if (!v2)
    {
      sub_100043410((uint64_t)v8, (uint64_t)&v7);
      sub_100043478(&qword_10022F490);
      if ((swift_dynamicCast() & 1) == 0) {
        *a1 = xmmword_1001C81A0;
      }
    }
    return sub_1000423CC((uint64_t)v8);
  }
  else
  {
    sub_10017D8D4();
    uint64_t v5 = sub_100021180();
    return sub_100044CC8(v5, v6);
  }
}

uint64_t sub_10004B78C()
{
  return sub_1000491CC();
}

uint64_t sub_10004B7AC@<X0>(char a1@<W2>, _OWORD *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  type metadata accessor for String.Encoding();
  sub_100020DEC();
  __chkstk_darwin(v6);
  sub_100045B24();
  *a2 = 0u;
  a2[1] = 0u;
  switch(a1)
  {
    case 1:
      sub_10004D510(0, &qword_10022DE20);
      sub_10004CDD0();
      static String.Encoding.utf8.getter();
      String.Encoding.rawValue.getter();
      uint64_t v10 = sub_100046610();
      v11(v10);
      id v12 = sub_1000461B8();
      if (!v12) {
        goto LABEL_12;
      }
      long long v13 = v12;
      unsigned __int8 v14 = [v12 BOOLValue];
      uint64_t v50 = &type metadata for Bool;

      LOBYTE(v49[0]) = v14;
      goto LABEL_11;
    case 2:
      sub_10004D510(0, &qword_10022DE20);
      sub_10004CDD0();
      static String.Encoding.utf8.getter();
      String.Encoding.rawValue.getter();
      uint64_t v15 = sub_100046610();
      v16(v15);
      id v17 = sub_1000461B8();
      if (!v17) {
        goto LABEL_12;
      }
      uint64_t v18 = v17;
      id v19 = [v17 integerValue];
      uint64_t v50 = &type metadata for Int;

      v49[0] = v19;
      goto LABEL_11;
    case 3:
      sub_10004D510(0, &qword_10022DE20);
      sub_10004CDD0();
      static String.Encoding.utf8.getter();
      String.Encoding.rawValue.getter();
      uint64_t v20 = sub_100046610();
      v21(v20);
      id v22 = sub_1000461B8();
      if (!v22) {
        goto LABEL_12;
      }
      BOOL v23 = v22;
      [v22 doubleValue];
      uint64_t v25 = v24;
      uint64_t v50 = &type metadata for Double;

      v49[0] = v25;
      goto LABEL_11;
    case 4:
      sub_10004D510(0, &qword_10022DE20);
      sub_10004CDD0();
      static String.Encoding.utf8.getter();
      String.Encoding.rawValue.getter();
      uint64_t v26 = sub_100046610();
      v27(v26);
      id v28 = sub_1000461B8();
      if (v28)
      {
        uint64_t v50 = v2;
        v49[0] = v28;
LABEL_11:
        sub_10002CC0C((uint64_t)a2, &qword_10022F490);
      }
      else
      {
LABEL_12:
        sub_10002CC0C((uint64_t)a2, &qword_10022F490);
        sub_100046D60();
      }
      unint64_t v8 = (long long *)v49;
      goto LABEL_29;
    case 5:
      self;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      v49[0] = 0;
      id v30 = sub_100045740((uint64_t)isa, "propertyListWithData:options:format:error:");

      id v31 = 0;
      if (v30)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v35 = v31;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_errorRelease();
        sub_100046D60();
      }
      sub_100043410((uint64_t)v49, (uint64_t)&v47);
      if (!*((void *)&v48 + 1)) {
        goto LABEL_26;
      }
      uint64_t v36 = (uint64_t *)&unk_10022DE18;
      goto LABEL_24;
    case 6:
      self;
      Class v32 = Data._bridgeToObjectiveC()().super.isa;
      v49[0] = 0;
      id v33 = sub_100045740((uint64_t)v32, "propertyListWithData:options:format:error:");

      id v34 = 0;
      if (v33)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v37 = v34;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_errorRelease();
        sub_100046D60();
      }
      sub_100043410((uint64_t)v49, (uint64_t)&v47);
      if (*((void *)&v48 + 1))
      {
        uint64_t v36 = &qword_10022D6F0;
LABEL_24:
        uint64_t v38 = sub_100043478(v36);
        if (swift_dynamicCast())
        {
          *((void *)&v48 + 1) = v38;
          *(void *)&long long v47 = v46;
          sub_10002CC0C((uint64_t)v49, &qword_10022F490);
          sub_10002CC0C((uint64_t)a2, &qword_10022F490);
          goto LABEL_28;
        }
      }
      else
      {
LABEL_26:
        sub_10002CC0C((uint64_t)&v47, &qword_10022F490);
      }
      sub_10002CC0C((uint64_t)v49, &qword_10022F490);
      sub_10002CC0C((uint64_t)a2, &qword_10022F490);
      long long v47 = 0u;
      long long v48 = 0u;
LABEL_28:
      unint64_t v8 = &v47;
LABEL_29:
      uint64_t v9 = (uint64_t)a2;
LABEL_30:
      sub_10004382C((uint64_t)v8, v9, &qword_10022F490);
      sub_100043410((uint64_t)a2, (uint64_t)v49);
      unint64_t v39 = v50;
      uint64_t result = sub_10002CC0C((uint64_t)v49, &qword_10022F490);
      if (!v39)
      {
        if (qword_10022C468 != -1) {
          swift_once();
        }
        sub_100043478(&qword_10022E560);
        uint64_t v41 = type metadata accessor for LogMessage();
        sub_100044798(v41);
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3110;
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v42._countAndFlagsBits = 0x5252452045505954;
        v42._object = (void *)0xEC000000203A524FLL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v42);
        static String.Encoding.utf8.getter();
        uint64_t v43 = String.init(data:encoding:)();
        if (v44)
        {
          uint64_t v50 = &type metadata for String;
          v49[0] = v43;
          v49[1] = v44;
        }
        else
        {
          sub_100046D60();
        }
        LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
        sub_10002CC0C((uint64_t)v49, &qword_10022F490);
        sub_100020E60();
        LogMessage.init(stringInterpolation:)();
        uint64_t v45 = static os_log_type_t.error.getter();
        sub_10004841C(v45);
        return swift_bridgeObjectRelease();
      }
      return result;
    default:
      id v7 = [objc_allocWithZone((Class)NSNull) init];
      uint64_t v50 = (void *)sub_10004D510(0, qword_10022DE28);
      v49[0] = v7;
      sub_10002CC0C((uint64_t)a2, &qword_10022F490);
      unint64_t v8 = (long long *)v49;
      uint64_t v9 = (uint64_t)a2;
      goto LABEL_30;
  }
}

uint64_t sub_10004BE58()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_10004BE70()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_10004BE94()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_10004BEC4@<X0>(uint64_t a1@<X8>)
{
  return sub_10002A570(0xD000000000000013, (a1 - 32) | 0x8000000000000000);
}

uint64_t sub_10004BEFC()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t sub_10004BF24()
{
  return sub_10002CBB4(v0 + 144, v1);
}

char *sub_10004BF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return &a13;
}

uint64_t sub_10004BF50()
{
  return LogMessage.init(stringLiteral:)();
}

uint64_t sub_10004BF84(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for JSScheduleDatabase();
}

uint64_t sub_10004BF9C@<X0>(unsigned char *a1@<X1>, char a2@<W8>)
{
  *a1 = a2;
  return swift_willThrow();
}

uint64_t sub_10004BFB4()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_10004BFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  sub_100049788(a13, v13);
  return swift_getDynamicType();
}

uint64_t sub_10004C028@<X0>(uint64_t a1@<X8>)
{
  return v1 + ((a1 + 32) & ~a1);
}

uint64_t sub_10004C03C()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_10004C058()
{
  return v0;
}

uint64_t sub_10004C06C()
{
  return sub_1000124C0(v0);
}

uint64_t sub_10004C0B4()
{
  return 0x6D69547472617473;
}

uint64_t sub_10004C0D0()
{
  return AMSError();
}

uint64_t sub_10004C0F4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  v2[21] = a1;
  v2[18] = a2;
  v2[19] = v3;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_10004C11C()
{
  return sub_10004377C(v0 - 200);
}

unint64_t sub_10004C158(unint64_t result)
{
  if (result >= 7) {
    return 7;
  }
  return result;
}

void sub_10004C17C()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10004C198()
{
  return v0;
}

uint64_t sub_10004C1CC()
{
  return swift_allocObject();
}

uint64_t sub_10004C1F0(uint64_t a1)
{
  *(void *)(v2 - 120) = a1;
  *(void *)(v2 - 144) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_10004C220()
{
  return v0;
}

uint64_t sub_10004C238@<X0>(uint64_t result@<X0>, __int16 a2@<W8>)
{
  *(_WORD *)(result + 1) = a2;
  return result;
}

uint64_t sub_10004C240()
{
  return sub_1000435D4(v1, v0);
}

uint64_t sub_10004C258()
{
  return v0;
}

uint64_t sub_10004C264()
{
  v1._rawValue = *(void **)(v0 + 40);
  return sub_10004C284(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v1);
}

uint64_t sub_10004C284(uint64_t a1, uint64_t a2, uint64_t a3, Swift::OpaquePointer a4)
{
  uint64_t v5 = v4;
  sub_1000438EC();
  uint64_t v9 = qword_10022C5B0;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = static OS_dispatch_queue.getSpecific<A>(key:)();
  if (v15 != 2 && (v15 & 1) != 0)
  {
    SQLDatabase.prepare(sql:)(a2, a3);
    if (!v5)
    {
      SQLStatement.bind(parameters:)(a4);
      if (!v14)
      {
        SQLStatement.step()(v13);
        swift_release();
      }
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    __chkstk_darwin(v10);
    OS_dispatch_queue.sync<A>(execute:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t sub_10004C46C()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_100020658();
  sub_10004CFE8();
  uint64_t v6 = sub_10004C838();
  sub_10004D298(v6, v3, v1);
  sub_100020FDC();
  return swift_release();
}

uint64_t sub_10004C788()
{
  return sub_10002CBB4(v1 - 128, v0);
}

NSString sub_10004C7A0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10004C7CC()
{
  return swift_dynamicCast();
}

uint64_t sub_10004C7EC()
{
  *uint64_t v0 = 0x8000000000000000;
  return sub_100043478(v1);
}

uint64_t sub_10004C818()
{
  return AsyncObjectGraphBuilder.satisfying<A>(_:with:)();
}

uint64_t sub_10004C838()
{
  return v0;
}

uint64_t sub_10004C844()
{
  return LogMessage.init(stringInterpolation:)();
}

unint64_t sub_10004C85C()
{
  return sub_100053724();
}

uint64_t sub_10004C888()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t sub_10004C8AC(void (*a1)(void))
{
  return sub_10014388C(a1, 40);
}

uint64_t sub_10004C8B4()
{
  return static PipelinePhase.cacheValueIfSuccessful()();
}

uint64_t sub_10004C8D4()
{
  return sub_10002CBB4(v1 - 152, v0);
}

uint64_t sub_10004C8EC()
{
  return sub_10002CC0C(v1 - 144, v0);
}

uint64_t sub_10004C904()
{
  return swift_dynamicCast();
}

void sub_10004C92C(unint64_t a1@<X8>)
{
  *(void *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
}

uint64_t sub_10004C94C()
{
  return sub_1001ACEC0(v0, 0, 1);
}

uint64_t sub_10004C968()
{
  return sub_100021AC0(v1, 1, 1, v0);
}

uint64_t sub_10004C988()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  sub_100020EAC();
  sub_10004CFE8();
  sub_10004D060(v3, v1, v5);
  sub_100020FDC();
  return swift_release();
}

uint64_t sub_10004CD4C()
{
  return v0;
}

uint64_t sub_10004CD64(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 160) = v1;
  return swift_retain();
}

uint64_t sub_10004CD80()
{
  return 0;
}

void sub_10004CD90(uint64_t a1)
{
  if (v3 <= v1) {
    uint64_t v5 = v1;
  }
  else {
    uint64_t v5 = v3;
  }
  sub_100052734(a1, v5, 1, v2);
}

void sub_10004CDB0()
{
  uint64_t v1 = 0x6574617473;
  unint64_t v2 = 0xE500000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10004CDD0()
{
  return sub_10004EA44(v1, v0);
}

void sub_10004CDEC()
{
  uint64_t v1 = 0x6E69616D6F64;
  unint64_t v2 = 0xE600000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

unint64_t sub_10004CE1C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  return result;
}

uint64_t sub_10004CE40(uint64_t a1)
{
  *(void *)(v2 - 128) = a1;
  *(void *)(v2 - 152) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_10004CE78(void (*a1)(void), void (*a2)(void))
{
  return sub_100008CB0(a1, a2);
}

uint64_t sub_10004CE80()
{
  return swift_dynamicCast();
}

char *sub_10004CEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  return &a15;
}

id sub_10004CED0(uint64_t a1)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 120) = v1;
  return v1;
}

uint64_t sub_10004CEE8()
{
  return swift_allocObject();
}

uint64_t sub_10004CF10()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_10004CF48(uint64_t a1, uint64_t a2)
{
  return sub_1001579A8(a1, a2);
}

uint64_t sub_10004CF68()
{
  return swift_beginAccess();
}

uint64_t sub_10004CF80@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0;
}

void sub_10004CF90(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000886B8((uint64_t)va, a1);
}

uint64_t sub_10004CFA8()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

void *sub_10004CFE8()
{
  if (*(void *)(v0 + 40))
  {
    uint64_t v1 = *(void **)(v0 + 40);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 16);
    type metadata accessor for AppKeyValueTable();
    uint64_t v1 = (void *)sub_100011D64();
    v1[2] = v2;
    v1[3] = 7566955;
    v1[4] = 0xE300000000000000;
    *(void *)(v0 + 40) = v1;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_10004D060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  sub_100043478(&qword_10022D738);
  unint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1001C3110;
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_10004791C(v7);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3)
  {
    swift_bridgeObjectRetain();
    sub_10004D120(a1, a2, v8, a3);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_10004D120@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v5 = sub_100042ADC(a1, a2), (v6 & 1) != 0))
  {
    uint64_t v7 = sub_100020630(v5);
    sub_100043520(v7, v8);
  }
  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_10004D17C()
{
  return 0x736E655365736163;
}

uint64_t sub_10004D1A0()
{
  return swift_allocObject();
}

uint64_t sub_10004D1BC()
{
  return swift_beginAccess();
}

uint64_t sub_10004D1DC(uint64_t a1, uint64_t a2)
{
  return sub_100113B74(a1, a2, 0x65636976726573, 0xE700000000000000);
}

unsigned char *sub_10004D21C@<X0>(unsigned char *result@<X0>, char a2@<W8>)
{
  *double result = a2;
  return result;
}

uint64_t sub_10004D23C()
{
  return v0;
}

uint64_t sub_10004D260()
{
  sub_100049788((void *)(v0 - 128), *(void *)(v0 - 104));
  return swift_getDynamicType();
}

uint64_t sub_10004D298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100043410(a1, (uint64_t)v9);
  if (v10)
  {
    sub_10004392C();
    if (swift_dynamicCast())
    {

      long long v11 = 0u;
      long long v12 = 0u;
      goto LABEL_7;
    }
  }
  else
  {
    sub_10002CC0C((uint64_t)v9, &qword_10022F490);
  }
  sub_100043410(a1, (uint64_t)&v11);
  if (*((void *)&v12 + 1))
  {
    sub_100043510(&v11, v13);
    sub_100043478(&qword_10022D330);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001C3110;
    *(void *)(inited + 32) = a2;
    *(void *)(inited + 40) = a3;
    sub_100043520((uint64_t)v13, inited + 48);
    swift_bridgeObjectRetain();
    uint64_t v7 = Dictionary.init(dictionaryLiteral:)();
    sub_10004F03C(v7);
    sub_10004377C((uint64_t)v13);
    return swift_bridgeObjectRelease();
  }
LABEL_7:
  sub_10002CC0C((uint64_t)&v11, &qword_10022F490);
  return sub_10004F880(a2, a3);
}

void sub_10004D400()
{
  sub_1000209F4();
  uint64_t v1 = type metadata accessor for DispatchQoS.QoSClass();
  sub_100020DEC();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10002D2D4();
  uint64_t v5 = sub_10004D510(0, (unint64_t *)&qword_10022F690);
  uint64_t v6 = sub_10004D23C();
  v7(v6);
  uint64_t v8 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  v9[3] = v5;
  v9[4] = &protocol witness table for OS_dispatch_queue;
  v9[0] = v8;
  sub_100011DF0();
  Promise.then(perform:orCatchError:on:)();
  sub_10004377C((uint64_t)v9);
  sub_100020FDC();
}

uint64_t sub_10004D510(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10004D54C(uint64_t a1)
{
  *(void *)(v2 - 104) = a1;
  *(void *)(v2 - 128) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_10004D568()
{
  return Promise.reject(_:)();
}

uint64_t sub_10004D5CC(uint64_t a1)
{
  *(void *)(v1 + 400) = a1;
  return swift_release();
}

char *sub_10004D5E8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[2 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 2 * a2);
  }
  return __src;
}

uint64_t sub_10004D68C()
{
  return 0;
}

unint64_t sub_10004D6B4()
{
  return 0xD000000000000018;
}

uint64_t sub_10004D6C8()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_10004D6EC()
{
  return sub_100027BD8(v1 - 160, v0);
}

uint64_t sub_10004D714()
{
  return swift_errorRelease();
}

void sub_10004D73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_10004D770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), void (*a7)(uint64_t))
{
  sub_10004A6F0();
  if (v11)
  {
    sub_100048B58();
    if (v12 != v13)
    {
      sub_100046134();
      if (v12)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_100046D3C();
  if (v8)
  {
    sub_100043478(v14);
    char v15 = (const void *)sub_10002D348();
    size_t v16 = j__malloc_size(v15);
    sub_100046C3C(v16 - 32);
  }
  if (v7)
  {
    uint64_t v17 = sub_100076B70();
    a7(v17);
    sub_100049CDC();
  }
  else
  {
    uint64_t v18 = sub_10003613C();
    a6(v18);
  }
}

uint64_t sub_10004D830()
{
  uint64_t v1 = type metadata accessor for String.Encoding();
  sub_100020DEC();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_100045B24();
  sub_100045DA8();
  if ((sub_10004DC44() & 1) == 0
    || (uint64_t v5 = (uint64_t)v20,
        static String.Encoding.utf8.getter(),
        sub_10004B340(),
        sub_100020FC0(),
        uint64_t v6 = sub_100047FB0(),
        v7(v6),
        sub_100042008(),
        v8))
  {
    sub_100045DA8();
    if ((sub_10004DC44() & 1) == 0) {
      goto LABEL_26;
    }
    v21[0] = v20;
    uint64_t v5 = dispatch thunk of CustomStringConvertible.description.getter();
    static String.Encoding.utf8.getter();
    sub_10004B340();
    sub_100020FC0();
    uint64_t v9 = sub_100047FB0();
    v10(v9);
    sub_100042008();
    if (v8)
    {
LABEL_26:
      sub_100045DA8();
      if ((sub_10004DC44() & 1) == 0
        || (uint64_t v5 = Double.description.getter(),
            static String.Encoding.utf8.getter(),
            sub_10004B340(),
            sub_100020FC0(),
            uint64_t v11 = sub_100047FB0(),
            v12(v11),
            sub_100042008(),
            v8))
      {
        sub_100045DA8();
        if ((sub_10004DC44() & 1) == 0
          || (!(_BYTE)v20 ? (uint64_t v5 = 0x65736C6166) : (uint64_t v5 = 1702195828),
              static String.Encoding.utf8.getter(),
              sub_10004B340(),
              sub_100020FC0(),
              (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1),
              sub_100042008(),
              v8))
        {
          sub_100045DA8();
          sub_100043478(&qword_10022DE18);
          if (sub_10004C7CC())
          {
            char v13 = self;
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            v21[0] = 0;
            id v15 = [v13 dataWithPropertyList:isa format:100 options:0 error:v21];

            id v16 = v21[0];
            if (v15)
            {
LABEL_18:
              uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

              return v5;
            }
          }
          else
          {
            sub_100045DA8();
            sub_100043478(&qword_10022D6F0);
            if (!sub_10004C7CC()) {
              return 0;
            }
            uint64_t v17 = self;
            Class v18 = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            v21[0] = 0;
            id v15 = [v17 dataWithPropertyList:v18 format:100 options:0 error:v21];

            id v16 = v21[0];
            if (v15) {
              goto LABEL_18;
            }
          }
          uint64_t v5 = (uint64_t)v16;
          _convertNSErrorToError(_:)();

          swift_willThrow();
        }
      }
    }
  }
  return v5;
}

uint64_t sub_10004DBE8()
{
  return String.hash(into:)();
}

void sub_10004DC00()
{
  *(void *)(v0 + 16) = v1;
  uint64_t v5 = v0 + 16 * v4;
  *(void *)(v5 + 32) = v2;
  *(void *)(v5 + 40) = v3;
}

void sub_10004DC18()
{
  uint64_t v1 = 0x69646F4D7473616CLL;
  unint64_t v2 = 0xEC00000064656966;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10004DC44()
{
  return swift_dynamicCast();
}

uint64_t sub_10004DC64()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10004DC88()
{
  *uint64_t v0 = 0x8000000000000000;
  return v1;
}

uint64_t sub_10004DCAC(uint64_t result)
{
  *(void *)(v2 - 144) = result;
  *(void *)(v2 - 168) = v1;
  return result;
}

void sub_10004DCBC(unint64_t a1@<X8>)
{
  sub_100027304(a1 > 1, v1, 1);
}

uint64_t sub_10004DCE0()
{
  return swift_allocObject();
}

char *sub_10004DD24()
{
  return sub_100073564(0, v0, 0);
}

uint64_t sub_10004DD48()
{
  return v0;
}

char *sub_10004DD70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  return &a15;
}

uint64_t sub_10004DD7C()
{
  return type metadata accessor for ContentManager();
}

uint64_t sub_10004DDC8()
{
  return 0x656372756F73;
}

NSString sub_10004DDDC()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10004DE0C()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_10004DE34()
{
  return AnyHashable.init<A>(_:)();
}

void sub_10004DE54(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= 1 << v1;
}

uint64_t sub_10004DE7C()
{
  *(void *)(v2 - 88) = v1;
  *(void *)(v2 - 112) = v0;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_10004DE9C()
{
  return 0x644972657375;
}

void sub_10004DEB0(id *a1)
{
}

uint64_t sub_10004DEB8()
{
  return v0 - 144;
}

uint64_t sub_10004DEC4(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_10004DEF4()
{
  return swift_errorRelease();
}

uint64_t sub_10004DF34()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

void sub_10004DF50(uint64_t a1, uint64_t a2, void *a3, unint64_t a4)
{
  unint64_t v92 = a4;
  uint64_t v91 = a3;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v11 - 8);
  char v13 = (char *)v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1;
  id v16 = (void *)a2;
  sub_10004EAFC(v15, a2, (uint64_t)&v99);
  if (v4)
  {
  }
  else
  {
    unint64_t v90 = v13;
    uint64_t v89 = v10;
    unint64_t v17 = v92;
    uint64_t v18 = v101;
    if (v101 == 7)
    {
      if (qword_10022C468 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v98 = (void *)type metadata accessor for AppKeyValueTable();
      long long v96 = v16;
      swift_retain();
      id v19 = (id)AMSLogKey();
      if (v19)
      {
        uint64_t v20 = v19;
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v23 = v22;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v24._countAndFlagsBits = 0;
        v24._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v24);
        sub_100049788(&v96, (uint64_t)v98);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v93 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v93, &qword_10022F490);
        v26._countAndFlagsBits = 5972026;
        v26._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v26);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v93 = v21;
        uint64_t v94 = v23;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v93, &qword_10022F490);
        v27._countAndFlagsBits = 93;
        v27._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v27);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v46._countAndFlagsBits = 0;
        v46._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v46);
        sub_100049788(&v96, (uint64_t)v98);
        uint64_t v47 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v93 = v47;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v93, &qword_10022F490);
        v48._countAndFlagsBits = 58;
        v48._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v48);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v96);
      LogMessage.init(stringLiteral:)();
      uint64_t v49 = static os_log_type_t.error.getter();
      sub_10004841C(v49);
      swift_bridgeObjectRelease();
    }
    else
    {
      id v28 = v16;
      uint64_t v87 = v7;
      uint64_t v88 = v8;
      uint64_t v30 = v99;
      unint64_t v29 = v100;
      sub_10004EA44(v99, v100);
      if (sub_10004EF18())
      {
        sub_10004EA44(v30, v29);
        uint64_t v31 = Data.count.getter();
        sub_10004EA9C(v30, v29, v18);
        if ((double)v31 / 1000.0 / 1000.0 > 0.1)
        {
          uint64_t v86 = v18;
          uint64_t v85 = v30;
          unint64_t v81 = v29;
          id v32 = [objc_allocWithZone((Class)NSByteCountFormatter) init];
          [v32 setAllowedUnits:4];
          id v80 = v32;
          id v33 = [v32 stringFromByteCount:v31];
          uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v82 = v34;

          if (qword_10022C468 != -1) {
            swift_once();
          }
          uint64_t v84 = qword_1002440D0;
          sub_100043478(&qword_10022E560);
          v79[0] = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
          uint64_t v35 = swift_allocObject();
          *(_OWORD *)(v35 + 16) = xmmword_1001C3120;
          v79[1] = v35;
          uint64_t v98 = (void *)type metadata accessor for AppKeyValueTable();
          long long v96 = v28;
          swift_retain();
          id v36 = (id)AMSLogKey();
          uint64_t v37 = v91;
          if (v36)
          {
            uint64_t v38 = v36;
            uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v41 = v40;

            swift_bridgeObjectRetain();
            LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
            v42._countAndFlagsBits = 0;
            v42._object = (void *)0xE000000000000000;
            LogMessage.StringInterpolation.appendLiteral(_:)(v42);
            sub_100049788(&v96, (uint64_t)v98);
            uint64_t v43 = swift_getDynamicType();
            uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
            uint64_t v93 = v43;
            LogMessage.StringInterpolation.appendInterpolation(safe:)();
            sub_10002CC0C((uint64_t)&v93, &qword_10022F490);
            v44._countAndFlagsBits = 5972026;
            v44._object = (void *)0xE300000000000000;
            LogMessage.StringInterpolation.appendLiteral(_:)(v44);
            uint64_t MetatypeMetadata = &type metadata for String;
            uint64_t v93 = v39;
            uint64_t v94 = v41;
            LogMessage.StringInterpolation.appendInterpolation(safe:)();
            sub_10002CC0C((uint64_t)&v93, &qword_10022F490);
            v45._countAndFlagsBits = 93;
            v45._object = (void *)0xE100000000000000;
            LogMessage.StringInterpolation.appendLiteral(_:)(v45);
            LogMessage.init(stringInterpolation:)();
            swift_bridgeObjectRelease();
          }
          else
          {
            LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
            v50._countAndFlagsBits = 0;
            v50._object = (void *)0xE000000000000000;
            LogMessage.StringInterpolation.appendLiteral(_:)(v50);
            sub_100049788(&v96, (uint64_t)v98);
            uint64_t v51 = swift_getDynamicType();
            uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
            uint64_t v93 = v51;
            LogMessage.StringInterpolation.appendInterpolation(safe:)();
            sub_10002CC0C((uint64_t)&v93, &qword_10022F490);
            v52._countAndFlagsBits = 58;
            v52._object = (void *)0xE100000000000000;
            LogMessage.StringInterpolation.appendLiteral(_:)(v52);
            LogMessage.init(stringInterpolation:)();
          }
          sub_10004377C((uint64_t)&v96);
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v53._object = (void *)0x80000001001CBAA0;
          v53._countAndFlagsBits = 0xD000000000000011;
          LogMessage.StringInterpolation.appendLiteral(_:)(v53);
          uint64_t v98 = &type metadata for String;
          long long v96 = v37;
          unint64_t v97 = v17;
          swift_bridgeObjectRetain();
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CC0C((uint64_t)&v96, &qword_10022F490);
          v54._countAndFlagsBits = 0x7469772079656B20;
          v54._object = (void *)0xEA00000000002068;
          LogMessage.StringInterpolation.appendLiteral(_:)(v54);
          uint64_t v98 = &type metadata for String;
          long long v96 = (void *)v83;
          unint64_t v97 = v82;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CC0C((uint64_t)&v96, &qword_10022F490);
          v55._countAndFlagsBits = 0x65756C617620;
          v55._object = (void *)0xE600000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v55);
          LogMessage.init(stringInterpolation:)();
          uint64_t v56 = static os_log_type_t.default.getter();
          sub_10004841C(v56);

          swift_bridgeObjectRelease();
          unint64_t v29 = v81;
          uint64_t v30 = v85;
          uint64_t v18 = v86;
        }
      }
      unint64_t v90 = (char *)v28[2];
      long long v96 = 0;
      unint64_t v97 = 0xE000000000000000;
      _StringGuts.grow(_:)(66);
      v57._countAndFlagsBits = 0xD000000000000017;
      v57._object = (void *)0x80000001001CB620;
      String.append(_:)(v57);
      uint64_t v58 = v28[3];
      Swift::String v59 = (void *)v28[4];
      swift_bridgeObjectRetain();
      v60._countAndFlagsBits = v58;
      v60._object = v59;
      String.append(_:)(v60);
      swift_bridgeObjectRelease();
      v61._countAndFlagsBits = 10272;
      v61._object = (void *)0xE200000000000000;
      String.append(_:)(v61);
      v62._countAndFlagsBits = 7955819;
      v62._object = (void *)0xE300000000000000;
      String.append(_:)(v62);
      v63._countAndFlagsBits = 8236;
      v63._object = (void *)0xE200000000000000;
      String.append(_:)(v63);
      v64._countAndFlagsBits = 0x6E69616D6F64;
      v64._object = (void *)0xE600000000000000;
      String.append(_:)(v64);
      v65._countAndFlagsBits = 8236;
      v65._object = (void *)0xE200000000000000;
      String.append(_:)(v65);
      v66._countAndFlagsBits = 0x65756C6176;
      v66._object = (void *)0xE500000000000000;
      String.append(_:)(v66);
      v67._countAndFlagsBits = 8236;
      v67._object = (void *)0xE200000000000000;
      String.append(_:)(v67);
      v68._countAndFlagsBits = 0x70795465756C6176;
      v68._object = (void *)0xE900000000000065;
      String.append(_:)(v68);
      v69._countAndFlagsBits = 8236;
      v69._object = (void *)0xE200000000000000;
      String.append(_:)(v69);
      v70._countAndFlagsBits = 0x69646F4D7473616CLL;
      v70._object = (void *)0xEC00000064656966;
      String.append(_:)(v70);
      v71._countAndFlagsBits = 0xD000000000000015;
      v71._object = (void *)0x80000001001CBA80;
      String.append(_:)(v71);
      uint64_t v72 = (uint64_t)v96;
      uint64_t v73 = (void *)v97;
      sub_100043478(&qword_10022D780);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1001C3140;
      *(void *)(inited + 32) = v91;
      *(void *)(inited + 40) = v17;
      *(unsigned char *)(inited + 48) = 3;
      *(_OWORD *)(inited + 56) = xmmword_1001C47C0;
      *(unsigned char *)(inited + 72) = 3;
      *(void *)(inited + 80) = v30;
      *(void *)(inited + 88) = v29;
      *(unsigned char *)(inited + 96) = 0;
      *(void *)(inited + 104) = v18;
      *(void *)(inited + 112) = 0;
      *(unsigned char *)(inited + 120) = 1;
      sub_10004F590(v30, v29, v18);
      swift_bridgeObjectRetain();
      uint64_t v75 = v89;
      Date.init()();
      Date.timeIntervalSince1970.getter();
      uint64_t v77 = v76;
      (*(void (**)(char *, uint64_t))(v88 + 8))(v75, v87);
      *(void *)(inited + 128) = v77;
      *(void *)(inited + 136) = 0;
      *(unsigned char *)(inited + 144) = 2;
      v78._countAndFlagsBits = v72;
      v78._object = v73;
      SQLDatabase.execute(sql:parameters:)(v78, (Swift::OpaquePointer)inited);
      swift_setDeallocating();
      sub_1000500CC();
      swift_bridgeObjectRelease();
      sub_10004EA9C(v30, v29, v18);
      sub_10004EA9C(v30, v29, v18);
    }
  }
}

uint64_t sub_10004EA44(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_10004EA9C(uint64_t a1, unint64_t a2, char a3)
{
  if (a3 != 7) {
    return sub_10004B278(a1, a2);
  }
  return a1;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLDatabase.execute(sql:parameters:)(Swift::String sql, Swift::OpaquePointer parameters)
{
  Swift::String v5 = sql;
  rawValue = parameters._rawValue;
  uint64_t v3 = swift_retain();
  sub_100040804(v3, v2, (void (*)(void))sub_10004C264, (uint64_t)&v4);
}

uint64_t sub_10004EAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  sub_100043520(a1, (uint64_t)v30);
  sub_100042D84((uint64_t)v30, &v31);
  sub_10002CC0C((uint64_t)v30, &qword_10022F490);
  if (MetatypeMetadata)
  {
    sub_100043510(&v31, &v33);
    uint64_t v8 = sub_10004D830();
    if (v3)
    {
      return sub_10004377C((uint64_t)&v33);
    }
    else
    {
      uint64_t v20 = v8;
      uint64_t v21 = v9;
      char v22 = v10;
      uint64_t result = sub_10004377C((uint64_t)&v33);
      *(void *)a3 = v20;
      *(void *)(a3 + 8) = v21;
      *(unsigned char *)(a3 + 16) = v22;
    }
  }
  else
  {
    sub_10002CC0C((uint64_t)&v31, &qword_10022F490);
    if (qword_10022C468 != -1) {
      swift_once();
    }
    uint64_t v35 = qword_1002440D0;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v34 = type metadata accessor for AppKeyValueTable();
    *(void *)&long long v33 = a2;
    swift_retain();
    id v12 = (id)AMSLogKey();
    if (v12)
    {
      char v13 = v12;
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v16._countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v16);
      sub_100049788(&v33, v34);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v31 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v31, &qword_10022F490);
      v18._countAndFlagsBits = 5972026;
      v18._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&long long v31 = v29;
      *((void *)&v31 + 1) = v15;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v31, &qword_10022F490);
      v19._countAndFlagsBits = 93;
      v19._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v23._countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      sub_100049788(&v33, v34);
      uint64_t v24 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v31 = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v31, &qword_10022F490);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v33);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v26._object = (void *)0x80000001001CBAC0;
    v26._countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    sub_100043520(a1, (uint64_t)&v33);
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v33, &qword_10022F490);
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)();
    uint64_t v28 = static os_log_type_t.error.getter();
    sub_10004841C(v28);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 16) = 7;
  }
  return result;
}

uint64_t sub_10004EF18()
{
  return _os_variant_has_internal_content("com.apple.AppleMediaServicesUIDynamic");
}

uint64_t sub_10004EF24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_100043478(&qword_10022D8B0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10004F03C(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  if (qword_10022C468 == -1) {
    goto LABEL_2;
  }
LABEL_38:
  swift_once();
LABEL_2:
  sub_100043478(&qword_10022E560);
  uint64_t v6 = type metadata accessor for LogMessage();
  sub_100044798(v6);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  *((void *)&v38 + 1) = type metadata accessor for AppKeyValueTable();
  id v36 = v3;
  uint64_t v39 = (uint64_t)v3;
  swift_retain();
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v3 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    uint64_t v11 = sub_100040F68();
    *((void *)&v35[0] + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v34 = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v34, &qword_10022F490);
    sub_100020E44();
    *((void *)&v35[0] + 1) = &type metadata for String;
    *(void *)&long long v34 = v9;
    *((void *)&v34 + 1) = v3;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v34, &qword_10022F490);
    v12._countAndFlagsBits = 93;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    uint64_t v13 = sub_100040F68();
    *((void *)&v35[0] + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v34 = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v34, &qword_10022F490);
    v14._countAndFlagsBits = 58;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v36);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._countAndFlagsBits = 0x203A676E69766153;
  v15._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  *((void *)&v38 + 1) = sub_100043478(&qword_10022D7B0);
  id v36 = (void *)a1;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
  sub_10002CC0C((uint64_t)&v36, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v16 = static os_log_type_t.info.getter();
  sub_10004841C(v16);
  swift_bridgeObjectRelease();
  uint64_t v32 = a1 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(a1 + 64);
  int64_t v33 = (unint64_t)(v17 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  if (v19)
  {
LABEL_8:
    unint64_t v22 = __clz(__rbit64(v19));
    v19 &= v19 - 1;
    unint64_t v23 = v22 | (v21 << 6);
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v27 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v27 < v33)
    {
      unint64_t v28 = *(void *)(v32 + 8 * v27);
      if (v28) {
        goto LABEL_13;
      }
      v21 += 2;
      if (v27 + 1 >= v33)
      {
        int64_t v21 = v27;
        goto LABEL_18;
      }
      unint64_t v28 = *(void *)(v32 + 8 * v21);
      if (v28)
      {
        ++v27;
        goto LABEL_13;
      }
      if (v27 + 2 < v33) {
        break;
      }
    }
LABEL_18:
    unint64_t v19 = 0;
    memset(v35, 0, sizeof(v35));
    long long v34 = 0u;
LABEL_19:
    sub_10004382C((uint64_t)&v34, (uint64_t)&v36, &qword_10022E200);
    unint64_t v29 = v37;
    if (!v37) {
      return swift_release();
    }
    uint64_t v30 = v36;
    sub_100043510(&v38, &v34);
    sub_10004DF50((uint64_t)&v34, v39, v30, v29);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return sub_10004377C((uint64_t)&v34);
    }
    swift_bridgeObjectRelease();
    uint64_t result = sub_10004377C((uint64_t)&v34);
    if (v19) {
      goto LABEL_8;
    }
  }
  unint64_t v28 = *(void *)(v32 + 8 * (v27 + 2));
  if (v28)
  {
    v27 += 2;
    goto LABEL_13;
  }
  int64_t v31 = v27 + 3;
  if (v27 + 3 >= v33)
  {
    int64_t v21 = v27 + 2;
    goto LABEL_18;
  }
  unint64_t v28 = *(void *)(v32 + 8 * v31);
  if (v28)
  {
    v27 += 3;
LABEL_13:
    unint64_t v19 = (v28 - 1) & v28;
    unint64_t v23 = __clz(__rbit64(v28)) + (v27 << 6);
    int64_t v21 = v27;
LABEL_9:
    uint64_t v24 = *(void *)(a1 + 56);
    Swift::String v25 = (void *)(*(void *)(a1 + 48) + 16 * v23);
    uint64_t v26 = v25[1];
    *(void *)&long long v34 = *v25;
    *((void *)&v34 + 1) = v26;
    sub_100043520(v24 + 32 * v23, (uint64_t)v35);
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v27 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v27 >= v33)
    {
      int64_t v21 = v33 - 1;
      goto LABEL_18;
    }
    unint64_t v28 = *(void *)(v32 + 8 * v27);
    ++v31;
    if (v28) {
      goto LABEL_13;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10004F590(uint64_t a1, unint64_t a2, char a3)
{
  if (a3 != 7) {
    return sub_10004EA44(a1, a2);
  }
  return a1;
}

uint64_t sub_10004F5A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100043478(&qword_100231680);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      unint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      void *v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_1001A638C(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                *uint64_t v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10004F880(uint64_t a1, uint64_t a2)
{
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  strcpy((char *)v14, "DELETE FROM ");
  BYTE5(v14[1]) = 0;
  HIWORD(v14[1]) = -5120;
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void **)(v2 + 32);
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v5;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  sub_1000465EC();
  sub_100048BF0();
  v8._countAndFlagsBits = 0x3B3F203D20;
  v8._object = (void *)0xE500000000000000;
  String.append(_:)(v8);
  uint64_t v9 = v14[0];
  char v10 = (void *)v14[1];
  sub_100043478(&qword_10022D780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  *(unsigned char *)(inited + 48) = 3;
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = v9;
  v12._object = v10;
  SQLDatabase.execute(sql:parameters:)(v12, (Swift::OpaquePointer)inited);
  swift_setDeallocating();
  sub_1000500CC();
  return swift_bridgeObjectRelease();
}

char *sub_10004F9CC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 2 * a1 + 32);
    uint64_t v6 = &__dst[2 * v4];
    if (v5 >= v6 || &v5[2 * v4] <= __dst)
    {
      memcpy(__dst, v5, 2 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10004FAC0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

id sub_10004FB54(uint64_t a1, unint64_t a2, uint64_t a3)
{
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v8 = [v6 initWithData:isa encoding:a3];
  sub_10004B278(a1, a2);

  return v8;
}

uint64_t sub_10004FBDC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10004FC00()
{
  return v0;
}

uint64_t sub_10004FC14(uint64_t a1)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 120) = v1;
  return swift_retain();
}

BOOL sub_10004FC30(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10004FC64()
{
  return v0;
}

uint64_t sub_10004FC80@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t sub_10004FC88(uint64_t a1)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 56) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

void sub_10004FCCC()
{
  *uint64_t v0 = 0x8000000000000000;
}

__n128 sub_10004FCE0(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 384);
  a1[1] = result;
  return result;
}

uint64_t sub_10004FCFC()
{
  return v0;
}

uint64_t sub_10004FD14@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = v1;
  return v2 + 176;
}

uint64_t sub_10004FD40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_10004FD68(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100043478(a3);
  sub_1000456E0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10004FDC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100043478(a3);
  sub_100043B1C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10004FE24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100192AD0);
}

uint64_t sub_10004FE38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  _StringGuts.grow(_:)(50);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  sub_100043B2C(inited);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_OWORD *)(v8 + 48) = 0u;
  *(_OWORD *)(v8 + 64) = 0u;
  *(_OWORD *)(v8 + 80) = 0u;
  *(void *)(v8 + 96) = 0;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_100050044();
  unint64_t v22 = 0xD00000000000006ALL;
  unint64_t v23 = 0x80000001001D8670;
  uint64_t v24 = inited;
  unint64_t v25 = sub_10003F784;
  uint64_t v26 = v8;
  sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)v20);
  if (v3)
  {
    swift_release();
    swift_release();
    swift_setDeallocating();
    return sub_1000500CC();
  }
  else
  {
    swift_setDeallocating();
    sub_1000500CC();
    swift_release();
    sub_10002CAAC();
    uint64_t v10 = *(void *)(v8 + 16);
    uint64_t v11 = *(void *)(v8 + 24);
    uint64_t v12 = *(void *)(v8 + 32);
    uint64_t v13 = *(void *)(v8 + 40);
    uint64_t v14 = *(void *)(v8 + 48);
    uint64_t v15 = *(void *)(v8 + 56);
    uint64_t v16 = *(void *)(v8 + 72);
    uint64_t v17 = *(void *)(v8 + 64);
    uint64_t v18 = *(void *)(v8 + 80);
    uint64_t v19 = *(void *)(v8 + 88);
    uint64_t v29 = *(void *)(v8 + 96);
    sub_100050254(v10, v11, v12);
    uint64_t result = swift_release();
    *a3 = v10;
    a3[1] = v11;
    a3[2] = v12;
    a3[3] = v13;
    a3[4] = v14;
    a3[5] = v15;
    a3[6] = v17;
    a3[7] = v16;
    a3[8] = v18;
    a3[9] = v19;
    a3[10] = v29;
  }
  return result;
}

uint64_t sub_100050044()
{
  if (v0[3])
  {
    uint64_t v1 = v0[3];
  }
  else
  {
    uint64_t v1 = sub_100190704((uint64_t)v0, *v0);
    v0[3] = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1000500CC()
{
  swift_arrayDestroy();
  sub_100044104();
  return swift_deallocClassInstance();
}

uint64_t sub_100050108()
{
  return String.hash(into:)();
}

unint64_t sub_100050120()
{
  return sub_100042ADC(v1, v0);
}

uint64_t sub_10005013C()
{
  return swift_dynamicCast();
}

uint64_t sub_100050160()
{
  sub_10004377C(v0 - 112);
  return LogMessage.init(stringLiteral:)();
}

uint64_t sub_1000501AC(uint64_t a1, void *a2)
{
  unint64_t v3 = a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  return sub_100112A70(v3, a2, 0x65636976726573, 0xE700000000000000);
}

uint64_t sub_1000501D4()
{
  sub_100049788((void *)(v0 - 136), *(void *)(v0 - 112));
  return swift_getDynamicType();
}

void sub_10005020C()
{
  *(unsigned char *)(v0 - 66) = 1;
}

uint64_t sub_100050218()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100050254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1000502C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1000502F8()
{
  sub_1000209F4();
  uint64_t v20 = v1;
  uint64_t v21 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v19 = v11;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  __chkstk_darwin(v12);
  sub_100022558();
  type metadata accessor for DispatchQoS();
  sub_100020DEC();
  __chkstk_darwin(v13);
  sub_10002D300();
  sub_100043478(v4);
  uint64_t v14 = Promise.__allocating_init()();
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v0;
  v15[3] = v14;
  v15[4] = v19;
  v15[5] = v10;
  void v15[6] = v8;
  v15[7] = v6;
  void v22[4] = v20;
  v22[5] = v15;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  void v22[2] = sub_10002CD0C;
  void v22[3] = v21;
  uint64_t v16 = _Block_copy(v22);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100050578(v8);
  static DispatchQoS.unspecified.getter();
  sub_1000505D0((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B6DC((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  sub_100043FB0();
  v17();
  sub_100043FB0();
  v18();
  swift_release();
  sub_100020FDC();
}

uint64_t sub_100050578(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100050588(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000505D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100050618()
{
  sub_1000209F4();
  sub_100046660(v6, v7, v8);
  sub_100049370();
  if (v9)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  sub_100046C4C();
  if (sub_10004B3B0())
  {
    sub_100043B38();
    sub_10004BEB4();
    if (!v11) {
      goto LABEL_12;
    }
    unint64_t v4 = v10;
  }
  uint64_t v12 = *v3;
  if (v5)
  {
    uint64_t v13 = *(void *)(v12 + 56);

    *(void *)(v13 + 8 * v4) = v0;
    sub_100020FDC();
  }
  else
  {
    sub_1000506D8(v4, v2, v1, v0, v12);
    sub_100020FDC();
    swift_bridgeObjectRetain();
  }
}

void sub_1000506D8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100048600(a1, a2, a3, a4, a5);
  if (v7) {
    __break(1u);
  }
  else {
    sub_100042B4C(v5, v6);
  }
}

id sub_1000506F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class v10 = Date._bridgeToObjectiveC()().super.isa;
  id v11 = [v5 initWithEndDate:isa identifier:v9 startDate:v10];

  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(a4, v12);
  v13(a1, v12);
  return v11;
}

uint64_t sub_1000507E8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100043B1C();
  sub_100043FB0();
  v3();
  return a1;
}

uint64_t sub_10005083C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100043B1C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100050894(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  char v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  return v7(v5, v4);
}

uint64_t sub_100050944(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Treatment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for TreatmentsRandomGenerator()
{
  return self;
}

uint64_t sub_1000509CC(uint64_t a1)
{
  *(_OWORD *)(v1 + 16) = xmmword_1001C92F0;
  *(void *)(v1 + 32) = 0xFFFFFFFFFFFFLL;
  *(void *)(v1 + 40) = a1 & 0xFFFFFFFFFFFFLL ^ 0x5DEECE66DLL;
  return v1;
}

uint64_t sub_1000509FC(uint64_t a1)
{
  uint64_t result = sub_100050AE4(31);
  uint64_t v3 = a1 - 1;
  if (__OFSUB__(a1, 1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v4 = result;
  if ((v3 & a1) != 0)
  {
    if (!a1)
    {
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    if (result == 0x8000000000000000 && a1 == -1) {
      goto LABEL_30;
    }
    result %= a1;
    BOOL v6 = __OFSUB__(v4, v4 % a1);
    uint64_t v7 = v4 - v4 % a1;
    if (v6) {
      goto LABEL_27;
    }
    BOOL v6 = __OFADD__(v7, v3);
    uint64_t v8 = v7 + v3;
    if (v6)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v8 < 0)
    {
      while (1)
      {
        uint64_t result = sub_100050AE4(31);
        if (result == 0x8000000000000000 && a1 == -1) {
          break;
        }
        uint64_t v10 = result;
        result %= a1;
        BOOL v6 = __OFSUB__(v10, result);
        uint64_t v11 = v10 - result;
        if (v6)
        {
          __break(1u);
LABEL_23:
          __break(1u);
          break;
        }
        BOOL v6 = __OFADD__(v11, v3);
        uint64_t v12 = v11 + v3;
        if (v6) {
          goto LABEL_23;
        }
        if ((v12 & 0x8000000000000000) == 0) {
          return result;
        }
      }
      __break(1u);
      goto LABEL_25;
    }
  }
  else
  {
    if ((unsigned __int128)(a1 * (__int128)result) >> 64 != (a1 * result) >> 63)
    {
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      return result;
    }
    return (a1 * result) >> 31;
  }
  return result;
}

unint64_t sub_100050AE4(uint64_t a1)
{
  unint64_t v2 = 0x5DEECE66DLL;
  uint64_t v3 = 0x5DEECE66DLL * *(void *)(v1 + 40);
  BOOL v4 = __OFADD__(v3, 11);
  unint64_t v5 = v3 + 11;
  if (v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  v5 &= 0xFFFFFFFFFFFFuLL;
  *(void *)(v1 + 40) = v5;
  unint64_t v2 = 48 - a1;
  if (__OFSUB__(48, a1))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((unint64_t)(-17 - a1) < 0xFFFFFFFFFFFFFF7FLL) {
    return 0;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v7 = v5 >> v2;
    if (v2 >= 0x40) {
      return 0;
    }
    else {
      return v7;
    }
  }
LABEL_11:
  if (v2 <= 0xFFFFFFFFFFFFFFC0) {
    return 0;
  }
  return v5 << -(char)v2;
}

void *sub_100050B58(void *a1)
{
  uint64_t result = sub_100050C20(a1 + 5);
  if (v3)
  {
    if (a1[4])
    {
      uint64_t v4 = a1[3];
      unint64_t v5 = (void *)a1[4];
    }
    else
    {
      uint64_t v4 = 0;
      unint64_t v5 = (void *)0xE000000000000000;
    }
    uint64_t v10 = result;
    swift_bridgeObjectRetain();
    v6._countAndFlagsBits = v4;
    v6._object = v5;
    String.append(_:)(v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = a1[1];
    unint64_t v7 = (void *)a1[2];
    swift_bridgeObjectRetain();
    v9._countAndFlagsBits = v8;
    v9._object = v7;
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

void *sub_100050C20(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (void *)a1[3];
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = v2;
  v12._object = v3;
  int v4 = sub_100050E68(v12);
  switch(v4)
  {
    case 5:
      return 0;
    case 4:
      uint64_t v7 = a1[4];
      Swift::String v6 = (void *)a1[5];
      swift_bridgeObjectRetain();
      v13._countAndFlagsBits = v7;
      v13._object = v6;
      char v8 = sub_10018A55C(v13);
      if (v8 != 2) {
        return (void *)sub_100189C80(v8 & 1);
      }
      return 0;
    case 2:
      return (void *)sub_100051304(*a1, a1[1]);
  }
  uint64_t v10 = a1[4];
  Swift::String v9 = (void *)a1[5];
  swift_bridgeObjectRetain();
  v14._countAndFlagsBits = v10;
  v14._object = v9;
  char v11 = sub_10018A55C(v14);
  if (v11 == 2) {
    return 0;
  }
  return sub_100189BCC(v11 & 1);
}

uint64_t sub_100050CF4(Swift::String a1, Swift::OpaquePointer a2)
{
  unint64_t v2 = sub_100050E20(a1, a2);
  swift_bridgeObjectRelease();
  if (v2 >= 5) {
    return 5;
  }
  else {
    return v2;
  }
}

uint64_t sub_100050D40()
{
  return LogMessage.init(stringLiteral:)();
}

uint64_t sub_100050D60()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100050D98()
{
  return v0;
}

uint64_t sub_100050DB0()
{
  return LogMessage.init(stringLiteral:)();
}

uint64_t sub_100050DD0()
{
  return swift_allocObject();
}

uint64_t sub_100050DF8()
{
  return 0;
}

void sub_100050E0C(uint64_t a1@<X8>)
{
  v3[13] = v2;
  v3[10] = a1;
  v3[11] = v1;
}

Swift::Int sub_100050E20(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  uint64_t countAndFlagsBits = string._countAndFlagsBits;
  Swift::String v6 = object;
  return _findStringSwitchCase(cases:string:)(cases, *(Swift::String *)&countAndFlagsBits);
}

uint64_t sub_100050E40()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100050E68(Swift::String a1)
{
  v1._rawValue = &off_10020C6F8;
  return sub_100050CF4(a1, v1);
}

uint64_t sub_100050E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SHA256();
  sub_100020DEC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  Swift::String v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SHA256Digest();
  sub_100020DEC();
  uint64_t v35 = v11;
  uint64_t v36 = v10;
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1000517B4(a1, a2);
  unint64_t v16 = v15;
  sub_1000512BC(&qword_100233D80, (void (*)(uint64_t))&type metadata accessor for SHA256);
  uint64_t result = dispatch thunk of HashFunction.init()();
  switch(v16 >> 62)
  {
    case 1uLL:
      if (v14 >> 32 < (int)v14) {
        goto LABEL_27;
      }
      sub_10004EA44(v14, v16);
      sub_100051D18((int)v14, v14 >> 32);
      goto LABEL_5;
    case 2uLL:
      uint64_t v18 = *(void *)(v14 + 16);
      uint64_t v19 = *(void *)(v14 + 24);
      sub_10004EA44(v14, v16);
      swift_retain();
      swift_retain();
      sub_100051D18(v18, v19);
      swift_release();
      swift_release();
LABEL_5:
      sub_10004B278(v14, v16);
      break;
    default:
      sub_100189E14();
      sub_10004B278(v14, v16);
      break;
  }
  dispatch thunk of HashFunction.finalize()();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  sub_1000512BC(&qword_100233D88, (void (*)(uint64_t))&type metadata accessor for SHA256Digest);
  uint64_t result = Digest.makeIterator()();
  uint64_t v21 = *(void *)(result + 16);
  uint64_t v22 = v21 - v20;
  if (v21 == v20)
  {
    unint64_t v23 = _swiftEmptyArrayStorage;
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(result + 16) = 8;
    *(void *)(result + 32) = 0;
    *(void *)(result + 40) = 0;
    unint64_t v24 = v23[2];
    if (v24 >= 8)
    {
      unint64_t v25 = 0;
      uint64_t v26 = (_WORD *)v23 + v24;
      *(_WORD *)(result + 32) = v26[8];
      *(_WORD *)(result + 34) = v26[9];
      *(_WORD *)(result + 36) = v26[10];
      *(_WORD *)(result + 38) = v26[11];
      *(_WORD *)(result + 40) = v26[12];
      *(_WORD *)(result + 42) = v26[13];
      *(_WORD *)(result + 44) = v26[14];
      *(_WORD *)(result + 46) = v26[15];
      for (uint64_t i = 32; i != 48; i += 2)
        unint64_t v25 = *(unsigned __int8 *)(result + i) | (v25 << 8);
      sub_10004B278(v14, v16);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v36);
      swift_bridgeObjectRelease();
      return v25;
    }
    __break(1u);
    goto LABEL_24;
  }
  if (v21 <= v20)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    if (!v21) {
      goto LABEL_26;
    }
    unint64_t v28 = (char *)(v20 + result + 32);
    unint64_t v23 = _swiftEmptyArrayStorage;
    do
    {
      __int16 v30 = *v28++;
      __int16 v29 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100046F5C();
        unint64_t v23 = v32;
      }
      unint64_t v31 = v23[2];
      if (v31 >= v23[3] >> 1)
      {
        sub_100046F5C();
        unint64_t v23 = v33;
      }
      v23[2] = v31 + 1;
      *((_WORD *)v23 + v31 + 16) = v29;
      --v22;
    }
    while (v22);
    goto LABEL_9;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000512BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100051304(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 24);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = self;
  uint64_t v5 = *(void *)(v2 + 16);
  swift_unknownObjectRetain();
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v4 identifierForAccount:v5 bag:v3 bagNamespace:v6 keyName:v7];

  id v16 = 0;
  id v9 = [v8 resultWithError:&v16];
  id v10 = v16;
  if (!v9)
  {
    id v14 = v16;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_unknownObjectRelease();

    swift_errorRelease();
    return 0;
  }
  uint64_t v11 = v9;
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v13 = v10;

  swift_unknownObjectRelease();
  return v12;
}

uint64_t type metadata accessor for Treatment(uint64_t a1)
{
  return sub_1000514B4(a1, qword_100234438);
}

uint64_t sub_1000514B4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000514E8()
{
  return Hasher.init(_seed:)();
}

size_t sub_100051500(void *a1)
{
  size_t result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

void sub_100051528()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_100051544()
{
  return v0;
}

uint64_t sub_10005158C@<X0>(uint64_t a1@<X8>)
{
  v2[81] = a1;
  v2[78] = v1;
  v2[79] = v3;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_1000515B8()
{
  return *(void *)(v0 + 432);
}

uint64_t sub_1000515CC()
{
  return v0;
}

void sub_1000515D8(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD00000000000001BLL;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v3);
}

uint64_t sub_1000515FC()
{
  return v0;
}

uint64_t sub_100051614()
{
  *(void *)(v2 - 112) = v0;
  *(void *)(v2 - 104) = (v1 - 32) | 0x8000000000000000;
  return static LogMessage.safe(_:)();
}

uint64_t sub_100051634()
{
  return v0 - 128;
}

uint64_t sub_100051648()
{
  return 0x444961657261;
}

uint64_t sub_10005165C()
{
  sub_10004377C(v0);
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_100051698@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 104) = a1;
  *(void *)(v3 - 128) = v2;
  *(void *)(v3 - 120) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_1000516D8()
{
  return static LogMessage.safe(_:)();
}

uint64_t *sub_1000516F0(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100051744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000517B4(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  *(void *)&long long v37 = a1;
  *((void *)&v37 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_100043478(&qword_100233D90);
  if (swift_dynamicCast())
  {
    sub_100028270(v35, (uint64_t)&v38);
    sub_100049788(&v38, v40);
    dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
    swift_bridgeObjectRelease();
    v35[0] = v37;
    sub_10004377C((uint64_t)&v38);
    return *(void *)&v35[0];
  }
  uint64_t v36 = 0;
  memset(v35, 0, sizeof(v35));
  sub_100051CB8((uint64_t)v35);
  uint64_t v2 = v34;
  if ((v34 & 0x1000000000000000) != 0)
  {
LABEL_61:
    uint64_t v3 = 0;
    unint64_t v5 = 0xF000000000000000;
    if ((v2 & 0x1000000000000000) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    if ((v34 & 0x2000000000000000) != 0)
    {
      uint64_t v38 = v33;
      uint64_t v39 = v34 & 0xFFFFFFFFFFFFFFLL;
    }
    else if ((v33 & 0x1000000000000000) == 0)
    {
      _StringObject.sharedUTF8.getter();
    }
    uint64_t v3 = Data._Representation.init(_:)();
    unint64_t v5 = v4;
    if (v4 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v35[0] = v3;
      *((void *)&v35[0] + 1) = v5;
      return *(void *)&v35[0];
    }
    if ((v34 & 0x1000000000000000) == 0) {
      goto LABEL_10;
    }
  }
  String.UTF8View._foreignCount()();
LABEL_10:
  *(void *)&v35[0] = Data._Representation.init(count:)();
  *((void *)&v35[0] + 1) = v6;
  __chkstk_darwin(*(void *)&v35[0]);
  _OWORD v28[2] = &v33;
  unint64_t v7 = (unint64_t)sub_100189F94((void *(*)(uint64_t *__return_ptr, char *, char *))sub_10018A4DC, (uint64_t)v28);
  uint64_t v10 = *((void *)&v35[0] + 1) >> 62;
  uint64_t v11 = v7;
  unint64_t v13 = v12;
  unint64_t v14 = v8;
  uint64_t v2 = BYTE14(v35[0]);
  switch(*((void *)&v35[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v15) = DWORD1(v35[0]) - LODWORD(v35[0]);
      if (__OFSUB__(DWORD1(v35[0]), v35[0])) {
        goto LABEL_65;
      }
      uint64_t v15 = (int)v15;
LABEL_16:
      if (v9 != v15)
      {
        if (v10)
        {
          if (v10 == 1) {
            uint64_t v2 = *(uint64_t *)&v35[0] >> 32;
          }
          else {
            uint64_t v2 = *(void *)(*(void *)&v35[0] + 24);
          }
        }
LABEL_53:
        if (v2 < v9)
        {
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
        }
        Data._Representation.replaceSubrange(_:with:count:)();
LABEL_55:
        swift_bridgeObjectRelease();
        goto LABEL_56;
      }
LABEL_22:
      if ((v13 & 0x2000000000000000) != 0) {
        unint64_t v19 = HIBYTE(v13) & 0xF;
      }
      else {
        unint64_t v19 = v7 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v37 + 7) = 0;
      *(void *)&long long v37 = 0;
      if (4 * v19 == v8 >> 14) {
        goto LABEL_51;
      }
      unint64_t v29 = v5;
      LOBYTE(v20) = 0;
      uint64_t v21 = (v7 >> 59) & 1;
      if ((v13 & 0x1000000000000000) == 0) {
        LOBYTE(v21) = 1;
      }
      uint64_t v22 = 4 << v21;
      uint64_t v32 = v13 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v30 = v3;
      uint64_t v31 = (v13 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v17 = *(void *)(*(void *)&v35[0] + 16);
      uint64_t v16 = *(void *)(*(void *)&v35[0] + 24);
      BOOL v18 = __OFSUB__(v16, v17);
      uint64_t v15 = v16 - v17;
      if (!v18) {
        goto LABEL_16;
      }
      goto LABEL_66;
    case 3:
      if (!v9) {
        goto LABEL_22;
      }
      uint64_t v2 = 0;
      goto LABEL_53;
    default:
      uint64_t v15 = BYTE14(v35[0]);
      goto LABEL_16;
  }
  do
  {
    unint64_t v23 = v14;
    if ((v14 & 0xC) == v22) {
      unint64_t v23 = sub_1000BA678(v14, v11, v13);
    }
    unint64_t v24 = v23 >> 16;
    if (v23 >> 16 >= v19)
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    if ((v13 & 0x1000000000000000) != 0)
    {
      char v26 = String.UTF8View._foreignSubscript(position:)();
    }
    else if ((v13 & 0x2000000000000000) != 0)
    {
      uint64_t v38 = v11;
      uint64_t v39 = v32;
      char v26 = *((unsigned char *)&v38 + v24);
    }
    else
    {
      uint64_t v25 = v31;
      if ((v11 & 0x1000000000000000) == 0) {
        uint64_t v25 = _StringObject.sharedUTF8.getter();
      }
      char v26 = *(unsigned char *)(v25 + v24);
    }
    if ((v14 & 0xC) == v22)
    {
      unint64_t v14 = sub_1000BA678(v14, v11, v13);
      if ((v13 & 0x1000000000000000) == 0)
      {
LABEL_40:
        unint64_t v14 = (v14 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_45;
      }
    }
    else if ((v13 & 0x1000000000000000) == 0)
    {
      goto LABEL_40;
    }
    if (v19 <= v14 >> 16) {
      goto LABEL_60;
    }
    unint64_t v14 = String.UTF8View._foreignIndex(after:)();
LABEL_45:
    *((unsigned char *)&v37 + v20) = v26;
    unsigned int v20 = v20 + 1;
    if ((v20 >> 8)) {
      goto LABEL_59;
    }
    BYTE14(v37) = v20;
    if (v20 == 14)
    {
      uint64_t v38 = v37;
      LODWORD(v39) = DWORD2(v37);
      WORD2(v39) = WORD6(v37);
      Data._Representation.append(contentsOf:)();
      LOBYTE(v20) = 0;
      BYTE14(v37) = 0;
    }
  }
  while (4 * v19 != v14 >> 14);
  uint64_t v3 = v30;
  unint64_t v5 = v29;
  if ((_BYTE)v20)
  {
    uint64_t v38 = v37;
    LODWORD(v39) = DWORD2(v37);
    WORD2(v39) = WORD6(v37);
    Data._Representation.append(contentsOf:)();
    sub_10004B6AC(v3, v5);
    goto LABEL_55;
  }
LABEL_51:
  swift_bridgeObjectRelease();
  sub_10004B6AC(v3, v5);
LABEL_56:
  swift_bridgeObjectRelease();
  return *(void *)&v35[0];
}

uint64_t sub_100051CB8(uint64_t a1)
{
  uint64_t v2 = sub_100043478(&qword_100233D98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100051D18(uint64_t a1, uint64_t a2)
{
  uint64_t result = __DataStorage._bytes.getter();
  if (!result || (uint64_t result = __DataStorage._offset.getter(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      __DataStorage._length.getter();
      type metadata accessor for SHA256();
      sub_1000512BC(&qword_100233D80, (void (*)(uint64_t))&type metadata accessor for SHA256);
      return dispatch thunk of HashFunction.update(bufferPointer:)();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100051DF8()
{
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [(id)swift_getObjCClassFromMetadata() bagForProfile:v0 profileVersion:v1];

  return v2;
}

uint64_t sub_100051E8C()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t type metadata accessor for TreatmentsCalculator()
{
  return self;
}

uint64_t sub_100051ED8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100051FD4(uint64_t a1, int a2, void *a3, uint64_t a4, void *aBlock, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = _Block_copy(aBlock);
  sub_10002068C();
  unint64_t v12 = (void *)swift_allocObject();
  v12[2] = a3;
  void v12[3] = a4;
  v12[4] = v11;
  v12[5] = a1;
  id v13 = a3;
  swift_retain();
  return sub_100021888(a7, (uint64_t)v12);
}

uint64_t sub_100052058()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v0 = sub_10002068C();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100052090()
{
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000520D0()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_1000520E8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100052108@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 104) = (a2 - 32) | 0x8000000000000000;
  return result;
}

unint64_t sub_100052128()
{
  return 0xD000000000000018;
}

uint64_t sub_100052140(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  return sub_10004EA44(v3, v4);
}

uint64_t sub_100052164()
{
  return v0;
}

uint64_t sub_100052178()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_10005219C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100043478(&qword_100231680);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    void *v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100052448()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100052460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_10008BB24(v13, v11, v10, a4, a5, v12, a7, a8, a9, a10);
}

uint64_t *sub_100052480()
{
  *(void *)(v0 - 96) = *(void *)(v0 - 176);
  return sub_10003BAA4((uint64_t *)(v0 - 120));
}

uint64_t sub_10005249C()
{
  return v0;
}

uint64_t sub_1000524AC()
{
  sub_100049788((void *)(v0 - 144), *(void *)(v0 - 120));
  return swift_getDynamicType();
}

uint64_t sub_1000524E4()
{
  return 0x2065756575716E45;
}

uint64_t sub_1000524FC()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_100052518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10017A508(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000);
}

uint64_t sub_100052520()
{
  return 0x6C62616568636163;
}

uint64_t sub_100052544()
{
  return String.hash(into:)();
}

uint64_t sub_100052560()
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  uint64_t v1 = sub_10017B190();
  return _swift_deallocObject(v1, v2, v3);
}

void sub_1000525B0()
{
  uint64_t v1 = 0x203A707061202CLL;
  unint64_t v2 = 0xE700000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_1000525D4()
{
  sub_100049788((void *)(v0 + 16), *(void *)(v0 + 40));
  return swift_retain();
}

uint64_t sub_10005260C()
{
  return v0;
}

void sub_100052628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), void (*a7)(uint64_t))
{
  sub_10004A6F0();
  if (v11)
  {
    sub_100048B58();
    if (v12 != v13)
    {
      sub_100046134();
      if (v12)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_100046D3C();
  if (v8)
  {
    sub_100043478(v14);
    unint64_t v15 = (const void *)sub_1000362E0();
    size_t v16 = j__malloc_size(v15);
    sub_100076BA0(v16);
  }
  if (v7)
  {
    uint64_t v17 = sub_100076B70();
    a7(v17);
    sub_100049CDC();
  }
  else
  {
    uint64_t v18 = sub_10003613C();
    a6(v18);
  }
}

uint64_t sub_1000526E4()
{
  return swift_allocObject();
}

uint64_t sub_1000526FC@<X0>(uint64_t a1@<X8>)
{
  return sub_10003081C(0xD000000000000018, (void *)((a1 - 32) | 0x8000000000000000));
}

void sub_100052734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

char *sub_100052768(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

uint64_t sub_100052800(void *a1)
{
  id v2 = objc_msgSend(a1, "ams_storefront");

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t destroy for SQLParameter(uint64_t a1)
{
  return sub_100044D8C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

unsigned char *initializeBufferWithCopyOfBuffer for AASA.Detail.CodingKeys(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_1000528A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000528B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000528C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000528D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000528E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000528F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052908(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052918(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052928(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052938(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052948(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052958(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052968(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052978(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052988(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052998(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000529A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000529B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000529C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000529D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000529E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000529F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052A18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052A28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052A38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052A48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052A58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052A68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052A78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052A88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052A98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052B08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052B18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052B28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052B38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052B48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052B58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052B68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052B78()
{
  return swift_release();
}

uint64_t sub_100052B80()
{
  return swift_release();
}

uint64_t sub_100052B88()
{
  return swift_release();
}

uint64_t sub_100052B90()
{
  return swift_release();
}

uint64_t sub_100052B98()
{
  return swift_release();
}

uint64_t sub_100052BA0()
{
  return swift_release();
}

uint64_t sub_100052BA8()
{
  return swift_release();
}

uint64_t sub_100052BB0()
{
  return swift_release();
}

uint64_t sub_100052BB8()
{
  return swift_release();
}

uint64_t sub_100052BC0()
{
  return swift_release();
}

uint64_t sub_100052BC8()
{
  return swift_release();
}

uint64_t sub_100052BD0()
{
  return swift_release();
}

uint64_t sub_100052BD8()
{
  return swift_release();
}

uint64_t sub_100052BE0()
{
  return swift_release();
}

uint64_t sub_100052BE8()
{
  return swift_release();
}

uint64_t sub_100052BF0()
{
  return swift_release();
}

uint64_t sub_100052BF8()
{
  return swift_release();
}

uint64_t sub_100052C00()
{
  return swift_release();
}

uint64_t sub_100052C08()
{
  return swift_release();
}

uint64_t sub_100052C10()
{
  return swift_release();
}

uint64_t sub_100052C18()
{
  return swift_release();
}

uint64_t sub_100052C20()
{
  return swift_release();
}

uint64_t sub_100052C28()
{
  return swift_release();
}

uint64_t sub_100052C30()
{
  return swift_release();
}

uint64_t sub_100052C38()
{
  return swift_release();
}

uint64_t sub_100052C40()
{
  return swift_release();
}

uint64_t sub_100052C48()
{
  return swift_release();
}

uint64_t sub_100052C50()
{
  return swift_release();
}

uint64_t sub_100052C58()
{
  return swift_release();
}

uint64_t sub_100052C60()
{
  return swift_release();
}

uint64_t sub_100052C68()
{
  return swift_release();
}

uint64_t sub_100052C70()
{
  return swift_release();
}

uint64_t sub_100052C78()
{
  return swift_release();
}

uint64_t sub_100052C80()
{
  return swift_release();
}

uint64_t sub_100052C88()
{
  return swift_release();
}

uint64_t sub_100052C90()
{
  return swift_release();
}

uint64_t sub_100052C98()
{
  return swift_release();
}

uint64_t sub_100052CA0()
{
  return swift_release();
}

uint64_t sub_100052CA8()
{
  return swift_release();
}

uint64_t sub_100052CB0()
{
  return swift_release();
}

uint64_t sub_100052CB8()
{
  return swift_release();
}

uint64_t sub_100052CC0()
{
  return swift_release();
}

uint64_t sub_100052CC8()
{
  return swift_release();
}

uint64_t sub_100052CD0()
{
  return swift_release();
}

uint64_t sub_100052CD8()
{
  return swift_release();
}

uint64_t sub_100052CF8(uint64_t a1)
{
  unint64_t v2 = sub_100052D90();
  unint64_t v3 = sub_100052E80();
  unint64_t v4 = sub_100052E34();
  return Error<>._code.getter(a1, v2, v3, v4);
}

uint64_t sub_100052D54(uint64_t a1)
{
  unint64_t v2 = sub_100052D90();
  return Error<>._domain.getter(a1, v2);
}

unint64_t sub_100052D90()
{
  unint64_t result = qword_100234808;
  if (!qword_100234808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234808);
  }
  return result;
}

uint64_t sub_100052DDC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100052E80();
  unint64_t v5 = sub_100052E34();
  return CustomNSError<>.errorCode.getter(a1, a2, v4, v5);
}

unint64_t sub_100052E34()
{
  unint64_t result = qword_10022CC00;
  if (!qword_10022CC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CC00);
  }
  return result;
}

unint64_t sub_100052E80()
{
  unint64_t result = qword_100234810;
  if (!qword_100234810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234810);
  }
  return result;
}

uint64_t sub_100052EE4()
{
  return _swift_task_switch(sub_100013B54, 0, 0);
}

uint64_t sub_100052F18()
{
  return swift_deallocClassInstance();
}

uint64_t sub_100052F28(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_100052F30(uint64_t a1)
{
  return sub_1000178EC(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24));
}

void sub_100052F3C(unsigned char *a1)
{
  sub_10001E334(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100052F48(uint64_t a1)
{
  return sub_10019D530(a1, &qword_100234630, (uint64_t (*)(uint64_t))sub_10001649C);
}

uint64_t sub_100052F68(uint64_t a1)
{
  return sub_100039F9C(a1, v1);
}

uint64_t sub_100052F8C(uint64_t a1)
{
  return sub_100021F50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100052F94()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_100013540, 0, 0);
}

uint64_t sub_100053094@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000530C0(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1000530C0(uint64_t result)
{
  return result;
}

uint64_t sub_1000530DC(uint64_t *a1)
{
  return sub_1000530E4(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1000530E4(uint64_t *a1, uint64_t (*a2)(uint64_t *))
{
  return sub_100009F30(*a1, a2);
}

uint64_t sub_1000530EC(uint64_t a1)
{
  return sub_1000074B4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000530F4(uint64_t a1)
{
  return sub_1000193EC(a1, *(void (**)(char *, void))(v1 + 16));
}

uint64_t sub_100053104(void *a1)
{
  return nullsub_1(*a1);
}

const char *sub_10005310C()
{
  return sub_10005312C(*v0);
}

const char *sub_10005312C(char a1)
{
  if (!a1) {
    return "EngagementDaemonAppData";
  }
  if (a1 == 1) {
    return "EngagementFamilyCircleDatasource";
  }
  return "EngagementNFCHandling";
}

uint64_t sub_100053188(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

unsigned char *sub_1000531C4(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_100053288(uint64_t a1)
{
  return sub_1000104E8(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24));
}

uint64_t sub_100053294()
{
  return sub_100005234();
}

const char *sub_10005329C()
{
  return "AppleMediaServices";
}

uint64_t sub_1000532C8()
{
  return sub_1000183D4();
}

void sub_100053318()
{
}

uint64_t sub_100053334(uint64_t *a1)
{
  return sub_10001B4C0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_100053340(void *a1)
{
  return sub_100007774(a1, *(double *)(v1 + 16));
}

uint64_t sub_10005334C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10005338C()
{
  return 0;
}

uint64_t sub_1000533BC()
{
  return sub_10002CBB4(v1 - 144, v0);
}

uint64_t sub_1000533D4(uint64_t a1)
{
  *(void *)(v2 + 296) = a1;
  *(void *)(v2 + 272) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_100053404(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022F490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005346C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v11 = sub_100042ADC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v16 = v11;
  char v17 = v12;
  sub_100043478(&qword_10022E5E8);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15)) {
    goto LABEL_5;
  }
  unint64_t v18 = sub_100042ADC(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_11:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v16 = v18;
LABEL_5:
  uint64_t v20 = *v5;
  if (v17)
  {
    uint64_t v21 = v20[7];
    uint64_t result = swift_unknownObjectRelease();
    *(void *)(v21 + 8 * v16) = a1;
  }
  else
  {
    sub_1000536C4(v16, a2, a3, a1, v20);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100053594(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v11 = sub_100042ADC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v16 = v11;
  char v17 = v12;
  sub_100043478(&qword_10022E5A0);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15)) {
    goto LABEL_5;
  }
  unint64_t v18 = sub_100042ADC(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_11:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v16 = v18;
LABEL_5:
  uint64_t v20 = *v5;
  if (v17) {
    return sub_100054990(a1, v20[7] + 8 * v16, &qword_10022DE00);
  }
  sub_10008D1F0(v16, a2, a3, a1, v20);
  return swift_bridgeObjectRetain();
}

unint64_t sub_1000536C4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  unint64_t v5 = (void *)(a5[6] + 16 * result);
  *unint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

void sub_100053710()
{
}

unint64_t sub_100053724()
{
  unint64_t result = qword_100230398;
  if (!qword_100230398)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100230398);
  }
  return result;
}

void sub_100053764(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void type metadata accessor for QualityOfService(uint64_t a1)
{
}

unint64_t sub_1000537C0()
{
  unint64_t result = qword_10022F470;
  if (!qword_10022F470)
  {
    type metadata accessor for OS_dispatch_queue.Attributes();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022F470);
  }
  return result;
}

unint64_t sub_100053810()
{
  unint64_t result = qword_10022F480;
  if (!qword_10022F480)
  {
    sub_10006026C((uint64_t *)&unk_100231D60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022F480);
  }
  return result;
}

uint64_t sub_100053868(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      unint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_10002B6DC((unint64_t *)&unk_100232870, &qword_10022D820);
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v7; ++i)
          {
            sub_100043478(&qword_10022D820);
            uint64_t v10 = sub_10015BEA0(v13, i, a3);
            id v12 = *v11;
            ((void (*)(void *, void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_100073028((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100053A18(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100053A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_100034F94(a1, a2, a3, (uint64_t)&unk_10022E5E0, (uint64_t)sub_100035018, a6, a7, a8, a9, a10);
}

uint64_t sub_100053A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_100053594(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v9;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100053B0C(uint64_t a1, uint64_t a2)
{
  return sub_100034150(a1, a2, &unk_10022E5E0, &type metadata accessor for OSSignpostIntervalState);
}

unint64_t sub_100053B2C()
{
  unint64_t result = qword_100230728;
  if (!qword_100230728)
  {
    sub_10006026C(&qword_100230720);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230728);
  }
  return result;
}

uint64_t sub_100053B80()
{
  return sub_100006428();
}

uint64_t sub_100053B8C(uint64_t *a1)
{
  return sub_100053B98(a1, *(void (**)(void *, void))(v1 + 16));
}

uint64_t sub_100053B98(uint64_t *a1, void (*a2)(void *, void))
{
  return sub_1000147F4(*a1, a2);
}

uint64_t sub_100053BA0(uint64_t a1, uint64_t a2)
{
  return sub_10000B754(a1, a2, (uint64_t)&unk_100211AA0, (uint64_t)&unk_100211AC8, (uint64_t)sub_1000E19E0, (uint64_t)&unk_100211AE0);
}

uint64_t sub_100053BD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_100053C10()
{
  uint64_t v0 = sub_1000441B8();
  sub_100044E90(v0);
  uint64_t v1 = sub_1000212C4();
  return sub_10000D9E4(v1, v2, v3);
}

uint64_t sub_100053C48(uint64_t a1)
{
  return sub_100053C50(a1);
}

uint64_t sub_100053C50(uint64_t a1)
{
  return sub_10002C050(a1);
}

uint64_t sub_100053C74(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for JSStackContext();
  sub_100044798(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  int v9 = *(unsigned __int8 *)(v1 + v8 + *(void *)(v7 + 64));
  return sub_100015038(a1, v1 + v8, v9);
}

id sub_100053D08()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSPrivacy();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t sub_100053D3C(uint64_t a1)
{
  return sub_10000F794(a1);
}

uint64_t type metadata accessor for JSMetrics()
{
  return self;
}

void *sub_100053D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000073E0(a1, a2, a3, *(void **)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t type metadata accessor for JSContent()
{
  return self;
}

uint64_t type metadata accessor for JSBacklog()
{
  return self;
}

id sub_100053E00()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSDevice();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for JSBag()
{
  uint64_t result = qword_10022FEC8;
  if (!qword_10022FEC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_100053E7C(uint64_t a1)
{
  unint64_t v2 = 0xE900000000000073;
  uint64_t v3 = 0x636974796C616E61;
  switch(*(unsigned char *)(a1 + 1))
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6C616E7265746E69;
      break;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x7379656E72756F6ALL;
      break;
    case 3:
      unint64_t v2 = 0xEF736E6F69746164;
      uint64_t v3 = 0x6E656D6D6F636572;
      break;
    default:
      break;
  }
  uint64_t v5 = (uint64_t *)&v1[OBJC_IVAR____TtC14amsengagementd5JSApp_name];
  *uint64_t v5 = v3;
  v5[1] = v2;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for JSApp();
  id v6 = objc_msgSendSuper2(&v8, "init");
  sub_100024DF0(a1);
  return v6;
}

uint64_t type metadata accessor for JSAMS()
{
  uint64_t result = qword_10022FC98;
  if (!qword_10022FC98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for Log()
{
  return self;
}

void sub_100053FD4()
{
}

void sub_100053FFC()
{
}

uint64_t sub_10005401C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  sub_100043478(&qword_10022FCB0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1000540B4@<X0>(uint64_t *a1@<X8>)
{
  return sub_10000EC84(a1);
}

uint64_t type metadata accessor for JSSubscriptionStatus()
{
  return self;
}

id sub_100054114()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSUserNotifications();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for XPCServiceProvider()
{
  return self;
}

uint64_t sub_10005416C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1000541D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void *))(v2 + 16))(*a1, a1 + 1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

id sub_100054230()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSServerDataCache();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t sub_100054264()
{
  return sub_1000058E0(*(void **)(v0 + 16));
}

uint64_t sub_10005426C()
{
  return sub_10000CD54(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_100054278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)(v4 + OBJC_IVAR____TtC14amsengagementd17EngagementService_currentEnginePerformer);
  uint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC14amsengagementd17EngagementService_currentEnginePerformer);
  uint64_t v7 = *(void *)(v4 + OBJC_IVAR____TtC14amsengagementd17EngagementService_currentEnginePerformer + 8);
  *uint64_t v5 = a1;
  v5[1] = a2;
  v5[2] = a3;
  v5[3] = a4;
  return sub_100053A18(v6, v7);
}

uint64_t sub_1000542A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseToken);
  *uint64_t v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for JSTreatmentStore()
{
  return self;
}

uint64_t sub_10005430C(uint64_t a1)
{
  return sub_10000794C(a1, v1[2], v1[3], v1[4], v1[5]) & 1;
}

uint64_t type metadata accessor for ActivityObserver()
{
  return self;
}

uint64_t sub_100054354()
{
  uint64_t v0 = type metadata accessor for Date();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100075468(0);
  static Date.now.getter();
  return sub_100006944((uint64_t)v2);
}

uint64_t sub_1000543D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100006734(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_1000543FC()
{
  unint64_t result = qword_100230710;
  if (!qword_100230710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230710);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JetpackMetadata.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        break;
      case 2:
        *(_WORD *)unint64_t result = a2;
        break;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = 0;
        break;
      case 2:
        *(_WORD *)unint64_t result = 0;
        break;
      case 3:
LABEL_19:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)unint64_t result = 0;
        break;
      default:
        return result;
    }
  }
  return result;
}

unint64_t sub_1000544E8()
{
  unint64_t result = qword_10022FA98;
  if (!qword_10022FA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022FA98);
  }
  return result;
}

uint64_t type metadata accessor for JSStackProvider()
{
  return self;
}

uint64_t sub_100054558(uint64_t a1, void *a2)
{
  return sub_1000158F4(a1, a2, *(void **)(v2 + 24), *(void *)(v2 + 32), (void *)(v2 + 40));
}

uint64_t sub_100054588(uint64_t a1)
{
  return sub_1000125D0(a1, *(void *)(v1 + 16), v1 + 24, *(void *)(v1 + 104));
}

id sub_100054598@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10000896C(a1 & 1, a2, v3 + 16, *(void **)(v3 + 96), a3);
}

uint64_t type metadata accessor for JSDatabaseStore()
{
  return self;
}

uint64_t sub_1000545CC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1000457D8();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t type metadata accessor for JSAccountStore()
{
  return self;
}

uint64_t sub_100054644()
{
  sub_100009894();
  sub_100045024();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SourceFetcher()
{
  uint64_t result = qword_100233080;
  if (!qword_100233080) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000546C4(void *__src, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  memcpy((void *)(v5 + 24), __src, 0x50uLL);
  sub_1000200CC(a2, v5 + OBJC_IVAR____TtC14amsengagementd13SourceFetcher_context);
  *(void *)(v5 + OBJC_IVAR____TtC14amsengagementd13SourceFetcher_urlSession) = a3;
  *(void *)(v5 + OBJC_IVAR____TtC14amsengagementd13SourceFetcher_process) = a4;
  *(void *)(v5 + 16) = a5;
  return v5;
}

id sub_100054768()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSClientDemo();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t sub_10005479C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022FCB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100054804(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022FCB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100054890(id *a1)
{
  return sub_100007840(a1) & 1;
}

uint64_t type metadata accessor for JSMarketing()
{
  uint64_t result = qword_1002303F0;
  if (!qword_1002303F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000548F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Date();
  sub_100044798(v5);
  sub_100051578();
  uint64_t v10 = *(void *)(v2 + v9);
  return sub_10001485C(a1, a2, v6, v7, v2 + v8, v10);
}

id sub_100054978(uint64_t a1)
{
  return sub_10000A178(a1, v1[2], v1[3], v1[4]);
}

id sub_100054984(uint64_t a1)
{
  return sub_100009278(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100054990(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100043478(a3);
  sub_100043B1C();
  uint64_t v4 = sub_10008E7B0();
  v5(v4);
  return a2;
}

uint64_t sub_1000549E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022DE00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100054A4C(uint64_t a1, uint64_t a2)
{
  return sub_10000DEC4(a1, a2);
}

uint64_t sub_100054A98(unsigned __int8 *a1)
{
  return sub_100054AB4(a1, *(uint64_t (**)(uint64_t, unsigned __int8 *))(v1 + 16));
}

uint64_t sub_100054AB4(unsigned __int8 *a1, uint64_t (*a2)(uint64_t, unsigned __int8 *))
{
  uint64_t v4 = *a1;
  uint64_t v5 = sub_100043478(&qword_1002306F8);
  return a2(v4, &a1[*(int *)(v5 + 48)]);
}

id sub_100054B44()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSLocation();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_100054B9C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSLocalize();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_100054BD0(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC14amsengagementd10JSFollowUp____lazy_storage___dateFormatter] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14amsengagementd10JSFollowUp_accountStore] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for JSFollowUp();
  return objc_msgSendSuper2(&v3, "init");
}

void sub_100055F08(uint64_t a1, char a2, void *a3)
{
  id v4 = a3;
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = +[AMSLogConfig sharedAccountsDaemonConfig];
    if (!v5)
    {
      uint64_t v5 = +[AMSLogConfig sharedConfig];
    }
    uint64_t v6 = [v5 OSLogObject];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = objc_opt_class();
      uint64_t v8 = AMSLogKey();
      int v9 = 138543874;
      uint64_t v10 = v7;
      __int16 v11 = 2114;
      id v12 = v8;
      __int16 v13 = 2114;
      id v14 = v4;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%{public}@: [%{public}@] Error posting notification: %{public}@", (uint8_t *)&v9, 0x20u);
    }
  }
}

id sub_10005656C()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_100235140;
  uint64_t v7 = qword_100235140;
  if (!qword_100235140)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1000577AC;
    v3[3] = &unk_10020B840;
    v3[4] = &v4;
    sub_1000577AC((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_100056638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100056650(uint64_t a1, void *a2)
{
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  _OWORD v16[2] = sub_1000568D8;
  v16[3] = &unk_10020B738;
  id v17 = *(id *)(a1 + 32);
  uint64_t v4 = objc_msgSend(a2, "ams_firstObjectPassingTest:", v16);
  uint64_t v5 = +[AMSLogConfig sharedAccountsDaemonConfig];
  uint64_t v6 = (void *)v5;
  if (v4)
  {
    if (!v5)
    {
      uint64_t v6 = +[AMSLogConfig sharedConfig];
    }
    uint64_t v7 = [v6 OSLogObject];
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = objc_opt_class();
      int v9 = AMSLogKey();
      uint64_t v10 = [v4 familyID];
      *(_DWORD *)buf = 138543874;
      uint64_t v19 = v8;
      __int16 v20 = 2114;
      uint64_t v21 = v9;
      __int16 v22 = 2114;
      unint64_t v23 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%{public}@: [%{public}@] Arcade entitlement found, user is a subscriber. Entitlement.familyID = %{public}@", buf, 0x20u);
    }
    [*(id *)(a1 + 48) finishWithResult:&__kCFBooleanTrue];
  }
  else
  {
    if (!v5)
    {
      uint64_t v6 = +[AMSLogConfig sharedConfig];
    }
    __int16 v11 = [v6 OSLogObject];
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = objc_opt_class();
      __int16 v13 = AMSLogKey();
      *(_DWORD *)buf = 138543618;
      uint64_t v19 = v12;
      __int16 v20 = 2114;
      uint64_t v21 = v13;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%{public}@: [%{public}@] No Arcade entitlement found, user is not subscribed.", buf, 0x16u);
    }
    id v14 = *(void **)(a1 + 48);
    Swift::Int v15 = AMSError();
    [v14 finishWithError:v15];
  }
}

uint64_t sub_1000568D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 familyID];
  uint64_t v5 = [v4 stringValue];
  unsigned int v6 = [v5 isEqualToString:*(void *)(a1 + 32)];

  uint64_t v7 = [v3 expiryDate];

  uint64_t v8 = +[NSDate date];
  id v9 = [v7 compare:v8];

  if (v9 == (id)-1) {
    return 0;
  }
  else {
    return v6;
  }
}

void sub_100056B48(uint64_t a1, void *a2)
{
  id v3 = objc_msgSend(a2, "ams_firstObjectPassingTest:", &stru_10020B7A0);
  uint64_t v4 = +[AMSLogConfig sharedAccountsDaemonConfig];
  uint64_t v5 = (void *)v4;
  if (v3)
  {
    if (!v4)
    {
      uint64_t v5 = +[AMSLogConfig sharedConfig];
    }
    unsigned int v6 = [v5 OSLogObject];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = objc_opt_class();
      uint64_t v8 = AMSLogKey();
      id v9 = [v3 familyID];
      int v15 = 138543874;
      uint64_t v16 = v7;
      __int16 v17 = 2114;
      unint64_t v18 = v8;
      __int16 v19 = 2114;
      __int16 v20 = v9;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%{public}@: [%{public}@] Fitness+ entitlement found, user is a subscriber. Entitlement.familyID = %{public}@", (uint8_t *)&v15, 0x20u);
    }
    [*(id *)(a1 + 40) finishWithResult:&__kCFBooleanTrue];
  }
  else
  {
    if (!v4)
    {
      uint64_t v5 = +[AMSLogConfig sharedConfig];
    }
    uint64_t v10 = [v5 OSLogObject];
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = objc_opt_class();
      uint64_t v12 = AMSLogKey();
      int v15 = 138543618;
      uint64_t v16 = v11;
      __int16 v17 = 2114;
      unint64_t v18 = v12;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%{public}@: [%{public}@] No Fitness+ entitlement found, user is not subscribed.", (uint8_t *)&v15, 0x16u);
    }
    __int16 v13 = *(void **)(a1 + 40);
    id v14 = AMSError();
    [v13 finishWithError:v14];
  }
}

BOOL sub_100056D78(id a1, ASDSubscriptionEntitlement *a2)
{
  objc_super v2 = [(ASDSubscriptionEntitlement *)a2 expiryDate];
  id v3 = +[NSDate date];
  BOOL v4 = [v2 compare:v3] != (id)-1;

  return v4;
}

void sub_100057038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100057058(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 statusType];
  uint64_t v5 = +[AMSLogConfig sharedAccountsDaemonConfig];
  unsigned int v6 = (void *)v5;
  if (v4 == (id)1)
  {
    if (!v5)
    {
      unsigned int v6 = +[AMSLogConfig sharedConfig];
    }
    uint64_t v7 = [v6 OSLogObject];
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = objc_opt_class();
      id v9 = AMSLogKey();
      uint64_t v10 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v3 statusType]);
      int v17 = 138543874;
      uint64_t v18 = v8;
      __int16 v19 = 2114;
      __int16 v20 = v9;
      __int16 v21 = 2114;
      __int16 v22 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%{public}@: [%{public}@] Music subscription enabled, user is a subscriber. StatusType = %{public}@", (uint8_t *)&v17, 0x20u);
    }
    [*(id *)(a1 + 40) finishWithResult:&__kCFBooleanTrue];
  }
  else
  {
    if (!v5)
    {
      unsigned int v6 = +[AMSLogConfig sharedConfig];
    }
    uint64_t v11 = [v6 OSLogObject];
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = objc_opt_class();
      __int16 v13 = AMSLogKey();
      id v14 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v3 statusType]);
      int v17 = 138543874;
      uint64_t v18 = v12;
      __int16 v19 = 2114;
      __int16 v20 = v13;
      __int16 v21 = 2114;
      __int16 v22 = v14;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%{public}@: [%{public}@] Music subscription not enabled, user is not subscribed. StatusType = %{public}@", (uint8_t *)&v17, 0x20u);
    }
    int v15 = *(void **)(a1 + 40);
    uint64_t v16 = AMSError();
    [v15 finishWithError:v16];
  }
}

void sub_100057520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100057540(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = [v3 isTVPlusSubscriber];
  uint64_t v5 = +[AMSLogConfig sharedAccountsDaemonConfig];
  unsigned int v6 = (void *)v5;
  if (v4)
  {
    if (!v5)
    {
      unsigned int v6 = +[AMSLogConfig sharedConfig];
    }
    uint64_t v7 = [v6 OSLogObject];
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = objc_opt_class();
      id v9 = AMSLogKey();
      uint64_t v10 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [v3 isTVPlusSubscriber]);
      int v17 = 138543874;
      uint64_t v18 = v8;
      __int16 v19 = 2114;
      __int16 v20 = v9;
      __int16 v21 = 2114;
      __int16 v22 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%{public}@: [%{public}@] TV subscription enabled, user is a subscriber. SubscriptionData.isTVPlusSubscriber = %{public}@", (uint8_t *)&v17, 0x20u);
    }
    [*(id *)(a1 + 40) finishWithResult:&__kCFBooleanTrue];
  }
  else
  {
    if (!v5)
    {
      unsigned int v6 = +[AMSLogConfig sharedConfig];
    }
    uint64_t v11 = [v6 OSLogObject];
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = objc_opt_class();
      __int16 v13 = AMSLogKey();
      id v14 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [v3 isTVPlusSubscriber]);
      int v17 = 138543874;
      uint64_t v18 = v12;
      __int16 v19 = 2114;
      __int16 v20 = v13;
      __int16 v21 = 2114;
      __int16 v22 = v14;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%{public}@: [%{public}@] TV subscription not enabled, user is not subscribed. SubscriptionData.isTVPlusSubscriber = %{public}@", (uint8_t *)&v17, 0x20u);
    }
    int v15 = *(void **)(a1 + 40);
    uint64_t v16 = AMSError();
    [v15 finishWithError:v16];
  }
}

Class sub_1000577AC(uint64_t a1)
{
  v3[0] = 0;
  if (!qword_100235148)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = (void *)3221225472;
    v3[3] = sub_1000578F0;
    v3[4] = &unk_10020B878;
    void v3[5] = v3;
    long long v4 = off_10020B860;
    uint64_t v5 = 0;
    qword_100235148 = _sl_dlopen();
    if (!qword_100235148)
    {
      abort_report_np();
LABEL_8:
      sub_1001B9F48();
    }
    if (v3[0]) {
      free(v3[0]);
    }
  }
  Class result = objc_getClass("ASDSubscriptionEntitlements");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    goto LABEL_8;
  }
  qword_100235140 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1000578F0()
{
  uint64_t result = _sl_dlopen();
  qword_100235148 = result;
  return result;
}

Class sub_100057964(uint64_t a1)
{
  v3[0] = 0;
  if (!qword_100235158)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = (void *)3221225472;
    v3[3] = sub_100057AA8;
    v3[4] = &unk_10020B878;
    void v3[5] = v3;
    long long v4 = off_10020B898;
    uint64_t v5 = 0;
    qword_100235158 = _sl_dlopen();
    if (!qword_100235158)
    {
      abort_report_np();
LABEL_8:
      sub_1001B9F70();
    }
    if (v3[0]) {
      free(v3[0]);
    }
  }
  Class result = objc_getClass("ICMusicSubscriptionStatusController");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    goto LABEL_8;
  }
  qword_100235150 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_100057AA8()
{
  uint64_t result = _sl_dlopen();
  qword_100235158 = result;
  return result;
}

Class sub_100057B1C(uint64_t a1)
{
  v3[0] = 0;
  if (!qword_100235168)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = (void *)3221225472;
    v3[3] = sub_100057C60;
    v3[4] = &unk_10020B878;
    void v3[5] = v3;
    long long v4 = off_10020B8B0;
    uint64_t v5 = 0;
    qword_100235168 = _sl_dlopen();
    if (!qword_100235168)
    {
      abort_report_np();
LABEL_8:
      sub_1001B9F98();
    }
    if (v3[0]) {
      free(v3[0]);
    }
  }
  Class result = objc_getClass("WLKSubscriptionStore");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    goto LABEL_8;
  }
  qword_100235160 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_100057C60()
{
  uint64_t result = _sl_dlopen();
  qword_100235168 = result;
  return result;
}

id sub_100057CD4()
{
  return +[NSBundle bundleWithPath:@"/System/Library/PrivateFrameworks/AppleMediaServicesUI.framework"];
}

BOOL sub_100057CE8()
{
  return MKBDeviceUnlockedSinceBoot() != 0;
}

uint64_t start()
{
  uint64_t v0 = objc_opt_new();
  [v0 runUntilIdleExit];

  return 0;
}

void sub_100057DA0(void *a1)
{
  id v2 = objc_begin_catch(a1);
  if (v1) {
    *id v1 = v2;
  }
  objc_end_catch();
  JUMPOUT(0x100057D78);
}

uint64_t sub_100057E18(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100040F0C(a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100057E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100043974(a1, a2, a3, a4);
  if ((v9 & 1) == 0) {
    return 0;
  }
  if (v7)
  {
    if (!v6) {
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001A3B6C();
    sub_10004FBDC();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  if (v5 == 3)
  {
    if (v4 == 3) {
      return 1;
    }
  }
  else if (v4 != 3)
  {
    if (v5 == 2)
    {
      if (v4 != 2) {
        return 0;
      }
    }
    else if (v4 == 2 || ((((v5 & 1) == 0) ^ v4) & 1) == 0)
    {
      return 0;
    }
    if ((v5 & 0xFF00) == 0x200)
    {
      if (BYTE1(v4) == 2) {
        return 1;
      }
    }
    else if (BYTE1(v4) != 2 && ((((v5 & 0x100) == 0) ^ ((unsigned __int16)(v4 & 0x100) >> 8)) & 1) != 0)
    {
      return 1;
    }
  }
  return 0;
}

void sub_100057F8C()
{
}

uint64_t sub_100057FB4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x736B6E696C707061 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

Swift::Int sub_10005803C()
{
  return Hasher._finalize()();
}

uint64_t sub_100058080()
{
  return 0;
}

uint64_t sub_10005808C()
{
  return 0x736B6E696C707061;
}

Swift::Int sub_1000580B0()
{
  return Hasher._finalize()();
}

uint64_t sub_1000580F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100057FB4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100058120()
{
  return sub_100058080();
}

uint64_t sub_10005813C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100049CD4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100058168(uint64_t a1)
{
  unint64_t v2 = sub_10006013C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000581A4(uint64_t a1)
{
  unint64_t v2 = sub_10006013C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1000581E0()
{
  sub_100044DC4();
  unint64_t v2 = v1;
  uint64_t v3 = sub_100043478(&qword_10022CC28);
  sub_100020DEC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10002D2D4();
  sub_100049788(v2, v2[3]);
  sub_10006013C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100060188();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  sub_100020E2C();
}

Swift::Int sub_1000582F0()
{
  sub_100047EFC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100040F0C((uint64_t)v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10005835C(uint64_t a1)
{
  sub_100043478(&qword_10022CD78);
  sub_100020DEC();
  __chkstk_darwin(v3);
  sub_10004A47C();
  sub_10006013C();
  sub_1000477BC();
  if (!v1)
  {
    sub_100060708();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v4 = sub_10004CD4C();
    v5(v4);
  }
  sub_10004377C(a1);
  return sub_1000225EC();
}

void sub_100058474(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1000225EC();
  sub_10005E6D8(v6, v7);
  swift_bridgeObjectRelease();
  if (a3)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_10004A01C();
    sub_10005EB2C(v8, v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  if (a4 == 3
    || ((Hasher._combine(_:)(1u), a4 != 2) ? (Hasher._combine(_:)(1u), Swift::UInt8 v10 = a4 & 1) : (Swift::UInt8 v10 = 0),
        Hasher._combine(_:)(v10),
        (a4 & 0xFF00) == 0x200))
  {
    LOBYTE(v11) = 0;
  }
  else
  {
    Hasher._combine(_:)(1u);
    int v11 = (a4 >> 8) & 1;
  }
  Hasher._combine(_:)(v11);
}

uint64_t sub_100058548(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736C6961746564 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001001CA860 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73746C7561666564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100058694()
{
  return 3;
}

uint64_t sub_10005869C(char a1)
{
  if (!a1) {
    return 0x736C6961746564;
  }
  if (a1 == 1) {
    return 0xD000000000000015;
  }
  return 0x73746C7561666564;
}

void sub_1000586F8()
{
  sub_100044DC4();
  uint64_t v10 = v1;
  uint64_t v3 = v2;
  uint64_t v4 = sub_100043478(&qword_10022CEA8);
  sub_100020DEC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100049788(v3, v3[3]);
  sub_1000617D0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v11 = 0;
  sub_100043478(&qword_10022CEB8);
  sub_100061AB4((uint64_t)&unk_10022CEC0);
  sub_10004A370();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v0)
  {
    char v11 = 1;
    sub_100043478(&qword_10022CED0);
    sub_100061868();
    sub_10004A370();
    sub_10004BE58();
    char v11 = 2;
    sub_100060430();
    sub_10004A370();
    sub_10004BE58();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  sub_100020E2C();
}

Swift::Int sub_1000588C0()
{
  sub_100047EFC();
  sub_100040F0C((uint64_t)v1);
  return Hasher._finalize()();
}

void sub_10005890C()
{
  sub_100044DC4();
  uint64_t v2 = v1;
  sub_100043478(&qword_10022CF10);
  sub_100020DEC();
  __chkstk_darwin(v3);
  sub_10004A47C();
  sub_1000617D0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    sub_10004377C(v2);
  }
  else
  {
    sub_100043478(&qword_10022CEB8);
    sub_100061AB4((uint64_t)&unk_10022CF18);
    sub_10004C77C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100043478(&qword_10022CED0);
    sub_100061A00();
    swift_bridgeObjectRetain();
    sub_10004C77C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10006034C();
    swift_bridgeObjectRetain();
    sub_10004C77C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v4 = sub_100047448();
    v5(v4);
    sub_10004377C(v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_100020E2C();
}

void sub_100058B84()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = (__n128 *)sub_10004A01C();
  sub_10005E9DC(v1, v2);
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_10004A01C();
    sub_10005EEC8(v3, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  unsigned int v5 = *(unsigned __int16 *)(v0 + 16);
  int v6 = *(_WORD *)(v0 + 16);
  if (v6 == 3
    || ((Hasher._combine(_:)(1u), v6 != 2) ? (Hasher._combine(_:)(1u), Swift::UInt8 v7 = v5 & 1) : (Swift::UInt8 v7 = 0),
        Hasher._combine(_:)(v7),
        (v5 & 0xFF00) == 0x200))
  {
    LOBYTE(v8) = 0;
  }
  else
  {
    Hasher._combine(_:)(1u);
    int v8 = (v5 >> 8) & 1;
  }
  Hasher._combine(_:)(v8);
  if (*(unsigned char *)(v0 + 18) == 2) {
    LOBYTE(v5) = 0;
  }
  else {
    sub_100049F38();
  }
  Hasher._combine(_:)(v5);
  if (*(unsigned char *)(v0 + 19) == 2) {
    LOBYTE(v5) = 0;
  }
  else {
    sub_100049F38();
  }
  Hasher._combine(_:)(v5);
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Swift::UInt v9 = *(void *)(v0 + 24);
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v9);
  }
}

uint64_t sub_100058CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10004A4A0(a1);
  if ((sub_1001A270C(v5, *v6) & 1) == 0) {
    return 0;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  if (*(void *)(v2 + 8))
  {
    if (!v7) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_1001A3210(v8, v7);
    sub_10004FBDC();
    swift_bridgeObjectRelease();
    if ((v3 & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  __int16 v9 = *(_WORD *)(v2 + 16);
  unsigned int v10 = *(unsigned __int16 *)(a2 + 16);
  int v11 = *(_WORD *)(a2 + 16);
  if (v9 == 3)
  {
    if (v11 != 3) {
      return 0;
    }
  }
  else
  {
    if (v11 == 3) {
      return 0;
    }
    int v13 = *(_WORD *)(a2 + 16);
    if (v9 == 2)
    {
      if (v13 != 2) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      if (v13 == 2 || ((((v9 & 1) == 0) ^ v10) & 1) == 0) {
        return result;
      }
    }
    if ((v9 & 0xFF00) == 0x200)
    {
      if (v10 >> 8 != 2) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      BOOL v19 = (v9 & 0x100) == 0;
      if (v10 >> 8 == 2 || ((v19 ^ ((unsigned __int16)(v10 & 0x100) >> 8)) & 1) == 0) {
        return result;
      }
    }
  }
  if (*(unsigned char *)(v2 + 18) == 2)
  {
    if (*(unsigned char *)(a2 + 18) != 2) {
      return 0;
    }
  }
  else
  {
    uint64_t result = sub_100044018();
    if (v14 == 2 || ((v15 ^ v14) & 1) == 0) {
      return result;
    }
  }
  if (*(unsigned char *)(v2 + 19) == 2)
  {
    if (*(unsigned char *)(a2 + 19) != 2) {
      return 0;
    }
    goto LABEL_30;
  }
  uint64_t result = sub_100044018();
  if (v16 != 2 && ((v17 ^ v16) & 1) != 0)
  {
LABEL_30:
    char v18 = *(unsigned char *)(a2 + 32);
    if ((*(unsigned char *)(v2 + 32) & 1) == 0)
    {
      if (*(void *)(v2 + 24) != *(void *)(a2 + 24)) {
        char v18 = 1;
      }
      return (v18 & 1) == 0;
    }
    return (*(unsigned char *)(a2 + 32) & 1) != 0;
  }
  return result;
}

BOOL static SQLite3Status.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void SQLite3Status.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

uint64_t sub_100058EB8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x734449707061 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E656E6F706D6F63 && a2 == 0xEA00000000007374;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x73746C7561666564 && a2 == 0xE800000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6E45737961776C61 && a2 == 0xED000064656C6261;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x80000001001CA840 {
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        }
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x65766974616C6572 && a2 == 0xED0000726564724FLL)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v10) {
            return 5;
          }
          else {
            return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_100059170()
{
  return 6;
}

Swift::Int sub_100059178(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

unint64_t sub_1000591B8(char a1)
{
  unint64_t result = 0x734449707061;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E656E6F706D6F63;
      break;
    case 2:
      unint64_t result = 0x73746C7561666564;
      break;
    case 3:
      unint64_t result = 0x6E45737961776C61;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x65766974616C6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000592A0()
{
  sub_100043478(&qword_10022CCC0);
  sub_100020DEC();
  __chkstk_darwin(v2);
  sub_10002D2B0();
  sub_100060220();
  sub_100043ADC();
  uint64_t v8 = *v0;
  sub_100043478(&qword_10022CC88);
  sub_100061AB4((uint64_t)&unk_10022CCC8);
  sub_100045CAC();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    sub_1000437CC();
    sub_1000437CC();
    sub_100043478(&qword_10022CCA0);
    sub_100061AB4((uint64_t)&unk_10022CCE0);
    sub_100045CAC();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_1000437CC();
    sub_1000437CC();
    sub_100060430();
    sub_10004BE58();
    uint64_t v3 = *((unsigned __int8 *)v0 + 18);
    LOBYTE(v8) = 3;
    sub_100048AFC(v3, (uint64_t)&v8);
    uint64_t v4 = *((unsigned __int8 *)v0 + 19);
    LOBYTE(v8) = 4;
    sub_100048AFC(v4, (uint64_t)&v8);
    LOBYTE(v8) = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  uint64_t v5 = sub_100046BEC();
  return v6(v5);
}

Swift::Int sub_10005950C()
{
  return Hasher._finalize()();
}

void sub_100059544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100044DC4();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  sub_100043478(&qword_10022CC78);
  sub_100020DEC();
  __chkstk_darwin(v15);
  sub_10002D2D4();
  sub_100049788(v12, v12[3]);
  sub_100060220();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v10)
  {
    sub_10004377C((uint64_t)v12);
  }
  else
  {
    sub_100043478(&qword_10022CC88);
    sub_100061AB4((uint64_t)&unk_10022CC90);
    sub_10004C77C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100043478(&qword_10022CCA0);
    sub_100061AB4((uint64_t)&unk_10022CCA8);
    swift_bridgeObjectRetain();
    sub_10004C77C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10006034C();
    swift_bridgeObjectRetain();
    sub_10004C77C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    char v21 = sub_100046C04(3);
    char v20 = sub_100046C04(4);
    uint64_t v16 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    char v18 = v17;
    sub_10002D2A0();
    v19();
    sub_10004377C((uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v14 = a10;
    *(void *)(v14 + 8) = a10;
    *(_WORD *)(v14 + 16) = a10;
    *(unsigned char *)(v14 + 18) = v21;
    *(unsigned char *)(v14 + 19) = v20;
    *(void *)(v14 + 24) = v16;
    *(unsigned char *)(v14 + 32) = v18 & 1;
  }
  sub_100020E2C();
}

unint64_t sub_10005989C(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020B9D8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

uint64_t sub_1000598EC(char a1)
{
  uint64_t result = 47;
  switch(a1)
  {
    case 1:
      uint64_t result = 63;
      break;
    case 2:
      uint64_t result = 35;
      break;
    case 3:
      uint64_t result = sub_1000497F0();
      break;
    case 4:
      uint64_t result = sub_1000208A4();
      break;
    case 5:
      uint64_t result = sub_10004D17C();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10005995C(char a1)
{
  uint64_t result = 47;
  switch(a1)
  {
    case 1:
      uint64_t result = 63;
      break;
    case 2:
      uint64_t result = 35;
      break;
    case 3:
      uint64_t result = sub_1000497F0();
      break;
    case 4:
      uint64_t result = sub_1000208A4();
      break;
    case 5:
      uint64_t result = sub_10004D17C();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000599CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10005835C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(_WORD *)(a2 + 16) = v6;
  }
  return result;
}

void sub_1000599FC()
{
}

Swift::Int sub_100059A1C()
{
  return sub_1000582F0();
}

uint64_t sub_100059A28(uint64_t a1)
{
  return sub_100057E18(a1);
}

Swift::Int sub_100059A34()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unsigned int v3 = *(unsigned __int16 *)(v0 + 16);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100058474((uint64_t)v5, v1, v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100059AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100059C58(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_100057E80);
}

uint64_t sub_100059AC8()
{
  return sub_10005869C(*v0);
}

uint64_t sub_100059AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100058548(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100059AF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100058694();
  *a1 = result;
  return result;
}

uint64_t sub_100059B20(uint64_t a1)
{
  unint64_t v2 = sub_1000617D0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100059B5C(uint64_t a1)
{
  unint64_t v2 = sub_1000617D0();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100059B98(uint64_t a1@<X8>)
{
  sub_10005890C();
  if (!v1)
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(_WORD *)(a1 + 16) = v5;
  }
}

void sub_100059BC8()
{
}

Swift::Int sub_100059BE8()
{
  return sub_1000588C0();
}

void sub_100059BF4(uint64_t a1)
{
  sub_100058474(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int16 *)(v1 + 16));
}

Swift::Int sub_100059C00()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unsigned int v3 = *(unsigned __int16 *)(v0 + 16);
  Hasher.init(_seed:)();
  sub_100058474((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_100059C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return a5(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int16 *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned __int16 *)(a2 + 16));
}

BOOL sub_100059C7C(char *a1, char *a2)
{
  return static SQLite3Status.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_100059C88()
{
  return sub_100059178(*v0);
}

void sub_100059CA4(uint64_t a1)
{
  SQLite3Status.hash(into:)(a1, *v1);
}

Swift::Int sub_100059CAC()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

unint64_t sub_100059CF0()
{
  return sub_1000591B8(*v0);
}

uint64_t sub_100059CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100058EB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100059D20()
{
  return sub_100058080();
}

uint64_t sub_100059D40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100059170();
  *a1 = result;
  return result;
}

uint64_t sub_100059D68(uint64_t a1)
{
  unint64_t v2 = sub_100060220();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100059DA4(uint64_t a1)
{
  unint64_t v2 = sub_100060220();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100059DE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  sub_100059544(a1, a2, a3, a4, a5, a6, a7, a8, v12, v13);
  if (!v9)
  {
    double result = *(double *)&v13;
    *(_OWORD *)a9 = v13;
    *(_OWORD *)(a9 + 16) = v14;
    *(unsigned char *)(a9 + 32) = v15;
  }
  return result;
}

uint64_t sub_100059E28()
{
  return sub_1000592A0();
}

Swift::Int sub_100059E6C()
{
  return Hasher._finalize()();
}

uint64_t sub_100059EAC(char *a1, char *a2)
{
  return sub_10007D2CC(*a1, *a2);
}

Swift::Int sub_100059EB8()
{
  return sub_10005A0A8(*v0, (void (*)(uint64_t))sub_1000598EC);
}

Swift::Int sub_100059EE8()
{
  return sub_10005A03C();
}

Swift::Int sub_100059F0C(uint64_t a1)
{
  return sub_10005A134(a1, (void (*)(unsigned char *, uint64_t))sub_10005A4B0);
}

Swift::Int sub_100059F24()
{
  return sub_10005AD68();
}

Swift::Int sub_100059F30()
{
  return Hasher._finalize()();
}

Swift::Int sub_100059F70(uint64_t a1)
{
  return sub_10005A0A8(a1, (void (*)(uint64_t))sub_100091934);
}

Swift::Int sub_100059F88(uint64_t a1)
{
  return sub_10005A0A8(a1, (void (*)(uint64_t))sub_1000A2B78);
}

Swift::Int sub_100059FA0()
{
  return sub_10004AA58();
}

Swift::Int sub_100059FB8()
{
  return sub_10004AA58();
}

Swift::Int sub_100059FD0(uint64_t a1)
{
  return sub_10005A0A8(a1, (void (*)(uint64_t))sub_1000D6658);
}

Swift::Int sub_100059FE8()
{
  return sub_10005ACD8();
}

Swift::Int sub_100059FF4()
{
  return sub_10005AE34();
}

Swift::Int sub_10005A000()
{
  return sub_10005B00C();
}

Swift::Int sub_10005A00C(uint64_t a1)
{
  return sub_10005A0A8(a1, (void (*)(uint64_t))sub_100167FD8);
}

Swift::Int sub_10005A024()
{
  return sub_10004AA58();
}

Swift::Int sub_10005A03C()
{
  return Hasher._finalize()();
}

Swift::Int sub_10005A078(uint64_t a1)
{
  return sub_10005A0A8(a1, (void (*)(uint64_t))sub_10018A588);
}

Swift::Int sub_10005A090(uint64_t a1)
{
  return sub_10005A0A8(a1, (void (*)(uint64_t))sub_10018A660);
}

Swift::Int sub_10005A0A8(uint64_t a1, void (*a2)(uint64_t))
{
  return Hasher._finalize()();
}

Swift::Int sub_10005A0F8()
{
  return sub_10005AEC8();
}

Swift::Int sub_10005A104()
{
  return sub_10005AF90();
}

Swift::Int sub_10005A110()
{
  return sub_10005AF2C();
}

Swift::Int sub_10005A11C(uint64_t a1)
{
  return sub_10005A134(a1, (void (*)(unsigned char *, uint64_t))sub_10005A310);
}

Swift::Int sub_10005A134(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_100047EFC();
  a2(v5, a1);
  return Hasher._finalize()();
}

Swift::Int sub_10005A17C(Swift::UInt a1)
{
  return Hasher._finalize()();
}

uint64_t sub_10005A1C4()
{
  return sub_10005A3C4();
}

void sub_10005A1CC(int a1, Swift::UInt a2)
{
}

uint64_t sub_10005A1F4()
{
  return sub_10004DBE8();
}

uint64_t sub_10005A20C()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005A310()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005A3B4()
{
  return String.hash(into:)();
}

uint64_t sub_10005A3C4()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005A4B0()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005A588()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005A5F8()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005A6C4()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005A724()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005A784()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005A7E4()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005A8CC()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005A9A0()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005A9F0()
{
  return sub_10004DBE8();
}

uint64_t sub_10005AA08()
{
  return sub_10004DBE8();
}

uint64_t sub_10005AA20(uint64_t a1, char a2)
{
  sub_100167FD8(a2);
  sub_100020E08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005AA60(uint64_t a1, char a2)
{
  if (!a2) {
    sub_100035C58();
  }
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005AAE0()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005AC38()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_10005ACA8(uint64_t a1)
{
  return sub_10005B168(a1, *v1, (void (*)(uint64_t))sub_1000598EC);
}

Swift::Int sub_10005ACD8()
{
  return Hasher._finalize()();
}

Swift::Int sub_10005AD50(uint64_t a1, uint64_t a2)
{
  return sub_10005B168(a1, a2, (void (*)(uint64_t))sub_100091934);
}

Swift::Int sub_10005AD68()
{
  sub_1000514E8();
  if (!v0) {
    sub_100035C58();
  }
  sub_100040BE0();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_10005ADEC(uint64_t a1, uint64_t a2)
{
  return sub_10005B168(a1, a2, (void (*)(uint64_t))sub_100167FD8);
}

Swift::Int sub_10005AE04()
{
  return sub_100046108();
}

Swift::Int sub_10005AE1C()
{
  return sub_100046108();
}

Swift::Int sub_10005AE34()
{
  return Hasher._finalize()();
}

Swift::Int sub_10005AE98(uint64_t a1, uint64_t a2)
{
  return sub_10005B168(a1, a2, (void (*)(uint64_t))sub_10018A588);
}

Swift::Int sub_10005AEB0(uint64_t a1, uint64_t a2)
{
  return sub_10005B168(a1, a2, (void (*)(uint64_t))sub_10018A660);
}

Swift::Int sub_10005AEC8()
{
  return Hasher._finalize()();
}

Swift::Int sub_10005AF2C()
{
  return Hasher._finalize()();
}

Swift::Int sub_10005AF90()
{
  return Hasher._finalize()();
}

Swift::Int sub_10005AFF4(uint64_t a1, uint64_t a2)
{
  return sub_10005B168(a1, a2, (void (*)(uint64_t))sub_1000A2B78);
}

Swift::Int sub_10005B00C()
{
  return Hasher._finalize()();
}

Swift::Int sub_10005B080(uint64_t a1, unsigned __int8 a2)
{
  return Hasher._finalize()();
}

Swift::Int sub_10005B0C4(uint64_t a1, uint64_t a2)
{
  return sub_10005B104(a1, a2, (void (*)(unsigned char *, uint64_t))sub_10005A4B0);
}

Swift::Int sub_10005B0DC()
{
  return sub_10005B1D4();
}

Swift::Int sub_10005B0EC(uint64_t a1, uint64_t a2)
{
  return sub_10005B104(a1, a2, (void (*)(unsigned char *, uint64_t))sub_10005A310);
}

Swift::Int sub_10005B104(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  Hasher.init(_seed:)();
  a3(v6, a2);
  return Hasher._finalize()();
}

Swift::Int sub_10005B150(uint64_t a1, uint64_t a2)
{
  return sub_10005B168(a1, a2, (void (*)(uint64_t))sub_1000D6658);
}

Swift::Int sub_10005B168(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  return Hasher._finalize()();
}

Swift::Int sub_10005B1BC()
{
  return sub_100046108();
}

Swift::Int sub_10005B1D4()
{
  return Hasher._finalize()();
}

Swift::Int sub_10005B214(uint64_t a1, Swift::UInt a2)
{
  return Hasher._finalize()();
}

void sub_10005B258()
{
  if (*(void *)(v0 + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  if (*(void *)(v0 + 16))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_10004A01C();
    sub_10005ECF4(v1, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  uint64_t v3 = *(void *)(v0 + 32);
  if (v3)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  if (*(unsigned char *)(v0 + 40) == 2) {
    LOBYTE(v3) = 0;
  }
  else {
    sub_100049F38();
  }
  Hasher._combine(_:)(v3);
  if (*(unsigned char *)(v0 + 41) == 2) {
    LOBYTE(v3) = 0;
  }
  else {
    sub_100049F38();
  }
  Hasher._combine(_:)(v3);
  int v4 = *(unsigned __int8 *)(v0 + 42);
  if (v4 == 2)
  {
    Swift::UInt8 v5 = 0;
  }
  else
  {
    Swift::UInt8 v5 = v4 & 1;
    Hasher._combine(_:)(1u);
  }
  Hasher._combine(_:)(v5);
}

uint64_t sub_10005B3A0()
{
  sub_100042700();
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v5 = *(void *)(v0 + 8);
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *(void *)v1 == *(void *)v0 && v4 == v5;
  if (v6 || (char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    uint64_t v9 = *(void *)(v0 + 16);
    if (*(void *)(v1 + 16))
    {
      if (!v9) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v10 = swift_bridgeObjectRetain();
      sub_1001A3DA0(v10, v9, v11, v12, v13, v14, v15, v16, v28, v29);
      sub_10004FBDC();
      swift_bridgeObjectRelease();
      if ((v2 & 1) == 0) {
        return 0;
      }
    }
    else if (v9)
    {
      return 0;
    }
    uint64_t v17 = *(void *)(v1 + 32);
    uint64_t v18 = *(void *)(v0 + 32);
    if (v17)
    {
      if (v18)
      {
        if (*(void *)(v1 + 24) != *(void *)(v0 + 24) || v17 != v18)
        {
          char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t result = 0;
          if ((v20 & 1) == 0) {
            return result;
          }
        }
LABEL_24:
        if (*(unsigned char *)(v1 + 40) == 2)
        {
          if (*(unsigned char *)(v0 + 40) != 2) {
            return 0;
          }
        }
        else
        {
          uint64_t result = sub_100044018();
          if (v21 == 2 || ((v22 ^ v21) & 1) == 0) {
            return result;
          }
        }
        if (*(unsigned char *)(v1 + 41) == 2)
        {
          if (*(unsigned char *)(v0 + 41) != 2) {
            return 0;
          }
        }
        else
        {
          uint64_t result = sub_100044018();
          if (v23 == 2 || ((v24 ^ v23) & 1) == 0) {
            return result;
          }
        }
        int v25 = *(unsigned __int8 *)(v1 + 42);
        int v26 = *(unsigned __int8 *)(v0 + 42);
        if (v25 == 2)
        {
          if (v26 != 2) {
            return 0;
          }
        }
        else
        {
          BOOL v27 = (v25 & 1) == 0;
          if (v26 == 2 || ((v27 ^ v26) & 1) == 0) {
            return 0;
          }
        }
        return 1;
      }
    }
    else if (!v18)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

uint64_t sub_10005B530()
{
  sub_100043478(&qword_10022CD38);
  sub_100020DEC();
  __chkstk_darwin(v2);
  sub_10002D2B0();
  sub_10006047C();
  sub_100043ADC();
  sub_1000437CC();
  sub_1000437CC();
  sub_1000605AC();
  sub_10004BE58();
  if (!v1)
  {
    sub_1000437CC();
    sub_1000437CC();
    sub_100043478(&qword_10022CD18);
    sub_1000605F8((uint64_t)&unk_10022CD58);
    sub_10004BE58();
    sub_1000437CC();
    sub_1000437CC();
    sub_1000606BC();
    sub_10004BE58();
    uint64_t v3 = v0[40];
    v9[0] = 3;
    sub_100048AFC(v3, (uint64_t)v9);
    uint64_t v4 = v0[41];
    v9[0] = 4;
    sub_100048AFC(v4, (uint64_t)v9);
    uint64_t v5 = v0[42];
    v9[0] = 5;
    sub_100048AFC(v5, (uint64_t)v9);
  }
  uint64_t v6 = sub_100046BEC();
  return v7(v6);
}

Swift::Int sub_10005B788()
{
  return Hasher._finalize()();
}

void sub_10005B7C0()
{
  sub_100044DC4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_100043478(&qword_10022CD00);
  sub_100020DEC();
  __chkstk_darwin(v5);
  sub_100049788(v2, v2[3]);
  sub_10006047C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    sub_10004377C((uint64_t)v2);
  }
  else
  {
    sub_1000604C8();
    sub_100050D2C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_100043478(&qword_10022CD18);
    sub_1000605F8((uint64_t)&unk_10022CD20);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_100060560();
    swift_bridgeObjectRetain();
    sub_100050D2C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    swift_bridgeObjectRetain();
    char v12 = sub_100041F50();
    char v9 = sub_100041F50();
    char v6 = sub_100041F50();
    uint64_t v7 = sub_100044DAC();
    v8(v7);
    sub_10004377C((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v10;
    *(void *)(v4 + 8) = v11;
    *(void *)(v4 + 16) = v10;
    *(void *)(v4 + 24) = v10;
    *(void *)(v4 + 32) = v11;
    *(unsigned char *)(v4 + 40) = v12;
    *(unsigned char *)(v4 + 41) = v9;
    *(unsigned char *)(v4 + 42) = v6;
  }
  sub_100020E2C();
}

void sub_10005BB20(uint64_t a1, unsigned int a2)
{
  if (a2 == 2)
  {
    Swift::UInt8 v3 = 0;
  }
  else
  {
    Hasher._combine(_:)(1u);
    Swift::UInt8 v3 = a2 & 1;
  }
  Hasher._combine(_:)(v3);
  if ((a2 & 0xFF00) == 0x200)
  {
    LOBYTE(v4) = 0;
  }
  else
  {
    Hasher._combine(_:)(1u);
    int v4 = (a2 >> 8) & 1;
  }
  Hasher._combine(_:)(v4);
}

uint64_t sub_10005BB8C(__int16 a1, int a2)
{
  if (a1 == 2)
  {
    if (a2 != 2) {
      return 0;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if (a2 == 2 || ((((a1 & 1) == 0) ^ a2) & 1) == 0) {
      return v2;
    }
  }
  if ((a1 & 0xFF00) == 0x200)
  {
    if (BYTE1(a2) != 2) {
      return 0;
    }
  }
  else if (BYTE1(a2) == 2 || ((((a1 & 0x100) == 0) ^ ((unsigned __int16)(a2 & 0x100) >> 8)) & 1) == 0)
  {
    return 0;
  }
  return 1;
}

BOOL static HeapType.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void HeapType.hash(into:)(uint64_t a1, char a2)
{
}

uint64_t sub_10005BC48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736E655365736163 && a2 == 0xED00006576697469;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x45746E6563726570 && a2 == 0xEE006465646F636ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10005BD80()
{
  return 2;
}

Swift::Int HeapType.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

uint64_t sub_10005BDD0(char a1)
{
  if (a1) {
    return 0x45746E6563726570;
  }
  else {
    return 0x736E655365736163;
  }
}

uint64_t sub_10005BE20(uint64_t a1, uint64_t a2)
{
  sub_100043478(&qword_10022CF08);
  sub_100020DEC();
  __chkstk_darwin(v4);
  sub_10002D2B0();
  sub_100061968();
  sub_100043ADC();
  char v9 = 0;
  sub_100048AFC(a2, (uint64_t)&v9);
  if (!v2)
  {
    char v8 = 1;
    sub_100048AFC(BYTE1(a2), (uint64_t)&v8);
  }
  uint64_t v5 = sub_100046BEC();
  return v6(v5);
}

Swift::Int sub_10005BF10(unsigned int a1)
{
  sub_100047EFC();
  sub_10005BB20((uint64_t)v3, a1);
  return Hasher._finalize()();
}

uint64_t sub_10005BF50(uint64_t a1)
{
  sub_100043478(&qword_10022CEF8);
  sub_100020DEC();
  __chkstk_darwin(v4);
  sub_10004A47C();
  sub_100061968();
  sub_1000477BC();
  if (v1)
  {
    sub_10004377C(a1);
  }
  else
  {
    unsigned __int8 v5 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    int v6 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v7 = sub_10004CD4C();
    v8(v7);
    sub_10004377C(a1);
    return v5 | (v6 << 8);
  }
  return v2;
}

unint64_t sub_10005C088@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10005989C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10005C0B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000598EC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10005C0E4()
{
  return sub_10005995C(*v0);
}

uint64_t sub_10005C0EC@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000598E8(a1);
  *a2 = result;
  return result;
}

void sub_10005C114(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_10005C120(uint64_t a1)
{
  unint64_t v2 = sub_10006047C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10005C15C(uint64_t a1)
{
  unint64_t v2 = sub_10006047C();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10005C198@<D0>(_OWORD *a1@<X8>)
{
  sub_10005B7C0();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = *(_OWORD *)v5;
    double result = *(double *)&v5[11];
    *(_OWORD *)((char *)a1 + 27) = *(_OWORD *)&v5[11];
  }
  return result;
}

uint64_t sub_10005C1DC()
{
  return sub_10005B530();
}

Swift::Int sub_10005C220()
{
  return Hasher._finalize()();
}

BOOL sub_10005C260(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static HeapType.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_10005C26C()
{
  return HeapType.hashValue.getter(*v0);
}

void sub_10005C274(uint64_t a1)
{
  HeapType.hash(into:)(a1, *v1);
}

uint64_t sub_10005C27C()
{
  return sub_10005BDD0(*v0);
}

uint64_t sub_10005C284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10005BC48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10005C2AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10005BD80();
  *a1 = result;
  return result;
}

uint64_t sub_10005C2D4(uint64_t a1)
{
  unint64_t v2 = sub_100061968();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10005C310(uint64_t a1)
{
  unint64_t v2 = sub_100061968();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10005C34C@<X0>(uint64_t a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t result = sub_10005BF50(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10005C378(uint64_t a1)
{
  return sub_10005BE20(a1, *v1);
}

Swift::Int sub_10005C394()
{
  return sub_10005BF10(*v0);
}

void sub_10005C39C(uint64_t a1)
{
  sub_10005BB20(a1, *v1);
}

Swift::Int sub_10005C3A4()
{
  unsigned int v1 = *v0;
  Hasher.init(_seed:)();
  sub_10005BB20((uint64_t)v3, v1);
  return Hasher._finalize()();
}

uint64_t sub_10005C3E8(__int16 *a1, unsigned __int16 *a2)
{
  return sub_10005BB8C(*a1, *a2);
}

uint64_t sub_10005C3F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10005C4E8(a1, a2);
}

uint64_t sub_10005C40C()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10005C43C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = nullsub_1(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

void sub_10005C464(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_10005C470(uint64_t a1)
{
  unint64_t v2 = sub_1000601D4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10005C4AC(uint64_t a1)
{
  unint64_t v2 = sub_1000601D4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10005C4E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10005C514(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_10005C514(void *a1)
{
  sub_100049788(a1, a1[3]);
  sub_10002060C();
  dispatch thunk of Decoder.singleValueContainer()();
  if (v2)
  {
    sub_10004377C((uint64_t)a1);
  }
  else
  {
    sub_100049788(v5, v5[3]);
    sub_10002060C();
    uint64_t v1 = dispatch thunk of SingleValueDecodingContainer.decode(_:)();
    sub_10004377C((uint64_t)v5);
    sub_10004377C((uint64_t)a1);
  }
  return v1;
}

uint64_t sub_10005C5C0(void *a1)
{
  sub_100049788(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  sub_10003660C((uint64_t)v2, v3);
  dispatch thunk of SingleValueEncodingContainer.encode(_:)();
  return sub_10004377C((uint64_t)v2);
}

uint64_t sub_10005C65C()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005C6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

Swift::Int sub_10005C6D4()
{
  return Hasher._finalize()();
}

uint64_t sub_10005C720(void *a1)
{
  return sub_10005C5C0(a1);
}

Swift::Int sub_10005C73C()
{
  return sub_10005C6D4();
}

uint64_t sub_10005C758()
{
  return sub_10005C65C();
}

Swift::Int sub_10005C774()
{
  return Hasher._finalize()();
}

uint64_t sub_10005C7CC(uint64_t *a1, uint64_t *a2)
{
  return sub_10005C6B8(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t sub_10005C7FC(uint64_t a1, uint64_t a2)
{
  return a2 | a1;
}

uint64_t sub_10005C808(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

BOOL sub_10005C810(void *a1, uint64_t a2)
{
  uint64_t v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_10005C83C(uint64_t a1)
{
  uint64_t result = *v1 & a1;
  if (result) {
    *v1 &= ~a1;
  }
  return result;
}

uint64_t sub_10005C860(uint64_t a1)
{
  uint64_t v2 = *v1;
  *v1 |= a1;
  return v2 & a1;
}

void sub_10005C878(uint64_t a1)
{
  sub_100040A68(*v1 | a1);
}

void sub_10005C884(uint64_t a1)
{
  sub_100040A68(*v1 & a1);
}

void sub_10005C890(uint64_t a1)
{
  sub_100040A68(*v1 ^ a1);
}

uint64_t sub_10005C89C(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

BOOL sub_10005C8A4(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_10005C8B0(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_10005C8BC(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_10005C8C8(uint64_t a1)
{
  return a1 == 0;
}

void sub_10005C8D4(uint64_t a1)
{
  sub_100040A68(*v1 & ~a1);
}

uint64_t variable initialization expression of AppConfiguration.destinationComponents()
{
  return -1;
}

void variable initialization expression of AppConfiguration.logKey()
{
}

unint64_t variable initialization expression of AppConfiguration.mediaClient()
{
  return 0xD000000000000018;
}

uint64_t variable initialization expression of AppConfiguration.qualityOfService()
{
  return 25;
}

uint64_t variable initialization expression of AppConfiguration.storageCapacityGrace()
{
  return 10485760;
}

uint64_t variable initialization expression of PriorityQueue.runningWorkers()
{
  type metadata accessor for Worker();
  return Dictionary.init(dictionaryLiteral:)();
}

void *variable initialization expression of SQLDatabase.statements()
{
  return &_swiftEmptyArrayStorage;
}

void type metadata accessor for AMSBagKey(uint64_t a1)
{
}

void type metadata accessor for AMSSubscriptionEntitlementsMediaType(uint64_t a1)
{
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
}

void type metadata accessor for AMSExplicitContentSetting(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for AMSEngagementDestinationComponents(uint64_t a1)
{
}

void type metadata accessor for AMSAccountMediaType(uint64_t a1)
{
}

void type metadata accessor for UNShowPreviewsSetting(uint64_t a1)
{
}

void type metadata accessor for UNNotificationSetting(uint64_t a1)
{
}

void type metadata accessor for UNNotificationGroupingSetting(uint64_t a1)
{
}

void type metadata accessor for UNAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for UNAlertStyle(uint64_t a1)
{
}

uint64_t sub_10005CA68(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10005CAA8()
{
  sub_100052448();
  sub_100020E08();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_10005CAE0()
{
  sub_100052448();
  sub_100040934();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10005CB3C(uint64_t a1, id *a2)
{
  return sub_10005F1B8(a1, a2);
}

uint64_t sub_10005CB54(uint64_t a1, id *a2)
{
  return sub_10005F138(a1, a2) & 1;
}

uint64_t sub_10005CB70()
{
  return sub_10005CA68(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_10005CBA0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_10005CBA8()
{
  return sub_10005F264(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

NSString sub_10005CBD8@<X0>(void *a1@<X8>)
{
  NSString result = sub_10005F2A4();
  *a1 = result;
  return result;
}

uint64_t sub_10005CC00()
{
  return sub_10005F264(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10005CC30()
{
  return sub_10005CAA8();
}

Swift::Int sub_10005CC4C()
{
  return sub_10005CAE0();
}

id sub_10005CC68()
{
  return *v0;
}

uint64_t sub_10005CC70()
{
  uint64_t v1 = sub_100043E30();
  uint64_t result = nullsub_1(v1);
  *Swift::Int v0 = result;
  return result;
}

uint64_t sub_10005CC98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = variable initialization expression of SQLRow.stmt();
  *a1 = result;
  return result;
}

uint64_t sub_10005CCC0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10005C7FC(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_10005CCF0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10005C804(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_10005CD20@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10005C808(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_10005CD50(void *a1, uint64_t *a2)
{
  return sub_10005C810(a1, *a2);
}

uint64_t sub_10005CD58@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10005C83C(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_10005CD8C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10005C860(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_10005CDC0(uint64_t *a1)
{
}

void sub_10005CDC8(uint64_t *a1)
{
}

void sub_10005CDD0(uint64_t *a1)
{
}

uint64_t sub_10005CDD8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10005C89C(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_10005CE08(uint64_t *a1)
{
  return sub_10005C8A4(*a1, *v1);
}

BOOL sub_10005CE14(uint64_t *a1)
{
  return sub_10005C8B0(*a1, *v1);
}

BOOL sub_10005CE20(uint64_t *a1)
{
  return sub_10005C8BC(*a1, *v1);
}

BOOL sub_10005CE2C()
{
  return sub_10005C8C8(*v0);
}

uint64_t sub_10005CE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void sub_10005CE4C(uint64_t *a1)
{
}

uint64_t sub_10005CE54(void *a1, void *a2)
{
  return sub_10007CF28(*a1, *a2);
}

Swift::Int sub_10005CE60()
{
  return sub_10005A17C(*v0);
}

void sub_10005CE68(int a1)
{
  sub_10005A1CC(a1, *v1);
}

Swift::Int sub_10005CE70(uint64_t a1)
{
  return sub_10005B214(a1, *v1);
}

BOOL sub_10005CE78(uint64_t *a1, uint64_t *a2)
{
  return sub_10005F12C(*a1, *a2);
}

Swift::Int sub_10005CE84()
{
  return sub_10008D5C0();
}

uint64_t sub_10005CE90()
{
  uint64_t v1 = sub_100043E30();
  uint64_t result = j_j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ(v1);
  *Swift::Int v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_10005CEB8(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&unk_10022CC60);
  unint64_t v3 = sub_10005D5E8((uint64_t)&unk_10022CC68);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10005CF78()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10005CF88(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&qword_10022CE90);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_10005CFF4(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&qword_10022CE90);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_10005D060(void *a1, uint64_t a2)
{
  unint64_t v4 = sub_10005D5E8((uint64_t)&qword_10022CE90);
  id v5 = a1;
  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_10005D0F0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10005D5E8((uint64_t)&qword_10022CE90);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_10005D170@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_10005D19C()
{
  return sub_10005F0A4() & 1;
}

uint64_t sub_10005D1C4()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10005D1D4(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&qword_10022CC10);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_10005D240(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&qword_10022CC10);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_10005D2AC(void *a1, uint64_t a2)
{
  unint64_t v4 = sub_10005D5E8((uint64_t)&qword_10022CC10);
  id v5 = a1;
  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_10005D33C()
{
  return sub_10005F230(*v0);
}

uint64_t sub_10005D344(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10005D5E8((uint64_t)&qword_10022CC10);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_10005D3C0()
{
  return Hasher._finalize()();
}

void sub_10005D420(uint64_t a1@<X8>)
{
  sub_10005D454();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3 & 1;
}

uint64_t sub_10005D45C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100061B64(a1);
  *a2 = result;
  return result;
}

void *sub_10005D484@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10005D490()
{
  return sub_10008D634();
}

uint64_t sub_10005D49C(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&unk_10022C710);
  unint64_t v3 = sub_10005D5E8((uint64_t)&unk_10022C718);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

unint64_t sub_10005D558()
{
  return sub_10005D5E8((uint64_t)&unk_10022C680);
}

unint64_t sub_10005D5A0()
{
  return sub_10005D5E8((uint64_t)&unk_10022C688);
}

unint64_t sub_10005D5E8(uint64_t a1)
{
  unint64_t result = sub_10004A4A0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10005D62C()
{
  return sub_10005D5E8((uint64_t)&unk_10022C690);
}

uint64_t sub_10005D674@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10005D6A0(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&qword_10022CC50);
  unint64_t v3 = sub_10005D5E8((uint64_t)&unk_10022CC58);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10005D75C(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&qword_10022C6F0);
  unint64_t v3 = sub_10005D5E8((uint64_t)&unk_10022C6F8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10005D818(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&unk_10022C700);
  unint64_t v3 = sub_10005D5E8((uint64_t)&unk_10022C708);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10005D8D8(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&qword_10022CD88);
  unint64_t v3 = sub_10005D5E8((uint64_t)&unk_10022CD90);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10005D994(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&unk_10022CE60);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10005DA00(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&unk_10022CE60);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10005DA6C(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&qword_10022CE90);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10005DAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10005D5E8((uint64_t)&qword_10022CE90);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_10005DB5C()
{
  uint64_t v1 = sub_100043E30();
  uint64_t result = j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ(v1);
  *Swift::Int v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_10005DB84(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&unk_10022CF40);
  unint64_t v3 = sub_10005D5E8((uint64_t)&unk_10022CF48);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

unint64_t sub_10005DC40()
{
  return sub_10005D5E8((uint64_t)&unk_10022C698);
}

unint64_t sub_10005DC88()
{
  return sub_10005D5E8((uint64_t)&unk_10022C6A0);
}

unint64_t sub_10005DCD0()
{
  return sub_10005D5E8((uint64_t)&unk_10022C6A8);
}

unint64_t sub_10005DD18()
{
  return sub_10005D5E8((uint64_t)&unk_10022C6B0);
}

unint64_t sub_10005DD60()
{
  return sub_10005D5E8((uint64_t)&unk_10022C6B8);
}

unint64_t sub_10005DDA8()
{
  return sub_10005D5E8((uint64_t)&unk_10022C6C0);
}

unint64_t sub_10005DDF0()
{
  return sub_10005D5E8((uint64_t)&unk_10022C6C8);
}

uint64_t sub_10005DE38@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_10005DE80(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&qword_10022CC40);
  unint64_t v3 = sub_10005D5E8((uint64_t)&unk_10022CC48);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10005DF3C(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&unk_10022CBD8);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10005DFA8(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&unk_10022CBD8);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10005E014(uint64_t a1)
{
  unint64_t v2 = sub_10005D5E8((uint64_t)&qword_10022CC10);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10005E080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10005D5E8((uint64_t)&qword_10022CC10);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

void *sub_10005E104@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_10005E114(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10005E120()
{
  return sub_10005CA68(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

unint64_t sub_10005E150()
{
  return sub_10005D5E8((uint64_t)&unk_10022C6D0);
}

unint64_t sub_10005E198()
{
  return sub_10005D5E8((uint64_t)&unk_10022C6D8);
}

unint64_t sub_10005E1E0()
{
  return sub_10005D5E8((uint64_t)&unk_10022C6E0);
}

unint64_t sub_10005E228()
{
  return sub_10005D5E8((uint64_t)&unk_10022C6E8);
}

void sub_10005E270(__n128 *a1, uint64_t a2)
{
  __n128 v19 = sub_10002272C(a1);
  long long v20 = v4;
  uint64_t v21 = v5;
  Hasher._finalize()();
  uint64_t v6 = a2 + 56;
  sub_10004652C();
  int64_t v8 = v7 >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v9 = 0;
  uint64_t v10 = 0;
  if (!v2) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v11 = __clz(__rbit64(v2));
  v2 &= v2 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = v15 + (v10 << 6))
  {
    uint64_t v16 = *(void *)(*(void *)(a2 + 48) + 24 * i + 16);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100050108();
    swift_bridgeObjectRetain();
    sub_10005E404((uint64_t)v18, v16);
    swift_bridgeObjectRelease();
    Swift::Int v17 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 ^= v17;
    if (v2) {
      goto LABEL_2;
    }
LABEL_3:
    if (__OFADD__(v10++, 1)) {
      goto LABEL_17;
    }
    if (v10 >= v8)
    {
LABEL_15:
      swift_release();
      Hasher._combine(_:)(v9);
      return;
    }
    if (!*(void *)(v6 + 8 * v10)) {
      break;
    }
LABEL_12:
    sub_10004C168();
  }
  uint64_t v14 = v10 + 1;
  if (v10 + 1 >= v8) {
    goto LABEL_15;
  }
  if (*(void *)(v6 + 8 * v14))
  {
    ++v10;
    goto LABEL_12;
  }
  while (1)
  {
    uint64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_15;
    }
    ++v14;
    if (*(void *)(v6 + 8 * v10)) {
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
}

void sub_10005E404(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 64);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v30[9] = *(_OWORD *)a1;
  *(_OWORD *)&v30[11] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v30[13] = *(_OWORD *)(a1 + 32);
  *(_OWORD *)&v30[15] = v5;
  v30[17] = v3;
  uint64_t v27 = a2 + 56;
  Hasher._finalize()();
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v26 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v28 = a2;
  swift_bridgeObjectRetain();
  Swift::UInt v9 = 0;
  int64_t v10 = 0;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = *(void *)(v28 + 48) + 48 * i;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    int v20 = *(unsigned __int8 *)(v16 + 24);
    int v21 = *(unsigned __int8 *)(v16 + 25);
    Swift::UInt v29 = *(void *)(v16 + 32);
    int v22 = *(unsigned __int8 *)(v16 + 40);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10005E9DC((__n128 *)v30, v17);
    if (v18)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      sub_10005EEC8((uint64_t)v30, v18);
      swift_bridgeObjectRelease();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    if (v19)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      sub_10005EB2C((uint64_t)v30, v19);
      swift_bridgeObjectRelease();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    if (v20 == 2)
    {
      Swift::UInt8 v23 = 0;
    }
    else
    {
      Swift::UInt8 v23 = v20 & 1;
      Hasher._combine(_:)(1u);
    }
    Hasher._combine(_:)(v23);
    if (v21 == 2)
    {
      Swift::UInt8 v24 = 0;
    }
    else
    {
      Swift::UInt8 v24 = v21 & 1;
      Hasher._combine(_:)(1u);
    }
    Hasher._combine(_:)(v24);
    if (v22)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1u);
      Hasher._combine(_:)(v29);
    }
    Swift::Int v25 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 ^= v25;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v10++, 1)) {
      goto LABEL_34;
    }
    if (v10 >= v26)
    {
LABEL_32:
      swift_release();
      Hasher._combine(_:)(v9);
      return;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v10);
    if (!v14) {
      break;
    }
LABEL_14:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v10 + 1;
  if (v10 + 1 >= v26) {
    goto LABEL_32;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v15);
  if (v14)
  {
    ++v10;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v26) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

void sub_10005E6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 64);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v33[9] = *(_OWORD *)a1;
  *(_OWORD *)&v33[11] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v33[13] = *(_OWORD *)(a1 + 32);
  *(_OWORD *)&v33[15] = v5;
  v33[17] = v3;
  Hasher._finalize()();
  uint64_t v29 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v28 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v30 = a2;
  swift_bridgeObjectRetain();
  Swift::UInt v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    Swift::UInt v32 = v9;
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_16;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_38;
    }
    if (v10 >= v28)
    {
LABEL_36:
      swift_release();
      Hasher._combine(_:)(v9);
      return;
    }
    unint64_t v14 = *(void *)(v29 + 8 * v10);
    if (!v14) {
      break;
    }
LABEL_15:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_16:
    uint64_t v16 = *(void *)(v30 + 48) + 40 * v12;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    unsigned int v19 = *(unsigned __int16 *)(v16 + 16);
    int v20 = *(unsigned __int8 *)(v16 + 18);
    int v21 = *(unsigned __int8 *)(v16 + 19);
    Swift::UInt v31 = *(void *)(v16 + 24);
    int v22 = *(unsigned __int8 *)(v16 + 32);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_10005E9DC((__n128 *)v33, v17);
    swift_bridgeObjectRelease();
    if (v18)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      sub_10005EEC8((uint64_t)v33, v18);
      swift_bridgeObjectRelease();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    if (v19 == 3
      || ((Hasher._combine(_:)(1u), v19 != 2) ? (Hasher._combine(_:)(1u), Swift::UInt8 v23 = v19 & 1) : (Swift::UInt8 v23 = 0),
          Hasher._combine(_:)(v23),
          (v19 & 0xFF00) == 0x200))
    {
      LOBYTE(v24) = 0;
    }
    else
    {
      Hasher._combine(_:)(1u);
      int v24 = (v19 >> 8) & 1;
    }
    Hasher._combine(_:)(v24);
    if (v20 == 2)
    {
      Swift::UInt8 v25 = 0;
    }
    else
    {
      Swift::UInt8 v25 = v20 & 1;
      Hasher._combine(_:)(1u);
    }
    Hasher._combine(_:)(v25);
    if (v21 == 2)
    {
      Swift::UInt8 v26 = 0;
    }
    else
    {
      Swift::UInt8 v26 = v21 & 1;
      Hasher._combine(_:)(1u);
    }
    Hasher._combine(_:)(v26);
    if (v22)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1u);
      Hasher._combine(_:)(v31);
    }
    Swift::Int v27 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Swift::UInt v9 = v27 ^ v32;
  }
  int64_t v15 = v10 + 1;
  if (v10 + 1 >= v28) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v29 + 8 * v15);
  if (v14)
  {
    ++v10;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v28) {
      goto LABEL_36;
    }
    unint64_t v14 = *(void *)(v29 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_10005E9DC(__n128 *a1, uint64_t a2)
{
  sub_10002272C(a1);
  Hasher._finalize()();
  uint64_t v4 = a2 + 56;
  sub_10004652C();
  int64_t v6 = v5 >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v7 = 0;
  uint64_t v8 = 0;
  if (!v2) {
    goto LABEL_3;
  }
LABEL_2:
  sub_10004A188();
  while (1)
  {
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    sub_100050108();
    Swift::Int v11 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    v7 ^= v11;
    if (v2) {
      goto LABEL_2;
    }
LABEL_3:
    if (__OFADD__(v8++, 1)) {
      goto LABEL_17;
    }
    if (v8 >= v6)
    {
LABEL_15:
      swift_release();
      Hasher._combine(_:)(v7);
      return;
    }
    if (!*(void *)(v4 + 8 * v8)) {
      break;
    }
LABEL_12:
    sub_10004C168();
  }
  uint64_t v10 = v8 + 1;
  if (v8 + 1 >= v6) {
    goto LABEL_15;
  }
  if (*(void *)(v4 + 8 * v10))
  {
    ++v8;
    goto LABEL_12;
  }
  while (1)
  {
    uint64_t v8 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_15;
    }
    ++v10;
    if (*(void *)(v4 + 8 * v8)) {
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
}

void sub_10005EB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = a2 + 64;
  sub_10004652C();
  int64_t v15 = v4 >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v5 = 0;
  uint64_t v6 = 0;
  if (!v2) {
    goto LABEL_3;
  }
LABEL_2:
  sub_10004A188();
  while (1)
  {
    uint64_t v11 = *(void *)(*(void *)(a2 + 56) + 8 * v7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100050108();
    swift_bridgeObjectRelease();
    Hasher._combine(_:)(*(void *)(v11 + 16));
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = v11 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_100050108();
        swift_bridgeObjectRelease();
        v13 += 16;
        --v12;
      }
      while (v12);
    }
    swift_bridgeObjectRelease();
    v5 ^= Hasher._finalize()();
    if (v2) {
      goto LABEL_2;
    }
LABEL_3:
    uint64_t v8 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (v8 >= v15) {
      goto LABEL_20;
    }
    unint64_t v9 = *(void *)(v14 + 8 * v8);
    ++v6;
    if (!v9)
    {
      uint64_t v6 = v8 + 1;
      if (v8 + 1 >= v15) {
        goto LABEL_20;
      }
      unint64_t v9 = *(void *)(v14 + 8 * v6);
      if (!v9) {
        break;
      }
    }
LABEL_14:
    uint64_t v2 = (v9 - 1) & v9;
    unint64_t v7 = __clz(__rbit64(v9)) + (v6 << 6);
  }
  uint64_t v10 = v8 + 2;
  if (v10 >= v15)
  {
LABEL_20:
    swift_release();
    Hasher._combine(_:)(v5);
    return;
  }
  unint64_t v9 = *(void *)(v14 + 8 * v10);
  if (v9)
  {
    uint64_t v6 = v10;
    goto LABEL_14;
  }
  while (1)
  {
    uint64_t v6 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v6 >= v15) {
      goto LABEL_20;
    }
    unint64_t v9 = *(void *)(v14 + 8 * v6);
    ++v10;
    if (v9) {
      goto LABEL_14;
    }
  }
LABEL_22:
  __break(1u);
}

void sub_10005ECF4(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v6 = 0;
  int64_t v7 = 0;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  for (v4 &= v4 - 1; ; uint64_t v4 = (v9 - 1) & v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease_n();
    v6 ^= Hasher._finalize()();
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v8 >= v5) {
      goto LABEL_19;
    }
    uint64_t v9 = *(void *)(v11 + 8 * v8);
    ++v7;
    if (!v9)
    {
      int64_t v7 = v8 + 1;
      if (v8 + 1 >= v5) {
        goto LABEL_19;
      }
      uint64_t v9 = *(void *)(v11 + 8 * v7);
      if (!v9) {
        break;
      }
    }
LABEL_16:
    ;
  }
  int64_t v10 = v8 + 2;
  if (v10 >= v5)
  {
LABEL_19:
    swift_release();
    Hasher._combine(_:)(v6);
    return;
  }
  uint64_t v9 = *(void *)(v11 + 8 * v10);
  if (v9)
  {
    int64_t v7 = v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v7 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_19;
    }
    uint64_t v9 = *(void *)(v11 + 8 * v7);
    ++v10;
    if (v9) {
      goto LABEL_16;
    }
  }
LABEL_21:
  __break(1u);
}

void sub_10005EEC8(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  Hasher._combine(_:)(v3);
  if (v3)
  {
    uint64_t v4 = (unsigned __int8 *)(a2 + 74);
    do
    {
      uint64_t v5 = *(void *)(v4 - 26);
      uint64_t v6 = *(void *)(v4 - 10);
      int v7 = *(v4 - 2);
      int v8 = *v4;
      int v14 = *(v4 - 1);
      if (*(void *)(v4 - 34))
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        if (v5) {
          goto LABEL_5;
        }
      }
      else
      {
        Hasher._combine(_:)(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v5)
        {
LABEL_5:
          Hasher._combine(_:)(1u);
          swift_bridgeObjectRetain();
          uint64_t v9 = sub_1000225EC();
          sub_10005ECF4(v9, v10);
          swift_bridgeObjectRelease();
          if (!v6) {
            goto LABEL_9;
          }
          goto LABEL_6;
        }
      }
      Hasher._combine(_:)(0);
      if (!v6)
      {
LABEL_9:
        Hasher._combine(_:)(0);
        goto LABEL_10;
      }
LABEL_6:
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
LABEL_10:
      if (v7 == 2)
      {
        Swift::UInt8 v11 = 0;
      }
      else
      {
        Swift::UInt8 v11 = v7 & 1;
        Hasher._combine(_:)(1u);
      }
      Hasher._combine(_:)(v11);
      if (v14 == 2)
      {
        Swift::UInt8 v12 = 0;
      }
      else
      {
        Swift::UInt8 v12 = v14 & 1;
        Hasher._combine(_:)(1u);
      }
      Hasher._combine(_:)(v12);
      if (v8 == 2)
      {
        Swift::UInt8 v13 = 0;
      }
      else
      {
        Swift::UInt8 v13 = v8 & 1;
        Hasher._combine(_:)(1u);
      }
      v4 += 48;
      Hasher._combine(_:)(v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
  }
}

uint64_t sub_10005F0A4()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_10005F12C(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_10005F138(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_10005F1B8(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_10005F230(void *a1)
{
  id v1 = a1;
  uint64_t v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_10005F264(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

NSString sub_10005F2A4()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  return v0;
}

void type metadata accessor for AMSAccountFlag(uint64_t a1)
{
}

void type metadata accessor for FAEligibilityResponse(uint64_t a1)
{
}

void type metadata accessor for CLAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for CKError(uint64_t a1)
{
}

void type metadata accessor for CFRunLoopRunResult(uint64_t a1)
{
}

void type metadata accessor for AMSServerDataCacheNetworkPolicy(uint64_t a1)
{
}

void type metadata accessor for ASDSubscriptionEntitlementsSegment(uint64_t a1)
{
}

void type metadata accessor for Name(uint64_t a1)
{
}

void type metadata accessor for AMSSubscriptionEntitlementsCachePolicy(uint64_t a1)
{
}

void type metadata accessor for AMSEngagementSyncRequestOrigin(uint64_t a1)
{
}

void type metadata accessor for AMSTreatmentsCachePolicy(uint64_t a1)
{
}

__n128 initializeWithTake for MediaClient(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for AASA.AppID()
{
}

uint64_t initializeBufferWithCopyOfBuffer for AppBacklogPredicate(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_10005F410(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10005F460(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  return a1;
}

__n128 initializeWithTake for AppBacklogPredicate(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_10005F4FC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t sub_10005F554(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10005F594(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AASA.Detail()
{
}

void type metadata accessor for AASA.SubstitutionVariableValue()
{
}

uint64_t sub_10005F5F0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005F634(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10005F69C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  return a1;
}

__n128 sub_10005F73C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_10005F750(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  return a1;
}

uint64_t sub_10005F7B8(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 43))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10005F80C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 42) = 0;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 43) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 43) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for AASA.Component()
{
}

void type metadata accessor for AASA()
{
}

uint64_t sub_10005F88C()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

__n128 sub_10005F8CC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

void type metadata accessor for AASA.AASAContainer()
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

unint64_t sub_10005F90C()
{
  return sub_10005D5E8((uint64_t)&unk_10022CB40);
}

unint64_t sub_10005F954()
{
  return sub_10005D5E8((uint64_t)&unk_10022CB48);
}

unint64_t sub_10005F9A0()
{
  unint64_t result = qword_10022CB50;
  if (!qword_10022CB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CB50);
  }
  return result;
}

unint64_t sub_10005F9F0()
{
  unint64_t result = qword_10022CB58;
  if (!qword_10022CB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CB58);
  }
  return result;
}

unint64_t sub_10005FA40()
{
  unint64_t result = qword_10022CB60;
  if (!qword_10022CB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CB60);
  }
  return result;
}

unint64_t sub_10005FA90()
{
  unint64_t result = qword_10022CB68;
  if (!qword_10022CB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CB68);
  }
  return result;
}

unint64_t sub_10005FAE0()
{
  unint64_t result = qword_10022CB70;
  if (!qword_10022CB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CB70);
  }
  return result;
}

unint64_t sub_10005FB30()
{
  unint64_t result = qword_10022CB78;
  if (!qword_10022CB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CB78);
  }
  return result;
}

unint64_t sub_10005FB80()
{
  unint64_t result = qword_10022CB80;
  if (!qword_10022CB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CB80);
  }
  return result;
}

unint64_t sub_10005FBCC()
{
  return sub_10005D5E8((uint64_t)&unk_10022CB88);
}

unint64_t sub_10005FC14()
{
  return sub_10005D5E8((uint64_t)&unk_10022CB90);
}

unint64_t sub_10005FC5C()
{
  return sub_10005D5E8((uint64_t)&unk_10022CB98);
}

unint64_t sub_10005FCA4()
{
  return sub_10005D5E8((uint64_t)&unk_10022CBA0);
}

unint64_t sub_10005FCEC()
{
  return sub_10005D5E8((uint64_t)&unk_10022CBA8);
}

unint64_t sub_10005FD34()
{
  return sub_10005D5E8((uint64_t)&unk_10022CBB0);
}

unint64_t sub_10005FD7C()
{
  return sub_10005D5E8((uint64_t)&unk_10022CBB8);
}

unint64_t sub_10005FDC4()
{
  return sub_10005D5E8((uint64_t)&unk_10022CBC0);
}

unint64_t sub_10005FE0C()
{
  return sub_10005D5E8((uint64_t)&unk_10022CBC8);
}

unint64_t sub_10005FE54()
{
  return sub_10005D5E8((uint64_t)&unk_10022CBD0);
}

unint64_t sub_10005FE9C()
{
  return sub_10005D5E8((uint64_t)&unk_10022CBD8);
}

unint64_t sub_10005FEE4()
{
  return sub_10005D5E8((uint64_t)&unk_10022CBE0);
}

unint64_t sub_10005FF2C()
{
  return sub_10005D5E8((uint64_t)&unk_10022CBE8);
}

unint64_t sub_10005FF74()
{
  return sub_10005D5E8((uint64_t)&unk_10022CBF0);
}

void type metadata accessor for Code(uint64_t a1)
{
}

unint64_t sub_10005FFD0()
{
  return sub_10005D5E8((uint64_t)&unk_10022CBF8);
}

unint64_t sub_10006001C()
{
  return sub_10005D5E8((uint64_t)&unk_10022CC08);
}

unint64_t sub_100060064()
{
  return sub_10005D5E8((uint64_t)&qword_10022CC10);
}

unint64_t sub_1000600AC()
{
  return sub_10005D5E8((uint64_t)&unk_10022CC18);
}

unint64_t sub_1000600F4()
{
  return sub_10005D5E8((uint64_t)&unk_10022CC20);
}

unint64_t sub_10006013C()
{
  unint64_t result = qword_10022CC30;
  if (!qword_10022CC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CC30);
  }
  return result;
}

unint64_t sub_100060188()
{
  unint64_t result = qword_10022CC38;
  if (!qword_10022CC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CC38);
  }
  return result;
}

unint64_t sub_1000601D4()
{
  unint64_t result = qword_10022CC70;
  if (!qword_10022CC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CC70);
  }
  return result;
}

unint64_t sub_100060220()
{
  unint64_t result = qword_10022CC80;
  if (!qword_10022CC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CC80);
  }
  return result;
}

uint64_t sub_10006026C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_1000602B4()
{
  unint64_t result = qword_10022CC98;
  if (!qword_10022CC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CC98);
  }
  return result;
}

unint64_t sub_100060300()
{
  unint64_t result = qword_10022CCB0;
  if (!qword_10022CCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CCB0);
  }
  return result;
}

unint64_t sub_10006034C()
{
  unint64_t result = qword_10022CCB8;
  if (!qword_10022CCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CCB8);
  }
  return result;
}

unint64_t sub_100060398()
{
  unint64_t result = qword_10022CCD0;
  if (!qword_10022CCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CCD0);
  }
  return result;
}

unint64_t sub_1000603E4()
{
  unint64_t result = qword_10022CCE8;
  if (!qword_10022CCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CCE8);
  }
  return result;
}

unint64_t sub_100060430()
{
  unint64_t result = qword_10022CCF8;
  if (!qword_10022CCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CCF8);
  }
  return result;
}

unint64_t sub_10006047C()
{
  unint64_t result = qword_10022CD08;
  if (!qword_10022CD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CD08);
  }
  return result;
}

unint64_t sub_1000604C8()
{
  unint64_t result = qword_10022CD10;
  if (!qword_10022CD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CD10);
  }
  return result;
}

unint64_t sub_100060514()
{
  unint64_t result = qword_10022CD28;
  if (!qword_10022CD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CD28);
  }
  return result;
}

unint64_t sub_100060560()
{
  unint64_t result = qword_10022CD30;
  if (!qword_10022CD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CD30);
  }
  return result;
}

unint64_t sub_1000605AC()
{
  unint64_t result = qword_10022CD48;
  if (!qword_10022CD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CD48);
  }
  return result;
}

unint64_t sub_1000605F8(uint64_t a1)
{
  unint64_t result = sub_10004A4A0(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_10006026C(&qword_10022CD18);
    v4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_100060670()
{
  unint64_t result = qword_10022CD60;
  if (!qword_10022CD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CD60);
  }
  return result;
}

unint64_t sub_1000606BC()
{
  unint64_t result = qword_10022CD70;
  if (!qword_10022CD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CD70);
  }
  return result;
}

unint64_t sub_100060708()
{
  unint64_t result = qword_10022CD80;
  if (!qword_10022CD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CD80);
  }
  return result;
}

void type metadata accessor for AASA.Component.CodingKeys()
{
}

uint64_t getEnumTagSinglePayload for AMPBag.Definition.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s14amsengagementd4AASAO6DetailV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000608BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

unsigned char *sub_1000608E4(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AASA.Detail.CodingKeys()
{
  return &type metadata for AASA.Detail.CodingKeys;
}

void type metadata accessor for ReadingOptions(uint64_t a1)
{
}

void type metadata accessor for AMSError(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for AASA.AASAContainer.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for AASA.AASAContainer.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100060A10);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s14amsengagementd16AppConfigurationV14allowsResponseSbvpfi_0()
{
  return 0;
}

ValueMetadata *type metadata accessor for AASA.AASAContainer.CodingKeys()
{
  return &type metadata for AASA.AASAContainer.CodingKeys;
}

void type metadata accessor for AMSMetricsLoggingSubsystem(uint64_t a1)
{
}

_WORD *sub_100060A64(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t sub_100060A70(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 65282 <= 0xFFFEFFFF) {
      int v2 = 2;
    }
    else {
      int v2 = 4;
    }
    if (a2 + 65282 < 0xFF0000) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (v4) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v3 == 2)
      {
        int v4 = a1[1];
        if (!a1[1]) {
          goto LABEL_17;
        }
LABEL_15:
        int v5 = (*a1 | (v4 << 16)) - 65283;
        return (v5 + 1);
      }
      int v4 = *((unsigned __int8 *)a1 + 2);
      if (*((unsigned char *)a1 + 2)) {
        goto LABEL_15;
      }
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  if (v6 >= 2) {
    int v5 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v5 = -2;
  }
  if (v5 < 0) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_100060B18(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100060BE4);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for AASA.Default()
{
}

void *initializeBufferWithCopyOfBuffer for MediaClient(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MediaClient()
{
  return swift_bridgeObjectRelease();
}

void *assignWithTake for MediaClient(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for AASA.URLFragment()
{
}

void type metadata accessor for AASA.URLQueryParameterValue()
{
}

void *assignWithCopy for MediaClient(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaClient(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaClient(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AASA.URLPath()
{
}

uint64_t sub_100060D68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100060DA8()
{
  sub_100042700();
  *(void *)uint64_t v1 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(v1 + 16) = *(_WORD *)(v0 + 16);
  return v1;
}

uint64_t sub_100060E0C()
{
  sub_100042700();
  swift_bridgeObjectRelease();
  *(_OWORD *)uint64_t v1 = *(_OWORD *)v0;
  swift_bridgeObjectRelease();
  *(_WORD *)(v1 + 16) = *(_WORD *)(v0 + 16);
  return v1;
}

uint64_t sub_100060E50(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 18))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100060E90(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AASA.AppLinks()
{
}

unint64_t sub_100060EE0()
{
  unint64_t result = qword_10022CDB8;
  if (!qword_10022CDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CDB8);
  }
  return result;
}

unint64_t sub_100060F30()
{
  unint64_t result = qword_10022CDC0;
  if (!qword_10022CDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CDC0);
  }
  return result;
}

unint64_t sub_100060F80()
{
  unint64_t result = qword_10022CDC8;
  if (!qword_10022CDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CDC8);
  }
  return result;
}

unint64_t sub_100060FD0()
{
  unint64_t result = qword_10022CDD0;
  if (!qword_10022CDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CDD0);
  }
  return result;
}

unint64_t sub_100061020()
{
  unint64_t result = qword_10022CDD8;
  if (!qword_10022CDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CDD8);
  }
  return result;
}

unint64_t sub_10006106C()
{
  return sub_10005D5E8((uint64_t)&unk_10022CDE0);
}

unint64_t sub_1000610B4()
{
  return sub_10005D5E8((uint64_t)&unk_10022CDE8);
}

unint64_t sub_1000610FC()
{
  return sub_10005D5E8((uint64_t)&unk_10022CDF0);
}

unint64_t sub_100061148()
{
  unint64_t result = qword_10022CDF8;
  if (!qword_10022CDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CDF8);
  }
  return result;
}

unint64_t sub_100061194()
{
  return sub_10005D5E8((uint64_t)&unk_10022CE00);
}

unint64_t sub_1000611DC()
{
  return sub_10005D5E8((uint64_t)&unk_10022CE08);
}

unint64_t sub_100061224()
{
  return sub_10005D5E8((uint64_t)&unk_10022CE10);
}

unint64_t sub_10006126C()
{
  return sub_10005D5E8((uint64_t)&unk_10022CE18);
}

unint64_t sub_1000612B4()
{
  return sub_10005D5E8((uint64_t)&unk_10022CE20);
}

unint64_t sub_1000612FC()
{
  return sub_10005D5E8((uint64_t)&unk_10022CE28);
}

unint64_t sub_100061348()
{
  unint64_t result = qword_10022CE30;
  if (!qword_10022CE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CE30);
  }
  return result;
}

unint64_t sub_100061398()
{
  unint64_t result = qword_10022CE38;
  if (!qword_10022CE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CE38);
  }
  return result;
}

unint64_t sub_1000613E8()
{
  unint64_t result = qword_10022CE40;
  if (!qword_10022CE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CE40);
  }
  return result;
}

unint64_t sub_100061438()
{
  unint64_t result = qword_10022CE48;
  if (!qword_10022CE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CE48);
  }
  return result;
}

unint64_t sub_100061488()
{
  unint64_t result = qword_10022CE50;
  if (!qword_10022CE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CE50);
  }
  return result;
}

unint64_t sub_1000614D8()
{
  unint64_t result = qword_10022CE58;
  if (!qword_10022CE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CE58);
  }
  return result;
}

unint64_t sub_100061524()
{
  return sub_10005D5E8((uint64_t)&unk_10022CE60);
}

unint64_t sub_10006156C()
{
  return sub_10005D5E8((uint64_t)&unk_10022CE68);
}

unint64_t sub_1000615B4()
{
  return sub_10005D5E8((uint64_t)&unk_10022CE70);
}

unint64_t sub_1000615FC()
{
  return sub_10005D5E8((uint64_t)&unk_10022CE78);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
}

unint64_t sub_100061658()
{
  return sub_10005D5E8((uint64_t)&unk_10022CE80);
}

unint64_t sub_1000616A0()
{
  return sub_10005D5E8((uint64_t)&unk_10022CE88);
}

unint64_t sub_1000616E8()
{
  return sub_10005D5E8((uint64_t)&qword_10022CE90);
}

unint64_t sub_100061734()
{
  unint64_t result = qword_10022CE98;
  if (!qword_10022CE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CE98);
  }
  return result;
}

unint64_t sub_100061784()
{
  unint64_t result = qword_10022CEA0;
  if (!qword_10022CEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CEA0);
  }
  return result;
}

unint64_t sub_1000617D0()
{
  unint64_t result = qword_10022CEB0;
  if (!qword_10022CEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CEB0);
  }
  return result;
}

unint64_t sub_10006181C()
{
  unint64_t result = qword_10022CEC8;
  if (!qword_10022CEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CEC8);
  }
  return result;
}

unint64_t sub_100061868()
{
  unint64_t result = qword_10022CED8;
  if (!qword_10022CED8)
  {
    sub_10006026C(&qword_10022CED0);
    sub_100061AB4((uint64_t)&unk_10022CEE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CED8);
  }
  return result;
}

unint64_t sub_10006191C()
{
  unint64_t result = qword_10022CEF0;
  if (!qword_10022CEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CEF0);
  }
  return result;
}

unint64_t sub_100061968()
{
  unint64_t result = qword_10022CF00;
  if (!qword_10022CF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CF00);
  }
  return result;
}

unint64_t sub_1000619B4()
{
  unint64_t result = qword_10022CF20;
  if (!qword_10022CF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CF20);
  }
  return result;
}

unint64_t sub_100061A00()
{
  unint64_t result = qword_10022CF28;
  if (!qword_10022CF28)
  {
    sub_10006026C(&qword_10022CED0);
    sub_100061AB4((uint64_t)&unk_10022CF30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CF28);
  }
  return result;
}

unint64_t sub_100061AB4(uint64_t a1)
{
  unint64_t result = sub_10004A4A0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10006026C(v3);
    v5();
    sub_1000225EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_100061B18()
{
  unint64_t result = qword_10022CF38;
  if (!qword_10022CF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CF38);
  }
  return result;
}

uint64_t sub_100061B64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v4 = v5;
      if ((v5 & ~v2) == 0) {
        uint64_t v4 = 0;
      }
      v2 |= v4;
      --v1;
    }
    while (v1);
  }
  else
  {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t getEnumTagSinglePayload for AASA.Default.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AASA.Default.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100061D0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_100061D34(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AASA.Default.CodingKeys()
{
  return &type metadata for AASA.Default.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AASA.AppLinks.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AASA.AppLinks.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100061EA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AASA.AppLinks.CodingKeys()
{
  return &type metadata for AASA.AppLinks.CodingKeys;
}

unint64_t sub_100061EE0()
{
  unint64_t result = qword_10022CF58;
  if (!qword_10022CF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CF58);
  }
  return result;
}

unint64_t sub_100061F30()
{
  unint64_t result = qword_10022CF60;
  if (!qword_10022CF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CF60);
  }
  return result;
}

unint64_t sub_100061F80()
{
  unint64_t result = qword_10022CF68;
  if (!qword_10022CF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CF68);
  }
  return result;
}

unint64_t sub_100061FD0()
{
  unint64_t result = qword_10022CF70;
  if (!qword_10022CF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CF70);
  }
  return result;
}

unint64_t sub_100062020()
{
  unint64_t result = qword_10022CF78;
  if (!qword_10022CF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CF78);
  }
  return result;
}

unint64_t sub_100062070()
{
  unint64_t result = qword_10022CF80;
  if (!qword_10022CF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CF80);
  }
  return result;
}

uint64_t sub_1000620FC(void *a1)
{
  return sub_10005C720(a1);
}

BOOL sub_100062194(uint64_t *a1)
{
  return sub_100062118(*a1, *v1);
}

uint64_t sub_1000621A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10005C8E0();
  *a1 = result;
  return result;
}

void *sub_1000621C8()
{
  id v1 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  v0[2] = v1;
  sub_10004D510(0, (unint64_t *)&qword_100231E00);
  v0[3] = Dictionary.init(dictionaryLiteral:)();
  v0[4] = Dictionary.init(dictionaryLiteral:)();
  v0[5] = Dictionary.init(dictionaryLiteral:)();
  sub_100043478(&qword_10022E730);
  v0[6] = Dictionary.init(dictionaryLiteral:)();
  sub_100043478(&qword_10022E720);
  v0[7] = Dictionary.init(dictionaryLiteral:)();
  v0[8] = 0;
  v0[9] = [objc_allocWithZone((Class)NSLock) init];
  sub_100043478(&qword_10022D328);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1001C3110;
  int v3 = (void *)AMSAccountMediaTypeProduction;
  *(void *)(v2 + 32) = AMSAccountMediaTypeProduction;
  v0[10] = v2;
  id v4 = v3;
  [v1 setNumberStyle:1];
  sub_100063690();
  return v0;
}

uint64_t sub_100062348()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  sub_10006741C(v0, qword_10022D110);
  sub_100067344(v0, (uint64_t)qword_10022D110);
  return static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
}

void *sub_100062398()
{
  type metadata accessor for AccountsObserver();
  swift_allocObject();
  uint64_t result = sub_1000621C8();
  qword_10022D128 = (uint64_t)result;
  return result;
}

uint64_t sub_1000623D4()
{
  *(void *)(v1 + 176) = v0;
  return _swift_task_switch(sub_1000623F4, 0, 0);
}

uint64_t sub_1000623F4()
{
  sub_100043478(&qword_10022D3D0);
  uint64_t inited = swift_initStackObject();
  v0[23] = inited;
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  id v2 = objc_msgSend(self, "ams_sharedAccountStore");
  id v3 = objc_msgSend(v2, "ams_activeiCloudAccount");

  *(void *)(inited + 32) = v3;
  specialized Array._endMutation()();
  v0[24] = inited;
  v0[20] = inited;
  id v4 = sub_10006319C();
  v0[25] = v4;
  v0[2] = v0;
  v0[7] = v0 + 21;
  v0[3] = sub_10006259C;
  uint64_t v5 = swift_continuation_init();
  v0[15] = _NSConcreteStackBlock;
  v0[16] = 0x40000000;
  v0[17] = sub_1000EB85C;
  v0[18] = &unk_10020D710;
  v0[19] = v5;
  [v4 resultWithCompletion:v0 + 15];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10006259C()
{
  sub_100044DDC();
  *id v2 = v1;
  *id v2 = *v0;
  uint64_t v4 = *(void *)(v3 + 48);
  *(void *)(v1 + 208) = v4;
  if (v4)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_100062988;
  }
  else
  {
    uint64_t v5 = sub_1000626B0;
  }
  return _swift_task_switch(v5, 0, 0);
}

void sub_1000626B0()
{
  uint64_t v1 = *(void **)(v0 + 168);

  uint64_t v36 = v1;
  unint64_t v2 = sub_1000629F0(v1);
  uint64_t v3 = sub_1000F10FC(v2);
  swift_bridgeObjectRelease();
  sub_1000F14E0((uint64_t)v3);
  uint64_t v4 = *(void *)(v0 + 160);
  sub_10004D510(0, (unint64_t *)&qword_10022D3D8);
  swift_bridgeObjectRetain();
  uint64_t v5 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v6 = *(void *)(v4 + 16);
  if (!v6)
  {
LABEL_17:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void (**)(uint64_t))(v0 + 8);
    v34(v5);
    return;
  }
  uint64_t v35 = v0;
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v37 = v6;
  while (1)
  {
    int v8 = *(void **)(v4 + 8 * v7 + 32);
    if (!v8) {
      goto LABEL_15;
    }
    id v9 = v8;
    id v10 = [v9 identifier];
    if (!v10)
    {

      goto LABEL_15;
    }
    Swift::UInt8 v11 = v10;
    uint64_t v12 = v4;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    id v16 = v9;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v18 = sub_100042ADC(v13, v15);
    uint64_t v20 = *(void *)(v5 + 16);
    BOOL v21 = (v19 & 1) == 0;
    Swift::Int v22 = v20 + v21;
    if (__OFADD__(v20, v21))
    {
      __break(1u);
LABEL_24:
      __break(1u);
      return;
    }
    unint64_t v23 = v18;
    char v24 = v19;
    sub_100043478(&qword_10022D3E0);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v22)) {
      break;
    }
LABEL_9:
    if (v24)
    {
      uint64_t v27 = *(void *)(v5 + 56);
      int64_t v28 = *(void **)(v27 + 8 * v23);
      *(void *)(v27 + 8 * v23) = v16;
    }
    else
    {
      sub_10002D2EC(v5 + 8 * (v23 >> 6));
      uint64_t v30 = (uint64_t *)(v29 + 16 * v23);
      *uint64_t v30 = v13;
      v30[1] = v15;
      *(void *)(*(void *)(v5 + 56) + 8 * v23) = v16;
      uint64_t v31 = *(void *)(v5 + 16);
      BOOL v32 = __OFADD__(v31, 1);
      uint64_t v33 = v31 + 1;
      if (v32) {
        goto LABEL_24;
      }
      *(void *)(v5 + 16) = v33;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v4 = v12;
    uint64_t v6 = v37;
LABEL_15:
    if (v6 == ++v7)
    {
      swift_bridgeObjectRelease();
      uint64_t v0 = v35;
      goto LABEL_17;
    }
  }
  unint64_t v25 = sub_100042ADC(v13, v15);
  if ((v24 & 1) == (v26 & 1))
  {
    unint64_t v23 = v25;
    goto LABEL_9;
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_100062988()
{
  sub_100041F70();
  uint64_t v1 = *(void **)(v0 + 200);
  swift_willThrow();

  sub_100040954();
  return v2();
}

unint64_t sub_1000629F0(void *a1)
{
  uint64_t v2 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v8 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage;
  id v5 = a1;
  NSArray.makeIterator()();

  sub_100067480((unint64_t *)&qword_10022D3E8, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
  dispatch thunk of IteratorProtocol.next()();
  while (v13)
  {
    sub_100043510(&v12, v11);
    sub_100043520((uint64_t)v11, (uint64_t)v9);
    sub_10004D510(0, (unint64_t *)&qword_10022D3D8);
    if ((swift_dynamicCast() & 1) == 0) {
      uint64_t v10 = 0;
    }
    sub_10004377C((uint64_t)v11);
    if (v10)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    dispatch thunk of IteratorProtocol.next()();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v2);
  return v14;
}

uint64_t sub_100062C24(void *a1, void *a2, void *a3)
{
  id v4 = a2;
  uint64_t v5 = NSDictionary.makeIterator()();

  uint64_t v48 = v5;
  uint64_t v6 = type metadata accessor for NSDictionary.Iterator();
  uint64_t v7 = sub_100067480(&qword_10022D3C0, (void (*)(uint64_t))&type metadata accessor for NSDictionary.Iterator);
  dispatch thunk of IteratorProtocol.next()();
  if (!*((void *)&v45 + 1))
  {
LABEL_22:
    swift_release();

    return (uint64_t)a1;
  }
  uint64_t v35 = v6;
  while (1)
  {
    v43[0] = *(_OWORD *)&v44[5];
    v43[1] = v45;
    *(_OWORD *)Swift::String v44 = v46;
    *(_OWORD *)&_OWORD v44[2] = v47;
    sub_100043520((uint64_t)v43, (uint64_t)v39);
    sub_100043520((uint64_t)v44, (uint64_t)v40);
    sub_100043510(v39, v42);
    sub_100043510(v40, v41);
    sub_100043520((uint64_t)v42, (uint64_t)v39);
    if (!swift_dynamicCast()) {
      goto LABEL_21;
    }
    uint64_t v49 = v38;
    sub_100043520((uint64_t)v41, (uint64_t)v39);
    sub_10004D510(0, (unint64_t *)&qword_100231E00);
    if (swift_dynamicCast())
    {
      id v8 = (id)v37;
    }
    else
    {
      sub_100043520((uint64_t)v41, (uint64_t)v39);
      if ((swift_dynamicCast() & 1) == 0
        || (NSString v9 = String._bridgeToObjectiveC()(),
            swift_bridgeObjectRelease(),
            id v8 = [a3 numberFromString:v9],
            v9,
            !v8))
      {
        swift_bridgeObjectRetain();
        unint64_t v24 = sub_100042ADC(v37, v49);
        char v26 = v25;
        swift_bridgeObjectRelease();
        if (v26)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&v39[0] = a1;
          Swift::Int v28 = a1[3];
          sub_100043478((uint64_t *)&unk_10022E6B0);
          _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v28);
          a1 = *(void **)&v39[0];
          swift_bridgeObjectRelease();
          uint64_t v29 = *(void **)(a1[7] + 8 * v24);
          _NativeDictionary._delete(at:)();

          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v6 = v35;
        goto LABEL_21;
      }
    }
    uint64_t v10 = v7;
    uint64_t v11 = v6;
    id v12 = v8;
    char v13 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v39[0] = a1;
    unint64_t v14 = sub_100042ADC(v37, v49);
    uint64_t v16 = a1[2];
    BOOL v17 = (v15 & 1) == 0;
    Swift::Int v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      break;
    }
    unint64_t v19 = v14;
    char v20 = v15;
    sub_100043478((uint64_t *)&unk_10022E6B0);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v13, v18))
    {
      unint64_t v21 = sub_100042ADC(v37, v49);
      if ((v20 & 1) != (v22 & 1)) {
        goto LABEL_25;
      }
      unint64_t v19 = v21;
    }
    a1 = *(void **)&v39[0];
    if (v20)
    {
      uint64_t v23 = *(void *)(*(void *)&v39[0] + 56);

      *(void *)(v23 + 8 * v19) = v12;
    }
    else
    {
      *(void *)(*(void *)&v39[0] + 8 * (v19 >> 6) + 64) |= 1 << v19;
      uint64_t v30 = (uint64_t *)(a1[6] + 16 * v19);
      *uint64_t v30 = v37;
      v30[1] = v49;
      *(void *)(a1[7] + 8 * v19) = v12;
      uint64_t v31 = a1[2];
      BOOL v32 = __OFADD__(v31, 1);
      uint64_t v33 = v31 + 1;
      if (v32) {
        goto LABEL_24;
      }
      a1[2] = v33;
      swift_bridgeObjectRetain();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v11;
    uint64_t v7 = v10;
LABEL_21:
    sub_10004377C((uint64_t)v41);
    sub_10004377C((uint64_t)v42);
    sub_10002CBB4((uint64_t)v43, &qword_10022D3C8);
    dispatch thunk of IteratorProtocol.next()();
    if (!*((void *)&v45 + 1)) {
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1000630DC(void *a1)
{
  id v2 = objc_msgSend(a1, "ams_privacyAcknowledgement");
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  id v4 = *(void **)(v1 + 16);
  sub_10004D510(0, (unint64_t *)&qword_100231E00);
  uint64_t v5 = (void *)Dictionary.init(dictionaryLiteral:)();
  uint64_t v6 = sub_100062C24(v5, v3, v4);

  if (!*(void *)(v6 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

id sub_10006319C()
{
  id v0 = objc_msgSend(self, "ams_sharedAccountStore");
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_100192C98(v1);
  type metadata accessor for AMSAccountMediaType(0);
  sub_100067480(&qword_10022C710, type metadata accessor for AMSAccountMediaType);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v0, "ams_iTunesAccountsForMediaTypes:", isa);

  return v3;
}

uint64_t sub_10006327C(void *a1)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  uint64_t v5 = sub_100038B5C(a1, (SEL *)&selRef_identifier);
  if (v6)
  {
    uint64_t v7 = v5;
    uint64_t v8 = v6;
    id v9 = objc_msgSend(a1, "ams_DSID");
    sub_100046550();
    if (v9)
    {
      sub_100047460();
      sub_10008B6E0(v10, v11, v12, v13, v14, v15, v16, v17, v50, v51);
    }
    else
    {
      sub_1000477E0();
      sub_10008A31C();
    }
    swift_endAccess();
    swift_bridgeObjectRetain();
    [a1 isActive];
    swift_beginAccess();
    sub_100047460();
    sub_10008B7B8();
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_100038B5C(a1, (SEL *)&selRef_ams_creditsString);
    uint64_t v27 = v26;
    sub_100046550();
    swift_bridgeObjectRetain();
    if (v27)
    {
      sub_10008B740(v25, v27, v7, v8);
    }
    else
    {
      uint64_t v28 = sub_1000477E0();
      sub_10008A360(v28);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_endAccess();
    if (sub_1000630DC(a1))
    {
      sub_100046550();
      swift_bridgeObjectRetain();
      sub_100047460();
      sub_10008B720(v29, v30, v31, v32, v33, v34, v35, v36, v50, v51);
    }
    else
    {
      sub_100046550();
      uint64_t v37 = sub_1000477E0();
      sub_10008A34C(v37, v38);
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1000644EC(a1);
    swift_beginAccess();
    sub_100047460();
    sub_10008B700(v39, v40, v41, v42, v43, v44, v45, v46, v50, v51);
    swift_endAccess();
  }
  else
  {
    sub_100043478(&qword_10022E560);
    uint64_t v18 = sub_1000208FC();
    sub_100044798(v18);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v54 = type metadata accessor for AccountsObserver();
    v53[0] = v1;
    swift_retain();
    id v19 = (id)AMSLogKey();
    if (v19)
    {
      char v20 = v19;
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v22;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100045CF8(v53);
      swift_getMetatypeMetadata();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004C788();
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v50 = v21;
      uint64_t v51 = v23;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004C788();
      sub_1000208D8();
      sub_100011CC0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100049788(v53, v54);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v50 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v50, &qword_10022F490);
      sub_100020E94();
      sub_100011CC0();
    }
    sub_10004377C((uint64_t)v53);
    sub_100023FBC();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v48 = static os_log_type_t.error.getter();
    sub_10004841C(v48);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100063690()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100043478(&qword_10022D340);
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100046550();
  sub_100043478(&qword_10022D390);
  sub_10004A1A0();
  swift_endAccess();
  sub_100046550();
  sub_100043478(&qword_10022D398);
  sub_10004A1A0();
  swift_endAccess();
  sub_100046550();
  sub_100043478(&qword_10022D3A0);
  sub_10004A1A0();
  swift_endAccess();
  sub_100046550();
  sub_100043478(&qword_10022D3A8);
  sub_10004A1A0();
  swift_endAccess();
  uint64_t v6 = type metadata accessor for TaskPriority();
  sub_100045AF8(v6);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  swift_retain();
  sub_10016D650((uint64_t)v5, (uint64_t)&unk_10022D3B8, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1000637EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[31] = a4;
  type metadata accessor for LogMessage.StringInterpolation();
  v4[32] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v4[33] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1000638AC;
  return sub_1000623D4();
}

uint64_t sub_1000638AC()
{
  sub_1000447B0();
  sub_100044DDC();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 272) = v4;
  *(void *)(v2 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_100063C54;
  }
  else {
    uint64_t v5 = sub_100063998;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100063998()
{
  sub_10005370C(v0[34], v0 + 2);
  unint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  int64_t v3 = v0[5];
  unint64_t v4 = v0[6];
  int64_t v5 = (unint64_t)(v0[4] + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v6 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  unint64_t v7 = v6 | (v3 << 6);
  while (1)
  {
    id v12 = *(id *)(*(void *)(v1 + 56) + 8 * v7);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if (v4) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v8 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v8 >= v5) {
      goto LABEL_25;
    }
    unint64_t v9 = *(void *)(v2 + 8 * v8);
    int64_t v10 = v3 + 1;
    if (!v9)
    {
      int64_t v10 = v3 + 2;
      if (v3 + 2 >= v5) {
        goto LABEL_25;
      }
      unint64_t v9 = *(void *)(v2 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v3 + 3;
        if (v3 + 3 >= v5) {
          goto LABEL_25;
        }
        unint64_t v9 = *(void *)(v2 + 8 * v10);
        if (!v9)
        {
          int64_t v10 = v3 + 4;
          if (v3 + 4 >= v5) {
            goto LABEL_25;
          }
          unint64_t v9 = *(void *)(v2 + 8 * v10);
          if (!v9)
          {
            int64_t v10 = v3 + 5;
            if (v3 + 5 >= v5) {
              goto LABEL_25;
            }
            unint64_t v9 = *(void *)(v2 + 8 * v10);
            if (!v9)
            {
              int64_t v10 = v3 + 6;
              if (v3 + 6 >= v5) {
                goto LABEL_25;
              }
              unint64_t v9 = *(void *)(v2 + 8 * v10);
              if (!v9) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v4 = (v9 - 1) & v9;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    int64_t v3 = v10;
  }
  int64_t v11 = v3 + 7;
  while (v11 < v5)
  {
    unint64_t v9 = *(void *)(v2 + 8 * v11++);
    if (v9)
    {
      int64_t v10 = v11 - 1;
      goto LABEL_20;
    }
  }
LABEL_25:
  swift_release();
  unint64_t v1 = (unint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_38;
  }
  uint64_t v13 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_bridgeObjectRetain();
  for (; v13; uint64_t v13 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v14 = 0;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        sub_1000477E0();
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        id v15 = *(id *)(v1 + 8 * v14 + 32);
      }
      uint64_t v16 = v15;
      uint64_t v17 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        break;
      }
      sub_10006327C(v15);

      ++v14;
      if (v17 == v13) {
        goto LABEL_33;
      }
    }
LABEL_37:
    __break(1u);
LABEL_38:
    swift_retain();
    swift_bridgeObjectRetain();
  }
LABEL_33:
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  sub_100040954();
  return v18();
}

uint64_t sub_100063C54()
{
  uint64_t v2 = v0[31];
  sub_100043478(&qword_10022E560);
  uint64_t v3 = sub_1000208FC();
  sub_100044798(v3);
  *(_OWORD *)(sub_1000470BC() + 16) = xmmword_1001C3130;
  uint64_t v4 = type metadata accessor for AccountsObserver();
  v0[7] = v2;
  sub_100045CCC(v4);
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    unint64_t v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v1;
    uint64_t v9 = v8;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v10 = sub_100044028();
    v0[26] = swift_getMetatypeMetadata();
    v0[23] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100047660();
    sub_100020E44();
    v0[19] = v7;
    v0[22] = &type metadata for String;
    v0[20] = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100047660();
    sub_1000208D8();
    sub_100011DB4();
    unint64_t v1 = v17;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v11 = sub_100044028();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    v0[11] = v11;
    v0[14] = MetatypeMetadata;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)(v0 + 11), &qword_10022F490);
    sub_100020E94();
    sub_100011DB4();
  }
  sub_10004377C((uint64_t)(v0 + 7));
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  swift_getErrorValue();
  v0[18] = v0[28];
  sub_10003BAA4(v1);
  sub_1000456E0();
  sub_100040BF8();
  v13();
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)v1, &qword_10022F490);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v14 = static os_log_type_t.error.getter();
  sub_10004841C(v14);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_task_dealloc();
  sub_100040954();
  return v15();
}

uint64_t sub_100063EF0(uint64_t a1, uint64_t a2, void *a3)
{
  sub_10005370C(a1, v48);
  uint64_t v44 = v48[0];
  int64_t v5 = v48[3];
  unint64_t v6 = v48[4];
  uint64_t v41 = v48[1];
  int64_t v42 = (unint64_t)(v48[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v43 = a2;
  if (!v6) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v7 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v8 = v7 | (v5 << 6);
  while (1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(v44 + 48) + 16 * v8);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    uint64_t v16 = *(void **)(*(void *)(v44 + 56) + 8 * v8);
    uint64_t v17 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    id v18 = v16;
    if (v17)
    {
      swift_bridgeObjectRetain();
      sub_100042ADC(v15, v14);
      char v20 = v19;
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_30;
      }
    }
    unint64_t v46 = v6;
    uint64_t v47 = v5;
    swift_bridgeObjectRetain();
    id v45 = v18;
    id v21 = v18;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v49 = (void *)*a3;
    uint64_t v23 = v49;
    id v24 = a3;
    *a3 = 0x8000000000000000;
    unint64_t v25 = sub_100042ADC(v15, v14);
    uint64_t v27 = v23[2];
    BOOL v28 = (v26 & 1) == 0;
    Swift::Int v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      break;
    }
    unint64_t v30 = v25;
    char v31 = v26;
    sub_100043478(&qword_10022E710);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v29))
    {
      unint64_t v32 = sub_100042ADC(v15, v14);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_36;
      }
      unint64_t v30 = v32;
    }
    uint64_t v34 = v49;
    if (v31)
    {
      uint64_t v35 = v49[7];

      *(void *)(v35 + 8 * v30) = v21;
    }
    else
    {
      v49[(v30 >> 6) + 8] |= 1 << v30;
      uint64_t v36 = (uint64_t *)(v34[6] + 16 * v30);
      *uint64_t v36 = v15;
      v36[1] = v14;
      *(void *)(v34[7] + 8 * v30) = v21;
      uint64_t v37 = v34[2];
      BOOL v38 = __OFADD__(v37, 1);
      uint64_t v39 = v37 + 1;
      if (v38) {
        goto LABEL_35;
      }
      v34[2] = v39;
      swift_bridgeObjectRetain();
    }
    a3 = v24;
    *id v24 = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000643FC();
    a2 = v43;
    unint64_t v6 = v46;
    int64_t v5 = v47;
    id v18 = v45;
LABEL_30:

    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v9 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_34;
    }
    if (v9 >= v42) {
      goto LABEL_32;
    }
    unint64_t v10 = *(void *)(v41 + 8 * v9);
    int64_t v11 = v5 + 1;
    if (!v10)
    {
      int64_t v11 = v5 + 2;
      if (v5 + 2 >= v42) {
        goto LABEL_32;
      }
      unint64_t v10 = *(void *)(v41 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v5 + 3;
        if (v5 + 3 >= v42) {
          goto LABEL_32;
        }
        unint64_t v10 = *(void *)(v41 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v5 + 4;
          if (v5 + 4 >= v42) {
            goto LABEL_32;
          }
          unint64_t v10 = *(void *)(v41 + 8 * v11);
          if (!v10)
          {
            int64_t v11 = v5 + 5;
            if (v5 + 5 >= v42) {
              goto LABEL_32;
            }
            unint64_t v10 = *(void *)(v41 + 8 * v11);
            if (!v10)
            {
              int64_t v12 = v5 + 6;
              while (v12 < v42)
              {
                unint64_t v10 = *(void *)(v41 + 8 * v12++);
                if (v10)
                {
                  int64_t v11 = v12 - 1;
                  goto LABEL_18;
                }
              }
LABEL_32:
              swift_bridgeObjectRelease();
              swift_release();
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    int64_t v5 = v11;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_10006424C(uint64_t a1)
{
  sub_10005370C(a1, v14);
  uint64_t v1 = v14[0];
  uint64_t v2 = v14[1];
  int64_t v3 = v14[3];
  unint64_t v4 = v14[4];
  int64_t v5 = (unint64_t)(v14[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v6 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  unint64_t v7 = v6 | (v3 << 6);
  while (1)
  {
    int64_t v12 = *(void **)(*(void *)(v1 + 56) + 8 * v7);
    id v13 = v12;
    sub_100066A1C(v12);
    swift_retain();
    sub_1000221A8();
    swift_release();
    swift_release();

    if (v4) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v8 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v8 >= v5) {
      goto LABEL_21;
    }
    unint64_t v9 = *(void *)(v2 + 8 * v8);
    int64_t v10 = v3 + 1;
    if (!v9)
    {
      int64_t v10 = v3 + 2;
      if (v3 + 2 >= v5) {
        goto LABEL_21;
      }
      unint64_t v9 = *(void *)(v2 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v3 + 3;
        if (v3 + 3 >= v5) {
          goto LABEL_21;
        }
        unint64_t v9 = *(void *)(v2 + 8 * v10);
        if (!v9)
        {
          int64_t v10 = v3 + 4;
          if (v3 + 4 >= v5) {
            goto LABEL_21;
          }
          unint64_t v9 = *(void *)(v2 + 8 * v10);
          if (!v9)
          {
            int64_t v10 = v3 + 5;
            if (v3 + 5 >= v5) {
              goto LABEL_21;
            }
            unint64_t v9 = *(void *)(v2 + 8 * v10);
            if (!v9)
            {
              int64_t v11 = v3 + 6;
              while (v11 < v5)
              {
                unint64_t v9 = *(void *)(v2 + 8 * v11++);
                if (v9)
                {
                  int64_t v10 = v11 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v4 = (v9 - 1) & v9;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    int64_t v3 = v10;
  }
  __break(1u);
}

uint64_t sub_1000643FC()
{
  sub_100046550();
  sub_10004405C();
  sub_10008A31C();
  uint64_t v1 = v0;
  swift_endAccess();

  sub_100046550();
  uint64_t v2 = sub_10004405C();
  sub_10008A418(v2);
  swift_endAccess();
  sub_100046550();
  uint64_t v3 = sub_10004405C();
  sub_10008A360(v3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_100046550();
  uint64_t v4 = sub_10004405C();
  sub_10008A34C(v4, v5);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_100046550();
  uint64_t v6 = sub_10004405C();
  sub_10008A338(v6, v7);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

void *sub_1000644EC(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v33 = *(void *)(v2 + 16);
  if (!v33)
  {
    swift_bridgeObjectRetain();
LABEL_19:
    swift_bridgeObjectRelease();
    return _swiftEmptyDictionarySingleton;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v3 = 0;
  while (1)
  {
    id v4 = *(id *)(v2 + 8 * v3 + 32);
    id v5 = objc_msgSend(a1, "ams_storefrontForMediaType:", v4);
    if (v5) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_100088F04(v4);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {

      goto LABEL_15;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v25 = _swiftEmptyDictionarySingleton[3];
    sub_100043478(&qword_10022D388);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v25);

    type metadata accessor for AMSAccountMediaType(0);
    sub_100067480(&qword_10022C710, type metadata accessor for AMSAccountMediaType);
    _NativeDictionary._delete(at:)();
    swift_bridgeObjectRelease();
LABEL_14:

    swift_bridgeObjectRelease();
LABEL_15:
    if (v33 == ++v3)
    {
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
  }
  uint64_t v6 = v5;
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  char v10 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = sub_100088F04(v4);
  uint64_t v13 = _swiftEmptyDictionarySingleton[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (!__OFADD__(v13, v14))
  {
    unint64_t v16 = v11;
    char v17 = v12;
    sub_100043478(&qword_10022D388);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v10, v15))
    {
      uint64_t v18 = sub_100088F04(v4);
      if ((v17 & 1) != (v19 & 1)) {
        goto LABEL_22;
      }
      unint64_t v16 = v18;
    }
    if (v17)
    {
      char v20 = (uint64_t *)(_swiftEmptyDictionarySingleton[7] + 16 * v16);
      swift_bridgeObjectRelease();
      *char v20 = v7;
      v20[1] = v9;
    }
    else
    {
      sub_10002D2EC((uint64_t)&_swiftEmptyDictionarySingleton[v16 >> 6]);
      *(void *)(v26 + 8 * v16) = v4;
      uint64_t v27 = (uint64_t *)(_swiftEmptyDictionarySingleton[7] + 16 * v16);
      *uint64_t v27 = v7;
      v27[1] = v9;
      uint64_t v28 = _swiftEmptyDictionarySingleton[2];
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29) {
        goto LABEL_21;
      }
      _swiftEmptyDictionarySingleton[2] = v30;
      id v31 = v4;
    }
    goto LABEL_14;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  type metadata accessor for AMSAccountMediaType(0);
  uint64_t result = (void *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1000647B8()
{
  uint64_t v2 = sub_100043478((uint64_t *)&unk_100231D40);
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_10004A85C();
  uint64_t v35 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  sub_100020DEC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100040A70();
  uint64_t v8 = v7;
  type metadata accessor for NSNotificationCenter.Publisher();
  sub_100020DEC();
  __chkstk_darwin(v9);
  sub_100040A70();
  sub_100043478(&qword_10022D360);
  sub_100020DEC();
  __chkstk_darwin(v10);
  sub_100040A70();
  sub_100043478(&qword_10022D368);
  sub_100020DEC();
  __chkstk_darwin(v11);
  sub_100040A70();
  uint64_t v12 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v13 = sub_1000208F0(v12);
  __chkstk_darwin(v13);
  sub_100011D4C();
  sub_100043478(&qword_10022E560);
  uint64_t v14 = sub_1000208FC();
  sub_100044798(v14);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v39 = type metadata accessor for AccountsObserver();
  v38[0] = v0;
  uint64_t v34 = v0;
  swift_retain();
  id v15 = (id)AMSLogKey();
  if (v15)
  {
    unint64_t v16 = v15;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v38, v39);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v36[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v36, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v36[0] = v17;
    v36[1] = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v36, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049788(v38, v39);
    uint64_t v21 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v36[0] = v21;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v36, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v38);
  sub_100050D40();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v22 = static os_log_type_t.info.getter();
  sub_10004841C(v22);
  swift_bridgeObjectRelease();
  id v23 = [self defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  if (qword_10022C3C0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_100067344(v35, (uint64_t)qword_10022D110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, v24, v35);
  if (qword_10022C588 != -1) {
    swift_once();
  }
  Swift::Int v25 = (void *)qword_100244180;
  v38[0] = (id)qword_100244180;
  type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  sub_100040F28();
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  sub_100067480(&qword_10022D370, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  sub_10006737C();
  id v26 = v25;
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_10002CBB4(v1, (uint64_t *)&unk_100231D40);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v35);
  sub_100020914();
  v27();
  uint64_t v28 = (void *)qword_100244180;
  v38[0] = (id)qword_100244180;
  sub_100040F28();
  sub_10002B6DC(&qword_10022D378, &qword_10022D360);
  id v29 = v28;
  Publisher.receive<A>(on:options:)();
  sub_10002CBB4(v1, (uint64_t *)&unk_100231D40);

  sub_100020914();
  v30();
  swift_allocObject();
  swift_weakInit();
  sub_10002B6DC(&qword_10022D380, &qword_10022D368);
  uint64_t v31 = Publisher<>.sink(receiveValue:)();
  swift_release();
  sub_100020914();
  v32();
  v34[8] = v31;
  return swift_release();
}

uint64_t sub_100064E74()
{
  uint64_t v0 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v0 - 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v2 = result;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v19 = type metadata accessor for AccountsObserver();
    v18[0] = v2;
    swift_retain();
    id v3 = (id)AMSLogKey();
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v7 = v6;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v8._uint64_t countAndFlagsBits = 0;
      v8._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v8);
      sub_100049788(v18, v19);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v16[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v16, &qword_10022F490);
      v10._uint64_t countAndFlagsBits = 5972026;
      v10._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v10);
      uint64_t MetatypeMetadata = &type metadata for String;
      v16[0] = v5;
      v16[1] = v7;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v16, &qword_10022F490);
      v11._uint64_t countAndFlagsBits = 93;
      v11._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v11);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v12._uint64_t countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v12);
      sub_100049788(v18, v19);
      uint64_t v13 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v16[0] = v13;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v16, &qword_10022F490);
      v14._uint64_t countAndFlagsBits = 58;
      v14._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v14);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v18);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v15 = static os_log_type_t.default.getter();
    sub_10004841C(v15);
    swift_bridgeObjectRelease();
    sub_1000656AC();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000651A0(void *a1)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_100038B5C(a1, (SEL *)&selRef_identifier);
  if (!v6)
  {
    sub_100043478(&qword_10022E560);
    uint64_t v12 = sub_1000208FC();
    sub_100044798(v12);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    v44[3] = type metadata accessor for AccountsObserver();
    v44[0] = v1;
    swift_retain();
    id v13 = (id)AMSLogKey();
    if (v13)
    {
      Swift::String v14 = v13;
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      sub_100041F7C();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100043998(MetatypeMetadata);
      sub_10002CBB4((uint64_t)v43, &qword_10022F490);
      sub_100020E44();
      v43[3] = &type metadata for String;
      v43[0] = v15;
      v43[1] = v17;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v43, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v31._uint64_t countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      sub_100041F7C();
      uint64_t v32 = swift_getMetatypeMetadata();
      sub_100043998(v32);
      sub_10002CBB4((uint64_t)v43, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v44);
    sub_100023FBC();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v33 = static os_log_type_t.error.getter();
    sub_10004841C(v33);
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  sub_10002CAAC();
  uint64_t v9 = v1[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v10 = sub_1000888C4(v7, v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v10 == 2)
  {
    if ([a1 isActive]) {
      uint64_t v11 = 1;
    }
    else {
      uint64_t v11 = 2;
    }
  }
  else
  {
    char v20 = v10 ^ [a1 isActive];
    uint64_t v21 = 1;
    if (v10) {
      uint64_t v21 = 2;
    }
    if (v20) {
      uint64_t v11 = v21;
    }
    else {
      uint64_t v11 = 0;
    }
  }
  uint64_t v22 = sub_100038B5C(a1, (SEL *)&selRef_ams_creditsString);
  uint64_t v24 = v23;
  sub_10002CAAC();
  uint64_t v25 = v1[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_100012420(v7, v8, v25);
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v24)
  {
    if (!v28) {
      goto LABEL_29;
    }
    goto LABEL_22;
  }
  if (!v28)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (v22 == v26 && v24 == v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v30 & 1) == 0) {
LABEL_23:
  }
    v11 |= 4uLL;
LABEL_29:
  if (sub_1000630DC(a1))
  {
    sub_10002CAAC();
    uint64_t v34 = v1[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_100088904(v7, v8, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v35)
    {
      swift_bridgeObjectRetain();
      sub_1001A4060();
      char v37 = v36;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (v37) {
        goto LABEL_35;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v11 |= 8uLL;
  }
LABEL_35:
  sub_10002CAAC();
  uint64_t v38 = v1[7];
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_100088904(v7, v8, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000644EC(a1);
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1001A4220();
    char v41 = v40;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v41) {
      return v11;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v11 | 0x10;
}

uint64_t sub_1000656AC()
{
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100043478(&qword_10022D340);
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_10004A85C();
  uint64_t v5 = type metadata accessor for TaskPriority();
  sub_100045AF8(v5);
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  void v6[5] = v2;
  swift_retain();
  sub_10016D650(v1, (uint64_t)&unk_10022D350, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_100065784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[26] = a4;
  unsigned char v5[27] = a5;
  type metadata accessor for LogMessage.StringInterpolation();
  v5[28] = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v5[29] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_100065844;
  return sub_1000623D4();
}

uint64_t sub_100065844()
{
  sub_100041F70();
  uint64_t v3 = v2;
  sub_1000447B0();
  uint64_t v5 = v4;
  sub_100044DDC();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_100044DDC();
  *uint64_t v8 = v7;
  *(void *)(v5 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = sub_1000659D0;
  }
  else
  {
    *(void *)(v5 + 248) = v3;
    uint64_t v9 = sub_10006593C;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_10006593C()
{
  sub_100041F70();
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 208);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10006699C(v2, v2, v1);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_100040954();
  return v3();
}

uint64_t sub_1000659D0()
{
  uint64_t v2 = v0[26];
  sub_100043478(&qword_10022E560);
  uint64_t v3 = sub_1000208FC();
  sub_100044798(v3);
  *(_OWORD *)(sub_1000470BC() + 16) = xmmword_1001C3130;
  uint64_t v4 = type metadata accessor for AccountsObserver();
  v0[2] = v2;
  sub_100045CCC(v4);
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v1;
    uint64_t v9 = v8;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v10 = sub_100044028();
    v0[21] = swift_getMetatypeMetadata();
    v0[18] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100047660();
    sub_100020E44();
    v0[14] = v7;
    v0[17] = &type metadata for String;
    v0[15] = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100047660();
    sub_1000208D8();
    sub_100011DB4();
    uint64_t v1 = v17;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v11 = sub_100044028();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    v0[6] = v11;
    v0[9] = MetatypeMetadata;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)(v0 + 6), &qword_10022F490);
    sub_100020E94();
    sub_100011DB4();
  }
  sub_10004377C((uint64_t)(v0 + 2));
  sub_100050D40();
  swift_getErrorValue();
  v0[13] = v0[23];
  sub_10003BAA4(v1);
  sub_1000456E0();
  sub_100040BF8();
  v13();
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)v1, &qword_10022F490);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v14 = static os_log_type_t.error.getter();
  sub_10004841C(v14);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_task_dealloc();
  sub_100040954();
  return v15();
}

uint64_t sub_100065C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  sub_100043478(&qword_10022D358);
  uint64_t v35 = Dictionary.init(dictionaryLiteral:)();
  char v34 = 0;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_100063EF0(v5, a2, &v35);
  swift_bridgeObjectRelease();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_100066148(v6, (uint64_t (*)(void))sub_100067260);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = (uint64_t *)(v8 + 40);
    do
    {
      uint64_t v11 = *v10;
      id v12 = (id)*(v10 - 1);
      sub_100066320(v12, v11, (uint64_t)&v35, &v34);

      v10 += 2;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease_n();
    char v13 = v34;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v13 = 0;
  }
  uint64_t v14 = v35;
  swift_retain();
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_10006424C(v15);
  swift_bridgeObjectRelease();
  if (v13)
  {
    sub_100066A1C(0);
    swift_retain();
    sub_1000221A8();
    swift_release();
    swift_release();
  }
  if (!*(void *)(v14 + 16))
  {
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v33 = type metadata accessor for AccountsObserver();
    v32[0] = a1;
    swift_retain();
    id v16 = (id)AMSLogKey();
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v21._uint64_t countAndFlagsBits = 0;
      v21._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      sub_100049788(v32, v33);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v30[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v30, &qword_10022F490);
      v23._uint64_t countAndFlagsBits = 5972026;
      v23._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      uint64_t MetatypeMetadata = &type metadata for String;
      v30[0] = v18;
      v30[1] = v20;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v30, &qword_10022F490);
      v24._uint64_t countAndFlagsBits = 93;
      v24._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v25._uint64_t countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      sub_100049788(v32, v33);
      uint64_t v26 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v30[0] = v26;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v30, &qword_10022F490);
      v27._uint64_t countAndFlagsBits = 58;
      v27._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v32);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v28 = static os_log_type_t.default.getter();
    sub_10004841C(v28);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

id sub_100066114(void *a1)
{
  id v1 = a1;
  sub_1000651A0(v1);
  return v1;
}

void sub_100066148(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_1000731F4(0, v2, 0);
    uint64_t v4 = sub_1000672C4(a1);
    if ((v4 & 0x8000000000000000) == 0)
    {
      unint64_t v6 = v4;
      if (v4 < 1 << *(unsigned char *)(a1 + 32))
      {
        uint64_t v7 = a1 + 64;
        while ((*(void *)(v7 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
        {
          if (v5 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_18;
          }
          uint64_t v17 = v2;
          int v18 = v5;
          id v8 = *(id *)(*(void *)(a1 + 56) + 8 * v6);
          uint64_t v9 = a2();
          uint64_t v11 = v10;

          unint64_t v13 = _swiftEmptyArrayStorage[2];
          unint64_t v12 = _swiftEmptyArrayStorage[3];
          if (v13 >= v12 >> 1) {
            sub_1000731F4(v12 > 1, v13 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v13 + 1;
          uint64_t v14 = &_swiftEmptyArrayStorage[2 * v13];
          v14[4] = v9;
          void v14[5] = v11;
          if ((uint64_t)v6 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_19;
          }
          uint64_t v7 = a1 + 64;
          if ((*(void *)(a1 + 64 + 8 * (v6 >> 6)) & (1 << v6)) == 0) {
            goto LABEL_20;
          }
          if (v18 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_21;
          }
          uint64_t v15 = _HashTable.occupiedBucket(after:)();
          uint64_t v2 = v17 - 1;
          if (v17 == 1) {
            return;
          }
          unint64_t v6 = v15;
          if ((v15 & 0x8000000000000000) == 0)
          {
            int v5 = *(_DWORD *)(a1 + 36);
            if (v15 < 1 << *(unsigned char *)(a1 + 32)) {
              continue;
            }
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

void *sub_100066320(void *result, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  if (a2)
  {
    char v5 = a2;
    unint64_t v6 = result;
    uint64_t result = (void *)sub_100038B5C(result, (SEL *)&selRef_identifier);
    if (v7)
    {
      uint64_t v8 = (uint64_t)result;
      uint64_t v9 = v7;
      id v10 = objc_msgSend(v6, "ams_DSID");
      if (v10)
      {
        uint64_t v11 = (uint64_t)v10;
        id v12 = v10;
        sub_10008B824(v11, v8, v9, v13, v14, v15, v16, v17, v18, v19);
        swift_bridgeObjectRelease();

        if ((v5 & 1) == 0) {
          return (void *)sub_10006327C(v6);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        *a4 = 1;
        if ((v5 & 1) == 0) {
          return (void *)sub_10006327C(v6);
        }
      }
      sub_1000663F8(v6);
      return (void *)sub_10006327C(v6);
    }
  }
  return result;
}

void sub_1000663F8(void *a1)
{
  if (objc_msgSend(a1, "ams_isiTunesAccount"))
  {
    if (qword_10022C3F0 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void **)(qword_100244080 + 16);
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = a1;
    v7[4] = sub_1000672BC;
    v7[5] = v3;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    _OWORD v7[2] = sub_10016D7B4;
    v7[3] = &unk_10020D698;
    uint64_t v4 = _Block_copy(v7);
    id v5 = v2;
    id v6 = a1;
    swift_release();
    [v5 setUpCacheForAccount:v6 completion:v4];
    _Block_release(v4);
  }
}

uint64_t sub_100066530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_100011D4C();
  sub_100043478(&qword_10022E560);
  uint64_t v7 = sub_1000208FC();
  sub_100044798(v7);
  if (a2)
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    uint64_t v29 = type metadata accessor for AccountsObserver();
    v28[0] = a3;
    swift_retain();
    id v8 = (id)AMSLogKey();
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100049788(v28, v29);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v25 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v25, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v25 = v10;
      uint64_t v26 = v12;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v25, &qword_10022F490);
      sub_1000208D8();
      sub_100011CC0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100049788(v28, v29);
      uint64_t v19 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v25 = v19;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v25, &qword_10022F490);
      sub_100020E94();
      sub_100011CC0();
    }
    sub_10004377C((uint64_t)v28);
    sub_100020924();
    LogMessage.init(stringLiteral:)();
    swift_getErrorValue();
    uint64_t v29 = v24;
    sub_10003BAA4(v28);
    sub_1000456E0();
    (*(void (**)(void))(v20 + 16))();
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)v28, &qword_10022F490);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v21 = static os_log_type_t.error.getter();
  }
  else
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v29 = type metadata accessor for AccountsObserver();
    v28[0] = a3;
    swift_retain();
    id v14 = (id)AMSLogKey();
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v18 = v17;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100045CF8(v28);
      swift_getMetatypeMetadata();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004C788();
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v25 = v16;
      uint64_t v26 = v18;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004C788();
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100049788(v28, v29);
      uint64_t v22 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v25 = v22;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v25, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v28);
    sub_100020924();
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v21 = static os_log_type_t.default.getter();
  }
  sub_10004841C(v21);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10006699C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  [*(id *)(a1 + 72) lock];
  sub_100065C60(a2, a3);
  [*(id *)(a1 + 72) unlock];
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100066A1C(void *a1)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v24 = type metadata accessor for AccountsObserver();
  v23[0] = v1;
  swift_retain();
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v23, v24);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v21[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v21, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v21[0] = v8;
    v21[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v21, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v12 = sub_100045CF8(v23);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v21[0] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v21, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v23);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v13 = static os_log_type_t.default.getter();
  sub_10004841C(v13);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3120;
  *(void *)(inited + 32) = 0x707954746E657665;
  *(void *)(inited + 40) = 0xE900000000000065;
  strcpy((char *)(inited + 48), "AccountChanged");
  *(unsigned char *)(inited + 63) = -18;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x656372756F73;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 88) = 0xE600000000000000;
  strcpy((char *)(inited + 96), "amsengagementd");
  *(unsigned char *)(inited + 111) = -18;
  v21[0] = Dictionary.init(dictionaryLiteral:)();
  if (a1)
  {
    uint64_t v24 = sub_10004D510(0, (unint64_t *)&qword_100231E00);
    v23[0] = a1;
    id v15 = a1;
    sub_10003E698((uint64_t)v23, 1684632420, 0xE400000000000000);
  }
  sub_100043478(&qword_10022D338);
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v16 = sub_100051DF8();
  id v17 = [objc_allocWithZone((Class)AMSEngagement) initWithBag:v16];

  sub_1000119BC(v21[0]);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [v17 enqueueData:isa];

  return Promise<A>.init(_:)();
}

uint64_t sub_100066E8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100066EEC()
{
  sub_100066E8C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AccountsObserver()
{
  return self;
}

uint64_t sub_100066F44(char a1, uint64_t a2, void *a3)
{
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3140;
  LogMessage.init(stringLiteral:)();
  id v6 = objc_msgSend(a3, "ams_DSID");
  if (v6)
  {
    id v7 = v6;
    *((void *)&v13 + 1) = sub_10004D510(0, (unint64_t *)&qword_100231E00);
    *(void *)&long long v12 = v7;
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  static LogMessage.sensitive(_:)();
  sub_10002CBB4((uint64_t)&v12, &qword_10022F490);
  LogMessage.init(stringLiteral:)();
  *((void *)&v13 + 1) = &type metadata for Bool;
  LOBYTE(v12) = a1 & 1;
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)&v12, &qword_10022F490);
  if (a2)
  {
    swift_getErrorValue();
    *((void *)&v13 + 1) = v11;
    uint64_t v8 = sub_10003BAA4((uint64_t *)&v12);
    (*(void (**)(uint64_t *))(*(void *)(v11 - 8) + 16))(v8);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)&v12, &qword_10022F490);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v9 = static os_log_type_t.default.getter();
  sub_10004841C(v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000671A4()
{
  return sub_10000E644(48);
}

uint64_t sub_1000671AC()
{
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10006778C;
  uint64_t v5 = sub_100046C28();
  return sub_100065784(v5, v6, v7, v3, v2);
}

id sub_100067260(void *a1)
{
  return sub_100066114(a1);
}

uint64_t sub_100067268(uint64_t a1, uint64_t a2)
{
  return sub_100066530(a1, a2, v2);
}

uint64_t sub_100067284()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000672BC(char a1, uint64_t a2)
{
  return sub_100066F44(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1000672C4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100067344(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t sub_10006737C()
{
  unint64_t result = qword_10022F6A0;
  if (!qword_10022F6A0)
  {
    sub_10004D510(255, (unint64_t *)&qword_10022F690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022F6A0);
  }
  return result;
}

uint64_t sub_1000673DC()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100067414()
{
  return sub_100064E74();
}

uint64_t *sub_10006741C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100067480(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000674C8()
{
  return sub_10000E644(40);
}

uint64_t sub_1000674D0()
{
  sub_100041F70();
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100067574;
  uint64_t v4 = sub_100046C28();
  return sub_1000637EC(v4, v5, v6, v2);
}

uint64_t sub_100067574()
{
  sub_1000447B0();
  uint64_t v1 = *v0;
  sub_100044DDC();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100040954();
  return v3();
}

ValueMetadata *type metadata accessor for AccountsObserver.AccountChangeType()
{
  return &type metadata for AccountsObserver.AccountChangeType;
}

unint64_t sub_100067650()
{
  unint64_t result = qword_10022D3F0;
  if (!qword_10022D3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D3F0);
  }
  return result;
}

unint64_t sub_1000676A0()
{
  unint64_t result = qword_10022D3F8;
  if (!qword_10022D3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D3F8);
  }
  return result;
}

unint64_t sub_1000676F0()
{
  unint64_t result = qword_10022D400;
  if (!qword_10022D400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D400);
  }
  return result;
}

unint64_t sub_100067740()
{
  unint64_t result = qword_10022D408;
  if (!qword_10022D408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D408);
  }
  return result;
}

id sub_100067790(uint64_t a1)
{
  id v2 = objc_msgSend(self, "ams_sharedAccountStore");
  id v3 = sub_1000677E8(a1);

  return v3;
}

id sub_1000677E8(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a1];
  id v3 = objc_msgSend(v1, "ams_iTunesAccountWithDSID:", v2);

  return v3;
}

id sub_100067854()
{
  id v1 = objc_msgSend(v0, "ams_activeiTunesAccount");
  return v1;
}

id sub_10006788C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSString a5)
{
  if (a3) {
    NSString v8 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v8 = 0;
  }
  id v9 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a1];
  if (a5) {
    a5 = String._bridgeToObjectiveC()();
  }
  id v10 = objc_msgSend(v5, "ams_accountWithAltDSID:DSID:username:accountTypeIdentifier:", v8, v9, a5, ACAccountTypeIdentifieriTunesStore);

  return v10;
}

id sub_100067958()
{
  return sub_100067854();
}

id sub_10006797C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_10006788C(a1, a2, a3, a4, a5);
}

ValueMetadata *type metadata accessor for AMPAccountFinder()
{
  return &type metadata for AMPAccountFinder;
}

unint64_t sub_1000679B0(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020BB08, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xA) {
    return 10;
  }
  else {
    return v3;
  }
}

void *sub_1000679FC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  uint64_t v49 = *(void *)(a1 + 16);
  if (v49)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v48 = _swiftEmptyArrayStorage;
    uint64_t v45 = a1;
    while (1)
    {
      uint64_t v8 = *(void *)(a1 + 8 * v7 + 32);
      swift_bridgeObjectRetain();
      AnyHashable.init<A>(_:)();
      if (*(void *)(v8 + 16) && (unint64_t v9 = sub_100043670((uint64_t)v50), (v10 & 1) != 0))
      {
        sub_100043520(*(void *)(v8 + 56) + 32 * v9, (uint64_t)&v52);
      }
      else
      {
        long long v52 = 0u;
        long long v53 = 0u;
      }
      sub_1000434BC((uint64_t)v50);
      if (!*((void *)&v53 + 1)) {
        break;
      }
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      v54._uint64_t countAndFlagsBits = 0x6C436E6F69746361;
      v54._object = (void *)0xEB00000000737361;
      char v11 = sub_1000679B0(v54);
      switch(v11)
      {
        case 1:
          type metadata accessor for CacheDataAction();
          goto LABEL_31;
        case 2:
          type metadata accessor for CarrierOfferRegistrationAction();
          goto LABEL_31;
        case 3:
          type metadata accessor for OpenURLAction();
          goto LABEL_31;
        case 4:
          type metadata accessor for EnqueueAction();
          goto LABEL_31;
        case 5:
          type metadata accessor for FollowUpNotificationAction();
          goto LABEL_31;
        case 6:
          type metadata accessor for MessageAction();
          goto LABEL_31;
        case 7:
          type metadata accessor for SyncAction();
          goto LABEL_31;
        case 8:
          type metadata accessor for SystemEngagementAction();
          goto LABEL_31;
        case 9:
          type metadata accessor for UserNotificationAction();
          goto LABEL_31;
        case 10:
          if (swift_isUniquelyReferenced_nonNull_native()) {
            goto LABEL_42;
          }
          sub_100044DE8();
          uint64_t v39 = v41;
          goto LABEL_43;
        default:
          type metadata accessor for BadgingAction();
LABEL_31:
          uint64_t v24 = type metadata accessor for MessageAction();
          if (!swift_dynamicCastMetatype() || (a3 & 1) == 0)
          {
            uint64_t v35 = &off_100214870;
            switch(v11)
            {
              case 1:
                uint64_t v24 = type metadata accessor for CacheDataAction();
                uint64_t v35 = &off_10020E9D0;
                break;
              case 2:
                uint64_t v24 = type metadata accessor for CarrierOfferRegistrationAction();
                uint64_t v35 = &off_10020E9E0;
                break;
              case 3:
                uint64_t v24 = type metadata accessor for OpenURLAction();
                uint64_t v35 = &off_100215790;
                break;
              case 4:
                uint64_t v24 = type metadata accessor for EnqueueAction();
                uint64_t v35 = &off_100210770;
                break;
              case 5:
                uint64_t v24 = type metadata accessor for FollowUpNotificationAction();
                uint64_t v35 = &off_100210C30;
                break;
              case 6:
                break;
              case 7:
                uint64_t v24 = type metadata accessor for SyncAction();
                uint64_t v35 = &off_100217030;
                break;
              case 8:
                uint64_t v24 = type metadata accessor for SystemEngagementAction();
                uint64_t v35 = &off_100217068;
                break;
              case 9:
                uint64_t v24 = type metadata accessor for UserNotificationAction();
                uint64_t v35 = &off_100218A38;
                break;
              default:
                uint64_t v24 = type metadata accessor for BadgingAction();
                uint64_t v35 = &off_10020E9A0;
                break;
            }
            ((void (*)(uint64_t, uint64_t, uint64_t))v35[1])(v8, a2, v24);
            goto LABEL_19;
          }
          sub_100043478(&qword_10022E560);
          uint64_t v25 = type metadata accessor for LogMessage();
          sub_100044798(v25);
          *(_OWORD *)(sub_100020930() + 16) = xmmword_1001C3120;
          uint64_t v51 = sub_100043478(&qword_10022D4A8);
          uint64_t v26 = v4;
          v50[0] = v4;
          id v27 = (id)AMSLogKey();
          if (v27)
          {
            uint64_t v28 = v27;
            uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v31 = v30;

            swift_bridgeObjectRetain();
            LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
            sub_10002CAC4();
            sub_100011CD8();
            uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
            sub_100048B18(MetatypeMetadata);
            sub_1000423CC((uint64_t)&v52);
            v33._uint64_t countAndFlagsBits = 5972026;
            v33._object = (void *)0xE300000000000000;
            LogMessage.StringInterpolation.appendLiteral(_:)(v33);
            *((void *)&v53 + 1) = &type metadata for String;
            *(void *)&long long v52 = v29;
            *((void *)&v52 + 1) = v31;
            LogMessage.StringInterpolation.appendInterpolation(safe:)();
            sub_1000423CC((uint64_t)&v52);
            v34._uint64_t countAndFlagsBits = 93;
            v34._object = (void *)0xE100000000000000;
            LogMessage.StringInterpolation.appendLiteral(_:)(v34);
            sub_10004B2D8();
            swift_bridgeObjectRelease();
          }
          else
          {
            LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
            sub_10002CAC4();
            uint64_t v36 = sub_100047F14();
            *((void *)&v53 + 1) = swift_getMetatypeMetadata();
            *(void *)&long long v52 = v36;
            LogMessage.StringInterpolation.appendInterpolation(safe:)();
            sub_1000423CC((uint64_t)&v52);
            v37._uint64_t countAndFlagsBits = 58;
            v37._object = (void *)0xE100000000000000;
            LogMessage.StringInterpolation.appendLiteral(_:)(v37);
            sub_10004B2D8();
          }
          sub_10004377C((uint64_t)v50);
          LogMessage.init(stringLiteral:)();
          if (qword_10022C460 != -1) {
            swift_once();
          }
          uint64_t v38 = static os_log_type_t.info.getter();
          sub_10004841C(v38);
          swift_bridgeObjectRelease();
          uint64_t v4 = v26;
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            a1 = v45;
LABEL_42:
            uint64_t v39 = v48;
          }
          else
          {
            sub_100044DE8();
            uint64_t v39 = v43;
            a1 = v45;
          }
LABEL_43:
          unint64_t v40 = v39[2];
          if (v40 >= v39[3] >> 1)
          {
            sub_1000707BC();
            uint64_t v39 = v42;
          }
          _OWORD v39[2] = v40 + 1;
          uint64_t v48 = v39;
          v39[v40 + 4] = v8;
          break;
      }
LABEL_20:
      if (v49 == ++v7)
      {
        swift_bridgeObjectRelease();
        return v48;
      }
    }
    swift_bridgeObjectRelease();
    sub_1000423CC((uint64_t)&v52);
LABEL_13:
    sub_100043478(&qword_10022E560);
    uint64_t v12 = type metadata accessor for LogMessage();
    sub_100044798(v12);
    *(_OWORD *)(sub_100020930() + 16) = xmmword_1001C3120;
    uint64_t v51 = sub_100043478(&qword_10022D4A8);
    v50[0] = v4;
    id v13 = (id)AMSLogKey();
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_10002CAC4();
      sub_100011CD8();
      uint64_t v18 = swift_getMetatypeMetadata();
      sub_100048B18(v18);
      sub_1000423CC((uint64_t)&v52);
      v19._uint64_t countAndFlagsBits = 5972026;
      v19._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      *((void *)&v53 + 1) = &type metadata for String;
      *(void *)&long long v52 = v15;
      *((void *)&v52 + 1) = v17;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v52);
      v20._uint64_t countAndFlagsBits = 93;
      v20._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      sub_10004B2D8();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_10002CAC4();
      uint64_t v21 = sub_100047F14();
      *((void *)&v53 + 1) = swift_getMetatypeMetadata();
      *(void *)&long long v52 = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v52);
      v22._uint64_t countAndFlagsBits = 58;
      v22._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      sub_10004B2D8();
    }
    sub_10004377C((uint64_t)v50);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v23 = static os_log_type_t.error.getter();
    sub_10004841C(v23);
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100068238()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActionRunner()
{
  return self;
}

uint64_t sub_10006826C()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = sub_10004C7A0();
  [v0 doubleForKey:v1];
  unint64_t v3 = v2;

  v4.n128_u64[0] = v3;
  return Date.init(timeIntervalSince1970:)(v4);
}

uint64_t sub_100068308()
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_100020EAC();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for DispatchQoS();
  sub_100020DEC();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_10002D300();
  if (qword_10022C588 != -1) {
    swift_once();
  }
  aBlock[4] = sub_100069C00;
  aBlock[5] = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  void aBlock[3] = &unk_10020D818;
  id v13 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_10002352C();
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_1000234D8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v9);
  return swift_release();
}

uint64_t sub_100068520()
{
  return sub_100068D70();
}

uint64_t sub_10006854C(char a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  uint64_t v57 = v6;
  __chkstk_darwin(v7);
  sub_100020EAC();
  uint64_t v55 = v9 - v8;
  uint64_t v56 = type metadata accessor for DispatchQoS();
  sub_100020DEC();
  uint64_t v54 = v10;
  __chkstk_darwin(v11);
  sub_100020EAC();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v15 - 8);
  sub_100020EAC();
  uint64_t v16 = type metadata accessor for DispatchPredicate();
  sub_100020DEC();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_10002D300();
  if (qword_10022C588 != -1) {
    swift_once();
  }
  Swift::String v20 = (void *)qword_100244180;
  *uint64_t v2 = qword_100244180;
  (*(void (**)(void *, void, uint64_t))(v18 + 104))(v2, enum case for DispatchPredicate.onQueue(_:), v16);
  id v21 = v20;
  char v22 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v18 + 8))(v2, v16);
  if ((v22 & 1) == 0)
  {
    __break(1u);
LABEL_23:
    swift_once();
LABEL_12:
    sub_100043478(&qword_10022E560);
    uint64_t v30 = sub_10002D318();
    sub_100044798(v30);
    sub_10003BDC8();
    *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
    uint64_t v31 = type metadata accessor for ActivityObserver();
    sub_10004CD64(v31);
    id v32 = (id)AMSLogKey();
    if (v32)
    {
      Swift::String v33 = v32;
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v36 = v35;

      swift_bridgeObjectRetain();
      sub_100049814();
      sub_100044E44();
      sub_100044E0C();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100048B38(MetatypeMetadata);
      sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
      sub_100020E44();
      Swift::String v61 = &type metadata for String;
      Swift::String v59 = (void *)v34;
      uint64_t v60 = v36;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
      sub_1000208D8();
      sub_100045D28();
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
LABEL_18:
    sub_100020ECC();
    sub_100044E44();
    sub_100044E0C();
    uint64_t v46 = swift_getMetatypeMetadata();
    sub_100048B38(v46);
    sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
    sub_100020E94();
    sub_100045D28();
    goto LABEL_19;
  }
  if (sub_100007568())
  {
    if ((a1 & 1) == 0)
    {
      uint64_t v53 = v5;
      if (qword_10022C478 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      uint64_t v23 = sub_10002D318();
      sub_100044798(v23);
      sub_10003BDC8();
      *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
      uint64_t v24 = type metadata accessor for ActivityObserver();
      sub_10004CD64(v24);
      id v25 = (id)AMSLogKey();
      if (v25)
      {
        uint64_t v26 = v25;
        uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v28 = v27;

        swift_bridgeObjectRetain();
        sub_100049814();
        sub_100044E44();
        sub_100044E0C();
        uint64_t v29 = swift_getMetatypeMetadata();
        sub_100048B38(v29);
        sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
        sub_100020E44();
        Swift::String v61 = &type metadata for String;
        Swift::String v59 = (void *)v52;
        uint64_t v60 = v28;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
        sub_1000208D8();
        sub_100045D28();
        swift_bridgeObjectRelease();
LABEL_19:
        sub_10004377C((uint64_t)aBlock);
        LogMessage.init(stringLiteral:)();
        uint64_t v47 = static os_log_type_t.info.getter();
        sub_10004841C(v47);
        swift_bridgeObjectRelease();
        aBlock[4] = sub_100069BF8;
        aBlock[5] = v3;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10002CD0C;
        void aBlock[3] = &unk_10020D7F0;
        uint64_t v48 = _Block_copy(aBlock);
        swift_retain();
        static DispatchQoS.unspecified.getter();
        Swift::String v59 = _swiftEmptyArrayStorage;
        sub_10002352C();
        sub_100043478((uint64_t *)&unk_10022F4C0);
        sub_1000234D8();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v48);
        (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v55, v53);
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v14, v56);
        return swift_release();
      }
      goto LABEL_18;
    }
LABEL_11:
    uint64_t v53 = v5;
    if (qword_10022C478 == -1) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  if (a1) {
    goto LABEL_11;
  }
  if (qword_10022C478 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v38 = sub_10002D318();
  sub_100044798(v38);
  sub_10003BDC8();
  *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
  uint64_t v39 = type metadata accessor for ActivityObserver();
  sub_10004CD64(v39);
  id v40 = (id)AMSLogKey();
  if (v40)
  {
    char v41 = v40;
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v43;

    swift_bridgeObjectRetain();
    sub_100049814();
    sub_100044E44();
    sub_100044E0C();
    uint64_t v45 = swift_getMetatypeMetadata();
    sub_100048B38(v45);
    sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
    sub_100020E44();
    Swift::String v61 = &type metadata for String;
    Swift::String v59 = (void *)v42;
    uint64_t v60 = v44;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020ECC();
    sub_100044E44();
    sub_100044E0C();
    uint64_t v50 = swift_getMetatypeMetadata();
    sub_100048B38(v50);
    sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)aBlock);
  LogMessage.init(stringLiteral:)();
  uint64_t v51 = static os_log_type_t.info.getter();
  sub_10004841C(v51);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100068D70()
{
  swift_retain();
  sub_1001AE588();
  return swift_release();
}

void sub_100068E24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = sub_100043478(&qword_10022D340);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v10 - 8);
  if (a4)
  {
    if (qword_10022C478 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v32 = type metadata accessor for ActivityObserver();
    v31[0] = a5;
    swift_retain();
    id v11 = (id)AMSLogKey();
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v16._uint64_t countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v16);
      sub_100049788(v31, v32);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v29[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v29, &qword_10022F490);
      v18._uint64_t countAndFlagsBits = 5972026;
      v18._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t MetatypeMetadata = &type metadata for String;
      v29[0] = v13;
      v29[1] = v15;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v29, &qword_10022F490);
      v19._uint64_t countAndFlagsBits = 93;
      v19._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v20._uint64_t countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      sub_100049788(v31, v32);
      uint64_t v21 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v29[0] = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v29, &qword_10022F490);
      v22._uint64_t countAndFlagsBits = 58;
      v22._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v31);
    LogMessage.init(stringLiteral:)();
    uint64_t v23 = static os_log_type_t.default.getter();
    sub_10004841C(v23);
    swift_bridgeObjectRelease();
    id v24 = [objc_allocWithZone((Class)AMSEngagementSyncRequest) init];
    if (qword_10022C430 != -1) {
      swift_once();
    }
    sub_1000B0CFC();
    swift_release();
    type metadata accessor for DynamicUICache();
    sub_1000A7EE0();
    sub_1000A85A8();
    if (qword_10022C550 != -1) {
      swift_once();
    }
    sub_100137720();
    type metadata accessor for PodcastsEventManager();
    swift_initStaticObject();
    sub_1001573D8();
    uint64_t v25 = type metadata accessor for TaskPriority();
    sub_100021AC0((uint64_t)v9, 1, 1, v25);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = 0;
    *(void *)(v26 + 24) = 0;
    sub_10016D650((uint64_t)v9, (uint64_t)&unk_10022D590, v26);
    swift_release();
    sub_100021AC0((uint64_t)v9, 1, 1, v25);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = 0;
    *(void *)(v27 + 24) = 0;
    sub_1000697AC((uint64_t)v9, (uint64_t)&unk_10022D5A0, v27);
    swift_release();
    uint64_t v28 = (void *)type metadata accessor for UniversalLinksUpdater();
    sub_1001AB054(v28);
    if (qword_10022C568 != -1) {
      swift_once();
    }
    sub_100149328();
  }
}

uint64_t sub_10006933C()
{
  return _swift_task_switch(sub_100069358, 0, 0);
}

uint64_t sub_100069358()
{
  sub_100041F70();
  id v1 = objc_msgSend(self, "ams_sharedAccountStore");
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v2 = sub_1000484EC();
  id v3 = [objc_allocWithZone((Class)AMSEngagement) initWithBag:v2];

  id v4 = [self defaultManager];
  type metadata accessor for NotificationSettingsEventManager();
  uint64_t v5 = (void *)swift_allocObject();
  *(void *)(v0 + 16) = sub_100069B2C((uint64_t)v1, (uint64_t)v3, (uint64_t)v4, v5);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1000694A4;
  return sub_100152960();
}

uint64_t sub_1000694A4()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v1 = *v0;
  sub_100020EBC();
  *id v2 = v1;
  swift_task_dealloc();
  swift_release();
  id v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_100069584(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1000695A4, 0, 0);
}

uint64_t sub_1000695A4()
{
  sub_100020958();
  if (qword_10022C5D0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100069668;
  return sub_100193070();
}

uint64_t sub_100069668()
{
  sub_100041F70();
  char v3 = v2;
  sub_1000447B0();
  uint64_t v5 = v4;
  uint64_t v6 = *v1;
  sub_100020EBC();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v6 + 8);
    return v8();
  }
  else
  {
    *(unsigned char *)(v5 + 32) = v3 & 1;
    return _swift_task_switch(sub_100069788, 0, 0);
  }
}

uint64_t sub_100069788()
{
  **(unsigned char **)(v0 + 16) = *(unsigned char *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000697AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  if (sub_10004FD40(a1, 1, v5) == 1)
  {
    sub_10002CC0C(a1, &qword_10022D340);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void sub_1000698F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_100068E24(a1, a2, a3, a4, v4);
}

uint64_t sub_1000698F8()
{
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100069930()
{
  sub_100041F70();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000699CC;
  sub_100044068();
  return sub_10006933C();
}

uint64_t sub_1000699CC()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v1 = *v0;
  sub_100020EBC();
  *char v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_100069A90()
{
  sub_100041F70();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000699CC;
  uint64_t v2 = sub_100044068();
  return sub_100069584(v2);
}

void *sub_100069B2C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[5] = sub_10004D510(0, &qword_10022D5A8);
  a4[6] = &off_10020D750;
  a4[2] = a1;
  a4[12] = sub_10004D510(0, &qword_10022D5B0);
  a4[13] = &off_1002155F0;
  a4[9] = a2;
  a4[17] = sub_10004D510(0, (unint64_t *)&qword_10022D5B8);
  a4[18] = &off_100210B78;
  a4[14] = a3;
  a4[7] = 0xD000000000000014;
  a4[8] = 0x80000001001CAD80;
  return a4;
}

uint64_t sub_100069BF8()
{
  return sub_100054354();
}

uint64_t sub_100069C00()
{
  return sub_100068520();
}

void type metadata accessor for AMPBag.BagContainer()
{
}

BOOL sub_100069C20(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020BD70, v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

uint64_t sub_100069C6C(__n128 *a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_10005E270(a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100069CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100043478(&qword_10022D5E0);
  sub_100020DEC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002D2B0();
  sub_10006A18C();
  sub_100020EE8();
  v10[1] = a2;
  sub_10006A224();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

Swift::Int sub_100069DBC(uint64_t a1)
{
  sub_100047EFC();
  swift_bridgeObjectRetain();
  sub_10005E270(v3, a1);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

void *sub_100069E0C(void *a1)
{
  uint64_t v3 = sub_100043478(&qword_10022D5C8);
  sub_100020DEC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100049788(a1, a1[3]);
  sub_10006A18C();
  sub_1000477BC();
  if (v1)
  {
    sub_10004377C((uint64_t)a1);
  }
  else
  {
    sub_10006A1D8();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    uint64_t v9 = (void *)v11[1];
    sub_10004377C((uint64_t)a1);
  }
  return v9;
}

BOOL sub_100069F4C@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_100069C20(*a1);
  *a2 = result;
  return result;
}

void sub_100069F84(void *a1@<X8>)
{
  *a1 = 0x6173726576696E75;
  a1[1] = 0xEF736B6E696C5F6CLL;
}

uint64_t sub_100069FAC()
{
  return 0x6173726576696E75;
}

uint64_t sub_100069FD0@<X0>(Swift::String a1@<X1:X0>, BOOL *a2@<X8>)
{
  uint64_t result = sub_100069C68(a1);
  *a2 = result != 0;
  return result;
}

void sub_10006A000(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_10006A00C(uint64_t a1)
{
  unint64_t v2 = sub_10006A18C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10006A048(uint64_t a1)
{
  unint64_t v2 = sub_10006A18C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_10006A084@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100069E0C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10006A0B0(uint64_t a1)
{
  return sub_100069CBC(a1, *v1);
}

Swift::Int sub_10006A0CC()
{
  return sub_100069DBC(*v0);
}

uint64_t sub_10006A0D4(__n128 *a1)
{
  return sub_100069C6C(a1, *v1);
}

Swift::Int sub_10006A0DC()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  sub_10005E270(v3, v1);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10006A130(void *a1, void *a2)
{
  return sub_100069CB8(*a1, *a2);
}

unint64_t sub_10006A140()
{
  unint64_t result = qword_10022D5C0;
  if (!qword_10022D5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D5C0);
  }
  return result;
}

unint64_t sub_10006A18C()
{
  unint64_t result = qword_10022D5D0;
  if (!qword_10022D5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D5D0);
  }
  return result;
}

unint64_t sub_10006A1D8()
{
  unint64_t result = qword_10022D5D8;
  if (!qword_10022D5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D5D8);
  }
  return result;
}

unint64_t sub_10006A224()
{
  unint64_t result = qword_10022D5E8;
  if (!qword_10022D5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D5E8);
  }
  return result;
}

#error "10006A3FC: call analysis failed (funcsize=141)"

void sub_10006A4BC()
{
  sub_100044DC4();
  uint64_t v2 = v1;
  uint64_t v23 = sub_100043478(&qword_10022D630);
  sub_100020DEC();
  uint64_t v20 = v3;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002D2B0();
  sub_1000601D4();
  sub_100020EE8();
  uint64_t v7 = *(void *)(v2 + 56);
  uint64_t v21 = v2 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v22 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 24 * i);
    uint64_t v18 = v17[1];
    uint64_t v24 = *v17;
    uint64_t v25 = v18;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_100043478(&qword_10022D618);
    sub_10006C7B4(&qword_10022D638, &qword_10022D618, (void (*)(void))sub_10006C1BC);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    if (v0)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v23);
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v11++, 1)) {
      break;
    }
    if (v11 >= v22) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v21 + 8 * v11);
    if (!v15)
    {
      int64_t v16 = v11 + 1;
      if (v11 + 1 >= v22) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v21 + 8 * v16);
      if (v15) {
        goto LABEL_14;
      }
      int64_t v16 = v11 + 2;
      if (v11 + 2 >= v22) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v21 + 8 * v16);
      if (v15)
      {
LABEL_14:
        int64_t v11 = v16;
        goto LABEL_15;
      }
      int64_t v16 = v11 + 3;
      if (v11 + 3 < v22)
      {
        unint64_t v15 = *(void *)(v21 + 8 * v16);
        if (!v15)
        {
          while (1)
          {
            int64_t v11 = v16 + 1;
            if (__OFADD__(v16, 1)) {
              goto LABEL_27;
            }
            if (v11 >= v22) {
              goto LABEL_24;
            }
            unint64_t v15 = *(void *)(v21 + 8 * v11);
            ++v16;
            if (v15) {
              goto LABEL_15;
            }
          }
        }
        goto LABEL_14;
      }
LABEL_24:
      uint64_t v19 = v20;
      swift_release();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v23);
LABEL_25:
      sub_100020E2C();
      return;
    }
LABEL_15:
    unint64_t v10 = (v15 - 1) & v15;
  }
  __break(1u);
LABEL_27:
  __break(1u);
}

uint64_t sub_10006A7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10005E404(a1, a4);
  return swift_bridgeObjectRelease();
}

void sub_10006A838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v8 = a1 == a4 && a2 == a5;
  if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    sub_1001A1F60(a3, a6);
  }
}

uint64_t sub_10006A8A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974696E69666564 && a2 == 0xEE007473694C6E6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10006A9A8(char a1)
{
  if (a1) {
    return 0x6974696E69666564;
  }
  else {
    return 7955819;
  }
}

void sub_10006A9E4()
{
  sub_100044DC4();
  uint64_t v3 = v2;
  uint64_t v4 = sub_100043478(&qword_10022D6B0);
  sub_100020DEC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100022558();
  sub_100049788(v3, v3[3]);
  sub_10006C820();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100060398();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v0)
  {
    sub_100043478(&qword_10022D618);
    sub_10006C7B4(&qword_10022D638, &qword_10022D618, (void (*)(void))sub_10006C1BC);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_100020E2C();
}

Swift::Int sub_10006AB7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100047EFC();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10005E404((uint64_t)v5, a3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

void sub_10006ABFC()
{
  sub_100044DC4();
  BOOL v2 = v1;
  sub_100043478(&qword_10022D6A0);
  sub_100020DEC();
  __chkstk_darwin(v3);
  sub_100049788(v2, v2[3]);
  sub_10006C820();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    sub_10004377C((uint64_t)v2);
  }
  else
  {
    sub_1000602B4();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100043478(&qword_10022D618);
    sub_10006C7B4(&qword_10022D620, &qword_10022D618, (void (*)(void))sub_10006C170);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v4 = sub_100045D40();
    v5(v4);
    swift_bridgeObjectRetain();
    sub_10004377C((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_100020E2C();
}

void sub_10006AE0C(__n128 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)v2;
  swift_bridgeObjectRetain();
  sub_10005E6D4(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v2 + 8);
  if (v5)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    sub_10005EEC8((uint64_t)a1, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  uint64_t v6 = *(void *)(v2 + 16);
  if (v6)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    sub_10005EB2C((uint64_t)a1, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  int v7 = *(unsigned __int8 *)(v2 + 24);
  if (v7 == 2)
  {
    Swift::UInt8 v8 = 0;
  }
  else
  {
    Swift::UInt8 v8 = v7 & 1;
    Hasher._combine(_:)(1u);
  }
  Hasher._combine(_:)(v8);
  int v9 = *(unsigned __int8 *)(v2 + 25);
  if (v9 == 2)
  {
    Swift::UInt8 v10 = 0;
  }
  else
  {
    Swift::UInt8 v10 = v9 & 1;
    Hasher._combine(_:)(1u);
  }
  Hasher._combine(_:)(v10);
  if (*(unsigned char *)(v2 + 40) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Swift::UInt v11 = *(void *)(v2 + 32);
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v11);
  }
}

uint64_t sub_10006AF44(uint64_t a1, uint64_t a2)
{
  if ((sub_1001A270C(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (!v4) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_1001A3210(v5, v4);
    char v7 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  else if (v4)
  {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (!v8) {
      goto LABEL_12;
    }
    return 0;
  }
  if (!v8) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001A3B6C();
  char v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
    return 0;
  }
LABEL_12:
  int v11 = *(unsigned __int8 *)(a1 + 24);
  int v12 = *(unsigned __int8 *)(a2 + 24);
  if (v11 == 2)
  {
    if (v12 != 2) {
      return 0;
    }
  }
  else
  {
    uint64_t result = 0;
    BOOL v14 = (v11 & 1) == 0;
    if (v12 == 2 || ((v14 ^ v12) & 1) == 0) {
      return result;
    }
  }
  int v15 = *(unsigned __int8 *)(a1 + 25);
  int v16 = *(unsigned __int8 *)(a2 + 25);
  if (v15 == 2)
  {
    if (v16 != 2) {
      return 0;
    }
LABEL_22:
    char v18 = *(unsigned char *)(a2 + 40);
    if (*(unsigned char *)(a1 + 40))
    {
      if ((*(unsigned char *)(a2 + 40) & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (*(void *)(a1 + 32) != *(void *)(a2 + 32)) {
        char v18 = 1;
      }
      if (v18) {
        return 0;
      }
    }
    return 1;
  }
  uint64_t result = 0;
  BOOL v17 = (v15 & 1) == 0;
  if (v16 != 2 && ((v17 ^ v16) & 1) != 0) {
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_10006B0B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736E69616D6F64 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E656E6F706D6F63 && a2 == 0xEA00000000007374;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x80000001001CA860 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x6E45737961776C61 && a2 == 0xED000064656C6261;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x80000001001CA840 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0x65766974616C6572 && a2 == 0xED0000726564724FLL)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 5;
        }
        else {
          return 6;
        }
      }
    }
  }
}

Swift::Int _s14amsengagementd13SQLite3StatusO9hashValueSivg_0(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

unint64_t sub_10006B3C0(char a1)
{
  unint64_t result = 0x736E69616D6F64;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E656E6F706D6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x6E45737961776C61;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x65766974616C6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10006B4B8()
{
  uint64_t v3 = sub_100043478(&qword_10022D680);
  sub_100020DEC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100022558();
  sub_10002D2B0();
  sub_10006C6D0();
  sub_100020EE8();
  uint64_t v8 = *v0;
  sub_100043478(&qword_10022D668);
  sub_10006C7B4(&qword_10022D688, &qword_10022D668, (void (*)(void))sub_10006C768);
  sub_100045CAC();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    sub_10004382C((uint64_t)(v0 + 1), (uint64_t)v10, &qword_10022CCD8);
    sub_10004382C((uint64_t)v10, (uint64_t)&v8, &qword_10022CCD8);
    sub_100043478(&qword_10022CCA0);
    sub_10006C7B4(&qword_10022CCE0, &qword_10022CCA0, (void (*)(void))sub_1000603E4);
    sub_100045CAC();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10004382C((uint64_t)(v0 + 2), (uint64_t)v9, &qword_10022D698);
    sub_10004382C((uint64_t)v9, (uint64_t)&v8, &qword_10022D698);
    sub_100043478(&qword_10022CED0);
    sub_100061868();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_100046110(*((unsigned __int8 *)v0 + 24), 3);
    sub_100046110(*((unsigned __int8 *)v0 + 25), 4);
    LOBYTE(v8) = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v3);
}

Swift::Int sub_10006B72C()
{
  sub_100047EFC();
  sub_10006AE0C(v1);
  return Hasher._finalize()();
}

void sub_10006B764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100044DC4();
  int v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = sub_100043478(&qword_10022D658);
  sub_100020DEC();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100049788(v12, v12[3]);
  sub_10006C6D0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v10)
  {
    sub_10004377C((uint64_t)v12);
  }
  else
  {
    sub_100043478(&qword_10022D668);
    char v30 = 0;
    sub_10006C7B4(&qword_10022D670, &qword_10022D668, (void (*)(void))sub_10006C71C);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100043478(&qword_10022CCA0);
    char v30 = 1;
    sub_10006C7B4(&qword_10022CCA8, &qword_10022CCA0, (void (*)(void))sub_100060300);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_100043478(&qword_10022CED0);
    char v30 = 2;
    sub_100061A00();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v29 = a10;
    swift_bridgeObjectRetain();
    int v28 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    sub_10004AA60(4);
    int v27 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    sub_10004AA60(5);
    uint64_t v21 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    int64_t v22 = v20;
    char v24 = v23;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v15);
    sub_10004377C((uint64_t)v12);
    swift_bridgeObjectRelease();
    uint64_t v25 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v14 = a10;
    *(void *)(v14 + 8) = v25;
    *(void *)(v14 + 16) = a10;
    *(unsigned char *)(v14 + 24) = v28;
    *(unsigned char *)(v14 + 25) = v27;
    *(void *)(v14 + 32) = v21;
    *(unsigned char *)(v14 + 40) = v24 & 1;
  }
  sub_100020E2C();
}

uint64_t sub_10006BB60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10006A270();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

void sub_10006BB8C()
{
}

uint64_t sub_10006BBA8()
{
  return sub_10006A9A8(*v0);
}

uint64_t sub_10006BBB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10006A8A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10006BBD8(uint64_t a1)
{
  unint64_t v2 = sub_10006C820();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10006BC14(uint64_t a1)
{
  unint64_t v2 = sub_10006C820();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10006BC50(void *a1@<X8>)
{
  sub_10006ABFC();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
  }
}

void sub_10006BC80()
{
}

Swift::Int sub_10006BCA0()
{
  return sub_10006AB7C(*v0, v0[1], v0[2]);
}

uint64_t sub_10006BCAC(uint64_t a1)
{
  return sub_10006A7BC(a1, *v1, v1[1], v1[2]);
}

Swift::Int sub_10006BCB8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10005E404((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

void sub_10006BD38(uint64_t *a1, uint64_t *a2)
{
}

Swift::Int sub_10006BD54()
{
  return _s14amsengagementd13SQLite3StatusO9hashValueSivg_0(*v0);
}

unint64_t sub_10006BD5C()
{
  return sub_10006B3C0(*v0);
}

uint64_t sub_10006BD64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10006B0B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10006BD8C(uint64_t a1)
{
  unint64_t v2 = sub_10006C6D0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10006BDC8(uint64_t a1)
{
  unint64_t v2 = sub_10006C6D0();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10006BE04@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>)
{
  sub_10006B764(a1, a2, a3, a4, a5, a6, a7, a8, v12, v14);
  if (!v9)
  {
    *a9 = v13;
    a9[1] = *(_OWORD *)v15;
    double result = *(double *)&v15[9];
    *(_OWORD *)((char *)a9 + 25) = *(_OWORD *)&v15[9];
  }
  return result;
}

uint64_t sub_10006BE48()
{
  return sub_10006B4B8();
}

Swift::Int sub_10006BE8C()
{
  Hasher.init(_seed:)();
  sub_10006AE0C(v1);
  return Hasher._finalize()();
}

Swift::Int sub_10006BECC()
{
  return Hasher._finalize()();
}

Swift::Int sub_10006BF24()
{
  return sub_10006BECC();
}

uint64_t sub_10006BF2C()
{
  return sub_10005C65C();
}

uint64_t sub_10006BF34(uint64_t *a1, uint64_t *a2)
{
  return sub_10005C6B8(*a1, a1[1], *a2, a2[1]);
}

unsigned char *sub_10006BF48(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10006BFE4);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for AMPBag.BagContainer.CodingKeys()
{
}

void type metadata accessor for AMPBag()
{
}

void type metadata accessor for AMPBag.UniversalLinksAppList()
{
}

unint64_t sub_10006C034()
{
  unint64_t result = qword_10022D5F0;
  if (!qword_10022D5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D5F0);
  }
  return result;
}

unint64_t sub_10006C084()
{
  unint64_t result = qword_10022D5F8;
  if (!qword_10022D5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D5F8);
  }
  return result;
}

unint64_t sub_10006C0D4()
{
  unint64_t result = qword_10022D600;
  if (!qword_10022D600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D600);
  }
  return result;
}

unint64_t sub_10006C124()
{
  unint64_t result = qword_10022D608;
  if (!qword_10022D608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D608);
  }
  return result;
}

unint64_t sub_10006C170()
{
  unint64_t result = qword_10022D628;
  if (!qword_10022D628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D628);
  }
  return result;
}

unint64_t sub_10006C1BC()
{
  unint64_t result = qword_10022D640;
  if (!qword_10022D640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D640);
  }
  return result;
}

uint64_t sub_10006C208()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10006C24C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10006C2B4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  return a1;
}

__n128 sub_10006C34C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_10006C360(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t sub_10006C3C8(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 41))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10006C408(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AMPBag.Definition()
{
}

uint64_t sub_10006C464()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_10006C4A0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10006C4E0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 sub_10006C548(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_10006C55C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10006C5A4(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10006C5E4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AMPBag.AppUniversalLinks()
{
}

unint64_t sub_10006C634()
{
  unint64_t result = qword_10022D648;
  if (!qword_10022D648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D648);
  }
  return result;
}

unint64_t sub_10006C684()
{
  unint64_t result = qword_10022D650;
  if (!qword_10022D650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D650);
  }
  return result;
}

unint64_t sub_10006C6D0()
{
  unint64_t result = qword_10022D660;
  if (!qword_10022D660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D660);
  }
  return result;
}

unint64_t sub_10006C71C()
{
  unint64_t result = qword_10022D678;
  if (!qword_10022D678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D678);
  }
  return result;
}

unint64_t sub_10006C768()
{
  unint64_t result = qword_10022D690;
  if (!qword_10022D690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D690);
  }
  return result;
}

uint64_t sub_10006C7B4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006026C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10006C820()
{
  unint64_t result = qword_10022D6A8;
  if (!qword_10022D6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D6A8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AMPBag.AppUniversalLinks.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006C938);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AMPBag.AppUniversalLinks.CodingKeys()
{
  return &type metadata for AMPBag.AppUniversalLinks.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AMPBag.Definition.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006CA3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AMPBag.Definition.CodingKeys()
{
  return &type metadata for AMPBag.Definition.CodingKeys;
}

void type metadata accessor for AMPBag.URLDomain()
{
}

unint64_t sub_10006CA84()
{
  unint64_t result = qword_10022D6B8;
  if (!qword_10022D6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D6B8);
  }
  return result;
}

unint64_t sub_10006CAD4()
{
  unint64_t result = qword_10022D6C0;
  if (!qword_10022D6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D6C0);
  }
  return result;
}

unint64_t sub_10006CB24()
{
  unint64_t result = qword_10022D6C8;
  if (!qword_10022D6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D6C8);
  }
  return result;
}

unint64_t sub_10006CB74()
{
  unint64_t result = qword_10022D6D0;
  if (!qword_10022D6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D6D0);
  }
  return result;
}

unint64_t sub_10006CBC4()
{
  unint64_t result = qword_10022D6D8;
  if (!qword_10022D6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D6D8);
  }
  return result;
}

unint64_t sub_10006CC14()
{
  unint64_t result = qword_10022D6E0;
  if (!qword_10022D6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D6E0);
  }
  return result;
}

unint64_t sub_10006CC64()
{
  unint64_t result = qword_10022D6E8;
  if (!qword_10022D6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D6E8);
  }
  return result;
}

void sub_10006CCB0(NSURL *a1@<X8>)
{
  URL._bridgeToObjectiveC()(a1);
  id v3 = v2;
  [v1 handleInboundURL:v2];
}

void sub_10006CD0C(NSURL *a1@<X8>)
{
}

unint64_t sub_10006CD30(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020BC98, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

id sub_10006CD7C(uint64_t a1, char a2, void *a3, uint64_t a4)
{
  uint64_t v7 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v22[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v10 setAccount:a3];
  [v10 setFailOnDismiss:a2 & 1];
  strcpy((char *)v22, "clientData");
  BYTE3(v22[1]) = 0;
  HIDWORD(v22[1]) = -369098752;
  sub_10004656C();
  sub_1000447C8();
  sub_1000434BC((uint64_t)v23);
  if (*((void *)&v25 + 1))
  {
    sub_100043478(&qword_10022D6F0);
    if (sub_1000492A8())
    {
      v11.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1000423CC((uint64_t)&v24);
  }
  v11.super.Class isa = 0;
LABEL_6:
  [v10 setClientData:v11.super.isa];

  strcpy((char *)v22, "metricsOverlay");
  HIBYTE(v22[1]) = -18;
  sub_10004656C();
  sub_1000447C8();
  sub_1000434BC((uint64_t)v23);
  if (*((void *)&v25 + 1))
  {
    sub_100043478(&qword_10022D6F0);
    if (sub_1000492A8())
    {
      v12.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
  }
  else
  {
    sub_1000423CC((uint64_t)&v24);
  }
  v12.super.Class isa = 0;
LABEL_11:
  [v10 setMetricsOverlay:v12.super.isa];

  v22[0] = 0xD000000000000010;
  v22[1] = 0x80000001001CAEC0;
  sub_10004656C();
  sub_1000447C8();
  sub_1000434BC((uint64_t)v23);
  if (*((void *)&v25 + 1))
  {
    if (sub_100044E60()) {
      [v10 setDestinationStyle:v22[0]];
    }
  }
  else
  {
    sub_1000423CC((uint64_t)&v24);
  }
  v22[0] = 7107189;
  v22[1] = 0xE300000000000000;
  sub_10004656C();
  sub_1000447C8();
  swift_bridgeObjectRelease();
  sub_1000434BC((uint64_t)v23);
  if (*((void *)&v25 + 1))
  {
    if (sub_100044E60())
    {
      URL.init(string:)();
      swift_bridgeObjectRelease();
      uint64_t v13 = type metadata accessor for URL();
      uint64_t v15 = 0;
      if (sub_10004FD40((uint64_t)v9, 1, v13) != 1)
      {
        URL._bridgeToObjectiveC()(v14);
        uint64_t v15 = v16;
        (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v9, v13);
      }
      [v10 setURL:v15];
    }
  }
  else
  {
    sub_1000423CC((uint64_t)&v24);
  }
  uint64_t v17 = sub_10006D1F4(v10);
  if (!v17)
  {
    long long v24 = 0u;
    long long v25 = 0u;
    goto LABEL_27;
  }
  uint64_t v18 = v17;
  v22[0] = 0x656C797473;
  v22[1] = 0xE500000000000000;
  sub_10004656C();
  sub_100032918((uint64_t)v23, v18, &v24);
  sub_1000434BC((uint64_t)v23);
  swift_bridgeObjectRelease();
  if (!*((void *)&v25 + 1))
  {
LABEL_27:
    sub_1000423CC((uint64_t)&v24);
    goto LABEL_28;
  }
  if (swift_dynamicCast())
  {
    unint64_t v19 = sub_10006CD30(v23[0]);
    if (v19 != 6) {
      a4 = sub_1000530C0(v19);
    }
  }
LABEL_28:
  [v10 setPresentationStyle:a4];

  return v10;
}

uint64_t sub_10006D1F4(void *a1)
{
  id v1 = [a1 clientData];
  if (!v1) {
    return 0;
  }
  Swift::String v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_10006D26C(uint64_t a1)
{
  sub_100043478(&qword_10022D338);
  uint64_t v2 = Promise.__allocating_init()();
  swift_retain();
  sub_10006D30C(a1, (uint64_t)sub_10006D864, v2);
  swift_release();
  return v2;
}

void sub_10006D2E4(void *a1, char a2)
{
}

void sub_10006D30C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  v9[4] = sub_10006D50C;
  void v9[5] = v7;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10006D514;
  v9[3] = &unk_10020DC28;
  uint64_t v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  [v3 enqueueWithRequest:a1 completion:v8];
  _Block_release(v8);
}

void sub_10006D3FC(void *a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  if (a1)
  {
    id v6 = a1;
    a3(a1, 0);
  }
  else
  {
    if (a2)
    {
      uint64_t v5 = a2;
    }
    else
    {
      sub_10006D5A0();
      uint64_t v5 = swift_allocError();
    }
    swift_errorRetain();
    a3((void *)v5, 1);
    swift_errorRelease();
  }
}

uint64_t sub_10006D4D4()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10006D50C(void *a1, uint64_t a2)
{
  sub_10006D3FC(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

void sub_10006D514(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

unint64_t sub_10006D5A0()
{
  unint64_t result = qword_10022D6F8;
  if (!qword_10022D6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D6F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SyncError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006D6B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncError()
{
  return &type metadata for SyncError;
}

unsigned char *storeEnumTagSinglePayload for EnqueueError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10006D78CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EnqueueError()
{
  return &type metadata for EnqueueError;
}

unint64_t sub_10006D7C8()
{
  unint64_t result = qword_10022D700;
  if (!qword_10022D700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D700);
  }
  return result;
}

unint64_t sub_10006D818()
{
  unint64_t result = qword_10022D708;
  if (!qword_10022D708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D708);
  }
  return result;
}

void sub_10006D864(void *a1, char a2)
{
}

uint64_t sub_10006D870(void *a1)
{
  uint64_t v2 = v1;
  id v57 = a1;
  uint64_t v3 = sub_100043478(&qword_1002344F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v58 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v56 = (char *)&v55 - v9;
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3D40;
  *(void *)(inited + 32) = 0x657669746361;
  *(void *)(inited + 40) = 0xE600000000000000;
  *(unsigned char *)(inited + 48) = [v2 active];
  *(void *)(inited + 72) = &type metadata for Bool;
  *(void *)(inited + 80) = 0xD000000000000011;
  *(void *)(inited + 88) = 0x80000001001CAF20;
  id v11 = [v2 backingIdentifier];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  *(void *)(inited + 96) = v12;
  *(void *)(inited + 104) = v14;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0x47656C6261736964;
  *(void *)(inited + 136) = 0xEF676E6970756F72;
  *(unsigned char *)(inited + 144) = [v2 disableGrouping];
  *(void *)(inited + 168) = &type metadata for Bool;
  *(void *)(inited + 176) = 0xD000000000000014;
  *(void *)(inited + 184) = 0x80000001001CAF40;
  *(unsigned char *)(inited + 192) = [v2 isExpirationDateHidden];
  *(void *)(inited + 216) = &type metadata for Bool;
  strcpy((char *)(inited + 224), "displayStyle");
  *(unsigned char *)(inited + 237) = 0;
  *(_WORD *)(inited + 238) = -5120;
  *(void *)(inited + 240) = [v2 displayStyle];
  *(void *)(inited + 264) = &type metadata for Int;
  *(void *)(inited + 272) = 0x65644970756F7267;
  *(void *)(inited + 280) = 0xEF7265696669746ELL;
  id v15 = [v2 groupIdentifier];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  *(void *)(inited + 288) = v16;
  *(void *)(inited + 296) = v18;
  *(void *)(inited + 312) = &type metadata for String;
  *(void *)(inited + 320) = 0x696669746E656469;
  *(void *)(inited + 328) = 0xEA00000000007265;
  id v19 = [v2 identifier];
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  *(void *)(inited + 336) = v20;
  *(void *)(inited + 344) = v22;
  *(void *)(inited + 360) = &type metadata for String;
  *(void *)(inited + 368) = 0x79654B676F6CLL;
  *(void *)(inited + 376) = 0xE600000000000000;
  id v23 = [v2 logKey];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  *(void *)(inited + 384) = v24;
  *(void *)(inited + 392) = v26;
  *(void *)(inited + 408) = &type metadata for String;
  *(void *)(inited + 416) = 0x797469726F697270;
  *(void *)(inited + 424) = 0xE800000000000000;
  *(void *)(inited + 432) = [v2 priority];
  *(void *)(inited + 456) = &type metadata for Int;
  *(void *)(inited + 464) = 0xD000000000000016;
  *(void *)(inited + 472) = 0x80000001001CAF60;
  *(unsigned char *)(inited + 480) = [v2 shouldPostNotification];
  *(void *)(inited + 504) = &type metadata for Bool;
  *(void *)(inited + 512) = 0x6F666E4972657375;
  *(void *)(inited + 520) = 0xE800000000000000;
  id v27 = [v2 userInfo];
  *(void *)(inited + 552) = sub_10004D510(0, &qword_10022D710);
  *(void *)(inited + 528) = v27;
  uint64_t v63 = Dictionary.init(dictionaryLiteral:)();
  id v28 = [v2 account];
  if (v28)
  {
    uint64_t v29 = v28;
    id v30 = objc_msgSend(v28, "ams_DSID");

    if (v30)
    {
      Swift::String v62 = (void *)sub_10004D510(0, (unint64_t *)&qword_100231E00);
      v61[0] = v30;
      sub_10003E698((uint64_t)v61, 1684632420, 0xE400000000000000);
    }
  }
  unsigned __int8 v31 = [v2 isHardwareOffer];
  Swift::String v62 = &type metadata for Bool;
  LOBYTE(v61[0]) = v31;
  sub_10003E698((uint64_t)v61, 0x6572617764726168, 0xED0000726566664FLL);
  id v32 = [v2 expirationDate];
  if (v32)
  {
    Swift::String v33 = v32;
    uint64_t v34 = v58;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v35 = v59;
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
    Swift::String v37 = v34;
    uint64_t v38 = v60;
    v36(v5, v37, v60);
    sub_100021AC0((uint64_t)v5, 0, 1, v38);
    if (sub_10004FD40((uint64_t)v5, 1, v38) != 1)
    {
      uint64_t v39 = v56;
      v36(v56, v5, v38);
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      id v41 = [v57 stringFromDate:isa];

      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v44 = v43;

      Swift::String v62 = &type metadata for String;
      v61[0] = v42;
      v61[1] = v44;
      sub_10003E698((uint64_t)v61, 0x6974617269707865, 0xEE00657461446E6FLL);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v38);
      goto LABEL_9;
    }
  }
  else
  {
    sub_100021AC0((uint64_t)v5, 1, 1, v60);
  }
  sub_10006DF98((uint64_t)v5);
LABEL_9:
  uint64_t v45 = sub_100038B5C(v2, (SEL *)&selRef_footer);
  if (v46)
  {
    uint64_t v47 = sub_1000447E4(v45, v46, (uint64_t)&type metadata for String);
    sub_10003E698((uint64_t)v47, 0x7265746F6F66, 0xE600000000000000);
  }
  uint64_t v48 = sub_100038B5C(v2, (SEL *)&selRef_informativeText);
  if (v49)
  {
    uint64_t v50 = sub_1000447E4(v48, v49, (uint64_t)&type metadata for String);
    sub_10003E698((uint64_t)v50, 0x74616D726F666E69, 0xEF74786554657669);
  }
  uint64_t v51 = sub_100038B5C(v2, (SEL *)&selRef_title);
  if (v52)
  {
    uint64_t v53 = sub_1000447E4(v51, v52, (uint64_t)&type metadata for String);
    sub_10003E698((uint64_t)v53, 0x656C746974, 0xE500000000000000);
  }
  return v63;
}

uint64_t sub_10006DF98(uint64_t a1)
{
  uint64_t v2 = sub_100043478(&qword_1002344F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10006DFF8()
{
  sub_10006E0A4();
  sub_1000447F8(0x45534D41u);
  id v0 = sub_100051DF8();
  id v1 = objc_allocWithZone((Class)AMSMetrics);
  sub_1000447F8(0x65736D61u);
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 initWithContainerID:v2 bag:v0];

  qword_100244070 = (uint64_t)v3;
}

unint64_t sub_10006E0A4()
{
  unint64_t result = qword_100232020;
  if (!qword_100232020)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100232020);
  }
  return result;
}

uint64_t sub_10006E0E4(char *a1, char a2, uint64_t a3, uint64_t a4)
{
  int v5 = a2 & 1;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  if (qword_10022C4B8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  Swift::String v37 = (void *)sub_100043478(&qword_10022D718);
  v36[0] = (uint64_t)&type metadata for AppActivityManager;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v36, (uint64_t)v37);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v34 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v34, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    *(void *)&long long v34 = v9;
    *((void *)&v34 + 1) = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v34, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(v36, (uint64_t)v37);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v34 = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v34, &qword_10022F490);
    v18._uint64_t countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v36);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._object = (void *)0x80000001001CB1F0;
  v19._uint64_t countAndFlagsBits = 0xD000000000000016;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  uint64_t v20 = (int *)type metadata accessor for ScheduleInfo.Metadata(0);
  Swift::String v37 = v20;
  uint64_t v21 = sub_10003BAA4(v36);
  sub_1000768A4((uint64_t)a1, (uint64_t)v21, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC68((uint64_t)v36, &qword_10022F490);
  v22._uint64_t countAndFlagsBits = 0x7974206874697720;
  v22._object = (void *)0xEC000000203A6570;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  Swift::String v37 = &unk_100218C78;
  LOBYTE(v36[0]) = v5;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC68((uint64_t)v36, &qword_10022F490);
  v23._uint64_t countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v23);
  LogMessage.init(stringInterpolation:)();
  uint64_t v24 = static os_log_type_t.default.getter();
  sub_10004841C(v24);
  swift_bridgeObjectRelease();
  char v25 = *a1;
  unint64_t v26 = sub_100167AE4(*a1, *(void *)&a1[v20[11]], *(void **)&a1[v20[11] + 8]);
  uint64_t v28 = v27;
  sub_100165948(v36);
  sub_10005416C(a3, (uint64_t)&v34);
  sub_10005416C(a4, (uint64_t)v33);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v26;
  *(void *)(v29 + 24) = v28;
  sub_100028270(&v34, v29 + 32);
  *(unsigned char *)(v29 + 72) = v25;
  sub_100028270(v33, v29 + 80);
  swift_bridgeObjectRetain();
  if (v5) {
    sub_1001AE884();
  }
  else {
    sub_1001AE588();
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_10006E5AC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v80 = type metadata accessor for TimeZone();
  sub_100020DEC();
  uint64_t v83 = (char *)v4;
  __chkstk_darwin(v5);
  sub_100040A70();
  uint64_t v79 = v6;
  uint64_t v7 = sub_100043478(&qword_1002344F0);
  uint64_t v8 = sub_1000208F0(v7);
  __chkstk_darwin(v8);
  sub_100035C70();
  uint64_t v82 = v9;
  sub_100020974();
  __chkstk_darwin(v10);
  sub_100022190();
  uint64_t v81 = v11;
  uint64_t v12 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_100035C70();
  uint64_t v85 = v16;
  sub_100020974();
  __chkstk_darwin(v17);
  sub_10004FBF4();
  uint64_t v76 = v18;
  sub_100020974();
  __chkstk_darwin(v19);
  sub_10004FBF4();
  uint64_t v78 = v20;
  sub_100020974();
  __chkstk_darwin(v21);
  sub_10004FBF4();
  uint64_t v86 = v22;
  sub_100020974();
  __chkstk_darwin(v23);
  sub_100022190();
  uint64_t v84 = v24;
  uint64_t v25 = type metadata accessor for ScheduleInfo.Metadata(0);
  sub_100020DEC();
  uint64_t v27 = v26;
  __chkstk_darwin(v28);
  sub_100035C70();
  uint64_t v77 = v29;
  sub_100020974();
  uint64_t v31 = __chkstk_darwin(v30);
  Swift::String v33 = (char *)&v68 - v32;
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v36 = (char *)&v68 - v35;
  __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v68 - v37;
  uint64_t v39 = *(void *)(a1 + 16);
  if (!v39)
  {
    sub_100020998();
    sub_100021AC0(v63, v64, v65, v66);
    return;
  }
  uint64_t v69 = a2;
  unint64_t v40 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  sub_1000768A4(a1 + v40, (uint64_t)&v68 - v37, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
  uint64_t v70 = a1;
  swift_bridgeObjectRetain();
  uint64_t v41 = v39 - 1;
  if (!v41)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v62 = v69;
    sub_100076968((uint64_t)v38, v69, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
    sub_100021AC0(v62, 0, 1, v25);
    sub_100020998();
    return;
  }
  uint64_t v42 = *(void *)(v27 + 72);
  uint64_t v74 = v14 + 16;
  uint64_t v75 = (void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
  uint64_t v43 = (void (**)(void))(v14 + 8);
  uint64_t v72 = v33;
  uint64_t v73 = v83 + 8;
  uint64_t v71 = v42;
  uint64_t v44 = v70 + v42 + v40;
  uint64_t v83 = v38;
  while (1)
  {
    sub_1000768A4(v44, (uint64_t)v36, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
    uint64_t v45 = v81;
    sub_100076900((uint64_t)&v36[*(int *)(v25 + 32)], v81);
    sub_1000768A4((uint64_t)v36, (uint64_t)v33, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
    sub_100043F70(v45);
    if (v46)
    {
      sub_100011DCC();
      v47();
      sub_1000769C8((uint64_t)v33, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
      sub_10002CC68(v45, &qword_1002344F0);
    }
    else
    {
      sub_1000769C8((uint64_t)v33, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
      (*v75)(v86, v45, v12);
    }
    uint64_t v48 = v82;
    if (v36[*(int *)(v25 + 36)] == 1) {
      break;
    }
LABEL_10:
    Date.addingTimeInterval(_:)();
    uint64_t v54 = *v43;
    sub_100020964();
    v54();
    sub_100076900((uint64_t)&v38[*(int *)(v25 + 32)], v48);
    uint64_t v55 = v77;
    sub_1000768A4((uint64_t)v38, v77, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
    sub_100043F70(v48);
    if (v46)
    {
      sub_100011DCC();
      v56();
      sub_1000769C8(v55, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
      sub_10002CC68(v48, &qword_1002344F0);
    }
    else
    {
      sub_1000769C8(v55, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
      (*v75)(v85, v48, v12);
    }
    if (v38[*(int *)(v25 + 36)] == 1)
    {
      static TimeZone.current.getter();
      Date.init()();
      uint64_t v57 = TimeZone.secondsFromGMT(for:)();
      sub_100020964();
      v54();
      uint64_t v58 = sub_100036214();
      v59(v58);
      Date.init()();
      uint64_t v60 = TimeZone.secondsFromGMT(for:)();
      sub_100020964();
      v54();
      if (__OFSUB__(v57, v60)) {
        goto LABEL_24;
      }
    }
    Date.addingTimeInterval(_:)();
    sub_100020964();
    v54();
    char v61 = static Date.< infix(_:_:)();
    sub_100020964();
    v54();
    sub_100020964();
    v54();
    if (v61)
    {
      uint64_t v38 = v83;
      sub_1000769C8((uint64_t)v83, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
      sub_100076968((uint64_t)v36, (uint64_t)v38, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
      Swift::String v33 = v72;
    }
    else
    {
      sub_1000769C8((uint64_t)v36, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
      Swift::String v33 = v72;
      uint64_t v38 = v83;
    }
    v44 += v71;
    if (!--v41) {
      goto LABEL_19;
    }
  }
  static TimeZone.current.getter();
  Date.init()();
  uint64_t v49 = TimeZone.secondsFromGMT(for:)();
  uint64_t v50 = *v43;
  sub_100020964();
  v50();
  uint64_t v51 = sub_100036214();
  v52(v51);
  Date.init()();
  uint64_t v53 = TimeZone.secondsFromGMT(for:)();
  sub_100020964();
  v50();
  if (!__OFSUB__(v49, v53))
  {
    uint64_t v48 = v82;
    uint64_t v38 = v83;
    goto LABEL_10;
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

uint64_t sub_10006EC94(unsigned __int8 *a1, void *a2, void *a3)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  uint64_t result = sub_100165648();
  if (result)
  {
    if (qword_10022C4B8 != -1) {
      swift_once();
    }
    uint64_t v29 = qword_100244120;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v28 = sub_100043478(&qword_10022D718);
    v27[0] = (uint64_t)&type metadata for AppActivityManager;
    id v8 = (id)AMSLogKey();
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = a2;
      uint64_t v11 = v10;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v12._uint64_t countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v12);
      sub_100049788(v27, v28);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v25[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)v25, &qword_10022F490);
      v14._uint64_t countAndFlagsBits = 5972026;
      v14._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v14);
      uint64_t MetatypeMetadata = &type metadata for String;
      v25[0] = v23;
      v25[1] = v11;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)v25, &qword_10022F490);
      v15._uint64_t countAndFlagsBits = 93;
      v15._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      LogMessage.init(stringInterpolation:)();
      a2 = v24;
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v16._uint64_t countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v16);
      sub_100049788(v27, v28);
      uint64_t v17 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v25[0] = v17;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)v25, &qword_10022F490);
      v18._uint64_t countAndFlagsBits = 58;
      v18._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v27);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v19._object = (void *)0x80000001001CB110;
    v19._uint64_t countAndFlagsBits = 0xD000000000000027;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    uint64_t v28 = type metadata accessor for ScheduleInfo.Metadata(0);
    uint64_t v20 = sub_10003BAA4(v27);
    sub_1000768A4((uint64_t)a1, (uint64_t)v20, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)v27, &qword_10022F490);
    v21._uint64_t countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    LogMessage.init(stringInterpolation:)();
    uint64_t v22 = static os_log_type_t.default.getter();
    sub_10004841C(v22);
    swift_bridgeObjectRelease();
    sub_100049788(a2, a2[3]);
    sub_100049788(a3, a3[3]);
    return sub_100073F14(a1);
  }
  return result;
}

uint64_t sub_10006F070()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  __chkstk_darwin(v0 - 8);
  NSString v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
  if (qword_10022C588 != -1) {
    swift_once();
  }
  id v3 = (void *)qword_100244180;
  type metadata accessor for Debouncer();
  swift_allocObject();
  uint64_t result = sub_1000A33B8((uint64_t)v2, v3, (uint64_t)sub_10006F168, 0);
  qword_100244078 = result;
  return result;
}

void sub_10006F168()
{
}

uint64_t sub_10006F170()
{
  return sub_1001890D4(0, (void (*)(void))sub_100076A9C);
}

uint64_t sub_10006F220(char a1, uint64_t a2, uint64_t a3, void *a4, int a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v99 = a7;
  uint64_t v100 = a8;
  LODWORD(v98) = a5;
  unint64_t v97 = a4;
  uint64_t v13 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  long long v96 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v102 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  unsigned __int8 v101 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100043478(&qword_10022E6E0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for ScheduleInfo(0);
  __chkstk_darwin(v21);
  uint64_t v94 = (uint64_t)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v23 - 8);
  if (a1)
  {
    uint64_t v81 = a6;
    uint64_t v92 = v14;
    if (qword_10022C4B8 != -1) {
      swift_once();
    }
    uint64_t v91 = v16;
    uint64_t v93 = v13;
    uint64_t v90 = a9;
    uint64_t v24 = sub_100043478(&qword_10022E560);
    uint64_t v25 = *(void *)(type metadata accessor for LogMessage() - 8);
    uint64_t v26 = *(unsigned __int8 *)(v25 + 80);
    uint64_t v27 = (v26 + 32) & ~v26;
    uint64_t v95 = *(void *)(v25 + 72);
    uint64_t v89 = v24;
    uint64_t v87 = v27 + 2 * v95;
    uint64_t v86 = v26 | 7;
    uint64_t v28 = swift_allocObject();
    long long v85 = xmmword_1001C3120;
    *(_OWORD *)(v28 + 16) = xmmword_1001C3120;
    uint64_t v88 = v27;
    uint64_t v84 = (void *)sub_100043478(&qword_10022D718);
    uint64_t v106 = v84;
    long long aBlock = (void **)&type metadata for AppActivityManager;
    id v29 = (id)AMSLogKey();
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v83 = a2;
      uint64_t v32 = v31;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v33._uint64_t countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      sub_100049788(&aBlock, (uint64_t)v106);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v109 = (void *)DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v109, &qword_10022F490);
      v35._uint64_t countAndFlagsBits = 5972026;
      v35._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v109 = (void *)v82;
      uint64_t v110 = v32;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v109, &qword_10022F490);
      v36._uint64_t countAndFlagsBits = 93;
      v36._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      LogMessage.init(stringInterpolation:)();
      a2 = v83;
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v47._uint64_t countAndFlagsBits = 0;
      v47._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v47);
      sub_100049788(&aBlock, (uint64_t)v106);
      uint64_t v48 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v109 = (void *)v48;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v109, &qword_10022F490);
      v49._uint64_t countAndFlagsBits = 58;
      v49._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v49);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&aBlock);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v50._uint64_t countAndFlagsBits = 0xD000000000000029;
    v50._object = (void *)0x80000001001CB240;
    LogMessage.StringInterpolation.appendLiteral(_:)(v50);
    uint64_t v106 = &type metadata for String;
    long long aBlock = (void **)a2;
    uint64_t v104 = a3;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&aBlock, &qword_10022F490);
    v51._uint64_t countAndFlagsBits = 41;
    v51._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v51);
    LogMessage.init(stringInterpolation:)();
    uint64_t v52 = static os_log_type_t.default.getter();
    sub_10004841C(v52);
    swift_bridgeObjectRelease();
    sub_100049788(v97, v97[3]);
    sub_1001651D0(a2, a3, v98, (uint64_t)v20);
    int v60 = sub_10004FD40((uint64_t)v20, 1, v21);
    if (v60 == 1)
    {
      sub_10002CC68((uint64_t)v20, &qword_10022E6E0);
      uint64_t v98 = qword_100244120;
      *(_OWORD *)(swift_allocObject() + 16) = v85;
      uint64_t v106 = v84;
      long long aBlock = (void **)&type metadata for AppActivityManager;
      id v61 = (id)AMSLogKey();
      if (v61)
      {
        uint64_t v62 = v61;
        uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v65 = v64;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v66._uint64_t countAndFlagsBits = 0;
        v66._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v66);
        sub_100049788(&aBlock, (uint64_t)v106);
        uint64_t v67 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v109 = (void *)v67;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC68((uint64_t)&v109, &qword_10022F490);
        v68._uint64_t countAndFlagsBits = 5972026;
        v68._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v68);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v109 = (void *)v63;
        uint64_t v110 = v65;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC68((uint64_t)&v109, &qword_10022F490);
        v69._uint64_t countAndFlagsBits = 93;
        v69._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v69);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v71._uint64_t countAndFlagsBits = 0;
        v71._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v71);
        sub_100049788(&aBlock, (uint64_t)v106);
        uint64_t v72 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v109 = (void *)v72;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC68((uint64_t)&v109, &qword_10022F490);
        v73._uint64_t countAndFlagsBits = 58;
        v73._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v73);
        LogMessage.init(stringInterpolation:)();
      }
      uint64_t v70 = v96;
      sub_10004377C((uint64_t)&aBlock);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v74._uint64_t countAndFlagsBits = 0xD000000000000040;
      v74._object = (void *)0x80000001001CB270;
      LogMessage.StringInterpolation.appendLiteral(_:)(v74);
      uint64_t v106 = &type metadata for String;
      long long aBlock = (void **)a2;
      uint64_t v104 = a3;
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&aBlock, &qword_10022F490);
      v75._uint64_t countAndFlagsBits = 41;
      v75._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v75);
      LogMessage.init(stringInterpolation:)();
      uint64_t v76 = static os_log_type_t.error.getter();
      sub_10004841C(v76);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v80 = v94;
      sub_100076968((uint64_t)v20, v94, (void (*)(void))type metadata accessor for ScheduleInfo);
      sub_100049788(v81, v81[3]);
      sub_1000ADAC0(v80);
      sub_1000769C8(v80, (void (*)(void))type metadata accessor for ScheduleInfo);
      uint64_t v70 = v96;
    }
    sub_1001AE0D0();
    if (qword_10022C588 != -1) {
      swift_once();
    }
    uint64_t v107 = sub_10006FF9C;
    uint64_t v108 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v104 = 1107296256;
    uint64_t v105 = sub_10002CD0C;
    uint64_t v106 = &unk_10020DDE8;
    uint64_t v77 = _Block_copy(&aBlock);
    uint64_t v78 = v101;
    static DispatchQoS.unspecified.getter();
    uint64_t v109 = _swiftEmptyArrayStorage;
    sub_100076AD8((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100043478((uint64_t *)&unk_10022F4C0);
    sub_10002B6DC((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
    uint64_t v79 = v93;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v77);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v70, v79);
    return (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v78, v91);
  }
  else
  {
    uint64_t v102 = a3;
    if (qword_10022C4B8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v106 = (void *)sub_100043478(&qword_10022D718);
    long long aBlock = (void **)&type metadata for AppActivityManager;
    id v37 = (id)AMSLogKey();
    if (v37)
    {
      uint64_t v38 = v37;
      uint64_t v39 = a2;
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v42 = v41;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v43._uint64_t countAndFlagsBits = 0;
      v43._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      sub_100049788(&aBlock, (uint64_t)v106);
      uint64_t v44 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v109 = (void *)v44;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v109, &qword_10022F490);
      v45._uint64_t countAndFlagsBits = 5972026;
      v45._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v109 = (void *)v40;
      uint64_t v110 = v42;
      a2 = v39;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v109, &qword_10022F490);
      v46._uint64_t countAndFlagsBits = 93;
      v46._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v46);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v53._uint64_t countAndFlagsBits = 0;
      v53._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v53);
      sub_100049788(&aBlock, (uint64_t)v106);
      uint64_t v54 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v109 = (void *)v54;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v109, &qword_10022F490);
      v55._uint64_t countAndFlagsBits = 58;
      v55._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v55);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&aBlock);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v56._object = (void *)0x80000001001CB210;
    v56._uint64_t countAndFlagsBits = 0xD000000000000026;
    LogMessage.StringInterpolation.appendLiteral(_:)(v56);
    uint64_t v106 = &type metadata for String;
    long long aBlock = (void **)a2;
    uint64_t v104 = v102;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&aBlock, &qword_10022F490);
    v57._uint64_t countAndFlagsBits = 41;
    v57._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v57);
    LogMessage.init(stringInterpolation:)();
    uint64_t v58 = static os_log_type_t.default.getter();
    sub_10004841C(v58);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10006FF9C()
{
  return sub_10006854C(1);
}

uint64_t sub_10006FFD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_100020EAC();
  if (qword_10022C4B8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v4 = type metadata accessor for LogMessage();
  sub_100044798(v4);
  sub_10003BDC8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v34 = sub_100043478(&qword_10022D718);
  Swift::String v33 = &type metadata for AppActivityManager;
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100044E44();
    sub_100020F04(&v33);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100043AFC(MetatypeMetadata);
    sub_10002CC68((uint64_t)&v30, &qword_10022F490);
    sub_100020E44();
    uint64_t v32 = &type metadata for String;
    uint64_t v30 = v7;
    uint64_t v31 = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v30, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100044E44();
    sub_100020F04(&v33);
    uint64_t v11 = swift_getMetatypeMetadata();
    sub_100043AFC(v11);
    sub_10002CC68((uint64_t)&v30, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v33);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._object = (void *)0x80000001001CAF80;
  v12._uint64_t countAndFlagsBits = 0xD000000000000015;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  uint64_t v13 = type metadata accessor for ScheduleInfo(0);
  uint64_t v34 = v13;
  uint64_t v14 = sub_10003BAA4((uint64_t *)&v33);
  sub_1000768A4(a1, (uint64_t)v14, (void (*)(void))type metadata accessor for ScheduleInfo);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC68((uint64_t)&v33, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v15 = static os_log_type_t.default.getter();
  sub_10004841C(v15);
  swift_bridgeObjectRelease();
  BOOL v16 = sub_100163F7C(a1 + *(int *)(v13 + 20));
  if ((*(unsigned char *)(a1 + *(int *)(v13 + 24)) & 1) != 0 || !v16)
  {
    sub_1001642E8(a1);
    if (qword_10022C3D8 != -1) {
      swift_once();
    }
    swift_retain();
    sub_100043478((uint64_t *)&unk_100231D50);
    sub_10002B6DC((unint64_t *)&unk_10022F6B0, (uint64_t *)&unk_100231D50);
    Subject<>.send()();
    return swift_release();
  }
  else
  {
    uint64_t v17 = (__n128 *)swift_allocObject();
    sub_100040F48(v17);
    Swift::String v33 = &type metadata for AppActivityManager;
    id v18 = (id)AMSLogKey();
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v29 = a1;
      uint64_t v22 = v21;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100044E44();
      sub_100020F04(&v33);
      uint64_t v23 = swift_getMetatypeMetadata();
      sub_100043AFC(v23);
      sub_10002CC68((uint64_t)&v30, &qword_10022F490);
      sub_100020E44();
      uint64_t v32 = &type metadata for String;
      uint64_t v30 = v20;
      uint64_t v31 = v22;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v30, &qword_10022F490);
      sub_1000208D8();
      sub_1000520D0();
      a1 = v29;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100044E44();
      sub_100020F04(&v33);
      uint64_t v24 = swift_getMetatypeMetadata();
      sub_100043AFC(v24);
      sub_10002CC68((uint64_t)&v30, &qword_10022F490);
      sub_100020E94();
      sub_1000520D0();
    }
    sub_10004377C((uint64_t)&v33);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v25._uint64_t countAndFlagsBits = 0xD000000000000019;
    v25._object = (void *)0x80000001001CAFD0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    uint64_t v34 = v13;
    uint64_t v26 = sub_10003BAA4((uint64_t *)&v33);
    sub_1000768A4(a1, (uint64_t)v26, (void (*)(void))type metadata accessor for ScheduleInfo);
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v33, &qword_10022F490);
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    uint64_t v27 = static os_log_type_t.debug.getter();
    sub_10004841C(v27);
    return swift_bridgeObjectRelease();
  }
}

void sub_100070788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1000707BC()
{
}

uint64_t sub_1000707D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100070894(a1, a2, a3, a4, (uint64_t)&unk_10022D748, type metadata accessor for ScheduleInfo.Metadata, type metadata accessor for ScheduleInfo.Metadata);
}

void sub_100070818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10007084C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100070894(a1, a2, a3, a4, (uint64_t)&unk_10022D868, (uint64_t (*)(void))type metadata accessor for ContentInfo, (uint64_t (*)(void))type metadata accessor for ContentInfo);
}

uint64_t sub_100070894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  sub_10004A6F0();
  if (v13)
  {
    sub_100048B58();
    if (v15 != v16)
    {
      sub_100046134();
      if (v15)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_100044E80();
    }
  }
  else
  {
    uint64_t v14 = v11;
  }
  uint64_t v17 = *(void *)(v7 + 16);
  if (v14 <= v17) {
    uint64_t v18 = *(void *)(v7 + 16);
  }
  else {
    uint64_t v18 = v14;
  }
  if (!v18)
  {
    uint64_t v22 = &_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_100043478(v12);
  uint64_t v19 = a6(0);
  sub_100044798(v19);
  uint64_t v21 = *(void *)(v20 + 72);
  uint64_t v22 = (void *)sub_100022740();
  j__malloc_size(v22);
  if (!v21 || ((sub_100076B94(), v24) ? (BOOL v24 = v21 == -1) : (BOOL v24 = 0), v24))
  {
LABEL_23:
    sub_100022904();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  void v22[2] = v17;
  void v22[3] = 2 * (v23 / v21);
LABEL_18:
  uint64_t v25 = *(void *)(a6(0) - 8);
  unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  if (v8)
  {
    sub_100072584(v7 + v26, v17);
    sub_100049CDC();
  }
  else
  {
    sub_100071D9C(0, v17, (unint64_t)v22 + v26, v7, a7);
  }
  return (uint64_t)v22;
}

void sub_100070A68()
{
  sub_10004A380();
  if (v3)
  {
    sub_100048B58();
    if (v4 != v5)
    {
      sub_100046134();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_100047120();
  if (v2)
  {
    sub_100043478(&qword_10022D860);
    uint64_t v6 = (void *)swift_allocObject();
    size_t v7 = j__malloc_size(v6);
    _OWORD v6[2] = v1;
    v6[3] = 2 * v7 - 64;
  }
  if (v0)
  {
    char v8 = (char *)sub_100045B18();
    sub_100072084(v8, v9, v10);
    sub_100049CDC();
  }
  else
  {
    uint64_t v11 = sub_10004CD80();
    sub_100071614(v11, v12, v13, v14);
  }
}

uint64_t sub_100070B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100070894(a1, a2, a3, a4, (uint64_t)&unk_10022D7F0, type metadata accessor for MercuryCacheMetadata, type metadata accessor for MercuryCacheMetadata);
}

uint64_t sub_100070B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100070894(a1, a2, a3, a4, (uint64_t)&unk_10022D800, type metadata accessor for CacheUpdateRun, type metadata accessor for CacheUpdateRun);
}

uint64_t sub_100070BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100070894(a1, a2, a3, a4, (uint64_t)&unk_10022D7F8, type metadata accessor for MercuryCacheUpdateData.DataKind, type metadata accessor for MercuryCacheUpdateData.DataKind);
}

void sub_100070BF0()
{
  sub_10004A380();
  if (v2)
  {
    sub_100048B58();
    if (v3 != v4)
    {
      sub_100046134();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_100047120();
  if (v1)
  {
    sub_100043478(&qword_10022D7E0);
    char v5 = (void *)sub_10004D1A0();
    sub_100051500(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)sub_100045B18();
    sub_100072114(v6, v7, v8);
    sub_100049CDC();
  }
  else
  {
    uint64_t v9 = sub_10004CD80();
    sub_100071704(v9, v10, v11, v12);
  }
}

uint64_t sub_100070C94()
{
  sub_10004A380();
  if (v3)
  {
    sub_100048B58();
    if (v5 != v6)
    {
      sub_100046134();
      if (v5)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_100044E80();
    }
  }
  else
  {
    uint64_t v4 = v2;
  }
  uint64_t v7 = *(void *)(v0 + 16);
  if (v4 <= v7) {
    uint64_t v8 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v8 = v4;
  }
  if (!v8)
  {
    uint64_t v12 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_100043478(&qword_10022D7C0);
  uint64_t v9 = sub_100043478(&qword_10022D7B8);
  sub_100044798(v9);
  uint64_t v11 = *(void *)(v10 + 72);
  sub_10003BDC8();
  uint64_t v12 = (void *)swift_allocObject();
  j__malloc_size(v12);
  if (!v11 || ((sub_100076B94(), v14) ? (BOOL v14 = v11 == -1) : (BOOL v14 = 0), v14))
  {
LABEL_23:
    sub_100022904();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  sub_1000477EC(v13 / v11);
LABEL_18:
  uint64_t v15 = sub_100043478(&qword_10022D7B8);
  sub_100044E90(v15);
  if (v1)
  {
    sub_1000721BC(v0 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v7);
    sub_100049CDC();
  }
  else
  {
    uint64_t v17 = sub_10004CD80();
    sub_100071824(v17, v18, v19, v20);
  }
  return (uint64_t)v12;
}

uint64_t sub_100070E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100070894(a1, a2, a3, a4, (uint64_t)&qword_10022E560, (uint64_t (*)(void))&type metadata accessor for LogMessage, (uint64_t (*)(void))&type metadata accessor for LogMessage);
}

void sub_100070E88()
{
  sub_10004A380();
  if (v2)
  {
    sub_100048B58();
    if (v3 != v4)
    {
      sub_100046134();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_100047120();
  if (v1)
  {
    sub_100043478(&qword_10022D730);
    char v5 = (const void *)sub_10002D348();
    size_t v6 = j__malloc_size(v5);
    sub_1000477EC((uint64_t)(v6 - 32) / 8);
  }
  if (v0)
  {
    uint64_t v7 = (char *)sub_100045B18();
    sub_1000724CC(v7, v8, v9);
    sub_100049CDC();
  }
  else
  {
    uint64_t v10 = sub_10004CD80();
    sub_100071988(v10, v11, v12, v13);
  }
}

void sub_100070F38()
{
  sub_10004A380();
  if (v2)
  {
    sub_100048B58();
    if (v3 != v4)
    {
      sub_100046134();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_100047120();
  if (v1)
  {
    sub_100043478(&qword_10022D330);
    char v5 = (void *)sub_10004D1A0();
    sub_100051500(v5);
  }
  if (v0)
  {
    size_t v6 = (char *)sub_100045B18();
    sub_100072430(v6, v7, v8);
    sub_100049CDC();
  }
  else
  {
    uint64_t v9 = sub_10004CD80();
    sub_100071AA0(v9, v10, v11, v12);
  }
}

void sub_100070FDC()
{
  sub_10004A380();
  if (v2)
  {
    sub_100048B58();
    if (v3 != v4)
    {
      sub_100046134();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_100047120();
  if (v1)
  {
    sub_100043478(&qword_10022D838);
    char v5 = (const void *)sub_10002D348();
    size_t v6 = j__malloc_size(v5);
    sub_1000477EC((uint64_t)(v6 - 32) / 16);
  }
  if (v0)
  {
    uint64_t v7 = (char *)sub_100045B18();
    sub_10004A0C4(v7, v8, v9);
    sub_100049CDC();
  }
  else
  {
    uint64_t v10 = sub_10004CD80();
    sub_100071BC0(v10, v11, v12, v13);
  }
}

void sub_10007108C()
{
}

void sub_1000710A0()
{
}

void sub_1000710B4()
{
  sub_100020620();
  if (v4)
  {
    sub_100048B58();
    if (v5 != v6)
    {
      sub_100046134();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_10004D67C();
  if (v3)
  {
    sub_100043478(v7);
    uint64_t v8 = (char *)sub_10002D348();
    size_t v9 = j__malloc_size(v8);
    sub_10004A028(v9 - 32);
  }
  else
  {
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  }
  if (v1)
  {
    sub_100072528((char *)(v0 + 32), v2, v8 + 32);
    sub_100049CDC();
  }
  else
  {
    uint64_t v10 = sub_10005338C();
    sub_100071CD8(v10, v11, v12, v13);
  }
}

void sub_100071168()
{
}

void sub_10007117C()
{
}

uint64_t sub_100071190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100070894(a1, a2, a3, a4, (uint64_t)&unk_10022D7A0, type metadata accessor for ScheduleInfo, type metadata accessor for ScheduleInfo);
}

void sub_1000711D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10007120C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100043478(&qword_10022D890);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100071324(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10007141C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10007151C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100071614(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100071704(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_100043478(&qword_10022D7E8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100071824(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_100043478(&qword_10022D7B8) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100071988(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_100043478((uint64_t *)&unk_100233150);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100071AA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_100043478(&qword_10022D848);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100071BC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100043478(&qword_10022D840);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100071CD8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    sub_100022904();
    sub_100049830();
    goto LABEL_11;
  }
  unint64_t v5 = a4 + 32 * a1 + 32;
  unint64_t v6 = a3 + 32 * v4;
  if (v5 >= v6 || v5 + 32 * v4 <= a3)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v6;
  }
  sub_100022904();
  sub_10004DBF0();
LABEL_11:
  uint64_t result = sub_10004AA78();
  __break(1u);
  return result;
}

uint64_t sub_100071D9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_100022904();
    sub_100049830();
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(a5(0) - 8);
  uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v11 = *(void *)(v9 + 72);
  unint64_t v12 = v10 + v11 * a1;
  unint64_t v13 = a3 + v11 * v5;
  if (v12 >= v13 || v12 + v11 * v5 <= a3)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v13;
  }
  sub_100022904();
  sub_10004DBF0();
LABEL_11:
  uint64_t result = sub_10004AA78();
  __break(1u);
  return result;
}

uint64_t sub_100071ED0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_100043478(&qword_10022D770);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100071FF0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_100072084(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *sub_100072114(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

void sub_1000721B0(uint64_t a1, uint64_t a2)
{
}

void sub_1000721BC(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_100022904();
    sub_100048528();
    __break(1u);
  }
  else
  {
    sub_100076B7C();
    if (v6 && (sub_100043478(v5), sub_100043B1C(), v3 + *(void *)(v7 + 72) * v2 > v4))
    {
      if (v4 != v3)
      {
        sub_10004746C();
        swift_arrayInitWithTakeBackToFront();
      }
    }
    else
    {
      sub_100043478(v5);
      sub_10004746C();
      swift_arrayInitWithTakeFrontToBack();
    }
  }
}

char *sub_1000722A0(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_100022904();
    uint64_t result = (char *)sub_100048528();
    __break(1u);
  }
  else if (a3 != result || &result[80 * a2] <= a3)
  {
    return (char *)sub_10004B2F0(a3, result);
  }
  return result;
}

char *sub_100072304(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

char *sub_100072398(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

char *sub_100072430(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }
  return __src;
}

char *sub_1000724CC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_100022904();
    uint64_t result = (char *)sub_100048528();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_10004B2F0(a3, result);
  }
  return result;
}

char *sub_100072528(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_100022904();
    uint64_t result = (char *)sub_100048528();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)sub_10004B2F0(a3, result);
  }
  return result;
}

void sub_100072584(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_100022904();
    sub_100048528();
    __break(1u);
  }
  else
  {
    sub_100076B7C();
    if (v6 && (v5(0), sub_100043B1C(), v3 + *(void *)(v7 + 72) * v2 > v4))
    {
      if (v4 != v3)
      {
        sub_10004746C();
        swift_arrayInitWithTakeBackToFront();
      }
    }
    else
    {
      v5(0);
      sub_10004746C();
      swift_arrayInitWithTakeFrontToBack();
    }
  }
}

char *sub_100072674(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

uint64_t sub_100072710(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_100022904();
    sub_100049830();
LABEL_11:
    uint64_t result = sub_10004AA78();
    __break(1u);
    return result;
  }
  sub_1000456EC();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_100022904();
    sub_10004DBF0();
    goto LABEL_11;
  }
  sub_100043478(&qword_10022D8A8);
  sub_100045D54();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1000727C0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    sub_100043478(&qword_10022D8A0);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1000728C0(uint64_t a1, uint64_t a2)
{
  return sub_100073040(a1, a2);
}

uint64_t sub_1000728D8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_100022904();
    sub_100049830();
LABEL_11:
    uint64_t result = sub_10004AA78();
    __break(1u);
    return result;
  }
  if (a3 + 24 * a2 > a1 && a1 + 24 * a2 > a3)
  {
    sub_100022904();
    sub_10004DBF0();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_10007298C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 32 * a2 > a1 ? (BOOL v3 = a1 + 32 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

void *sub_100072A70(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_100072B48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  if (a2 < 0)
  {
    sub_100022904();
    sub_100049830();
LABEL_11:
    uint64_t result = sub_10004AA78();
    __break(1u);
    return result;
  }
  sub_100043478(a4);
  sub_100043B1C();
  sub_100076BB4();
  if (!v7 & v6) {
    BOOL v8 = v5 > a3;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8)
  {
    sub_100022904();
    sub_10004DBF0();
    goto LABEL_11;
  }
  sub_100045D54();
  return swift_arrayInitWithCopy();
}

uint64_t sub_100072C10(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 32 * a2 > a1 ? (BOOL v3 = a1 + 32 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

void *sub_100072CF0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0 || (&__dst[8 * a2] > __src ? (BOOL v3 = &__src[8 * a2] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, 8 * a2);
  }
  return result;
}

uint64_t sub_100072DCC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 40 * a2 > a1 ? (BOOL v3 = a1 + 40 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_100072EB0(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (a2 < 0)
  {
    sub_100022904();
    sub_100049830();
LABEL_11:
    uint64_t result = sub_10004AA78();
    __break(1u);
    return result;
  }
  a4(0);
  sub_100043B1C();
  sub_100076BB4();
  if (!v7 & v6) {
    BOOL v8 = v5 > a3;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8)
  {
    sub_100022904();
    sub_10004DBF0();
    goto LABEL_11;
  }
  sub_100045D54();
  return swift_arrayInitWithCopy();
}

uint64_t sub_100072F7C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_100022904();
    sub_100049830();
LABEL_11:
    uint64_t result = sub_10004AA78();
    __break(1u);
    return result;
  }
  sub_1000456EC();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_100022904();
    sub_10004DBF0();
    goto LABEL_11;
  }
  sub_100043478(v3);
  sub_100045D54();
  return swift_arrayInitWithCopy();
}

uint64_t sub_100073028(uint64_t a1, uint64_t a2)
{
  return sub_100073040(a1, a2);
}

uint64_t sub_100073040(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_100022904();
    sub_100049830();
LABEL_11:
    uint64_t result = sub_10004AA78();
    __break(1u);
    return result;
  }
  sub_1000456EC();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_100022904();
    sub_10004DBF0();
    goto LABEL_11;
  }
  v3(0);
  sub_100045D54();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1000730F0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 24 * a2 > a1 ? (BOOL v3 = a1 + 24 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    sub_100043478(&qword_100234690);
    return swift_arrayInitWithCopy();
  }
  return result;
}

void sub_1000731F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000736B8(a1, a2, a3, *v3, (uint64_t)&unk_10022D898, (void (*)(uint64_t))sub_100071FF0, (void (*)(uint64_t))sub_1000727C0);
  *BOOL v3 = v4;
}

void sub_100073244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10007377C(a1, a2, a3, *v3, (uint64_t)&unk_10022D748, type metadata accessor for ScheduleInfo.Metadata, (uint64_t)type metadata accessor for ScheduleInfo.Metadata, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
  *BOOL v3 = v4;
}

void sub_1000732A8()
{
  sub_100073A2C();
  *uint64_t v0 = v1;
}

void sub_1000732D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100073E54(a1, a2, a3, *v3, (uint64_t)&qword_10022D780, (void (*)(uint64_t))sub_100052768, (void (*)(uint64_t))sub_1000728D8);
  *BOOL v3 = v4;
}

void sub_100073328()
{
  sub_1000738F4();
  *uint64_t v0 = v1;
}

void sub_100073358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10007377C(a1, a2, a3, *v3, (uint64_t)&unk_10022D868, (uint64_t (*)(void))type metadata accessor for ContentInfo, (uint64_t)type metadata accessor for ContentInfo, (void (*)(void))type metadata accessor for ContentInfo);
  *BOOL v3 = v4;
}

void sub_1000733BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10007377C(a1, a2, a3, *v3, (uint64_t)&unk_10022D800, type metadata accessor for CacheUpdateRun, (uint64_t)type metadata accessor for CacheUpdateRun, (void (*)(void))type metadata accessor for CacheUpdateRun);
  *BOOL v3 = v4;
}

void sub_100073420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10007377C(a1, a2, a3, *v3, (uint64_t)&unk_10022D7F0, type metadata accessor for MercuryCacheMetadata, (uint64_t)type metadata accessor for MercuryCacheMetadata, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
  *BOOL v3 = v4;
}

void sub_100073484()
{
  sub_100028D10();
  *uint64_t v0 = v1;
}

void sub_1000734A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100073D90(a1, a2, a3, *v3, (uint64_t)&unk_10022D790, (void (*)(uint64_t))sub_10004FAC0, (void (*)(uint64_t))sub_100072C10);
  *BOOL v3 = v4;
}

void sub_1000734F4()
{
  sub_100073A2C();
  *uint64_t v0 = v1;
}

char *sub_100073524(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_100073AE8(a1, a2, a3, *v3);
  *BOOL v3 = (uint64_t)result;
  return result;
}

char *sub_100073544(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_100073BC0(a1, a2, a3, *v3);
  *BOOL v3 = (uint64_t)result;
  return result;
}

char *sub_100073564(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_100073CA4(a1, a2, a3, *v3);
  *BOOL v3 = (uint64_t)result;
  return result;
}

void sub_100073584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10007377C(a1, a2, a3, *v3, (uint64_t)&unk_10022D850, type metadata accessor for JSContent.CacheRequest, (uint64_t)type metadata accessor for JSContent.CacheRequest, (void (*)(void))type metadata accessor for JSContent.CacheRequest);
  *BOOL v3 = v4;
}

void sub_1000735E8()
{
  sub_100073A2C();
  *uint64_t v0 = v1;
}

void sub_100073618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100073D90(a1, a2, a3, *v3, (uint64_t)&unk_10022D808, (void (*)(uint64_t))sub_10004FAC0, (void (*)(uint64_t))sub_10007298C);
  *BOOL v3 = v4;
}

void sub_100073668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100073E54(a1, a2, a3, *v3, (uint64_t)&unk_10022D778, (void (*)(uint64_t))sub_100072674, (void (*)(uint64_t))sub_1000730F0);
  *BOOL v3 = v4;
}

void sub_1000736B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), void (*a7)(uint64_t))
{
  sub_10004A6F0();
  if (v12)
  {
    sub_100048B58();
    if (v13 != v14)
    {
      sub_100046134();
      if (v13)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_100046D3C();
  if (v9)
  {
    sub_100043478(v15);
    uint64_t v16 = (const void *)sub_10002D348();
    size_t v17 = j__malloc_size(v16);
    sub_100046C3C(v17 - 32);
  }
  uint64_t v18 = sub_100076B70();
  if (v8)
  {
    a6(v18);
    *(void *)(v7 + 16) = 0;
  }
  else
  {
    a7(v18);
  }
  swift_release();
}

void sub_10007377C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), uint64_t a7, void (*a8)(void))
{
  sub_10004A6F0();
  if (v14)
  {
    sub_100048B58();
    if (v16 != v17)
    {
      sub_100046134();
      if (v16)
      {
LABEL_24:
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  else
  {
    uint64_t v15 = v12;
  }
  uint64_t v18 = *(void *)(v8 + 16);
  if (v15 <= v18) {
    uint64_t v19 = *(void *)(v8 + 16);
  }
  else {
    uint64_t v19 = v15;
  }
  if (!v19)
  {
    uint64_t v23 = &_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_100043478(v13);
  uint64_t v20 = a6(0);
  sub_100044798(v20);
  uint64_t v22 = *(void *)(v21 + 72);
  uint64_t v23 = (void *)sub_100022740();
  j__malloc_size(v23);
  if (!v22)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_100076B94();
  BOOL v25 = v25 && v22 == -1;
  if (v25) {
    goto LABEL_23;
  }
  Swift::String v23[2] = v18;
  void v23[3] = 2 * (v24 / v22);
LABEL_18:
  uint64_t v26 = *(void *)(a6(0) - 8);
  unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = v8 + v27;
  if (v9)
  {
    sub_100072584(v28, v18);
    *(void *)(v8 + 16) = 0;
  }
  else
  {
    sub_100072EB0(v28, v18, (unint64_t)v23 + v27, a8);
  }
  swift_release();
}

void sub_1000738E0()
{
}

void sub_1000738F4()
{
  sub_100020620();
  if (v5)
  {
    sub_100048B58();
    if (v7 != v8)
    {
      sub_100046134();
      if (v7)
      {
LABEL_24:
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  else
  {
    uint64_t v6 = v3;
  }
  uint64_t v9 = *(void *)(v0 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (!v10)
  {
    char v14 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_100043478(v4);
  uint64_t v11 = sub_100043478(v1);
  sub_100044798(v11);
  uint64_t v13 = *(void *)(v12 + 72);
  sub_10003BDC8();
  char v14 = (void *)swift_allocObject();
  j__malloc_size(v14);
  if (!v13)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_100076B94();
  BOOL v16 = v16 && v13 == -1;
  if (v16) {
    goto LABEL_23;
  }
  void v14[2] = v9;
  uint64_t v14[3] = 2 * (v15 / v13);
LABEL_18:
  uint64_t v17 = sub_100043478(v1);
  sub_100044E90(v17);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = v0 + v19;
  if (v2)
  {
    sub_1000721BC(v20, v9);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_100072B48(v20, v9, (unint64_t)v14 + v19, v1);
  }
  swift_release();
}

void sub_100073A2C()
{
  sub_100020620();
  if (v4)
  {
    sub_100048B58();
    if (v5 != v6)
    {
      sub_100046134();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_10004D67C();
  if (v3)
  {
    sub_100043478(v7);
    char v8 = (char *)sub_10002D348();
    size_t v9 = j__malloc_size(v8);
    sub_10004A028(v9 - 32);
  }
  else
  {
    char v8 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v10 = (char *)(v0 + 32);
  if (v1)
  {
    sub_1000724CC(v10, v2, v8 + 32);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_100072F7C((uint64_t)v10, v2);
  }
  swift_release();
}

char *sub_100073AE8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100043478(&qword_10022D860);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_100072084(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100072A70(v13, v8, v12);
  }
  swift_release();
  return v10;
}

char *sub_100073BC0(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100043478(&qword_10022D760);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_100072304(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100072CF0(v13, v8, v12);
  }
  swift_release();
  return v10;
}

char *sub_100073CA4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100043478(&qword_10022D858);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_100072398(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100072DCC((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_100073D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), void (*a7)(uint64_t))
{
  sub_10004A6F0();
  if (v12)
  {
    sub_100048B58();
    if (v13 != v14)
    {
      sub_100046134();
      if (v13)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_100046D3C();
  if (v9)
  {
    sub_100043478(v15);
    BOOL v16 = (const void *)sub_10002D348();
    size_t v17 = j__malloc_size(v16);
    sub_100046C3C(v17 - 32);
  }
  uint64_t v18 = sub_100076B70();
  if (v8)
  {
    a6(v18);
    *(void *)(v7 + 16) = 0;
  }
  else
  {
    a7(v18);
  }
  swift_release();
}

void sub_100073E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), void (*a7)(uint64_t))
{
  sub_10004A6F0();
  if (v12)
  {
    sub_100048B58();
    if (v13 != v14)
    {
      sub_100046134();
      if (v13)
      {
        __break(1u);
        return;
      }
      sub_100044E80();
    }
  }
  sub_100046D3C();
  if (v9)
  {
    sub_100043478(v15);
    BOOL v16 = (const void *)sub_1000362E0();
    size_t v17 = j__malloc_size(v16);
    sub_100076BA0(v17);
  }
  uint64_t v18 = sub_100076B70();
  if (v8)
  {
    a6(v18);
    *(void *)(v7 + 16) = 0;
  }
  else
  {
    a7(v18);
  }
  swift_release();
}

uint64_t sub_100073F14(unsigned __int8 *a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_100043478(&qword_10022E6E0);
  __chkstk_darwin(v3 - 8);
  char v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ScheduleInfo(0);
  __chkstk_darwin(v6);
  char v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v35[3] = &type metadata for ScheduleDatabase;
  v35[4] = &off_100215CE8;
  Swift::String v33 = &type metadata for EngagementScheduleRunner;
  uint64_t v34 = &off_10020F568;
  sub_100049788(v35, (uint64_t)&type metadata for ScheduleDatabase);
  uint64_t v9 = (uint64_t *)&a1[*(int *)(type metadata accessor for ScheduleInfo.Metadata(0) + 44)];
  sub_1001651D0(*v9, v9[1], *a1, (uint64_t)v5);
  if (sub_10004FD40((uint64_t)v5, 1, v6) == 1)
  {
    sub_10002CC68((uint64_t)v5, &qword_10022E6E0);
    if (qword_10022C4B8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v31 = (void *)sub_100043478(&qword_10022D718);
    v30[0] = &type metadata for AppActivityManager;
    id v10 = (id)AMSLogKey();
    if (v10)
    {
      size_t v11 = v10;
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v15._uint64_t countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      sub_100049788(v30, (uint64_t)v31);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v28[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)v28, &qword_10022F490);
      v17._uint64_t countAndFlagsBits = 5972026;
      v17._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      uint64_t MetatypeMetadata = &type metadata for String;
      v28[0] = v12;
      v28[1] = v14;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)v28, &qword_10022F490);
      v18._uint64_t countAndFlagsBits = 93;
      v18._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v19._uint64_t countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      sub_100049788(v30, (uint64_t)v31);
      uint64_t v20 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v28[0] = v20;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)v28, &qword_10022F490);
      v21._uint64_t countAndFlagsBits = 58;
      v21._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v30);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v22._object = (void *)0x80000001001CB140;
    v22._uint64_t countAndFlagsBits = 0xD000000000000026;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t v24 = *v9;
    uint64_t v23 = v9[1];
    uint64_t v31 = &type metadata for String;
    v30[0] = v24;
    v30[1] = v23;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)v30, &qword_10022F490);
    v25._uint64_t countAndFlagsBits = 41;
    v25._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    LogMessage.init(stringInterpolation:)();
    uint64_t v26 = static os_log_type_t.error.getter();
    sub_10004841C(v26);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100076968((uint64_t)v5, (uint64_t)v8, (void (*)(void))type metadata accessor for ScheduleInfo);
    sub_100049788(v32, (uint64_t)v33);
    sub_1000ADAC0((uint64_t)v8);
    sub_1000769C8((uint64_t)v8, (void (*)(void))type metadata accessor for ScheduleInfo);
  }
  sub_10004377C((uint64_t)v35);
  return sub_10004377C((uint64_t)v32);
}

uint64_t sub_1000743F8(uint64_t a1)
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v1 - 8);
  _OWORD v41[3] = &type metadata for ScheduleDatabase;
  unsigned char v41[4] = &off_100215CE8;
  v40[3] = &type metadata for EngagementScheduleRunner;
  v40[4] = &off_10020F568;
  if (qword_10022C4B8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v33 = sub_100043478(&qword_10022D718);
  uint64_t v39 = v33;
  v38[0] = &type metadata for AppActivityManager;
  id v2 = (id)AMSLogKey();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v7._uint64_t countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v7);
    sub_100049788(v38, v39);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v35 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v35, &qword_10022F490);
    v9._uint64_t countAndFlagsBits = 5972026;
    v9._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v35 = v4;
    uint64_t v36 = v6;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v35, &qword_10022F490);
    v10._uint64_t countAndFlagsBits = 93;
    v10._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._uint64_t countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    sub_100049788(v38, v39);
    uint64_t v12 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v35 = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v35, &qword_10022F490);
    v13._uint64_t countAndFlagsBits = 58;
    v13._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v38);
  LogMessage.init(stringLiteral:)();
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_10004841C(v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v16 = *(void *)(type metadata accessor for ScheduleInfo.Metadata(0) - 8);
    Swift::String v17 = (unsigned __int8 *)(a1
                            + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)));
    uint64_t v18 = *(void *)(v16 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_10006EC94(v17, v41, v40);
      v17 += v18;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v39 = v33;
  v38[0] = &type metadata for AppActivityManager;
  id v19 = (id)AMSLogKey();
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v24._uint64_t countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    sub_100049788(v38, v39);
    uint64_t v25 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v35 = v25;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v35, &qword_10022F490);
    v26._uint64_t countAndFlagsBits = 5972026;
    v26._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v35 = v21;
    uint64_t v36 = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v35, &qword_10022F490);
    v27._uint64_t countAndFlagsBits = 93;
    v27._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v28._uint64_t countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    sub_100049788(v38, v39);
    uint64_t v29 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v35 = v29;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v35, &qword_10022F490);
    v30._uint64_t countAndFlagsBits = 58;
    v30._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v38);
  LogMessage.init(stringLiteral:)();
  uint64_t v31 = static os_log_type_t.default.getter();
  sub_10004841C(v31);
  swift_bridgeObjectRelease();
  sub_10004377C((uint64_t)v41);
  return sub_10004377C((uint64_t)v40);
}

uint64_t sub_100074A28(unsigned __int8 *a1, char a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  Swift::String v49 = &type metadata for EngagementScheduleRunner;
  Swift::String v50 = &off_10020F568;
  if (qword_10022C4B8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v40 = (ValueMetadata *)sub_100043478(&qword_10022D718);
  Swift::String v46 = v40;
  Swift::String v45 = &type metadata for AppActivityManager;
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    uint64_t v6 = v5;
    Swift::String v7 = a1;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._uint64_t countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    sub_100049788(&v45, (uint64_t)v46);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (ValueMetadata *)swift_getMetatypeMetadata();
    uint64_t v41 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v41, &qword_10022F490);
    v13._uint64_t countAndFlagsBits = 5972026;
    v13._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    uint64_t MetatypeMetadata = (ValueMetadata *)&type metadata for String;
    uint64_t v41 = v8;
    uint64_t v42 = v10;
    a1 = v7;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v41, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 93;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    sub_100049788(&v45, (uint64_t)v46);
    uint64_t v16 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (ValueMetadata *)swift_getMetatypeMetadata();
    uint64_t v41 = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v41, &qword_10022F490);
    v17._uint64_t countAndFlagsBits = 58;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v45);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._object = (void *)0x80000001001CB0D0;
  v18._uint64_t countAndFlagsBits = 0xD000000000000016;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  id v19 = (ValueMetadata *)type metadata accessor for ScheduleInfo.Metadata(0);
  Swift::String v46 = v19;
  uint64_t v20 = sub_10003BAA4((uint64_t *)&v45);
  sub_1000768A4((uint64_t)a1, (uint64_t)v20, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC68((uint64_t)&v45, &qword_10022F490);
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  LogMessage.init(stringInterpolation:)();
  uint64_t v22 = static os_log_type_t.default.getter();
  sub_10004841C(v22);
  swift_bridgeObjectRelease();
  if (sub_100165648())
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    Swift::String v46 = v40;
    Swift::String v45 = &type metadata for AppActivityManager;
    id v23 = (id)AMSLogKey();
    if (v23)
    {
      Swift::String v24 = v23;
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v27 = v26;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v28._uint64_t countAndFlagsBits = 0;
      v28._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      sub_100049788(&v45, (uint64_t)v46);
      uint64_t v29 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (ValueMetadata *)swift_getMetatypeMetadata();
      uint64_t v41 = v29;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v41, &qword_10022F490);
      v30._uint64_t countAndFlagsBits = 5972026;
      v30._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      uint64_t MetatypeMetadata = (ValueMetadata *)&type metadata for String;
      uint64_t v41 = v25;
      uint64_t v42 = v27;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v41, &qword_10022F490);
      v31._uint64_t countAndFlagsBits = 93;
      v31._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v32._uint64_t countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      sub_100049788(&v45, (uint64_t)v46);
      uint64_t v33 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (ValueMetadata *)swift_getMetatypeMetadata();
      uint64_t v41 = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v41, &qword_10022F490);
      v34._uint64_t countAndFlagsBits = 58;
      v34._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v45);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v35._uint64_t countAndFlagsBits = 0xD000000000000027;
    v35._object = (void *)0x80000001001CB110;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    Swift::String v46 = v19;
    uint64_t v36 = sub_10003BAA4((uint64_t *)&v45);
    sub_1000768A4((uint64_t)a1, (uint64_t)v36, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v45, &qword_10022F490);
    v37._uint64_t countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
    LogMessage.init(stringInterpolation:)();
    uint64_t v38 = static os_log_type_t.default.getter();
    sub_10004841C(v38);
    swift_bridgeObjectRelease();
    sub_100049788(v48, (uint64_t)v49);
    sub_100073F14(a1);
  }
  else
  {
    Swift::String v46 = &type metadata for ScheduleDatabase;
    Swift::String v47 = &off_100215CE8;
    uint64_t MetatypeMetadata = &type metadata for EngagementScheduleRunner;
    uint64_t v44 = &off_10020F568;
    sub_10006E0E4((char *)a1, a2 & 1, (uint64_t)&v45, (uint64_t)&v41);
    sub_10004377C((uint64_t)&v41);
    sub_10004377C((uint64_t)&v45);
  }
  return sub_10004377C((uint64_t)v48);
}

void sub_100075468(int a1)
{
  LODWORD(v1) = a1;
  uint64_t v158 = type metadata accessor for TimeZone();
  sub_100020DEC();
  uint64_t v165 = v2;
  __chkstk_darwin(v3);
  sub_100040A70();
  uint64_t v157 = v4;
  uint64_t v5 = sub_100043478(&qword_1002344F0);
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_100040A70();
  uint64_t v163 = v7;
  uint64_t v8 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v164 = v9;
  __chkstk_darwin(v10);
  sub_100035C70();
  v156 = v11;
  sub_100020974();
  uint64_t v13 = __chkstk_darwin(v12);
  Swift::String v15 = (char *)&v141 - v14;
  __chkstk_darwin(v13);
  sub_10004FBF4();
  uint64_t v161 = v16;
  sub_100020974();
  __chkstk_darwin(v17);
  sub_100022190();
  uint64_t v167 = v18;
  uint64_t v19 = sub_100043478(&qword_10022D720);
  uint64_t v20 = sub_1000208F0(v19);
  __chkstk_darwin(v20);
  sub_100040A70();
  uint64_t v143 = v21;
  v168 = (ValueMetadata *)type metadata accessor for ScheduleInfo.Metadata(0);
  sub_100020DEC();
  uint64_t v166 = v22;
  __chkstk_darwin(v23);
  sub_100035C70();
  uint64_t v160 = v24;
  sub_100020974();
  __chkstk_darwin(v25);
  sub_10004FBF4();
  uint64_t v162 = v26;
  sub_100020974();
  __chkstk_darwin(v27);
  sub_10004FBF4();
  v144 = (unsigned __int8 *)v28;
  sub_100020974();
  __chkstk_darwin(v29);
  sub_100022190();
  uint64_t v169 = v30;
  uint64_t v31 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v32 = sub_1000208F0(v31);
  __chkstk_darwin(v32);
  sub_100020EAC();
  uint64_t v35 = v34 - v33;
  uint64_t v36 = type metadata accessor for DispatchPredicate();
  sub_100020DEC();
  uint64_t v38 = v37;
  __chkstk_darwin(v39);
  sub_100020EAC();
  uint64_t v42 = (void *)(v41 - v40);
  Swift::String v43 = &off_100215CE8;
  v176 = &type metadata for ScheduleDatabase;
  v177 = &off_100215CE8;
  if (qword_10022C588 != -1) {
    goto LABEL_87;
  }
  while (1)
  {
    uint64_t v44 = (void *)qword_100244180;
    *uint64_t v42 = qword_100244180;
    (*(void (**)(void *, void, uint64_t))(v38 + 104))(v42, enum case for DispatchPredicate.onQueue(_:), v36);
    id v45 = v44;
    uint64_t v46 = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v38 + 8))(v42, v36);
    if (v46)
    {

      if (qword_10022C4B8 == -1) {
        goto LABEL_4;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
LABEL_4:
    int v142 = v1;
    uint64_t v36 = qword_100244120;
    uint64_t v47 = sub_100043478(&qword_10022E560);
    uint64_t v48 = type metadata accessor for LogMessage();
    sub_100044798(v48);
    sub_10003BDC8();
    uint64_t v51 = v50 & ~v49;
    uint64_t v151 = v52;
    uint64_t v150 = v47;
    uint64_t v146 = v51 + 2 * v52;
    uint64_t v148 = v49 | 7;
    uint64_t v53 = swift_allocObject();
    long long v147 = xmmword_1001C3120;
    *(_OWORD *)(v53 + 16) = xmmword_1001C3120;
    uint64_t v149 = v51;
    v145 = (ValueMetadata *)sub_100043478(&qword_10022D718);
    v173 = v145;
    v172[0] = (uint64_t)&type metadata for AppActivityManager;
    id v54 = (id)AMSLogKey();
    uint64_t v152 = v35;
    if (v54)
    {
      Swift::String v55 = v54;
      uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v46 = v57;

      swift_bridgeObjectRetain();
      sub_100020F60();
      v58._uint64_t countAndFlagsBits = 0;
      v58._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v58);
      uint64_t v59 = sub_100020F04(v172);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v170 = v59;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v170, &qword_10022F490);
      v60._uint64_t countAndFlagsBits = 5972026;
      v60._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v60);
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&long long v170 = v56;
      Swift::String v43 = &off_100215CE8;
      *((void *)&v170 + 1) = v46;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v170, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100020E60();
      sub_100049788(v172, (uint64_t)v173);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v170 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v170, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10002CAE0();
    sub_10004377C((uint64_t)v172);
    LogMessage.init(stringLiteral:)();
    uint64_t v62 = static os_log_type_t.default.getter();
    sub_10004841C(v62);
    swift_bridgeObjectRelease();
    uint64_t v63 = sub_100078E48();
    sub_100049788(&v175, (uint64_t)v176);
    v173 = &type metadata for ScheduleDatabase;
    v174 = v43;
    sub_10005416C((uint64_t)v172, (uint64_t)&v170);
    uint64_t v64 = swift_allocObject();
    sub_100028270(&v170, v64 + 16);
    sub_10004377C((uint64_t)v172);
    uint64_t v65 = (char *)v63[2];
    uint64_t v35 = (uint64_t)_swiftEmptyArrayStorage;
    if (v65)
    {
      uint64_t v159 = v64;
      swift_bridgeObjectRetain();
      Swift::String v66 = 0;
      uint64_t v46 = (uint64_t)_swiftEmptyArrayStorage;
      do
      {
        uint64_t v67 = swift_allocObject();
        *(void *)(v67 + 16) = _swiftEmptyArrayStorage;
        uint64_t v36 = v67 + 16;
        sub_100164850();
        swift_beginAccess();
        uint64_t v68 = *(void *)v36;
        if (*(void *)(*(void *)v36 + 16))
        {
          swift_bridgeObjectRetain();
          swift_release();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100004A80();
            uint64_t v35 = v70;
          }
          unint64_t v69 = *(void *)(v35 + 16);
          uint64_t v36 = v69 + 1;
          if (v69 >= *(void *)(v35 + 24) >> 1)
          {
            sub_100004A80();
            uint64_t v35 = v71;
          }
          *(void *)(v35 + 16) = v36;
          *(void *)(v35 + 8 * v69 + 32) = v68;
        }
        else
        {
          swift_release();
        }
        ++v66;
      }
      while (v65 != v66);
      swift_bridgeObjectRelease();
      sub_10002CAE0();
    }
    swift_bridgeObjectRelease();
    swift_release();
    Swift::String v43 = *(_UNKNOWN ***)(v35 + 16);
    if (v43)
    {
      swift_bridgeObjectRetain();
      uint64_t v72 = 0;
      uint64_t v42 = _swiftEmptyArrayStorage;
      while (1)
      {
        uint64_t v46 = *(void *)(v35 + 8 * v72 + 32);
        unint64_t v1 = *(void *)(v46 + 16);
        uint64_t v36 = v42[2];
        uint64_t v38 = v36 + v1;
        if (__OFADD__(v36, v1)) {
          break;
        }
        swift_bridgeObjectRetain();
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (!isUniquelyReferenced_nonNull_native || v38 > v42[3] >> 1)
        {
          if (v36 <= v38) {
            uint64_t v74 = v36 + v1;
          }
          else {
            uint64_t v74 = v36;
          }
          uint64_t v42 = (void *)sub_100070894(isUniquelyReferenced_nonNull_native, v74, 1, (uint64_t)v42, (uint64_t)&unk_10022D748, type metadata accessor for ScheduleInfo.Metadata, type metadata accessor for ScheduleInfo.Metadata);
        }
        if (*(void *)(v46 + 16))
        {
          uint64_t v75 = v42[2];
          if ((v42[3] >> 1) - v75 < (uint64_t)v1) {
            goto LABEL_84;
          }
          unint64_t v76 = (*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80);
          uint64_t v77 = *(void *)(v166 + 72);
          uint64_t v78 = (char *)v42 + v76 + v77 * v75;
          if (v46 + v76 < (unint64_t)&v78[v77 * v1] && (unint64_t)v78 < v46 + v76 + v77 * v1)
          {
            sub_100022904();
            sub_10004DBF0();
            sub_10004AA78();
            __break(1u);
            return;
          }
          swift_arrayInitWithCopy();
          if (v1)
          {
            uint64_t v80 = v42[2];
            BOOL v81 = __OFADD__(v80, v1);
            uint64_t v82 = v80 + v1;
            if (v81) {
              goto LABEL_86;
            }
            _OWORD v42[2] = v82;
          }
        }
        else if (v1)
        {
          goto LABEL_82;
        }
        swift_bridgeObjectRelease();
        if (v43 == (_UNKNOWN **)++v72)
        {
          swift_bridgeObjectRelease();
          sub_10002CAE0();
          goto LABEL_41;
        }
      }
      __break(1u);
LABEL_82:
      __break(1u);
      goto LABEL_83;
    }
    uint64_t v42 = _swiftEmptyArrayStorage;
LABEL_41:
    swift_bridgeObjectRelease();
    sub_100049788(&v175, (uint64_t)v176);
    sub_1000743F8((uint64_t)v42);
    v172[0] = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v83 = v42[2];
    swift_bridgeObjectRetain();
    Swift::String v43 = (_UNKNOWN **)v168;
    uint64_t v159 = v83;
    if (!v83) {
      break;
    }
    unint64_t v1 = 0;
    v155 = (void (**)(char *, uint64_t, uint64_t))(v164 + 32);
    uint64_t v154 = v164 + 16;
    uint64_t v38 = v164 + 8;
    v153 = (void (**)(uint64_t, uint64_t))(v165 + 8);
    while (v1 < v42[2])
    {
      sub_10004FCB4();
      uint64_t v85 = *(void *)(v84 + 72);
      uint64_t v164 = v86;
      uint64_t v87 = v169;
      sub_1000768A4((uint64_t)v42 + v86 + v85 * v1, v169, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
      static Date.now.getter();
      sub_100076900(v87 + *((int *)v43 + 8), v46);
      uint64_t v88 = v87;
      uint64_t v89 = v162;
      sub_1000768A4(v88, v162, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
      sub_100043F70(v46);
      uint64_t v165 = v85;
      if (v128)
      {
        sub_100011DCC();
        v90();
        sub_1000769C8(v89, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
        sub_10002CC68(v46, &qword_1002344F0);
      }
      else
      {
        sub_1000769C8(v89, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
        (*v155)(v15, v46, v8);
      }
      if (*(unsigned char *)(v169 + *((int *)v43 + 9)) == 1)
      {
        uint64_t v36 = v8;
        uint64_t v91 = v15;
        uint64_t v92 = v157;
        static TimeZone.current.getter();
        Swift::String v15 = v156;
        Date.init()();
        Swift::String v43 = (_UNKNOWN **)TimeZone.secondsFromGMT(for:)();
        uint64_t v46 = *(void *)v38;
        sub_1000439B8();
        ((void (*)(void))v46)();
        (*v153)(v92, v158);
        Date.init()();
        uint64_t v35 = TimeZone.secondsFromGMT(for:)();
        sub_1000439B8();
        ((void (*)(void))v46)();
        if (__OFSUB__(v43, v35)) {
          goto LABEL_85;
        }
        sub_10002CAE0();
        Swift::String v15 = v91;
      }
      Date.addingTimeInterval(_:)();
      uint64_t v93 = *(void (**)(void))v38;
      sub_1000439B8();
      v93();
      sub_100076AD8((unint64_t *)&qword_10022D728, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v36 = v167;
      uint64_t v35 = dispatch thunk of static Comparable.< infix(_:_:)();
      sub_1000439B8();
      v93();
      sub_1000439B8();
      v93();
      if (v35)
      {
        sub_100076968(v169, v160, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
        uint64_t v35 = v172[0];
        char v94 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v36 = v165;
        if ((v94 & 1) == 0)
        {
          sub_100073244(0, *(void *)(v35 + 16) + 1, 1);
          uint64_t v35 = v172[0];
        }
        uint64_t v95 = v164;
        unint64_t v97 = *(void *)(v35 + 16);
        unint64_t v96 = *(void *)(v35 + 24);
        uint64_t v46 = v97 + 1;
        if (v97 >= v96 >> 1)
        {
          sub_100073244(v96 > 1, v97 + 1, 1);
          uint64_t v35 = v172[0];
        }
        *(void *)(v35 + 16) = v46;
        sub_100076968(v160, v35 + v95 + v97 * v36, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
        sub_10002CAE0();
      }
      else
      {
        sub_1000769C8(v169, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
      }
      ++v1;
      Swift::String v43 = (_UNKNOWN **)v168;
      if (v159 == v1) {
        goto LABEL_58;
      }
    }
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    swift_once();
  }
LABEL_58:
  swift_bridgeObjectRelease();
  uint64_t v98 = v143;
  sub_10006E5AC(v172[0], v143);
  swift_release();
  if (sub_10004FD40(v98, 1, (uint64_t)v43) == 1)
  {
    swift_bridgeObjectRelease();
    sub_10002CC68(v98, &qword_10022D720);
    uint64_t v99 = (__n128 *)sub_100041FD4();
    sub_100020F34(v99);
    v172[0] = (uint64_t)&type metadata for AppActivityManager;
    id v100 = (id)AMSLogKey();
    if (v100)
    {
      unsigned __int8 v101 = v100;
      uint64_t v102 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v104 = v103;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020E60();
      sub_100049788(v172, (uint64_t)v173);
      uint64_t v105 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v170 = v105;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v170, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&long long v170 = v102;
      *((void *)&v170 + 1) = v104;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v170, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100020E60();
      sub_100049788(v172, (uint64_t)v173);
      uint64_t v113 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v170 = v113;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v170, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v172);
    sub_10004A878();
    LogMessage.init(stringLiteral:)();
    uint64_t v114 = static os_log_type_t.default.getter();
    sub_10004841C(v114);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100076968(v98, (uint64_t)v144, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
    uint64_t v106 = (__n128 *)sub_100041FD4();
    sub_100020F34(v106);
    v172[0] = (uint64_t)&type metadata for AppActivityManager;
    id v107 = (id)AMSLogKey();
    if (v107)
    {
      uint64_t v108 = v107;
      uint64_t v109 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v111 = v110;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_10004C17C();
      sub_100020F04(v172);
      uint64_t v112 = swift_getMetatypeMetadata();
      sub_100047678(v112);
      sub_10002CC68((uint64_t)&v170, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&long long v170 = v109;
      *((void *)&v170 + 1) = v111;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v170, &qword_10022F490);
      sub_1000208D8();
      sub_100049F50();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_10004C17C();
      sub_100020F04(v172);
      uint64_t v115 = swift_getMetatypeMetadata();
      sub_100047678(v115);
      sub_10002CC68((uint64_t)&v170, &qword_10022F490);
      sub_100020E94();
      sub_100049F50();
    }
    sub_10004377C((uint64_t)v172);
    sub_10004A878();
    LogMessage.init(stringLiteral:)();
    uint64_t v116 = static os_log_type_t.default.getter();
    sub_10004841C(v116);
    swift_bridgeObjectRelease();
    uint64_t v117 = v42[2];
    if (v117)
    {
      sub_10004FCB4();
      uint64_t v119 = (char *)v42 + v118;
      char v120 = &v144[SHIDWORD(v168[2].Description)];
      uint64_t v121 = *(void *)v120;
      char v122 = (void *)*((void *)v120 + 1);
      uint64_t v124 = *(void *)(v123 + 72);
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v125 = (uint64_t *)&v119[SHIDWORD(v168[2].Description)];
        uint64_t v126 = *v125;
        char v127 = (void *)v125[1];
        BOOL v128 = *v125 == v121 && v127 == v122;
        if (!v128 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          sub_100167AE4(*v119, v126, v127);
          sub_1001ADE08();
          swift_bridgeObjectRelease();
        }
        v119 += v124;
        --v117;
      }
      while (v117);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v129 = (__n128 *)sub_100041FD4();
    sub_100020F34(v129);
    v172[0] = (uint64_t)&type metadata for AppActivityManager;
    id v130 = (id)AMSLogKey();
    if (v130)
    {
      long long v131 = v130;
      uint64_t v132 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v134 = v133;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_10004C17C();
      sub_100020F04(v172);
      uint64_t v135 = swift_getMetatypeMetadata();
      sub_100047678(v135);
      sub_10002CC68((uint64_t)&v170, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&long long v170 = v132;
      *((void *)&v170 + 1) = v134;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v170, &qword_10022F490);
      sub_1000208D8();
      sub_100049F50();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_10004C17C();
      sub_100020F04(v172);
      uint64_t v136 = swift_getMetatypeMetadata();
      sub_100047678(v136);
      sub_10002CC68((uint64_t)&v170, &qword_10022F490);
      sub_100020E94();
      sub_100049F50();
    }
    sub_10004377C((uint64_t)v172);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v137._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v137._object = (void *)0x80000001001CB050;
    LogMessage.StringInterpolation.appendLiteral(_:)(v137);
    v173 = v168;
    v138 = sub_10003BAA4(v172);
    v139 = v144;
    sub_1000768A4((uint64_t)v144, (uint64_t)v138, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)v172, &qword_10022F490);
    sub_100020E60();
    sub_100049F50();
    uint64_t v140 = static os_log_type_t.default.getter();
    sub_10004841C(v140);
    swift_bridgeObjectRelease();
    sub_100074A28(v139, v142 & 1);
    sub_1000769C8((uint64_t)v139, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
  }
  sub_10004377C((uint64_t)&v175);
  sub_100020998();
}

uint64_t sub_10007682C()
{
  sub_10004377C(v0 + 16);
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100076864()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007689C(uint64_t a1)
{
  return sub_100165118(a1, v1);
}

uint64_t sub_1000768A4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100043B1C();
  sub_100011DCC();
  v4();
  return a2;
}

uint64_t sub_100076900(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_1002344F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100076968(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100043B1C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1000769C8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100043B1C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100076A20()
{
  swift_bridgeObjectRelease();
  sub_10004377C(v0 + 32);
  sub_10004377C(v0 + 80);
  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_100076A68()
{
  return sub_10006F170();
}

uint64_t sub_100076A9C()
{
  return sub_10006F220(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(void **)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80));
}

uint64_t sub_100076AD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100076B20()
{
  unint64_t result = qword_10022D810;
  if (!qword_10022D810)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10022D810);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppActivityManager()
{
  return &type metadata for AppActivityManager;
}

uint64_t sub_100076B70()
{
  return v0 + 32;
}

uint64_t sub_100076BA0(uint64_t result)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((result - 32) / v3);
  return result;
}

uint64_t sub_100076BC8(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  sub_10004480C();
  uint64_t v20 = v6;
  uint64_t v21 = v7;
  uint64_t v8 = v1[3];
  uint64_t v9 = (void *)v1[4];
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = v8;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = sub_10004B30C();
  v11._object = (void *)(v12 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000);
  String.append(_:)(v11);
  sub_100047F4C();
  uint64_t v14 = v20;
  uint64_t v13 = v21;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  uint64_t v16 = v1[2];
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v4;
  void v17[3] = v15;
  v17[4] = a1;
  _OWORD v19[2] = v16;
  void v19[3] = v14;
  v19[4] = v13;
  v19[5] = _swiftEmptyArrayStorage;
  void v19[6] = sub_100078700;
  v19[7] = v17;
  swift_retain();
  sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)v19);
  if (v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v16 = *(void *)(v15 + 16);
  }
  swift_release();
  return v16;
}

uint64_t sub_100076D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_10004B78C();
  if (v4) {
    return v5;
  }
  if (v10) {
    return 1;
  }
  uint64_t v12 = v9;
  uint64_t v13 = sub_10004B78C();
  BOOL v5 = 1;
  if (v14) {
    return v5;
  }
  uint64_t v29 = v13;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  strcpy((char *)v28, "DELETE FROM ");
  BYTE5(v28[1]) = 0;
  HIWORD(v28[1]) = -5120;
  uint64_t v15 = *(void *)(a2 + 24);
  uint64_t v16 = *(void **)(a2 + 32);
  swift_bridgeObjectRetain();
  v17._uint64_t countAndFlagsBits = v15;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = 0x20455245485720;
  v18._object = (void *)0xE700000000000000;
  String.append(_:)(v18);
  v19._uint64_t countAndFlagsBits = 0x696669746E656469;
  v19._object = (void *)0xEA00000000007265;
  String.append(_:)(v19);
  v20._uint64_t countAndFlagsBits = 1059077408;
  v20._object = (void *)0xE400000000000000;
  String.append(_:)(v20);
  uint64_t v22 = v28[0];
  uint64_t v21 = (void *)v28[1];
  sub_100043478(&qword_10022D780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = v12;
  *(void *)(inited + 40) = 0;
  *(unsigned char *)(inited + 48) = 1;
  v24._uint64_t countAndFlagsBits = v22;
  v24._object = v21;
  SQLDatabase.execute(sql:parameters:)(v24, (Swift::OpaquePointer)inited);
  if (v25)
  {
    swift_setDeallocating();
    sub_1000500CC();
    swift_bridgeObjectRelease();
    return v5;
  }
  uint64_t v26 = (void *)(a3 + 16);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1000500CC();
  uint64_t result = swift_beginAccess();
  uint64_t v27 = *v26 + v29;
  if (!__OFADD__(*v26, v29))
  {
    *uint64_t v26 = v27;
    return v27 < a4;
  }
  __break(1u);
  return result;
}

uint64_t sub_100076F8C(void *a1)
{
  _StringGuts.grow(_:)(54);
  v3._uint64_t countAndFlagsBits = 0x4920545245534E49;
  v3._object = (void *)0xEC000000204F544ELL;
  String.append(_:)(v3);
  uint64_t v4 = *(void *)(v1 + 24);
  BOOL v5 = *(void **)(v1 + 32);
  swift_bridgeObjectRetain();
  v6._uint64_t countAndFlagsBits = v4;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 10272;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  v8._uint64_t countAndFlagsBits = 7368801;
  v8._object = (void *)0xE300000000000000;
  String.append(_:)(v8);
  sub_100045D68();
  sub_100049840();
  sub_100045D68();
  v9._uint64_t countAndFlagsBits = 1702521203;
  v9._object = (void *)0xE400000000000000;
  String.append(_:)(v9);
  sub_100045D68();
  sub_100047F4C();
  sub_100045D68();
  v10._uint64_t countAndFlagsBits = 1701869940;
  v10._object = (void *)0xE400000000000000;
  String.append(_:)(v10);
  v11._object = (void *)0x80000001001CB3B0;
  v11._uint64_t countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v11);
  sub_100043478(&qword_10022D780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3140;
  uint64_t v13 = a1[1];
  *(void *)(inited + 32) = *a1;
  *(void *)(inited + 40) = v13;
  *(unsigned char *)(inited + 48) = 3;
  uint64_t v15 = a1[2];
  unint64_t v14 = a1[3];
  *(void *)(inited + 56) = v15;
  *(void *)(inited + 64) = v14;
  *(unsigned char *)(inited + 72) = 0;
  swift_bridgeObjectRetain();
  sub_10004EA44(v15, v14);
  *(void *)(inited + 80) = sub_100077168();
  *(void *)(inited + 88) = 0;
  *(unsigned char *)(inited + 96) = 1;
  *(unsigned char *)(inited + 120) = 2;
  uint64_t v16 = a1[5];
  *(void *)(inited + 104) = a1[4];
  *(void *)(inited + 112) = 0;
  uint64_t v17 = a1[6];
  *(void *)(inited + 128) = v16;
  *(void *)(inited + 136) = v17;
  *(unsigned char *)(inited + 144) = 3;
  swift_bridgeObjectRetain();
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  SQLDatabase.execute(sql:parameters:)(v18, (Swift::OpaquePointer)inited);
  swift_setDeallocating();
  sub_1000500CC();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_100077168()
{
  unint64_t v1 = v0[1];
  if ((v1 & 0x1000000000000000) != 0)
  {
    Swift::Int v2 = String.UTF8View._foreignCount()();
  }
  else if ((v1 & 0x2000000000000000) != 0)
  {
    Swift::Int v2 = HIBYTE(v1) & 0xF;
  }
  else
  {
    Swift::Int v2 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v3 = Data.count.getter();
  Swift::Int v4 = v2 + v3;
  if (__OFADD__(v2, v3))
  {
    __break(1u);
    goto LABEL_17;
  }
  BOOL v5 = __OFADD__(v4, 8);
  Swift::Int v6 = v4 + 8;
  if (v5)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  BOOL v5 = __OFADD__(v6, 8);
  Swift::Int v7 = v6 + 8;
  if (v5)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  Swift::Int v2 = v7 + 8;
  if (__OFADD__(v7, 8))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v8 = v0[6];
  if ((v8 & 0x1000000000000000) == 0)
  {
    if ((v8 & 0x2000000000000000) != 0) {
      uint64_t v9 = HIBYTE(v8) & 0xF;
    }
    else {
      uint64_t v9 = v0[5] & 0xFFFFFFFFFFFFLL;
    }
    goto LABEL_13;
  }
LABEL_20:
  uint64_t v9 = String.UTF8View._foreignCount()();
LABEL_13:
  BOOL v5 = __OFADD__(v2, v9);
  Swift::Int result = v2 + v9;
  if (v5) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10007720C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  sub_10004480C();
  uint64_t v35 = v11;
  uint64_t v36 = v12;
  uint64_t v13 = v5[3];
  unint64_t v14 = (void *)v5[4];
  swift_bridgeObjectRetain();
  v15._uint64_t countAndFlagsBits = v13;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  uint64_t v31 = v35;
  uint64_t v32 = v36;
  sub_1000783C4(a1, (uint64_t)v33);
  if (v34 == 255)
  {
    Swift::String v18 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_100078484(v33, (uint64_t)&v35);
    uint64_t v29 = 0x20455245485720;
    unint64_t v30 = 0xE700000000000000;
    sub_10007861C(a1, (void (*)(void, void, void, void, void))sub_10007849C);
    v16._uint64_t countAndFlagsBits = sub_1000774A0();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    v17._uint64_t countAndFlagsBits = 0x20455245485720;
    v17._object = (void *)0xE700000000000000;
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    Swift::String v18 = sub_1000777CC();
    sub_10007861C(a1, (void (*)(void, void, void, void, void))sub_10007855C);
  }
  v19._uint64_t countAndFlagsBits = sub_10004B30C();
  v19._object = (void *)(v20 | 0xEE00656D69740000);
  String.append(_:)(v19);
  if ((a3 & 1) == 0)
  {
    uint64_t v29 = 0x2054494D494C20;
    unint64_t v30 = 0xE700000000000000;
    uint64_t v37 = a2;
    v21._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    v22._uint64_t countAndFlagsBits = 0x2054494D494C20;
    v22._object = (void *)0xE700000000000000;
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = v5[2];
  uint64_t v25 = v31;
  uint64_t v24 = v32;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a4;
  *(void *)(v26 + 24) = a5;
  void v28[2] = v23;
  void v28[3] = v25;
  void v28[4] = v24;
  void v28[5] = v18;
  v28[6] = sub_100078464;
  v28[7] = __chkstk_darwin(v26);
  swift_retain();
  sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1000774A0()
{
  uint64_t v1 = (uint64_t)v0;
  sub_100078484(v0, (uint64_t)&v18);
  uint64_t v2 = 0x3F203D3D20707061;
  switch(v20)
  {
    case 1:
      return v2;
    case 2:
      uint64_t v21 = v18;
      uint64_t v22 = v19;
      sub_10007861C(v1, (void (*)(void, void, void, void, void))sub_1000784B0);
      uint64_t v10 = 1059077664;
      goto LABEL_11;
    case 3:
      uint64_t v21 = v18;
      uint64_t v22 = v19;
      sub_10007861C(v1, (void (*)(void, void, void, void, void))sub_1000784B0);
      uint64_t v10 = 1059077152;
LABEL_11:
      unint64_t v11 = 0xE400000000000000;
      goto LABEL_13;
    case 4:
      uint64_t v21 = v18;
      uint64_t v22 = v19;
      swift_bridgeObjectRetain();
      uint64_t v10 = 0x3F20454B494C20;
      unint64_t v11 = 0xE700000000000000;
LABEL_13:
      String.append(_:)(*(Swift::String *)&v10);
      return v21;
    case 5:
      uint64_t v12 = *(void *)(v18 + 16);
      if (*(void *)(v12 + 16))
      {
        sub_100048B68();
        sub_100045708();
        do
        {
          sub_100078484((long long *)v12, (uint64_t)&v21);
          uint64_t v13 = sub_10007861C((uint64_t)&v21, (void (*)(void, void, void, void, void))sub_1000784B0);
          v14._uint64_t countAndFlagsBits = sub_1000774A0(v13);
          String.append(_:)(v14);
          swift_bridgeObjectRelease();
          v15._uint64_t countAndFlagsBits = 41;
          v15._object = (void *)0xE100000000000000;
          String.append(_:)(v15);
          sub_10007861C((uint64_t)&v21, (void (*)(void, void, void, void, void))sub_100078570);
          sub_10004AA90();
          if (v8) {
            sub_100046140(v16);
          }
          sub_10004DC00();
        }
        while (!v9);
      }
      goto LABEL_20;
    default:
      uint64_t v3 = *(void *)(v18 + 16);
      if (*(void *)(v3 + 16))
      {
        sub_100048B68();
        sub_100045708();
        do
        {
          sub_100078484((long long *)v3, (uint64_t)&v21);
          uint64_t v4 = sub_10007861C((uint64_t)&v21, (void (*)(void, void, void, void, void))sub_1000784B0);
          v5._uint64_t countAndFlagsBits = sub_1000774A0(v4);
          String.append(_:)(v5);
          swift_bridgeObjectRelease();
          v6._uint64_t countAndFlagsBits = 41;
          v6._object = (void *)0xE100000000000000;
          String.append(_:)(v6);
          sub_10007861C((uint64_t)&v21, (void (*)(void, void, void, void, void))sub_100078570);
          sub_10004AA90();
          if (v8) {
            sub_100046140(v7);
          }
          sub_10004DC00();
        }
        while (!v9);
      }
LABEL_20:
      sub_100043478(&qword_100232940);
      sub_10007865C();
      uint64_t v2 = BidirectionalCollection<>.joined(separator:)();
      swift_bridgeObjectRelease();
      return v2;
  }
}

void *sub_1000777CC()
{
  sub_100078484(v0, (uint64_t)v43);
  sub_100078484(v0, (uint64_t)v44);
  switch(v47)
  {
    case 1:
      uint64_t v24 = v44[0];
      uint64_t v25 = v44[1];
      sub_100043478(&qword_10022D780);
      uint64_t v5 = swift_allocObject();
      uint64_t v2 = (void *)v5;
      *(_OWORD *)(v5 + 16) = xmmword_1001C3110;
      *(void *)(v5 + 32) = v24;
      *(void *)(v5 + 40) = v25;
      goto LABEL_24;
    case 2:
    case 3:
      uint64_t v1 = v45;
      sub_100043478(&qword_10022D780);
      uint64_t v2 = (void *)swift_allocObject();
      *((_OWORD *)v2 + 1) = xmmword_1001C3110;
      v2[4] = v1;
      v2[5] = 0;
      *((unsigned char *)v2 + 48) = 2;
      return v2;
    case 4:
      uint64_t v4 = v45;
      uint64_t v3 = v46;
      sub_100043478(&qword_10022D780);
      uint64_t v5 = swift_allocObject();
      uint64_t v2 = (void *)v5;
      *(_OWORD *)(v5 + 16) = xmmword_1001C3110;
      *(void *)(v5 + 32) = v4;
      *(void *)(v5 + 40) = v3;
LABEL_24:
      *(unsigned char *)(v5 + 48) = 3;
      swift_bridgeObjectRetain();
      return v2;
    case 5:
      uint64_t v26 = *(void *)(v44[0] + 16);
      uint64_t v27 = *(void *)(v26 + 16);
      if (!v27) {
        return _swiftEmptyArrayStorage;
      }
      uint64_t v28 = (long long *)(v26 + 32);
      swift_bridgeObjectRetain();
      uint64_t v2 = _swiftEmptyArrayStorage;
      while (1)
      {
        sub_100078484(v28, (uint64_t)v48);
        uint64_t v29 = sub_10007861C((uint64_t)v48, (void (*)(void, void, void, void, void))sub_1000784B0);
        uint64_t v30 = sub_1000777CC(v29);
        uint64_t v31 = *(void *)(v30 + 16);
        uint64_t v32 = v2[2];
        if (__OFADD__(v32, v31)) {
          goto LABEL_47;
        }
        uint64_t v33 = v30;
        swift_bridgeObjectRetain();
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (!isUniquelyReferenced_nonNull_native || v32 + v31 > v2[3] >> 1)
        {
          sub_10004CD90(isUniquelyReferenced_nonNull_native);
          uint64_t v2 = v35;
        }
        if (*(void *)(v33 + 16))
        {
          sub_100020F78();
          if (v17 != v18) {
            goto LABEL_51;
          }
          unint64_t v37 = sub_1000492D0(v36);
          if (!v21 && v37 < v38) {
            goto LABEL_54;
          }
          swift_arrayInitWithCopy();
          if (v31)
          {
            uint64_t v40 = v2[2];
            BOOL v18 = __OFADD__(v40, v31);
            uint64_t v41 = v40 + v31;
            if (v18) {
              goto LABEL_53;
            }
            v2[2] = v41;
          }
        }
        else if (v31)
        {
          goto LABEL_49;
        }
        swift_bridgeObjectRelease();
        sub_10007861C((uint64_t)v48, (void (*)(void, void, void, void, void))sub_100078570);
        swift_bridgeObjectRelease();
        uint64_t v28 = (long long *)((char *)v28 + 40);
        if (!--v27) {
          goto LABEL_43;
        }
      }
    default:
      uint64_t v6 = *(void *)(v44[0] + 16);
      uint64_t v7 = *(void *)(v6 + 16);
      if (!v7) {
        return _swiftEmptyArrayStorage;
      }
      char v8 = (long long *)(v6 + 32);
      swift_bridgeObjectRetain();
      uint64_t v2 = _swiftEmptyArrayStorage;
      do
      {
        sub_100078484(v8, (uint64_t)v48);
        uint64_t v9 = sub_10007861C((uint64_t)v48, (void (*)(void, void, void, void, void))sub_1000784B0);
        uint64_t v10 = sub_1000777CC(v9);
        uint64_t v11 = *(void *)(v10 + 16);
        uint64_t v12 = v2[2];
        if (__OFADD__(v12, v11))
        {
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          JUMPOUT(0x100077BC4);
        }
        uint64_t v13 = v10;
        swift_bridgeObjectRetain();
        uint64_t v14 = swift_isUniquelyReferenced_nonNull_native();
        if (!v14 || v12 + v11 > v2[3] >> 1)
        {
          sub_10004CD90(v14);
          uint64_t v2 = v15;
        }
        if (*(void *)(v13 + 16))
        {
          sub_100020F78();
          if (v17 != v18) {
            goto LABEL_50;
          }
          unint64_t v19 = sub_1000492D0(v16);
          BOOL v21 = v21 || v19 >= v20;
          if (!v21) {
            goto LABEL_54;
          }
          swift_arrayInitWithCopy();
          if (v11)
          {
            uint64_t v22 = v2[2];
            BOOL v18 = __OFADD__(v22, v11);
            uint64_t v23 = v22 + v11;
            if (v18) {
              goto LABEL_52;
            }
            v2[2] = v23;
          }
        }
        else if (v11)
        {
          goto LABEL_48;
        }
        swift_bridgeObjectRelease();
        sub_10007861C((uint64_t)v48, (void (*)(void, void, void, void, void))sub_100078570);
        swift_bridgeObjectRelease();
        char v8 = (long long *)((char *)v8 + 40);
        --v7;
      }
      while (v7);
LABEL_43:
      swift_bridgeObjectRelease();
      return v2;
  }
}

uint64_t sub_100077BDC(char a1, uint64_t (*a2)(void *))
{
  uint64_t v5 = sub_10003F9D0();
  if (!v2)
  {
    uint64_t v7 = v6;
    if (v6)
    {
      uint64_t v8 = v5;
      sub_10004B6C0(&v17);
      unint64_t v10 = *((void *)&v17 + 1);
      if (*((void *)&v17 + 1) >> 60 != 15)
      {
        uint64_t v11 = v17;
        uint64_t v12 = sub_10003F764();
        if ((v13 & 1) == 0)
        {
          uint64_t v14 = v12;
          uint64_t v15 = sub_10003F9D0();
          if (v16)
          {
            v18[0] = v8;
            v18[1] = v7;
            void v18[2] = v11;
            void v18[3] = v10;
            v18[4] = v14;
            v18[5] = v15;
            v18[6] = v16;
            sub_10004EA44(v11, v10);
            a1 = a2(v18);
            swift_bridgeObjectRelease();
            sub_10004B278(v11, v10);
            swift_bridgeObjectRelease();
            sub_10004B6AC(v11, v10);
            return a1 & 1;
          }
        }
        sub_10004B6AC(v11, v10);
      }
      swift_bridgeObjectRelease();
    }
    a1 = 1;
  }
  return a1 & 1;
}

uint64_t sub_100077D80()
{
  sub_100087F8C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AppBacklogTable()
{
  return self;
}

uint64_t sub_100077DD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = 7368801;
  unint64_t v23 = 0xE300000000000000;
  AnyHashable.init<A>(_:)();
  sub_100044EA4();
  sub_1000434BC((uint64_t)v24);
  if (v26)
  {
    if (sub_10004854C())
    {
      unint64_t v6 = v23;
      uint64_t v21 = v22;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1000423CC((uint64_t)v25);
  }
  uint64_t v21 = 0;
  unint64_t v6 = 0xE000000000000000;
LABEL_6:
  uint64_t v7 = self;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v24[0] = 0;
  id v9 = [v7 dataWithJSONObject:isa options:0 error:v24];

  id v10 = v24[0];
  if (!v9)
  {
    uint64_t v14 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    return swift_willThrow();
  }
  uint64_t v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = 0x6D6954746E657665;
  unint64_t v23 = 0xE900000000000065;
  AnyHashable.init<A>(_:)();
  sub_100044EA4();
  sub_1000434BC((uint64_t)v24);
  if (v26)
  {
    if (sub_10004854C())
    {
      uint64_t v13 = v22;
      goto LABEL_13;
    }
  }
  else
  {
    sub_1000423CC((uint64_t)v25);
  }
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v13 = v16;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_13:
  uint64_t v22 = 0x707954746E657665;
  unint64_t v23 = 0xE900000000000065;
  AnyHashable.init<A>(_:)();
  sub_100044EA4();
  swift_bridgeObjectRelease();
  sub_1000434BC((uint64_t)v24);
  if (!v26)
  {
    uint64_t result = sub_1000423CC((uint64_t)v25);
    goto LABEL_17;
  }
  uint64_t result = sub_10004854C();
  if (!result)
  {
LABEL_17:
    uint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    goto LABEL_18;
  }
  uint64_t v17 = v22;
  unint64_t v18 = v23;
LABEL_18:
  *a1 = v21;
  a1[1] = v6;
  a1[2] = v20;
  a1[3] = v12;
  a1[4] = v13;
  a1[5] = v17;
  a1[6] = v18;
  return result;
}

uint64_t sub_100078138()
{
  sub_100046584();
  _StringGuts.grow(_:)(80);
  v2._uint64_t countAndFlagsBits = 0x5420455441455243;
  v2._object = (void *)0xED000020454C4241;
  String.append(_:)(v2);
  v3._uint64_t countAndFlagsBits = v1;
  v3._object = v0;
  String.append(_:)(v3);
  v4._uint64_t countAndFlagsBits = 10272;
  v4._object = (void *)0xE200000000000000;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = 7368801;
  v5._object = (void *)0xE300000000000000;
  String.append(_:)(v5);
  v6._uint64_t countAndFlagsBits = sub_100047130() & 0xFFFFFFFFFFFFLL | 0x2C47000000000000;
  v6._object = (void *)0xE900000000000020;
  String.append(_:)(v6);
  sub_100049840();
  v7._uint64_t countAndFlagsBits = 0x202C424F4C4220;
  v7._object = (void *)0xE700000000000000;
  String.append(_:)(v7);
  sub_100047F4C();
  v8._uint64_t countAndFlagsBits = 0x202C4C41455220;
  v8._object = (void *)0xE700000000000000;
  String.append(_:)(v8);
  v9._uint64_t countAndFlagsBits = 0x696669746E656469;
  v9._object = (void *)0xEA00000000007265;
  String.append(_:)(v9);
  v10._object = (void *)0x80000001001CB390;
  v10._uint64_t countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v10);
  v11._uint64_t countAndFlagsBits = 1701869940;
  v11._object = (void *)0xE400000000000000;
  String.append(_:)(v11);
  v12._uint64_t countAndFlagsBits = sub_100047130() & 0xFFFFFFFFFFFFLL | 0x2947000000000000;
  v12._object = (void *)0xE800000000000000;
  String.append(_:)(v12);
  SQLDatabase.execute(sql:parameters:)(v14, (Swift::OpaquePointer)&_swiftEmptyArrayStorage);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000782CC()
{
  sub_100046584();
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  strcpy((char *)&v7, "ALTER TABLE ");
  BYTE5(v7._object) = 0;
  HIWORD(v7._object) = -5120;
  v2._uint64_t countAndFlagsBits = v1;
  v2._object = v0;
  String.append(_:)(v2);
  v3._uint64_t countAndFlagsBits = 0x4C4F432044444120;
  v3._object = (void *)0xEC000000204E4D55;
  String.append(_:)(v3);
  v4._uint64_t countAndFlagsBits = 1702521203;
  v4._object = (void *)0xE400000000000000;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = 0x52454745544E4920;
  v5._object = (void *)0xE800000000000000;
  String.append(_:)(v5);
  SQLDatabase.execute(sql:parameters:)(v7, (Swift::OpaquePointer)&_swiftEmptyArrayStorage);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000783C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022D980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007842C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100078464(char a1)
{
  return sub_100077BDC(a1, *(uint64_t (**)(void *))(v1 + 16)) & 1;
}

uint64_t sub_100078484(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_10007849C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1) {
    return sub_1000784B0(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t sub_1000784B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 5:
      uint64_t result = swift_retain();
      break;
    case 1:
    case 2:
    case 3:
      goto LABEL_4;
    case 4:
      swift_bridgeObjectRetain();
LABEL_4:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10007855C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1) {
    return sub_100078570(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t sub_100078570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 5:
      uint64_t result = swift_release();
      break;
    case 1:
    case 2:
    case 3:
      goto LABEL_4;
    case 4:
      swift_bridgeObjectRelease();
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10007861C(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

unint64_t sub_10007865C()
{
  unint64_t result = qword_10022D988;
  if (!qword_10022D988)
  {
    sub_10006026C(&qword_100232940);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D988);
  }
  return result;
}

uint64_t sub_1000786B0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000786C0()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100078700(uint64_t a1)
{
  return sub_100076D64(a1, v1[2], v1[3], v1[4]) & 1;
}

uint64_t destroy for AppBacklogPredicate(uint64_t a1)
{
  return sub_100078570(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for AppBacklogPredicate(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1000784B0(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for AppBacklogPredicate(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1000784B0(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_100078570(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for AppBacklogPredicate(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_100078570(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppBacklogPredicate(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFB && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 250;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 5) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppBacklogPredicate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 251;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000788E4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1000788EC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AppBacklogPredicate()
{
  return &type metadata for AppBacklogPredicate;
}

uint64_t assignWithCopy for AppConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

void *initializeWithTake for AppConfiguration(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t assignWithTake for AppConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppConfiguration(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AppConfiguration()
{
}

unsigned char *sub_100078AE8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100078BB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for RequestType()
{
}

uint64_t getEnumTagSinglePayload for AppDefaults.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_100078C70(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100078D3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for App()
{
}

uint64_t sub_100078D70()
{
  return sub_10002B6DC(&qword_10022D9A0, &qword_10022D9A8);
}

uint64_t sub_100078DAC(char a1)
{
  uint64_t result = 0x636974796C616E61;
  switch(a1)
  {
    case 1:
      uint64_t result = sub_100046178();
      break;
    case 2:
      uint64_t result = sub_100046164();
      break;
    case 3:
      uint64_t result = 0x6E656D6D6F636572;
      break;
    default:
      return result;
  }
  return result;
}

_UNKNOWN **sub_100078E48()
{
  return &off_10020BD48;
}

uint64_t sub_100078E64(unsigned __int8 *a1, char *a2)
{
  return sub_1000377C8(*a1, *a2);
}

Swift::Int sub_100078E70()
{
  return sub_100059F0C(*v0);
}

uint64_t sub_100078E78()
{
  return sub_10005A4B0();
}

Swift::Int sub_100078E80(uint64_t a1)
{
  return sub_10005B0C4(a1, *v1);
}

unint64_t sub_100078E88@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10003227C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100078EB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100078DAC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_100078EE4(void *a1@<X8>)
{
  *a1 = &off_10020BD48;
}

unint64_t sub_100078EF8()
{
  unint64_t result = qword_10022D9B0;
  if (!qword_10022D9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D9B0);
  }
  return result;
}

unint64_t sub_100078F44(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020BE20, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t sub_100078F90(char a1)
{
  if (!a1) {
    return 0x65756575716E65;
  }
  if (a1 == 1) {
    return 0x696577746867696CLL;
  }
  return 1668184435;
}

uint64_t sub_100078FEC(unsigned __int8 *a1, char *a2)
{
  return sub_10007DC4C(*a1, *a2);
}

Swift::Int sub_100078FF8()
{
  return sub_100059F24();
}

uint64_t sub_100079000(uint64_t a1)
{
  return sub_10005AA60(a1, *v1);
}

Swift::Int sub_100079008()
{
  return sub_10005AD68();
}

unint64_t sub_100079010@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100078F44(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100079040@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100078F90(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100079070()
{
  unint64_t result = qword_10022D9B8;
  if (!qword_10022D9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D9B8);
  }
  return result;
}

NSString sub_1000790CC()
{
  switch(*(unsigned char *)(v0 + 1))
  {
    case 1:
      NSString result = sub_100048568();
      break;
    case 2:
    case 3:
      NSString result = String._bridgeToObjectiveC()();
      break;
    default:
      NSString result = sub_100048B8C();
      break;
  }
  return result;
}

NSString sub_10007917C()
{
  switch(*(unsigned char *)(v0 + 1))
  {
    case 1:
    case 3:
      NSString result = String._bridgeToObjectiveC()();
      break;
    case 2:
      NSString result = sub_100048568();
      break;
    default:
      NSString result = sub_100048B8C();
      break;
  }
  return result;
}

id sub_100079224()
{
  sub_10006E0A4();
  id result = sub_100051DF8();
  qword_10022D990 = (uint64_t)result;
  return result;
}

id sub_100079280()
{
  if (qword_10022C3D0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_100244070;
  qword_10022D998 = qword_100244070;
  return v0;
}

uint64_t sub_1000792E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100043478(&qword_1002344F0);
  __chkstk_darwin(v5 - 8);
  sub_100047480();
  type metadata accessor for Defaults();
  if (sub_1000A38A0(5) && (sub_100043478(&qword_10022D9C0), swift_dynamicCast()))
  {
    uint64_t v6 = v12;
  }
  else
  {
    type metadata accessor for Date();
    uint64_t v6 = Dictionary.init(dictionaryLiteral:)();
  }
  uint64_t v7 = *(unsigned __int8 *)(v3 + 1);
  uint64_t v8 = 0xE900000000000073;
  uint64_t v9 = 0x636974796C616E61;
  switch(v7)
  {
    case 1:
      uint64_t v8 = 0xE800000000000000;
      uint64_t v9 = sub_100046178();
      break;
    case 2:
      uint64_t v8 = 0xE800000000000000;
      uint64_t v9 = sub_100046164();
      break;
    case 3:
      uint64_t v9 = sub_100044EC0();
      break;
    default:
      break;
  }
  sub_100088950(v9, v8, v6, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for Date();
  if (sub_10004FD40(v2, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a1, v2, v10);
  }
  static Date.distantPast.getter();
  return sub_10006DF98(v2);
}

void *sub_1000794C4(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
    for (uint64_t i = 4; ; ++i)
    {
      id v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * i);
      uint64_t v7 = v6;
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      unsigned int v9 = [v6 processIdentifier];
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = a2;
      *(_DWORD *)(v10 + 24) = v9;
      uint64_t v24 = sub_10007A704;
      uint64_t v25 = v10;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      uint64_t v22 = sub_100181204;
      unint64_t v23 = &unk_10020E120;
      uint64_t v11 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      id v12 = [v7 remoteObjectProxyWithErrorHandler:v11];
      _Block_release(v11);
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_100043510(&v26, &aBlock);
      sub_100043478(&qword_10022DBA8);
      if (swift_dynamicCast())
      {

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100070788(0, v4[2] + 1, 1, (uint64_t)v4);
          uint64_t v4 = v16;
        }
        unint64_t v14 = v4[2];
        unint64_t v13 = v4[3];
        if (v14 >= v13 >> 1)
        {
          sub_100070788(v13 > 1, v14 + 1, 1, (uint64_t)v4);
          uint64_t v4 = v17;
        }
        void v4[2] = v14 + 1;
        uint64_t v15 = &v4[2 * v14];
        *((_DWORD *)v15 + 8) = v9;
        v15[5] = v20;
      }
      else
      {
      }
      if (v8 == v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return v4;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000797A0()
{
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = (char *)sub_10008894C(v1);
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v3 = *(void **)&v2[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_connectionsLock];
    uint64_t v4 = v2;
    [v3 lock];
    uint64_t v5 = (unint64_t *)&v4[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_connections];
    swift_beginAccess();
    unint64_t v6 = *v5;
    swift_bridgeObjectRetain();
    [v3 unlock];

    swift_retain();
    uint64_t v7 = sub_1000794C4(v6, v0);
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_100079BEC((uint64_t)v7);

    return (uint64_t)v8;
  }
  else
  {
    sub_100043478(&qword_10022DBA8);
    return Dictionary.init(dictionaryLiteral:)();
  }
}

uint64_t sub_1000798E4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  unint64_t v23 = (void *)type metadata accessor for AppConnection();
  v22[0] = a2;
  swift_retain();
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._uint64_t countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    sub_100049788(v22, (uint64_t)v23);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v20);
    v13._uint64_t countAndFlagsBits = 5972026;
    v13._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    uint64_t MetatypeMetadata = &type metadata for String;
    v20[0] = v8;
    v20[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v20);
    v14._uint64_t countAndFlagsBits = 93;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    sub_100049788(v22, (uint64_t)v23);
    uint64_t v16 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v20);
    v17._uint64_t countAndFlagsBits = 58;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v22);
  LogMessage.init(stringLiteral:)();
  unint64_t v23 = &type metadata for Int32;
  LODWORD(v22[0]) = a3;
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)v22);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v18 = static os_log_type_t.default.getter();
  sub_10004841C(v18);
  return swift_bridgeObjectRelease();
}

void *sub_100079BEC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100043478(&qword_10022DBB0);
    uint64_t v1 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v1 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = v1;
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_100079EF4(v2, 1, &v4);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100079C98()
{
  type metadata accessor for AppConnection();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_100079CD4();
  qword_100244080 = v0;
  return result;
}

uint64_t sub_100079CD4()
{
  *(void *)(v0 + 16) = [objc_allocWithZone((Class)type metadata accessor for ServerDataCacheService()) init];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (qword_10022C430 != -1) {
    swift_once();
  }
  sub_10007A1AC(qword_100244090);
  swift_isUniquelyReferenced_nonNull_native();
  sub_10008C218();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v1 = [objc_allocWithZone((Class)type metadata accessor for UniversalLinksService()) init];
  sub_10007A454((uint64_t)v1);

  swift_isUniquelyReferenced_nonNull_native();
  sub_100044850();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v2 = *(id *)(v0 + 16);
  sub_10007A558((uint64_t)v2);

  swift_isUniquelyReferenced_nonNull_native();
  sub_100044850();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 24) = &_swiftEmptyDictionarySingleton;
  return v0;
}

uint64_t sub_100079E74()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100079E9C()
{
  sub_100079E74();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AppConnection()
{
  return self;
}

uint64_t sub_100079EF4(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return swift_bridgeObjectRelease();
  }
  for (uint64_t i = (void *)(swift_bridgeObjectRetain() + 40); ; i += 2)
  {
    int v7 = *((_DWORD *)i - 2);
    uint64_t v8 = *i;
    uint64_t v9 = (void *)*a3;
    unint64_t v10 = sub_100088F34(v7);
    uint64_t v12 = v9[2];
    BOOL v13 = (v11 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      goto LABEL_20;
    }
    unint64_t v15 = v10;
    char v16 = v11;
    uint64_t v17 = v9[3];
    swift_unknownObjectRetain();
    if (v17 < v14) {
      break;
    }
    if (a2)
    {
      if (v16) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_100043478(&qword_10022DBB8);
      _NativeDictionary.copy()();
      if (v16) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(_DWORD *)(v20[6] + 4 * v15) = v7;
    *(void *)(v20[7] + 8 * v15) = v8;
    uint64_t v21 = v20[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_18;
    }
    v20[2] = v23;
    a2 = 1;
    if (!--v3) {
      return swift_bridgeObjectRelease_n();
    }
  }
  sub_1001A57CC();
  unint64_t v18 = sub_100088F34(v7);
  if ((v16 & 1) != (v19 & 1)) {
    goto LABEL_19;
  }
  unint64_t v15 = v18;
  if ((v16 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  swift_allocError();
  swift_willThrow();
  swift_errorRetain();
  sub_100043478((uint64_t *)&unk_100233150);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    return swift_errorRelease();
  }
LABEL_20:
  _StringGuts.grow(_:)(30);
  v25._object = (void *)0x80000001001CB500;
  v25._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v25);
  _print_unlocked<A, B>(_:_:)();
  v26._uint64_t countAndFlagsBits = 39;
  v26._object = (void *)0xE100000000000000;
  String.append(_:)(v26);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10007A1AC(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v2 = objc_allocWithZone((Class)type metadata accessor for XPCServiceProvider());
  uint64_t v3 = sub_1001B0B2C();
  uint64_t v4 = self;
  id v5 = [v4 interfaceWithProtocol:&OBJC_PROTOCOL___AMSEngagementServiceProtocol];
  id v15 = [v4 interfaceWithProtocol:&OBJC_PROTOCOL___AMSTreatmentStoreServiceProtocol];
  [v5 setInterface:v15 forSelector:"treatmentStoreServiceWithReply:" argumentIndex:0 ofReply:1];
  id v6 = [self archiveClasses];
  static Set._unconditionallyBridgeFromObjectiveC(_:)();

  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 setClasses:isa forSelector:"enqueueWithRequest:completion:" argumentIndex:0 ofReply:0];

  id v8 = [self archiveClasses];
  static Set._unconditionallyBridgeFromObjectiveC(_:)();

  Class v9 = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 setClasses:v9 forSelector:"syncWithRequest:completion:" argumentIndex:0 ofReply:0];

  id v10 = v5;
  sub_1001B0B14((uint64_t)v5);
  void v16[3] = swift_getObjectType();
  v16[0] = a1;
  uint64_t v11 = (uint64_t)&v3[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_exportedObject];
  swift_beginAccess();
  swift_unknownObjectRetain();
  sub_100042698((uint64_t)v16, v11);
  swift_endAccess();
  id v12 = [v4 interfaceWithProtocol:&OBJC_PROTOCOL___AMSEngagementClientProtocol];
  id v13 = v12;
  sub_1001B0B20((uint64_t)v12);

  return v3;
}

char *sub_10007A454(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v2 = objc_allocWithZone((Class)type metadata accessor for XPCServiceProvider());
  uint64_t v3 = sub_1001B0B2C();
  id v4 = [self interfaceWithProtocol:&OBJC_PROTOCOL___AMSUniversalLinksServiceProtocol];
  id v5 = v4;
  sub_1001B0B14((uint64_t)v4);
  void v8[3] = swift_getObjectType();
  v8[0] = a1;
  uint64_t v6 = (uint64_t)&v3[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_exportedObject];
  swift_beginAccess();
  swift_unknownObjectRetain();
  sub_100042698((uint64_t)v8, v6);
  swift_endAccess();

  return v3;
}

char *sub_10007A558(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v2 = objc_allocWithZone((Class)type metadata accessor for XPCServiceProvider());
  uint64_t v3 = sub_1001B0B2C();
  id v4 = [self interfaceWithProtocol:&OBJC_PROTOCOL___AMSServerDataCacheServiceProtocol];
  sub_10007A68C();
  [v4 setClass:swift_getObjCClassFromMetadata() forSelector:"setUpCacheForAccount:completion:" argumentIndex:0 ofReply:0];
  id v5 = v4;
  sub_1001B0B14((uint64_t)v4);
  void v8[3] = swift_getObjectType();
  v8[0] = a1;
  uint64_t v6 = (uint64_t)&v3[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_exportedObject];
  swift_beginAccess();
  swift_unknownObjectRetain();
  sub_100042698((uint64_t)v8, v6);
  swift_endAccess();

  return v3;
}

unint64_t sub_10007A68C()
{
  unint64_t result = qword_10022D3D8;
  if (!qword_10022D3D8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10022D3D8);
  }
  return result;
}

uint64_t sub_10007A6CC()
{
  swift_release();
  return _swift_deallocObject(v0, 28, 7);
}

uint64_t sub_10007A704(uint64_t a1)
{
  return sub_1000798E4(a1, *(void *)(v1 + 16), *(_DWORD *)(v1 + 24));
}

uint64_t sub_10007A710(uint64_t a1, uint64_t a2)
{
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  sub_100041FFC();
  uint64_t v17 = v5;
  uint64_t v18 = v6;
  uint64_t v7 = v2[3];
  id v8 = (void *)v2[4];
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 59;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  uint64_t v12 = v17;
  uint64_t v11 = v18;
  uint64_t v13 = v2[2];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  _OWORD v16[2] = v13;
  void v16[3] = v12;
  void v16[4] = v11;
  void v16[5] = _swiftEmptyArrayStorage;
  v16[6] = sub_10007CD88;
  v16[7] = v14;
  swift_retain();
  sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)v16);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_10007A84C(uint64_t a1, void (*a2)(void *))
{
  uint64_t v4 = type metadata accessor for ContentInfo();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (void *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004B6C0(&v10);
  if (!v2)
  {
    unint64_t v7 = *((void *)&v10 + 1);
    if (*((void *)&v10 + 1) >> 60 != 15)
    {
      uint64_t v8 = v10;
      sub_10004B7AC(6, &v10);
      if (v11)
      {
        sub_100043478(&qword_10022D7B0);
        if (swift_dynamicCast())
        {
          sub_100090EA0(v12, v6);
          a2(v6);
          sub_10007CDA8((uint64_t)v6);
          sub_10004B6AC(v8, v7);
          return 1;
        }
        sub_10004B6AC(v8, v7);
      }
      else
      {
        sub_10004B6AC(v8, v7);
        sub_1000423CC((uint64_t)&v10);
      }
    }
    sub_10007CB58();
    swift_allocError();
    swift_willThrow();
  }
  return 1;
}

uint64_t sub_10007A9FC(uint64_t a1, uint64_t a2)
{
  _StringGuts.grow(_:)(72);
  v5._uint64_t countAndFlagsBits = 0x205443454C4553;
  v5._object = (void *)0xE700000000000000;
  String.append(_:)(v5);
  sub_100049864();
  v6._uint64_t countAndFlagsBits = 0x204D4F524620;
  v6._object = (void *)0xE600000000000000;
  String.append(_:)(v6);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void **)(v2 + 32);
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  sub_1000465EC();
  sub_1000492F0();
  sub_100047F80();
  sub_1000492F0();
  sub_100047F80();
  sub_1000492F0();
  sub_100047F80();
  sub_1000492F0();
  v10._uint64_t countAndFlagsBits = 0x3F20454B494C20;
  v10._object = (void *)0xE700000000000000;
  String.append(_:)(v10);
  sub_10004A4AC(v11, v12, v13, v14, v15, v16, v17, v18, v37, 0xE000000000000000, 0, v2, 0, 0xE000000000000000);
  uint64_t v19 = v44;
  uint64_t v20 = v46;
  swift_bridgeObjectRetain();
  v21._uint64_t countAndFlagsBits = 9516;
  v21._object = (void *)0xE200000000000000;
  String.append(_:)(v21);
  sub_10004A4AC(v22, v23, v24, v25, v26, v27, v28, v29, v38, v39, v41, v43, a1, a2);
  v30._uint64_t countAndFlagsBits = 9516;
  v30._object = (void *)0xE200000000000000;
  String.append(_:)(v30);
  sub_100043478(&qword_10022D780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3FC0;
  *(void *)(inited + 32) = v19;
  *(void *)(inited + 40) = v20;
  uint64_t v32 = sub_100043B2C(inited);
  *(void *)(v32 + 56) = a1;
  *(void *)(v32 + 64) = a2;
  *(unsigned char *)(v32 + 72) = v33;
  *(void *)(v32 + 80) = v45;
  *(void *)(v32 + 88) = v47;
  *(unsigned char *)(v32 + 96) = v33;
  *(void *)(v32 + 104) = a1;
  *(void *)(v32 + 112) = a2;
  *(unsigned char *)(v32 + 120) = v33;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  sub_100030960(v42, v40, inited, (uint64_t)sub_10007CC44, v34);
  if (v48)
  {
    swift_release();
    swift_setDeallocating();
    uint64_t v35 = inited;
    sub_1000500CC();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1000500CC();
    swift_release();
    sub_10002CAAC();
    uint64_t v35 = *(void *)(v34 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v35;
}

uint64_t sub_10007AC9C()
{
  sub_10004C7C0();
  unsigned __int8 v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  sub_100041FFC();
  uint64_t v31 = v12;
  uint64_t v13 = v1[3];
  int v14 = (void *)v1[4];
  swift_bridgeObjectRetain();
  v15._uint64_t countAndFlagsBits = v13;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  sub_1000465EC();
  sub_100044878();
  v16._uint64_t countAndFlagsBits = 1059077408;
  v16._object = (void *)0xE400000000000000;
  String.append(_:)(v16);
  sub_100043478(&qword_10022D780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = v11;
  *(void *)(inited + 40) = v9;
  *(unsigned char *)(inited + 48) = 3;
  swift_bridgeObjectRetain();
  if (v5)
  {
    swift_bridgeObjectRetain();
    v18._object = (void *)0x80000001001CB6F0;
    v18._uint64_t countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v18);
    sub_100052734(1, 2, 1, inited);
    uint64_t inited = v19;
    *(void *)(v19 + 16) = 2;
    *(void *)(v19 + 56) = v7;
    *(void *)(v19 + 64) = v5;
    *(unsigned char *)(v19 + 72) = 3;
  }
  if (v3 != 4)
  {
    sub_100020F8C();
    unint64_t v21 = *(void *)(inited + 16);
    unint64_t v20 = *(void *)(inited + 24);
    if (v21 >= v20 >> 1)
    {
      sub_100052734(v20 > 1, v21 + 1, 1, inited);
      uint64_t inited = v30;
    }
    *(void *)(inited + 16) = v21 + 1;
    uint64_t v22 = inited + 24 * v21;
    *(void *)(v22 + 32) = v3;
    *(void *)(v22 + 40) = 0;
    *(unsigned char *)(v22 + 48) = 1;
  }
  v23._uint64_t countAndFlagsBits = 59;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = _swiftEmptyArrayStorage;
  uint64_t v25 = v1[2];
  __chkstk_darwin(v24);
  sub_100046D4C();
  *(void *)(v26 - 32) = v31;
  *(void *)(v26 - 24) = inited;
  *(void *)(v26 - 16) = sub_10007CD30;
  *(void *)(v26 - 8) = v27;
  sub_1000489E4((void (*)(void))sub_10003DAE0, v28);
  if (v0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002CAAC();
    uint64_t v25 = *(void *)(v24 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v25;
}

uint64_t sub_10007AF80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentInfo();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (void *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004B6C0(&v14);
  if (!v2)
  {
    unint64_t v8 = *((void *)&v14 + 1);
    if (*((void *)&v14 + 1) >> 60 != 15)
    {
      uint64_t v9 = v14;
      sub_10004B7AC(6, &v14);
      if (v15)
      {
        sub_100043478(&qword_10022D7B0);
        if (swift_dynamicCast())
        {
          sub_100090EA0(v16, v7);
          uint64_t v10 = (uint64_t *)(a2 + 16);
          swift_beginAccess();
          sub_1000BA3C4();
          uint64_t v11 = *(void *)(*(void *)(a2 + 16) + 16);
          sub_1000BA4F8(v11);
          uint64_t v12 = *v10;
          *(void *)(v12 + 16) = v11 + 1;
          sub_10007CC64((uint64_t)v7, v12+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v11);
          swift_endAccess();
          sub_10004B6AC(v9, v8);
          return 0;
        }
        sub_10004B6AC(v9, v8);
      }
      else
      {
        sub_10004B6AC(v9, v8);
        sub_1000423CC((uint64_t)&v14);
      }
    }
    sub_10007CB58();
    swift_allocError();
    swift_willThrow();
  }
  return 0;
}

uint64_t sub_10007B198()
{
  sub_10004C7C0();
  uint64_t v3 = v2;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  sub_100041FFC();
  uint64_t v21 = v4;
  uint64_t v22 = v5;
  uint64_t v6 = v1[3];
  uint64_t v7 = (void *)v1[4];
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = v6;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0x455245485720;
  v9._object = (void *)0xE600000000000000;
  String.append(_:)(v9);
  uint64_t v11 = v21;
  uint64_t v10 = v22;
  uint64_t v23 = v21;
  uint64_t v24 = v22;
  uint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(v3 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    long long v14 = (void **)(v3 + 40);
    do
    {
      uint64_t v15 = (uint64_t)*(v14 - 1);
      Swift::String v16 = *v14;
      swift_bridgeObjectRetain();
      sub_10007B3B0(v13, v15, v16, (uint64_t)&v23, (uint64_t *)&v25);
      swift_bridgeObjectRelease();
      v14 += 2;
      ++v13;
    }
    while (v12 != v13);
    swift_bridgeObjectRelease();
    uint64_t v11 = v23;
    uint64_t v10 = v24;
    int v17 = v25;
  }
  else
  {
    int v17 = _swiftEmptyArrayStorage;
  }
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = _swiftEmptyArrayStorage;
  uint64_t v19 = v1[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100030960(v11, v10, (uint64_t)v17, (uint64_t)sub_10007CC44, v18);
  if (v0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002CAAC();
    uint64_t v19 = *(void *)(v18 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_bridgeObjectRelease();
  return v19;
}

void sub_10007B3B0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t *a5)
{
  if (a1 >= 1)
  {
    v8._uint64_t countAndFlagsBits = 0x20444E4120;
    v8._object = (void *)0xE500000000000000;
    String.append(_:)(v8);
  }
  _StringGuts.grow(_:)(50);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001001CB6A0;
  v9._uint64_t countAndFlagsBits = 0xD00000000000004ALL;
  String.append(_:)(v9);
  v10._uint64_t countAndFlagsBits = a2;
  v10._object = a3;
  String.append(_:)(v10);
  swift_bridgeObjectRetain();
  v11._uint64_t countAndFlagsBits = 9516;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._uint64_t countAndFlagsBits = a2;
  v12._object = a3;
  String.append(_:)(v12);
  v13._uint64_t countAndFlagsBits = 9516;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  uint64_t v14 = *(void *)(*a5 + 16);
  uint64_t v15 = v14 + 4;
  if (__OFADD__(v14, 4))
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_10007CCC8(v15, 1);
    swift_bridgeObjectRetain();
    sub_1000BA3AC();
    uint64_t v16 = *(void *)(*a5 + 16);
    sub_1000BA4E0(v16);
    uint64_t v17 = *a5;
    *(void *)(v17 + 16) = v16 + 1;
    uint64_t v18 = v17 + 24 * v16;
    *(void *)(v18 + 32) = 11301;
    *(void *)(v18 + 40) = 0xE200000000000000;
    *(unsigned char *)(v18 + 48) = 3;
    swift_bridgeObjectRetain();
    sub_1000BA3AC();
    uint64_t v19 = *(void *)(*a5 + 16);
    sub_1000BA4E0(v19);
    uint64_t v20 = *a5;
    *(void *)(v20 + 16) = v19 + 1;
    uint64_t v21 = v20 + 24 * v19;
    *(void *)(v21 + 32) = a2;
    *(void *)(v21 + 40) = a3;
    *(unsigned char *)(v21 + 48) = 3;
    swift_bridgeObjectRetain();
    sub_1000BA3AC();
    uint64_t v22 = *(void *)(*a5 + 16);
    sub_1000BA4E0(v22);
    uint64_t v23 = *a5;
    *(void *)(v23 + 16) = v22 + 1;
    uint64_t v24 = v23 + 24 * v22;
    *(void *)(v24 + 32) = 11301;
    *(void *)(v24 + 40) = 0xE200000000000000;
    *(unsigned char *)(v24 + 48) = 3;
    swift_bridgeObjectRetain();
    sub_1000BA3AC();
    uint64_t v25 = *(void *)(*a5 + 16);
    sub_1000BA4E0(v25);
    uint64_t v26 = *a5;
    *(void *)(v26 + 16) = v25 + 1;
    uint64_t v27 = v26 + 24 * v25;
    *(void *)(v27 + 32) = a2;
    *(void *)(v27 + 40) = a3;
    *(unsigned char *)(v27 + 48) = 3;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10007B608(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ContentInfo();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  Swift::String v8 = (void *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100049788(a1, a1[3]);
  sub_10004B6C0(&v15);
  if (!v2)
  {
    unint64_t v9 = *((void *)&v15 + 1);
    if (*((void *)&v15 + 1) >> 60 != 15)
    {
      uint64_t v10 = v15;
      sub_10004B7AC(6, &v15);
      if (v16)
      {
        sub_100043478(&qword_10022D7B0);
        if (swift_dynamicCast())
        {
          sub_100090EA0(v17, v8);
          Swift::String v11 = (uint64_t *)(a2 + 16);
          swift_beginAccess();
          sub_1000BA3C4();
          uint64_t v12 = *(void *)(*(void *)(a2 + 16) + 16);
          sub_1000BA4F8(v12);
          uint64_t v13 = *v11;
          *(void *)(v13 + 16) = v12 + 1;
          sub_10007CC64((uint64_t)v8, v13+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v12);
          swift_endAccess();
          sub_10004B6AC(v10, v9);
          return 1;
        }
        sub_10004B6AC(v10, v9);
      }
      else
      {
        sub_10004B6AC(v10, v9);
        sub_1000423CC((uint64_t)&v15);
      }
    }
    sub_10007CB58();
    swift_allocError();
    swift_willThrow();
  }
  return 1;
}

uint64_t sub_10007B830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  int v8 = a3;
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v4 + 24);
  uint64_t v10 = *(void **)(v4 + 32);
  swift_bridgeObjectRetain();
  v11._uint64_t countAndFlagsBits = v9;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  sub_1000465EC();
  sub_100044EE4();
  v12._uint64_t countAndFlagsBits = 1059077408;
  v12._object = (void *)0xE400000000000000;
  String.append(_:)(v12);
  sub_100043478(&qword_10022D780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  sub_100043B2C(inited);
  swift_bridgeObjectRetain();
  if (v8 != 4)
  {
    sub_100020F8C();
    sub_100052734(1, 2, 1, inited);
    uint64_t inited = v14;
    *(void *)(v14 + 16) = 2;
    *(void *)(v14 + 56) = a3;
    *(void *)(v14 + 64) = 0;
    *(unsigned char *)(v14 + 72) = 1;
  }
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v15._object = (void *)0x80000001001CB680;
  String.append(_:)(v15);
  sub_100043478(&qword_10022D880);
  uint64_t v16 = swift_allocBox();
  uint64_t v18 = v17;
  uint64_t v19 = type metadata accessor for ContentInfo();
  uint64_t v20 = sub_100021AC0(v18, 1, 1, v19);
  __chkstk_darwin(v20);
  sub_100046D4C();
  *(void *)(v21 - 32) = 0x80000001001CB660;
  *(void *)(v21 - 24) = inited;
  *(void *)(v21 - 16) = sub_10007CAD0;
  *(void *)(v21 - 8) = v16;
  sub_1000489E4((void (*)(void))sub_10003DAE0, v22);
  if (v25)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002CAAC();
    sub_10007CAF0(v18, a4);
    return swift_release();
  }
}

uint64_t sub_10007BAC0()
{
  uint64_t v1 = sub_100043478(&qword_10022D880);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (void *)((char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = swift_projectBox();
  sub_10004B6C0(&v9);
  if (!v0)
  {
    unint64_t v5 = *((void *)&v9 + 1);
    if (*((void *)&v9 + 1) >> 60 != 15)
    {
      uint64_t v6 = v9;
      sub_10004B7AC(6, &v9);
      if (v10)
      {
        sub_100043478(&qword_10022D7B0);
        if (swift_dynamicCast())
        {
          sub_100090EA0(v11, v3);
          sub_10004B6AC(v6, v5);
          uint64_t v7 = type metadata accessor for ContentInfo();
          sub_100021AC0((uint64_t)v3, 0, 1, v7);
          swift_beginAccess();
          sub_10007CBA4((uint64_t)v3, v4);
          return 0;
        }
        sub_10004B6AC(v6, v5);
      }
      else
      {
        sub_10004B6AC(v6, v5);
        sub_1000423CC((uint64_t)&v9);
      }
    }
    sub_10007CB58();
    swift_allocError();
    swift_willThrow();
  }
  return 0;
}

uint64_t sub_10007BC94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease();
  strcpy((char *)v20, "DELETE FROM ");
  BYTE5(v20[1]) = 0;
  HIWORD(v20[1]) = -5120;
  uint64_t v9 = *(void *)(v4 + 24);
  uint64_t v10 = *(void **)(v4 + 32);
  swift_bridgeObjectRetain();
  v11._uint64_t countAndFlagsBits = v9;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  sub_1000465EC();
  sub_100044878();
  sub_100045D80();
  sub_1000465C8();
  v12._uint64_t countAndFlagsBits = 0x3B3F203D2120;
  v12._object = (void *)0xE600000000000000;
  String.append(_:)(v12);
  uint64_t v13 = v20[0];
  uint64_t v14 = (void *)v20[1];
  sub_100043478(&qword_10022D780);
  v15._rawValue = (void *)swift_initStackObject();
  *((_OWORD *)v15._rawValue + 1) = xmmword_1001C3120;
  *((void *)v15._rawValue + 4) = a1;
  *((void *)v15._rawValue + 5) = a2;
  uint64_t v16 = sub_100043B2C((uint64_t)v15._rawValue);
  *(void *)(v16 + 56) = a3;
  *(void *)(v16 + 64) = a4;
  *(unsigned char *)(v16 + 72) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18._uint64_t countAndFlagsBits = v13;
  v18._object = v14;
  SQLDatabase.execute(sql:parameters:)(v18, v15);
  swift_setDeallocating();
  sub_1000500CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10007BE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    void v23[3] = v5;
    swift_bridgeObjectRetain();
    _StringGuts.grow(_:)(39);
    swift_bridgeObjectRelease();
    strcpy((char *)v23, "DELETE FROM ");
    BYTE5(v23[1]) = 0;
    HIWORD(v23[1]) = -5120;
    uint64_t v10 = *(void *)(v4 + 24);
    Swift::String v11 = *(void **)(v4 + 32);
    swift_bridgeObjectRetain();
    v12._uint64_t countAndFlagsBits = v10;
    v12._object = v11;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    sub_1000465EC();
    sub_100044878();
    sub_100045D80();
    sub_1000465C8();
    sub_10004716C();
    uint64_t v13 = v23[0];
    uint64_t v14 = (void *)v23[1];
    sub_100043478(&qword_10022D780);
    v15._rawValue = (void *)swift_initStackObject();
    *((_OWORD *)v15._rawValue + 1) = xmmword_1001C3120;
    *((void *)v15._rawValue + 4) = a1;
    *((void *)v15._rawValue + 5) = a2;
    uint64_t v16 = sub_100043B2C((uint64_t)v15._rawValue);
    *(void *)(v16 + 56) = a3;
    *(void *)(v16 + 64) = a4;
    *(unsigned char *)(v16 + 72) = v17;
  }
  else
  {
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    strcpy((char *)v23, "DELETE FROM ");
    BYTE5(v23[1]) = 0;
    HIWORD(v23[1]) = -5120;
    uint64_t v19 = *(void *)(v4 + 24);
    uint64_t v20 = *(void **)(v4 + 32);
    swift_bridgeObjectRetain();
    v21._uint64_t countAndFlagsBits = v19;
    v21._object = v20;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    sub_1000465EC();
    sub_100044878();
    sub_10004716C();
    uint64_t v13 = v23[0];
    uint64_t v14 = (void *)v23[1];
    sub_100043478(&qword_10022D780);
    v15._rawValue = (void *)swift_initStackObject();
    *((_OWORD *)v15._rawValue + 1) = xmmword_1001C3110;
    *((void *)v15._rawValue + 4) = a1;
    *((void *)v15._rawValue + 5) = a2;
    sub_100043B2C((uint64_t)v15._rawValue);
  }
  swift_bridgeObjectRetain();
  v18._uint64_t countAndFlagsBits = v13;
  v18._object = v14;
  SQLDatabase.execute(sql:parameters:)(v18, v15);
  swift_setDeallocating();
  sub_1000500CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10007C004()
{
  sub_10004C7C0();
  uint64_t v2 = v1;
  uint64_t v3 = self;
  sub_1000916CC();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v35 = 0;
  id v5 = [v3 dataWithPropertyList:isa format:100 options:0 error:&v35];

  id v6 = v35;
  if (v5)
  {
    uint64_t v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v9 = v8;

    id v35 = 0;
    unint64_t v36 = 0xE000000000000000;
    _StringGuts.grow(_:)(84);
    v10._object = (void *)0x80000001001CB620;
    v10._uint64_t countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v10);
    uint64_t v11 = *(void *)(v0 + 24);
    Swift::String v12 = *(void **)(v0 + 32);
    swift_bridgeObjectRetain();
    v13._uint64_t countAndFlagsBits = v11;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._uint64_t countAndFlagsBits = 10272;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    sub_100044878();
    sub_10004B324();
    sub_1000465C8();
    sub_10004B324();
    sub_100049864();
    sub_10004B324();
    sub_100044EE4();
    sub_10004B324();
    sub_10004CDB0();
    sub_10004B324();
    sub_10004DC18();
    sub_10004B324();
    sub_1000492F0();
    sub_10004B324();
    sub_10004407C();
    v15._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v15._object = (void *)0x80000001001CB640;
    String.append(_:)(v15);
    char v33 = (void *)v36;
    uint64_t v34 = (uint64_t)v35;
    sub_100043478(&qword_10022D780);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001C3FD0;
    uint64_t v17 = *(void *)(v2 + 24);
    *(void *)(inited + 32) = *(void *)(v2 + 16);
    *(void *)(inited + 40) = v17;
    *(unsigned char *)(inited + 48) = 3;
    Swift::String v18 = (int *)type metadata accessor for ContentInfo();
    uint64_t v19 = (void *)(v2 + v18[12]);
    uint64_t v20 = v19[1];
    *(void *)(inited + 56) = *v19;
    *(void *)(inited + 64) = v20;
    *(unsigned char *)(inited + 72) = 3;
    *(void *)(inited + 80) = v7;
    *(void *)(inited + 88) = v9;
    *(unsigned char *)(inited + 96) = 0;
    Swift::String v21 = (void *)(v2 + v18[11]);
    uint64_t v22 = v21[1];
    *(void *)(inited + 104) = *v21;
    *(void *)(inited + 112) = v22;
    *(unsigned char *)(inited + 120) = 3;
    *(void *)(inited + 128) = *(unsigned __int8 *)(v2 + v18[10]);
    *(void *)(inited + 136) = 0;
    *(unsigned char *)(inited + 144) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10004EA44(v7, v9);
    swift_bridgeObjectRetain();
    static Date.timeIntervalSinceReferenceDate.getter();
    *(void *)(inited + 152) = v23;
    *(void *)(inited + 160) = 0;
    *(unsigned char *)(inited + 168) = 2;
    id v35 = *(id *)v2;
    swift_bridgeObjectRetain();
    sub_100043478(&qword_100232940);
    sub_10007865C();
    uint64_t v24 = sub_10004BE70();
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    *(void *)(inited + 176) = v24;
    *(void *)(inited + 184) = v26;
    *(unsigned char *)(inited + 192) = 3;
    id v35 = *(id *)(v2 + 8);
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_10004BE70();
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
    *(void *)(inited + 200) = v27;
    *(void *)(inited + 208) = v29;
    v30._uint64_t countAndFlagsBits = v34;
    *(unsigned char *)(inited + 216) = 3;
    v30._object = v33;
    SQLDatabase.execute(sql:parameters:)(v30, (Swift::OpaquePointer)inited);
    swift_setDeallocating();
    sub_1000500CC();
    swift_bridgeObjectRelease();
    return sub_10004B278(v7, v9);
  }
  else
  {
    uint64_t v32 = v6;
    _convertNSErrorToError(_:)();

    return swift_willThrow();
  }
}

uint64_t type metadata accessor for AppContentTable()
{
  return self;
}

uint64_t sub_10007C3C8()
{
  sub_10004C7C0();
  _StringGuts.grow(_:)(98);
  sub_10004AAA8();
  sub_100051528();
  v0._uint64_t countAndFlagsBits = 10272;
  v0._object = (void *)0xE200000000000000;
  String.append(_:)(v0);
  sub_100044878();
  sub_100048570();
  sub_1000465C8();
  sub_100048570();
  sub_100049864();
  sub_100047144();
  sub_100044EE4();
  sub_10004618C();
  sub_10004CDB0();
  sub_10004618C();
  sub_10004DC18();
  sub_10004571C((uint64_t)" REAL, PRIMARY KEY (");
  sub_100044878();
  v1._uint64_t countAndFlagsBits = 8236;
  v1._object = (void *)0xE200000000000000;
  String.append(_:)(v1);
  sub_1000465C8();
  v2._uint64_t countAndFlagsBits = 10537;
  v2._object = (void *)0xE200000000000000;
  String.append(_:)(v2);
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  SQLDatabase.execute(sql:parameters:)(v3, (Swift::OpaquePointer)&_swiftEmptyArrayStorage);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10007C4E0()
{
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  sub_100041FFC();
  v9._uint64_t countAndFlagsBits = v0;
  v9._object = v1;
  sub_100051528();
  v2._uint64_t countAndFlagsBits = 59;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  SQLDatabase.execute(sql:parameters:)(v9, (Swift::OpaquePointer)&_swiftEmptyArrayStorage);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v4)
  {
    _StringGuts.grow(_:)(95);
    sub_10004AAA8();
    sub_100051528();
    v5._uint64_t countAndFlagsBits = 10272;
    v5._object = (void *)0xE200000000000000;
    String.append(_:)(v5);
    sub_100044878();
    sub_100048570();
    sub_1000465C8();
    sub_100048570();
    sub_100049864();
    sub_100047144();
    sub_100044EE4();
    sub_100048570();
    sub_10004CDB0();
    sub_10004618C();
    sub_10004DC18();
    sub_10004571C((uint64_t)" REAL, PRIMARY KEY (");
    sub_100044878();
    v6._uint64_t countAndFlagsBits = 8236;
    v6._object = (void *)0xE200000000000000;
    String.append(_:)(v6);
    sub_1000465C8();
    v7._uint64_t countAndFlagsBits = 10537;
    v7._object = (void *)0xE200000000000000;
    String.append(_:)(v7);
    v8._uint64_t countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    SQLDatabase.execute(sql:parameters:)(v8, (Swift::OpaquePointer)&_swiftEmptyArrayStorage);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10007C678()
{
  _StringGuts.grow(_:)(27);
  int v0 = swift_bridgeObjectRelease();
  sub_10002D360(v0, v1, v2, v3, v4, v5, v6, v7, 0, 0xE000000000000000);
  sub_100049CF4();
  sub_1000492F0();
  sub_1000209B4();
  SQLDatabase.execute(sql:parameters:)(v21, (Swift::OpaquePointer)&_swiftEmptyArrayStorage);
  if (v8) {
    swift_errorRelease();
  }
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(27);
  int v9 = swift_bridgeObjectRelease();
  sub_10002D360(v9, v10, v11, v12, v13, v14, v15, v16, 0, 0xE000000000000000);
  sub_100049CF4();
  sub_10004407C();
  sub_1000209B4();
  SQLDatabase.execute(sql:parameters:)(v22, (Swift::OpaquePointer)&_swiftEmptyArrayStorage);
  if (v17) {
    swift_errorRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t result = sub_100040C0C(0x79654B6863746162, (void *)0xE900000000000073);
  if (!v17)
  {
    int v19 = result;
    uint64_t result = sub_100040C0C(0x617461646174656DLL, (void *)0xE800000000000000);
    if ((v19 & result & 1) == 0)
    {
      sub_10007CA54();
      swift_allocError();
      *uint64_t v20 = 6;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_10007C838(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  LOBYTE(v6) = v5;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 0;
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(71);
  v12._object = (void *)0x80000001001CB5E0;
  v12._uint64_t countAndFlagsBits = 0xD000000000000032;
  String.append(_:)(v12);
  v13._uint64_t countAndFlagsBits = a3;
  v13._object = a4;
  String.append(_:)(v13);
  v14._uint64_t countAndFlagsBits = 0x4552454857202927;
  v14._object = (void *)0xEF273D656D616E20;
  String.append(_:)(v14);
  v15._uint64_t countAndFlagsBits = a1;
  v15._object = a2;
  String.append(_:)(v15);
  v16._uint64_t countAndFlagsBits = 15143;
  v16._object = (void *)0xE200000000000000;
  String.append(_:)(v16);
  uint64_t v19 = v4;
  uint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  Swift::String v22 = &_swiftEmptyArrayStorage;
  uint64_t v23 = sub_10007CAB0;
  uint64_t v24 = v11;
  sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)&v18);
  if (v5)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v6 = *(unsigned __int8 *)(v11 + 16);
    swift_release();
  }
  return v6 & 1;
}

uint64_t sub_10007C9E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003F668(0);
  if (!v2)
  {
    BOOL v7 = (v5 & 1) == 0 && v4 > 0;
    swift_beginAccess();
    *(unsigned char *)(a2 + 16) = v7;
  }
  return 1;
}

unint64_t sub_10007CA54()
{
  unint64_t result = qword_10022DCA8;
  if (!qword_10022DCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022DCA8);
  }
  return result;
}

uint64_t sub_10007CAA0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10007CAB0(uint64_t a1)
{
  return sub_10007C9E0(a1, v1) & 1;
}

uint64_t sub_10007CAD0()
{
  return sub_10007BAC0() & 1;
}

uint64_t sub_10007CAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022D880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10007CB58()
{
  unint64_t result = qword_10022DCB0;
  if (!qword_10022DCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022DCB0);
  }
  return result;
}

uint64_t sub_10007CBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022D880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007CC0C()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007CC44(void *a1)
{
  return sub_10007B608(a1, v1) & 1;
}

uint64_t sub_10007CC64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10007CCC8(uint64_t a1, char a2)
{
  uint64_t v5 = *v2;
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v5;
  if (!isUniquelyReferenced_nonNull_native || a1 > *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(v5 + 16) <= a1) {
      uint64_t v7 = a1;
    }
    else {
      uint64_t v7 = *(void *)(v5 + 16);
    }
    sub_100052734(isUniquelyReferenced_nonNull_native, v7, a2 & 1, v5);
    *uint64_t v2 = v8;
  }
}

uint64_t sub_10007CD30(uint64_t a1)
{
  return sub_10007AF80(a1, v1) & 1;
}

uint64_t sub_10007CD50()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007CD88(uint64_t a1)
{
  return sub_10007A84C(a1, *(void (**)(void *))(v1 + 16)) & 1;
}

uint64_t sub_10007CDA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentInfo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for AppContentTable.ContentError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10007CEA0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppContentTable.ContentError()
{
  return &type metadata for AppContentTable.ContentError;
}

unint64_t sub_10007CEDC()
{
  unint64_t result = qword_10022DCB8;
  if (!qword_10022DCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022DCB8);
  }
  return result;
}

uint64_t sub_10007CF2C()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    sub_100048598();
  }
  else {
    LOBYTE(v0) = sub_10004489C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_10007CFA4(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x5443454E4E4F43;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = 0x5443454E4E4F43;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v7 = 1162626372;
      goto LABEL_10;
    case 2:
      unint64_t v4 = 0xE300000000000000;
      unsigned __int16 v8 = 17735;
      goto LABEL_8;
    case 3:
      unint64_t v4 = 0xE400000000000000;
      unint64_t v6 = 1145128264;
      break;
    case 4:
      unint64_t v4 = 0xE500000000000000;
      unint64_t v6 = 0x4843544150;
      break;
    case 5:
      unint64_t v4 = 0xE400000000000000;
      unint64_t v6 = 1414745936;
      break;
    case 6:
      unint64_t v4 = 0xE300000000000000;
      unsigned __int16 v8 = 21840;
LABEL_8:
      unint64_t v6 = v8 | 0x540000u;
      break;
    case 7:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v7 = 1094996053;
LABEL_10:
      unint64_t v6 = v7 & 0xFFFF0000FFFFFFFFLL | 0x455400000000;
      break;
    default:
      break;
  }
  unint64_t v9 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v9 = 0xE600000000000000;
      uint64_t v10 = 1162626372;
      goto LABEL_20;
    case 2:
      unint64_t v9 = 0xE300000000000000;
      unsigned __int16 v11 = 17735;
      goto LABEL_18;
    case 3:
      unint64_t v9 = 0xE400000000000000;
      unint64_t v3 = 1145128264;
      break;
    case 4:
      unint64_t v9 = 0xE500000000000000;
      unint64_t v3 = 0x4843544150;
      break;
    case 5:
      unint64_t v9 = 0xE400000000000000;
      unint64_t v3 = 1414745936;
      break;
    case 6:
      unint64_t v9 = 0xE300000000000000;
      unsigned __int16 v11 = 21840;
LABEL_18:
      unint64_t v3 = v11 | 0x540000u;
      break;
    case 7:
      unint64_t v9 = 0xE600000000000000;
      uint64_t v10 = 1094996053;
LABEL_20:
      unint64_t v3 = v10 & 0xFFFF0000FFFFFFFFLL | 0x455400000000;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v9) {
    sub_100048598();
  }
  else {
    char v2 = sub_10004489C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10007D188(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x746C7561666564;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x746C7561666564;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE100000000000000;
      uint64_t v6 = 65;
      break;
    case 2:
      unint64_t v4 = 0xE100000000000000;
      uint64_t v6 = 66;
      break;
    case 3:
      unint64_t v4 = 0xE100000000000000;
      uint64_t v6 = 67;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE100000000000000;
      uint64_t v3 = 65;
      break;
    case 2:
      unint64_t v7 = 0xE100000000000000;
      uint64_t v3 = 66;
      break;
    case 3:
      unint64_t v7 = 0xE100000000000000;
      uint64_t v3 = 67;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_100048598();
  }
  else {
    char v2 = sub_10004489C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10007D2CC(char a1, char a2)
{
  unint64_t v4 = 0xE100000000000000;
  uint64_t v5 = 47;
  switch(a1)
  {
    case 1:
      uint64_t v5 = 63;
      break;
    case 2:
      uint64_t v5 = 35;
      break;
    case 3:
      uint64_t v5 = 0x45746E6563726570;
      unint64_t v4 = 0xEE006465646F636ELL;
      break;
    case 4:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v5 = 0x6564756C637865;
      break;
    case 5:
      uint64_t v5 = 0x736E655365736163;
      unint64_t v4 = 0xED00006576697469;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE100000000000000;
  uint64_t v7 = 47;
  switch(a2)
  {
    case 1:
      uint64_t v7 = 63;
      break;
    case 2:
      uint64_t v7 = 35;
      break;
    case 3:
      uint64_t v7 = 0x45746E6563726570;
      unint64_t v6 = 0xEE006465646F636ELL;
      break;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v7 = 0x6564756C637865;
      break;
    case 5:
      uint64_t v7 = 0x736E655365736163;
      unint64_t v6 = 0xED00006576697469;
      break;
    default:
      break;
  }
  if (v5 == v7 && v4 == v6) {
    sub_100048598();
  }
  else {
    char v2 = sub_10004489C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10007D484(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x656C646E61686E75;
  }
  else {
    uint64_t v4 = 0x726F727265;
  }
  if (v3) {
    unint64_t v5 = 0xE500000000000000;
  }
  else {
    unint64_t v5 = 0xEC0000004C525564;
  }
  if (a2) {
    uint64_t v6 = 0x656C646E61686E75;
  }
  else {
    uint64_t v6 = 0x726F727265;
  }
  if (a2) {
    unint64_t v7 = 0xEC0000004C525564;
  }
  else {
    unint64_t v7 = 0xE500000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_100048598();
  }
  else {
    char v2 = sub_10004489C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10007D51C(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 1415071060;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 1415071060;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x52454745544E49;
      break;
    case 2:
      uint64_t v6 = 1112493122;
      break;
    case 3:
      uint64_t v6 = 1279346002;
      break;
    case 4:
      uint64_t v6 = 0x205952414D495250;
      unint64_t v4 = 0xEB0000000059454BLL;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v3 = 0x52454745544E49;
      break;
    case 2:
      uint64_t v3 = 1112493122;
      break;
    case 3:
      uint64_t v3 = 1279346002;
      break;
    case 4:
      uint64_t v3 = 0x205952414D495250;
      unint64_t v7 = 0xEB0000000059454BLL;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_100048598();
  }
  else {
    char v2 = sub_10004489C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10007D690(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x73644961657261;
  }
  else {
    uint64_t v4 = 25705;
  }
  if (v3) {
    unint64_t v5 = 0xE200000000000000;
  }
  else {
    unint64_t v5 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x73644961657261;
  }
  else {
    uint64_t v6 = 25705;
  }
  if (a2) {
    unint64_t v7 = 0xE700000000000000;
  }
  else {
    unint64_t v7 = 0xE200000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_100048598();
  }
  else {
    char v2 = sub_10004489C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10007D718(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 25705;
  }
  else {
    uint64_t v4 = 0x73644961657261;
  }
  if (v3) {
    unint64_t v5 = 0xE700000000000000;
  }
  else {
    unint64_t v5 = 0xE200000000000000;
  }
  if (a2) {
    uint64_t v6 = 25705;
  }
  else {
    uint64_t v6 = 0x73644961657261;
  }
  if (a2) {
    unint64_t v7 = 0xE200000000000000;
  }
  else {
    unint64_t v7 = 0xE700000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_100048598();
  }
  else {
    char v2 = sub_10004489C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10007D7A0(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 25705;
  }
  else {
    uint64_t v4 = 0x7374656B637562;
  }
  if (v3) {
    unint64_t v5 = 0xE700000000000000;
  }
  else {
    unint64_t v5 = 0xE200000000000000;
  }
  if (a2) {
    uint64_t v6 = 25705;
  }
  else {
    uint64_t v6 = 0x7374656B637562;
  }
  if (a2) {
    unint64_t v7 = 0xE200000000000000;
  }
  else {
    unint64_t v7 = 0xE700000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_100048598();
  }
  else {
    char v2 = sub_10004489C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10007D828(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x656D6954646E65;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x656D6954646E65;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE200000000000000;
      uint64_t v6 = 25705;
      break;
    case 2:
      uint64_t v6 = 0x6D69547472617473;
      unint64_t v4 = 0xE900000000000065;
      break;
    case 3:
      uint64_t v6 = 0x6F726665726F7473;
      unint64_t v4 = 0xEB0000000073746ELL;
      break;
    case 4:
      uint64_t v6 = 0x6E656D7461657274;
      unint64_t v4 = 0xEA00000000007374;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE200000000000000;
      uint64_t v3 = 25705;
      break;
    case 2:
      uint64_t v3 = 0x6D69547472617473;
      unint64_t v7 = 0xE900000000000065;
      break;
    case 3:
      uint64_t v3 = 0x6F726665726F7473;
      unint64_t v7 = 0xEB0000000073746ELL;
      break;
    case 4:
      uint64_t v3 = 0x6E656D7461657274;
      unint64_t v7 = 0xEA00000000007374;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_100048598();
  }
  else {
    char v2 = sub_10004489C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10007D9D4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x6C62616568636163;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6C62616568636163;
  unint64_t v6 = 0xE900000000000065;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x656D697265707865;
      unint64_t v6 = 0xEB0000000073746ELL;
      break;
    case 2:
      unint64_t v6 = 0xE200000000000000;
      uint64_t v5 = 25705;
      break;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1953259891;
      break;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1684366707;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      uint64_t v3 = 0x656D697265707865;
      unint64_t v2 = 0xEB0000000073746ELL;
      break;
    case 2:
      unint64_t v2 = 0xE200000000000000;
      uint64_t v3 = 25705;
      break;
    case 3:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1953259891;
      break;
    case 4:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1684366707;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1000209D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_10007DB5C(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x656372756F73;
  }
  else {
    uint64_t v2 = 0x74757074756FLL;
  }
  if (a2) {
    uint64_t v3 = 0x656372756F73;
  }
  else {
    uint64_t v3 = 0x74757074756FLL;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

unint64_t sub_10007DBD4(char a1, char a2)
{
  unint64_t v3 = sub_100167FD8(a1);
  uint64_t v5 = v4;
  if (v3 == sub_100167FD8(a2) && v5 == v6) {
    sub_100048598();
  }
  else {
    LOBYTE(v3) = sub_10004489C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_10007DC4C(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x65756575716E65;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x696577746867696CLL;
    }
    else {
      uint64_t v5 = 1668184435;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEF636E7953746867;
    }
    else {
      unint64_t v6 = 0xE400000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE700000000000000;
    uint64_t v5 = 0x65756575716E65;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x696577746867696CLL;
    }
    else {
      uint64_t v3 = 1668184435;
    }
    if (a2 == 1) {
      unint64_t v7 = 0xEF636E7953746867;
    }
    else {
      unint64_t v7 = 0xE400000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE700000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    sub_100048598();
  }
  else {
    char v2 = sub_10004489C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10007DD50(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000073;
  uint64_t v3 = 0x79654B6863746162;
  uint64_t v4 = a1;
  uint64_t v5 = 0x79654B6863746162;
  unint64_t v6 = 0xE900000000000073;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x79654B6568636163;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x64657461657263;
      break;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x73657269707865;
      break;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x617461646174656DLL;
      break;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1752457584;
      break;
    case 6:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x6574617473;
      break;
    case 7:
      uint64_t v5 = 0x6E6564496B736174;
      unint64_t v6 = 0xEE00726569666974;
      break;
    case 8:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x6E6F6973726576;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x79654B6568636163;
      break;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x64657461657263;
      break;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x73657269707865;
      break;
    case 4:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x617461646174656DLL;
      break;
    case 5:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1752457584;
      break;
    case 6:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6574617473;
      break;
    case 7:
      uint64_t v3 = 0x6E6564496B736174;
      unint64_t v2 = 0xEE00726569666974;
      break;
    case 8:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x6E6F6973726576;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1000209D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_10007DFE0(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x566B63617074656ALL;
  }
  else {
    uint64_t v4 = 0x6B63617074656ALL;
  }
  if (v3) {
    unint64_t v5 = 0xE700000000000000;
  }
  else {
    unint64_t v5 = 0xE900000000000032;
  }
  if (a2) {
    uint64_t v6 = 0x566B63617074656ALL;
  }
  else {
    uint64_t v6 = 0x6B63617074656ALL;
  }
  if (a2) {
    unint64_t v7 = 0xE900000000000032;
  }
  else {
    unint64_t v7 = 0xE700000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_100048598();
  }
  else {
    char v2 = sub_10004489C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10007E094()
{
  return String.init<A>(describing:)();
}

BOOL sub_10007E0A0(uint64_t a1)
{
  return a1 != 0;
}

BOOL sub_10007E0B4@<W0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_10007E0A0(*a1);
  *a2 = result;
  return result;
}

void sub_10007E0E8(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_10007E0F0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100080300();
  unint64_t v5 = sub_100052E34();
  return CustomNSError<>.errorCode.getter(a1, a2, v4, v5);
}

uint64_t sub_10007E150(uint64_t a1)
{
  unint64_t v2 = sub_1000802B4();
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10007E18C(uint64_t a1)
{
  unint64_t v2 = sub_1000802B4();
  unint64_t v3 = sub_100080300();
  unint64_t v4 = sub_100052E34();
  return Error<>._code.getter(a1, v2, v3, v4);
}

uint64_t sub_10007E1E8()
{
  sub_100043478(&qword_10022DE00);
  uint64_t result = Dictionary.init(dictionaryLiteral:)();
  qword_10022DCC0 = result;
  return result;
}

uint64_t sub_10007E230()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v0);
  uint64_t v1 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v2);
  if (qword_10022C590 != -1) {
    swift_once();
  }
  id v6 = (id)qword_100244188;
  static DispatchQoS.unspecified.getter();
  v8[1] = &_swiftEmptyArrayStorage;
  sub_100050588((unint64_t *)&qword_10022F470, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100043478((uint64_t *)&unk_100231D60);
  sub_10002B720((unint64_t *)&qword_10022F480, (uint64_t *)&unk_100231D60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  qword_10022DCC8 = result;
  return result;
}

uint64_t sub_10007E4FC()
{
  uint64_t v1 = swift_retain();
  sub_10002D078(v1, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_10007E56C()
{
  sub_10007E4FC();
  return swift_deallocClassInstance();
}

void *sub_10007E5A0()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void **)(v0 + 24);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 16);
    type metadata accessor for AppBacklogTable();
    uint64_t v1 = (void *)sub_100011D64();
    v1[2] = v2;
    v1[3] = 0x676F6C6B636162;
    __n128 v1[4] = 0xE700000000000000;
    *(void *)(v0 + 24) = v1;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v1;
}

void *sub_10007E620()
{
  if (*(void *)(v0 + 32))
  {
    uint64_t v1 = *(void **)(v0 + 32);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 16);
    type metadata accessor for AppContentTable();
    uint64_t v1 = (void *)sub_100011D64();
    v1[2] = v2;
    v1[3] = 0x746E65746E6F63;
    __n128 v1[4] = 0xE700000000000000;
    *(void *)(v0 + 32) = v1;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v1;
}

void *sub_10007E6A0()
{
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(void **)(v0 + 48);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 16);
    type metadata accessor for AppSchedulesTable();
    uint64_t v1 = (void *)sub_100011D64();
    v1[2] = v2;
    v1[3] = 0x656C756465686373;
    __n128 v1[4] = 0xE900000000000073;
    *(void *)(v0 + 48) = v1;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v1;
}

void sub_10007E744(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *(void *)(v3 + 16);
  v6[3] = a1;
  v6[4] = a2;
  char v7 = a3 & 1;
  uint64_t v5 = swift_retain();
  sub_100040804(v5, v4, (void (*)(void))sub_10008011C, (uint64_t)v6);
}

uint64_t sub_10007E7A4(uint64_t a1, uint64_t *a2, Swift::Int a3, char a4)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  if (qword_10022C468 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v72 = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  id v61 = (void *)type metadata accessor for AppDatabase();
  uint64_t v71 = v61;
  *(void *)&long long v70 = a1;
  swift_retain();
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    char v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(&v70, (uint64_t)v71);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v67 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v67 = v9;
    uint64_t v68 = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(&v70, (uint64_t)v71);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v67 = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
    v18._uint64_t countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v70);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._object = (void *)0x80000001001CB8A0;
  v19._uint64_t countAndFlagsBits = 0xD000000000000017;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  uint64_t v21 = *a2;
  uint64_t v20 = a2[1];
  uint64_t v71 = &type metadata for String;
  *(void *)&long long v70 = v21;
  *((void *)&v70 + 1) = v20;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)&v70, &qword_10022F490);
  v22._uint64_t countAndFlagsBits = 0x54746E657665203BLL;
  v22._object = (void *)0xED0000203A657079;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  uint64_t v24 = a2[5];
  uint64_t v23 = a2[6];
  uint64_t v71 = &type metadata for String;
  *(void *)&long long v70 = v24;
  *((void *)&v70 + 1) = v23;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)&v70, &qword_10022F490);
  v25._uint64_t countAndFlagsBits = 41;
  v25._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v25);
  LogMessage.init(stringInterpolation:)();
  uint64_t v26 = static os_log_type_t.info.getter();
  sub_10004841C(v26);
  swift_bridgeObjectRelease();
  Swift::Int v27 = sub_100077168();
  sub_10004CFE8();
  sub_1000843F4(0, &v70);
  uint64_t result = swift_release();
  if (!v65)
  {
    if (v71)
    {
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        uint64_t v29 = v67;
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t result = sub_10002CC0C((uint64_t)&v70, &qword_10022F490);
    }
    uint64_t v29 = 0;
LABEL_12:
    Swift::Int v30 = v29 + v27;
    if (__OFADD__(v29, v27))
    {
      __break(1u);
    }
    else
    {
      if ((a4 & 1) != 0 || v30 <= a3)
      {
LABEL_20:
        sub_10007E5A0();
        sub_100076F8C(a2);
        swift_release();
        sub_10004CFE8();
        uint64_t v71 = &type metadata for Int;
        *(void *)&long long v70 = v30;
        sub_10008437C((uint64_t)&v70, 0);
        swift_release();
        sub_10002CC0C((uint64_t)&v70, &qword_10022F490);
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
        uint64_t v71 = v61;
        *(void *)&long long v70 = a1;
        swift_retain();
        id v48 = (id)AMSLogKey();
        if (v48)
        {
          uint64_t v49 = v48;
          uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v52 = v51;

          swift_bridgeObjectRetain();
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v53._uint64_t countAndFlagsBits = 0;
          v53._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v53);
          sub_100049788(&v70, (uint64_t)v71);
          uint64_t v54 = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          uint64_t v67 = v54;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
          v55._uint64_t countAndFlagsBits = 5972026;
          v55._object = (void *)0xE300000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v55);
          uint64_t MetatypeMetadata = &type metadata for String;
          uint64_t v67 = v50;
          uint64_t v68 = v52;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
          v56._uint64_t countAndFlagsBits = 93;
          v56._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v56);
          LogMessage.init(stringInterpolation:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v57._uint64_t countAndFlagsBits = 0;
          v57._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v57);
          sub_100049788(&v70, (uint64_t)v71);
          uint64_t v58 = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          uint64_t v67 = v58;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
          v59._uint64_t countAndFlagsBits = 58;
          v59._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v59);
          LogMessage.init(stringInterpolation:)();
        }
        sub_10004377C((uint64_t)&v70);
        LogMessage.init(stringLiteral:)();
        uint64_t v60 = static os_log_type_t.info.getter();
        sub_10004841C(v60);
        return swift_bridgeObjectRelease();
      }
      if (!__OFSUB__(v30, a3))
      {
        uint64_t v66 = v30 - a3;
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
        uint64_t v71 = v61;
        *(void *)&long long v70 = a1;
        swift_retain();
        id v31 = (id)AMSLogKey();
        if (v31)
        {
          uint64_t v32 = v31;
          uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          Swift::Int v63 = v30;
          uint64_t v35 = v34;

          swift_bridgeObjectRetain();
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v36._uint64_t countAndFlagsBits = 0;
          v36._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v36);
          sub_100049788(&v70, (uint64_t)v71);
          uint64_t v37 = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          uint64_t v67 = v37;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
          v38._uint64_t countAndFlagsBits = 5972026;
          v38._object = (void *)0xE300000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v38);
          uint64_t MetatypeMetadata = &type metadata for String;
          uint64_t v67 = v33;
          uint64_t v68 = v35;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
          v39._uint64_t countAndFlagsBits = 93;
          v39._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v39);
          LogMessage.init(stringInterpolation:)();
          Swift::Int v30 = v63;
          swift_bridgeObjectRelease();
        }
        else
        {
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v40._uint64_t countAndFlagsBits = 0;
          v40._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v40);
          sub_100049788(&v70, (uint64_t)v71);
          uint64_t v41 = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          uint64_t v67 = v41;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
          v42._uint64_t countAndFlagsBits = 58;
          v42._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v42);
          LogMessage.init(stringInterpolation:)();
        }
        sub_10004377C((uint64_t)&v70);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v43._uint64_t countAndFlagsBits = 0x676E6970706F7244;
        v43._object = (void *)0xE900000000000020;
        LogMessage.StringInterpolation.appendLiteral(_:)(v43);
        uint64_t v71 = &type metadata for Int;
        *(void *)&long long v70 = v66;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v70, &qword_10022F490);
        v44._uint64_t countAndFlagsBits = 0x2973286574796220;
        v44._object = (void *)0xE800000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v44);
        LogMessage.init(stringInterpolation:)();
        uint64_t v45 = static os_log_type_t.default.getter();
        sub_10004841C(v45);
        swift_bridgeObjectRelease();
        sub_10007E5A0();
        uint64_t v46 = sub_100076BC8(v66);
        uint64_t result = swift_release();
        BOOL v47 = __OFSUB__(v30, v46);
        v30 -= v46;
        if (!v47) {
          goto LABEL_20;
        }
LABEL_27:
        __break(1u);
        return result;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_10007F158()
{
  sub_10004377C(v0 + 16);
  return _swift_deallocObject(v0, 48, 7);
}

void *sub_10007F190()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  uint64_t v60 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v6 = v5;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v58 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v49 - v10;
  uint64_t result = self;
  unint64_t v13 = 0;
  uint64_t v63 = v6 + 8;
  id v64 = result;
  Swift::String v57 = (void (**)(void))(v6 + 16);
  Swift::String v14 = off_10020B000;
  long long v61 = xmmword_1001C3130;
  unint64_t v56 = 0x80000001001CB810;
  unint64_t v49 = 0x80000001001CB860;
  uint64_t v55 = v1;
  uint64_t v59 = v4;
  while (v13 < (unint64_t)v14[449])
  {
    char v15 = *((unsigned char *)&off_10020BDF8 + v13 + 32);
    sub_10000AE64(1, v15, 1, (uint64_t)v11);
    id v16 = [v64 defaultManager];
    URL.path.getter();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned int v18 = [v16 fileExistsAtPath:v17];

    if (v18)
    {
      if (qword_10022C468 != -1) {
        swift_once();
      }
      uint64_t v62 = qword_1002440D0;
      uint64_t v19 = sub_100043478(&qword_10022E560);
      uint64_t v20 = type metadata accessor for LogMessage();
      sub_100044798(v20);
      uint64_t v22 = *(void *)(v21 + 72);
      uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
      uint64_t v25 = (v24 + 32) & ~v24;
      uint64_t v65 = v22;
      uint64_t v54 = v19;
      uint64_t v52 = v25 + 3 * v22;
      uint64_t v51 = v24 | 7;
      *(_OWORD *)(swift_allocObject() + 16) = v61;
      uint64_t v53 = v25;
      uint64_t v50 = sub_100043478(&qword_10022DE08);
      uint64_t v68 = v50;
      v67[0] = v1;
      id v26 = (id)AMSLogKey();
      if (v26)
      {
        Swift::Int v27 = v26;
        uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v30 = v29;

        swift_bridgeObjectRetain();
        sub_10004A4CC();
        sub_100020E60();
        sub_100048B98();
        uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
        sub_100040960(MetatypeMetadata);
        sub_10002CC0C((uint64_t)v66, &qword_10022F490);
        v32._uint64_t countAndFlagsBits = 5972026;
        v32._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v32);
        v66[3] = &type metadata for String;
        v66[0] = v28;
        v66[1] = v30;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v66, &qword_10022F490);
        v33._uint64_t countAndFlagsBits = 93;
        v33._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v33);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10002D380();
        sub_100020E60();
        sub_100048B98();
        uint64_t v36 = swift_getMetatypeMetadata();
        sub_100040960(v36);
        sub_10002CC0C((uint64_t)v66, &qword_10022F490);
        v37._uint64_t countAndFlagsBits = 58;
        v37._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v37);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v67);
      LogMessage.init(stringLiteral:)();
      uint64_t v68 = v59;
      sub_10003BAA4(v67);
      Swift::String v38 = *v57;
      sub_1000440A0();
      v38();
      static LogMessage.safe(_:)();
      sub_10002CC0C((uint64_t)v67, &qword_10022F490);
      uint64_t v39 = static os_log_type_t.default.getter();
      sub_10004841C(v39);
      swift_bridgeObjectRelease();
      uint64_t v40 = (uint64_t)v58;
      sub_1000440A0();
      v38();
      uint64_t v41 = *(void **)*(&off_10020E388 + v15);
      type metadata accessor for SQLDatabase();
      id v42 = v41;
      uint64_t v43 = SQLDatabase.__allocating_init(url:readonly:fileProtection:schemaBlock:corruptionBlock:)(v40, 0, v41, 0, 0, 0, 0);
      uint64_t v44 = swift_retain();
      sub_10002D18C(v44, v44);
      sub_10002D520();
      __chkstk_darwin(v45);
      *(&v49 - 6) = v43;
      *(&v49 - 5) = 0xD00000000000003DLL;
      *(&v49 - 4) = v49;
      *(&v49 - 3) = (unint64_t)_swiftEmptyArrayStorage;
      *(&v49 - 2) = (unint64_t)sub_10007F9B0;
      *(&v49 - 1) = 0;
      sub_1000489E4((void (*)(void))sub_10003DAF8, (uint64_t)(&v49 - 8));
      uint64_t v46 = swift_retain();
      sub_10002D078(v46, v43);
      uint64_t v1 = v55;
      Swift::String v14 = off_10020B000;
      URL.path.getter();
      static SQLDatabase.removeDatabase(path:)();
      uint64_t v47 = sub_100044F14();
      v48(v47);
      swift_release();
      uint64_t result = (void *)swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v34 = sub_100044F14();
      uint64_t result = (void *)v35(v34);
    }
    if (++v13 == 4) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10007F9B0()
{
  uint64_t v1 = type metadata accessor for Date();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (uint64_t (**)(void))((char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_100043478(&qword_10022E6E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (unint64_t *)((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for ScheduleInfo(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003F9D0();
  if (!v0)
  {
    uint64_t v12 = v10;
    unint64_t v13 = v11;
    uint64_t v14 = sub_10003F9D0();
    uint64_t v16 = v15;
    uint64_t v39 = v14;
    sub_10004B6C0(v42);
    uint64_t v37 = *(void *)&v42[0];
    uint64_t v38 = v16;
    unint64_t v17 = *((void *)&v42[0] + 1);
    unint64_t v18 = sub_10004B78C();
    unint64_t v36 = v17;
    if (v19) {
      unint64_t v18 = -1;
    }
    char v21 = sub_10004C158(v18);
    if (!v38)
    {
      sub_10004B6AC(v37, v36);
      goto LABEL_3;
    }
    char v22 = v21;
    if (v13) {
      v23._uint64_t countAndFlagsBits = v12;
    }
    else {
      v23._uint64_t countAndFlagsBits = 0;
    }
    if (v13) {
      v23._object = v13;
    }
    else {
      v23._object = (void *)0xE000000000000000;
    }
    char v24 = sub_10007FFC4(v23);
    uint64_t v25 = v37;
    if (v24 == 3)
    {
      uint64_t v26 = v37;
      unint64_t v27 = v36;
LABEL_16:
      sub_10004B6AC(v26, v27);
LABEL_3:
      swift_bridgeObjectRelease();
      return 1;
    }
    unint64_t v27 = v36;
    if (v36 >> 60 == 15) {
      goto LABEL_3;
    }
    if (v22 == 7)
    {
      uint64_t v26 = v37;
      goto LABEL_16;
    }
    char v28 = v24;
    char v29 = v22;
    unint64_t v30 = v36;
    sub_10004EA44(v37, v36);
    sub_10004B7AC(v29, &v40);
    if (!v41)
    {
      sub_10004B6AC(v25, v30);
      sub_10004B6AC(v25, v30);
      swift_bridgeObjectRelease();
      sub_10002CC0C((uint64_t)&v40, &qword_10022F490);
      return 1;
    }
    sub_100043510(&v40, v42);
    if (v28)
    {
      if (v28 == 1)
      {
        swift_bridgeObjectRelease();
        type metadata accessor for AppDatabase();
        sub_1000124C0(2);
        sub_100043520((uint64_t)v42, (uint64_t)&v40);
        sub_100043478(&qword_10022D7B0);
        if (swift_dynamicCast())
        {
          uint64_t v32 = v43;
          Date.init()();
          sub_1001659F4(v32, v3, v6);
          sub_100021AC0((uint64_t)v6, 0, 1, v7);
          sub_10008005C((uint64_t)v6, (uint64_t)v9);
          sub_10007E6A0();
          sub_100087974((uint64_t)v9);
          unint64_t v34 = v36;
          uint64_t v35 = v37;
          sub_10004B6AC(v37, v36);
          swift_release();
          swift_release();
          sub_10004B6AC(v35, v34);
          sub_1000800C0((uint64_t)v9);
        }
        else
        {
          unint64_t v33 = v36;
          sub_10004B6AC(v25, v36);
          swift_release();
          sub_10004B6AC(v25, v33);
        }
        goto LABEL_32;
      }
      type metadata accessor for AppDatabase();
      uint64_t v31 = 2;
    }
    else
    {
      type metadata accessor for AppDatabase();
      uint64_t v31 = 1;
    }
    sub_1000124C0(v31);
    sub_10004CFE8();
    sub_100043520((uint64_t)v42, (uint64_t)&v40);
    sub_10004D298((uint64_t)&v40, v39, v38);
    swift_bridgeObjectRelease();
    sub_10004B6AC(v25, v30);
    swift_release();
    swift_release();
    sub_10004B6AC(v25, v30);
    sub_10002CC0C((uint64_t)&v40, &qword_10022F490);
LABEL_32:
    sub_10004377C((uint64_t)v42);
  }
  return 1;
}

unint64_t sub_10007FFC4(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020BF80, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

unint64_t sub_100080010()
{
  unint64_t result = qword_10022DE10;
  if (!qword_10022DE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022DE10);
  }
  return result;
}

uint64_t sub_10008005C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduleInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000800C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScheduleInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008011C()
{
  return sub_10007E7A4(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

unsigned char *storeEnumTagSinglePayload for AppDatabase.DatabaseError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000801DCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppDatabase.DatabaseError()
{
  return &type metadata for AppDatabase.DatabaseError;
}

uint64_t sub_100080214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_100080220(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

uint64_t type metadata accessor for AppDatabase.Weak()
{
  return sub_10008034C();
}

unint64_t sub_100080268()
{
  unint64_t result = qword_10022DEB0;
  if (!qword_10022DEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022DEB0);
  }
  return result;
}

unint64_t sub_1000802B4()
{
  unint64_t result = qword_10022DEB8;
  if (!qword_10022DEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022DEB8);
  }
  return result;
}

unint64_t sub_100080300()
{
  unint64_t result = qword_10022DEC0;
  if (!qword_10022DEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022DEC0);
  }
  return result;
}

uint64_t sub_10008034C()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10008037C(uint64_t a1, uint64_t a2)
{
  sub_1001A3998();
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 8);
  if (v5 == 2)
  {
    if (v6 != 2) {
      return 0;
    }
  }
  else
  {
    if (v6 == 2 || ((((v5 & 1) == 0) ^ v6) & 1) == 0) {
      return 0;
    }
    if (*(unsigned char *)(a1 + 24))
    {
      if ((*(unsigned char *)(a2 + 24) & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      if ((*(unsigned char *)(a2 + 24) & 1) != 0 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
        return result;
      }
    }
  }
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a2 + 40);
  if (!v7)
  {
    if (v8) {
      return 0;
    }
LABEL_19:
    uint64_t v12 = *(void **)(a1 + 48);
    unint64_t v13 = *(void **)(a2 + 48);
    if (v12)
    {
      if (v13 && (sub_1001A3A9C(v12, v13) & 1) != 0) {
        return 1;
      }
    }
    else if (!v13)
    {
      return 1;
    }
    return 0;
  }
  if (!v8) {
    return 0;
  }
  if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && v7 == v8) {
    goto LABEL_19;
  }
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = 0;
  if (v10) {
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_10008047C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x456465776F6C6C61 && a2 == 0xED000073746E6576;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x44676F6C6B636162 && a2 == 0xEF73746C75616665;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x80000001001CB9A0 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x80000001001CB9C0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v7) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

uint64_t sub_100080670()
{
  return 4;
}

unint64_t sub_100080678(char a1)
{
  unint64_t result = 0x456465776F6C6C61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x44676F6C6B636162;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100080730(void *a1)
{
  char v4 = v1;
  uint64_t v6 = sub_100043478(&qword_10022E018);
  sub_100020DEC();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_100022558();
  sub_100049788(a1, a1[3]);
  sub_10008342C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[0] = *v4;
  char v12 = 0;
  sub_100043478(&qword_10022DFF0);
  sub_100083510(&qword_10022E020, (void (*)(void))sub_100083580);
  sub_10004B360();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    sub_1000837D8((uint64_t)(v4 + 1), (uint64_t)v14, &qword_10022E030);
    sub_1000837D8((uint64_t)v14, (uint64_t)v11, &qword_10022E030);
    char v12 = 1;
    sub_1000835CC();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v11[0]) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_1000837D8((uint64_t)(v4 + 6), (uint64_t)v13, &qword_10022E040);
    sub_1000837D8((uint64_t)v13, (uint64_t)v11, &qword_10022E040);
    char v12 = 3;
    sub_100043478(&qword_100232940);
    sub_100083618(&qword_10022E048);
    sub_10004B360();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v3, v6);
}

void sub_10008096C()
{
  sub_100044DC4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_100043478(&qword_10022DFE0);
  sub_100020DEC();
  __chkstk_darwin(v5);
  sub_100018FA0();
  sub_100049788(v2, v2[3]);
  sub_10008342C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    sub_10004377C((uint64_t)v2);
  }
  else
  {
    sub_100043478(&qword_10022DFF0);
    sub_100083510(&qword_10022DFF8, (void (*)(void))sub_100083478);
    sub_100045DC0();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v6 = v14;
    sub_1000834C4();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v13 = v14;
    LOBYTE(v14) = 2;
    uint64_t v7 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v9 = v8;
    uint64_t v12 = v7;
    sub_100043478(&qword_100232940);
    sub_100083618(&qword_10022E010);
    swift_bridgeObjectRetain();
    sub_100045DC0();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v10 = sub_10004718C();
    v11(v10);
    swift_bridgeObjectRetain();
    sub_10004377C((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v6;
    *(void *)(v4 + 8) = v13;
    *(void *)(v4 + 16) = v15;
    *(unsigned char *)(v4 + 24) = v16;
    *(void *)(v4 + 32) = v12;
    *(void *)(v4 + 40) = v9;
    *(void *)(v4 + 48) = v14;
  }
  sub_100020E2C();
}

Swift::Int sub_100080C50()
{
  return _s14amsengagementd13SQLite3StatusO9hashValueSivg_0(*v0);
}

unint64_t sub_100080C6C()
{
  return sub_100080678(*v0);
}

uint64_t sub_100080C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10008047C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100080C9C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100080670();
  *a1 = result;
  return result;
}

uint64_t sub_100080CC4(uint64_t a1)
{
  unint64_t v2 = sub_10008342C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100080D00(uint64_t a1)
{
  unint64_t v2 = sub_10008342C();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100080D3C@<D0>(uint64_t a1@<X8>)
{
  sub_10008096C();
  if (!v1)
  {
    *(_OWORD *)a1 = v4;
    *(_OWORD *)(a1 + 16) = v5;
    double result = *(double *)&v6;
    *(_OWORD *)(a1 + 32) = v6;
    *(void *)(a1 + 48) = v7;
  }
  return result;
}

uint64_t sub_100080D8C(void *a1)
{
  return sub_100080730(a1);
}

uint64_t sub_100080DD4(int a1, uint64_t a2, char a3, int a4, uint64_t a5, char a6)
{
  if ((a1 ^ a4)) {
    return 0;
  }
  if (a3)
  {
    if ((a6 & 1) == 0) {
      return 0;
    }
  }
  else if ((a6 & 1) != 0 || a2 != a5)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_100080E04(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64656C62616E65 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696D694C657A6973 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100080F00(char a1)
{
  if (a1) {
    return 0x696D694C657A6973;
  }
  else {
    return 0x64656C62616E65;
  }
}

void sub_100080F3C()
{
  sub_100044DC4();
  uint64_t v3 = v2;
  uint64_t v4 = sub_100043478(&qword_10022E0C8);
  sub_100020DEC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100045B24();
  sub_100049788(v3, v3[3]);
  sub_100083D34();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v0) {
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_100020E2C();
}

uint64_t sub_100081068(void *a1)
{
  sub_100043478(&qword_10022E0A8);
  sub_100020DEC();
  __chkstk_darwin(v3);
  uint64_t v4 = a1[3];
  sub_100049788(a1, v4);
  sub_100083D34();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    KeyedDecodingContainer.decode(_:forKey:)();
    sub_100020A0C();
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v6 = sub_100051544();
    v7(v6);
  }
  sub_10004377C((uint64_t)a1);
  return v4 & 1;
}

void sub_1000811C4(int a1, uint64_t a2, char a3, uint64_t a4, int a5, uint64_t a6, char a7)
{
  if (((a1 ^ a5) & 1) == 0)
  {
    if (a3)
    {
      if ((a7 & 1) == 0) {
        return;
      }
    }
    else if ((a7 & 1) != 0 || a2 != a6)
    {
      return;
    }
    sub_1001A3F00();
  }
}

uint64_t sub_1000811F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x655273776F6C6C61 && a2 == 0xEE0065736E6F7073;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E656E6F706D6F63 && a2 == 0xEA00000000007374;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7265746C6966 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_100081370(char a1)
{
  if (!a1) {
    return 0x655273776F6C6C61;
  }
  if (a1 == 1) {
    return 0x6E656E6F706D6F63;
  }
  return 0x7265746C6966;
}

void sub_1000813D4()
{
  sub_100044DC4();
  uint64_t v3 = v2;
  uint64_t v4 = sub_100043478(&qword_10022E0B8);
  sub_100020DEC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100022558();
  sub_100049788(v3, v3[3]);
  sub_100083CE8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v0)
  {
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_100043478(&qword_10022E098);
    sub_100083D80(&qword_10022E0C0);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_100020E2C();
}

void sub_100081574()
{
  sub_100044DC4();
  uint64_t v1 = v0;
  sub_100043478(&qword_10022E088);
  sub_100020DEC();
  __chkstk_darwin(v2);
  sub_100049788(v1, v1[3]);
  sub_100083CE8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  KeyedDecodingContainer.decode(_:forKey:)();
  sub_100020A0C();
  KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  sub_100043478(&qword_10022E098);
  sub_100083D80(&qword_10022E0A0);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v3 = sub_100045D40();
  v4(v3);
  sub_10004377C((uint64_t)v1);
  sub_100020E2C();
}

uint64_t sub_10008173C()
{
  return sub_100080F00(*v0);
}

uint64_t sub_100081744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100080E04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10008176C(uint64_t a1)
{
  unint64_t v2 = sub_100083D34();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000817A8(uint64_t a1)
{
  unint64_t v2 = sub_100083D34();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000817E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100081068(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result & 1;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

void sub_100081820()
{
}

uint64_t sub_100081844(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100080DD4(*a1, *((void *)a1 + 1), a1[16], *a2, *((void *)a2 + 1), a2[16]);
}

uint64_t sub_100081868()
{
  return sub_100081370(*v0);
}

uint64_t sub_100081870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000811F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100081898(uint64_t a1)
{
  unint64_t v2 = sub_100083CE8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000818D4(uint64_t a1)
{
  unint64_t v2 = sub_100083CE8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100081910(uint64_t a1@<X8>)
{
  sub_100081574();
  if (!v1)
  {
    *(unsigned char *)a1 = v3 & 1;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = v5 & 1;
    *(void *)(a1 + 24) = v6;
  }
}

void sub_100081950()
{
}

void sub_100081980(unsigned __int8 *a1, unsigned __int8 *a2)
{
}

void sub_1000819B4()
{
  sub_1000209F4();
  uint64_t v3 = v2;
  type metadata accessor for OS_dispatch_queue.Attributes();
  sub_1000456E0();
  __chkstk_darwin(v4);
  sub_100022558();
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100020DEC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100045B24();
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v1, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v7);
  static DispatchQoS.unspecified.getter();
  sub_1000537C0();
  sub_100043478((uint64_t *)&unk_100231D60);
  sub_100053810();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)(v0 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)(v0 + 24) = &_swiftEmptyDictionarySingleton;
  strcpy((char *)(v0 + 32), "defaults.json");
  *(_WORD *)(v0 + 46) = -4864;
  sub_1000837D8(v3, v0 + OBJC_IVAR____TtC14amsengagementd19AppDefaultsProvider_directoryURL, &qword_10022FB40);
  sub_100020FDC();
}

double sub_100081BB4@<D0>(uint64_t a1@<X8>)
{
  sub_100043478(&qword_10022E068);
  OS_dispatch_queue.sync<A>(execute:)();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  return result;
}

uint64_t sub_100081C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v18 = *(void *)(a1 + 24);
  if (*(void *)(v18 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_10008903C(a2);
    if (v20)
    {
      uint64_t v21 = *(void *)(v18 + 56) + 56 * v19;
      uint64_t v23 = *(void *)v21;
      uint64_t v22 = *(void *)(v21 + 8);
      uint64_t v56 = *(void *)(v21 + 16);
      uint64_t v24 = *(unsigned __int8 *)(v21 + 24);
      uint64_t v26 = *(void *)(v21 + 32);
      uint64_t v25 = *(void *)(v21 + 40);
      uint64_t v27 = *(void *)(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRelease();
      *a3 = v23;
      a3[1] = v22;
      a3[2] = v56;
      a3[3] = v24;
      a3[4] = v26;
      a3[5] = v25;
      a3[6] = v27;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v56 = v3;
  sub_1000827C0(a2, v11, v12, v13, v14, v15, v16, v17, v33, v34, v35, (uint64_t)a3, v37, v38, v39, v40, v41, v42, v43,
    v44);
  sub_100082210();
  uint64_t v29 = v43;
  uint64_t v30 = v44;
  uint64_t v33 = v45;
  uint64_t v35 = v46;
  uint64_t v31 = v48;
  uint64_t v34 = v47;
  uint64_t v32 = v49;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess();
  sub_1000837D8((uint64_t)&v43, (uint64_t)v50, &qword_10022E068);
  if (v50[0])
  {
    v51[0] = v29;
    v51[1] = v30;
    v51[2] = v33;
    char v52 = v35;
    uint64_t v53 = v34;
    uint64_t v54 = v31;
    uint64_t v55 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10008B974();
  }
  else
  {
    sub_10008ABA4(v51, a2);
    sub_100083838(v51);
  }
  swift_endAccess();
  return sub_1000837D8((uint64_t)&v43, v36, &qword_10022E068);
}

uint64_t sub_100081EDC(uint64_t *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(NSObject **)(v2 + 16);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  long long v8 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 40) = v8;
  *(_OWORD *)(v7 + 56) = *((_OWORD *)a1 + 2);
  *(void *)(v7 + 72) = a1[6];
  *(unsigned char *)(v7 + 80) = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100083764;
  *(void *)(v9 + 24) = v7;
  v12[4] = sub_100083784;
  v12[5] = v9;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10001B5AC;
  void v12[3] = &unk_10020E498;
  uint64_t v10 = _Block_copy(v12);
  uint64_t v15 = *a1;
  sub_1000837D8((uint64_t)(a1 + 4), (uint64_t)v14, &qword_10022E060);
  sub_1000837D8((uint64_t)(a1 + 6), (uint64_t)v13, &qword_10022E040);
  swift_retain();
  sub_10008378C((uint64_t)&v15);
  sub_10002AB90((uint64_t)v14);
  sub_10008378C((uint64_t)v13);
  swift_retain();
  swift_release();
  dispatch_sync(v6, v10);
  _Block_release(v10);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000820B0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000827C0(a3, v9, v10, v11, v12, v13, v14, v15, v17[0], v17[1], v17[2], v17[3], v18, v19[0], v19[1], v20[0], v20[1], v20[2], v20[3],
    v20[4]);
  sub_100082A44();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_beginAccess();
  v20[0] = *a2;
  sub_1000837D8((uint64_t)(a2 + 4), (uint64_t)v19, &qword_10022E060);
  sub_1000837D8((uint64_t)(a2 + 6), (uint64_t)&v18, &qword_10022E040);
  sub_10008378C((uint64_t)v20);
  sub_10002AB90((uint64_t)v19);
  sub_10008378C((uint64_t)&v18);
  sub_10008B974();
  return swift_endAccess();
}

void sub_100082210()
{
  sub_1000209F4();
  uint64_t v22 = v1;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_100022558();
  sub_100043478(&qword_10022E560);
  uint64_t v4 = type metadata accessor for LogMessage();
  sub_100044798(v4);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v25 = type metadata accessor for AppDefaultsProvider();
  uint64_t v23 = v0;
  swift_retain();
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_1000448B8();
    sub_100020F04(&v23);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100048BD0(MetatypeMetadata);
    sub_100040C2C();
    sub_100020E44();
    void v28[3] = &type metadata for String;
    v28[0] = v7;
    v28[1] = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100040C2C();
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_1000448B8();
    sub_100020F04(&v23);
    uint64_t v11 = swift_getMetatypeMetadata();
    sub_100048BD0(v11);
    sub_10002CBB4((uint64_t)v28, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v23);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._object = (void *)0x80000001001CB980;
  v12._uint64_t countAndFlagsBits = 0xD000000000000019;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  uint64_t v25 = type metadata accessor for URL();
  sub_10003BAA4(&v23);
  sub_1000456E0();
  (*(void (**)(void))(v13 + 16))();
  LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
  sub_10002CBB4((uint64_t)&v23, &qword_10022F490);
  sub_100042014();
  LogMessage.init(stringInterpolation:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v14 = static os_log_type_t.info.getter();
  sub_10004841C(v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = Data.init(contentsOf:options:)();
  unint64_t v17 = v16;
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_1000836C8();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  sub_10004B278(v15, v17);
  swift_release();
  long long v18 = v24;
  uint64_t v19 = v25;
  long long v20 = v26;
  uint64_t v21 = v27;
  *(void *)uint64_t v22 = v23;
  *(_OWORD *)(v22 + 8) = v18;
  *(void *)(v22 + 24) = v19;
  *(_OWORD *)(v22 + 32) = v20;
  *(void *)(v22 + 48) = v21;
  sub_100020FDC();
}

void sub_1000827C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1000209F4();
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v20;
  char v26 = v25;
  uint64_t v27 = sub_100043478(&qword_10022FB40);
  uint64_t v28 = sub_1000208F0(v27);
  __chkstk_darwin(v28);
  sub_100018FA0();
  uint64_t v29 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v31 = v30;
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v35 = (char *)&a9 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v38 = (char *)&a9 - v37;
  __chkstk_darwin(v36);
  uint64_t v40 = (char *)&a9 - v39;
  sub_100006084(v24 + OBJC_IVAR____TtC14amsengagementd19AppDefaultsProvider_directoryURL, v21);
  if (sub_10004FD40(v21, 1, v29) == 1)
  {
    sub_10002CBB4(v21, &qword_10022FB40);
    sub_10003CE10(v26);
    URL.appendingPathComponent(_:)();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v35, v29);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v40, v21, v29);
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    URL.appendingPathExtension(_:)();
    uint64_t v41 = *(void (**)(char *, uint64_t))(v31 + 8);
    v41(v38, v29);
    v41(v40, v29);
  }
  sub_100020FDC();
}

void sub_100082A44()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  *((void *)&v21 + 1) = type metadata accessor for AppDefaultsProvider();
  *(void *)&long long v20 = v0;
  swift_retain();
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100044E44();
    sub_100020F04(&v20);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_1000485A4(MetatypeMetadata);
    sub_10002CBB4((uint64_t)v24, &qword_10022F490);
    sub_100020E44();
    void v24[3] = &type metadata for String;
    v24[0] = v8;
    v24[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v24, &qword_10022F490);
    sub_1000208D8();
    sub_100046D6C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100044E44();
    sub_100020F04(&v20);
    uint64_t v12 = swift_getMetatypeMetadata();
    sub_1000485A4(v12);
    sub_10002CBB4((uint64_t)v24, &qword_10022F490);
    sub_100020E94();
    sub_100046D6C();
  }
  sub_10004377C((uint64_t)&v20);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._object = (void *)0x80000001001CB960;
  v13._uint64_t countAndFlagsBits = 0xD000000000000018;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  *((void *)&v21 + 1) = type metadata accessor for URL();
  sub_10003BAA4((uint64_t *)&v20);
  sub_1000456E0();
  (*(void (**)(void))(v14 + 16))();
  LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
  sub_10002CBB4((uint64_t)&v20, &qword_10022F490);
  sub_100042014();
  LogMessage.init(stringInterpolation:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v15 = static os_log_type_t.info.getter();
  sub_10004841C(v15);
  swift_bridgeObjectRelease();
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  long long v16 = v2[1];
  long long v20 = *v2;
  long long v21 = v16;
  long long v22 = v2[2];
  uint64_t v23 = *((void *)v2 + 6);
  sub_10008367C();
  uint64_t v17 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v19 = v18;
  swift_release();
  Data.write(to:options:)();
  sub_10004B278(v17, v19);
  sub_100020FDC();
}

uint64_t sub_100082FD4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10002CBB4(v0 + OBJC_IVAR____TtC14amsengagementd19AppDefaultsProvider_directoryURL, &qword_10022FB40);
  return v0;
}

uint64_t sub_10008301C()
{
  sub_100082FD4();
  return swift_deallocClassInstance();
}

uint64_t sub_100083074()
{
  return type metadata accessor for AppDefaultsProvider();
}

uint64_t type metadata accessor for AppDefaultsProvider()
{
  uint64_t result = qword_10022DEF8;
  if (!qword_10022DEF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000830C4()
{
  sub_10008317C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10008317C()
{
  if (!qword_10022DF08)
  {
    type metadata accessor for URL();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10022DF08);
    }
  }
}

uint64_t sub_1000831D4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100083218(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100083280(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 sub_100083310(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_10008332C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100083394(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000833D4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AppDefaults()
{
}

unint64_t sub_10008342C()
{
  unint64_t result = qword_10022DFE8;
  if (!qword_10022DFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022DFE8);
  }
  return result;
}

unint64_t sub_100083478()
{
  unint64_t result = qword_10022E000;
  if (!qword_10022E000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E000);
  }
  return result;
}

unint64_t sub_1000834C4()
{
  unint64_t result = qword_10022E008;
  if (!qword_10022E008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E008);
  }
  return result;
}

uint64_t sub_100083510(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006026C(&qword_10022DFF0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100083580()
{
  unint64_t result = qword_10022E028;
  if (!qword_10022E028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E028);
  }
  return result;
}

unint64_t sub_1000835CC()
{
  unint64_t result = qword_10022E038;
  if (!qword_10022E038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E038);
  }
  return result;
}

uint64_t sub_100083618(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006026C(&qword_100232940);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10008367C()
{
  unint64_t result = qword_10022E050;
  if (!qword_10022E050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E050);
  }
  return result;
}

unint64_t sub_1000836C8()
{
  unint64_t result = qword_10022E058;
  if (!qword_10022E058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E058);
  }
  return result;
}

uint64_t sub_100083714()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 81, 7);
}

uint64_t sub_100083764()
{
  return sub_1000820B0(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), *(unsigned __int8 *)(v0 + 80));
}

uint64_t sub_100083774()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100083784()
{
  return sub_1001891A4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10008378C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000837B8@<X0>(void *a1@<X8>)
{
  return sub_100081C40(*(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t sub_1000837D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100043478(a3);
  sub_1000456E0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t *sub_100083838(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100083870(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppDefaults.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100083988);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppDefaults.CodingKeys()
{
  return &type metadata for AppDefaults.CodingKeys;
}

__n128 initializeWithTake for SQLParameter(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t sub_1000839D4(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[17])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100083A20(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for AppBacklogDefaults()
{
}

uint64_t sub_100083A70()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100083A78(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100083AC0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for JSExtension.Response(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100083B20(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSExtension.Response(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSExtension.Response(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AppEventInfo()
{
}

unint64_t sub_100083BFC()
{
  unint64_t result = qword_10022E070;
  if (!qword_10022E070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E070);
  }
  return result;
}

unint64_t sub_100083C4C()
{
  unint64_t result = qword_10022E078;
  if (!qword_10022E078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E078);
  }
  return result;
}

unint64_t sub_100083C9C()
{
  unint64_t result = qword_10022E080;
  if (!qword_10022E080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E080);
  }
  return result;
}

unint64_t sub_100083CE8()
{
  unint64_t result = qword_10022E090;
  if (!qword_10022E090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E090);
  }
  return result;
}

unint64_t sub_100083D34()
{
  unint64_t result = qword_10022E0B0;
  if (!qword_10022E0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E0B0);
  }
  return result;
}

uint64_t sub_100083D80(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006026C(&qword_10022E098);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppBacklogDefaults.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100083EB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppBacklogDefaults.CodingKeys()
{
  return &type metadata for AppBacklogDefaults.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AppEventInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100083FB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppEventInfo.CodingKeys()
{
  return &type metadata for AppEventInfo.CodingKeys;
}

unint64_t sub_100083FF0()
{
  unint64_t result = qword_10022E0D0;
  if (!qword_10022E0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E0D0);
  }
  return result;
}

unint64_t sub_100084040()
{
  unint64_t result = qword_10022E0D8;
  if (!qword_10022E0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E0D8);
  }
  return result;
}

unint64_t sub_100084090()
{
  unint64_t result = qword_10022E0E0;
  if (!qword_10022E0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E0E0);
  }
  return result;
}

unint64_t sub_1000840E0()
{
  unint64_t result = qword_10022E0E8;
  if (!qword_10022E0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E0E8);
  }
  return result;
}

unint64_t sub_100084130()
{
  unint64_t result = qword_10022E0F0;
  if (!qword_10022E0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E0F0);
  }
  return result;
}

unint64_t sub_100084180()
{
  unint64_t result = qword_10022E0F8;
  if (!qword_10022E0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E0F8);
  }
  return result;
}

uint64_t sub_1000841D0(uint64_t a1, void *a2)
{
  _StringGuts.grow(_:)(86);
  v4._uint64_t countAndFlagsBits = 0x5420455441455243;
  v4._object = (void *)0xED000020454C4241;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = a1;
  v5._object = a2;
  String.append(_:)(v5);
  v6._uint64_t countAndFlagsBits = 10272;
  v6._object = (void *)0xE200000000000000;
  String.append(_:)(v6);
  sub_10004CDEC();
  sub_100048570();
  sub_100048BF0();
  sub_100048570();
  v7._uint64_t countAndFlagsBits = sub_100045DD8();
  String.append(_:)(v7);
  v8._uint64_t countAndFlagsBits = 0x202C424F4C4220;
  v8._object = (void *)0xE700000000000000;
  String.append(_:)(v8);
  v9._uint64_t countAndFlagsBits = sub_1000461D8();
  String.append(_:)(v9);
  v10._uint64_t countAndFlagsBits = 0x52454745544E4920;
  v10._object = (void *)0xEA0000000000202CLL;
  String.append(_:)(v10);
  v11._uint64_t countAndFlagsBits = 0x69646F4D7473616CLL;
  v11._object = (void *)0xEC00000064656966;
  String.append(_:)(v11);
  v12._object = (void *)0x80000001001CB5A0;
  v12._uint64_t countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v12);
  sub_100048BF0();
  v13._uint64_t countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  sub_10004CDEC();
  v14._uint64_t countAndFlagsBits = 10537;
  v14._object = (void *)0xE200000000000000;
  String.append(_:)(v14);
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  SQLDatabase.execute(sql:parameters:)(v15, (Swift::OpaquePointer)&_swiftEmptyArrayStorage);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10008437C(uint64_t a1, char a2)
{
  BOOL v2 = (a2 & 1) == 0;
  if (a2) {
    uint64_t v3 = 0x656D69547473616CLL;
  }
  else {
    uint64_t v3 = 0x53676F6C6B636162;
  }
  if (v2) {
    uint64_t v4 = 0xEB00000000657A69;
  }
  else {
    uint64_t v4 = 0xEC000000656E6F5ALL;
  }
  sub_10004D298(a1, v3, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000843F4@<X0>(char a1@<W0>, _OWORD *a2@<X8>)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x656D69547473616CLL;
  }
  else {
    uint64_t v3 = 0x53676F6C6B636162;
  }
  if (v2) {
    uint64_t v4 = 0xEB00000000657A69;
  }
  else {
    uint64_t v4 = 0xEC000000656E6F5ALL;
  }
  sub_10004D060(v3, v4, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10008446C()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000844A4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000844EC()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100084534()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1000845C4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(_DWORD *)(v4 + 80);
  if (v6 <= 7 && (unint64_t)(v5 + 1) <= 0x18 && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    unsigned int v10 = a2[v5];
    unsigned int v11 = v10 - 4;
    if (v10 >= 4)
    {
      if (v5 <= 3) {
        uint64_t v12 = v5;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a2;
          goto LABEL_18;
        case 2:
          int v13 = *(unsigned __int16 *)a2;
          goto LABEL_18;
        case 3:
          int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_18;
        case 4:
          int v13 = *(_DWORD *)a2;
LABEL_18:
          int v14 = (v13 | (v11 << (8 * v5))) + 4;
          unsigned int v10 = v13 + 4;
          if (v5 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    switch(v10)
    {
      case 1u:
        (*(void (**)(void *))(v4 + 16))(a1);
        char v15 = 1;
        goto LABEL_25;
      case 2u:
        (*(void (**)(void *))(v4 + 16))(a1);
        char v15 = 2;
        goto LABEL_25;
      case 3u:
        (*(void (**)(void *))(v4 + 16))(a1);
        char v15 = 3;
LABEL_25:
        *((unsigned char *)v3 + v5) = v15;
        break;
      default:
        (*(void (**)(void *))(v4 + 16))(a1);
        *((unsigned char *)v3 + v5) = 0;
        break;
    }
  }
  else
  {
    uint64_t v9 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return v3;
}

uint64_t sub_10008479C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1000847C8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unsigned int v5 = a2[v4];
  if (v5 >= 4)
  {
    if (v4 <= 3) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a2;
        goto LABEL_10;
      case 2:
        int v7 = *(unsigned __int16 *)a2;
        goto LABEL_10;
      case 3:
        int v7 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_10;
      case 4:
        int v7 = *(_DWORD *)a2;
LABEL_10:
        int v8 = (v7 | ((v5 - 4) << (8 * v4))) + 4;
        char v9 = v7 + 4;
        if (v4 >= 4) {
          LOBYTE(v5) = v9;
        }
        else {
          LOBYTE(v5) = v8;
        }
        break;
      default:
        break;
    }
  }
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
  *(unsigned char *)(a1 + v4) = v5;
  return a1;
}

unsigned __int8 *sub_1000848E0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 + 64);
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v9 = a2[v8];
    if (v9 >= 4)
    {
      if (v8 <= 3) {
        uint64_t v10 = v8;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a2;
          goto LABEL_11;
        case 2:
          int v11 = *(unsigned __int16 *)a2;
          goto LABEL_11;
        case 3:
          int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_11;
        case 4:
          int v11 = *(_DWORD *)a2;
LABEL_11:
          int v12 = (v11 | ((v9 - 4) << (8 * v8))) + 4;
          char v13 = v11 + 4;
          if (v8 >= 4) {
            LOBYTE(v9) = v13;
          }
          else {
            LOBYTE(v9) = v12;
          }
          break;
        default:
          break;
      }
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v5);
    a1[v8] = v9;
  }
  return a1;
}

uint64_t sub_100084A40(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unsigned int v5 = a2[v4];
  if (v5 >= 4)
  {
    if (v4 <= 3) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a2;
        goto LABEL_10;
      case 2:
        int v7 = *(unsigned __int16 *)a2;
        goto LABEL_10;
      case 3:
        int v7 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_10;
      case 4:
        int v7 = *(_DWORD *)a2;
LABEL_10:
        int v8 = (v7 | ((v5 - 4) << (8 * v4))) + 4;
        char v9 = v7 + 4;
        if (v4 >= 4) {
          LOBYTE(v5) = v9;
        }
        else {
          LOBYTE(v5) = v8;
        }
        break;
      default:
        break;
    }
  }
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
  *(unsigned char *)(a1 + v4) = v5;
  return a1;
}

unsigned __int8 *sub_100084B58(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 + 64);
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v9 = a2[v8];
    if (v9 >= 4)
    {
      if (v8 <= 3) {
        uint64_t v10 = v8;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a2;
          goto LABEL_11;
        case 2:
          int v11 = *(unsigned __int16 *)a2;
          goto LABEL_11;
        case 3:
          int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_11;
        case 4:
          int v11 = *(_DWORD *)a2;
LABEL_11:
          int v12 = (v11 | ((v9 - 4) << (8 * v8))) + 4;
          char v13 = v11 + 4;
          if (v8 >= 4) {
            LOBYTE(v9) = v13;
          }
          else {
            LOBYTE(v9) = v12;
          }
          break;
        default:
          break;
      }
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v5);
    a1[v8] = v9;
  }
  return a1;
}

uint64_t sub_100084CB8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_20;
  }
  uint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 252) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    if (v8 < 2)
    {
LABEL_20:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 4) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_20;
  }
LABEL_12:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 253;
}

void sub_100084DE0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFD)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 252) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFC)
  {
    unsigned int v9 = a2 - 253;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_32:
        __break(1u);
        JUMPOUT(0x100084F98);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_21;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_20;
      case 3:
        goto LABEL_32;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_21;
      default:
LABEL_20:
        if (a2) {
LABEL_21:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_100084FC0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  uint64_t v3 = a1[v2];
  int v4 = v3 - 4;
  if (v3 >= 4)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_10;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_10;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_10;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_10:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 4;
        LODWORD(v3) = v6 + 4;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_10008506C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (a2 > 3)
  {
    unsigned int v5 = a2 - 4;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 4;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 4;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for AppReference()
{
  return sub_10008034C();
}

uint64_t sub_100085150(uint64_t a1, void *a2)
{
  _StringGuts.grow(_:)(55);
  v4._uint64_t countAndFlagsBits = 0x5420455441455243;
  v4._object = (void *)0xED000020454C4241;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = a1;
  v5._object = a2;
  String.append(_:)(v5);
  v6._uint64_t countAndFlagsBits = 10272;
  v6._object = (void *)0xE200000000000000;
  String.append(_:)(v6);
  sub_1000448D4();
  sub_1000461F4();
  v7._uint64_t countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v7);
  sub_100044F30();
  v8._uint64_t countAndFlagsBits = 0x202C4C41455220;
  v8._object = (void *)0xE700000000000000;
  String.append(_:)(v8);
  sub_1000498D4();
  v9._uint64_t countAndFlagsBits = 0x29424F4C4220;
  v9._object = (void *)0xE600000000000000;
  String.append(_:)(v9);
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  SQLDatabase.execute(sql:parameters:)(v10, (Swift::OpaquePointer)&_swiftEmptyArrayStorage);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100085280()
{
  sub_10004662C();
  swift_bridgeObjectRelease();
  sub_10004CE10();
  int v0 = sub_10004DC64();
  sub_10004AAE4(v0, v1, v2, v3, v4, v5, v6, v7, v11[0], v11[1], v11[2], v11[3], v12, (uint64_t)v13, (uint64_t)v14, (uint64_t)v15, v16);
  swift_bridgeObjectRelease();
  uint64_t v8 = v17;
  *(unsigned char *)(swift_allocObject() + 16) = 0;
  Swift::String v9 = (void *)swift_allocObject();
  uint64_t v12 = v8;
  char v13 = _swiftEmptyArrayStorage;
  int v14 = sub_100087F38;
  char v15 = sub_100021018(v9);
  swift_retain();
  swift_retain();
  sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)v11);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_10008538C()
{
  sub_10004662C();
  swift_bridgeObjectRelease();
  sub_10004CE10();
  int v0 = sub_10004DC64();
  sub_10004AAE4(v0, v1, v2, v3, v4, v5, v6, v7, v11[0], v11[1], v11[2], v11[3], v12, (uint64_t)v13, (uint64_t)v14, (uint64_t)v15, v16);
  swift_bridgeObjectRelease();
  uint64_t v8 = v17;
  *(unsigned char *)(swift_allocObject() + 16) = 0;
  Swift::String v9 = (void *)swift_allocObject();
  uint64_t v12 = v8;
  char v13 = _swiftEmptyArrayStorage;
  int v14 = sub_100087E3C;
  char v15 = sub_100021018(v9);
  swift_retain();
  swift_retain();
  sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)v11);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_100085498(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t (*a6)(void), void (*a7)(uint64_t, char *), uint64_t (*a8)(void))
{
  unint64_t v76 = a8;
  uint64_t v77 = a7;
  uint64_t v78 = a5;
  uint64_t v79 = a3;
  uint64_t v80 = a2;
  BOOL v81 = a4;
  uint64_t v11 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v11 - 8);
  char v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a6(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v65 - v15;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  long long v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v65 - v23;
  __chkstk_darwin(v22);
  char v26 = (char *)&v65 - v25;
  uint64_t v27 = sub_10003F9D0();
  if (v8) {
    return a1 & 1;
  }
  uint64_t v29 = v28;
  unint64_t v69 = v24;
  long long v70 = v21;
  uint64_t v71 = v26;
  uint64_t v72 = v16;
  uint64_t v30 = v81;
  uint64_t v73 = v18;
  uint64_t v75 = v27;
  uint64_t v74 = v13;
  sub_10004B6C0(&v84);
  uint64_t v68 = v29;
  unint64_t v32 = *((void *)&v84 + 1);
  uint64_t v31 = v84;
  sub_10003F764();
  uint64_t v67 = v31;
  uint64_t v35 = v80;
  if (v32 >> 60 != 15)
  {
    char v36 = v33;
    uint64_t v37 = v67;
    sub_10004EA44(v67, v32);
    sub_10004B7AC(6, &v84);
    if (v85)
    {
      unint64_t v66 = v32;
      sub_100043478(&qword_10022D7B0);
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        uint64_t v38 = v82[0];
        if (v36)
        {
          uint64_t v56 = v69;
          static Date.now.getter();
          Date.timeIntervalSinceReferenceDate.getter();
          uint64_t v40 = v73;
          uint64_t v39 = v17;
          (*(void (**)(char *, uint64_t))(v73 + 8))(v56, v17);
        }
        else
        {
          uint64_t v39 = v17;
          uint64_t v40 = v73;
        }
        Swift::String v57 = v77;
        uint64_t v58 = v71;
        Date.init(timeIntervalSinceReferenceDate:)();
        uint64_t v59 = v70;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v70, v58, v39);
        uint64_t v60 = (uint64_t)v72;
        v57(v38, v59);
        a1 = v30(v60);
        uint64_t v61 = v67;
        unint64_t v62 = v66;
        sub_10004B6AC(v67, v66);
        sub_10004B6AC(v61, v62);
        sub_100087E8C(v60, v76);
        uint64_t v63 = sub_100048C0C();
        v64(v63);
        return a1 & 1;
      }
      unint64_t v32 = v66;
      sub_10004B6AC(v67, v66);
    }
    else
    {
      sub_10004B6AC(v37, v32);
      sub_1000423CC((uint64_t)&v84);
    }
  }
  sub_10002CAAC();
  if ((*(unsigned char *)(v35 + 16) & 1) == 0)
  {
    swift_beginAccess();
    *(unsigned char *)(v35 + 16) = 1;
    if (qword_10022C468 != -1) {
      swift_once();
    }
    uint64_t v41 = qword_1002440D0;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v85 = type metadata accessor for AppSchedulesTable();
    *(void *)&long long v84 = v79;
    swift_retain();
    id v42 = (id)AMSLogKey();
    if (v42)
    {
      uint64_t v43 = v42;
      uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      BOOL v81 = (uint64_t (*)(uint64_t))v41;
      uint64_t v46 = v45;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v47._uint64_t countAndFlagsBits = 0;
      v47._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v47);
      sub_100049788(&v84, v85);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v82[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v82);
      v49._uint64_t countAndFlagsBits = 5972026;
      v49._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v49);
      uint64_t MetatypeMetadata = &type metadata for String;
      v82[0] = v44;
      v82[1] = v46;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v82);
      v50._uint64_t countAndFlagsBits = 93;
      v50._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v50);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v51._uint64_t countAndFlagsBits = 0;
      v51._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v51);
      sub_100049788(&v84, v85);
      uint64_t v52 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v82[0] = v52;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v82);
      v53._uint64_t countAndFlagsBits = 58;
      v53._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v53);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v84);
    LogMessage.init(stringLiteral:)();
    uint64_t v54 = static os_log_type_t.error.getter();
    sub_10004841C(v54);
    swift_bridgeObjectRelease();
  }
  uint64_t v55 = v67;
  if (v68)
  {
    sub_1000875E4(v75, v68);
    sub_10004B6AC(v55, v32);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10004B6AC(v67, v32);
  }
  a1 = 1;
  return a1 & 1;
}

uint64_t sub_100085C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = v3;
  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease();
  sub_10004CE10();
  uint64_t v29 = v7;
  unint64_t v30 = 0x80000001001CBB90;
  uint64_t v9 = v3[3];
  uint64_t v8 = (void *)v3[4];
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = v9;
  v10._object = v8;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  sub_100049350(0x570Au);
  sub_1000448D4();
  sub_10004716C();
  uint64_t v11 = v29;
  sub_100043478(&qword_10022D780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  *(unsigned char *)(inited + 48) = 3;
  sub_100043478(&qword_10022E6E0);
  uint64_t v13 = swift_allocBox();
  uint64_t v15 = v14;
  uint64_t v16 = type metadata accessor for ScheduleInfo(0);
  sub_100021AC0(v15, 1, 1, v16);
  uint64_t v17 = v3[2];
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v4;
  *(void *)(v18 + 24) = v13;
  uint64_t v23 = v17;
  uint64_t v24 = v11;
  unint64_t v25 = 0x80000001001CBB90;
  uint64_t v26 = inited;
  uint64_t v27 = sub_100087D38;
  uint64_t v28 = v18;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v19 = v31;
  sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)v22);
  if (v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002CAAC();
    sub_100087D58(v15, a3);
  }
  return swift_release();
}

uint64_t sub_100085E68(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = a2;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  int v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100043478(&qword_10022E6E0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v46 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v46 - v16;
  uint64_t v18 = swift_projectBox();
  uint64_t v19 = v55;
  sub_10004B6C0(&v58);
  if (v19) {
    return 0;
  }
  Swift::String v49 = v15;
  Swift::String v50 = (uint64_t (**)(void))v12;
  Swift::String v51 = v17;
  uint64_t v52 = v9;
  uint64_t v48 = v18;
  Swift::String v53 = v7;
  uint64_t v20 = v54;
  uint64_t v55 = v4;
  long long v21 = v58;
  sub_10003F764();
  uint64_t v47 = v21;
  if (*((void *)&v21 + 1) >> 60 != 15)
  {
    char v23 = v22;
    sub_10004EA44(v47, *((unint64_t *)&v21 + 1));
    sub_10004B7AC(6, &v58);
    if (v59)
    {
      sub_100043478(&qword_10022D7B0);
      if (swift_dynamicCast())
      {
        if (v23)
        {
          uint64_t v40 = v49;
          static Date.now.getter();
          Date.timeIntervalSinceReferenceDate.getter();
          uint64_t v25 = v52;
          (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v8);
          uint64_t v24 = v53;
        }
        else
        {
          uint64_t v25 = v52;
          uint64_t v24 = v53;
        }
        uint64_t v41 = v50;
        id v42 = v51;
        Date.init(timeIntervalSinceReferenceDate:)();
        (*(void (**)(uint64_t (**)(void), char *, uint64_t))(v25 + 16))(v41, v42, v8);
        sub_1001659F4(v21, v41, v24);
        uint64_t v43 = v47;
        (*(void (**)(char *, uint64_t))(v25 + 8))(v42, v8);
        sub_10004B6AC(v43, *((unint64_t *)&v21 + 1));
        sub_10004B6AC(v43, *((unint64_t *)&v21 + 1));
        uint64_t v44 = type metadata accessor for ScheduleInfo(0);
        sub_100021AC0((uint64_t)v24, 0, 1, v44);
        uint64_t v45 = v48;
        swift_beginAccess();
        sub_100087DC0((uint64_t)v24, v45);
        return 0;
      }
      sub_10004B6AC(v47, *((unint64_t *)&v21 + 1));
    }
    else
    {
      sub_10004B6AC(v21, *((unint64_t *)&v21 + 1));
      sub_1000423CC((uint64_t)&v58);
    }
  }
  unint64_t v46 = *((void *)&v21 + 1);
  if (qword_10022C468 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v59 = type metadata accessor for AppSchedulesTable();
  *(void *)&long long v58 = v20;
  swift_retain();
  id v26 = (id)AMSLogKey();
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v30 = v29;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v31._uint64_t countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    sub_100049788(&v58, v59);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v56[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v56);
    v33._uint64_t countAndFlagsBits = 5972026;
    v33._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v33);
    uint64_t MetatypeMetadata = &type metadata for String;
    v56[0] = v28;
    v56[1] = v30;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v56);
    v34._uint64_t countAndFlagsBits = 93;
    v34._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v34);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v35._uint64_t countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    sub_100049788(&v58, v59);
    uint64_t v36 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v56[0] = v36;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v56);
    v37._uint64_t countAndFlagsBits = 58;
    v37._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v58);
  LogMessage.init(stringLiteral:)();
  uint64_t v38 = static os_log_type_t.error.getter();
  sub_10004841C(v38);
  sub_10004B6AC(v47, v46);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000864D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v32 = a1;
    uint64_t v37 = v1;
    sub_100027304(0, v2, 0);
    uint64_t v3 = 0;
    int v4 = _swiftEmptyArrayStorage;
    uint64_t v5 = _swiftEmptyArrayStorage[2];
    uint64_t v6 = 2 * v5;
    do
    {
      Swift::String v35 = v4;
      unint64_t v7 = v4[3];
      uint64_t v8 = v5 + v3 + 1;
      if (v5 + v3 >= v7 >> 1)
      {
        sub_100027304(v7 > 1, v5 + v3 + 1, 1);
        int v4 = v35;
      }
      ++v3;
      void v4[2] = v8;
      uint64_t v9 = &v4[v6];
      v9[4] = 63;
      void v9[5] = 0xE100000000000000;
      v6 += 2;
    }
    while (v2 != v3);
    sub_100043478(&qword_100232940);
    sub_10007865C();
    v33._uint64_t countAndFlagsBits = BidirectionalCollection<>.joined(separator:)();
    v33._object = v10;
    swift_release();
    Swift::String v35 = _swiftEmptyArrayStorage;
    sub_1000732D8(0, v2, 0);
    uint64_t v11 = _swiftEmptyArrayStorage;
    uint64_t v12 = (uint64_t *)(v32 + 40);
    do
    {
      uint64_t v13 = *(v12 - 1);
      uint64_t v14 = *v12;
      Swift::String v35 = v11;
      unint64_t v16 = v11[2];
      unint64_t v15 = v11[3];
      swift_bridgeObjectRetain();
      if (v16 >= v15 >> 1)
      {
        sub_1000732D8(v15 > 1, v16 + 1, 1);
        uint64_t v11 = v35;
      }
      v12 += 2;
      void v11[2] = v16 + 1;
      uint64_t v17 = &v11[3 * v16];
      uint64_t v17[4] = v13;
      v17[5] = v14;
      *((unsigned char *)v17 + 48) = 3;
      --v2;
    }
    while (v2);
    _StringGuts.grow(_:)(43);
    swift_bridgeObjectRelease();
    sub_10004CE10();
    Swift::String v35 = v18;
    unint64_t v36 = 0x80000001001CBB90;
    uint64_t v19 = v34;
    uint64_t v20 = *(void *)(v34 + 24);
    long long v21 = *(void **)(v34 + 32);
    swift_bridgeObjectRetain();
    v22._uint64_t countAndFlagsBits = v20;
    v22._object = v21;
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    sub_100049350(0x570Au);
    sub_1000448D4();
    v23._uint64_t countAndFlagsBits = 0x28204E490ALL;
    v23._object = (void *)0xE500000000000000;
    String.append(_:)(v23);
    String.append(_:)(v33);
    swift_bridgeObjectRelease();
    v24._uint64_t countAndFlagsBits = 15145;
    v24._object = (void *)0xE200000000000000;
    String.append(_:)(v24);
    uint64_t v25 = v35;
    uint64_t v26 = swift_allocObject();
    type metadata accessor for ScheduleInfo(0);
    *(void *)(v26 + 16) = Dictionary.init(dictionaryLiteral:)();
    uint64_t v27 = *(void *)(v19 + 16);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v19;
    *(void *)(v28 + 24) = v26;
    _OWORD v31[2] = v27;
    void v31[3] = v25;
    void v31[4] = 0x80000001001CBB90;
    v31[5] = v11;
    v31[6] = sub_100087CB0;
    v31[7] = __chkstk_darwin(v28);
    swift_retain();
    uint64_t v29 = v37;
    sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)v31);
    if (v29)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_10002CAAC();
      uint64_t v27 = *(void *)(v26 + 16);
      swift_bridgeObjectRetain();
    }
    swift_release();
    return v27;
  }
  else
  {
    type metadata accessor for ScheduleInfo(0);
    return Dictionary.init(dictionaryLiteral:)();
  }
}

uint64_t sub_10008689C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v67 = a2;
  uint64_t v66 = a3;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100043478(&qword_10022E6E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ScheduleInfo(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v65 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v55 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v55 - v19;
  uint64_t v21 = v68;
  uint64_t v22 = sub_10003F9D0();
  if (v21) {
    return v9 & 1;
  }
  uint64_t v60 = v18;
  uint64_t v61 = v15;
  uint64_t v58 = v22;
  uint64_t v59 = v9;
  uint64_t v63 = v11;
  id v64 = v20;
  uint64_t v68 = v23;
  unint64_t v62 = v8;
  uint64_t v24 = v67;
  sub_10004B6C0(&v71);
  Swift::String v57 = v5;
  long long v25 = v71;
  sub_10003F764();
  long long v56 = v25;
  if (*((void *)&v25 + 1) >> 60 != 15)
  {
    uint64_t v28 = v24;
    if (!v68) {
      goto LABEL_12;
    }
    char v29 = v26;
    unint64_t v31 = *((void *)&v56 + 1);
    uint64_t v30 = v56;
    sub_10004EA44(v56, *((unint64_t *)&v56 + 1));
    sub_10004B7AC(6, &v71);
    if (!v72)
    {
      sub_10004B6AC(v30, v31);
      swift_bridgeObjectRelease();
      sub_1000423CC((uint64_t)&v71);
      goto LABEL_6;
    }
    sub_100043478(&qword_10022D7B0);
    if (swift_dynamicCast())
    {
      uint64_t v32 = v69[0];
      if (v29)
      {
        Swift::String v49 = v60;
        static Date.now.getter();
        Date.timeIntervalSinceReferenceDate.getter();
        uint64_t v34 = v65;
        uint64_t v33 = v12;
        (*(void (**)(char *, uint64_t))(v65 + 8))(v49, v12);
      }
      else
      {
        uint64_t v33 = v12;
        uint64_t v34 = v65;
      }
      uint64_t v9 = (uint64_t)v61;
      uint64_t v50 = (uint64_t)v62;
      Swift::String v51 = v64;
      Date.init(timeIntervalSinceReferenceDate:)();
      (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v9, v51, v33);
      uint64_t v52 = v63;
      sub_1001659F4(v32, (uint64_t (**)(void))v9, v63);
      uint64_t v53 = v56;
      sub_100087CD0((uint64_t)v52, v50);
      LOBYTE(v9) = 1;
      sub_100021AC0(v50, 0, 1, v59);
      swift_beginAccess();
      sub_1000883B8(v50, v58, v68);
      swift_endAccess();
      unint64_t v54 = *((void *)&v56 + 1);
      sub_10004B6AC(v53, *((unint64_t *)&v56 + 1));
      sub_10004B6AC(v53, v54);
      sub_100087E8C((uint64_t)v52, type metadata accessor for ScheduleInfo);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v64, v33);
      return v9 & 1;
    }
    sub_10004B6AC(v56, *((unint64_t *)&v56 + 1));
  }
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v28 = v24;
LABEL_12:
  if (qword_10022C468 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v72 = type metadata accessor for AppSchedulesTable();
  *(void *)&long long v71 = v28;
  swift_retain();
  id v35 = (id)AMSLogKey();
  unint64_t v36 = *((void *)&v56 + 1);
  if (v35)
  {
    uint64_t v37 = v35;
    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v40 = v39;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v41._uint64_t countAndFlagsBits = 0;
    v41._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v41);
    sub_100049788(&v71, v72);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v69[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v69);
    v43._uint64_t countAndFlagsBits = 5972026;
    v43._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v43);
    uint64_t MetatypeMetadata = &type metadata for String;
    v69[0] = v38;
    v69[1] = v40;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v69);
    v44._uint64_t countAndFlagsBits = 93;
    v44._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v44);
    unint64_t v36 = *((void *)&v56 + 1);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v45._uint64_t countAndFlagsBits = 0;
    v45._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v45);
    sub_100049788(&v71, v72);
    uint64_t v46 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v69[0] = v46;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v69);
    v47._uint64_t countAndFlagsBits = 58;
    v47._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v47);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v71);
  LogMessage.init(stringLiteral:)();
  uint64_t v48 = static os_log_type_t.error.getter();
  sub_10004841C(v48);
  sub_10004B6AC(v56, v36);
  swift_bridgeObjectRelease();
  LOBYTE(v9) = 0;
  return v9 & 1;
}

uint64_t sub_100087024(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  void v16[8] = 0xD000000000000017;
  v16[9] = 0x80000001001CBB50;
  uint64_t v6 = v2[3];
  uint64_t v7 = (void *)v2[4];
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = v6;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  sub_100049350(0x570Au);
  sub_1000448D4();
  v9._uint64_t countAndFlagsBits = 0x3F2820454B494C0ALL;
  v9._object = (void *)0xEA00000000003B29;
  String.append(_:)(v9);
  sub_100043478(&qword_10022D780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  *(unsigned char *)(inited + 48) = 3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = _swiftEmptyArrayStorage;
  uint64_t v12 = v2[2];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v3;
  *(void *)(v13 + 24) = v11;
  _OWORD v16[2] = v12;
  void v16[3] = 0xD000000000000017;
  void v16[4] = 0x80000001001CBB50;
  void v16[5] = inited;
  v16[6] = sub_100087C8C;
  v16[7] = v13;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v14 = v16[19];
  sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)v16);
  if (v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002CAAC();
    uint64_t v12 = *(void *)(v11 + 16);
    swift_bridgeObjectRetain();
  }
  swift_release();
  return v12;
}

BOOL sub_10008723C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10003F9D0();
  if (!v3)
  {
    uint64_t v10 = v9;
    BOOL v4 = v9 != 0;
    if (v9)
    {
      uint64_t v11 = v8;
      swift_beginAccess();
      sub_1000BA3DC();
      uint64_t v12 = *(void *)(*(void *)(a3 + 16) + 16);
      sub_1000BA510(v12);
      uint64_t v13 = *(void *)(a3 + 16);
      *(void *)(v13 + 16) = v12 + 1;
      uint64_t v14 = v13 + 16 * v12;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 40) = v10;
      swift_endAccess();
    }
    else
    {
      if (qword_10022C468 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      uint64_t v15 = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v34 = type metadata accessor for AppSchedulesTable();
      v33[0] = a2;
      swift_retain();
      id v16 = (id)AMSLogKey();
      if (v16)
      {
        uint64_t v17 = v16;
        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v35 = v15;
        uint64_t v19 = v18;
        uint64_t v21 = v20;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v22._uint64_t countAndFlagsBits = 0;
        v22._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v22);
        sub_100049788(v33, v34);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v31[0] = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)v31);
        v24._uint64_t countAndFlagsBits = 5972026;
        v24._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v24);
        uint64_t MetatypeMetadata = &type metadata for String;
        v31[0] = v19;
        v31[1] = v21;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)v31);
        v25._uint64_t countAndFlagsBits = 93;
        v25._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v25);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v26._uint64_t countAndFlagsBits = 0;
        v26._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v26);
        sub_100049788(v33, v34);
        uint64_t v27 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v31[0] = v27;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)v31);
        v28._uint64_t countAndFlagsBits = 58;
        v28._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v28);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v33);
      LogMessage.init(stringLiteral:)();
      uint64_t v29 = static os_log_type_t.error.getter();
      sub_10004841C(v29);
      swift_bridgeObjectRelease();
    }
  }
  return v4;
}

uint64_t sub_1000875E4(uint64_t a1, uint64_t a2)
{
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  sub_1000485E0();
  LOBYTE(v24._countAndFlagsBits) = v4;
  v24._object = v5;
  int v6 = swift_bridgeObjectRetain();
  sub_10004AAE4(v6, v7, v8, v9, v10, v11, v12, v13, v16, v17, v18, v19, v20, v21, v22, v23, v24._countAndFlagsBits);
  swift_bridgeObjectRelease();
  sub_100049350(0x5720u);
  sub_1000448D4();
  sub_10004716C();
  sub_100043478(&qword_10022D780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  *(unsigned char *)(inited + 48) = 3;
  swift_bridgeObjectRetain();
  SQLDatabase.execute(sql:parameters:)(v24, (Swift::OpaquePointer)inited);
  swift_setDeallocating();
  sub_1000500CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100087700(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v29 = result;
    uint64_t v2 = sub_10004B398();
    sub_100027304(v2, v3, v4);
    uint64_t v5 = 0;
    v6._rawValue = v32;
    uint64_t v7 = v32[2];
    uint64_t v8 = 2 * v7;
    do
    {
      unint64_t v9 = v32[3];
      uint64_t v10 = v7 + v5 + 1;
      if (v7 + v5 >= v9 >> 1) {
        sub_100027304(v9 > 1, v7 + v5 + 1, 1);
      }
      ++v5;
      void v32[2] = v10;
      int v11 = &v32[v8];
      uint64_t v11[4] = 63;
      v11[5] = 0xE100000000000000;
      v8 += 2;
    }
    while (v1 != v5);
    sub_100043478(&qword_100232940);
    sub_10007865C();
    v30._uint64_t countAndFlagsBits = BidirectionalCollection<>.joined(separator:)();
    v30._object = v12;
    swift_release();
    uint64_t v13 = sub_10004B398();
    sub_1000732D8(v13, v14, v15);
    uint64_t v16 = (uint64_t *)(v29 + 40);
    do
    {
      uint64_t v17 = *(v16 - 1);
      uint64_t v18 = *v16;
      unint64_t v20 = v32[2];
      unint64_t v19 = v32[3];
      swift_bridgeObjectRetain();
      if (v20 >= v19 >> 1) {
        sub_1000732D8(v19 > 1, v20 + 1, 1);
      }
      v16 += 2;
      void v32[2] = v20 + 1;
      uint64_t v21 = &v32[3 * v20];
      id v21[4] = v17;
      v21[5] = v18;
      *((unsigned char *)v21 + 48) = 3;
      --v1;
    }
    while (v1);
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease();
    sub_1000485E0();
    v33._uint64_t countAndFlagsBits = v22;
    v33._object = v23;
    uint64_t v24 = *(void *)(v31 + 24);
    Swift::String v25 = *(void **)(v31 + 32);
    swift_bridgeObjectRetain();
    v26._uint64_t countAndFlagsBits = v24;
    v26._object = v25;
    String.append(_:)(v26);
    swift_bridgeObjectRelease();
    sub_100049350(0x5720u);
    sub_1000448D4();
    v27._uint64_t countAndFlagsBits = 0x28204E4920;
    v27._object = (void *)0xE500000000000000;
    String.append(_:)(v27);
    String.append(_:)(v30);
    swift_bridgeObjectRelease();
    v28._uint64_t countAndFlagsBits = 15145;
    v28._object = (void *)0xE200000000000000;
    String.append(_:)(v28);
    SQLDatabase.execute(sql:parameters:)(v33, v6);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100087974(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = self;
  sub_100166A28();
  sub_100043478(&qword_10022E6A0);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v29 = 0;
  id v6 = [v4 dataWithPropertyList:isa format:100 options:0 error:&v29];

  id v7 = v29;
  if (v6)
  {
    uint64_t v8 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    id v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    _StringGuts.grow(_:)(54);
    sub_1000461F4();
    String.append(_:)(v11);
    uint64_t v12 = *(void *)(v2 + 24);
    uint64_t v13 = *(void **)(v2 + 32);
    swift_bridgeObjectRetain();
    v14._uint64_t countAndFlagsBits = v12;
    v14._object = v13;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    v15._uint64_t countAndFlagsBits = 10272;
    v15._object = (void *)0xE200000000000000;
    String.append(_:)(v15);
    sub_1000448D4();
    v16._uint64_t countAndFlagsBits = 8236;
    v16._object = (void *)0xE200000000000000;
    String.append(_:)(v16);
    sub_1000498D4();
    v17._uint64_t countAndFlagsBits = 8236;
    v17._object = (void *)0xE200000000000000;
    String.append(_:)(v17);
    sub_100044F30();
    sub_1000461F4();
    v18._uint64_t countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v18);
    uint64_t v20 = (uint64_t)v29;
    unint64_t v19 = (void *)v30;
    sub_100043478(&qword_10022D780);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001C3130;
    uint64_t v22 = a1 + *(int *)(type metadata accessor for ScheduleInfo(0) + 20);
    uint64_t v23 = (void *)(v22 + *(int *)(type metadata accessor for ScheduleInfo.Metadata(0) + 44));
    uint64_t v24 = v23[1];
    *(void *)(inited + 32) = *v23;
    *(void *)(inited + 40) = v24;
    *(unsigned char *)(inited + 48) = 3;
    *(void *)(inited + 56) = v8;
    *(void *)(inited + 64) = v10;
    *(unsigned char *)(inited + 72) = 0;
    swift_bridgeObjectRetain();
    sub_10004EA44(v8, v10);
    static Date.timeIntervalSinceReferenceDate.getter();
    *(void *)(inited + 80) = v25;
    *(void *)(inited + 88) = 0;
    *(unsigned char *)(inited + 96) = 2;
    v26._uint64_t countAndFlagsBits = v20;
    v26._object = v19;
    SQLDatabase.execute(sql:parameters:)(v26, (Swift::OpaquePointer)inited);
    swift_setDeallocating();
    sub_1000500CC();
    swift_bridgeObjectRelease();
    return sub_10004B278(v8, v10);
  }
  else
  {
    Swift::String v28 = v7;
    _convertNSErrorToError(_:)();

    return swift_willThrow();
  }
}

uint64_t type metadata accessor for AppSchedulesTable()
{
  return self;
}

uint64_t sub_100087C50()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

BOOL sub_100087C8C(uint64_t a1)
{
  return sub_10008723C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100087CB0(uint64_t a1)
{
  return sub_10008689C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_100087CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduleInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100087D38(uint64_t a1)
{
  return sub_100085E68(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_100087D58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022E6E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100087DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022E6E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100087E28()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100087E3C(char a1)
{
  return sub_100085498(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40), type metadata accessor for ScheduleInfo.Metadata, (void (*)(uint64_t, char *))sub_100165C78, type metadata accessor for ScheduleInfo.Metadata) & 1;
}

uint64_t sub_100087E8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100087EF0()
{
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100087F38(char a1)
{
  return sub_100085498(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40), type metadata accessor for ScheduleInfo, (void (*)(uint64_t, char *))sub_1001659F4, type metadata accessor for ScheduleInfo) & 1;
}

uint64_t sub_100087F8C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100087FB4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  String.append(_:)(*(Swift::String *)&a1);
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = 95;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = a3;
  v9._object = a4;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  object = v18._object;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  strcpy((char *)&v18, "CREATE INDEX ");
  HIWORD(v18._object) = -4864;
  v11._uint64_t countAndFlagsBits = 1601725545;
  v11._object = object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 542002976;
  v12._object = (void *)0xE400000000000000;
  String.append(_:)(v12);
  v13._uint64_t countAndFlagsBits = a1;
  v13._object = a2;
  String.append(_:)(v13);
  v14._uint64_t countAndFlagsBits = 40;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  v15._uint64_t countAndFlagsBits = a3;
  v15._object = a4;
  String.append(_:)(v15);
  v16._uint64_t countAndFlagsBits = 15145;
  v16._object = (void *)0xE200000000000000;
  String.append(_:)(v16);
  SQLDatabase.execute(sql:parameters:)(v18, (Swift::OpaquePointer)&_swiftEmptyArrayStorage);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100088154()
{
  sub_100087F8C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AppTable()
{
  return self;
}

void sub_1000881AC()
{
}

id sub_100088208()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppURLSession();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100088240(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_100043510((_OWORD *)a1, v4);
    sub_10008B83C();
    return sub_1000434BC(a2);
  }
  else
  {
    sub_10002CC68(a1, &qword_10022F490);
    sub_10008A5B4(v4, a2);
    sub_1000434BC(a2);
    return sub_10002CC68((uint64_t)v4, &qword_10022F490);
  }
}

uint64_t sub_1000882C8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_100028270((long long *)a1, (uint64_t)v4);
    return sub_10008B8A8(v4, a2);
  }
  else
  {
    sub_10002CC68(a1, &qword_10022E690);
    sub_10008A6A8(a2, (uint64_t)v4);
    return sub_10002CC68((uint64_t)v4, &qword_10022E690);
  }
}

uint64_t sub_100088340(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_100043510((_OWORD *)a1, v4);
    return sub_10008B928();
  }
  else
  {
    sub_10002CC68(a1, &qword_10022F490);
    sub_10008A930(a2, v4);
    return sub_10002CC68((uint64_t)v4, &qword_10022F490);
  }
}

uint64_t sub_1000883B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100043478(&qword_10022E6E0);
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100046690();
  type metadata accessor for ScheduleInfo(v8);
  sub_100043B1C();
  __chkstk_darwin(v9);
  if (sub_10004FD40(a1, 1, v10) == 1)
  {
    sub_10002CC68(a1, &qword_10022E6E0);
    sub_10008B1B4(a2, a3, (uint64_t)&unk_10022E6E8, (uint64_t)type metadata accessor for ScheduleInfo, (uint64_t)type metadata accessor for ScheduleInfo, v11, v12, v13, v21, v22);
    swift_bridgeObjectRelease();
    return sub_10002CC68(v3, &qword_10022E6E0);
  }
  else
  {
    uint64_t v15 = sub_10008E6B4();
    sub_100052460(v15, v16, v17, (uint64_t)&unk_10022E6E8, (uint64_t)type metadata accessor for ScheduleInfo, v18, v19, v20, v21, v22);
    return swift_bridgeObjectRelease();
  }
}

void sub_100088538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_10002CAEC();
  a17 = v18;
  a18 = v19;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v26 = sub_100043478(&qword_1002344F0);
  __chkstk_darwin(v26 - 8);
  Swift::String v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for Date();
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10004FD40(v25, 1, v29) == 1)
  {
    sub_10002CC68(v25, &qword_1002344F0);
    uint64_t v33 = sub_10004405C();
    sub_10008AF0C(v33, v34, v35);
    swift_bridgeObjectRelease();
    sub_10002CC68((uint64_t)v28, &qword_1002344F0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v32, v25, v29);
    sub_10008BA14((uint64_t)v32, v23, v21);
    swift_bridgeObjectRelease();
  }
  sub_1000440B4();
}

void sub_1000886B8(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 32) == 1)
  {
    sub_10002CC68(a1, &qword_10022E600);
    sub_10008B084((uint64_t)v4);

    sub_10002CC68((uint64_t)v4, &qword_10022E600);
  }
  else
  {
    long long v3 = *(_OWORD *)(a1 + 16);
    v4[0] = *(_OWORD *)a1;
    v4[1] = v3;
    uint64_t v5 = *(void *)(a1 + 32);
    sub_10008BAA4((uint64_t)v4, a2);
  }
}

uint64_t sub_100088744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100043478(&qword_10022E670);
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100046690();
  type metadata accessor for MercuryCacheUpdateData.DataKind(v8);
  sub_100043B1C();
  __chkstk_darwin(v9);
  if (sub_10004FD40(a1, 1, v10) == 1)
  {
    sub_10002CC68(a1, &qword_10022E670);
    sub_10008B1B4(a2, a3, (uint64_t)&unk_10022E678, (uint64_t)type metadata accessor for MercuryCacheUpdateData.DataKind, (uint64_t)type metadata accessor for MercuryCacheUpdateData.DataKind, v11, v12, v13, v21, v22);
    swift_bridgeObjectRelease();
    return sub_10002CC68(v3, &qword_10022E670);
  }
  else
  {
    uint64_t v15 = sub_10008E6B4();
    sub_100052460(v15, v16, v17, (uint64_t)&unk_10022E678, (uint64_t)type metadata accessor for MercuryCacheUpdateData.DataKind, v18, v19, v20, v21, v22);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000888C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (unint64_t v4 = sub_100042ADC(a1, a2), (v5 & 1) != 0)) {
    return *(unsigned __int8 *)(*(void *)(a3 + 56) + v4);
  }
  else {
    return 2;
  }
}

uint64_t sub_100088908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_100042ADC(a1, a2), (v3 & 1) != 0)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

uint64_t sub_100088950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_100042ADC(a1, a2), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(a3 + 56);
    uint64_t v10 = type metadata accessor for Date();
    sub_100043B1C();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16))(a4, v9 + *(void *)(v11 + 72) * v8, v10);
    uint64_t v12 = a4;
    uint64_t v13 = 0;
    uint64_t v14 = 1;
    uint64_t v15 = v10;
  }
  else
  {
    type metadata accessor for Date();
    uint64_t v12 = sub_10004FC00();
  }
  return sub_100021AC0(v12, v13, v14, v15);
}

double sub_100088A00@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_100088A58(a1, a2, (void (*)(uint64_t))sub_100091934, (uint64_t (*)(uint64_t, Swift::Int))sub_100089690, a3);
}

double sub_100088A2C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_100088A58(a1, a2, (void (*)(uint64_t))sub_100167FD8, (uint64_t (*)(uint64_t, Swift::Int))sub_10008921C, a3);
}

double sub_100088A58@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t (*a4)(uint64_t, Swift::Int)@<X3>, _OWORD *a5@<X8>)
{
  if (*(void *)(a2 + 16) && (uint64_t v6 = sub_100088FA8(a1, a3, a4), (v7 & 1) != 0))
  {
    uint64_t v8 = sub_100020630(v6);
    sub_100043520(v8, v9);
  }
  else
  {
    double result = 0.0;
    *a5 = 0u;
    a5[1] = 0u;
  }
  return result;
}

void *sub_100088ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_100042ADC(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(void **)(*(void *)(a3 + 56) + 8 * v4);
  id v7 = v6;
  return v6;
}

uint64_t sub_100088B04(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_1000890A0((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void *)(*(void *)(a2 + 56) + 8 * v6);
        swift_retain();
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = __CocoaDictionary.lookup(_:)();

  if (!v4) {
    return 0;
  }
  type metadata accessor for MercuryCacheUpdateCoordinator();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v5 = v9;
  swift_unknownObjectRelease();
  return v5;
}

void *sub_100088BD0(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_10008903C(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void **)(*(void *)(a2 + 56) + 8 * v3);
  id v6 = v5;
  return v5;
}

uint64_t sub_100088C1C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_100043670(a1), (v2 & 1) != 0)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

uint64_t sub_100088C60(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_100043670(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void *)(*(void *)(a2 + 56) + 8 * v3);
  swift_errorRetain();
  return v5;
}

uint64_t sub_100088CAC(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_1000890A0((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void *)(*(void *)(a2 + 56) + 8 * v6);
        swift_retain();
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = __CocoaDictionary.lookup(_:)();

  if (!v4) {
    return 0;
  }
  swift_unknownObjectRetain();
  sub_100043478(&qword_10022E638);
  swift_dynamicCast();
  uint64_t v5 = v9;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_100088D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_100042ADC(a1, a2);
    if (v3)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return sub_100022570();
}

uint64_t sub_100088DEC()
{
  type metadata accessor for BadgingNotifier();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = sub_10004405C();
  sub_10008D6B8(v2, v3, v1, v0);
  return swift_release();
}

id sub_100088E54()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithPayload:isa];

  return v2;
}

uint64_t type metadata accessor for BadgingAction()
{
  return self;
}

uint64_t sub_100088F08(uint64_t a1)
{
  return sub_100088FA8(a1, (void (*)(uint64_t))sub_100167FD8, (uint64_t (*)(uint64_t, Swift::Int))sub_10008921C);
}

unint64_t sub_100088F34(int a1)
{
  uint64_t v2 = static Hasher._hash(seed:bytes:count:)();
  return sub_1000895F4(a1, v2);
}

uint64_t sub_100088F7C(uint64_t a1)
{
  return sub_100088FA8(a1, (void (*)(uint64_t))sub_100091934, (uint64_t (*)(uint64_t, Swift::Int))sub_100089690);
}

uint64_t sub_100088FA8(uint64_t a1, void (*a2)(uint64_t), uint64_t (*a3)(uint64_t, Swift::Int))
{
  sub_10004A038();
  a2(a1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v5 = Hasher._finalize()();
  return a3(a1, v5);
}

unint64_t sub_10008903C(unsigned __int8 a1)
{
  sub_10004A038();
  sub_10005A4B0();
  Swift::Int v2 = Hasher._finalize()();
  return sub_1000899A4(a1, v2);
}

unint64_t sub_1000890A0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_100089BB8(a1, v4);
}

void sub_1000890E4()
{
}

unint64_t sub_100089174(uint64_t a1)
{
  uint64_t v2 = static Hasher._hash(seed:_:)();
  return sub_100089CD4(a1, v2);
}

unint64_t sub_1000891B8(Swift::UInt a1)
{
  sub_10004A038();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();
  return sub_100089CD4(a1, v2);
}

unint64_t sub_10008921C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE300000000000000;
      unint64_t v8 = 7368801;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x79726574746162;
          break;
        case 2:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x64657461657263;
          break;
        case 3:
          unint64_t v7 = 0xE900000000000073;
          unint64_t v8 = 0x73616C4361746164;
          break;
        case 4:
          unint64_t v7 = 0xE400000000000000;
          unint64_t v8 = 1702125924;
          break;
        case 5:
          unint64_t v8 = 0x6441734965746164;
          unint64_t v7 = 0xEE00657669747061;
          break;
        case 6:
          unint64_t v7 = 0xE500000000000000;
          unint64_t v8 = 0x79616C6564;
          break;
        case 7:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x73746E657665;
          break;
        case 8:
          unint64_t v8 = 0x696669746E656469;
          unint64_t v7 = 0xEA00000000007265;
          break;
        case 9:
          unint64_t v7 = 0xE500000000000000;
          unint64_t v8 = 0x6563617267;
          break;
        case 0xA:
          unint64_t v7 = 0xE400000000000000;
          unint64_t v8 = 1701869940;
          break;
        case 0xB:
          unint64_t v7 = 0x80000001001CA5C0;
          unint64_t v8 = 0xD000000000000010;
          break;
        case 0xC:
          unint64_t v8 = 0x746972777265766FLL;
          unint64_t v7 = 0xE900000000000065;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE300000000000000;
      unint64_t v10 = 7368801;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE700000000000000;
          unint64_t v10 = 0x79726574746162;
          break;
        case 2:
          unint64_t v9 = 0xE700000000000000;
          unint64_t v10 = 0x64657461657263;
          break;
        case 3:
          unint64_t v9 = 0xE900000000000073;
          unint64_t v10 = 0x73616C4361746164;
          break;
        case 4:
          unint64_t v9 = 0xE400000000000000;
          unint64_t v10 = 1702125924;
          break;
        case 5:
          unint64_t v10 = 0x6441734965746164;
          unint64_t v9 = 0xEE00657669747061;
          break;
        case 6:
          unint64_t v9 = 0xE500000000000000;
          unint64_t v10 = 0x79616C6564;
          break;
        case 7:
          unint64_t v9 = 0xE600000000000000;
          unint64_t v10 = 0x73746E657665;
          break;
        case 8:
          unint64_t v10 = 0x696669746E656469;
          unint64_t v9 = 0xEA00000000007265;
          break;
        case 9:
          unint64_t v9 = 0xE500000000000000;
          unint64_t v10 = 0x6563617267;
          break;
        case 10:
          unint64_t v9 = 0xE400000000000000;
          unint64_t v10 = 1701869940;
          break;
        case 11:
          unint64_t v9 = 0x80000001001CA5C0;
          unint64_t v10 = 0xD000000000000010;
          break;
        case 12:
          unint64_t v10 = 0x746972777265766FLL;
          unint64_t v9 = 0xE900000000000065;
          break;
        default:
          break;
      }
      if (v8 == v10 && v7 == v9) {
        break;
      }
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1000895F4(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_100089690(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE900000000000073;
      uint64_t v8 = 0x79654B6863746162;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x79654B6568636163;
          break;
        case 2:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x64657461657263;
          break;
        case 3:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x73657269707865;
          break;
        case 4:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x617461646174656DLL;
          break;
        case 5:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1752457584;
          break;
        case 6:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x6574617473;
          break;
        case 7:
          uint64_t v8 = 0x6E6564496B736174;
          unint64_t v7 = 0xEE00726569666974;
          break;
        case 8:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x6E6F6973726576;
          break;
        default:
          break;
      }
      uint64_t v9 = 0x79654B6863746162;
      unint64_t v10 = 0xE900000000000073;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE800000000000000;
          uint64_t v9 = 0x79654B6568636163;
          break;
        case 2:
          unint64_t v10 = 0xE700000000000000;
          uint64_t v9 = 0x64657461657263;
          break;
        case 3:
          unint64_t v10 = 0xE700000000000000;
          uint64_t v9 = 0x73657269707865;
          break;
        case 4:
          unint64_t v10 = 0xE800000000000000;
          uint64_t v9 = 0x617461646174656DLL;
          break;
        case 5:
          unint64_t v10 = 0xE400000000000000;
          uint64_t v9 = 1752457584;
          break;
        case 6:
          unint64_t v10 = 0xE500000000000000;
          uint64_t v9 = 0x6574617473;
          break;
        case 7:
          uint64_t v9 = 0x6E6564496B736174;
          unint64_t v10 = 0xEE00726569666974;
          break;
        case 8:
          unint64_t v10 = 0xE700000000000000;
          uint64_t v9 = 0x6E6F6973726576;
          break;
        default:
          break;
      }
      if (v8 == v9 && v7 == v10) {
        break;
      }
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1000899A4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE900000000000073;
      uint64_t v8 = 0x636974796C616E61;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x6C616E7265746E69;
          break;
        case 2:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x7379656E72756F6ALL;
          break;
        case 3:
          uint64_t v8 = 0x6E656D6D6F636572;
          unint64_t v7 = 0xEF736E6F69746164;
          break;
        default:
          break;
      }
      uint64_t v9 = 0x636974796C616E61;
      unint64_t v10 = 0xE900000000000073;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE800000000000000;
          uint64_t v9 = 0x6C616E7265746E69;
          break;
        case 2:
          unint64_t v10 = 0xE800000000000000;
          uint64_t v9 = 0x7379656E72756F6ALL;
          break;
        case 3:
          uint64_t v9 = 0x6E656D6D6F636572;
          unint64_t v10 = 0xEF736E6F69746164;
          break;
        default:
          break;
      }
      if (v8 == v9 && v7 == v10) {
        break;
      }
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_100089BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_10004D510(0, (unint64_t *)&qword_100231E00);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = static NSObject.== infix(_:_:)();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = static NSObject.== infix(_:_:)();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_100089CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

void sub_100089D70()
{
  sub_10002CAEC();
  uint64_t v1 = -1 << *(unsigned char *)(v0 + 32);
  uint64_t v3 = v2 & ~v1;
  sub_10002D3A0();
  if (v4)
  {
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
    if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      goto LABEL_17;
    }
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      uint64_t v11 = ~v1;
      uint64_t v12 = (v3 + 1) & v11;
      sub_10002D3A0();
      if (v13)
      {
        while (1)
        {
          uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v16 = v15;
          if (v14 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v16 == v17) {
            goto LABEL_16;
          }
          sub_1000439C8();
          char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0)
          {
            uint64_t v12 = (v12 + 1) & v11;
            sub_10002D3A0();
            if (v20) {
              continue;
            }
          }
          break;
        }
      }
    }
  }
LABEL_17:
  sub_1000440B4();
}

Swift::Int sub_100089EB8(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void), void (*a5)(unint64_t, uint64_t))
{
  if (!a2)
  {
    swift_unknownObjectRelease();
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }
  sub_100043478(a3);
  uint64_t v7 = static _DictionaryStorage.convert(_:capacity:)();
  uint64_t v22 = v7;
  __CocoaDictionary.makeIterator()();
  uint64_t v8 = __CocoaDictionary.Iterator.next()();
  if (!v8)
  {
LABEL_16:
    swift_release();
    return v7;
  }
  uint64_t v9 = v8;
  sub_10004D510(0, (unint64_t *)&qword_100231E00);
  while (1)
  {
    swift_dynamicCast();
    a4(0);
    swift_dynamicCast();
    uint64_t v7 = v22;
    unint64_t v10 = *(void *)(v22 + 16);
    if (*(void *)(v22 + 24) <= v10)
    {
      a5(v10 + 1, 1);
      uint64_t v7 = v22;
    }
    Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v12 = v7 + 64;
    uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v14 = result & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v7 + 64 + 8 * (v14 >> 6))) == 0) {
      break;
    }
    unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v7 + 64 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(void *)(*(void *)(v7 + 48) + 8 * v16) = v21;
    *(void *)(*(void *)(v7 + 56) + 8 * v16) = v9;
    ++*(void *)(v7 + 16);
    uint64_t v9 = __CocoaDictionary.Iterator.next()();
    if (!v9) {
      goto LABEL_16;
    }
  }
  char v17 = 0;
  unint64_t v18 = (unint64_t)(63 - v13) >> 6;
  while (++v15 != v18 || (v17 & 1) == 0)
  {
    BOOL v19 = v15 == v18;
    if (v15 == v18) {
      unint64_t v15 = 0;
    }
    v17 |= v19;
    uint64_t v20 = *(void *)(v12 + 8 * v15);
    if (v20 != -1)
    {
      unint64_t v16 = __clz(__rbit64(~v20)) + (v15 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

Swift::Int sub_10008A0EC(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    swift_unknownObjectRelease();
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }
  sub_100043478(&qword_10022E660);
  uint64_t v2 = static _DictionaryStorage.convert(_:capacity:)();
  uint64_t v16 = v2;
  __CocoaDictionary.makeIterator()();
  uint64_t v3 = __CocoaDictionary.Iterator.next()();
  if (!v3)
  {
LABEL_16:
    swift_release();
    return v2;
  }
  uint64_t v4 = v3;
  sub_10004D510(0, (unint64_t *)&qword_100231E00);
  while (1)
  {
    swift_dynamicCast();
    sub_100043478(&qword_10022E638);
    swift_dynamicCast();
    uint64_t v2 = v16;
    if (*(void *)(v16 + 24) <= *(void *)(v16 + 16))
    {
      sub_1001A61A0();
      uint64_t v2 = v16;
    }
    Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
    uint64_t v6 = v2 + 64;
    uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v8 = result & ~v7;
    unint64_t v9 = v8 >> 6;
    if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) == 0) {
      break;
    }
    unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(void *)(*(void *)(v2 + 48) + 8 * v10) = v15;
    *(void *)(*(void *)(v2 + 56) + 8 * v10) = v4;
    ++*(void *)(v2 + 16);
    uint64_t v4 = __CocoaDictionary.Iterator.next()();
    if (!v4) {
      goto LABEL_16;
    }
  }
  char v11 = 0;
  unint64_t v12 = (unint64_t)(63 - v7) >> 6;
  while (++v9 != v12 || (v11 & 1) == 0)
  {
    BOOL v13 = v9 == v12;
    if (v9 == v12) {
      unint64_t v9 = 0;
    }
    v11 |= v13;
    uint64_t v14 = *(void *)(v6 + 8 * v9);
    if (v14 != -1)
    {
      unint64_t v10 = __clz(__rbit64(~v14)) + (v9 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

void sub_10008A31C()
{
}

uint64_t sub_10008A338(uint64_t a1, uint64_t a2)
{
  return sub_10008AE5C(a1, a2, &unk_10022E718, &unk_10022E720);
}

uint64_t sub_10008A34C(uint64_t a1, uint64_t a2)
{
  return sub_10008AE5C(a1, a2, &unk_10022E728, &unk_10022E730);
}

#error "10008A3A0: call analysis failed (funcsize=45)"

#error "10008A458: call analysis failed (funcsize=39)"

#error "10008A51C: call analysis failed (funcsize=62)"

#error "10008A610: call analysis failed (funcsize=60)"

double sub_10008A6A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_100088FA8(a1, (void (*)(uint64_t))sub_100167FD8, (uint64_t (*)(uint64_t, Swift::Int))sub_10008921C);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v3;
    uint64_t v9 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    Swift::Int v10 = *(void *)(v9 + 24);
    sub_100043478(&qword_10022E698);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v10);
    sub_100028270((long long *)(*(void *)(v12 + 56) + 40 * v6), a2);
    sub_100043478(&qword_10022E6A0);
    sub_10008E668();
    _NativeDictionary._delete(at:)();
    *uint64_t v3 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void sub_10008A800()
{
}

void sub_10008A81C()
{
  sub_100045DEC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  swift_bridgeObjectRetain();
  sub_100042ADC(v9, v7);
  LOBYTE(v7) = v10;
  swift_bridgeObjectRelease();
  if (v7)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v5;
    uint64_t v12 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    Swift::Int v13 = *(void *)(v12 + 24);
    sub_100043478(v4);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v13);
    swift_bridgeObjectRelease();
    sub_10004D510(0, v2);
    _NativeDictionary._delete(at:)();
    *uint64_t v5 = v14;
    swift_bridgeObjectRelease();
  }
  sub_1000498F8();
}

double sub_10008A930@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_100088FA8(a1, (void (*)(uint64_t))sub_100091934, (uint64_t (*)(uint64_t, Swift::Int))sub_100089690);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v3;
    uint64_t v9 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    Swift::Int v10 = *(void *)(v9 + 24);
    sub_100043478(&qword_10022E6F8);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v10);
    sub_100043510((_OWORD *)(*(void *)(v12 + 56) + 32 * v6), a2);
    sub_10008E750();
    _NativeDictionary._delete(at:)();
    *uint64_t v3 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_10008AA78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100042ADC(a1, a2);
  char v10 = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (v10)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    Swift::Int v14 = *(void *)(v13 + 24);
    sub_100043478(&qword_10022E5A0);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v14);
    swift_bridgeObjectRelease();
    sub_1000549E0(*(void *)(v15 + 56) + 8 * v8, a3);
    sub_100043478(&qword_10022DE00);
    _NativeDictionary._delete(at:)();
    *uint64_t v4 = v15;
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a3 = 0;
  }
  *(unsigned char *)(a3 + 8) = (v10 & 1) == 0;
  return result;
}

#error "10008AC08: call analysis failed (funcsize=63)"

#error "10008ADD4: call analysis failed (funcsize=95)"

uint64_t sub_10008AE48(uint64_t a1, uint64_t a2)
{
  return sub_10008AE5C(a1, a2, &unk_10022E680, &qword_10022E688);
}

#error "10008AEA8: call analysis failed (funcsize=44)"

uint64_t sub_10008AF0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100042ADC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v4;
    uint64_t v11 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    Swift::Int v12 = *(void *)(v11 + 24);
    sub_100043478(&qword_10022E6C0);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v12);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v19 + 56);
    uint64_t v14 = type metadata accessor for Date();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a3, v13 + *(void *)(*(void *)(v14 - 8) + 72) * v8, v14);
    _NativeDictionary._delete(at:)();
    *uint64_t v4 = v19;
    swift_bridgeObjectRelease();
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v14;
  }
  else
  {
    uint64_t v17 = type metadata accessor for Date();
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return sub_100021AC0(v15, v16, 1, v17);
}

double sub_10008B084@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  sub_1000890E4();
  uint64_t v5 = v4;
  char v7 = v6;
  swift_bridgeObjectRelease();
  if (v7)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v2;
    uint64_t v9 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    Swift::Int v10 = *(void *)(v9 + 24);
    sub_100043478(&qword_10022E608);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v10);

    uint64_t v11 = *(void *)(v14 + 56) + 40 * v5;
    long long v12 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v11;
    *(_OWORD *)(a1 + 16) = v12;
    *(void *)(a1 + 32) = *(void *)(v11 + 32);
    type metadata accessor for Name(0);
    sub_100043478((uint64_t *)&unk_10022E610);
    sub_10008E5B8();
    _NativeDictionary._delete(at:)();
    *uint64_t v2 = v14;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(void *)(a1 + 32) = 1;
  }
  return result;
}

uint64_t sub_10008B1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100048C48();
  long long v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = v10;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  swift_bridgeObjectRetain();
  sub_100042ADC(v19, v17);
  LOBYTE(v17) = v20;
  swift_bridgeObjectRelease();
  if (v17)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10004FCCC();
    Swift::Int v23 = *(void *)(v22 + 24);
    sub_100043478(v14);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v23);
    swift_bridgeObjectRelease();
    v12(0);
    sub_100043B1C();
    sub_10008E6B4();
    _NativeDictionary._delete(at:)();
    *uint64_t v15 = a10;
    swift_bridgeObjectRelease();
  }
  else
  {
    v12(0);
    sub_10004FC00();
  }
  sub_100044F80();
  return sub_100021AC0(v24, v25, v26, v27);
}

#error "10008B42C: call analysis failed (funcsize=96)"

#error "10008B59C: call analysis failed (funcsize=86)"

#error "10008B66C: call analysis failed (funcsize=47)"

uint64_t sub_10008B6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_100034F94(a1, a2, a3, (uint64_t)&unk_10022E6B0, (uint64_t)sub_100050618, a6, a7, a8, a9, a10);
}

uint64_t sub_10008B700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_100034F94(a1, a2, a3, (uint64_t)&unk_10022E718, (uint64_t)sub_10008BE74, a6, a7, a8, a9, a10);
}

uint64_t sub_10008B720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_100034F94(a1, a2, a3, (uint64_t)&unk_10022E728, (uint64_t)sub_10008BE74, a6, a7, a8, a9, a10);
}

#error "10008B790: call analysis failed (funcsize=30)"

#error "10008B7FC: call analysis failed (funcsize=27)"

uint64_t sub_10008B824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_10008BDBC(a1, a2, a3, (uint64_t)sub_10008C154, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_10008B83C()
{
  sub_10008E79C();
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v0;
  *uint64_t v0 = 0x8000000000000000;
  sub_10008C224(v2, v1);
  sub_100048048(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10008B8A8(long long *a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_10008C334(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10008B928()
{
  sub_100046D84();
  sub_10004DC88();
  sub_10008C4B0();
  sub_100048048(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10008B974()
{
  sub_100046D84();
  uint64_t v0 = sub_10004DC88();
  unint64_t v3 = sub_10008C5FC(v0, v1, v2);
  sub_100048048(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10008B9C0(uint64_t a1, uint64_t a2)
{
  return sub_10008BBF0(a1, a2, &unk_10022E620, &unk_10022E630, type metadata accessor for MercuryCacheUpdateCoordinator, sub_1001A59D8);
}

uint64_t sub_10008B9FC()
{
  return sub_10008BD38();
}

uint64_t sub_10008BA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  sub_10008C860(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  *unint64_t v3 = v9;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10008BAA4(uint64_t a1, void *a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  *char v2 = 0x8000000000000000;
  sub_10008CAA4(a1, a2, isUniquelyReferenced_nonNull_native);
  *char v2 = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10008BB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100045DEC();
  swift_isUniquelyReferenced_nonNull_native();
  sub_100048C2C();
  sub_10008CBC8();
  *uint64_t v10 = a10;
  sub_1000498F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10008BBB4(uint64_t a1, uint64_t a2)
{
  return sub_10008BBF0(a1, a2, &unk_10022E648, &unk_10022E650, &type metadata accessor for AnyCancellable, sub_1001A6194);
}

#error "10008BC6C: call analysis failed (funcsize=42)"

uint64_t sub_10008BC98()
{
  if ((sub_10008E79C() & 0xC000000000000001) != 0)
  {
    uint64_t result = sub_100043F90();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *uint64_t v0 = sub_10008A0EC(v1, result + 1);
  }
  swift_isUniquelyReferenced_nonNull_native();
  sub_100022768();
  sub_10008CD10();
  sub_100048048(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10008BD20()
{
  return sub_10008BD38();
}

uint64_t sub_10008BD38()
{
  sub_1000471A4();
  char v2 = v1;
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *v0;
  *uint64_t v0 = 0x8000000000000000;
  uint64_t v3 = sub_1000439C8();
  v2(v3);
  *uint64_t v0 = v6;
  sub_10004AB00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10008BDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1000471A4();
  uint64_t v15 = v14;
  sub_100036230();
  sub_100048C2C();
  v15(v13, v12, v11);
  *uint64_t v10 = a10;
  sub_10004AB00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10008BE28()
{
  sub_100046D84();
  uint64_t v0 = sub_10004DC88();
  sub_10008CF3C(v0, v1, v2);
  sub_100048048(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
  return swift_bridgeObjectRelease();
}

void sub_10008BE74()
{
  sub_1000209F4();
  sub_100046660(v4, v5, v6);
  sub_100049370();
  if (v7)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  sub_100046C4C();
  if (sub_10004B3B0())
  {
    sub_100043B38();
    sub_10004BEB4();
    if (!v9) {
      goto LABEL_12;
    }
    uint64_t v2 = v8;
  }
  if (v3)
  {
    uint64_t v10 = *(void *)(*(void *)v1 + 56);
    swift_bridgeObjectRelease();
    *(void *)(v10 + 8 * v2) = v0;
    sub_100020FDC();
  }
  else
  {
    sub_100040C44();
    sub_1000506D8(v11, v12, v13, v14, v15);
    sub_100020FDC();
    swift_bridgeObjectRetain();
  }
}

void sub_10008BF2C()
{
  sub_1000209F4();
  char v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v11 = sub_10003614C(v9, v10, v7);
  sub_100042ADC(v11, v12);
  sub_100049370();
  if (v15)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v16 = v13;
  char v17 = v14;
  sub_100043478(&qword_10022E6C8);
  if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v4 & 1, (Swift::Int)v1))
  {
    uint64_t v18 = sub_1000439C8();
    sub_100042ADC(v18, v19);
    sub_10004BEB4();
    if (!v21) {
      goto LABEL_12;
    }
    unint64_t v16 = v20;
  }
  uint64_t v22 = (void *)*v1;
  if (v17)
  {
    Swift::Int v23 = (uint64_t *)(v22[7] + 16 * v16);
    swift_bridgeObjectRelease();
    *Swift::Int v23 = v2;
    v23[1] = v0;
    sub_100020FDC();
  }
  else
  {
    sub_10008D04C(v16, v8, v6, v2, v0, v22);
    sub_100020FDC();
    swift_bridgeObjectRetain();
  }
}

uint64_t sub_10008C030(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v11 = sub_100042ADC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v16 = v11;
  char v17 = v12;
  sub_100043478(&qword_10022E738);
  uint64_t result = _NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15);
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t result = sub_100042ADC(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_11:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v16 = result;
LABEL_5:
  unint64_t v20 = *v5;
  if (v17)
  {
    *(unsigned char *)(v20[7] + v16) = a1 & 1;
  }
  else
  {
    sub_10008D098(v16, a2, a3, a1 & 1, v20);
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_10008C154()
{
  sub_10002CAEC();
  sub_100046660(v2, v3, v4);
  sub_100049370();
  if (v7)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  uint64_t v8 = v5;
  char v9 = v6;
  sub_100043478(&qword_10022E710);
  if (sub_10004B3B0())
  {
    sub_100043B38();
    sub_10004BEB4();
    if (!v11) {
      goto LABEL_12;
    }
    uint64_t v8 = v10;
  }
  if (v9)
  {
    uint64_t v12 = *(void *)(*(void *)v1 + 56);

    *(void *)(v12 + 8 * v8) = v0;
    sub_1000440B4();
  }
  else
  {
    sub_100040C44();
    sub_1000506D8(v13, v14, v15, v16, v17);
    sub_1000440B4();
    swift_bridgeObjectRetain();
  }
}

void sub_10008C218()
{
}

void sub_10008C224(uint64_t a1, uint64_t a2)
{
  sub_100043670(a2);
  sub_100049370();
  if (v7)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v8 = v5;
  char v9 = v6;
  sub_100043478(qword_10022E218);
  if (sub_100049F68())
  {
    sub_100043670(a2);
    sub_10004A6FC();
    if (!v11) {
      goto LABEL_12;
    }
    unint64_t v8 = v10;
  }
  uint64_t v12 = *v2;
  if (v9)
  {
    sub_10004377C(*(void *)(v12 + 56) + 32 * v8);
    unint64_t v13 = (_OWORD *)sub_100022570();
    sub_100043510(v13, v14);
  }
  else
  {
    sub_1000433B4(a2, (uint64_t)v15);
    sub_10008D0E0(v8, (uint64_t)v15, a1, v12);
  }
}

uint64_t sub_10008C334(long long *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  uint64_t v9 = sub_100088FA8(a2, (void (*)(uint64_t))sub_100167FD8, (uint64_t (*)(uint64_t, Swift::Int))sub_10008921C);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_100043478(&qword_10022E698);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13)) {
    goto LABEL_5;
  }
  uint64_t v16 = sub_100088FA8(a2, (void (*)(uint64_t))sub_100167FD8, (uint64_t (*)(uint64_t, Swift::Int))sub_10008921C);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_13:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = *v4;
  if (v15)
  {
    uint64_t v19 = v18[7] + 40 * v14;
    sub_10004377C(v19);
    return sub_100028270(a1, v19);
  }
  else
  {
    return sub_10008D13C(v14, a2, a1, v18);
  }
}

void sub_10008C4B0()
{
  sub_10002CAEC();
  uint64_t v2 = v1;
  sub_100088FA8(v1, (void (*)(uint64_t))sub_100091934, (uint64_t (*)(uint64_t, Swift::Int))sub_100089690);
  sub_100049370();
  if (v5)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v6 = v3;
  char v7 = v4;
  sub_100043478(&qword_10022E6F8);
  if (!sub_100049F68()) {
    goto LABEL_5;
  }
  uint64_t v8 = sub_100088FA8(v2, (void (*)(uint64_t))sub_100091934, (uint64_t (*)(uint64_t, Swift::Int))sub_100089690);
  if ((v7 & 1) != (v9 & 1))
  {
LABEL_13:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  uint64_t v6 = v8;
LABEL_5:
  if (v7)
  {
    sub_10004377C(*(void *)(*(void *)v0 + 56) + 32 * v6);
    sub_100022570();
    sub_1000440B4();
    sub_100043510(v10, v11);
  }
  else
  {
    sub_1000440B4();
    sub_10008D1A8(v13, v14, v15, v16);
  }
}

unint64_t sub_10008C5FC(uint64_t a1, char a2, char a3)
{
  char v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_10008903C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_100043478(&qword_10022E6F0);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13)) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_10008903C(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    unint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = *v4;
  if (v15)
  {
    uint64_t v19 = v18[7] + 56 * v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
    long long v21 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)a1;
    *(_OWORD *)(v19 + 16) = v21;
    *(_OWORD *)(v19 + 32) = *(_OWORD *)(a1 + 32);
    *(void *)(v19 + 48) = *(void *)(a1 + 48);
  }
  else
  {
    return sub_10008D25C(v14, a2, a1, v18);
  }
  return result;
}

void sub_10008C73C()
{
}

id sub_10008C748(uint64_t a1, void *a2, char a3)
{
  char v4 = (void **)v3;
  char v7 = (void *)*v3;
  sub_1000890E4();
  uint64_t v10 = v7[2];
  BOOL v11 = (v9 & 1) == 0;
  Swift::Int v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v13 = v8;
  char v14 = v9;
  sub_100043478(&qword_10022E708);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v12)) {
    goto LABEL_5;
  }
  sub_1000890E4();
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_11:
    type metadata accessor for AMSBagKey(0);
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v13 = v15;
LABEL_5:
  char v17 = *v4;
  if (v14)
  {
    uint64_t v18 = v17[7];
    id result = (id)swift_unknownObjectRelease();
    *(void *)(v18 + 8 * v13) = a1;
  }
  else
  {
    sub_10008D2BC(v13, (uint64_t)a2, a1, v17);
    return a2;
  }
  return result;
}

uint64_t sub_10008C860(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v11 = sub_100042ADC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v16 = v11;
  char v17 = v12;
  sub_100043478(&qword_10022E6C0);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15)) {
    goto LABEL_5;
  }
  unint64_t v18 = sub_100042ADC(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_13:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v16 = v18;
LABEL_5:
  unint64_t v20 = *v5;
  if (v17)
  {
    uint64_t v21 = v20[7];
    uint64_t v22 = type metadata accessor for Date();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 40);
    uint64_t v25 = v22;
    uint64_t v26 = v21 + *(void *)(v23 + 72) * v16;
    return v24(v26, a1, v25);
  }
  else
  {
    sub_10008D300(v16, a2, a3, a1, v20);
    return swift_bridgeObjectRetain();
  }
}

void sub_10008C9CC()
{
  sub_10002CAEC();
  uint64_t v4 = v3;
  uint64_t v7 = sub_10003614C(v5, v6, v3);
  sub_100089174(v7);
  sub_100049370();
  if (v10)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  uint64_t v11 = v8;
  char v12 = v9;
  sub_100043478((uint64_t *)&unk_10022E740);
  if (sub_10004B3B0())
  {
    sub_100089174(v4);
    sub_10004A6FC();
    if (!v14) {
      goto LABEL_12;
    }
    uint64_t v11 = v13;
  }
  if (v12)
  {
    Swift::Int v15 = (void *)(*(void *)(*(void *)v1 + 56) + 16 * v11);
    swift_bridgeObjectRelease();
    *Swift::Int v15 = v2;
    v15[1] = v0;
    sub_1000440B4();
  }
  else
  {
    sub_100040C44();
    sub_1000440B4();
    sub_10008D3B0(v16, v17, v18, v19, v20);
  }
}

id sub_10008CAA4(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  sub_1000890E4();
  uint64_t v10 = v7[2];
  BOOL v11 = (v9 & 1) == 0;
  Swift::Int v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v13 = v8;
  char v14 = v9;
  sub_100043478(&qword_10022E608);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v12)) {
    goto LABEL_5;
  }
  sub_1000890E4();
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_11:
    type metadata accessor for Name(0);
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v13 = v15;
LABEL_5:
  uint64_t v17 = *v4;
  if (v14) {
    return (id)sub_100054990(a1, v17[7] + 40 * v13, (uint64_t *)&unk_10022E610);
  }
  sub_10008D3F8(v13, (uint64_t)a2, a1, v17);
  return a2;
}

void sub_10008CBC8()
{
  sub_100048C48();
  uint64_t v23 = v1;
  uint64_t v24 = v2;
  uint64_t v4 = v3;
  uint64_t v5 = v0;
  char v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  Swift::Int v14 = *v0;
  sub_100042ADC(v10, v8);
  sub_100049370();
  if (v17)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v18 = v15;
  char v19 = v16;
  sub_100043478(v4);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(v7 & 1, v14)) {
    goto LABEL_5;
  }
  unint64_t v20 = sub_100042ADC(v11, v9);
  if ((v19 & 1) != (v21 & 1))
  {
LABEL_11:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v18 = v20;
LABEL_5:
  if (v19)
  {
    v23(0);
    sub_10008E708();
    sub_100044F80();
  }
  else
  {
    sub_10008D450(v18, v11, v9, v13, *v5, v24);
    sub_100044F80();
    swift_bridgeObjectRetain();
  }
}

void sub_10008CD10()
{
  sub_100045DEC();
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  char v5 = v4;
  uint64_t v7 = v6;
  Swift::Int v8 = *v0;
  uint64_t v22 = v9;
  sub_1000890A0(v9);
  sub_100049370();
  if (v12)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v13 = v10;
  char v14 = v11;
  sub_100043478(v2);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(v5 & 1, v8)) {
    goto LABEL_5;
  }
  unint64_t v15 = sub_1000890A0(v22);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_11:
    sub_10004D510(0, (unint64_t *)&qword_100231E00);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v13 = v15;
LABEL_5:
  uint64_t v17 = *v3;
  if (v14)
  {
    uint64_t v18 = *(void *)(v17 + 56);
    swift_release();
    *(void *)(v18 + 8 * v13) = v7;
    sub_1000498F8();
  }
  else
  {
    sub_10008D4F8(v13, v22, v7, v17);
    sub_1000498F8();
    id v21 = v19;
  }
}

void sub_10008CE20(uint64_t a1, Swift::UInt a2, char a3)
{
  char v4 = (void **)v3;
  Swift::Int v8 = (void *)*v3;
  unint64_t v9 = sub_1000891B8(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_100043478(&qword_10022E5F8);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13)) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_1000891B8(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    type metadata accessor for AMSSubscriptionEntitlementsMediaType(0);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = *v4;
  if (v15)
  {
    uint64_t v19 = v18[7];

    *(void *)(v19 + 8 * v14) = a1;
  }
  else
  {
    sub_10008D2BC(v14, a2, a1, v18);
  }
}

void sub_10008CF30()
{
}

void sub_10008CF3C(uint64_t a1, char a2, char a3)
{
  char v4 = (void **)v3;
  Swift::Int v8 = (void *)*v3;
  unint64_t v9 = sub_10008903C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_100043478(&qword_10022E5C0);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13)) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_10008903C(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = *v4;
  if (v15)
  {
    uint64_t v19 = v18[7];

    *(void *)(v19 + 8 * v14) = a1;
  }
  else
  {
    sub_10008D528(v14, a2, a1, v18);
  }
}

unint64_t sub_10008D04C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t v7 = (void *)(a6[7] + 16 * result);
  *uint64_t v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

unint64_t sub_10008D098(unint64_t result, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  char v5 = (void *)(a5[6] + 16 * result);
  *char v5 = a2;
  v5[1] = a3;
  *(unsigned char *)(a5[7] + result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

void sub_10008D0E0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = sub_10004CE1C(a1, a2, a3, a4);
  uint64_t v7 = v6 + 40 * v5;
  long long v9 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v9;
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  sub_100043510(v11, (_OWORD *)(*(void *)(v10 + 56) + 32 * v5));
  sub_10004A890();
  if (v13) {
    __break(1u);
  }
  else {
    *(void *)(a4 + 16) = v12;
  }
}

uint64_t sub_10008D13C(unint64_t a1, char a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t result = sub_100028270(a3, a4[7] + 40 * a1);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

void sub_10008D1A8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = sub_10004CE1C(a1, a2, a3, a4);
  *(unsigned char *)(v7 + v5) = v6;
  sub_100043510(v9, (_OWORD *)(*(void *)(v8 + 56) + 32 * v5));
  sub_10004A890();
  if (v11) {
    __break(1u);
  }
  else {
    *(void *)(a4 + 16) = v10;
  }
}

uint64_t sub_10008D1F0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  char v6 = (void *)(a5[6] + 16 * a1);
  *char v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1000549E0(a4, a5[7] + 8 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_10008D25C(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  uint64_t v4 = a4[7] + 56 * result;
  long long v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 16) = v5;
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a3 + 32);
  *(void *)(v4 + 48) = *(void *)(a3 + 48);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_10008D2BC(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t sub_10008D300(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a4, v10);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

unint64_t sub_10008D3B0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(void *)(a5[6] + 8 * result) = a2;
  BOOL v5 = (void *)(a5[7] + 16 * result);
  *BOOL v5 = a3;
  v5[1] = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_10008D3F8(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  uint64_t v4 = a4[7] + 40 * result;
  long long v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 16) = v5;
  *(void *)(v4 + 32) = *(void *)(a3 + 32);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

void sub_10008D450(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  *(void *)(a5 + 8 * (a1 >> 6) + 64) |= 1 << a1;
  BOOL v7 = (void *)(*(void *)(a5 + 48) + 16 * a1);
  *BOOL v7 = a2;
  v7[1] = a3;
  a6(0);
  sub_10008E6B4();
  sub_10004A890();
  if (v9) {
    __break(1u);
  }
  else {
    *(void *)(a5 + 16) = v8;
  }
}

unint64_t sub_10008D4F8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result = sub_10004CE1C(a1, a2, a3, a4);
  *(void *)(v7 + 8 * result) = v6;
  *(void *)(*(void *)(v5 + 56) + 8 * result) = v8;
  uint64_t v9 = *(void *)(v5 + 16);
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    *(void *)(v5 + 16) = v11;
  }
  return result;
}

unint64_t sub_10008D528(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

unint64_t sub_10008D56C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  uint64_t v7 = (void *)(a7[6] + 16 * result);
  *uint64_t v7 = a2;
  v7[1] = a3;
  uint64_t v8 = a7[7] + 24 * result;
  *(void *)uint64_t v8 = a4;
  *(void *)(v8 + 8) = a5;
  *(_WORD *)(v8 + 16) = a6;
  uint64_t v9 = a7[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a7[2] = v11;
  }
  return result;
}

Swift::Int sub_10008D5C0()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10008D634()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3)
  {
    char v5 = 1;
  }
  else
  {
    sub_10004405C();
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_10008D6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  uint64_t v63 = type metadata accessor for BadgingNotifier();
  id v64 = &off_10020E9B0;
  v62[0] = a3;
  v56[0] = 0x6369706F74;
  v56[1] = 0xE500000000000000;
  swift_retain();
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v57, a1, &v60);
  sub_1000434BC((uint64_t)&v57);
  if (MetatypeMetadata)
  {
    if (swift_dynamicCast())
    {
      uint64_t v10 = v56[0];
      uint64_t v9 = v56[1];
      strcpy((char *)v56, "badgeID");
      v56[1] = 0xE700000000000000;
      AnyHashable.init<A>(_:)();
      sub_100032918((uint64_t)&v57, a1, &v60);
      sub_1000434BC((uint64_t)&v57);
      if (MetatypeMetadata)
      {
        if (swift_dynamicCast())
        {
          uint64_t v54 = v9;
          uint64_t v52 = v56[0];
          uint64_t v51 = v56[1];
          *(void *)&long long v60 = 0x64656C62616E65;
          *((void *)&v60 + 1) = 0xE700000000000000;
          AnyHashable.init<A>(_:)();
          sub_100032918((uint64_t)&v57, a1, &v60);
          sub_1000434BC((uint64_t)&v57);
          uint64_t v53 = v10;
          if (MetatypeMetadata)
          {
            if (swift_dynamicCast())
            {
              char v11 = v56[0];
LABEL_22:
              sub_100043478((uint64_t *)&unk_10022E570);
              uint64_t v25 = swift_allocObject();
              *(_OWORD *)(v25 + 16) = xmmword_1001C3120;
              uint64_t v57 = 0x64496567646162;
              unint64_t v58 = 0xE700000000000000;
              AnyHashable.init<A>(_:)();
              *(void *)(v25 + 96) = &type metadata for String;
              *(void *)(v25 + 72) = v52;
              *(void *)(v25 + 80) = v51;
              uint64_t v57 = 0x64656C62616E65;
              unint64_t v58 = 0xE700000000000000;
              AnyHashable.init<A>(_:)();
              *(void *)(v25 + 168) = &type metadata for Bool;
              *(unsigned char *)(v25 + 144) = v11;
              uint64_t v55 = Dictionary.init(dictionaryLiteral:)();
              v56[0] = 0xD000000000000012;
              v56[1] = 0x80000001001CBDA0;
              AnyHashable.init<A>(_:)();
              sub_100032918((uint64_t)&v57, a1, &v60);
              sub_1000434BC((uint64_t)&v57);
              if (MetatypeMetadata)
              {
                uint64_t v26 = sub_100043478(&qword_10022D6F0);
                if (swift_dynamicCast())
                {
                  uint64_t v27 = v56[0];
                  *(void *)&long long v60 = 0xD000000000000012;
                  *((void *)&v60 + 1) = 0x80000001001CBDA0;
                  AnyHashable.init<A>(_:)();
                  uint64_t MetatypeMetadata = (void *)v26;
                  *(void *)&long long v60 = v27;
                  sub_100088240((uint64_t)&v60, (uint64_t)&v57);
                }
              }
              else
              {
                sub_10002CC68((uint64_t)&v60, &qword_10022F490);
              }
              strcpy((char *)v56, "metricsEvent");
              BYTE5(v56[1]) = 0;
              HIWORD(v56[1]) = -5120;
              AnyHashable.init<A>(_:)();
              sub_100032918((uint64_t)&v57, a1, &v60);
              sub_1000434BC((uint64_t)&v57);
              if (MetatypeMetadata)
              {
                uint64_t v28 = sub_100043478(&qword_10022D6F0);
                if (swift_dynamicCast())
                {
                  uint64_t v29 = v56[0];
                  *(void *)&long long v60 = 0x7363697274656DLL;
                  *((void *)&v60 + 1) = 0xE700000000000000;
                  AnyHashable.init<A>(_:)();
                  uint64_t MetatypeMetadata = (void *)v28;
                  *(void *)&long long v60 = v29;
                  sub_100088240((uint64_t)&v60, (uint64_t)&v57);
                }
              }
              else
              {
                sub_10002CC68((uint64_t)&v60, &qword_10022F490);
              }
              uint64_t v30 = swift_allocObject();
              *(_OWORD *)(v30 + 16) = xmmword_1001C3130;
              uint64_t v57 = 49;
              unint64_t v58 = 0xE100000000000000;
              AnyHashable.init<A>(_:)();
              *(void *)(v30 + 96) = &type metadata for Int;
              *(void *)(v30 + 72) = 35;
              uint64_t v57 = 50;
              unint64_t v58 = 0xE100000000000000;
              AnyHashable.init<A>(_:)();
              *(void *)(v30 + 168) = &type metadata for String;
              *(void *)(v30 + 144) = v53;
              *(void *)(v30 + 152) = v54;
              uint64_t v57 = 7565409;
              unint64_t v58 = 0xE300000000000000;
              AnyHashable.init<A>(_:)();
              *(void *)(v30 + 240) = sub_100043478(&qword_10022D6F0);
              *(void *)(v30 + 216) = v55;
              Dictionary.init(dictionaryLiteral:)();
              sub_10004D510(0, (unint64_t *)&unk_10022E580);
              id v31 = sub_100088E54();
              sub_100049788(v62, v63);
              LOBYTE(v30) = sub_10008E7C4(v31);
              sub_100043478(&qword_10022E560);
              type metadata accessor for LogMessage();
              *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
              if (v30)
              {
                uint64_t v59 = sub_100043478(&qword_10022E568);
                uint64_t v57 = a4;
                uint64_t v32 = *(void *)(a2 + 32);
                if (v32)
                {
                  uint64_t v33 = *(void *)(a2 + 24);
                  swift_bridgeObjectRetain();
                  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
                  v34._uint64_t countAndFlagsBits = 0;
                  v34._object = (void *)0xE000000000000000;
                  LogMessage.StringInterpolation.appendLiteral(_:)(v34);
                  sub_100049788(&v57, v59);
                  uint64_t DynamicType = swift_getDynamicType();
                  uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
                  *(void *)&long long v60 = DynamicType;
                  LogMessage.StringInterpolation.appendInterpolation(safe:)();
                  sub_10002CC68((uint64_t)&v60, &qword_10022F490);
                  v36._uint64_t countAndFlagsBits = 5972026;
                  v36._object = (void *)0xE300000000000000;
                  LogMessage.StringInterpolation.appendLiteral(_:)(v36);
                  uint64_t MetatypeMetadata = &type metadata for String;
                  *(void *)&long long v60 = v33;
                  *((void *)&v60 + 1) = v32;
                  LogMessage.StringInterpolation.appendInterpolation(safe:)();
                  sub_10002CC68((uint64_t)&v60, &qword_10022F490);
                  uint64_t v37 = 93;
                }
                else
                {
                  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
                  v44._uint64_t countAndFlagsBits = 0;
                  v44._object = (void *)0xE000000000000000;
                  LogMessage.StringInterpolation.appendLiteral(_:)(v44);
                  sub_100049788(&v57, v59);
                  uint64_t v45 = swift_getDynamicType();
                  uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
                  *(void *)&long long v60 = v45;
                  LogMessage.StringInterpolation.appendInterpolation(safe:)();
                  sub_10002CC68((uint64_t)&v60, &qword_10022F490);
                  uint64_t v37 = 58;
                }
                unint64_t v46 = 0xE100000000000000;
                LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v37);
                LogMessage.init(stringInterpolation:)();
                sub_10004377C((uint64_t)&v57);
                LogMessage.init(stringLiteral:)();
                if (qword_10022C460 != -1) {
                  swift_once();
                }
                uint64_t v47 = static os_log_type_t.default.getter();
              }
              else
              {
                uint64_t v59 = sub_100043478(&qword_10022E568);
                uint64_t v57 = a4;
                uint64_t v38 = *(void *)(a2 + 32);
                if (v38)
                {
                  uint64_t v39 = *(void *)(a2 + 24);
                  swift_bridgeObjectRetain();
                  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
                  v40._uint64_t countAndFlagsBits = 0;
                  v40._object = (void *)0xE000000000000000;
                  LogMessage.StringInterpolation.appendLiteral(_:)(v40);
                  sub_100049788(&v57, v59);
                  uint64_t v41 = swift_getDynamicType();
                  uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
                  *(void *)&long long v60 = v41;
                  LogMessage.StringInterpolation.appendInterpolation(safe:)();
                  sub_10002CC68((uint64_t)&v60, &qword_10022F490);
                  v42._uint64_t countAndFlagsBits = 5972026;
                  v42._object = (void *)0xE300000000000000;
                  LogMessage.StringInterpolation.appendLiteral(_:)(v42);
                  uint64_t MetatypeMetadata = &type metadata for String;
                  *(void *)&long long v60 = v39;
                  *((void *)&v60 + 1) = v38;
                  LogMessage.StringInterpolation.appendInterpolation(safe:)();
                  sub_10002CC68((uint64_t)&v60, &qword_10022F490);
                  uint64_t v43 = 93;
                }
                else
                {
                  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
                  v48._uint64_t countAndFlagsBits = 0;
                  v48._object = (void *)0xE000000000000000;
                  LogMessage.StringInterpolation.appendLiteral(_:)(v48);
                  sub_100049788(&v57, v59);
                  uint64_t v49 = swift_getDynamicType();
                  uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
                  *(void *)&long long v60 = v49;
                  LogMessage.StringInterpolation.appendInterpolation(safe:)();
                  sub_10002CC68((uint64_t)&v60, &qword_10022F490);
                  uint64_t v43 = 58;
                }
                unint64_t v50 = 0xE100000000000000;
                LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v43);
                LogMessage.init(stringInterpolation:)();
                sub_10004377C((uint64_t)&v57);
                LogMessage.init(stringLiteral:)();
                if (qword_10022C460 != -1) {
                  swift_once();
                }
                uint64_t v47 = static os_log_type_t.error.getter();
              }
              sub_10004841C(v47);
              swift_bridgeObjectRelease();

              return sub_10004377C((uint64_t)v62);
            }
          }
          else
          {
            sub_10002CC68((uint64_t)&v60, &qword_10022F490);
          }
          char v11 = 1;
          goto LABEL_22;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_10002CC68((uint64_t)&v60, &qword_10022F490);
      }
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v59 = sub_100043478(&qword_10022E568);
      uint64_t v57 = a4;
      uint64_t v12 = *(void *)(a2 + 32);
      if (!v12)
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v20._uint64_t countAndFlagsBits = 0;
        v20._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v20);
        sub_100049788(&v57, v59);
        uint64_t v21 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        *(void *)&long long v60 = v21;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC68((uint64_t)&v60, &qword_10022F490);
        uint64_t v15 = 58;
        goto LABEL_16;
      }
      goto LABEL_14;
    }
  }
  else
  {
    sub_10002CC68((uint64_t)&v60, &qword_10022F490);
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v59 = sub_100043478(&qword_10022E568);
  uint64_t v57 = a4;
  uint64_t v12 = *(void *)(a2 + 32);
  if (v12)
  {
LABEL_14:
    uint64_t v16 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v17._uint64_t countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    sub_100049788(&v57, v59);
    uint64_t v18 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v60 = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v60, &qword_10022F490);
    v19._uint64_t countAndFlagsBits = 5972026;
    v19._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    uint64_t MetatypeMetadata = &type metadata for String;
    *(void *)&long long v60 = v16;
    *((void *)&v60 + 1) = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v60, &qword_10022F490);
    uint64_t v15 = 93;
    goto LABEL_16;
  }
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  sub_100049788(&v57, v59);
  uint64_t v14 = swift_getDynamicType();
  uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
  *(void *)&long long v60 = v14;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC68((uint64_t)&v60, &qword_10022F490);
  uint64_t v15 = 58;
LABEL_16:
  unint64_t v22 = 0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v15);
  LogMessage.init(stringInterpolation:)();
  sub_10004377C((uint64_t)&v57);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v23 = static os_log_type_t.error.getter();
  sub_10004841C(v23);
  swift_bridgeObjectRelease();
  return sub_10004377C((uint64_t)v62);
}

unint64_t sub_10008E56C()
{
  unint64_t result = qword_10022E5D0;
  if (!qword_10022E5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E5D0);
  }
  return result;
}

unint64_t sub_10008E5B8()
{
  unint64_t result = qword_10022CC50;
  if (!qword_10022CC50)
  {
    type metadata accessor for Name(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CC50);
  }
  return result;
}

unint64_t sub_10008E608()
{
  unint64_t result = qword_10022E640;
  if (!qword_10022E640)
  {
    sub_10004D510(255, (unint64_t *)&qword_100231E00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E640);
  }
  return result;
}

unint64_t sub_10008E668()
{
  unint64_t result = qword_10022E6A8;
  if (!qword_10022E6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E6A8);
  }
  return result;
}

uint64_t sub_10008E6B4()
{
  uint64_t v2 = sub_10004D68C();
  v3(v2);
  sub_100043B1C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_10008E708()
{
  uint64_t v1 = sub_10004D68C();
  v2(v1);
  sub_100043B1C();
  uint64_t v3 = sub_10008E7B0();
  v4(v3);
  return v0;
}

unint64_t sub_10008E750()
{
  unint64_t result = qword_10022E700;
  if (!qword_10022E700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E700);
  }
  return result;
}

uint64_t sub_10008E79C()
{
  return *(void *)v0;
}

uint64_t sub_10008E7B0()
{
  return v0;
}

BOOL sub_10008E7C4(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10008ECC4(a1);
  uint64_t v7 = v6;
  if (v6)
  {
    unint64_t v28 = 0x80000001001CBE40;
    String.append(_:)(*(Swift::String *)&v5);
    swift_bridgeObjectRelease();
    id v8 = [a1 payload];
    uint64_t v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10008EB6C(0xD000000000000029, 0x80000001001CBE40, v9);
    swift_bridgeObjectRelease();
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v29 = (void *)type metadata accessor for BadgingNotifier();
    unint64_t v27 = v2;
    swift_retain();
    id v10 = (id)AMSLogKey();
    if (v10)
    {
      char v11 = v10;
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v15._uint64_t countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      sub_100041F7C();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100044930(MetatypeMetadata);
      sub_1000423CC((uint64_t)v26);
      v17._uint64_t countAndFlagsBits = 5972026;
      v17._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      void v26[3] = &type metadata for String;
      v26[0] = v12;
      v26[1] = v14;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v26);
      v18._uint64_t countAndFlagsBits = 93;
      v18._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v19._uint64_t countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      sub_100041F7C();
      uint64_t v20 = swift_getMetatypeMetadata();
      sub_100044930(v20);
      sub_1000423CC((uint64_t)v26);
      v21._uint64_t countAndFlagsBits = 58;
      v21._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v27);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v22._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
    v22._object = (void *)0x80000001001CBE70;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t v29 = &type metadata for String;
    unint64_t v27 = 0xD000000000000029;
    unint64_t v28 = 0x80000001001CBE40;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v27);
    v23._uint64_t countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v24 = static os_log_type_t.default.getter();
    sub_10004841C(v24);
    swift_bridgeObjectRelease();
  }
  return v7 != 0;
}

void sub_10008EB6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = [self defaultCenter];
  NSString v5 = String._bridgeToObjectiveC()();
  sub_10008EC28((uint64_t)v5, 0, a3, 1, v4);
}

uint64_t type metadata accessor for BadgingNotifier()
{
  return self;
}

void sub_10008EC28(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  [a5 postNotificationName:a1 object:a2 userInfo:isa deliverImmediately:a4 & 1];
}

uint64_t sub_10008ECC4(void *a1)
{
  id v1 = [a1 clientIdentifier];
  if (!v1) {
    return 0;
  }
  unint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t type metadata accessor for BagProvider()
{
  return self;
}

void sub_10008ED4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = 7955819;
  unint64_t v55 = 0xE300000000000000;
  AnyHashable.init<A>(_:)();
  sub_100044F9C();
  sub_1000434BC((uint64_t)&v56);
  if (!v62)
  {
    sub_1000423CC((uint64_t)&v60);
LABEL_11:
    sub_100043478(&qword_10022E560);
    uint64_t v12 = type metadata accessor for LogMessage();
    sub_100044798(v12);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v13 = sub_100043478(&qword_10022E930);
    sub_10004DCAC(v13);
    if (v2)
    {
      uint64_t v14 = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100044950();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000466AC(MetatypeMetadata);
      sub_1000423CC((uint64_t)&v60);
      sub_100020E44();
      unint64_t v62 = &type metadata for String;
      uint64_t v60 = v14;
      unint64_t v61 = v2;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v60);
      uint64_t v16 = 93;
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100044950();
      uint64_t v17 = swift_getMetatypeMetadata();
      sub_1000466AC(v17);
      sub_1000423CC((uint64_t)&v60);
      uint64_t v16 = 58;
    }
    unint64_t v18 = 0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v16);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)&v56);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 == -1) {
      goto LABEL_28;
    }
    goto LABEL_34;
  }
  if ((sub_100048C64() & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v52 = v54;
  unint64_t v53 = v55;
  uint64_t v54 = 0x7265746C6966;
  unint64_t v55 = 0xE600000000000000;
  AnyHashable.init<A>(_:)();
  sub_100044F9C();
  sub_1000434BC((uint64_t)&v56);
  if (!v62)
  {
    sub_1000423CC((uint64_t)&v60);
    goto LABEL_17;
  }
  uint64_t v51 = sub_100043478(&qword_10022E098);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    sub_100043478(&qword_10022E560);
    uint64_t v19 = type metadata accessor for LogMessage();
    sub_100044798(v19);
    *(_OWORD *)(sub_10004863C() + 16) = xmmword_1001C3120;
    uint64_t v20 = sub_100043478(&qword_10022E930);
    sub_10004DCAC(v20);
    if (v2)
    {
      uint64_t v21 = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100044950();
      uint64_t v22 = swift_getMetatypeMetadata();
      sub_1000466AC(v22);
      sub_1000423CC((uint64_t)&v60);
      sub_100020E44();
      unint64_t v62 = &type metadata for String;
      uint64_t v60 = v21;
      unint64_t v61 = v2;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v60);
      uint64_t v23 = 93;
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100044950();
      uint64_t v24 = swift_getMetatypeMetadata();
      sub_1000466AC(v24);
      sub_1000423CC((uint64_t)&v60);
      uint64_t v23 = 58;
    }
    unint64_t v25 = 0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v23);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)&v56);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_10004A50C((uint64_t)"Skipping cached data for key: ");
    unint64_t v58 = (ValueMetadata *)&type metadata for String;
    sub_10002102C();
    sub_1000423CC((uint64_t)&v56);
    uint64_t v26 = 0x6966206F6E28202ELL;
    unint64_t v27 = 0xED0000297265746CLL;
LABEL_27:
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v26);
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 == -1)
    {
LABEL_28:
      uint64_t v35 = static os_log_type_t.error.getter();
      sub_10004841C(v35);
      swift_bridgeObjectRelease();
      return;
    }
LABEL_34:
    swift_once();
    goto LABEL_28;
  }
  uint64_t v9 = v54;
  uint64_t v54 = 1635017060;
  unint64_t v55 = 0xE400000000000000;
  AnyHashable.init<A>(_:)();
  sub_100044F9C();
  sub_1000434BC((uint64_t)&v56);
  if (!v62)
  {
    swift_bridgeObjectRelease();
    sub_1000423CC((uint64_t)&v60);
LABEL_23:
    sub_100043478(&qword_10022E560);
    uint64_t v28 = type metadata accessor for LogMessage();
    sub_100044798(v28);
    *(_OWORD *)(sub_10004863C() + 16) = xmmword_1001C3120;
    uint64_t v29 = sub_100043478(&qword_10022E930);
    sub_10004DCAC(v29);
    if (v2)
    {
      uint64_t v30 = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100044950();
      uint64_t v31 = swift_getMetatypeMetadata();
      sub_1000466AC(v31);
      sub_1000423CC((uint64_t)&v60);
      sub_100020E44();
      unint64_t v62 = &type metadata for String;
      uint64_t v60 = v30;
      unint64_t v61 = v2;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v60);
      uint64_t v32 = 93;
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100044950();
      uint64_t v33 = swift_getMetatypeMetadata();
      sub_1000466AC(v33);
      sub_1000423CC((uint64_t)&v60);
      uint64_t v32 = 58;
    }
    unint64_t v34 = 0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v32);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)&v56);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_10004A50C((uint64_t)"Skipping cached data for key: ");
    unint64_t v58 = (ValueMetadata *)&type metadata for String;
    sub_10002102C();
    sub_1000423CC((uint64_t)&v56);
    uint64_t v26 = 0x6164206F6E28202ELL;
    unint64_t v27 = 0xEB00000000296174;
    goto LABEL_27;
  }
  sub_100043478(&qword_10022D6F0);
  if ((sub_100048C64() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  sub_100049910();
  uint64_t v60 = v10;
  unint64_t v61 = 0xE800000000000000;
  AnyHashable.init<A>(_:)();
  sub_100044F9C();
  sub_1000434BC((uint64_t)&v56);
  if (v62)
  {
    if (sub_100048C64())
    {
      double v11 = *(double *)&v54;
      goto LABEL_31;
    }
  }
  else
  {
    sub_1000423CC((uint64_t)&v60);
  }
  double v11 = 3600.0;
LABEL_31:
  unint64_t v58 = &type metadata for AMSFlags;
  unint64_t v59 = sub_10002FDEC();
  LOBYTE(v56) = 0;
  char v36 = isFeatureEnabled(_:)();
  sub_10004377C((uint64_t)&v56);
  if (v36)
  {
    swift_bridgeObjectRelease();
    id v37 = [self sharedInstance];
    Date.init(timeIntervalSinceNow:)();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    Class v39 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    Class v40 = Date._bridgeToObjectiveC()().super.isa;
    [v37 cacheResponse:isa filter:v39 expiration:v40];

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    id v41 = [self loadFromDisk];
    Class v50 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    sub_100043478((uint64_t *)&unk_10022E570);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1001C3130;
    sub_100049910();
    uint64_t v56 = v43;
    unint64_t v57 = 0xE800000000000000;
    AnyHashable.init<A>(_:)();
    id v44 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v11];
    *(void *)(v42 + 96) = sub_10008F818();
    *(void *)(v42 + 72) = v44;
    uint64_t v56 = 0x7265746C6966;
    unint64_t v57 = 0xE600000000000000;
    AnyHashable.init<A>(_:)();
    *(void *)(v42 + 168) = v51;
    *(void *)(v42 + 144) = v9;
    uint64_t v56 = 7955819;
    unint64_t v57 = 0xE300000000000000;
    AnyHashable.init<A>(_:)();
    *(void *)(v42 + 240) = &type metadata for String;
    unint64_t v45 = v53;
    *(void *)(v42 + 216) = v52;
    *(void *)(v42 + 224) = v45;
    Dictionary.init(dictionaryLiteral:)();
    Class v46 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class v48 = v50;
    [v41 addCachedResponseData:v50 cacheInfo:v46 appIdentifier:v47];

    [v41 saveToDisk];
  }
}

uint64_t type metadata accessor for CacheDataAction()
{
  return self;
}

unint64_t sub_10008F818()
{
  unint64_t result = qword_100231E00;
  if (!qword_100231E00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100231E00);
  }
  return result;
}

id sub_10008F858()
{
  id result = [objc_allocWithZone((Class)NSLock) init];
  qword_10022E948 = (uint64_t)result;
  return result;
}

id sub_10008F88C(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_100043478(&qword_1002344F0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  Swift::String v15 = (char *)v56 - v14;
  if (qword_10022C408 != -1) {
    swift_once();
  }
  [(id)qword_10022E948 lock];
  if (byte_10022E940)
  {
    sub_100043478(&qword_10022E560);
    uint64_t v16 = type metadata accessor for LogMessage();
    sub_100044798(v16);
    *(_OWORD *)(sub_100048058() + 16) = xmmword_1001C3120;
    uint64_t v17 = sub_100043478(&qword_10022E9E8);
    sub_100048C84(v17);
    if (v2)
    {
      uint64_t v18 = a2[3];
      swift_bridgeObjectRetain();
      sub_100049814();
      sub_100044E44();
      sub_100044988();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100044FB8(MetatypeMetadata);
      sub_100048664();
      sub_100020E44();
      id v64 = &type metadata for String;
      *(void *)&long long v63 = v18;
      *((void *)&v63 + 1) = v2;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100048664();
      uint64_t v20 = 93;
    }
    else
    {
      sub_100020ECC();
      sub_100044E44();
      sub_100044988();
      uint64_t v36 = swift_getMetatypeMetadata();
      sub_100044FB8(v36);
      sub_10002CC0C((uint64_t)&v63, &qword_10022F490);
      uint64_t v20 = 58;
    }
LABEL_17:
    uint64_t v42 = &qword_10022E000;
    unint64_t v43 = 0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v20);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)aBlock);
    unint64_t v58 = &type metadata for String;
    sub_10004AB14();
    sub_10002CC0C((uint64_t)aBlock, &qword_10022F490);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v44 = static os_log_type_t.default.getter();
    sub_10004841C(v44);
    swift_bridgeObjectRelease();
    return objc_msgSend((id)v42[297], "unlock", v56[0]);
  }
  id v21 = objc_msgSend(self, "ams_sharedAccountStore");
  id v22 = objc_msgSend(v21, "ams_activeiTunesAccount");

  v56[0] = v22;
  if (!v22)
  {
    sub_100043478(&qword_10022E560);
    uint64_t v37 = type metadata accessor for LogMessage();
    sub_100044798(v37);
    *(_OWORD *)(sub_100048058() + 16) = xmmword_1001C3120;
    uint64_t v38 = sub_100043478(&qword_10022E9E8);
    sub_100048C84(v38);
    sub_100020ECC();
    sub_100044E44();
    sub_100044988();
    uint64_t v41 = swift_getMetatypeMetadata();
    sub_100044FB8(v41);
    sub_10002CC0C((uint64_t)&v63, &qword_10022F490);
    uint64_t v20 = 58;
    goto LABEL_17;
  }
  unint64_t v61 = 0xD000000000000010;
  unint64_t v62 = 0x80000001001CBFB0;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)aBlock, a1, &v63);
  sub_1000434BC((uint64_t)aBlock);
  if (!v64)
  {
    Class v39 = &qword_10022F490;
    Class v40 = &v63;
LABEL_22:
    sub_10002CC0C((uint64_t)v40, v39);
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_23;
  }
  double v23 = *(double *)&v61;
  id v24 = [self lastCarrierOfferRegistrationDate];
  if (!v24)
  {
    sub_100021AC0((uint64_t)v8, 1, 1, v9);
    goto LABEL_21;
  }
  unint64_t v25 = v24;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v26(v8, v13, v9);
  sub_100021AC0((uint64_t)v8, 0, 1, v9);
  if (sub_10004FD40((uint64_t)v8, 1, v9) == 1)
  {
LABEL_21:
    Class v39 = &qword_1002344F0;
    Class v40 = (long long *)v8;
    goto LABEL_22;
  }
  v26(v15, v8, v9);
  Date.timeIntervalSinceNow.getter();
  double v28 = -v27;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  if (v23 > v28)
  {
    sub_100043478(&qword_10022E560);
    uint64_t v29 = type metadata accessor for LogMessage();
    sub_100044798(v29);
    unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v32 = sub_100043478(&qword_10022E9E8);
    sub_100048C84(v32);
    if (v31)
    {
      uint64_t v33 = a2[3];
      swift_bridgeObjectRetain();
      sub_100049814();
      sub_100044E44();
      sub_100044988();
      uint64_t v34 = swift_getMetatypeMetadata();
      sub_100044FB8(v34);
      sub_100048664();
      sub_100020E44();
      id v64 = &type metadata for String;
      *(void *)&long long v63 = v33;
      *((void *)&v63 + 1) = v31;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100048664();
      uint64_t v35 = 93;
    }
    else
    {
      sub_100020ECC();
      sub_100044E44();
      sub_100044988();
      uint64_t v53 = swift_getMetatypeMetadata();
      sub_100044FB8(v53);
      sub_10002CC0C((uint64_t)&v63, &qword_10022F490);
      uint64_t v35 = 58;
    }
    uint64_t v42 = &qword_10022E000;
    unint64_t v54 = 0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v35);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)aBlock);
    unint64_t v58 = &type metadata for String;
    sub_10004AB14();
    sub_10002CC0C((uint64_t)aBlock, &qword_10022F490);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v55 = static os_log_type_t.default.getter();
    sub_10004841C(v55);
    swift_bridgeObjectRelease();

    return objc_msgSend((id)v42[297], "unlock", v56[0]);
  }
LABEL_23:
  id result = [self createBagForSubProfile];
  if (result)
  {
    Class v46 = result;
    id v47 = objc_allocWithZone((Class)AMSCarrierOfferRegistrationTask);
    id v48 = v56[0];
    id v49 = [v47 initWithAccount:v48 bag:v46];

    if (qword_10022C5C8 != -1) {
      swift_once();
    }
    sub_10002A570(0xD00000000000001ELL, 0x80000001001C4910);
    byte_10022E940 = 1;
    id v50 = [v49 perform];
    uint64_t v51 = swift_allocObject();
    *(id *)(v51 + 16) = v56[1];
    memcpy((void *)(v51 + 24), a2, 0x50uLL);
    unint64_t v59 = sub_100090E24;
    uint64_t v60 = v51;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10006D514;
    unint64_t v58 = &unk_10020EA18;
    uint64_t v52 = _Block_copy(aBlock);
    sub_10002C008((uint64_t)a2);
    swift_release();
    [v50 addFinishBlock:v52];

    _Block_release(v52);
    uint64_t v42 = &qword_10022E000;
    return objc_msgSend((id)v42[297], "unlock", v56[0]);
  }
  __break(1u);
  return result;
}