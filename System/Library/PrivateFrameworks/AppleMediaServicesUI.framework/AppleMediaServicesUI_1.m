uint64_t sub_100090254(void *a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  const void *v18;
  void *v19;
  id v20;
  uint64_t v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void aBlock[6];

  v22 = a3;
  v23 = a4;
  v24 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags();
  v25 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for DispatchQoS();
  v8 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS.QoSClass();
  v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000438EC();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchQoS.QoSClass.default(_:), v11);
  v15 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v16 = (void *)swift_allocObject();
  v17 = v22;
  v18 = v23;
  v16[2] = a1;
  v16[3] = v17;
  memcpy(v16 + 4, v18, 0x50uLL);
  v16[14] = v24;
  aBlock[4] = sub_100090E88;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  aBlock[3] = &unk_10020EA68;
  v19 = _Block_copy(aBlock);
  v20 = a1;
  sub_10002C008((uint64_t)v18);
  swift_errorRetain();
  static DispatchQoS.unspecified.getter();
  v27 = _swiftEmptyArrayStorage;
  sub_10002352C();
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_1000234D8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v26);
  return swift_release();
}

uint64_t sub_1000905C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v12 - 8);
  if (a1)
  {
    id v49 = a1;
    unsigned int v13 = [v49 BOOLValue];
    if (v13) {
      unint64_t v14 = 0xD000000000000011;
    }
    else {
      unint64_t v14 = 0xD000000000000016;
    }
    unint64_t v15 = 0x80000001001CC040;
    if (v13) {
      unint64_t v15 = 0x80000001001CC080;
    }
    unint64_t v47 = v15;
    uint64_t v48 = v14;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    v57 = (void *)sub_100043478(&qword_10022E9E8);
    uint64_t v55 = a2;
    uint64_t v16 = *(void *)(a3 + 32);
    if (v16)
    {
      uint64_t v17 = *(void *)(a3 + 24);
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      sub_100049788(&v55, (uint64_t)v57);
      uint64_t DynamicType = swift_getDynamicType();
      MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v52 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v52, &qword_10022F490);
      v20._countAndFlagsBits = 5972026;
      v20._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      MetatypeMetadata = &type metadata for String;
      uint64_t v52 = v17;
      uint64_t v53 = v16;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v52, &qword_10022F490);
      uint64_t v21 = 93;
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v31._countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      sub_100049788(&v55, (uint64_t)v57);
      uint64_t v32 = swift_getDynamicType();
      MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v52 = v32;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v52, &qword_10022F490);
      uint64_t v21 = 58;
    }
    unint64_t v33 = 0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v21);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)&v55);
    v57 = &type metadata for String;
    uint64_t v55 = 0xD000000000000012;
    unint64_t v56 = 0x80000001001CC060;
    static LogMessage.safe(_:)();
    sub_10002CC0C((uint64_t)&v55, &qword_10022F490);
    v57 = &type metadata for String;
    uint64_t v55 = v48;
    unint64_t v56 = v47;
    static LogMessage.safe(_:)();
    sub_10002CC0C((uint64_t)&v55, &qword_10022F490);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v34 = static os_log_type_t.default.getter();
    sub_10004841C(v34);
    swift_bridgeObjectRelease();
    v35 = self;
    static Date.now.getter();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    [v35 setLastCarrierOfferRegistrationDate:isa];
  }
  else if (a4)
  {
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    v57 = (void *)sub_100043478(&qword_10022E9E8);
    uint64_t v55 = a2;
    swift_errorRetain();
    id v22 = (id)AMSLogKey();
    if (v22)
    {
      v23 = v22;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v27._countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      sub_100049788(&v55, (uint64_t)v57);
      uint64_t v28 = swift_getDynamicType();
      MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v52 = v28;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v52, &qword_10022F490);
      v29._countAndFlagsBits = 5972026;
      v29._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      MetatypeMetadata = &type metadata for String;
      uint64_t v52 = v24;
      uint64_t v53 = v26;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v52, &qword_10022F490);
      v30._countAndFlagsBits = 93;
      v30._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v37._countAndFlagsBits = 0;
      v37._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      sub_100049788(&v55, (uint64_t)v57);
      uint64_t v38 = swift_getDynamicType();
      MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v52 = v38;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v52, &qword_10022F490);
      v39._countAndFlagsBits = 58;
      v39._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v55);
    swift_getErrorValue();
    uint64_t v40 = v50;
    v41 = v51;
    v57 = v51;
    v42 = sub_10003BAA4(&v55);
    (*(void (**)(uint64_t *, uint64_t, void *))(*(v41 - 1) + 16))(v42, v40, v41);
    static LogMessage.safe(_:)();
    sub_10002CC0C((uint64_t)&v55, &qword_10022F490);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v43 = static os_log_type_t.error.getter();
    sub_10004841C(v43);
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  if (qword_10022C408 != -1) {
    swift_once();
  }
  v44 = (void *)qword_10022E948;
  [(id)qword_10022E948 lock];
  byte_10022E940 = 0;
  [v44 unlock];
  if (qword_10022C5C8 != -1) {
    swift_once();
  }
  return sub_10000A734(0xD00000000000001ELL, 0x80000001001C4910);
}

uint64_t type metadata accessor for CarrierOfferRegistrationAction()
{
  return self;
}

uint64_t sub_100090DDC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100090E24(void *a1, uint64_t a2)
{
  return sub_100090254(a1, a2, *(void *)(v2 + 16), (const void *)(v2 + 24));
}

uint64_t sub_100090E30()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_100090E88()
{
  return sub_1000905C4(*(void **)(v0 + 16), *(void *)(v0 + 24), v0 + 32, *(void *)(v0 + 112));
}

uint64_t sub_100090EA0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ContentInfo();
  v6 = (void *)((char *)a2 + *(int *)(v5 + 36));
  void *v6 = 0;
  v6[1] = 0;
  uint64_t v7 = sub_1000A6A9C(a1);
  swift_bridgeObjectRelease();
  sub_100088A00(0, v7, &v69);
  uint64_t v8 = &type metadata for Any;
  if (v70)
  {
    a1 = &type metadata for String;
    if (swift_dynamicCast())
    {
      double v9 = v67;
      unint64_t v10 = v68;
      *((void *)&v72 + 1) = &type metadata for String;
      if (v68) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
  }
  else
  {
    sub_1000423CC((uint64_t)&v69);
  }
  *((void *)&v72 + 1) = &type metadata for String;
LABEL_7:
  double v9 = 0.0;
  unint64_t v10 = 0xE000000000000000;
LABEL_8:
  *(double *)&long long v71 = v9;
  *((void *)&v71 + 1) = v10;
  uint64_t v11 = sub_100091DA4((uint64_t)&v71);
  if (v2)
  {
    swift_bridgeObjectRelease();
    sub_1000423CC((uint64_t)&v71);
    return swift_bridgeObjectRelease();
  }
  uint64_t v13 = v11;
  unint64_t v14 = v12;
  v64 = v6;
  v65 = (int *)v5;
  sub_1000423CC((uint64_t)&v71);
  sub_10004B3D0();
  __chkstk_darwin(v15);
  sub_100045E04();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_10004867C();
  uint64_t v20 = sub_1000A1D64(v16, v17, v18, v19, v13, v14);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v20 + 16);
  v66 = a2;
  if (v21)
  {
    uint64_t v62 = v7;
    *(void *)&long long v71 = _swiftEmptyArrayStorage;
    sub_100027304(0, v21, 0);
    id v22 = (void *)v71;
    v23 = (uint64_t *)(v20 + 56);
    do
    {
      a1 = (void *)*(v23 - 1);
      uint64_t v24 = *v23;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1000471B8();
      uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      sub_10004AB34();
      if (v29)
      {
        sub_10004DCBC(v28);
        id v22 = (void *)v71;
      }
      v22[2] = a1;
      Swift::String v30 = &v22[2 * v24];
      v30[4] = v25;
      v30[5] = v27;
      v23 += 4;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    a2 = v66;
    uint64_t v7 = v62;
    uint64_t v8 = &type metadata for Any;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v22 = _swiftEmptyArrayStorage;
  }
  *a2 = v22;
  sub_100088A00(4, v7, &v69);
  if (v70)
  {
    if (swift_dynamicCast())
    {
      double v31 = v67;
      unint64_t v32 = v68;
      *((void *)&v72 + 1) = &type metadata for String;
      if (v68) {
        goto LABEL_24;
      }
      goto LABEL_23;
    }
  }
  else
  {
    sub_1000423CC((uint64_t)&v69);
  }
  *((void *)&v72 + 1) = &type metadata for String;
LABEL_23:
  double v31 = 0.0;
  unint64_t v32 = 0xE000000000000000;
LABEL_24:
  *(double *)&long long v71 = v31;
  *((void *)&v71 + 1) = v32;
  uint64_t v33 = sub_100091DA4((uint64_t)&v71);
  unint64_t v35 = v34;
  sub_1000423CC((uint64_t)&v71);
  sub_10004B3D0();
  __chkstk_darwin(v36);
  sub_100045E04();
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_10004867C();
  uint64_t v41 = sub_1000A1D64(v37, v38, v39, v40, v33, v35);
  swift_bridgeObjectRelease();
  uint64_t v42 = *(void *)(v41 + 16);
  if (v42)
  {
    uint64_t v63 = v7;
    *(void *)&long long v71 = _swiftEmptyArrayStorage;
    sub_100027304(0, v42, 0);
    uint64_t v43 = (void *)v71;
    v44 = (uint64_t *)(v41 + 56);
    do
    {
      a1 = (void *)*(v44 - 1);
      uint64_t v45 = *v44;
      swift_bridgeObjectRetain();
      uint64_t v8 = (uint64_t (**)(void))sub_1000471B8();
      uint64_t v47 = v46;
      swift_bridgeObjectRelease();
      sub_10004AB34();
      if (v29)
      {
        sub_10004DCBC(v48);
        uint64_t v43 = (void *)v71;
      }
      v43[2] = a1;
      id v49 = &v43[2 * v45];
      v49[4] = v8;
      v49[5] = v47;
      v44 += 4;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease();
    uint64_t v7 = v63;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v43 = _swiftEmptyArrayStorage;
  }
  v66[1] = v43;
  sub_100088A00(1, v7, &v71);
  sub_100091DA4((uint64_t)&v71);
  sub_100044FD8();
  v66[2] = a1;
  v66[3] = v8;
  sub_100088A00(6, v7, &v69);
  if (v70)
  {
    if (sub_100049384()) {
      unint64_t v50 = *(void *)&v67;
    }
    else {
      unint64_t v50 = -1;
    }
  }
  else
  {
    sub_1000423CC((uint64_t)&v69);
    unint64_t v50 = -1;
  }
  char v51 = sub_1000918D8(v50);
  if (v51 == 4)
  {
    long long v71 = 0u;
    long long v72 = 0u;
  }
  else
  {
    *((void *)&v72 + 1) = &unk_10020EBA0;
    LOBYTE(v71) = v51;
  }
  char v52 = sub_100091E64((uint64_t)&v71);
  sub_1000423CC((uint64_t)&v71);
  *((unsigned char *)v66 + v65[10]) = v52;
  sub_100088A00(7, v7, &v69);
  if (v70)
  {
    if (sub_100049384())
    {
      double v53 = v67;
      unint64_t v54 = v68;
      goto LABEL_44;
    }
  }
  else
  {
    sub_1000423CC((uint64_t)&v69);
  }
  double v53 = 0.0;
  unint64_t v54 = 0xE000000000000000;
LABEL_44:
  *(double *)&long long v69 = v53;
  *((void *)&v69 + 1) = v54;
  uint64_t v55 = String.init<A>(_:)();
  *((void *)&v72 + 1) = &type metadata for String;
  *(void *)&long long v71 = v55;
  *((void *)&v71 + 1) = v56;
  sub_100091DA4((uint64_t)&v71);
  sub_100044FD8();
  v58 = (void *)((char *)v66 + v65[11]);
  void *v58 = &type metadata for String;
  v58[1] = v8;
  sub_100088A00(8, v7, &v71);
  sub_100091DA4((uint64_t)&v71);
  sub_100044FD8();
  v59 = (void *)((char *)v66 + v65[12]);
  void *v59 = &type metadata for String;
  v59[1] = v8;
  sub_100088A00(5, v7, &v71);
  sub_100091F24((uint64_t)&v71);
  sub_100044FD8();
  swift_bridgeObjectRelease();
  void *v64 = &type metadata for String;
  v64[1] = v8;
  sub_100088A00(2, v7, &v69);
  if (v70)
  {
    if (sub_100049384())
    {
      double v60 = v67;
      goto LABEL_49;
    }
  }
  else
  {
    sub_1000423CC((uint64_t)&v69);
  }
  double v60 = 0.0;
LABEL_49:
  sub_100049924(v60);
  sub_1000423CC((uint64_t)&v71);
  Date.init(timeIntervalSinceReferenceDate:)();
  sub_100088A00(3, v7, &v69);
  swift_bridgeObjectRelease();
  if (!v70)
  {
    sub_1000423CC((uint64_t)&v69);
    goto LABEL_53;
  }
  if (!sub_100049384())
  {
LABEL_53:
    double v61 = 0.0;
    goto LABEL_54;
  }
  double v61 = v67;
LABEL_54:
  sub_100049924(v61);
  sub_1000423CC((uint64_t)&v71);
  return Date.init(timeIntervalSinceReferenceDate:)();
}

#error "1000918A8: call analysis failed (funcsize=129)"

unint64_t sub_1000918D8(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

unint64_t sub_1000918E8(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020BE88, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 9) {
    return 9;
  }
  else {
    return v3;
  }
}

uint64_t sub_100091934(char a1)
{
  uint64_t result = 0x79654B6863746162;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x79654B6568636163;
      break;
    case 2:
      uint64_t result = 0x64657461657263;
      break;
    case 3:
      uint64_t result = 0x73657269707865;
      break;
    case 4:
      uint64_t result = 0x617461646174656DLL;
      break;
    case 5:
      uint64_t result = 1752457584;
      break;
    case 6:
      uint64_t result = 0x6574617473;
      break;
    case 7:
      uint64_t result = 0x6E6564496B736174;
      break;
    case 8:
      uint64_t result = 0x6E6F6973726576;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100091A58()
{
  return sub_100059F6C(*v0);
}

uint64_t sub_100091A60(uint64_t a1)
{
  return j___s14amsengagementd13SQLite3StatusO4hash4intoys6HasherVz_tF(a1, *v1);
}

uint64_t sub_100091A68(uint64_t a1)
{
  return sub_10005AD4C(a1, *v1);
}

unint64_t sub_100091A70@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000918D8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100091A9C(unsigned __int8 *a1, char *a2)
{
  return sub_10007DD50(*a1, *a2);
}

Swift::Int sub_100091AA8()
{
  return sub_100059F70(*v0);
}

uint64_t sub_100091AB0()
{
  return sub_10005AAE0();
}

Swift::Int sub_100091AB8(uint64_t a1)
{
  return sub_10005AD50(a1, *v1);
}

unint64_t sub_100091AC0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000918E8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100091AF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100091934(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100091B1C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, char a11)
{
  uint64_t v18 = a10;
  uint64_t v19 = type metadata accessor for ContentInfo();
  uint64_t v20 = (int *)v19;
  uint64_t v21 = (void *)((char *)a9 + *(int *)(v19 + 36));
  *uint64_t v21 = 0;
  v21[1] = 0;
  if (a2)
  {
    uint64_t v42 = a7;
    __chkstk_darwin(v19);
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_10004867C();
    uint64_t v26 = sub_1000A1D64(v22, v23, v24, v25, a1, a2);
    swift_bridgeObjectRelease();
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      uint64_t v40 = a8;
      uint64_t v41 = a6;
      sub_100027304(0, v27, 0);
      uint64_t v28 = v26 + 56;
      do
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = static String._fromSubstring(_:)();
        uint64_t v31 = v30;
        swift_bridgeObjectRelease();
        unint64_t v33 = _swiftEmptyArrayStorage[2];
        unint64_t v32 = _swiftEmptyArrayStorage[3];
        if (v33 >= v32 >> 1) {
          sub_100027304(v32 > 1, v33 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v33 + 1;
        unint64_t v34 = &_swiftEmptyArrayStorage[2 * v33];
        v34[4] = v29;
        v34[5] = v31;
        v28 += 32;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      a6 = v41;
      a8 = v40;
      a7 = v42;
      uint64_t v18 = a10;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = a10;
    }
  }
  *a9 = _swiftEmptyArrayStorage;
  a9[2] = a3;
  a9[3] = a4;
  Date.init()();
  unint64_t v35 = (char *)a9 + v20[8];
  uint64_t v36 = type metadata accessor for Date();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(v35, a7, v36);
  a9[1] = _swiftEmptyArrayStorage;
  *((unsigned char *)a9 + v20[10]) = a11;
  unsigned __int8 v38 = (void *)((char *)a9 + v20[11]);
  *unsigned __int8 v38 = a8;
  v38[1] = v18;
  Swift::String v39 = (void *)((char *)a9 + v20[12]);
  *Swift::String v39 = a5;
  v39[1] = a6;
  return result;
}

uint64_t sub_100091DA4(uint64_t a1)
{
  sub_100043410(a1, (uint64_t)v6);
  sub_100043478(&qword_10022F490);
  if (swift_dynamicCast()) {
    return v5;
  }
  sub_1000927B4();
  swift_allocError();
  uint64_t v4 = v3;
  sub_100043410(a1, v3);
  *(void *)(v4 + 56) = sub_100043478(&qword_10022EA18);
  *(void *)(v4 + 32) = &type metadata for String;
  return swift_willThrow();
}

uint64_t sub_100091E64(uint64_t a1)
{
  sub_100043410(a1, (uint64_t)v6);
  sub_100043478(&qword_10022F490);
  if (swift_dynamicCast()) {
    return v5;
  }
  sub_1000927B4();
  swift_allocError();
  uint64_t v4 = v3;
  sub_100043410(a1, v3);
  *(void *)(v4 + 56) = sub_100043478(&qword_10022EA10);
  *(void *)(v4 + 32) = &unk_10020EBA0;
  return swift_willThrow();
}

uint64_t sub_100091F24(uint64_t a1)
{
  sub_100043410(a1, (uint64_t)v7);
  sub_100043478(&qword_10022F490);
  uint64_t v2 = sub_100043478(&qword_10022E060);
  if (swift_dynamicCast()) {
    return v6;
  }
  sub_1000927B4();
  swift_allocError();
  uint64_t v5 = v4;
  sub_100043410(a1, v4);
  *(void *)(v5 + 56) = sub_100043478(&qword_10022EA08);
  *(void *)(v5 + 32) = v2;
  return swift_willThrow();
}

uint64_t sub_100091FF0(uint64_t a1)
{
  sub_100043410(a1, (uint64_t)v5);
  sub_100043478(&qword_10022F490);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
    sub_1000927B4();
    swift_allocError();
    uint64_t v4 = v3;
    sub_100043410(a1, v3);
    *(void *)(v4 + 56) = sub_100043478(&qword_10022EA00);
    *(void *)(v4 + 32) = &type metadata for Double;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1000920B0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v2;
  uint64_t v6 = *(void *)(*v2 + 16);
  if (!v6) {
    goto LABEL_8;
  }
  if (v5[4] == a1 && v5[5] == a2) {
    return 0;
  }
  char v8 = sub_100048C98();
  uint64_t result = 0;
  if (v8) {
    return result;
  }
  if (v6 == 1)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    sub_1000BA3DC();
    uint64_t v10 = *(void *)(*v2 + 16);
    sub_1000BA510(v10);
    uint64_t v11 = *v2;
    *(void *)(v11 + 16) = v10 + 1;
    uint64_t v12 = v11 + 16 * v10;
    *(void *)(v12 + 32) = a1;
    *(void *)(v12 + 40) = a2;
    *uint64_t v2 = v11;
    return 1;
  }
  if (v5[6] == a1 && v5[7] == a2) {
    return 0;
  }
  char v14 = sub_100048C98();
  uint64_t result = 0;
  if ((v14 & 1) == 0)
  {
    if (v6 == 2) {
      goto LABEL_8;
    }
    uint64_t v15 = v5 + 9;
    uint64_t v16 = 2;
    while (1)
    {
      uint64_t v17 = v16 + 1;
      if (__OFADD__(v16, 1)) {
        break;
      }
      if (*(v15 - 1) == a1 && *v15 == a2) {
        return 0;
      }
      uint64_t result = sub_100048C98();
      if (result) {
        return 0;
      }
      v15 += 2;
      ++v16;
      if (v17 == v6) {
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000921C8(uint64_t a1)
{
  uint64_t v57 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  uint64_t v56 = (char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for ContentInfo();
  sub_100020DEC();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (void *)((char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    sub_100043478(&qword_10022D7B0);
    uint64_t v12 = (void *)Dictionary.init(dictionaryLiteral:)();
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v14 = *(void *)(v7 + 72);
    v50[1] = a1;
    uint64_t v51 = v14;
    unint64_t v54 = (void (**)(char *, uint64_t))(v3 + 8);
    swift_bridgeObjectRetain();
    long long v53 = xmmword_1001C4970;
    char v52 = &type metadata for Any + 1;
    while (1)
    {
      uint64_t v58 = v13;
      uint64_t v59 = v11;
      sub_100092730(v13, (uint64_t)v10);
      sub_100043478(&qword_10022D330);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v53;
      *(void *)(inited + 32) = 0x64657461657263;
      *(void *)(inited + 40) = 0xE700000000000000;
      uint64_t v16 = (int *)v55;
      Date.timeIntervalSince1970.getter();
      *(double *)(inited + 48) = v17 * 1000.0;
      *(void *)(inited + 72) = &type metadata for Double;
      *(void *)(inited + 80) = 0x617461646174656DLL;
      *(void *)(inited + 88) = 0xE800000000000000;
      uint64_t v18 = v10[1];
      uint64_t v19 = sub_100043478(&qword_100232940);
      *(void *)(inited + 96) = v18;
      *(void *)(inited + 120) = v19;
      *(void *)(inited + 128) = 0x73657269707865;
      *(void *)(inited + 136) = 0xE700000000000000;
      swift_bridgeObjectRetain();
      Date.timeIntervalSince1970.getter();
      *(double *)(inited + 144) = v20 * 1000.0;
      *(void *)(inited + 168) = &type metadata for Double;
      *(void *)(inited + 176) = 0x64657269707865;
      *(void *)(inited + 184) = 0xE700000000000000;
      uint64_t v21 = v56;
      Date.init()();
      LOBYTE(v18) = static Date.< infix(_:_:)();
      (*v54)(v21, v57);
      *(unsigned char *)(inited + 192) = v18 & 1;
      *(void *)(inited + 216) = &type metadata for Bool;
      *(void *)(inited + 224) = 1752457584;
      *(void *)(inited + 232) = 0xE400000000000000;
      uint64_t v22 = (uint64_t *)((char *)v10 + v16[9]);
      uint64_t v24 = *v22;
      uint64_t v23 = v22[1];
      uint64_t v25 = sub_100043478(&qword_10022E060);
      *(void *)(inited + 240) = v24;
      *(void *)(inited + 248) = v23;
      *(void *)(inited + 264) = v25;
      *(void *)(inited + 272) = 0x6574617473;
      *(void *)(inited + 280) = 0xE500000000000000;
      *(void *)(inited + 288) = *((unsigned __int8 *)v10 + v16[10]);
      *(void *)(inited + 312) = &type metadata for Int;
      *(void *)(inited + 320) = 0x6E6F6973726576;
      *(void *)(inited + 328) = 0xE700000000000000;
      uint64_t v26 = (uint64_t *)((char *)v10 + v16[12]);
      uint64_t v27 = v26[1];
      *(void *)(inited + 336) = *v26;
      *(void *)(inited + 344) = v27;
      *(void *)(inited + 360) = &type metadata for String;
      *(void *)(inited + 368) = 0x79654B6863746162;
      uint64_t v28 = *v10;
      *(void *)(inited + 376) = 0xE900000000000073;
      *(void *)(inited + 384) = v28;
      *(void *)(inited + 408) = v19;
      *(void *)(inited + 416) = 0x79654B6568636163;
      uint64_t v30 = v10[2];
      uint64_t v29 = v10[3];
      *(void *)(inited + 456) = &type metadata for String;
      *(void *)(inited + 424) = 0xE800000000000000;
      *(void *)(inited + 432) = v30;
      *(void *)(inited + 440) = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v31 = Dictionary.init(dictionaryLiteral:)();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      double v60 = v12;
      unint64_t v33 = sub_100042ADC(v30, v29);
      uint64_t v35 = v12[2];
      BOOL v36 = (v34 & 1) == 0;
      Swift::Int v37 = v35 + v36;
      if (__OFADD__(v35, v36)) {
        break;
      }
      unint64_t v38 = v33;
      char v39 = v34;
      sub_100043478(&qword_10022E9F0);
      if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v37))
      {
        unint64_t v40 = sub_100042ADC(v30, v29);
        if ((v39 & 1) != (v41 & 1)) {
          goto LABEL_17;
        }
        unint64_t v38 = v40;
      }
      uint64_t v12 = v60;
      if (v39)
      {
        uint64_t v42 = v60[7];
        swift_bridgeObjectRelease();
        *(void *)(v42 + 8 * v38) = v31;
      }
      else
      {
        v60[(v38 >> 6) + 8] |= 1 << v38;
        uint64_t v43 = (uint64_t *)(v12[6] + 16 * v38);
        *uint64_t v43 = v30;
        v43[1] = v29;
        *(void *)(v12[7] + 8 * v38) = v31;
        uint64_t v44 = v12[2];
        BOOL v45 = __OFADD__(v44, 1);
        uint64_t v46 = v44 + 1;
        if (v45) {
          goto LABEL_16;
        }
        v12[2] = v46;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10007CDA8((uint64_t)v10);
      uint64_t v13 = v58 + v51;
      uint64_t v11 = v59 - 1;
      if (v59 == 1)
      {
        swift_bridgeObjectRelease();
        sub_1000AFE04((uint64_t)v12);
        uint64_t v48 = v47;
        swift_bridgeObjectRelease();
        return v48;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ContentInfo()
{
  uint64_t result = qword_10022EA78;
  if (!qword_10022EA78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100092730(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100092794(uint64_t *a1)
{
  return sub_1000A26C4(a1, *(uint64_t **)(v1 + 16)) & 1;
}

unint64_t sub_1000927B4()
{
  unint64_t result = qword_10022E9F8;
  if (!qword_10022E9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022E9F8);
  }
  return result;
}

uint64_t sub_100092800(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    sub_10004377C(a1);
  }
  return sub_10004377C(a1 + 32);
}

uint64_t sub_100092844(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    *(void *)(a1 + 24) = v4;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 56) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 32, a2 + 32);
  return a1;
}

uint64_t sub_1000928EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_8;
  }
  if (!v4)
  {
    sub_10004377C(a1);
    goto LABEL_7;
  }
  sub_100092988((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  sub_100092988((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  return a1;
}

uint64_t *sub_100092988(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 sub_100092BB0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_100092BC4(uint64_t a1, _OWORD *a2)
{
  if (*(void *)(a1 + 24)) {
    sub_10004377C(a1);
  }
  long long v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  sub_10004377C(a1 + 32);
  long long v5 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v5;
  return a1;
}

uint64_t sub_100092C14(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100092C54(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ContentInfo.InfoError()
{
}

unsigned char *sub_100092CB0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100092D7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContentInfo.State()
{
}

uint64_t sub_100092DB0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 8) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v5 = v6 - 9;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_100092E38(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100092F04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContentInfo.ExportKey()
{
}

char *sub_100092F38(char *a1, char *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  if ((v3 & 0x20000) != 0)
  {
    BOOL v7 = (char *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    BOOL v7 = a1;
    uint64_t v8 = *((void *)a2 + 2);
    *((void *)a1 + 1) = *((void *)a2 + 1);
    *((void *)a1 + 2) = v8;
    *((void *)a1 + 3) = *((void *)a2 + 3);
    uint64_t v9 = a3[7];
    uint64_t v27 = &a1[v9];
    uint64_t v10 = &a2[v9];
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v27, v10, v11);
    v12(&v7[a3[8]], &a2[a3[8]], v11);
    uint64_t v13 = a3[9];
    uint64_t v14 = a3[10];
    uint64_t v15 = &v7[v13];
    uint64_t v16 = &a2[v13];
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    v7[v14] = a2[v14];
    uint64_t v18 = a3[11];
    uint64_t v19 = a3[12];
    double v20 = &v7[v18];
    uint64_t v21 = &a2[v18];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)double v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    uint64_t v23 = &v7[v19];
    uint64_t v24 = &a2[v19];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1000930C8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for Date();
  unsigned int v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 32), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *sub_1000931AC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  uint64_t v8 = a3[7];
  uint64_t v26 = &a1[v8];
  uint64_t v9 = &a2[v8];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v26, v9, v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v12 = a3[9];
  uint64_t v13 = a3[10];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  a1[v13] = a2[v13];
  uint64_t v17 = a3[11];
  uint64_t v18 = a3[12];
  uint64_t v19 = &a1[v17];
  double v20 = &a2[v17];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  uint64_t v22 = &a1[v18];
  uint64_t v23 = &a2[v18];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1000932E8(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v11 = a3[9];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[10]] = a2[a3[10]];
  uint64_t v14 = a3[11];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[12];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100093474(char *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  uint64_t v7 = a3[7];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v12 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  a1[v12] = a2[v12];
  uint64_t v13 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  return a1;
}

char *sub_100093550(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRelease();
  uint64_t v6 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v12 = a3[9];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (uint64_t *)&a2[v12];
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = (uint64_t *)&a2[v17];
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[12];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = (uint64_t *)&a2[v22];
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *(void *)uint64_t v23 = v26;
  *((void *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100093688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009369C);
}

uint64_t sub_10009369C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 28);
    return sub_10004FD40(v9, a2, v8);
  }
}

uint64_t sub_100093724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100093738);
}

void *sub_100093738(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *__n128 result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 28);
    return (void *)sub_100021AC0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1000937B8()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10009387C()
{
  unint64_t result = qword_10022EAD0;
  if (!qword_10022EAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022EAD0);
  }
  return result;
}

unint64_t sub_1000938CC()
{
  unint64_t result = qword_10022EAD8;
  if (!qword_10022EAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022EAD8);
  }
  return result;
}

uint64_t sub_100093918(uint64_t *a1)
{
  return sub_100092794(a1) & 1;
}

void *sub_100093934(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100027304(0, v1, 0);
    int v3 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v4 = *(v3 - 1);
      unint64_t v5 = *v3;
      swift_bridgeObjectRetain_n();
      unint64_t v6 = String.count.getter();
      sub_100159E3C(v6, v4, v5);
      uint64_t v7 = static String._fromSubstring(_:)();
      uint64_t v9 = v8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1) {
        sub_100027304(v10 > 1, v11 + 1, 1);
      }
      v3 += 2;
      _swiftEmptyArrayStorage[2] = v11 + 1;
      uint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v7;
      v12[5] = v9;
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_100093A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100043478(&qword_10022D880);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v23 = v2;
    uint64_t v25 = _swiftEmptyArrayStorage;
    sub_100073328();
    unint64_t v10 = v25;
    uint64_t v11 = *(void *)(type metadata accessor for JSContent.CacheRequest(0) - 8);
    unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v24 = *(void *)(v11 + 72);
    uint64_t v13 = v12 + a1 + 16;
    do
    {
      uint64_t v14 = a2;
      sub_1000995B4();
      uint64_t v16 = v15;
      uint64_t v17 = *(void *)(v15 + 16);
      uint64_t v18 = type metadata accessor for ContentInfo();
      uint64_t v19 = v18;
      if (v17)
      {
        sub_100092730(v16+ ((*(unsigned __int8 *)(*(void *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v18 - 8) + 80)), (uint64_t)v8);
        uint64_t v20 = 0;
      }
      else
      {
        uint64_t v20 = 1;
      }
      sub_100021AC0((uint64_t)v8, v20, 1, v19);
      swift_bridgeObjectRelease();
      uint64_t v25 = v10;
      unint64_t v21 = v10[2];
      if (v21 >= v10[3] >> 1)
      {
        sub_100073328();
        unint64_t v10 = v25;
      }
      v10[2] = v21 + 1;
      sub_1000A275C((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v21);
      v13 += v24;
      --v9;
      a2 = v14;
    }
    while (v9);
    swift_release();
  }
  else
  {
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  return v10;
}

void sub_100093CFC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    unint64_t v7 = 0;
    uint64_t v8 = a1 + 40;
    uint64_t v9 = _swiftEmptyArrayStorage;
    uint64_t v20 = a1 + 40;
    do
    {
      unint64_t v21 = v9;
      unint64_t v10 = (uint64_t *)(v8 + 16 * v7);
      unint64_t v11 = v7;
      while (1)
      {
        if (v11 >= *(void *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        uint64_t v13 = *(v10 - 1);
        uint64_t v12 = *v10;
        unint64_t v7 = v11 + 1;
        swift_bridgeObjectRetain();
        v14._countAndFlagsBits = a2;
        v14._object = a3;
        if (String.hasPrefix(_:)(v14)) {
          break;
        }
        swift_bridgeObjectRelease();
        v10 += 2;
        ++v11;
        if (v5 == v7) {
          goto LABEL_13;
        }
      }
      uint64_t v9 = v21;
      uint64_t v23 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100027304(0, v21[2] + 1, 1);
        uint64_t v9 = v21;
      }
      unint64_t v16 = v9[2];
      unint64_t v15 = v9[3];
      unint64_t v17 = v16 + 1;
      if (v16 >= v15 >> 1)
      {
        unint64_t v22 = v16 + 1;
        unint64_t v19 = v9[2];
        sub_100027304(v15 > 1, v16 + 1, 1);
        unint64_t v17 = v22;
        unint64_t v16 = v19;
        uint64_t v9 = v23;
      }
      v9[2] = v17;
      uint64_t v18 = &v9[2 * v16];
      v18[4] = v13;
      v18[5] = v12;
      uint64_t v8 = v20;
    }
    while (v5 - 1 != v11);
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_100093E8C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    unint64_t v7 = 0;
    uint64_t v8 = a1 + 40;
    uint64_t v9 = _swiftEmptyArrayStorage;
    uint64_t v20 = a1 + 40;
    do
    {
      unint64_t v21 = v9;
      unint64_t v10 = (uint64_t *)(v8 + 16 * v7);
      unint64_t v11 = v7;
      while (1)
      {
        if (v11 >= *(void *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        uint64_t v13 = *(v10 - 1);
        uint64_t v12 = *v10;
        unint64_t v7 = v11 + 1;
        swift_bridgeObjectRetain();
        v14._countAndFlagsBits = a2;
        v14._object = a3;
        if (!String.hasPrefix(_:)(v14)) {
          break;
        }
        swift_bridgeObjectRelease();
        v10 += 2;
        ++v11;
        if (v5 == v7) {
          goto LABEL_13;
        }
      }
      uint64_t v9 = v21;
      uint64_t v23 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100027304(0, v21[2] + 1, 1);
        uint64_t v9 = v21;
      }
      unint64_t v16 = v9[2];
      unint64_t v15 = v9[3];
      unint64_t v17 = v16 + 1;
      if (v16 >= v15 >> 1)
      {
        unint64_t v22 = v16 + 1;
        unint64_t v19 = v9[2];
        sub_100027304(v15 > 1, v16 + 1, 1);
        unint64_t v17 = v22;
        unint64_t v16 = v19;
        uint64_t v9 = v23;
      }
      v9[2] = v17;
      uint64_t v18 = &v9[2 * v16];
      v18[4] = v13;
      v18[5] = v12;
      uint64_t v8 = v20;
    }
    while (v5 - 1 != v11);
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_10009401C()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  if (qword_10022C480 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  sub_100050D7C();
  uint64_t v6 = (__n128 *)swift_allocObject();
  sub_1000A2A54(v6, (__n128)xmmword_1001C3120);
  uint64_t v22 = sub_100043478(&qword_10022EC10);
  v21[0] = v0;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    sub_100049788(v21, v22);
    uint64_t DynamicType = swift_getDynamicType();
    MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v19[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v19, &qword_10022F490);
    sub_100020E44();
    MetatypeMetadata = &type metadata for String;
    v19[0] = v9;
    v19[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v19, &qword_10022F490);
    sub_1000208D8();
    sub_100040C54();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    uint64_t v13 = sub_100045CF8(v21);
    MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v19[0] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v19, &qword_10022F490);
    sub_100020E94();
    sub_100040C54();
  }
  sub_10004377C((uint64_t)v21);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_100035DCC(v14);
  swift_bridgeObjectRelease();
  unint64_t v15 = sub_100078E48();
  unint64_t v16 = (char *)v15[2];
  if (v16)
  {
    unint64_t v17 = (char *)(v15 + 4);
    type metadata accessor for ContentManager();
    do
    {
      char v18 = *v17++;
      *(unsigned char *)(sub_100030788() + 16) = v18;
      sub_10009C1D0();
      sub_10009D838(v2);
      swift_release();
      --v16;
    }
    while (v16);
  }
  swift_bridgeObjectRelease();
  sub_100020FDC();
}

void sub_1000942B8()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v164 = v2;
  uint64_t v162 = v3;
  uint64_t v161 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v178 = v9;
  sub_100045024();
  uint64_t v147 = v10;
  uint64_t v168 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_100043E58(v14, v145);
  uint64_t v177 = type metadata accessor for ContentInfo();
  sub_100020DEC();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_100011EC0();
  uint64_t v20 = v18 - v19;
  __chkstk_darwin(v21);
  sub_10004FBF4();
  uint64_t v171 = v22;
  sub_100020974();
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v145 - v25;
  __chkstk_darwin(v24);
  v169 = (char *)&v145 - v27;
  sub_100020974();
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v145 - v29;
  uint64_t v31 = sub_100043478(&qword_10022D880);
  uint64_t v32 = sub_100044798(v31);
  uint64_t v158 = v33;
  __chkstk_darwin(v32);
  v174 = (char *)&v145 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100020974();
  __chkstk_darwin(v35);
  uint64_t v176 = (uint64_t)&v145 - v36;
  sub_100020974();
  __chkstk_darwin(v37);
  sub_10004FBF4();
  uint64_t v170 = v38;
  sub_100020974();
  __chkstk_darwin(v39);
  sub_100022190();
  uint64_t v175 = v40;
  uint64_t v41 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v42 = sub_1000208F0(v41);
  __chkstk_darwin(v42);
  sub_10004A89C(v43, v145);
  if (qword_10022C480 != -1) {
    swift_once();
  }
  uint64_t v148 = v16;
  v173 = v26;
  uint64_t v167 = qword_1002440E8;
  sub_100043478(&qword_10022E560);
  uint64_t v44 = sub_1000208FC();
  sub_100044798(v44);
  uint64_t v46 = *(void *)(v45 + 72);
  uint64_t v48 = *(unsigned __int8 *)(v47 + 80);
  uint64_t v49 = (v48 + 32) & ~v48;
  uint64_t v163 = v46;
  v156 = v26;
  v154 = (void *)(v49 + 5 * v46);
  uint64_t v153 = v48 | 7;
  uint64_t v50 = swift_allocObject();
  long long v151 = xmmword_1001C3140;
  *(_OWORD *)(v50 + 16) = xmmword_1001C3140;
  uint64_t v155 = v49;
  uint64_t v166 = v50;
  v150 = (void *)type metadata accessor for ContentManager();
  v185 = v150;
  v182 = (void *)v1;
  swift_retain();
  id v51 = (id)AMSLogKey();
  if (v51)
  {
    char v52 = v51;
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000A29B8(v53);
    uint64_t v54 = v12;
    uint64_t v55 = v6;
    uint64_t v56 = v8;
    uint64_t v58 = v57;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    sub_100044FF4(&v182);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100040960(MetatypeMetadata);
    sub_1000A2AE4();
    sub_100020E44();
    v181 = &type metadata for String;
    uint64_t v179 = v165;
    uint64_t v180 = v58;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000A2AE4();
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    uint64_t v8 = v56;
    uint64_t v6 = v55;
    uint64_t v12 = v54;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    sub_100044FF4(&v182);
    uint64_t v60 = swift_getMetatypeMetadata();
    sub_100040960(v60);
    sub_100027BD8((uint64_t)&v179, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v182);
  uint64_t v61 = v163;
  sub_100043B80();
  v185 = &type metadata for String;
  v182 = (void *)v178;
  uint64_t v183 = v8;
  swift_bridgeObjectRetain();
  sub_1000A2AFC();
  sub_100047814();
  uint64_t v149 = 3 * v61;
  LogMessage.init(stringLiteral:)();
  int v62 = v161;
  LOBYTE(v182) = v161;
  int v63 = v161;
  uint64_t v183 = v162;
  uint64_t v184 = v164;
  v185 = &unk_1002115B8;
  swift_bridgeObjectRetain();
  sub_1000476B8();
  sub_100047814();
  uint64_t v64 = static os_log_type_t.info.getter();
  uint64_t v65 = v167;
  sub_10004841C(v64);
  swift_bridgeObjectRelease();
  int v66 = v62;
  if (v63 == 4) {
    int v66 = *(unsigned __int8 *)(v1 + 16);
  }
  HIDWORD(v146) = v66;
  swift_retain();
  uint64_t v157 = v6;
  double v67 = sub_100093A7C(v6, v1);
  uint64_t v68 = v67[2];
  uint64_t v172 = v1;
  uint64_t v159 = v8;
  v160 = v67;
  if (v68)
  {
    uint64_t v145 = v20;
    sub_100036300();
    uint64_t v167 = v12 + 8;
    uint64_t v166 = *(void *)(v69 + 72);
    swift_bridgeObjectRetain();
    uint64_t v70 = v68;
    uint64_t v71 = v177;
    uint64_t v165 = v68;
    uint64_t v72 = (uint64_t)v169;
    while (1)
    {
      uint64_t v73 = v175;
      sub_1000A2700(v65, v175, &qword_10022D880);
      uint64_t v74 = v73;
      uint64_t v75 = v170;
      sub_1000A2700(v74, v170, &qword_10022D880);
      if (sub_10004FD40(v75, 1, v71) == 1)
      {
        sub_100027BD8(v75, &qword_10022D880);
        goto LABEL_70;
      }
      sub_10007CC64(v75, (uint64_t)v30);
      uint64_t v8 = *(void *)&v30[*(int *)(v71 + 36) + 8];
      if (!v8) {
        goto LABEL_69;
      }
      int v76 = v30[*(int *)(v71 + 40)];
      sub_100092730((uint64_t)v30, v72);
      if (v76 != 2)
      {
        sub_10007CDA8(v72);
        goto LABEL_69;
      }
      swift_bridgeObjectRetain();
      Date.init()();
      char v77 = static Date.< infix(_:_:)();
      sub_100043FB0();
      v78();
      sub_10007CDA8(v72);
      if (v77) {
        break;
      }
      id v79 = [self defaultManager];
      NSString v80 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v8 = (uint64_t)[v79 fileExistsAtPath:v80];

      sub_10007CDA8((uint64_t)v30);
      sub_100027BD8(v175, &qword_10022D880);
      if ((v8 & 1) == 0) {
        goto LABEL_71;
      }
      v65 += v166;
      --v70;
      uint64_t v68 = v165;
      if (!v70)
      {
        double v67 = v160;
        swift_bridgeObjectRelease();
        uint64_t v1 = v172;
        uint64_t v20 = v145;
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
LABEL_69:
    sub_10007CDA8((uint64_t)v30);
LABEL_70:
    sub_100027BD8(v175, &qword_10022D880);
LABEL_71:
    swift_bridgeObjectRelease_n();
    uint64_t v129 = v157;
    uint64_t v130 = *(void *)(v157 + 16);
    if (!v130)
    {
LABEL_81:
      sub_100020FDC();
      return;
    }
    uint64_t v131 = type metadata accessor for JSContent.CacheRequest(0);
    sub_100020DEC();
    unint64_t v133 = (*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80);
    uint64_t v177 = v161;
    uint64_t v135 = *(void *)(v134 + 72);
    swift_bridgeObjectRetain();
    sub_1000A2A60();
    uint64_t v136 = v178;
    uint64_t v137 = v164;
    uint64_t v138 = v162;
    do
    {
      v139 = (unsigned __int8 *)(v129 + v133 + *(int *)(v131 + 28));
      int v140 = *v139;
      int v141 = v139[1];
      if (v139[2]) {
        int v142 = 0x10000;
      }
      else {
        int v142 = 0;
      }
      if (v141) {
        int v143 = 256;
      }
      else {
        int v143 = 0;
      }
      sub_1000959DC(v136, v8, *(void *)(v129 + v133), *(void *)(v129 + v133 + 8), *(void *)(v129 + v133 + 16), *(void *)(v129 + v133 + 24), v129 + v133 + *(int *)(v131 + 24), v143 | v140 | v142, v177, v138, v137, v144, v145, v146, v147, v148, v149, (uint64_t)v150, v151,
        *((uint64_t *)&v151 + 1),
        v152,
        v153,
        v154);
      v133 += v135;
      --v130;
    }
    while (v130);
LABEL_80:
    swift_bridgeObjectRelease();
    goto LABEL_81;
  }
LABEL_17:
  sub_1000A2AB8();
  v169 = (char *)(2 * v81);
  uint64_t v170 = 4 * v81;
  uint64_t v175 = qword_1002440E8;
  *(_OWORD *)(swift_allocObject() + 16) = v151;
  v185 = v150;
  v182 = (void *)v1;
  swift_retain();
  id v82 = (id)AMSLogKey();
  if (v82)
  {
    v83 = v82;
    uint64_t v168 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v85 = v84;

    swift_bridgeObjectRetain();
    sub_100020F60();
    v86._countAndFlagsBits = 0;
    v86._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v86);
    uint64_t v87 = sub_100020F04(&v182);
    v181 = (void *)swift_getMetatypeMetadata();
    uint64_t v179 = v87;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000A2AE4();
    sub_100020E44();
    v181 = &type metadata for String;
    uint64_t v179 = v168;
    uint64_t v180 = v85;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000A2AE4();
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    double v67 = v160;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    sub_100044FF4(&v182);
    uint64_t v89 = swift_getMetatypeMetadata();
    sub_100040960(v89);
    sub_100027BD8((uint64_t)&v179, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  uint64_t v88 = v148;
  sub_10004377C((uint64_t)&v182);
  sub_1000A2AB8();
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  v185 = &type metadata for String;
  v182 = (void *)v178;
  uint64_t v183 = v159;
  swift_bridgeObjectRetain();
  sub_1000A2AFC();
  sub_100047814();
  sub_100043B80();
  v185 = (void *)sub_100043478(&qword_10022EC28);
  v182 = v67;
  swift_bridgeObjectRetain();
  sub_1000476B8();
  sub_100047814();
  uint64_t v90 = static os_log_type_t.info.getter();
  uint64_t v91 = v175;
  sub_10004841C(v90);
  swift_bridgeObjectRelease();
  if (v164)
  {
    uint64_t v91 = v147;
    sub_1000950B8();
  }
  uint64_t v92 = (uint64_t)v174;
  if (v68)
  {
    sub_100036300();
    uint64_t v94 = *(void *)(v93 + 72);
    swift_bridgeObjectRetain();
    v95 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v96 = v176;
      sub_1000A2700(v91, v176, &qword_10022D880);
      sub_1000A275C(v96, v92);
      if (sub_10004FD40(v92, 1, v177) == 1)
      {
        sub_100027BD8(v92, &qword_10022D880);
      }
      else
      {
        uint64_t v97 = v92;
        uint64_t v98 = v171;
        sub_10007CC64(v97, v171);
        sub_10007CC64(v98, v20);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v102 = sub_100036250();
          v95 = (void *)sub_10007084C(v102, v103, v104, (uint64_t)v95);
        }
        unint64_t v100 = v95[2];
        unint64_t v99 = v95[3];
        if (v100 >= v99 >> 1)
        {
          BOOL v105 = sub_100020DC4(v99);
          v95 = (void *)sub_10007084C(v105, v106, v107, (uint64_t)v95);
        }
        v95[2] = v100 + 1;
        sub_10002A0E8();
        sub_10007CC64(v20, v101 + *(void *)(v88 + 72) * v100);
        uint64_t v92 = (uint64_t)v174;
      }
      v91 += v94;
      --v68;
    }
    while (v68);
    swift_bridgeObjectRelease();
  }
  else
  {
    v95 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  uint64_t v108 = v95[2];
  uint64_t v109 = (uint64_t)v173;
  if (!v108) {
    goto LABEL_80;
  }
  uint64_t v110 = v159;
  sub_10002A0E8();
  uint64_t v177 = v111;
  uint64_t v176 = *(void *)(v88 + 72);
  swift_bridgeObjectRetain();
  uint64_t v112 = 0;
  while (1)
  {
    sub_100092730(v177 + v176 * v112, v109);
    v113 = *(void **)v109;
    uint64_t v114 = *(void *)(*(void *)v109 + 16);
    if (!v114) {
      goto LABEL_43;
    }
    BOOL v115 = v113[4] == v178 && v113[5] == v110;
    if (!v115 && (sub_1000A292C() & 1) == 0)
    {
      if (v114 == 1) {
        goto LABEL_43;
      }
      BOOL v121 = v113[6] == v178 && v113[7] == v110;
      if (!v121 && (sub_1000A292C() & 1) == 0) {
        break;
      }
    }
LABEL_48:
    ++v112;
    sub_10007CDA8(v109);
    if (v112 == v108)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_81;
    }
  }
  if (v114 == 2)
  {
LABEL_43:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1000502C4(0, v114 + 1, 1, (uint64_t)v113);
      v113 = v126;
    }
    unint64_t v117 = v113[2];
    unint64_t v116 = v113[3];
    uint64_t v118 = v178;
    if (v117 >= v116 >> 1)
    {
      BOOL v127 = sub_1000A2948(v116);
      sub_1000502C4(v127, v117 + 1, 1, (uint64_t)v113);
      v113 = v128;
    }
    v113[2] = v117 + 1;
    v119 = &v113[2 * v117];
    v119[4] = v118;
    v119[5] = v110;
    v120 = v173;
    void *v173 = v113;
    sub_10009A43C();
    uint64_t v109 = (uint64_t)v120;
    goto LABEL_48;
  }
  v122 = v113 + 9;
  uint64_t v123 = 2;
  while (1)
  {
    uint64_t v124 = v123 + 1;
    if (__OFADD__(v123, 1)) {
      break;
    }
    BOOL v125 = *(v122 - 1) == v178 && *v122 == v110;
    if (v125 || (sub_1000A292C() & 1) != 0) {
      goto LABEL_48;
    }
    v122 += 2;
    ++v123;
    if (v124 == v114) {
      goto LABEL_43;
    }
  }
  __break(1u);
}

void sub_1000950B8()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v9 = sub_1000208F0(v8);
  __chkstk_darwin(v9);
  sub_10002257C();
  __chkstk_darwin(v10);
  sub_10004FBF4();
  uint64_t v69 = v11;
  sub_100020974();
  __chkstk_darwin(v12);
  if (v1)
  {
    v67[2] = (char *)v67 - v13;
    uint64_t v68 = v7;
    uint64_t v14 = (void *)_convertErrorToNSError(_:)();
    sub_100043478(&qword_10022D330);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001C3130;
    *(void *)(inited + 32) = 0x656372756F73;
    *(void *)(inited + 40) = 0xE600000000000000;
    uint64_t v16 = (void *)sub_100046C68(inited);
    v16[9] = &type metadata for String;
    v16[10] = v17;
    v16[11] = v18;
    v16[12] = 0xD000000000000013;
    uint64_t v19 = (void *)sub_100052108((uint64_t)v16, (uint64_t)"BatchDownloadFailed");
    v19[15] = &type metadata for String;
    v19[16] = v20;
    v19[21] = &type metadata for String;
    v19[17] = 0xEA00000000007265;
    v19[18] = v5;
    uint64_t v70 = v5;
    uint64_t v71 = v3;
    v19[19] = v3;
    uint64_t v21 = v14;
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_1000228D8();
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1001C3FC0;
    *(void *)(v22 + 32) = 1701080931;
    *(void *)(v22 + 40) = 0xE400000000000000;
    *(void *)(v22 + 48) = [v14 code];
    *(void *)(v22 + 72) = &type metadata for Int;
    *(void *)(v22 + 80) = 0x6E69616D6F64;
    *(void *)(v22 + 88) = 0xE600000000000000;
    id v23 = [v14 domain];
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;

    *(void *)(v22 + 96) = v24;
    *(void *)(v22 + 104) = v26;
    *(void *)(v22 + 120) = &type metadata for String;
    *(void *)(v22 + 128) = 0x656C746974;
    *(void *)(v22 + 136) = 0xE500000000000000;
    uint64_t v27 = sub_100038B5C(v14, (SEL *)&selRef_ams_title);
    if (v28) {
      uint64_t v29 = v27;
    }
    else {
      uint64_t v29 = 0;
    }
    if (v28) {
      unint64_t v30 = v28;
    }
    else {
      unint64_t v30 = 0xE000000000000000;
    }
    *(void *)(v22 + 144) = v29;
    *(void *)(v22 + 152) = v30;
    *(void *)(v22 + 168) = &type metadata for String;
    *(void *)(v22 + 176) = 0x6567617373656DLL;
    *(void *)(v22 + 184) = 0xE700000000000000;
    uint64_t v31 = sub_100038B5C(v14, (SEL *)&selRef_ams_message);
    *(void *)(v22 + 216) = &type metadata for String;
    if (v32) {
      uint64_t v33 = v31;
    }
    else {
      uint64_t v33 = 0;
    }
    if (v32) {
      unint64_t v34 = v32;
    }
    else {
      unint64_t v34 = 0xE000000000000000;
    }
    *(void *)(v22 + 192) = v33;
    *(void *)(v22 + 200) = v34;
    uint64_t v35 = sub_1000228D8();
    v78 = (void *)sub_100043478(&qword_10022D7B0);
    uint64_t v76 = v35;
    sub_10003E698((uint64_t)&v76, 0x726F727265, 0xE500000000000000);
    if (qword_10022C480 != -1) {
      swift_once();
    }
    v67[1] = qword_1002440E8;
    sub_100043478(&qword_10022E560);
    uint64_t v36 = sub_10002D318();
    sub_100044798(v36);
    v67[0] = *(void *)(v37 + 72);
    *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
    v78 = (void *)sub_100043478(&qword_10022EC10);
    uint64_t v76 = v72;
    id v38 = (id)AMSLogKey();
    if (v38)
    {
      uint64_t v39 = v38;
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v42 = v41;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020E60();
      uint64_t v43 = sub_10002FD7C();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v73 = v43;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v73, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v73 = v40;
      uint64_t v74 = v42;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v73, &qword_10022F490);
      sub_1000208D8();
      sub_100011CC0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100020E60();
      uint64_t v59 = sub_10002FD7C();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v73 = v59;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v73, &qword_10022F490);
      sub_100020E94();
      sub_100011CC0();
    }
    sub_10004377C((uint64_t)&v76);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v60._countAndFlagsBits = 0xD00000000000003BLL;
    v60._object = (void *)0x80000001001CC2E0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v60);
    v78 = &type metadata for String;
    uint64_t v76 = v70;
    uint64_t v77 = v71;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v76, &qword_10022F490);
    sub_1000525B0();
    sub_100011E50();
    uint64_t v7 = v68;
    switch((char)v68)
    {
      case 1:
        sub_100011DD8();
        break;
      case 2:
        sub_10004D598();
        break;
      case 3:
        sub_100022780();
        break;
      default:
        break;
    }
    sub_1000A2AD0(v61);
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v76, &qword_10022F490);
    sub_100020E60();
    sub_100011CC0();
    uint64_t v62 = static os_log_type_t.error.getter();
    sub_10004841C(v62);
  }
  else
  {
    sub_100043478(&qword_10022D330);
    uint64_t v44 = swift_initStackObject();
    *(_OWORD *)(v44 + 16) = xmmword_1001C3FC0;
    *(void *)(v44 + 32) = 0x656372756F73;
    *(void *)(v44 + 40) = 0xE600000000000000;
    uint64_t v45 = (void *)sub_100046C68(v44);
    v45[9] = &type metadata for String;
    v45[10] = v46;
    v45[11] = 0xE900000000000065;
    v45[12] = 0xD00000000000001ALL;
    uint64_t v47 = sub_100052108((uint64_t)v45, (uint64_t)"DisplayRestrictionsChanged");
    *(void *)(v47 + 120) = &type metadata for String;
    *(void *)(v47 + 128) = v48;
    *(void *)(v47 + 136) = 0xEA00000000007265;
    *(void *)(v47 + 144) = v5;
    *(void *)(v47 + 152) = v3;
    *(void *)(v47 + 168) = &type metadata for String;
    *(void *)(v47 + 176) = 0x6E65746E6F437369;
    *(void *)(v47 + 184) = 0xEF64656863614374;
    *(void *)(v47 + 216) = &type metadata for Bool;
    *(unsigned char *)(v47 + 192) = 1;
    swift_bridgeObjectRetain();
    uint64_t v79 = Dictionary.init(dictionaryLiteral:)();
    uint64_t v49 = v5;
    if (qword_10022C480 != -1) {
      swift_once();
    }
    uint64_t v69 = qword_1002440E8;
    sub_100043478(&qword_10022E560);
    uint64_t v50 = type metadata accessor for LogMessage();
    sub_100044798(v50);
    sub_10004A1C4();
    uint64_t v68 = v51;
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    v78 = (void *)sub_100043478(&qword_10022EC10);
    uint64_t v76 = v72;
    id v52 = (id)AMSLogKey();
    if (v52)
    {
      uint64_t v53 = v52;
      uint64_t v70 = v49;
      uint64_t v71 = v3;
      uint64_t v54 = v7;
      uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v57 = v56;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020E60();
      uint64_t v58 = sub_100049944(&v76);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v73 = v58;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v73, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v73 = v55;
      uint64_t v74 = v57;
      uint64_t v7 = v54;
      uint64_t v49 = v70;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v73, &qword_10022F490);
      sub_1000208D8();
      sub_100011CC0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100020E60();
      uint64_t v63 = sub_100049944(&v76);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v73 = v63;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v73, &qword_10022F490);
      sub_100020E94();
      sub_100011DB4();
    }
    sub_10004377C((uint64_t)&v76);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_10002064C();
    LogMessage.StringInterpolation.appendLiteral(_:)(v64);
    v78 = &type metadata for String;
    uint64_t v76 = v49;
    uint64_t v77 = v3;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v76, &qword_10022F490);
    sub_1000525B0();
    sub_100011E50();
    switch((char)v7)
    {
      case 1:
        sub_100011DD8();
        break;
      case 2:
        sub_10004D598();
        break;
      case 3:
        sub_100022780();
        break;
      default:
        break;
    }
    sub_1000A2AD0(v65);
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v76, &qword_10022F490);
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    uint64_t v66 = static os_log_type_t.default.getter();
    sub_10004841C(v66);
  }
  swift_bridgeObjectRelease();
  sub_10009F54C(v7, v79);
  swift_bridgeObjectRelease();
  sub_100020FDC();
}

void sub_1000959DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  sub_1000209F4();
  a19 = v25;
  a20 = v26;
  int v171 = v27;
  uint64_t v186 = v29;
  *(void *)&long long v187 = v28;
  *(void *)&long long v188 = v30;
  *((void *)&v188 + 1) = v31;
  *((void *)&v187 + 1) = v32;
  uint64_t v34 = v33;
  uint64_t v184 = v35;
  uint64_t v36 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v174 = v37;
  __chkstk_darwin(v38);
  sub_100035C70();
  uint64_t v173 = v39;
  sub_100020974();
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v165 - v41;
  uint64_t v43 = sub_100043478(&qword_10022D880);
  uint64_t v44 = sub_1000208F0(v43);
  __chkstk_darwin(v44);
  sub_100040A70();
  uint64_t v183 = v45;
  uint64_t v185 = type metadata accessor for ContentInfo();
  sub_1000456E0();
  __chkstk_darwin(v46);
  sub_100035C70();
  uint64_t v172 = v47;
  sub_100020974();
  __chkstk_darwin(v48);
  sub_100022190();
  uint64_t v177 = v49;
  uint64_t v50 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v51 = sub_1000208F0(v50);
  __chkstk_darwin(v51);
  sub_100011EC0();
  __chkstk_darwin(v52);
  uint64_t v54 = (char *)&v165 - v53;
  if (qword_10022C480 != -1) {
    swift_once();
  }
  uint64_t v182 = qword_1002440E8;
  uint64_t v55 = sub_100043478(&qword_10022E560);
  uint64_t v56 = type metadata accessor for LogMessage();
  sub_100044798(v56);
  sub_100050D7C();
  id v190 = v57;
  uint64_t v180 = v55;
  uint64_t v167 = v24 + 2 * (void)v57;
  uint64_t v178 = v58 | 7;
  uint64_t v59 = (uint64_t *)swift_allocObject();
  long long v169 = xmmword_1001C3120;
  *((_OWORD *)v59 + 1) = xmmword_1001C3120;
  uint64_t v179 = v24;
  uint64_t v60 = type metadata accessor for ContentManager();
  *((void *)&v196 + 1) = sub_1000A29F8(v60);
  *(void *)&long long v195 = v23;
  uint64_t v191 = v23;
  swift_retain();
  id v61 = (id)AMSLogKey();
  uint64_t v189 = v34;
  uint64_t v175 = v42;
  if (v61)
  {
    uint64_t v62 = v61;
    uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v64 = v36;
    uint64_t v66 = v65;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100044E44();
    sub_100020F04(&v195);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100042048(MetatypeMetadata);
    sub_100027BD8((uint64_t)&v192, &qword_10022F490);
    sub_100020E44();
    v194 = &type metadata for String;
    uint64_t v192 = v63;
    uint64_t v193 = v66;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    uint64_t v34 = v189;
    sub_100027BD8((uint64_t)&v192, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    uint64_t v36 = v64;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100044E44();
    sub_100020F04(&v195);
    uint64_t v68 = swift_getMetatypeMetadata();
    sub_100042048(v68);
    sub_100027BD8((uint64_t)&v192, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  v181 = a23;
  uint64_t v69 = a22;
  sub_10004377C((uint64_t)&v195);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10002064C();
  LogMessage.StringInterpolation.appendLiteral(_:)(v70);
  uint64_t v166 = v69;
  uint64_t v168 = v54;
  uint64_t v176 = v36;
  if (v34)
  {
    *((void *)&v196 + 1) = &type metadata for String;
    *(void *)&long long v195 = v184;
    *((void *)&v195 + 1) = v34;
  }
  else
  {
    long long v195 = 0u;
    long long v196 = 0u;
  }
  uint64_t v170 = a21;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000228A8();
  v71._countAndFlagsBits = 0x3A79656B090A202CLL;
  v71._object = (void *)0xE900000000000020;
  LogMessage.StringInterpolation.appendLiteral(_:)(v71);
  *((void *)&v196 + 1) = &type metadata for String;
  long long v195 = v187;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000228A8();
  v72._countAndFlagsBits = 0x73726576090A202CLL;
  v72._object = (void *)0xED0000203A6E6F69;
  LogMessage.StringInterpolation.appendLiteral(_:)(v72);
  *((void *)&v196 + 1) = &type metadata for String;
  long long v195 = v188;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000228A8();
  v73._countAndFlagsBits = 0x3A6C7275090A202CLL;
  v73._object = (void *)0xE900000000000020;
  LogMessage.StringInterpolation.appendLiteral(_:)(v73);
  *((void *)&v196 + 1) = type metadata accessor for URL();
  sub_10003BAA4((uint64_t *)&v195);
  sub_1000456E0();
  sub_100011DCC();
  v74();
  LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
  sub_1000228A8();
  v75._countAndFlagsBits = 10506;
  v75._object = (void *)0xE200000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v75);
  LogMessage.init(stringInterpolation:)();
  uint64_t v76 = static os_log_type_t.default.getter();
  sub_10004841C(v76);
  swift_bridgeObjectRelease();
  uint64_t v77 = v191;
  sub_1000995B4();
  uint64_t v78 = v183;
  sub_100159D48(v79, v183);
  swift_bridgeObjectRelease();
  NSString v80 = (void *)&unk_10022C000;
  if (sub_10004FD40(v78, 1, v185) != 1)
  {
    sub_1000A2AC4();
    sub_10007CC64(v84, (uint64_t)v59);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    sub_1000439D4((uint64_t)&a14);
    id v85 = (id)AMSLogKey();
    if (v85)
    {
      Swift::String v86 = v85;
      uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v89 = v88;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_10004C17C();
      sub_100020F04(&v195);
      uint64_t v90 = swift_getMetatypeMetadata();
      sub_100045788(v90);
      uint64_t v59 = &qword_10022F490;
      sub_100017E2C();
      sub_100020E44();
      v194 = &type metadata for String;
      uint64_t v192 = v87;
      uint64_t v193 = v89;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000A2AC4();
      sub_100027BD8(v91, v92);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      uint64_t v77 = v191;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_10004C17C();
      sub_100020F04(&v195);
      uint64_t v93 = swift_getMetatypeMetadata();
      sub_100045788(v93);
      sub_100027BD8((uint64_t)&v192, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v195);
    sub_100020924();
    LogMessage.init(stringLiteral:)();
    uint64_t v94 = v185;
    *((void *)&v196 + 1) = v185;
    v95 = sub_10003BAA4((uint64_t *)&v195);
    sub_100092730((uint64_t)v59, (uint64_t)v95);
    sub_100049F88();
    sub_100027BD8((uint64_t)&v195, &qword_10022F490);
    uint64_t v96 = static os_log_type_t.info.getter();
    sub_10004841C(v96);
    swift_bridgeObjectRelease();
    if (!*(uint64_t *)((char *)v59 + *(int *)(v94 + 36) + 8)) {
      goto LABEL_19;
    }
    if (*((unsigned char *)v59 + *(int *)(v94 + 40)) != 2) {
      goto LABEL_19;
    }
    uint64_t v97 = self;
    swift_bridgeObjectRetain();
    id v98 = [v97 defaultManager];
    NSString v99 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned int v100 = [v98 fileExistsAtPath:v99];

    if (v100)
    {
      uint64_t v101 = (__n128 *)sub_100011D10();
      sub_10004FCE0(v101);
      sub_1000439D4((uint64_t)&a14);
      id v102 = (id)AMSLogKey();
      if (v102)
      {
        uint64_t v103 = v102;
        uint64_t v104 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v106 = v105;

        swift_bridgeObjectRetain();
        sub_100020F60();
        sub_10004C17C();
        sub_100020F04(&v195);
        uint64_t v107 = swift_getMetatypeMetadata();
        sub_100045788(v107);
        sub_10003BDD4();
        sub_100020E44();
        v194 = &type metadata for String;
        uint64_t v192 = v104;
        uint64_t v193 = v106;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        uint64_t v77 = v191;
        sub_100027BD8((uint64_t)&v192, &qword_10022F490);
        sub_1000208D8();
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020980();
        sub_10004C17C();
        sub_100020F04(&v195);
        uint64_t v155 = swift_getMetatypeMetadata();
        sub_100045788(v155);
        sub_100027BD8((uint64_t)&v192, &qword_10022F490);
        sub_100020E94();
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v195);
    }
    else
    {
LABEL_19:
      if (qword_10022C568 != -1) {
        swift_once();
      }
      char v108 = sub_10014A298((uint64_t)v59);
      uint64_t v109 = (__n128 *)sub_100011D10();
      sub_10004FCE0(v109);
      if ((v108 & 1) == 0)
      {
        sub_1000439D4((uint64_t)&a14);
        id v116 = (id)AMSLogKey();
        if (v116)
        {
          unint64_t v117 = v116;
          uint64_t v118 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v120 = v119;

          swift_bridgeObjectRetain();
          sub_100020F60();
          sub_10004C17C();
          sub_100020F04(&v195);
          uint64_t v121 = swift_getMetatypeMetadata();
          sub_100045788(v121);
          sub_10003BDD4();
          sub_100020E44();
          v194 = &type metadata for String;
          uint64_t v192 = v118;
          uint64_t v193 = v120;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10003BDD4();
          sub_1000208D8();
          sub_1000A2A24();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100020980();
          sub_10004C17C();
          sub_100020F04(&v195);
          uint64_t v123 = swift_getMetatypeMetadata();
          sub_100045788(v123);
          sub_100027BD8((uint64_t)&v192, &qword_10022F490);
          sub_100020E94();
          sub_1000A2A24();
        }
        sub_10004377C((uint64_t)&v195);
        sub_1000A2AA4();
        sub_100043B80();
        uint64_t v124 = static os_log_type_t.info.getter();
        sub_10004841C(v124);
        swift_bridgeObjectRelease();
        v83 = v172;
        if (v189)
        {
          sub_1000920B0(v184, v189);
          *(void *)&long long v195 = *v59;
          swift_bridgeObjectRetain();
          sub_100043478(&qword_100232940);
          sub_10007865C();
          uint64_t v81 = BidirectionalCollection<>.joined(separator:)();
          unint64_t v82 = v125;
          swift_bridgeObjectRelease();
          sub_10007CDA8((uint64_t)v59);
        }
        else
        {
          sub_10007CDA8((uint64_t)v59);
          uint64_t v81 = 0;
          unint64_t v82 = 0;
        }
        NSString v80 = &unk_10022C000;
        goto LABEL_33;
      }
      sub_1000439D4((uint64_t)&a14);
      id v110 = (id)AMSLogKey();
      if (v110)
      {
        uint64_t v111 = v110;
        uint64_t v112 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v114 = v113;

        swift_bridgeObjectRetain();
        sub_100020F60();
        sub_10004C17C();
        sub_100020F04(&v195);
        uint64_t v115 = swift_getMetatypeMetadata();
        sub_100045788(v115);
        sub_10003BDD4();
        sub_100020E44();
        v194 = &type metadata for String;
        uint64_t v192 = v112;
        uint64_t v193 = v114;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        uint64_t v77 = v191;
        sub_100027BD8((uint64_t)&v192, &qword_10022F490);
        sub_1000208D8();
        sub_1000A2A24();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020980();
        sub_10004C17C();
        sub_100020F04(&v195);
        uint64_t v122 = swift_getMetatypeMetadata();
        sub_100045788(v122);
        sub_100027BD8((uint64_t)&v192, &qword_10022F490);
        sub_100020E94();
        sub_1000A2A24();
      }
      sub_10004377C((uint64_t)&v195);
      sub_1000A2AA4();
    }
    sub_100043B80();
    uint64_t v156 = static os_log_type_t.info.getter();
    sub_10004841C(v156);
    swift_bridgeObjectRelease();
    sub_1000969CC((uint64_t)v59, v184, v189, v170, v166, v181, v77);
    v83 = v59;
    goto LABEL_58;
  }
  sub_100027BD8(v78, &qword_10022D880);
  uint64_t v81 = 0;
  unint64_t v82 = 0;
  v83 = v172;
LABEL_33:
  if (v80[173] != -1) {
    swift_once();
  }
  sub_100149D14();
  uint64_t v127 = v126;
  uint64_t v129 = v128;
  id v190 = v130;
  if (!v82)
  {
    unint64_t v82 = v189;
    swift_bridgeObjectRetain();
    uint64_t v81 = v184;
  }
  uint64_t v131 = *((void *)&v187 + 1);
  swift_bridgeObjectRetain();
  uint64_t v132 = *((void *)&v188 + 1);
  swift_bridgeObjectRetain();
  static Date.now.getter();
  uint64_t v133 = (uint64_t)v175;
  Date.addingTimeInterval(_:)();
  sub_100043FB0();
  v134();
  swift_bridgeObjectRetain();
  sub_100091B1C(v81, v82, v187, v131, v188, v132, v133, v127, v83, v129, 1);
  uint64_t v135 = v181;
  if (v181 != (void *)1)
  {
    unint64_t v136 = 0xE900000000000073;
    uint64_t v137 = 0x636974796C616E61;
    switch((char)v170)
    {
      case 1:
        unint64_t v136 = 0xE800000000000000;
        uint64_t v137 = 0x6C616E7265746E69;
        goto LABEL_42;
      case 2:
        unint64_t v136 = 0xE800000000000000;
        uint64_t v137 = 0x7379656E72756F6ALL;
        goto LABEL_42;
      case 3:
        unint64_t v136 = 0xEF736E6F69746164;
        uint64_t v137 = 0x6E656D6D6F636572;
        goto LABEL_42;
      case 4:
        goto LABEL_47;
      default:
LABEL_42:
        uint64_t v138 = v83[1];
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000A2994();
          uint64_t v138 = v157;
        }
        unint64_t v140 = *(void *)(v138 + 16);
        unint64_t v139 = *(void *)(v138 + 24);
        if (v140 >= v139 >> 1)
        {
          BOOL v158 = sub_100020DC4(v139);
          sub_1000502C4(v158, v159, v160, v138);
          uint64_t v138 = v161;
        }
        *(void *)(v138 + 16) = v140 + 1;
        uint64_t v141 = v138 + 16 * v140;
        *(void *)(v141 + 32) = v137;
        *(void *)(v141 + 40) = v136;
        uint64_t v142 = swift_bridgeObjectRetain();
        uint64_t v143 = sub_10002318C(v142);
        uint64_t v144 = sub_10015B754(v143);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v83[1] = (uint64_t)v144;
LABEL_47:
        if (v189 && v135)
        {
          uint64_t v145 = sub_100096DBC(v166, v135, v184);
          uint64_t v147 = v146;
          uint64_t v148 = v83[1];
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1000A2994();
            uint64_t v148 = v162;
          }
          unint64_t v150 = *(void *)(v148 + 16);
          unint64_t v149 = *(void *)(v148 + 24);
          if (v150 >= v149 >> 1)
          {
            BOOL v163 = sub_1000A2948(v149);
            sub_1000502C4(v163, v150 + 1, 1, v148);
            uint64_t v148 = v164;
          }
          *(void *)(v148 + 16) = v150 + 1;
          uint64_t v151 = v148 + 16 * v150;
          *(void *)(v151 + 32) = v145;
          *(void *)(v151 + 40) = v147;
          uint64_t v152 = swift_bridgeObjectRetain();
          uint64_t v153 = sub_10002318C(v152);
          v154 = sub_10015B754(v153);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v83[1] = (uint64_t)v154;
        }
        break;
    }
  }
  sub_10009A43C();

  swift_bridgeObjectRelease();
LABEL_58:
  sub_10007CDA8((uint64_t)v83);
  sub_100020FDC();
}

uint64_t sub_1000969CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v48 = a4;
  uint64_t v49 = a7;
  uint64_t v47 = a5;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v46 - v16;
  uint64_t v18 = type metadata accessor for ContentInfo();
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100092730(a1, (uint64_t)v21);
  static Date.now.getter();
  Date.addingTimeInterval(_:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(&v21[*(int *)(v19 + 40)], v17, v11);
  if (a3)
  {
    sub_1000920B0(a2, a3);
    if (a6)
    {
      if (a6 == (void *)1) {
        goto LABEL_19;
      }
      uint64_t v22 = sub_100096DBC(v47, a6, a2);
      uint64_t v24 = v23;
      uint64_t v25 = *((void *)v21 + 1);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000502C4(0, *(void *)(v25 + 16) + 1, 1, v25);
        uint64_t v25 = v44;
      }
      unint64_t v27 = *(void *)(v25 + 16);
      unint64_t v26 = *(void *)(v25 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1000502C4(v26 > 1, v27 + 1, 1, v25);
        uint64_t v25 = v45;
      }
      *(void *)(v25 + 16) = v27 + 1;
      uint64_t v28 = v25 + 16 * v27;
      *(void *)(v28 + 32) = v22;
      *(void *)(v28 + 40) = v24;
      uint64_t v29 = swift_bridgeObjectRetain();
      uint64_t v30 = sub_10002318C(v29);
      uint64_t v31 = sub_10015B754(v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *((void *)v21 + 1) = v31;
    }
  }
  else if (a6 == (void *)1)
  {
    goto LABEL_19;
  }
  unint64_t v32 = 0xE900000000000073;
  uint64_t v33 = 0x636974796C616E61;
  switch((char)v48)
  {
    case 1:
      unint64_t v32 = 0xE800000000000000;
      uint64_t v33 = 0x6C616E7265746E69;
      goto LABEL_14;
    case 2:
      unint64_t v32 = 0xE800000000000000;
      uint64_t v33 = 0x7379656E72756F6ALL;
      goto LABEL_14;
    case 3:
      unint64_t v32 = 0xEF736E6F69746164;
      uint64_t v33 = 0x6E656D6D6F636572;
      goto LABEL_14;
    case 4:
      break;
    default:
LABEL_14:
      uint64_t v34 = *((void *)v21 + 1);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000502C4(0, *(void *)(v34 + 16) + 1, 1, v34);
        uint64_t v34 = v42;
      }
      unint64_t v36 = *(void *)(v34 + 16);
      unint64_t v35 = *(void *)(v34 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_1000502C4(v35 > 1, v36 + 1, 1, v34);
        uint64_t v34 = v43;
      }
      *(void *)(v34 + 16) = v36 + 1;
      uint64_t v37 = v34 + 16 * v36;
      *(void *)(v37 + 32) = v33;
      *(void *)(v37 + 40) = v32;
      uint64_t v38 = swift_bridgeObjectRetain();
      uint64_t v39 = sub_10002318C(v38);
      uint64_t v40 = sub_10015B754(v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *((void *)v21 + 1) = v40;
      break;
  }
LABEL_19:
  sub_10009A43C();
  return sub_10007CDA8((uint64_t)v21);
}

uint64_t sub_100096DBC(uint64_t a1, void *a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  sub_10002064C();
  v5._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v5);
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  String.append(_:)(v6);
  return a3;
}

void sub_100096E2C()
{
  sub_1000209F4();
  uint64_t v83 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for ContentInfo();
  sub_1000456E0();
  __chkstk_darwin(v9);
  sub_100020EAC();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v14 = sub_1000208F0(v13);
  __chkstk_darwin(v14);
  sub_100011D4C();
  uint64_t v15 = sub_100043478(&qword_10022EC00);
  uint64_t v16 = sub_1000208F0(v15);
  __chkstk_darwin(v16);
  sub_100020658();
  uint64_t v17 = sub_100043478(&qword_10022EC08);
  sub_1000456E0();
  __chkstk_darwin(v18);
  sub_100011EC0();
  uint64_t v21 = (unsigned char *)(v19 - v20);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v73 - v23;
  uint64_t v81 = type metadata accessor for ContentManager();
  sub_100097564();
  sub_10004272C((uint64_t)v0);
  if (v25)
  {
    sub_100027BD8((uint64_t)v0, &qword_10022EC00);
    if (qword_10022C480 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v26 = sub_1000208FC();
    sub_100044798(v26);
    sub_100050D7C();
    unint64_t v27 = (__n128 *)swift_allocObject();
    sub_1000A2A54(v27, (__n128)xmmword_1001C3130);
    uint64_t v91 = (void *)sub_100043478(&qword_10022EC10);
    uint64_t v89 = v83;
    id v28 = (id)AMSLogKey();
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v32 = v31;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020E60();
      sub_100049788(&v89, (uint64_t)v91);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v86 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v86, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v86 = v30;
      uint64_t v87 = v32;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v86, &qword_10022F490);
      sub_1000208D8();
      sub_100040C54();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100020E60();
      sub_100044FF4(&v89);
      uint64_t v46 = swift_getMetatypeMetadata();
      sub_100040960(v46);
      sub_100027BD8((uint64_t)&v86, &qword_10022F490);
      sub_100020E94();
      sub_100040C54();
    }
    sub_10004377C((uint64_t)&v89);
    sub_100043B80();
    uint64_t v91 = &type metadata for String;
    uint64_t v89 = v7;
    uint64_t v90 = v5;
    swift_bridgeObjectRetain();
    sub_1000A2AFC();
    sub_100027BD8((uint64_t)&v89, &qword_10022F490);
    uint64_t v47 = static os_log_type_t.error.getter();
    sub_100035DCC(v47);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v77 = v21;
    uint64_t v79 = v3;
    uint64_t v80 = v12;
    uint64_t v82 = v8;
    uint64_t v34 = v17;
    uint64_t v35 = *(int *)(v17 + 48);
    unsigned int v36 = *v0;
    *uint64_t v24 = v36;
    uint64_t v37 = (uint64_t)&v24[v35];
    sub_10007CC64((uint64_t)&v0[v35], (uint64_t)&v24[v35]);
    if (qword_10022C480 != -1) {
      swift_once();
    }
    uint64_t v76 = qword_1002440E8;
    sub_100043478(&qword_10022E560);
    uint64_t v38 = sub_1000208FC();
    sub_100044798(v38);
    sub_10004A1C4();
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1001C3140;
    uint64_t v75 = v39;
    uint64_t v91 = (void *)sub_100043478(&qword_10022EC10);
    uint64_t v89 = v83;
    id v40 = (id)AMSLogKey();
    uint64_t v78 = v24;
    if (v40)
    {
      uint64_t v41 = v40;
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v44 = v43;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020E60();
      sub_100049788(&v89, (uint64_t)v91);
      uint64_t v45 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v86 = v45;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004A70C();
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v86 = v42;
      uint64_t v87 = v44;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004A70C();
      sub_1000208D8();
      sub_100040C54();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100020E60();
      sub_100044FF4(&v89);
      uint64_t v48 = swift_getMetatypeMetadata();
      sub_100040960(v48);
      sub_100027BD8((uint64_t)&v86, &qword_10022F490);
      sub_100020E94();
      sub_100040C54();
    }
    sub_10004377C((uint64_t)&v89);
    sub_100020924();
    LogMessage.init(stringLiteral:)();
    uint64_t v49 = *(int *)(v34 + 48);
    uint64_t v74 = v34;
    uint64_t v50 = v77;
    uint64_t v51 = (uint64_t)&v77[v49];
    *uint64_t v77 = v36;
    sub_100092730(v37, (uint64_t)&v50[v49]);
    uint64_t v53 = *(void *)(v51 + 16);
    uint64_t v52 = *(void *)(v51 + 24);
    swift_bridgeObjectRetain();
    sub_10007CDA8(v51);
    uint64_t v91 = &type metadata for String;
    uint64_t v89 = v53;
    uint64_t v90 = v52;
    sub_1000A2AFC();
    sub_100047814();
    uint64_t v54 = (uint64_t)&v50[*(int *)(v34 + 48)];
    *uint64_t v50 = v36;
    unsigned int v55 = v36;
    sub_100092730(v37, v54);
    uint64_t v56 = (uint64_t *)(v54 + *(int *)(v82 + 48));
    uint64_t v57 = *v56;
    uint64_t v58 = v56[1];
    swift_bridgeObjectRetain();
    sub_10007CDA8(v54);
    uint64_t v91 = &type metadata for String;
    uint64_t v89 = v57;
    uint64_t v90 = v58;
    sub_1000476B8();
    sub_100047814();
    uint64_t v59 = v79;
    swift_getErrorValue();
    uint64_t v91 = v85;
    sub_10003BAA4(&v89);
    sub_1000456E0();
    sub_100011DCC();
    v60();
    sub_1000476B8();
    sub_100047814();
    uint64_t v61 = static os_log_type_t.error.getter();
    sub_10004841C(v61);
    swift_bridgeObjectRelease();
    sub_100097754(v55, v37, v59);
    uint64_t v62 = v78;
    char v63 = *v78;
    *(unsigned char *)(sub_100030788() + 16) = v63;
    uint64_t v64 = (uint64_t)&v50[*(int *)(v74 + 48)];
    sub_100092730(v37, v64);
    uint64_t v65 = v64;
    uint64_t v66 = v80;
    sub_10007CC64(v65, v80);
    *(unsigned char *)(v66 + *(int *)(v82 + 40)) = 3;
    sub_10009A43C();
    sub_1000A03D0(v37, 0, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, (uint64_t)v77, (uint64_t)v78, v79, v80, v81, v82, v83,
      v84);
    swift_release();
    sub_10007CDA8(v66);
    sub_100027BD8((uint64_t)v62, &qword_10022EC08);
  }
  sub_100020FDC();
}

void sub_100097564()
{
  sub_1000209F4();
  unsigned __int8 v23 = v1;
  uint64_t v21 = v2;
  uint64_t v22 = v3;
  uint64_t v20 = v4;
  uint64_t v5 = sub_100043478(&qword_10022D880);
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_100018FA0();
  type metadata accessor for ContentInfo();
  sub_1000456E0();
  __chkstk_darwin(v7);
  sub_100040A70();
  uint64_t v19 = v8;
  uint64_t v9 = 4;
  type metadata accessor for AppDatabase();
  uint64_t v10 = &byte_10020BD68;
  while (1)
  {
    unsigned int v12 = *v10++;
    char v11 = v12;
    sub_1000124C0(v12);
    sub_10007E620();
    swift_release();
    sub_10007B830(v21, v22, v23, v0);
    swift_release();
    sub_10004272C(v0);
    if (!v13) {
      break;
    }
    sub_100027BD8(v0, &qword_10022D880);
    if (!--v9)
    {
      uint64_t v16 = sub_100043478(&qword_10022EC08);
      uint64_t v17 = (uint64_t)v20;
      uint64_t v18 = 1;
      goto LABEL_7;
    }
  }
  sub_10007CC64(v0, v19);
  uint64_t v14 = sub_100043478(&qword_10022EC08);
  uint64_t v15 = (uint64_t)&v20[*(int *)(v14 + 48)];
  *uint64_t v20 = v11;
  sub_10007CC64(v19, v15);
  uint64_t v17 = (uint64_t)v20;
  uint64_t v18 = 0;
  uint64_t v16 = v14;
LABEL_7:
  sub_100021AC0(v17, v18, 1, v16);
  sub_100020FDC();
}

uint64_t sub_100097754(unsigned int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  uint64_t v7 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_1001C3FC0;
  *(void *)(inited + 32) = 0x656372756F73;
  *(void *)(inited + 40) = 0xE600000000000000;
  strcpy((char *)(inited + 48), "amsengagementd");
  *(unsigned char *)(inited + 63) = -18;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x707954746E657665;
  unint64_t v8 = 0x80000001001CC120;
  if (a3) {
    unint64_t v8 = 0xED000064656C6961;
  }
  unint64_t v9 = 0x46746E65746E6F43;
  if (!a3) {
    unint64_t v9 = 0xD000000000000010;
  }
  *(void *)(inited + 88) = 0xE900000000000065;
  *(void *)(inited + 96) = v9;
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0x79654B6568636163;
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  *(void *)(inited + 136) = 0xE800000000000000;
  *(void *)(inited + 144) = v10;
  *(void *)(inited + 152) = v11;
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 176) = 0x6E6F6973726576;
  *(void *)(inited + 184) = 0xE700000000000000;
  unsigned int v12 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ContentInfo() + 48));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  v7[27] = &type metadata for String;
  v7[24] = v13;
  v7[25] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v64 = Dictionary.init(dictionaryLiteral:)();
  if (a3)
  {
    uint64_t v15 = (void *)_convertErrorToNSError(_:)();
    uint64_t v16 = swift_initStackObject();
    *(_OWORD *)(v16 + 16) = xmmword_1001C3FC0;
    *(void *)(v16 + 32) = 1701080931;
    *(void *)(v16 + 40) = 0xE400000000000000;
    *(void *)(v16 + 48) = [v15 code];
    *(void *)(v16 + 72) = &type metadata for Int;
    *(void *)(v16 + 80) = 0x6E69616D6F64;
    *(void *)(v16 + 88) = 0xE600000000000000;
    id v17 = [v15 domain];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    *(void *)(v16 + 96) = v18;
    *(void *)(v16 + 104) = v20;
    *(void *)(v16 + 120) = &type metadata for String;
    *(void *)(v16 + 128) = 0x656C746974;
    *(void *)(v16 + 136) = 0xE500000000000000;
    uint64_t v21 = sub_100038B5C(v15, (SEL *)&selRef_ams_title);
    if (v22) {
      uint64_t v23 = v21;
    }
    else {
      uint64_t v23 = 0;
    }
    if (v22) {
      unint64_t v24 = v22;
    }
    else {
      unint64_t v24 = 0xE000000000000000;
    }
    *(void *)(v16 + 144) = v23;
    *(void *)(v16 + 152) = v24;
    *(void *)(v16 + 168) = &type metadata for String;
    *(void *)(v16 + 176) = 0x6567617373656DLL;
    *(void *)(v16 + 184) = 0xE700000000000000;
    uint64_t v25 = sub_100038B5C(v15, (SEL *)&selRef_ams_message);
    *(void *)(v16 + 216) = &type metadata for String;
    if (v26) {
      uint64_t v27 = v25;
    }
    else {
      uint64_t v27 = 0;
    }
    if (v26) {
      unint64_t v28 = v26;
    }
    else {
      unint64_t v28 = 0xE000000000000000;
    }
    *(void *)(v16 + 192) = v27;
    *(void *)(v16 + 200) = v28;
    uint64_t v29 = Dictionary.init(dictionaryLiteral:)();
    uint64_t v63 = sub_100043478(&qword_10022D7B0);
    v62[0] = v29;
    sub_10003E698((uint64_t)v62, 0x726F727265, 0xE500000000000000);
    if (qword_10022C480 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v63 = sub_100043478(&qword_10022EC10);
    v62[0] = v58;
    id v30 = (id)AMSLogKey();
    if (v30)
    {
      uint64_t v31 = v30;
      uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v33 = v32;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v34._countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      sub_100049788(v62, v63);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v59 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v59, &qword_10022F490);
      v36._countAndFlagsBits = 5972026;
      v36._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v59 = v56;
      uint64_t v60 = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v59, &qword_10022F490);
      v37._countAndFlagsBits = 93;
      v37._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v47._countAndFlagsBits = 0;
      v47._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v47);
      sub_100049788(v62, v63);
      uint64_t v48 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v59 = v48;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v59, &qword_10022F490);
      v49._countAndFlagsBits = 58;
      v49._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v49);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v62);
    LogMessage.init(stringLiteral:)();
    uint64_t v50 = static os_log_type_t.error.getter();
    sub_10004841C(v50);
  }
  else
  {
    if (qword_10022C480 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v63 = sub_100043478(&qword_10022EC10);
    v62[0] = v58;
    id v38 = (id)AMSLogKey();
    if (v38)
    {
      uint64_t v39 = v38;
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v42 = v41;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v43._countAndFlagsBits = 0;
      v43._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      sub_100049788(v62, v63);
      uint64_t v44 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v59 = v44;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v59, &qword_10022F490);
      v45._countAndFlagsBits = 5972026;
      v45._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v59 = v40;
      uint64_t v60 = v42;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v59, &qword_10022F490);
      v46._countAndFlagsBits = 93;
      v46._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v46);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v51._countAndFlagsBits = 0;
      v51._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v51);
      sub_100049788(v62, v63);
      uint64_t v52 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v59 = v52;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v59, &qword_10022F490);
      v53._countAndFlagsBits = 58;
      v53._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v53);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v62);
    LogMessage.init(stringLiteral:)();
    uint64_t v54 = static os_log_type_t.default.getter();
    sub_10004841C(v54);
  }
  swift_bridgeObjectRelease();
  sub_10009F54C(a1, v64);
  return swift_bridgeObjectRelease();
}

void sub_100097FE8()
{
  sub_1000209F4();
  uint64_t v179 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v9 = v8;
  uint64_t v183 = type metadata accessor for ContentInfo();
  sub_1000456E0();
  __chkstk_darwin(v10);
  sub_100022558();
  uint64_t v11 = sub_100043478(&qword_10022FB40);
  uint64_t v12 = sub_1000208F0(v11);
  __chkstk_darwin(v12);
  sub_100035C70();
  uint64_t v178 = v13;
  sub_100020974();
  __chkstk_darwin(v14);
  sub_100022190();
  uint64_t v180 = v15;
  uint64_t v184 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v181 = v16;
  __chkstk_darwin(v17);
  sub_100040A70();
  uint64_t v185 = v18;
  uint64_t v19 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v20 = sub_1000208F0(v19);
  __chkstk_darwin(v20);
  sub_100020658();
  uint64_t v21 = sub_100043478(&qword_10022EC00);
  uint64_t v22 = sub_1000208F0(v21);
  __chkstk_darwin(v22);
  sub_100020EAC();
  uint64_t v25 = (unsigned __int8 *)(v24 - v23);
  uint64_t v26 = sub_100043478(&qword_10022EC08);
  sub_1000456E0();
  __chkstk_darwin(v27);
  sub_100035C70();
  uint64_t v173 = v28;
  sub_100020974();
  __chkstk_darwin(v29);
  sub_10004FBF4();
  uint64_t v172 = v30;
  sub_100020974();
  __chkstk_darwin(v31);
  uint64_t v182 = (char *)&v162 - v32;
  sub_100020974();
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v162 - v34;
  uint64_t v36 = type metadata accessor for ContentManager();
  sub_1000A29B8(v36);
  long long v187 = v9;
  sub_100097564();
  if (sub_10004FD40((uint64_t)v25, 1, v26) != 1)
  {
    uint64_t v45 = *(int *)(v26 + 48);
    uint64_t v46 = (uint64_t)&v35[v45];
    uint64_t v47 = (uint64_t)&v25[v45];
    LODWORD(v45) = *v25;
    uint64_t v176 = v35;
    LODWORD(v186) = v45;
    unsigned char *v35 = v45;
    uint64_t v175 = v46;
    sub_10007CC64(v47, v46);
    if (qword_10022C480 != -1) {
      swift_once();
    }
    uint64_t v171 = v2;
    uint64_t v166 = qword_1002440E8;
    uint64_t v48 = sub_100043478(&qword_10022E560);
    uint64_t v49 = type metadata accessor for LogMessage();
    sub_100044798(v49);
    Swift::String v51 = *(NSURL **)(v50 + 72);
    uint64_t v53 = *(unsigned __int8 *)(v52 + 80);
    uint64_t v54 = (v53 + 32) & ~v53;
    long long v187 = v51;
    uint64_t v169 = v48;
    uint64_t v167 = v53 | 7;
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_1001C3FC0;
    uint64_t v170 = v54;
    uint64_t v165 = v55;
    uint64_t v168 = (void *)sub_100043478(&qword_10022EC10);
    uint64_t v192 = v168;
    uint64_t v177 = v1;
    v191._baseURL = v1;
    id v56 = (id)AMSLogKey();
    uint64_t v174 = v0;
    uint64_t v164 = v5;
    if (v56)
    {
      uint64_t v57 = v56;
      uint64_t v58 = v26;
      uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v61 = v60;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100044E44();
      sub_100020F04(&v191._baseURL);
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100042048(MetatypeMetadata);
      sub_100027BD8((uint64_t)&v189, &qword_10022F490);
      sub_100020E44();
      v191._urlString = (NSString *)&type metadata for String;
      uint64_t v189 = v59;
      uint64_t v190 = v61;
      uint64_t v26 = v58;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v189, &qword_10022F490);
      sub_1000208D8();
      sub_100045E18();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100044E44();
      sub_100020F04(&v191._baseURL);
      uint64_t v65 = swift_getMetatypeMetadata();
      sub_100042048(v65);
      sub_100027BD8((uint64_t)&v189, &qword_10022F490);
      sub_100020E94();
      sub_100045E18();
    }
    sub_10004377C((uint64_t)&v191._baseURL);
    sub_100020924();
    LogMessage.init(stringLiteral:)();
    uint64_t v66 = v182;
    uint64_t v67 = (uint64_t)&v182[*(int *)(v26 + 48)];
    unsigned char *v182 = v186;
    uint64_t v68 = v175;
    sub_100092730(v175, v67);
    uint64_t v69 = *(NSURL **)(v67 + 16);
    uint64_t v70 = *(void **)(v67 + 24);
    swift_bridgeObjectRetain();
    sub_10007CDA8(v67);
    uint64_t v192 = &type metadata for String;
    v191._baseURL = v69;
    v191._clients = v70;
    sub_100049F88();
    sub_100027BD8((uint64_t)&v191._baseURL, &qword_10022F490);
    uint64_t v71 = v68;
    uint64_t v163 = v26;
    uint64_t v72 = (uint64_t)&v66[*(int *)(v26 + 48)];
    uint64_t v73 = v186;
    unsigned char *v66 = v186;
    sub_100092730(v68, v72);
    uint64_t v74 = v72 + *(int *)(v183 + 48);
    uint64_t v76 = *(NSURL **)v74;
    uint64_t v75 = *(void **)(v74 + 8);
    swift_bridgeObjectRetain();
    sub_10007CDA8(v72);
    uint64_t v192 = &type metadata for String;
    v191._baseURL = v76;
    v191._clients = v75;
    static LogMessage.safe(_:)();
    sub_100027BD8((uint64_t)&v191._baseURL, &qword_10022F490);
    uint64_t v77 = static os_log_type_t.default.getter();
    sub_10004841C(v77);
    swift_bridgeObjectRelease();
    uint64_t v78 = sub_100030788();
    *(unsigned char *)(sub_1000A29B8(v78) + 16) = v73;
    sub_100021AE8();
    sub_1000A2700(v79, v73, v80);
    uint64_t v81 = v184;
    if (sub_10004FD40(v73, 1, v184) == 1)
    {
      sub_100027BD8(v73, &qword_10022FB40);
      uint64_t v82 = 0;
      uint64_t v83 = 0xE000000000000000;
      sub_1000A2A60();
      uint64_t v84 = v181;
    }
    else
    {
      uint64_t v82 = URL.pathExtension.getter();
      uint64_t v83 = v85;
      uint64_t v84 = v181;
      (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v73, v81);
      sub_1000A2A60();
    }
    uint64_t v86 = v185;
    uint64_t v87 = v180;
    uint64_t v88 = 2 * (void)v187;
    uint64_t v89 = v82;
    uint64_t v90 = v177;
    sub_10009912C(v71, v186, v89, v83, v180);
    swift_bridgeObjectRelease();
    int v91 = sub_10004FD40(v87, 1, v81);
    uint64_t v92 = v174;
    if (v91 == 1)
    {
      sub_100027BD8(v87, &qword_10022FB40);
      uint64_t v93 = (__n128 *)swift_allocObject();
      sub_1000A2A54(v93, (__n128)xmmword_1001C3120);
      uint64_t v192 = v168;
      v191._baseURL = v90;
      id v94 = (id)AMSLogKey();
      if (v94)
      {
        v95 = v94;
        uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v98 = v97;

        swift_bridgeObjectRetain();
        sub_100020F60();
        sub_100044E44();
        sub_100020F04(&v191._baseURL);
        uint64_t v99 = swift_getMetatypeMetadata();
        sub_100042048(v99);
        sub_100017E2C();
        sub_100020E44();
        v191._urlString = (NSString *)&type metadata for String;
        uint64_t v189 = v96;
        uint64_t v190 = v98;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100017E2C();
        sub_1000208D8();
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020980();
        sub_100044E44();
        sub_100020F04(&v191._baseURL);
        uint64_t v127 = swift_getMetatypeMetadata();
        sub_100042048(v127);
        sub_100027BD8((uint64_t)&v189, &qword_10022F490);
        sub_100020E94();
        LogMessage.init(stringInterpolation:)();
      }
      sub_100017E7C();
      sub_100043B80();
      uint64_t v128 = static os_log_type_t.error.getter();
      sub_100035DCC(v128);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v129 = v92;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 32))(v86, v87, v81);
      unsigned int v100 = self;
      id v101 = [v100 defaultManager];
      URL.path.getter();
      NSString v102 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v191._baseURL = 0;
      unsigned int v103 = [v101 removeItemAtPath:v102 error:&v191._baseURL];

      if (v103)
      {
        uint64_t v104 = v191._baseURL;
      }
      else
      {
        uint64_t v105 = v191._baseURL;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_errorRelease();
      }
      id v106 = [v100 defaultManager];
      URL._bridgeToObjectiveC()(&v191);
      char v108 = v107;
      uint64_t v109 = v185;
      URL._bridgeToObjectiveC()(v110);
      uint64_t v112 = v111;
      v191._baseURL = 0;
      unsigned int v113 = [v106 moveItemAtURL:v108 toURL:v111 error:&v191._baseURL];

      baseURL = v191._baseURL;
      if (v113)
      {
        uint64_t v186 = v88;
        uint64_t v115 = (uint64_t)&v182[*(int *)(v163 + 48)];
        sub_1000A2AB8();
        unsigned int v117 = *v116;
        sub_100092730(v175, v115);
        sub_10007CC64(v115, (uint64_t)&type metadata for String);
        uint64_t v118 = baseURL;
        uint64_t v119 = URL.path.getter();
        uint64_t v121 = v120;
        uint64_t v122 = v183;
        uint64_t v123 = (void *)((char *)&type metadata for String + *(int *)(v183 + 36));
        swift_bridgeObjectRelease();
        *uint64_t v123 = v119;
        v123[1] = v121;
        *((unsigned char *)&type metadata for String + *(int *)(v122 + 40)) = 2;
        sub_10009F4E0();
        sub_10007C004();
        swift_release();
        sub_100097754(v117, (uint64_t)&type metadata for String, 0);
        sub_10009F4E0();
        uint64_t v135 = v163;
        uint64_t v136 = (uint64_t)&v172[*(int *)(v163 + 48)];
        *uint64_t v172 = v117;
        uint64_t v137 = v175;
        sub_100092730(v175, v136);
        uint64_t v139 = *(void *)(v136 + 16);
        uint64_t v138 = *(void *)(v136 + 24);
        swift_bridgeObjectRetain();
        sub_10007CDA8(v136);
        uint64_t v140 = v173 + *(int *)(v135 + 48);
        sub_1000A2AB8();
        *uint64_t v142 = *v141;
        sub_100092730(v137, v140);
        uint64_t v143 = (uint64_t *)(v140 + *(int *)(v183 + 48));
        uint64_t v145 = *v143;
        uint64_t v144 = v143[1];
        swift_bridgeObjectRetain();
        sub_10007CDA8(v140);
        sub_10007BC94(v139, v138, v145, v144);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1000A03D0(v137, 1, v146, v147, v148, v149, v150, v151, v162, v163, v164, v165, v166, v167, (uint64_t)v168, v169, v170, v171, (uint64_t)v172,
          v173);
        *(_OWORD *)(sub_100022618() + 16) = xmmword_1001C3120;
        id v152 = (id)sub_100036160();
        if (v152)
        {
          uint64_t v153 = v152;
          uint64_t v154 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v156 = v155;

          swift_bridgeObjectRetain();
          sub_100020F60();
          sub_100020E60();
          uint64_t v157 = sub_100044FF4(&v191._baseURL);
          uint64_t v158 = swift_getMetatypeMetadata();
          sub_100046DA4(v158);
          sub_100017E2C();
          sub_100020E44();
          v191._urlString = (NSString *)&type metadata for String;
          uint64_t v189 = v154;
          uint64_t v190 = v156;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_100017E2C();
          sub_1000208D8();
          sub_100040C54();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100020980();
          sub_100020E60();
          uint64_t v157 = sub_100044FF4(&v191._baseURL);
          uint64_t v159 = swift_getMetatypeMetadata();
          sub_100046DA4(v159);
          sub_100027BD8((uint64_t)&v189, &qword_10022F490);
          sub_100020E94();
          sub_100040C54();
        }
        sub_100017E7C();
        sub_100043B80();
        uint64_t v160 = static os_log_type_t.default.getter();
        sub_100035DCC(v160);
        swift_release();
        swift_bridgeObjectRelease();
        sub_100043FB0();
        v161();
        sub_100027BD8(v157, &qword_10022EC08);
        sub_10007CDA8((uint64_t)&type metadata for String);
        goto LABEL_32;
      }
      uint64_t v124 = v191._baseURL;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_release();
      uint64_t v125 = sub_10004C198();
      v126(v125);
      *(_OWORD *)(sub_100022618() + 16) = xmmword_1001C3120;
      if ((id)sub_100036160())
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_10004A52C();
        swift_bridgeObjectRetain();
        sub_100020F60();
        sub_100044E44();
        sub_100020F04(&v191._baseURL);
        uint64_t v130 = swift_getMetatypeMetadata();
        sub_100042048(v130);
        sub_100035CA0();
        sub_100020E44();
        v191._urlString = (NSString *)&type metadata for String;
        uint64_t v189 = v84;
        uint64_t v190 = v109;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100035CA0();
        sub_1000208D8();
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020980();
        sub_100044E44();
        sub_100020F04(&v191._baseURL);
        uint64_t v131 = swift_getMetatypeMetadata();
        sub_100042048(v131);
        sub_100027BD8((uint64_t)&v189, &qword_10022F490);
        sub_100020E94();
        LogMessage.init(stringInterpolation:)();
      }
      sub_1000A2AC4();
      sub_10004377C((uint64_t)&v191._baseURL);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_10002064C();
      LogMessage.StringInterpolation.appendLiteral(_:)(v132);
      swift_getErrorValue();
      uint64_t v192 = v188;
      sub_10003BAA4((uint64_t *)&v191._baseURL);
      sub_1000456E0();
      sub_100011DCC();
      v133();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v191._baseURL, &qword_10022F490);
      sub_100020E60();
      LogMessage.init(stringInterpolation:)();
      uint64_t v134 = static os_log_type_t.error.getter();
      sub_10004841C(v134);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v129 = v84;
    }
    sub_100027BD8(v129, &qword_10022EC08);
    goto LABEL_32;
  }
  sub_100027BD8((uint64_t)v25, &qword_10022EC00);
  if (qword_10022C480 != -1) {
    swift_once();
  }
  uint64_t v37 = qword_1002440E8;
  sub_100043478(&qword_10022E560);
  uint64_t v38 = type metadata accessor for LogMessage();
  sub_100044798(v38);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v192 = (void *)sub_100043478(&qword_10022EC10);
  v191._baseURL = v1;
  id v39 = (id)AMSLogKey();
  if (v39)
  {
    uint64_t v40 = v39;
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v186 = v37;
    uint64_t v43 = v42;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100044E44();
    sub_100020F04(&v191._baseURL);
    uint64_t v44 = swift_getMetatypeMetadata();
    sub_100042048(v44);
    sub_100040FA0();
    sub_100020E44();
    v191._urlString = (NSString *)&type metadata for String;
    uint64_t v189 = v41;
    uint64_t v190 = v43;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v189, &qword_10022F490);
    sub_1000208D8();
    sub_100045E18();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100044E44();
    sub_100020F04(&v191._baseURL);
    uint64_t v63 = swift_getMetatypeMetadata();
    sub_100042048(v63);
    sub_100027BD8((uint64_t)&v189, &qword_10022F490);
    sub_100020E94();
    sub_100045E18();
  }
  sub_10004377C((uint64_t)&v191._baseURL);
  sub_100043B80();
  uint64_t v192 = &type metadata for String;
  v191._baseURL = v187;
  v191._clients = v7;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_100027BD8((uint64_t)&v191._baseURL, &qword_10022F490);
  uint64_t v64 = static os_log_type_t.error.getter();
  sub_10004841C(v64);
  swift_bridgeObjectRelease();
LABEL_32:
  sub_100020FDC();
}

uint64_t sub_10009912C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v22 - v14;
  sub_10009F79C(a1);
  if (v16)
  {
    sub_10009CEE4(a2);
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
    v17(v13, v9);
    if (URL.pathExtension.getter() == v23 && v18 == a4)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
      {
        URL.appendingPathExtension(_:)();
        v17(v15, v9);
        return sub_100021AC0(a5, 0, 1, v9);
      }
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a5, v15, v9);
    return sub_100021AC0(a5, 0, 1, v9);
  }
  return sub_100021AC0(a5, 1, 1, v9);
}

void sub_100099358()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_100042068();
  if (v0)
  {
    if (qword_10022C480 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v7 = sub_10002D318();
    sub_100044798(v7);
    unint64_t v8 = (__n128 *)sub_100043B54();
    uint64_t v9 = sub_100022884(v8, (__n128)xmmword_1001C3130);
    sub_10004FC14(v9);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_10004A52C();
      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_1000448B8();
      sub_100020F04(v16);
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_10004868C(MetatypeMetadata);
      sub_1000A28F8();
      sub_100020E44();
      sub_100043B98((uint64_t)&type metadata for String);
      sub_1000A28F8();
      sub_1000208D8();
      sub_1000439F4();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_1000448B8();
      sub_100020F04(v16);
      uint64_t v11 = swift_getMetatypeMetadata();
      sub_10004868C(v11);
      sub_100027BD8((uint64_t)&v15, &qword_10022F490);
      sub_100020E94();
      sub_1000439F4();
    }
    sub_100042090();
    sub_1000A2A04();
    sub_100045B58();
    sub_100052480();
    sub_1000456E0();
    sub_100011DCC();
    v12();
    sub_1000476B8();
    sub_100027BD8((uint64_t)v16, &qword_10022F490);
    uint64_t v13 = static os_log_type_t.error.getter();
    sub_100022158(v13);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10007A710(v4, v2);
    sub_100020FDC();
    swift_release();
  }
}

void sub_1000995B4()
{
  sub_1000209F4();
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  sub_100042068();
  if (v0)
  {
    if (qword_10022C480 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v3 = sub_10002D318();
    sub_100044798(v3);
    uint64_t v4 = (__n128 *)sub_100043B54();
    uint64_t v5 = sub_100022884(v4, (__n128)xmmword_1001C3130);
    sub_10004FC14(v5);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_10004A52C();
      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_1000448B8();
      sub_100020F04(v11);
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_10004868C(MetatypeMetadata);
      sub_1000A28F8();
      sub_100020E44();
      sub_100043B98((uint64_t)&type metadata for String);
      sub_1000A28F8();
      sub_1000208D8();
      sub_1000439F4();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_1000448B8();
      sub_100020F04(v11);
      uint64_t v7 = swift_getMetatypeMetadata();
      sub_10004868C(v7);
      sub_100027BD8((uint64_t)&v10, &qword_10022F490);
      sub_100020E94();
      sub_1000439F4();
    }
    sub_100042090();
    sub_1000A2A04();
    sub_100045B58();
    sub_100052480();
    sub_1000456E0();
    sub_100011DCC();
    v8();
    sub_1000476B8();
    sub_100027BD8((uint64_t)v11, &qword_10022F490);
    uint64_t v9 = static os_log_type_t.error.getter();
    sub_100022158(v9);
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else
  {
    sub_10007AC9C();
    swift_release();
  }
  sub_100020FDC();
}

void sub_10009981C()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v5 = v2;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100018FA0();
  sub_10009F4E0();
  sub_10007A9FC(v5, v1);
  swift_release();
  sub_100020FDC();
}

void sub_100099B24()
{
  sub_1000209F4();
  uint64_t v0 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  sub_100020EAC();
  sub_10009F4E0();
  sub_10007B198();
  swift_release();
  sub_100020FDC();
}

void sub_100099E30()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for ContentInfo();
  sub_1000456E0();
  __chkstk_darwin(v7);
  sub_100020EAC();
  uint64_t v10 = (uint64_t *)(v9 - v8);
  uint64_t v11 = *(void **)v1;
  uint64_t v12 = *(void *)(*(void *)v1 + 16);
  if (!v12) {
    goto LABEL_19;
  }
  BOOL v13 = v11[4] == v5 && v11[5] == (void)v3;
  if (v13 || (sub_10004A050() & 1) != 0) {
    goto LABEL_7;
  }
  if (v12 == 1)
  {
LABEL_19:
    sub_100020FDC();
    return;
  }
  BOOL v24 = v11[6] == v5 && v11[7] == (void)v3;
  if (!v24 && (sub_10004A050() & 1) == 0)
  {
    if (v12 != 2)
    {
      uint64_t v25 = v11 + 9;
      uint64_t v26 = 2;
      while (1)
      {
        uint64_t v27 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          goto LABEL_59;
        }
        BOOL v28 = *(v25 - 1) == v5 && *v25 == (void)v3;
        if (v28 || (sub_10004A050() & 1) != 0) {
          goto LABEL_7;
        }
        v25 += 2;
        ++v26;
        if (v27 == v12) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
LABEL_7:
  uint64_t v40 = v6;
  sub_100092730(v1, (uint64_t)v10);
  uint64_t v14 = *v10;
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_1000A229C(v15, v5, (uint64_t)v3);
  char v18 = v17;
  swift_bridgeObjectRelease();
  if (v18) {
    goto LABEL_13;
  }
  uint64_t v19 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    unint64_t v20 = *(void *)(v14 + 16);
    if (v19 == v20)
    {
      unint64_t v21 = v16 + 1;
LABEL_11:
      if ((uint64_t)v21 >= v16) {
        goto LABEL_14;
      }
      __break(1u);
LABEL_13:
      uint64_t v16 = *(void *)(v14 + 16);
      unint64_t v21 = v16;
LABEL_14:
      sub_1000E13F0(v16, v21);
      if (*(void *)(*v10 + 16) || *((unsigned char *)v10 + *(int *)(v40 + 40)) != 3)
      {
        sub_10009A16C(v5, v3);
        uint64_t v23 = v22;
        swift_bridgeObjectRelease();
        v10[1] = v23;
        sub_10009A43C();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10009A1D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_10007CDA8((uint64_t)v10);
      goto LABEL_19;
    }
    uint64_t v29 = 16 * v16;
    unint64_t v21 = v16 + 1;
    id v39 = v10;
    while ((v19 & 0x8000000000000000) == 0)
    {
      if (v21 >= v20) {
        goto LABEL_54;
      }
      uint64_t v30 = v14 + v29;
      BOOL v31 = *(void *)(v14 + v29 + 48) == v5 && *(void *)(v14 + v29 + 56) == (void)v3;
      if (!v31 && (sub_10004A050() & 1) == 0)
      {
        if (v21 != v16)
        {
          if (v16 >= v20) {
            goto LABEL_56;
          }
          uint64_t v32 = (uint64_t *)(v14 + 32 + 16 * v16);
          uint64_t v33 = v32[1];
          uint64_t v34 = *(void *)(v30 + 56);
          uint64_t v41 = *v32;
          uint64_t v42 = *(void *)(v30 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1001B1710(v14);
            uint64_t v14 = v38;
          }
          uint64_t v35 = v14 + 16 * v16;
          *(void *)(v35 + 32) = v42;
          *(void *)(v35 + 40) = v34;
          swift_bridgeObjectRelease();
          if (v21 >= *(void *)(v14 + 16)) {
            goto LABEL_57;
          }
          uint64_t v36 = v14 + v29;
          *(void *)(v36 + 48) = v41;
          *(void *)(v36 + 56) = v33;
          swift_bridgeObjectRelease();
          uint64_t v10 = v39;
          *id v39 = v14;
        }
        if (__OFADD__(v16++, 1)) {
          goto LABEL_55;
        }
      }
      ++v21;
      unint64_t v20 = *(void *)(v14 + 16);
      v29 += 16;
      if (v21 == v20) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
  }
  __break(1u);
LABEL_59:
  __break(1u);
}

void sub_10009A16C(uint64_t a1, void *a2)
{
  swift_bridgeObjectRetain();
  sub_1000A2954((uint64_t)":NotificationIdSeparator:");
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_100093E8C(v2, a1, a2);
}

void sub_10009A1D0()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v10 = sub_1000208F0(v9);
  __chkstk_darwin(v10);
  sub_100042068();
  if (v0)
  {
    if (qword_10022C480 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v11 = sub_10002D318();
    sub_100044798(v11);
    uint64_t v12 = (__n128 *)sub_100043B54();
    uint64_t v13 = sub_100022884(v12, (__n128)xmmword_1001C3130);
    sub_10004FC14(v13);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_10004A52C();
      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_1000448B8();
      sub_100020F04(v20);
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_10004868C(MetatypeMetadata);
      sub_1000A28F8();
      sub_100020E44();
      sub_100043B98((uint64_t)&type metadata for String);
      sub_1000A28F8();
      sub_1000208D8();
      sub_1000439F4();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_1000448B8();
      sub_100020F04(v20);
      uint64_t v15 = swift_getMetatypeMetadata();
      sub_10004868C(v15);
      sub_100027BD8((uint64_t)&v19, &qword_10022F490);
      sub_100020E94();
      sub_1000439F4();
    }
    sub_100042090();
    sub_100023FBC();
    sub_100045B58();
    sub_100052480();
    sub_1000456E0();
    sub_100011DCC();
    v16();
    sub_1000476B8();
    sub_100027BD8((uint64_t)v20, &qword_10022F490);
    uint64_t v17 = static os_log_type_t.error.getter();
    sub_100022158(v17);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10007BE0C(v8, v6, v4, v2);
    sub_100020FDC();
    swift_release();
  }
}

void sub_10009A43C()
{
  sub_1000209F4();
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  sub_100042068();
  if (v0)
  {
    if (qword_10022C480 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v3 = sub_10002D318();
    sub_100044798(v3);
    uint64_t v4 = (__n128 *)sub_100043B54();
    uint64_t v5 = sub_100022884(v4, (__n128)xmmword_1001C3130);
    sub_10004FC14(v5);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_10004A52C();
      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_1000448B8();
      sub_100020F04(v11);
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_10004868C(MetatypeMetadata);
      sub_1000A28F8();
      sub_100020E44();
      sub_100043B98((uint64_t)&type metadata for String);
      sub_1000A28F8();
      sub_1000208D8();
      sub_1000439F4();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_1000448B8();
      sub_100020F04(v11);
      uint64_t v7 = swift_getMetatypeMetadata();
      sub_10004868C(v7);
      sub_100027BD8((uint64_t)&v10, &qword_10022F490);
      sub_100020E94();
      sub_1000439F4();
    }
    sub_100042090();
    sub_100023FBC();
    sub_100045B58();
    sub_100052480();
    sub_1000456E0();
    sub_100011DCC();
    v8();
    sub_1000476B8();
    sub_100027BD8((uint64_t)v11, &qword_10022F490);
    uint64_t v9 = static os_log_type_t.error.getter();
    sub_100022158(v9);
    swift_errorRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10007C004();
    swift_release();
  }
  sub_100020FDC();
}

void sub_10009A678()
{
  sub_1000209F4();
  id v2 = v1;
  uint64_t v107 = v3;
  uint64_t v106 = v4;
  uint64_t v109 = v5;
  uint64_t v108 = v6;
  uint64_t v101 = v7;
  uint64_t v100 = v8;
  uint64_t v9 = *v0;
  uint64_t v111 = v0;
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v12 = sub_1000208F0(v11);
  __chkstk_darwin(v12);
  sub_100040A70();
  uint64_t v102 = v13;
  uint64_t v14 = sub_100043478(&qword_10022FB40);
  uint64_t v15 = sub_1000208F0(v14);
  __chkstk_darwin(v15);
  sub_100040A70();
  uint64_t v110 = v16;
  uint64_t v112 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v103 = v17;
  __chkstk_darwin(v18);
  sub_10004A89C(v19, v97);
  uint64_t v20 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  sub_1000533A0();
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v97 - v25;
  uint64_t v27 = (int *)type metadata accessor for ContentInfo();
  sub_1000456E0();
  __chkstk_darwin(v28);
  sub_1000A2910(v29, v97);
  *(void *)&long long v122 = 7107700;
  *((void *)&v122 + 1) = 0xE300000000000000;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v119, (uint64_t)v2, &v122);
  sub_1000434BC((uint64_t)&v119);
  uint64_t v104 = v10;
  if (MetatypeMetadata)
  {
    if (sub_100011E7C())
    {
      uint64_t v30 = v118;
      goto LABEL_6;
    }
  }
  else
  {
    sub_100027BD8((uint64_t)&v122, &qword_10022F490);
  }
  uint64_t v30 = 30;
LABEL_6:
  BOOL v31 = v109;
  swift_bridgeObjectRetain();
  uint64_t v32 = v107;
  swift_bridgeObjectRetain();
  static Date.now.getter();
  if ((unsigned __int128)(v30 * (__int128)86400) >> 64 != (86400 * v30) >> 63) {
    goto LABEL_44;
  }
  Date.addingTimeInterval(_:)();
  (*(void (**)(void *, uint64_t))(v22 + 8))(v0, v20);
  uint64_t v33 = v113;
  uint64_t v34 = (uint64_t *)&v113[v27[9]];
  *uint64_t v34 = 0;
  v34[1] = 0;
  uint64_t v98 = v34;
  *(void *)uint64_t v33 = _swiftEmptyArrayStorage;
  *((void *)v33 + 2) = v108;
  *((void *)v33 + 3) = v31;
  Date.init()();
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v33[v27[8]], v26, v20);
  *((void *)v33 + 1) = _swiftEmptyArrayStorage;
  v33[v27[10]] = 2;
  uint64_t v35 = &v33[v27[11]];
  *(void *)uint64_t v35 = 0;
  *((void *)v35 + 1) = 0xE000000000000000;
  uint64_t v36 = &v33[v27[12]];
  *(void *)uint64_t v36 = v106;
  *((void *)v36 + 1) = v32;
  *(void *)&long long v122 = 0x617461646174656DLL;
  *((void *)&v122 + 1) = 0xE800000000000000;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v119, (uint64_t)v2, &v122);
  sub_1000434BC((uint64_t)&v119);
  if (MetatypeMetadata)
  {
    sub_100043478(&qword_100232940);
    sub_100011E7C();
  }
  else
  {
    sub_100027BD8((uint64_t)&v122, &qword_10022F490);
  }
  uint64_t v37 = v111;
  sub_100021AE8();
  uint64_t v115 = *(void *)(v38 + 16);
  if (v115)
  {
    uint64_t v114 = v38 + 32;
    id v39 = (void *)*((void *)v33 + 1);
    uint64_t v99 = v38;
    swift_bridgeObjectRetain();
    uint64_t v40 = 0;
    while (1)
    {
      uint64_t v41 = (uint64_t *)(v114 + 16 * v40);
      uint64_t v42 = *v41;
      id v2 = (id)v41[1];
      swift_bridgeObjectRetain_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v54 = sub_100036250();
        sub_1000502C4(v54, v55, v56, (uint64_t)v39);
        id v39 = v57;
      }
      unint64_t v44 = v39[2];
      unint64_t v43 = v39[3];
      if (v44 >= v43 >> 1)
      {
        BOOL v58 = sub_1000A2948(v43);
        sub_1000502C4(v58, v44 + 1, 1, (uint64_t)v39);
        id v39 = v59;
      }
      v39[2] = v44 + 1;
      uint64_t v45 = &v39[2 * v44];
      v45[4] = v42;
      v45[5] = v2;
      swift_bridgeObjectRetain();
      *(void *)&long long v122 = Set.init(minimumCapacity:)();
      uint64_t v46 = v39[2];
      if (v46)
      {
        uint64_t v47 = v39 + 5;
        do
        {
          Swift::Int v48 = *(v47 - 1);
          Swift::Int v49 = *v47;
          swift_bridgeObjectRetain();
          sub_10004A8EC((Swift::Int *)&v119, v48, v49);
          swift_bridgeObjectRelease();
          v47 += 2;
          --v46;
        }
        while (v46);
      }
      swift_bridgeObjectRelease();
      uint64_t v50 = v122;
      uint64_t v51 = *(void *)(v122 + 16);
      if (v51)
      {
        id v116 = v2;
        sub_100043478(&qword_10022D738);
        uint64_t v52 = (void *)swift_allocObject();
        size_t v53 = j__malloc_size(v52);
        v52[2] = v51;
        v52[3] = 2 * ((uint64_t)(v53 - 32) / 16);
        uint64_t v117 = sub_10015B884((uint64_t)&v119, v52 + 4, v51, v50);
        id v2 = v119;
        BOOL v31 = v120;
        swift_bridgeObjectRetain();
        sub_100011E28();
        if (v117 != v51)
        {
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          swift_once();
LABEL_28:
          sub_100043478(&qword_10022E560);
          uint64_t v62 = sub_1000208FC();
          sub_100044798(v62);
          *(_OWORD *)(sub_100020930() + 16) = xmmword_1001C3120;
          uint64_t v63 = type metadata accessor for ContentManager();
          sub_100036A60(v63);
          id v64 = (id)AMSLogKey();
          if (v64)
          {
            uint64_t v65 = v64;
            uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v68 = v67;

            swift_bridgeObjectRetain();
            sub_100020F60();
            sub_100020E60();
            uint64_t v69 = sub_100045CF8(&v119);
            uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
            *(void *)&long long v122 = v69;
            LogMessage.StringInterpolation.appendInterpolation(safe:)();
            sub_1000A2A3C();
            sub_100020E44();
            uint64_t MetatypeMetadata = v31;
            *(void *)&long long v122 = v66;
            *((void *)&v122 + 1) = v68;
            LogMessage.StringInterpolation.appendInterpolation(safe:)();
            sub_1000A2A3C();
            sub_1000208D8();
            sub_100011DB4();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_100020980();
            sub_100020E60();
            sub_100044FF4(&v119);
            uint64_t v75 = swift_getMetatypeMetadata();
            sub_10004D54C(v75);
            sub_100027BD8((uint64_t)&v122, &qword_10022F490);
            sub_100020E94();
            sub_100011DB4();
          }
          sub_10004377C((uint64_t)&v119);
          sub_100043B80();
          uint64_t v76 = static os_log_type_t.error.getter();
          sub_100035DCC(v76);
          swift_bridgeObjectRelease();
          goto LABEL_42;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v39 = v52;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v39 = _swiftEmptyArrayStorage;
      }
      if (++v40 == v115)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v60 = (uint64_t)v113;
        *((void *)v113 + 1) = v39;
        uint64_t v33 = (char *)v60;
        uint64_t v37 = v111;
        sub_100021AE8();
        goto LABEL_26;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_26:
  sub_10009912C((uint64_t)v33, *((unsigned char *)v37 + 16), 1852797802, 0xE400000000000000, (uint64_t)v2);
  uint64_t v61 = v112;
  if (sub_10004FD40((uint64_t)v2, 1, v112) == 1)
  {
    BOOL v31 = &type metadata for String;
    sub_100027BD8((uint64_t)v2, &qword_10022FB40);
    if (qword_10022C480 != -1) {
      goto LABEL_45;
    }
    goto LABEL_28;
  }
  (*(void (**)(uint64_t, id, uint64_t))(v103 + 32))(v105, v2, v61);
  id v70 = [self defaultManager];
  URL.path.getter();
  NSString v71 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v119 = 0;
  unsigned int v72 = [v70 removeItemAtPath:v71 error:&v119];

  if (v72)
  {
    id v73 = v119;
  }
  else
  {
    id v74 = v119;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  Data.write(to:options:)();
  uint64_t v77 = URL.path.getter();
  uint64_t v79 = v78;
  uint64_t v80 = v98;
  swift_bridgeObjectRelease();
  *uint64_t v80 = v77;
  v80[1] = v79;
  sub_10009A43C();
  if (qword_10022C480 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v81 = sub_1000208FC();
  sub_100044798(v81);
  *(_OWORD *)(sub_100020930() + 16) = xmmword_1001C3120;
  uint64_t v82 = type metadata accessor for ContentManager();
  sub_100036A60(v82);
  id v83 = (id)AMSLogKey();
  if (v83)
  {
    uint64_t v84 = v83;
    uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v87 = v86;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    uint64_t v88 = sub_100045CF8(&v119);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v122 = v88;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000A2A3C();
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    *(void *)&long long v122 = v85;
    *((void *)&v122 + 1) = v87;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000A2A3C();
    sub_1000208D8();
    sub_100011CC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    v89._countAndFlagsBits = 0;
    v89._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v89);
    sub_100044FF4(&v119);
    uint64_t v90 = swift_getMetatypeMetadata();
    sub_10004D54C(v90);
    sub_100027BD8((uint64_t)&v122, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v119);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10002064C();
  v91._countAndFlagsBits = 0xD000000000000015;
  LogMessage.StringInterpolation.appendLiteral(_:)(v91);
  uint64_t v121 = &type metadata for String;
  sub_100036AD8();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)&v119, &qword_10022F490);
  v92._countAndFlagsBits = 544175136;
  v92._object = (void *)0xE400000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v92);
  uint64_t v93 = v105;
  id v94 = (void *)URL.path.getter();
  uint64_t v121 = &type metadata for String;
  id v119 = v94;
  uint64_t v120 = v95;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)&v119, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v96 = static os_log_type_t.default.getter();
  sub_10004841C(v96);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v93, v112);
LABEL_42:
  sub_10007CDA8((uint64_t)v113);
  sub_100020FDC();
}

void sub_10009B570()
{
  sub_1000209F4();
  uint64_t v107 = v2;
  uint64_t v108 = v3;
  uint64_t v103 = v5;
  uint64_t v104 = v4;
  uint64_t v7 = v6;
  uint64_t v105 = v8;
  uint64_t v109 = v0;
  sub_100045024();
  uint64_t v101 = v9;
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v11 = sub_1000208F0(v10);
  __chkstk_darwin(v11);
  sub_100043E58(v12, v97[0]);
  uint64_t v13 = type metadata accessor for URL();
  sub_1000A29F8(v13);
  sub_100020DEC();
  uint64_t v106 = v14;
  __chkstk_darwin(v15);
  sub_100040A70();
  uint64_t v98 = v16;
  uint64_t v17 = sub_100043478(&qword_10022FB40);
  uint64_t v18 = sub_1000208F0(v17);
  __chkstk_darwin(v18);
  sub_100011EC0();
  uint64_t v21 = v19 - v20;
  __chkstk_darwin(v22);
  sub_10004FBF4();
  uint64_t v100 = v23;
  sub_100020974();
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)v97 - v25;
  uint64_t v27 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v29 = v28;
  __chkstk_darwin(v30);
  sub_1000533A0();
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)v97 - v32;
  uint64_t v34 = type metadata accessor for ContentInfo();
  uint64_t v35 = (int *)(v34 - 8);
  __chkstk_darwin(v34);
  sub_10002257C();
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)v97 - v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Date.now.getter();
  Date.addingTimeInterval(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v29 + 8))(v0, v27);
  id v39 = &v38[v35[11]];
  *(void *)id v39 = 0;
  *((void *)v39 + 1) = 0;
  v97[0] = (uint64_t)v39;
  *(void *)uint64_t v38 = _swiftEmptyArrayStorage;
  *((void *)v38 + 2) = v107;
  *((void *)v38 + 3) = v7;
  v97[1] = v7;
  Date.init()();
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v38[v35[10]], v33, v27);
  *((void *)v38 + 1) = _swiftEmptyArrayStorage;
  v38[v35[12]] = 2;
  uint64_t v40 = &v38[v35[13]];
  *(void *)uint64_t v40 = 0;
  *((void *)v40 + 1) = 0xE000000000000000;
  uint64_t v41 = v35[14];
  uint64_t v42 = v99;
  unint64_t v43 = &v38[v41];
  unint64_t v44 = v108;
  *(void *)unint64_t v43 = v103;
  *((void *)v43 + 1) = v44;
  URL.init(string:)();
  sub_100092730((uint64_t)v38, v1);
  char v45 = v109[16];
  uint64_t v102 = v26;
  sub_1000A2700((uint64_t)v26, v21, &qword_10022FB40);
  sub_10004272C(v21);
  if (v69)
  {
    sub_100027BD8(v21, &qword_10022FB40);
    uint64_t v46 = 0;
    uint64_t v48 = 0xE000000000000000;
    uint64_t v49 = v106;
  }
  else
  {
    uint64_t v46 = URL.pathExtension.getter();
    uint64_t v48 = v47;
    uint64_t v49 = v106;
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v21, v42);
  }
  uint64_t v50 = v100;
  sub_10009912C(v1, v45, v46, v48, v100);
  swift_bridgeObjectRelease();
  sub_10007CDA8(v1);
  sub_10004272C(v50);
  if (v69)
  {
    sub_100027BD8(v50, &qword_10022FB40);
    if (qword_10022C480 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v51 = sub_10002D318();
    sub_100044798(v51);
    *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
    uint64_t v115 = (void *)type metadata accessor for ContentManager();
    v114[0] = v109;
    swift_retain();
    id v52 = (id)AMSLogKey();
    if (v52)
    {
      size_t v53 = v52;
      uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v56 = v55;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020E60();
      sub_100044FF4(v114);
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100046DA4(MetatypeMetadata);
      sub_100035CA0();
      sub_100020E44();
      unsigned int v113 = &type metadata for String;
      uint64_t v111 = v54;
      uint64_t v112 = v56;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100035CA0();
      sub_1000208D8();
      sub_100040C54();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100020E60();
      sub_100044FF4(v114);
      uint64_t v78 = swift_getMetatypeMetadata();
      sub_100046DA4(v78);
      sub_100027BD8((uint64_t)&v111, &qword_10022F490);
      sub_100020E94();
      sub_100040C54();
    }
    sub_10004377C((uint64_t)v114);
    sub_100043B80();
    uint64_t v79 = static os_log_type_t.error.getter();
    sub_10004841C(v79);
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  uint64_t v58 = v98;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))(v98, v50, v42);
  uint64_t v59 = URL.path.getter();
  uint64_t v61 = v60;
  uint64_t v62 = (uint64_t *)v97[0];
  swift_bridgeObjectRelease();
  *uint64_t v62 = v59;
  v62[1] = v61;
  uint64_t v63 = self;
  id v64 = [v63 defaultManager];
  URL.path.getter();
  NSString v65 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v66 = [v64 fileExistsAtPath:v65];

  uint64_t v67 = v109;
  if (v66) {
    goto LABEL_21;
  }
  BOOL v69 = URL.path.getter() == v104 && v68 == v105;
  if (v69)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v70)
  {
LABEL_21:
    sub_10009A43C();
    if (qword_10022C480 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v80 = sub_10002D318();
    sub_100044798(v80);
    *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
    uint64_t v115 = (void *)type metadata accessor for ContentManager();
    v114[0] = v67;
    swift_retain();
    id v81 = (id)AMSLogKey();
    if (v81)
    {
      uint64_t v82 = v81;
      uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v84 = v83;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020E60();
      sub_100044FF4(v114);
      uint64_t v85 = swift_getMetatypeMetadata();
      sub_100046DA4(v85);
      sub_100035CA0();
      sub_100020E44();
      unsigned int v113 = &type metadata for String;
      uint64_t v111 = v58;
      uint64_t v112 = v84;
      sub_1000A2AC4();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v111, &qword_10022F490);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100020E60();
      sub_100044FF4(v114);
      uint64_t v86 = swift_getMetatypeMetadata();
      sub_100046DA4(v86);
      sub_100027BD8((uint64_t)&v111, &qword_10022F490);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004377C((uint64_t)v114);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v87._countAndFlagsBits = 0xD00000000000001ELL;
    v87._object = (void *)0x80000001001CC6D0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v87);
    uint64_t v115 = &type metadata for String;
    sub_1000A29C4();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v114, &qword_10022F490);
    sub_100020E60();
    sub_100040C54();
    uint64_t v88 = static os_log_type_t.default.getter();
    sub_10004841C(v88);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v58, v42);
LABEL_27:
    sub_100027BD8((uint64_t)v102, &qword_10022FB40);
    sub_10007CDA8((uint64_t)v38);
    goto LABEL_28;
  }
  uint64_t v71 = v58;
  uint64_t v72 = v49;
  id v73 = [v63 defaultManager];
  NSString v74 = String._bridgeToObjectiveC()();
  URL.path.getter();
  NSString v75 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v114[0] = 0;
  unsigned int v76 = [v73 moveItemAtPath:v74 toPath:v75 error:v114];

  if (v76)
  {
    id v77 = v114[0];
    uint64_t v58 = v71;
    uint64_t v67 = v109;
    goto LABEL_21;
  }
  id v89 = v114[0];
  _convertNSErrorToError(_:)();

  swift_willThrow();
  Swift::String v91 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
  uint64_t v90 = v72 + 8;
  v91(v71, v42);
  sub_100027BD8((uint64_t)v102, &qword_10022FB40);
  sub_10007CDA8((uint64_t)v38);
  if (qword_10022C480 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v92 = sub_10002D318();
  sub_100044798(v92);
  *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3140;
  uint64_t v115 = (void *)type metadata accessor for ContentManager();
  v114[0] = v109;
  swift_retain();
  if ((id)AMSLogKey())
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_10004A52C();
    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    sub_100044FF4(v114);
    uint64_t v93 = swift_getMetatypeMetadata();
    sub_100046DA4(v93);
    sub_100035CA0();
    sub_100020E44();
    unsigned int v113 = &type metadata for String;
    uint64_t v111 = v90;
    uint64_t v112 = &type metadata for String;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100035CA0();
    sub_1000208D8();
    sub_10001D6F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    sub_100044FF4(v114);
    uint64_t v94 = swift_getMetatypeMetadata();
    sub_100046DA4(v94);
    sub_100027BD8((uint64_t)&v111, &qword_10022F490);
    sub_100020E94();
    sub_10001D6F8();
  }
  sub_10004377C((uint64_t)v114);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  uint64_t v115 = &type metadata for String;
  sub_1000A29C4();
  static LogMessage.safe(_:)();
  sub_100027BD8((uint64_t)v114, &qword_10022F490);
  uint64_t v115 = &type metadata for String;
  v114[0] = v103;
  v114[1] = v108;
  swift_bridgeObjectRetain();
  sub_100049F88();
  sub_100027BD8((uint64_t)v114, &qword_10022F490);
  swift_getErrorValue();
  uint64_t v115 = v110;
  sub_10003BAA4((uint64_t *)v114);
  sub_1000456E0();
  sub_100011DCC();
  v95();
  sub_100049F88();
  sub_100027BD8((uint64_t)v114, &qword_10022F490);
  uint64_t v96 = static os_log_type_t.error.getter();
  sub_10004841C(v96);
  swift_bridgeObjectRelease();
  swift_errorRelease();
LABEL_28:
  sub_100020FDC();
}

void sub_10009C1D0()
{
  sub_1000209F4();
  sub_100045024();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100022558();
  uint64_t v82 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  id v81 = (char *)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100020974();
  __chkstk_darwin(v9);
  sub_100022190();
  uint64_t v80 = v10;
  uint64_t v83 = v0;
  int v79 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v85 = v2;
  uint64_t v11 = sub_10009C94C(v79);
  if (v11[2])
  {
    uint64_t v78 = (void (**)(char *, uint64_t))(v6 + 8);
    v68[1] = v11;
    uint64_t v12 = v11 + 5;
    __n128 v77 = (__n128)xmmword_1001C3120;
    sub_100020640();
    uint64_t v71 = v13;
    sub_100020640();
    BOOL v69 = v15;
    while (1)
    {
      uint64_t v87 = v14;
      swift_bridgeObjectRetain();
      uint64_t v16 = v81;
      sub_10009CEE4(v79);
      uint64_t v17 = v80;
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v18 = *v78;
      uint64_t v19 = v82;
      (*v78)(v16, v82);
      uint64_t v20 = URL.path.getter();
      uint64_t v22 = v21;
      v18(v17, v19);
      uint64_t v84 = v20;
      uint64_t v23 = sub_10009D598();
      if (!v24) {
        break;
      }
      uint64_t v27 = v23;
      uint64_t v28 = v24;
      uint64_t v29 = v25;
      uint64_t v30 = v26;
      uint64_t v86 = v22;
      swift_bridgeObjectRetain();
      sub_1000995B4();
      uint64_t v32 = v31;
      swift_bridgeObjectRelease();
      uint64_t v33 = *(void *)(v32 + 16);
      swift_bridgeObjectRelease();
      if (!v33)
      {
        if (qword_10022C480 != -1) {
          swift_once();
        }
        uint64_t v76 = qword_1002440E8;
        sub_100043478(&qword_10022E560);
        uint64_t v45 = sub_10002D318();
        sub_100044798(v45);
        unint64_t v48 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
        uint64_t v74 = *(void *)(v46 + 72);
        uint64_t v49 = (__n128 *)sub_10002D330();
        v49[1] = v77;
        NSString v75 = v49;
        id v73 = (char *)v49 + v48;
        uint64_t v93 = (void *)type metadata accessor for ContentManager();
        uint64_t v91 = v83;
        swift_retain();
        id v50 = (id)AMSLogKey();
        uint64_t v72 = v29;
        if (v50)
        {
          uint64_t v51 = v50;
          uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v53 = v52;

          swift_bridgeObjectRetain();
          sub_100020F60();
          sub_1000448B8();
          uint64_t v54 = sub_100020F04(&v91);
          uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
          sub_10004868C(MetatypeMetadata);
          sub_10004A70C();
          sub_100020E44();
          uint64_t v90 = &type metadata for String;
          uint64_t v88 = v70;
          uint64_t v89 = v53;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10004A70C();
          sub_1000208D8();
          sub_100024534();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100020980();
          sub_1000448B8();
          uint64_t v54 = sub_100020F04(&v91);
          uint64_t v61 = swift_getMetatypeMetadata();
          sub_10004868C(v61);
          sub_10004A70C();
          sub_100020E94();
          sub_100024534();
        }
        sub_10004377C((uint64_t)&v91);
        v74 += v54;
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v62._countAndFlagsBits = 0xD00000000000002DLL;
        v62._object = v69;
        LogMessage.StringInterpolation.appendLiteral(_:)(v62);
        uint64_t v93 = &type metadata for String;
        uint64_t v63 = v84;
        uint64_t v22 = v86;
        uint64_t v91 = v84;
        uint64_t v92 = v86;
        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000A2B14();
        v64._countAndFlagsBits = 0x203A79656B2820;
        v64._object = (void *)0xE700000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v64);
        uint64_t v93 = &type metadata for String;
        uint64_t v91 = v27;
        uint64_t v92 = v28;
        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000A2B14();
        v65._countAndFlagsBits = 0x6F6973726576202CLL;
        v65._object = (void *)0xEB00000000203A6ELL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v65);
        swift_bridgeObjectRelease();
        uint64_t v93 = &type metadata for String;
        uint64_t v91 = v72;
        uint64_t v92 = v30;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000A2B14();
        sub_100020E60();
        LogMessage.init(stringInterpolation:)();
        uint64_t v66 = static os_log_type_t.error.getter();
        sub_10004841C(v66);
        swift_bridgeObjectRelease();
        uint64_t v60 = v63;
LABEL_18:
        sub_10009D150(v60, v22, 0, 0);
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_19:
      v12 += 2;
      uint64_t v14 = v87 - 1;
      if (v87 == 1)
      {
        swift_bridgeObjectRelease();
        sub_100020FDC();
        return;
      }
    }
    if (qword_10022C480 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v34 = sub_10002D318();
    sub_100044798(v34);
    uint64_t v36 = *(void *)(v35 + 72);
    sub_100050D7C();
    uint64_t v37 = (__n128 *)sub_10002D330();
    sub_1000A2A54(v37, v77);
    uint64_t v93 = (void *)type metadata accessor for ContentManager();
    uint64_t v91 = v83;
    swift_retain();
    id v38 = (id)AMSLogKey();
    if (v38)
    {
      id v39 = v38;
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v76 = v36;
      uint64_t v41 = v40;
      uint64_t v86 = v22;
      uint64_t v43 = v42;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_1000448B8();
      sub_100020F04(&v91);
      uint64_t v44 = swift_getMetatypeMetadata();
      sub_10004868C(v44);
      sub_10004A70C();
      sub_100020E44();
      uint64_t v90 = &type metadata for String;
      uint64_t v88 = v41;
      uint64_t v89 = v43;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004A70C();
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      uint64_t v22 = v86;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_1000448B8();
      sub_100020F04(&v91);
      uint64_t v56 = swift_getMetatypeMetadata();
      sub_10004868C(v56);
      sub_10004A70C();
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v91);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v57._countAndFlagsBits = 0xD000000000000036;
    v57._object = v71;
    LogMessage.StringInterpolation.appendLiteral(_:)(v57);
    uint64_t v93 = &type metadata for String;
    uint64_t v58 = v84;
    uint64_t v91 = v84;
    uint64_t v92 = v22;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000A2B14();
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    uint64_t v59 = static os_log_type_t.error.getter();
    sub_10004841C(v59);
    swift_bridgeObjectRelease();
    uint64_t v60 = v58;
    goto LABEL_18;
  }
  sub_100020FDC();
  swift_bridgeObjectRelease();
}

void *sub_10009C94C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [self defaultManager];
  sub_10009CEE4(a1);
  URL.path.getter();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v43[0] = 0;
  id v11 = [v9 contentsOfDirectoryAtPath:v10 error:v43];

  id v12 = v43[0];
  if (v11)
  {
    uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v14 = v12;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10022C480 != -1) {
      swift_once();
    }
    uint64_t v15 = qword_1002440E8;
    sub_100043478(&qword_10022E560);
    uint64_t v38 = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v44 = sub_100043478(&qword_10022EC10);
    v43[0] = v2;
    id v16 = (id)AMSLogKey();
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v37 = v15;
      uint64_t v19 = v18;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v20._countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      sub_100049788(v43, v44);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v41[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v41, &qword_10022F490);
      v22._countAndFlagsBits = 5972026;
      v22._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      uint64_t MetatypeMetadata = &type metadata for String;
      v41[0] = v36;
      v41[1] = v19;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v41, &qword_10022F490);
      v23._countAndFlagsBits = 93;
      v23._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v24._countAndFlagsBits = 0;
      v24._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      sub_100049788(v43, v44);
      uint64_t v25 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v41[0] = v25;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v41, &qword_10022F490);
      v26._countAndFlagsBits = 58;
      v26._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v43);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v27._object = (void *)0x80000001001CC680;
    v27._countAndFlagsBits = 0xD000000000000027;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    uint64_t v44 = v5;
    sub_10003BAA4((uint64_t *)v43);
    sub_10009CEE4(a1);
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v43, &qword_10022F490);
    v28._countAndFlagsBits = 8238;
    v28._object = (void *)0xE200000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    swift_getErrorValue();
    uint64_t v29 = v39;
    uint64_t v30 = v40;
    uint64_t v44 = v40;
    uint64_t v31 = sub_10003BAA4((uint64_t *)v43);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v31, v29, v30);
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v43, &qword_10022F490);
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    LogMessage.init(stringInterpolation:)();
    uint64_t v33 = static os_log_type_t.error.getter();
    sub_10004841C(v33);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    return _swiftEmptyArrayStorage;
  }
  return (void *)v13;
}

void sub_10009CEE4(char a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003CE10(a1);
  URL.appendingPathComponent(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v6 = self;
  id v7 = [v6 defaultManager];
  URL.path.getter();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v9 = [v7 fileExistsAtPath:v8 isDirectory:0];

  if ((v9 & 1) == 0)
  {
    id v10 = [v6 defaultManager];
    URL.path.getter();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v17 = 0;
    unsigned int v12 = [v10 createDirectoryAtPath:v11 withIntermediateDirectories:1 attributes:0 error:&v17];

    id v13 = v17;
    if (v12)
    {
      id v14 = v13;
    }
    else
    {
      id v16 = v17;
      id v15 = v17;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
  }
}

uint64_t sub_10009D150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v9 - 8);
  if (qword_10022C480 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v33 = (void *)sub_100043478(&qword_10022EC10);
  v32[0] = v4;
  id v10 = (id)AMSLogKey();
  if (v10)
  {
    NSString v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = a3;
    uint64_t v14 = a4;
    uint64_t v16 = v15;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    sub_100049788(v32, (uint64_t)v33);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v30[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v30, &qword_10022F490);
    v19._countAndFlagsBits = 5972026;
    v19._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    uint64_t MetatypeMetadata = &type metadata for String;
    v30[0] = v12;
    v30[1] = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v30, &qword_10022F490);
    v20._countAndFlagsBits = 93;
    v20._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    LogMessage.init(stringInterpolation:)();
    a4 = v14;
    a3 = v13;
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    sub_100049788(v32, (uint64_t)v33);
    uint64_t v22 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v30[0] = v22;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v30, &qword_10022F490);
    v23._countAndFlagsBits = 58;
    v23._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v32);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._object = (void *)0x80000001001CC560;
  v24._countAndFlagsBits = 0xD000000000000020;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  uint64_t v33 = &type metadata for String;
  v32[0] = a1;
  v32[1] = a2;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)v32, &qword_10022F490);
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v25);
  LogMessage.init(stringInterpolation:)();
  uint64_t v26 = static os_log_type_t.error.getter();
  sub_10004841C(v26);
  swift_bridgeObjectRelease();
  if (qword_10022C430 != -1) {
    swift_once();
  }
  Swift::String v27 = (void *)swift_allocObject();
  v27[2] = a1;
  v27[3] = a2;
  v27[4] = v5;
  v27[5] = a3;
  v27[6] = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100050578(a3);
  sub_10015AAB8((uint64_t)sub_1000A26B4, (uint64_t)v27);
  swift_release();
  return swift_release();
}

uint64_t sub_10009D598()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v18[-v5];
  URL.init(fileURLWithPath:)();
  URL.deletingPathExtension()();
  id v7 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  uint64_t v8 = URL.lastPathComponent.getter();
  unint64_t v10 = v9;
  v7(v6, v0);
  uint64_t v19 = v8;
  unint64_t v20 = v10;
  sub_10003C8FC();
  uint64_t v11 = StringProtocol.removingPercentEncoding.getter();
  if (v12)
  {
    uint64_t v13 = v11;
    unint64_t v14 = v12;
    uint64_t v11 = swift_bridgeObjectRelease();
    uint64_t v8 = v13;
    unint64_t v10 = v14;
  }
  uint64_t v19 = 43;
  unint64_t v20 = 0xE100000000000000;
  __chkstk_darwin(v11);
  *(void *)&v18[-16] = &v19;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1000A1D64(1, 1u, sub_100092794, (uint64_t)&v18[-32], v8, v10);
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + 16) != 2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = static String._fromSubstring(_:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    static String._fromSubstring(_:)();
    swift_bridgeObjectRelease();
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_10009D838(uint64_t a1)
{
  uint64_t v3 = sub_100021AF4();
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = sub_100021AF4();
  *(void *)(v4 + 16) = &_swiftEmptySetSingleton;
  uint64_t v5 = v4 + 16;
  uint64_t v6 = sub_100021AF4();
  *(void *)(v6 + 16) = _swiftEmptyArrayStorage;
  uint64_t v29 = sub_100021AF4();
  *(void *)(v29 + 16) = _swiftEmptyArrayStorage;
  uint64_t v28 = v29 + 16;
  id v7 = (void *)swift_allocObject();
  v7[2] = v1;
  v7[3] = v3;
  v7[4] = v4;
  v7[5] = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100099358();
  swift_retain();
  uint64_t v30 = v4;
  swift_retain();
  swift_retain();
  swift_release();
  swift_beginAccess();
  uint64_t v8 = *(void *)(v6 + 16);
  uint64_t v9 = v1;
  uint64_t v10 = *(void *)(v8 + 16);
  if (v10)
  {
    uint64_t v11 = type metadata accessor for ContentInfo();
    sub_100044798(v11);
    unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    char v14 = *(unsigned char *)(v9 + 16);
    uint64_t v16 = *(void *)(v15 + 72);
    type metadata accessor for ContentManager();
    swift_bridgeObjectRetain();
    uint64_t v17 = v13 + v8 + 24;
    do
    {
      *(unsigned char *)(sub_100030788() + 16) = v14;
      sub_10009A1D0();
      swift_release();
      v17 += v16;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(*(void *)v5 + 16))
  {
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v30;
    *(void *)(v18 + 24) = v29;
    sub_100099358();
    swift_retain();
    swift_retain();
    swift_release();
  }
  swift_beginAccess();
  uint64_t v19 = *(void *)v28;
  uint64_t v20 = *(void *)(*(void *)v28 + 16);
  if (v20)
  {
    uint64_t v21 = type metadata accessor for ContentInfo();
    sub_100044798(v21);
    uint64_t v23 = v19 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    char v24 = *(unsigned char *)(v9 + 16);
    uint64_t v26 = *(void *)(v25 + 72);
    type metadata accessor for ContentManager();
    swift_bridgeObjectRetain();
    do
    {
      *(unsigned char *)(sub_100030788() + 16) = v24;
      sub_10009A43C();
      swift_release();
      v23 += v26;
      --v20;
    }
    while (v20);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
  }
  swift_release();
  return swift_release();
}

id sub_10009DB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v169 = a5;
  uint64_t v168 = a4;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v172 = *(void *)(v8 - 8);
  uint64_t v173 = v8;
  __chkstk_darwin(v8);
  uint64_t v171 = (char *)v164 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for ContentInfo();
  uint64_t v170 = *((void *)v10 - 1);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v174 = (uint64_t)v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v14 = (char *)v164 - v13;
  uint64_t v15 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v167 = (char *)v164 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = v10[10];
  int v19 = *(unsigned __int8 *)(a1 + v18);
  LODWORD(v176) = *(unsigned char *)(a1 + v18) == 0;
  uint64_t v177 = v10;
  uint64_t v175 = v18;
  if (!v19)
  {
    uint64_t v166 = a3;
    if (qword_10022C480 != -1) {
      swift_once();
    }
    uint64_t v165 = qword_1002440E8;
    sub_100043478(&qword_10022E560);
    uint64_t v20 = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    *((void *)&v182 + 1) = type metadata accessor for ContentManager();
    *(void *)&long long v181 = a2;
    swift_retain();
    id v21 = (id)AMSLogKey();
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v164[1] = v20;
      uint64_t v24 = a2;
      uint64_t v25 = v23;
      uint64_t v27 = v26;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v28._countAndFlagsBits = 0;
      v28._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      sub_100049788(&v181, *((uint64_t *)&v182 + 1));
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v178 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v178, &qword_10022F490);
      v30._countAndFlagsBits = 5972026;
      v30._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v178 = v25;
      uint64_t v179 = v27;
      a2 = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v178, &qword_10022F490);
      v31._countAndFlagsBits = 93;
      v31._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v32._countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      sub_100049788(&v181, *((uint64_t *)&v182 + 1));
      uint64_t v33 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v178 = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v178, &qword_10022F490);
      v34._countAndFlagsBits = 58;
      v34._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v181);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v35._object = (void *)0x80000001001CC4D0;
    v35._countAndFlagsBits = 0xD00000000000001ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    uint64_t v37 = *(void *)(a1 + 16);
    uint64_t v36 = *(void *)(a1 + 24);
    *((void *)&v182 + 1) = &type metadata for String;
    *(void *)&long long v181 = v37;
    *((void *)&v181 + 1) = v36;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v181, &qword_10022F490);
    v38._countAndFlagsBits = 0x6E6F697372657620;
    v38._object = (void *)0xEA0000000000203ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    uint64_t v10 = v177;
    uint64_t v39 = (uint64_t *)(a1 + v177[12]);
    uint64_t v41 = *v39;
    uint64_t v40 = v39[1];
    *((void *)&v182 + 1) = &type metadata for String;
    *(void *)&long long v181 = v41;
    *((void *)&v181 + 1) = v40;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v181, &qword_10022F490);
    v42._countAndFlagsBits = 41;
    v42._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v42);
    LogMessage.init(stringInterpolation:)();
    uint64_t v43 = static os_log_type_t.error.getter();
    sub_10004841C(v43);
    swift_bridgeObjectRelease();
    uint64_t v18 = v175;
    int v19 = *(unsigned __int8 *)(a1 + v175);
    a3 = v166;
  }
  uint64_t v44 = a3 + 16;
  sub_100092730(a1, (uint64_t)v14);
  uint64_t v166 = v44;
  if (v19 != 1)
  {
    sub_10007CDA8((uint64_t)v14);
    goto LABEL_20;
  }
  swift_beginAccess();
  if (*(void *)(*(void *)v44 + 16))
  {
    uint64_t v45 = (uint64_t *)&v14[v10[11]];
    uint64_t v47 = *v45;
    uint64_t v46 = v45[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100042ADC(v47, v46);
    LOBYTE(v47) = v48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10007CDA8((uint64_t)v14);
    if (v47) {
      goto LABEL_20;
    }
  }
  else
  {
    sub_10007CDA8((uint64_t)v14);
  }
  if (qword_10022C480 != -1) {
    swift_once();
  }
  uint64_t v176 = qword_1002440E8;
  sub_100043478(&qword_10022E560);
  uint64_t v165 = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  *((void *)&v182 + 1) = type metadata accessor for ContentManager();
  *(void *)&long long v181 = a2;
  swift_retain();
  id v49 = (id)AMSLogKey();
  if (v49)
  {
    id v50 = v49;
    uint64_t v51 = a2;
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v53;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v55._countAndFlagsBits = 0;
    v55._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v55);
    sub_100049788(&v181, *((uint64_t *)&v182 + 1));
    uint64_t v56 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v178 = v56;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v178, &qword_10022F490);
    v57._countAndFlagsBits = 5972026;
    v57._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v57);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v178 = v52;
    uint64_t v179 = v54;
    a2 = v51;
    uint64_t v18 = v175;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v178, &qword_10022F490);
    v58._countAndFlagsBits = 93;
    v58._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v58);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v59._countAndFlagsBits = 0;
    v59._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v59);
    sub_100049788(&v181, *((uint64_t *)&v182 + 1));
    uint64_t v60 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v178 = v60;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v178, &qword_10022F490);
    v61._countAndFlagsBits = 58;
    v61._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v61);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v181);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v62._countAndFlagsBits = 0xD000000000000033;
  v62._object = (void *)0x80000001001CC490;
  LogMessage.StringInterpolation.appendLiteral(_:)(v62);
  uint64_t v64 = *(void *)(a1 + 16);
  uint64_t v63 = *(void *)(a1 + 24);
  *((void *)&v182 + 1) = &type metadata for String;
  *(void *)&long long v181 = v64;
  *((void *)&v181 + 1) = v63;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)&v181, &qword_10022F490);
  v65._countAndFlagsBits = 0x6E6F697372657620;
  v65._object = (void *)0xEA0000000000203ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v65);
  uint64_t v66 = (uint64_t *)(a1 + v10[12]);
  uint64_t v68 = *v66;
  uint64_t v67 = v66[1];
  *((void *)&v182 + 1) = &type metadata for String;
  *(void *)&long long v181 = v68;
  *((void *)&v181 + 1) = v67;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)&v181, &qword_10022F490);
  v69._countAndFlagsBits = 41;
  v69._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v69);
  LogMessage.init(stringInterpolation:)();
  uint64_t v70 = static os_log_type_t.error.getter();
  sub_10004841C(v70);
  swift_bridgeObjectRelease();
  LODWORD(v176) = 1;
LABEL_20:
  int v71 = *(unsigned __int8 *)(a1 + v18);
  uint64_t v72 = v174;
  if (v71 == 2)
  {
    id v73 = (uint64_t *)(a1 + v10[9]);
    uint64_t v74 = v73[1];
    sub_100092730(a1, v174);
    if (v74)
    {
      id result = [self defaultManager];
      if (!*(void *)(v72 + v10[9] + 8))
      {
        __break(1u);
        return result;
      }
      uint64_t v76 = result;
      NSString v77 = String._bridgeToObjectiveC()();
      unsigned __int8 v78 = [v76 fileExistsAtPath:v77];

      sub_10007CDA8(v72);
      int v79 = v176;
      if (v78) {
        goto LABEL_36;
      }
    }
    else
    {
      sub_10007CDA8(v72);
    }
    if (qword_10022C480 != -1) {
      swift_once();
    }
    uint64_t v174 = qword_1002440E8;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    *((void *)&v182 + 1) = type metadata accessor for ContentManager();
    *(void *)&long long v181 = a2;
    uint64_t v176 = a2;
    swift_retain();
    id v80 = (id)AMSLogKey();
    if (v80)
    {
      id v81 = v80;
      uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v84 = v83;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v85._countAndFlagsBits = 0;
      v85._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v85);
      sub_100049788(&v181, *((uint64_t *)&v182 + 1));
      uint64_t v86 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v178 = v86;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v178, &qword_10022F490);
      v87._countAndFlagsBits = 5972026;
      v87._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v87);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v178 = v82;
      uint64_t v179 = v84;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v178, &qword_10022F490);
      v88._countAndFlagsBits = 93;
      v88._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v88);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v89._countAndFlagsBits = 0;
      v89._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v89);
      sub_100049788(&v181, *((uint64_t *)&v182 + 1));
      uint64_t v90 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v178 = v90;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v178, &qword_10022F490);
      v91._countAndFlagsBits = 58;
      v91._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v91);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v181);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v92._countAndFlagsBits = 0xD00000000000002DLL;
    v92._object = (void *)0x80000001001CC460;
    LogMessage.StringInterpolation.appendLiteral(_:)(v92);
    uint64_t v94 = *(void *)(a1 + 16);
    uint64_t v93 = *(void *)(a1 + 24);
    *((void *)&v182 + 1) = &type metadata for String;
    *(void *)&long long v181 = v94;
    *((void *)&v181 + 1) = v93;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v181, &qword_10022F490);
    v95._countAndFlagsBits = 0x6E6F697372657620;
    v95._object = (void *)0xEA0000000000203ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v95);
    uint64_t v96 = (uint64_t *)(a1 + v177[12]);
    uint64_t v98 = *v96;
    uint64_t v97 = v96[1];
    *((void *)&v182 + 1) = &type metadata for String;
    *(void *)&long long v181 = v98;
    *((void *)&v181 + 1) = v97;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v181, &qword_10022F490);
    v99._countAndFlagsBits = 0x203A6874617020;
    v99._object = (void *)0xE700000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v99);
    uint64_t v100 = v73[1];
    if (v100)
    {
      uint64_t v101 = *v73;
      *((void *)&v182 + 1) = &type metadata for String;
      *(void *)&long long v181 = v101;
      *((void *)&v181 + 1) = v100;
    }
    else
    {
      long long v181 = 0u;
      long long v182 = 0u;
    }
    a2 = v176;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v181, &qword_10022F490);
    v102._countAndFlagsBits = 41;
    v102._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v102);
    LogMessage.init(stringInterpolation:)();
    uint64_t v103 = static os_log_type_t.error.getter();
    sub_10004841C(v103);
    swift_bridgeObjectRelease();
    int v79 = 1;
LABEL_36:
    int v71 = *(unsigned __int8 *)(a1 + v175);
    goto LABEL_37;
  }
  int v79 = v176;
LABEL_37:
  if (v71 == 3)
  {
    if (qword_10022C480 != -1) {
      swift_once();
    }
    uint64_t v104 = qword_1002440E8;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    *((void *)&v182 + 1) = type metadata accessor for ContentManager();
    *(void *)&long long v181 = a2;
    uint64_t v176 = a2;
    swift_retain();
    id v105 = (id)AMSLogKey();
    if (v105)
    {
      uint64_t v106 = v105;
      uint64_t v107 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v175 = v104;
      uint64_t v109 = v108;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v110._countAndFlagsBits = 0;
      v110._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v110);
      sub_100049788(&v181, *((uint64_t *)&v182 + 1));
      uint64_t v111 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v178 = v111;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v178, &qword_10022F490);
      v112._countAndFlagsBits = 5972026;
      v112._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v112);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v178 = v107;
      uint64_t v179 = v109;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v178, &qword_10022F490);
      v113._countAndFlagsBits = 93;
      v113._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v113);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v114._countAndFlagsBits = 0;
      v114._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v114);
      sub_100049788(&v181, *((uint64_t *)&v182 + 1));
      uint64_t v115 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v178 = v115;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v178, &qword_10022F490);
      v116._countAndFlagsBits = 58;
      v116._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v116);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v181);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v117._countAndFlagsBits = 0xD00000000000001DLL;
    v117._object = (void *)0x80000001001CC440;
    LogMessage.StringInterpolation.appendLiteral(_:)(v117);
    uint64_t v119 = *(void *)(a1 + 16);
    uint64_t v118 = *(void *)(a1 + 24);
    *((void *)&v182 + 1) = &type metadata for String;
    *(void *)&long long v181 = v119;
    *((void *)&v181 + 1) = v118;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v181, &qword_10022F490);
    v120._countAndFlagsBits = 0x6E6F697372657620;
    v120._object = (void *)0xEA0000000000203ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v120);
    uint64_t v121 = (uint64_t *)(a1 + v177[12]);
    uint64_t v123 = *v121;
    uint64_t v122 = v121[1];
    *((void *)&v182 + 1) = &type metadata for String;
    *(void *)&long long v181 = v123;
    *((void *)&v181 + 1) = v122;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v181, &qword_10022F490);
    v124._countAndFlagsBits = 41;
    v124._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v124);
    LogMessage.init(stringInterpolation:)();
    uint64_t v125 = static os_log_type_t.error.getter();
    sub_10004841C(v125);
    swift_bridgeObjectRelease();
    int v79 = 1;
    a2 = v176;
  }
  uint64_t v126 = v171;
  Date.init()();
  char v127 = static Date.< infix(_:_:)();
  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v172 + 8))(v126, v173);
  if (v127)
  {
    if (qword_10022C480 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v128 = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    *((void *)&v182 + 1) = type metadata accessor for ContentManager();
    *(void *)&long long v181 = a2;
    swift_retain();
    id v129 = (id)AMSLogKey();
    if (v129)
    {
      uint64_t v130 = v129;
      uint64_t v131 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v176 = v128;
      uint64_t v133 = v132;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v134._countAndFlagsBits = 0;
      v134._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v134);
      sub_100049788(&v181, *((uint64_t *)&v182 + 1));
      uint64_t v135 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v178 = v135;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v178, &qword_10022F490);
      v136._countAndFlagsBits = 5972026;
      v136._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v136);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v178 = v131;
      uint64_t v179 = v133;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v178, &qword_10022F490);
      v137._countAndFlagsBits = 93;
      v137._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v137);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v138._countAndFlagsBits = 0;
      v138._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v138);
      sub_100049788(&v181, *((uint64_t *)&v182 + 1));
      uint64_t v139 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v178 = v139;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v178, &qword_10022F490);
      v140._countAndFlagsBits = 58;
      v140._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v140);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v181);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v141._object = (void *)0x80000001001CC420;
    v141._countAndFlagsBits = 0xD00000000000001ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v141);
    uint64_t v143 = *(void *)(a1 + 16);
    uint64_t v142 = *(void *)(a1 + 24);
    *((void *)&v182 + 1) = &type metadata for String;
    *(void *)&long long v181 = v143;
    *((void *)&v181 + 1) = v142;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v181, &qword_10022F490);
    v144._countAndFlagsBits = 0x6E6F697372657620;
    v144._object = (void *)0xEA0000000000203ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v144);
    uint64_t v145 = v177;
    uint64_t v146 = (uint64_t *)(a1 + v177[12]);
    uint64_t v148 = *v146;
    uint64_t v147 = v146[1];
    *((void *)&v182 + 1) = &type metadata for String;
    *(void *)&long long v181 = v148;
    *((void *)&v181 + 1) = v147;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v181, &qword_10022F490);
    v149._countAndFlagsBits = 41;
    v149._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v149);
    LogMessage.init(stringInterpolation:)();
    uint64_t v150 = static os_log_type_t.error.getter();
    sub_10004841C(v150);
    swift_bridgeObjectRelease();
    uint64_t v151 = *(void *)(a1 + v145[11]);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    id v152 = (void *)sub_10008894C(v151);
    swift_bridgeObjectRelease();
    swift_endAccess();
    if (v152)
    {
      [v152 cancel];
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_10008A800();
    uint64_t v154 = v153;
    swift_endAccess();
    swift_bridgeObjectRelease();

    goto LABEL_55;
  }
  if (v79)
  {
LABEL_55:
    uint64_t v155 = (Swift::Int *)(v168 + 16);
    uint64_t v156 = (uint64_t *)(v169 + 16);
    swift_beginAccess();
    Swift::Int v157 = *v155;
    swift_bridgeObjectRetain();
    uint64_t v158 = swift_bridgeObjectRetain();
    uint64_t v159 = sub_10002318C(v158);
    sub_1001A0DD0(v159, v157);
    Swift::Int v161 = v160;
    swift_beginAccess();
    *uint64_t v155 = v161;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1000BA3C4();
    uint64_t v162 = *(void *)(*v156 + 16);
    sub_1000BA4F8(v162);
    uint64_t v163 = *v156;
    *(void *)(v163 + 16) = v162 + 1;
    sub_100092730(a1, v163+ ((*(unsigned __int8 *)(v170 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80))+ *(void *)(v170 + 72) * v162);
    return (id)swift_endAccess();
  }
  return result;
}

uint64_t sub_10009F1A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContentInfo();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100092730(a1, (uint64_t)v9);
  uint64_t v10 = *v9;
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_10002318C(v11);
  swift_beginAccess();
  uint64_t v13 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_1000A233C(v14, v13);
  char v17 = v16;
  uint64_t result = swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_7;
  }
  uint64_t v51 = v12;
  uint64_t v19 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
LABEL_33:
    __break(1u);
    return result;
  }
  uint64_t v49 = a3;
  uint64_t v50 = v7;
  unint64_t v20 = *(void *)(v10 + 16);
  if (v19 != v20)
  {
    uint64_t v34 = 16 * v15;
    unint64_t v21 = v15 + 1;
    uint64_t v52 = v13;
    uint64_t v53 = v9;
    while ((v19 & 0x8000000000000000) == 0)
    {
      if (v21 >= v20) {
        goto LABEL_27;
      }
      uint64_t v35 = v10 + v34;
      uint64_t v36 = *(void *)(v10 + v34 + 48);
      uint64_t v37 = *(void *)(v10 + v34 + 56);
      swift_bridgeObjectRetain();
      sub_100148B90(v36, v37, v13);
      LOBYTE(v36) = v38;
      uint64_t result = swift_bridgeObjectRelease();
      if ((v36 & 1) == 0)
      {
        if (v21 != v15)
        {
          if (v15 < 0) {
            goto LABEL_29;
          }
          unint64_t v39 = *(void *)(v10 + 16);
          if (v15 >= v39) {
            goto LABEL_30;
          }
          if (v21 >= v39) {
            goto LABEL_31;
          }
          uint64_t v40 = (uint64_t *)(v10 + 32 + 16 * v15);
          uint64_t v41 = *v40;
          uint64_t v42 = v40[1];
          uint64_t v43 = *(void *)(v35 + 48);
          uint64_t v44 = *(void *)(v35 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1001B1710(v10);
            uint64_t v10 = v48;
          }
          uint64_t v45 = v10 + 16 * v15;
          *(void *)(v45 + 32) = v43;
          *(void *)(v45 + 40) = v44;
          uint64_t result = swift_bridgeObjectRelease();
          if (v21 >= *(void *)(v10 + 16)) {
            goto LABEL_32;
          }
          uint64_t v46 = v10 + v34;
          *(void *)(v46 + 48) = v41;
          *(void *)(v46 + 56) = v42;
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v13 = v52;
          uint64_t v9 = v53;
          *uint64_t v53 = v10;
        }
        if (__OFADD__(v15++, 1)) {
          goto LABEL_28;
        }
      }
      ++v21;
      unint64_t v20 = *(void *)(v10 + 16);
      v34 += 16;
      if (v21 == v20) {
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  unint64_t v21 = v15 + 1;
LABEL_5:
  a3 = v49;
  uint64_t v7 = v50;
  uint64_t v12 = v51;
  if ((uint64_t)v21 >= v15) {
    goto LABEL_8;
  }
  __break(1u);
LABEL_7:
  uint64_t v15 = *(void *)(v10 + 16);
  unint64_t v21 = v15;
LABEL_8:
  sub_1000E13F0(v15, v21);
  swift_bridgeObjectRelease_n();
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_10002318C(v22);
  sub_1001A2898(v12, v23, v24, v25, v26, v27, v28, v29, v49, v50, v51);
  char v31 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
  {
    swift_beginAccess();
    sub_1000BA3C4();
    uint64_t v32 = *(void *)(*(void *)(a3 + 16) + 16);
    sub_1000BA4F8(v32);
    uint64_t v33 = *(void *)(a3 + 16);
    *(void *)(v33 + 16) = v32 + 1;
    sub_100092730((uint64_t)v9, v33+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v32);
    swift_endAccess();
  }
  return sub_10007CDA8((uint64_t)v9);
}

uint64_t sub_10009F4E0()
{
  type metadata accessor for AppDatabase();
  uint64_t result = sub_1000124C0(*(unsigned __int8 *)(v0 + 16));
  if (!v1)
  {
    uint64_t v3 = sub_10007E620();
    swift_release();
    return (uint64_t)v3;
  }
  return result;
}

void sub_10009F54C(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_allocWithZone((Class)AMSEngagementEnqueueRequest) init];
  sub_100043478(&qword_100231DE0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001C4B80;
  uint64_t v5 = v4;
  sub_10004D510(0, &qword_10022EC18);
  *(void *)(v5 + 32) = sub_1000BC5A4();
  specialized Array._endMutation()();
  sub_1000BD0F4(v5, v3);
  sub_100043478(&qword_10022D798);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1001C3110;
  sub_1000119BC(a2);
  *(void *)(v6 + 32) = v7;
  sub_1000BD07C(v6, v3);
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v8 = sub_100051DF8();
  id v10 = [objc_allocWithZone((Class)AMSEngagement) initWithBag:v8];

  id v9 = [v10 _enqueue:v3];
}

uint64_t sub_10009F79C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CharacterSet();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)(a1 + *(int *)(type metadata accessor for ContentInfo() + 48));
  uint64_t v7 = v6[1];
  v14[0] = *v6;
  v14[1] = v7;
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = 43;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  uint64_t v10 = *(void *)(a1 + 16);
  id v9 = *(void **)(a1 + 24);
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = v10;
  v11._object = v9;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  static CharacterSet.urlHostAllowed.getter();
  sub_10003C8FC();
  uint64_t v12 = StringProtocol.addingPercentEncoding(withAllowedCharacters:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  return v12;
}

id sub_10009F900(void *a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  id v9 = self;
  uint64_t v10 = &selRef_scope;
  id v11 = [v9 defaultManager];
  uint64_t v69 = a2;
  NSString v12 = String._bridgeToObjectiveC()();
  unsigned int v13 = [v11 fileExistsAtPath:v12];

  if (!v13)
  {
    if (qword_10022C480 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v76 = (void *)sub_100043478(&qword_10022EC10);
    id v74 = a3;
    id v22 = (id)AMSLogKey();
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v68 = a4;
      uint64_t v25 = v24;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v26._countAndFlagsBits = 0;
      v26._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      sub_100049788(&v74, (uint64_t)v76);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v71 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v71, &qword_10022F490);
      v28._countAndFlagsBits = 5972026;
      v28._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v71 = v66;
      uint64_t v72 = v25;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v71, &qword_10022F490);
      v29._countAndFlagsBits = 93;
      v29._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      LogMessage.init(stringInterpolation:)();
      a4 = v68;
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v50._countAndFlagsBits = 0;
      v50._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v50);
      sub_100049788(&v74, (uint64_t)v76);
      uint64_t v51 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v71 = v51;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v71, &qword_10022F490);
      v52._countAndFlagsBits = 58;
      v52._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v52);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v74);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v53._countAndFlagsBits = 0xD00000000000001ALL;
    v53._object = (void *)0x80000001001CC590;
    LogMessage.StringInterpolation.appendLiteral(_:)(v53);
    uint64_t v76 = &type metadata for String;
    id v74 = a1;
    uint64_t v75 = v69;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v74, &qword_10022F490);
    v54._countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v54);
    LogMessage.init(stringInterpolation:)();
    uint64_t v55 = static os_log_type_t.error.getter();
    sub_10004841C(v55);
    id result = (id)swift_bridgeObjectRelease();
    if (!a4) {
      return result;
    }
    return (id)a4(result);
  }
  uint64_t v67 = a4;
  if (qword_10022C480 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  Swift::String v65 = (void *)sub_100043478(&qword_10022EC10);
  uint64_t v76 = v65;
  id v74 = a3;
  id v14 = (id)AMSLogKey();
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    sub_100049788(&v74, (uint64_t)v76);
    uint64_t v19 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v71 = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v71, &qword_10022F490);
    v20._countAndFlagsBits = 5972026;
    v20._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v71 = v64;
    uint64_t v72 = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v71, &qword_10022F490);
    v21._countAndFlagsBits = 93;
    v21._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    LogMessage.init(stringInterpolation:)();
    uint64_t v10 = &selRef_scope;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    sub_100049788(&v74, (uint64_t)v76);
    uint64_t v31 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v71 = v31;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v71, &qword_10022F490);
    v32._countAndFlagsBits = 58;
    v32._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v74);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v33._object = (void *)0x80000001001CC5B0;
  v33._countAndFlagsBits = 0xD000000000000013;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  uint64_t v76 = &type metadata for String;
  id v74 = a1;
  uint64_t v75 = v69;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)&v74, &qword_10022F490);
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v34);
  LogMessage.init(stringInterpolation:)();
  uint64_t v35 = static os_log_type_t.error.getter();
  sub_10004841C(v35);
  swift_bridgeObjectRelease();
  id v36 = [v9 v10[259]];
  NSString v37 = String._bridgeToObjectiveC()();
  id v74 = 0;
  unsigned int v38 = [v36 removeItemAtPath:v37 error:&v74];

  if (v38)
  {
    id result = v74;
    if (!a4) {
      return result;
    }
    return (id)a4(result);
  }
  id v40 = v74;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v76 = v65;
  id v74 = a3;
  id v41 = (id)AMSLogKey();
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v46._countAndFlagsBits = 0;
    v46._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    sub_100049788(&v74, (uint64_t)v76);
    uint64_t v47 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v71 = v47;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v71, &qword_10022F490);
    v48._countAndFlagsBits = 5972026;
    v48._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v48);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v71 = v43;
    uint64_t v72 = v45;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v71, &qword_10022F490);
    v49._countAndFlagsBits = 93;
    v49._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v49);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v56._countAndFlagsBits = 0;
    v56._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v56);
    sub_100049788(&v74, (uint64_t)v76);
    uint64_t v57 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v71 = v57;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v71, &qword_10022F490);
    v58._countAndFlagsBits = 58;
    v58._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v58);
    LogMessage.init(stringInterpolation:)();
  }
  a4 = v67;
  sub_10004377C((uint64_t)&v74);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v59._countAndFlagsBits = 0xD000000000000018;
  v59._object = (void *)0x80000001001CC5D0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v59);
  uint64_t v76 = &type metadata for String;
  id v74 = a1;
  uint64_t v75 = v69;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)&v74, &qword_10022F490);
  v60._countAndFlagsBits = 8238;
  v60._object = (void *)0xE200000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v60);
  swift_getErrorValue();
  uint64_t v76 = v70;
  Swift::String v61 = sub_10003BAA4((uint64_t *)&v74);
  (*(void (**)(uint64_t *))(*(v70 - 1) + 16))(v61);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)&v74, &qword_10022F490);
  v62._countAndFlagsBits = 0;
  v62._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v62);
  LogMessage.init(stringInterpolation:)();
  uint64_t v63 = static os_log_type_t.error.getter();
  sub_10004841C(v63);
  swift_bridgeObjectRelease();
  id result = (id)swift_errorRelease();
  if (v67) {
    return (id)a4(result);
  }
  return result;
}

void sub_1000A03D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1000209F4();
  a19 = v21;
  a20 = v22;
  uint64_t v23 = v20;
  int v159 = v24;
  uint64_t v26 = v25;
  uint64_t v146 = *v23;
  uint64_t v27 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v28 = sub_1000208F0(v27);
  __chkstk_darwin(v28);
  sub_1000A2910(v29, v144);
  uint64_t v30 = type metadata accessor for ContentInfo();
  sub_100020DEC();
  uint64_t v174 = v31;
  __chkstk_darwin(v32);
  sub_100035C70();
  uint64_t v170 = v33;
  sub_100020974();
  __chkstk_darwin(v34);
  uint64_t v171 = (uint64_t)&v144 - v35;
  sub_100020974();
  __chkstk_darwin(v36);
  sub_10004FBF4();
  uint64_t v173 = v37;
  sub_100020974();
  uint64_t v39 = __chkstk_darwin(v38);
  id v41 = (char *)&v144 - v40;
  uint64_t v165 = (uint64_t *)v26;
  uint64_t v42 = *(void *)(v26 + 8);
  uint64_t v43 = *(void *)(v42 + 16);
  uint64_t v44 = _swiftEmptyArrayStorage;
  uint64_t v172 = v39;
  if (v43)
  {
    uint64_t v45 = v23;
    swift_bridgeObjectRetain_n();
    Swift::String v46 = (void **)(v42 + 40);
    do
    {
      uint64_t v47 = (uint64_t)*(v46 - 1);
      Swift::String v48 = *v46;
      swift_bridgeObjectRetain();
      v49._countAndFlagsBits = v47;
      v49._object = v48;
      unint64_t v50 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020C140, v49);
      swift_bridgeObjectRelease();
      if (v50 <= 3)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100036250();
          sub_100070A68();
          uint64_t v44 = v53;
        }
        unint64_t v52 = v44[2];
        unint64_t v51 = v44[3];
        if (v52 >= v51 >> 1)
        {
          sub_1000A2948(v51);
          sub_100070A68();
          uint64_t v44 = v54;
        }
        v44[2] = v52 + 1;
        *((unsigned char *)v44 + v52 + 32) = v50;
      }
      v46 += 2;
      --v43;
    }
    while (v43);
    swift_bridgeObjectRelease_n();
    uint64_t v23 = v45;
    uint64_t v30 = v172;
  }
  if (v44[2]) {
    uint64_t v55 = (unsigned __int8 *)(v44 + 4);
  }
  else {
    uint64_t v55 = (unsigned __int8 *)(v23 + 2);
  }
  int v56 = *v55;
  swift_bridgeObjectRelease();
  uint64_t v57 = *v165;
  uint64_t v152 = *(void *)(*v165 + 16);
  if (!v152) {
    goto LABEL_84;
  }
  uint64_t v151 = v57 + 32;
  swift_bridgeObjectRetain();
  unint64_t v58 = 0;
  long long v163 = xmmword_1001C3130;
  sub_100020640();
  uint64_t v144 = v59;
  sub_100020640();
  uint64_t v149 = v60;
  sub_100020640();
  uint64_t v148 = v61;
  uint64_t v153 = v23;
  uint64_t v150 = v57;
  int v145 = v56;
  uint64_t v147 = v41;
  while (1)
  {
    if (v58 >= *(void *)(v57 + 16)) {
      goto LABEL_86;
    }
    unint64_t v162 = v58;
    Swift::String v62 = (uint64_t *)(v151 + 16 * v58);
    uint64_t v64 = *v62;
    uint64_t v63 = (void *)v62[1];
    swift_bridgeObjectRetain();
    uint64_t v169 = v63;
    sub_10009981C();
    __chkstk_darwin(v65);
    *(&v144 - 2) = (uint64_t)v165;
    uint64_t v67 = sub_10012886C((uint64_t (*)(char *))sub_1000A2524, (uint64_t)(&v144 - 4), v66);
    uint64_t v68 = _swiftEmptyArrayStorage;
    uint64_t v177 = _swiftEmptyArrayStorage;
    uint64_t v69 = *(void *)(v67 + 16);
    uint64_t v164 = v64;
    if (v69)
    {
      unint64_t v70 = 0;
      uint64_t v71 = (uint64_t)v147;
      while (v70 < *(void *)(v67 + 16))
      {
        unint64_t v72 = (*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80);
        uint64_t v73 = *(void *)(v174 + 72);
        sub_100092730(v67 + v72 + v73 * v70, v71);
        if (*(unsigned char *)(v71 + *(int *)(v30 + 40)) == 1)
        {
          sub_10007CC64(v71, v173);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_100073358(0, v68[2] + 1, 1);
          }
          uint64_t v68 = v177;
          unint64_t v75 = v177[2];
          unint64_t v74 = v177[3];
          unint64_t v58 = v75 + 1;
          if (v75 >= v74 >> 1)
          {
            BOOL v76 = sub_1000A2948(v74);
            sub_100073358(v76, v75 + 1, 1);
            uint64_t v68 = v177;
          }
          void v68[2] = v58;
          sub_10007CC64(v173, (uint64_t)v68 + v72 + v75 * v73);
          uint64_t v30 = v172;
        }
        else
        {
          sub_10007CDA8(v71);
        }
        if (v69 == ++v70)
        {
          NSString v77 = v177;
          uint64_t v64 = v164;
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_86:
      __break(1u);
      goto LABEL_87;
    }
    NSString v77 = _swiftEmptyArrayStorage;
LABEL_30:
    uint64_t v78 = v77[2];
    swift_release();
    uint64_t v167 = v67;
    uint64_t v168 = v78;
    if (v69)
    {
      sub_1000A29E4();
      uint64_t v80 = v67 + v79;
      swift_bridgeObjectRetain();
      unint64_t v58 = *(void *)(v58 + 72);
      uint64_t v81 = v69;
      while (1)
      {
        uint64_t v82 = v171;
        sub_100092730(v80, v171);
        int v83 = *(unsigned __int8 *)(v82 + *(int *)(v30 + 40));
        sub_10007CDA8(v82);
        if (v83 == 3) {
          break;
        }
        v80 += v58;
        if (!--v81)
        {
          swift_bridgeObjectRelease();
          uint64_t v64 = v164;
          uint64_t v78 = v168;
          goto LABEL_35;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v84 = v153;
      uint64_t v64 = v164;
    }
    else
    {
LABEL_35:
      uint64_t v84 = v153;
      if (v159) {
        goto LABEL_48;
      }
      if (qword_10022C480 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      uint64_t v85 = sub_10002D318();
      sub_100044798(v85);
      sub_10004A1C4();
      uint64_t v161 = v86;
      uint64_t v87 = sub_10002D330();
      *(_OWORD *)(v87 + 16) = v163;
      uint64_t v166 = (void *)v87;
      uint64_t v179 = (void *)type metadata accessor for ContentManager();
      uint64_t v177 = v84;
      swift_retain();
      id v88 = (id)AMSLogKey();
      if (v88)
      {
        Swift::String v89 = v88;
        uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_1000A29F8(v90);

        swift_bridgeObjectRetain();
        sub_100020F60();
        sub_100020E60();
        uint64_t v91 = sub_100040F68();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v175[0] = v91;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100035CA0();
        sub_100020E44();
        uint64_t MetatypeMetadata = &type metadata for String;
        sub_100011ED0((uint64_t)&a14);
        sub_100035CA0();
        sub_1000208D8();
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020980();
        sub_100020E60();
        sub_100049944(&v177);
        uint64_t v92 = swift_getMetatypeMetadata();
        sub_1000A2978(v92);
        sub_100027BD8((uint64_t)v175, &qword_10022F490);
        sub_100020E94();
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v177);
      LogMessage.init(stringLiteral:)();
      uint64_t v179 = &type metadata for String;
      uint64_t v93 = v169;
      uint64_t v177 = (void *)v64;
      unint64_t v178 = (unint64_t)v169;
      swift_bridgeObjectRetain();
      sub_100049F88();
      sub_100027BD8((uint64_t)&v177, &qword_10022F490);
      uint64_t v94 = static os_log_type_t.error.getter();
      unint64_t v58 = (unint64_t)v166;
      sub_10004841C(v94);
      swift_bridgeObjectRelease();
      Swift::String v95 = sub_1000A1464((uint64_t)v165, v64, v93);
      uint64_t v96 = v95[2];
      if (v96)
      {
        uint64_t v97 = (uint64_t)v84;
        uint64_t v98 = v64;
        uint64_t v166 = v95;
        Swift::String v99 = v95 + 5;
        uint64_t v100 = (uint64_t)v169;
        do
        {
          unint64_t v58 = *v99;
          uint64_t v177 = (void *)*(v99 - 1);
          unint64_t v178 = v58;
          swift_bridgeObjectRetain();
          sub_1000A150C((uint64_t *)&v177, v97, v98, v100);
          swift_bridgeObjectRelease();
          v99 += 2;
          --v96;
        }
        while (v96);
        swift_bridgeObjectRelease();
        uint64_t v64 = v98;
        uint64_t v84 = (void *)v97;
        uint64_t v30 = v172;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v30 = v172;
      }
    }
    uint64_t v78 = v168;
LABEL_48:
    if (v78) {
      break;
    }
    if (qword_10022C480 != -1) {
      swift_once();
    }
    uint64_t v161 = qword_1002440E8;
    sub_100043478(&qword_10022E560);
    uint64_t v101 = sub_10002D318();
    sub_100044798(v101);
    sub_10004A1C4();
    uint64_t v166 = v102;
    uint64_t v158 = 0;
    unint64_t v157 = v58 + 3 * (void)v102;
    uint64_t v156 = v103 | 7;
    uint64_t v104 = (__n128 *)swift_allocObject();
    sub_100011E30(v104);
    *(void *)(v105 - 256) = v58;
    uint64_t v168 = sub_1000A29F8(v106) + v58;
    uint64_t v155 = type metadata accessor for ContentManager();
    uint64_t v179 = (void *)v155;
    uint64_t v177 = v84;
    swift_retain();
    id v107 = (id)AMSLogKey();
    if (v107)
    {
      uint64_t v108 = v107;
      uint64_t v154 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020E60();
      uint64_t v109 = sub_100040F68();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v175[0] = v109;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v175, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      sub_100011ED0((uint64_t)&v180);
      sub_100040FA0();
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100020E60();
      sub_100049944(&v177);
      uint64_t v110 = swift_getMetatypeMetadata();
      sub_1000A2978(v110);
      sub_100027BD8((uint64_t)v175, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v177);
    LogMessage.init(stringLiteral:)();
    uint64_t v179 = &type metadata for String;
    uint64_t v177 = (void *)v64;
    unint64_t v178 = (unint64_t)v169;
    swift_bridgeObjectRetain();
    sub_100049F88();
    sub_100027BD8((uint64_t)&v177, &qword_10022F490);
    uint64_t v111 = static os_log_type_t.info.getter();
    uint64_t v112 = (uint64_t)v160;
    sub_10004841C(v111);
    swift_bridgeObjectRelease();
    if ((v159 & 1) == 0) {
      goto LABEL_65;
    }
    if (v69)
    {
      sub_1000A29E4();
      uint64_t v114 = v167 + v113;
      swift_bridgeObjectRetain();
      uint64_t v112 = *(void *)(v112 + 72);
      while (1)
      {
        uint64_t v115 = v170;
        sub_100092730(v114, v170);
        int v116 = *(unsigned __int8 *)(v115 + *(int *)(v30 + 40));
        sub_10007CDA8(v115);
        if (v116 != 2) {
          break;
        }
        v114 += v112;
        if (!--v69)
        {
          swift_bridgeObjectRelease();
          goto LABEL_60;
        }
      }
      swift_bridgeObjectRelease();
LABEL_65:
      uint64_t v168 = qword_1002440E8;
      Swift::String v124 = (__n128 *)swift_allocObject();
      sub_100011E30(v124);
      uint64_t v164 = v125;
      uint64_t v179 = (void *)v155;
      uint64_t v177 = v84;
      swift_retain();
      id v126 = (id)AMSLogKey();
      if (v126)
      {
        char v127 = v126;
        uint64_t v128 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_1000A29B8(v128);

        swift_bridgeObjectRetain();
        sub_100020F60();
        sub_100020E60();
        uint64_t v129 = sub_1000A2A6C();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v175[0] = v129;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100040FA0();
        sub_100020E44();
        uint64_t MetatypeMetadata = &type metadata for String;
        sub_100011ED0((uint64_t)&a15);
        sub_100040FA0();
        sub_1000208D8();
        sub_100011DB4();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020980();
        sub_100020E60();
        sub_100049944(&v177);
        uint64_t v130 = swift_getMetatypeMetadata();
        sub_1000A2978(v130);
        sub_100040FA0();
        sub_100020E94();
        sub_100011DB4();
      }
      sub_10004377C((uint64_t)&v177);
      LogMessage.init(stringLiteral:)();
      uint64_t v179 = &type metadata for String;
      uint64_t v177 = (void *)v64;
      unint64_t v178 = (unint64_t)v169;
      swift_bridgeObjectRetain();
      sub_100049F88();
      sub_100027BD8((uint64_t)&v177, &qword_10022F490);
      uint64_t v131 = static os_log_type_t.info.getter();
      uint64_t v112 = v164;
      sub_10004841C(v131);
      swift_bridgeObjectRelease();
      uint64_t v132 = *(void *)(v167 + 16);
      if (v132)
      {
        uint64_t v133 = v174;
        uint64_t v112 = v167 + ((*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80));
        swift_bridgeObjectRetain();
        uint64_t v134 = *(void *)(v133 + 72);
        do
        {
          sub_100099E30();
          v112 += v134;
          --v132;
        }
        while (v132);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_100099E30();
      goto LABEL_74;
    }
LABEL_60:
    swift_bridgeObjectRelease();
    uint64_t v117 = v64;
    uint64_t v118 = (uint64_t)v169;
    uint64_t v119 = sub_1000A1464((uint64_t)v165, v117, v169);
    uint64_t v120 = v119[2];
    if (v120)
    {
      uint64_t v121 = (uint64_t)v84;
      uint64_t v168 = (uint64_t)v119;
      uint64_t v122 = v119 + 5;
      uint64_t v123 = v164;
      do
      {
        uint64_t v112 = *v122;
        uint64_t v177 = (void *)*(v122 - 1);
        unint64_t v178 = v112;
        swift_bridgeObjectRetain();
        sub_1000A1910((uint64_t *)&v177, v121, v123, v118);
        swift_bridgeObjectRelease();
        v122 += 2;
        --v120;
      }
      while (v120);
      swift_bridgeObjectRelease();
      uint64_t v57 = v150;
      sub_100021AE8();
      uint64_t v30 = v172;
      goto LABEL_75;
    }
    swift_bridgeObjectRelease();
LABEL_74:
    uint64_t v57 = v150;
    sub_100021AE8();
LABEL_75:
    unint64_t v58 = v112 + 1;
    swift_bridgeObjectRelease();
    if (v58 == v152) {
      goto LABEL_83;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_10022C480 == -1) {
    goto LABEL_79;
  }
LABEL_87:
  swift_once();
LABEL_79:
  sub_100043478(&qword_10022E560);
  uint64_t v135 = sub_10002D318();
  sub_100044798(v135);
  sub_10004A1C4();
  *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
  uint64_t v179 = (void *)type metadata accessor for ContentManager();
  uint64_t v177 = v153;
  swift_retain();
  id v136 = (id)AMSLogKey();
  if (v136)
  {
    Swift::String v137 = v136;
    uint64_t v138 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v140 = v139;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    uint64_t v141 = sub_100040F68();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v175[0] = v141;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10003BDD4();
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v175[0] = v138;
    v175[1] = v140;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10003BDD4();
    sub_1000208D8();
    sub_100011CC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    uint64_t v142 = sub_1000A2A6C();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v175[0] = v142;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v175, &qword_10022F490);
    sub_100020E94();
    sub_100011CC0();
  }
  sub_10004377C((uint64_t)&v177);
  sub_100043B80();
  uint64_t v143 = static os_log_type_t.debug.getter();
  sub_10004841C(v143);
LABEL_83:
  swift_bridgeObjectRelease();
LABEL_84:
  sub_100020FDC();
}

uint64_t sub_1000A130C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentInfo();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v9 = (char *)v19 - v8;
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24))
  {
    sub_100092730(a1, (uint64_t)v19 - v8);
    sub_100092730(a2, (uint64_t)v7);
  }
  else
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100092730(a1, (uint64_t)v9);
    sub_100092730(a2, (uint64_t)v7);
    if ((v11 & 1) == 0)
    {
      char v12 = 1;
      goto LABEL_14;
    }
  }
  uint64_t v13 = *(int *)(v4 + 48);
  uint64_t v14 = *(void *)&v9[v13];
  uint64_t v15 = *(void *)&v9[v13 + 8];
  uint64_t v16 = &v7[v13];
  if (v14 == *(void *)v16 && v15 == *((void *)v16 + 1)) {
    char v12 = 0;
  }
  else {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)() ^ 1;
  }
LABEL_14:
  sub_10007CDA8((uint64_t)v9);
  sub_10007CDA8((uint64_t)v7);
  return v12 & 1;
}

void *sub_1000A1464(uint64_t a1, uint64_t a2, void *a3)
{
  swift_bridgeObjectRetain();
  sub_1000A2954((uint64_t)":NotificationIdSeparator:");
  swift_bridgeObjectRetain();
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_100093CFC(v3, a2, a3);
  uint64_t v5 = v4;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_100093934(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1000A150C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  uint64_t v29 = *a1;
  uint64_t v23 = a1[1];
  if (qword_10022C480 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3140;
  uint64_t v28 = (void *)type metadata accessor for ContentManager();
  uint64_t v26 = a2;
  swift_retain();
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(&v26, (uint64_t)v28);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v24[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v24, &qword_10022F490);
    v14._countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v24[0] = v9;
    v24[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v24, &qword_10022F490);
    v15._countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(&v26, (uint64_t)v28);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v24[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v24, &qword_10022F490);
    v18._countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v26);
  LogMessage.init(stringLiteral:)();
  uint64_t v28 = &type metadata for String;
  uint64_t v26 = v29;
  uint64_t v27 = v23;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_100027BD8((uint64_t)&v26, &qword_10022F490);
  LogMessage.init(stringLiteral:)();
  uint64_t v28 = &type metadata for String;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_100027BD8((uint64_t)&v26, &qword_10022F490);
  uint64_t v19 = static os_log_type_t.default.getter();
  sub_10004841C(v19);
  swift_bridgeObjectRelease();
  sub_1000A2544();
  swift_allocError();
  sub_1000950B8();
  return swift_errorRelease();
}

void sub_1000A1910(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  uint64_t v28 = *a1;
  uint64_t v22 = a1[1];
  if (qword_10022C480 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3140;
  uint64_t v27 = (void *)type metadata accessor for ContentManager();
  uint64_t v25 = a2;
  swift_retain();
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(&v25, (uint64_t)v27);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v23, &qword_10022F490);
    v14._countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v9;
    v23[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v23, &qword_10022F490);
    v15._countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(&v25, (uint64_t)v27);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v23, &qword_10022F490);
    v18._countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v25);
  LogMessage.init(stringLiteral:)();
  uint64_t v27 = &type metadata for String;
  uint64_t v25 = v28;
  uint64_t v26 = v22;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_100027BD8((uint64_t)&v25, &qword_10022F490);
  LogMessage.init(stringLiteral:)();
  uint64_t v27 = &type metadata for String;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_100027BD8((uint64_t)&v25, &qword_10022F490);
  uint64_t v19 = static os_log_type_t.default.getter();
  sub_10004841C(v19);
  swift_bridgeObjectRelease();
  sub_1000950B8();
}

uint64_t sub_1000A1CEC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ContentManager()
{
  return self;
}

uint64_t sub_1000A1D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)() & 1;
  }
}

uint64_t sub_1000A1D64(uint64_t a1, unsigned __int8 a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v54[3] = a4;
  if (a1 < 0)
  {
    sub_100022904();
    goto LABEL_40;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  uint64_t v46 = v10 + 16;
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v34 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v34 = 11;
    }
    sub_1000A2194(v34 | (v11 << 16), v51, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_36:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v45 = a1;
  unint64_t v52 = 4 * v12;
  uint64_t v13 = _swiftEmptyArrayStorage;
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v54[0] = String.subscript.getter();
    v54[1] = v17;
    char v18 = a3(v54);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      unint64_t v14 = String.index(after:)();
      goto LABEL_21;
    }
    int v20 = (v15 >> 14 == v14 >> 14) & a2;
    if (v20 != 1)
    {
      if (v14 >> 14 < v15 >> 14) {
        goto LABEL_38;
      }
      uint64_t v21 = String.subscript.getter();
      uint64_t v47 = v23;
      uint64_t v48 = v22;
      uint64_t v49 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v29 = sub_100036250();
        sub_100070818(v29, v30, v31, (uint64_t)v13);
        uint64_t v13 = v32;
      }
      unint64_t v26 = v13[2];
      unint64_t v25 = v13[3];
      if (v26 >= v25 >> 1)
      {
        sub_100070818(v25 > 1, v26 + 1, 1, (uint64_t)v13);
        uint64_t v13 = v33;
      }
      v13[2] = v26 + 1;
      uint64_t v27 = &v13[4 * v26];
      v27[4] = v21;
      v27[5] = v49;
      v27[6] = v48;
      v27[7] = v47;
      *(void *)uint64_t v46 = v13;
    }
    uint64_t v28 = String.index(after:)();
    unint64_t v14 = v28;
    *(void *)(v51 + 16) = v28;
    if ((v20 & 1) == 0 && v13[2] == v45) {
      break;
    }
    unint64_t v15 = v28;
    unint64_t v16 = v28;
LABEL_21:
    if (v52 == v14 >> 14) {
      goto LABEL_30;
    }
  }
  unint64_t v16 = v28;
  unint64_t v15 = v28;
LABEL_30:
  if (v52 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_35:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_36;
  }
  if (v52 >= v16 >> 14)
  {
    uint64_t v35 = String.subscript.getter();
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    swift_bridgeObjectRelease();
    sub_1000BA394();
    uint64_t v42 = *(void *)(*(void *)v46 + 16);
    sub_1000BA4C8(v42);
    uint64_t v13 = *(void **)v46;
    v13[2] = v42 + 1;
    uint64_t v43 = &v13[4 * v42];
    v43[4] = v35;
    v43[5] = v37;
    v43[6] = v39;
    v43[7] = v41;
    *(void *)uint64_t v46 = v13;
    goto LABEL_35;
  }
LABEL_38:
  sub_100022904();
LABEL_40:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000A2194(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = String.subscript.getter();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    sub_1000BA394();
    uint64_t v14 = *(void *)(*(void *)(a4 + 16) + 16);
    sub_1000BA4C8(v14);
    uint64_t v15 = *(void *)(a4 + 16);
    *(void *)(v15 + 16) = v14 + 1;
    unint64_t v16 = (void *)(v15 + 32 * v14);
    v16[4] = v7;
    void v16[5] = v9;
    v16[6] = v11;
    v16[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000A229C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = 0;
    uint64_t v7 = (void *)(a1 + 40);
    while (1)
    {
      BOOL v8 = *(v7 - 1) == a2 && *v7 == a3;
      if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      v7 += 2;
      if (v4 == ++v6) {
        goto LABEL_9;
      }
    }
  }
  else
  {
LABEL_9:
    uint64_t v6 = 0;
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1000A233C(uint64_t a1, uint64_t a2)
{
  *(void *)(swift_allocObject() + 16) = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v6 = 0;
    goto LABEL_23;
  }
  uint64_t v23 = a1 + 32;
  uint64_t v5 = a2 + 56;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  uint64_t v22 = v4;
  while (!*(void *)(a2 + 16))
  {
LABEL_19:
    if (++v6 == v4)
    {
      swift_release();
      uint64_t v6 = 0;
      goto LABEL_23;
    }
  }
  uint64_t v7 = (uint64_t *)(v23 + 16 * v6);
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v10 = Hasher._finalize()();
  uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v4 = v22;
    goto LABEL_19;
  }
  uint64_t v13 = *(void *)(a2 + 48);
  uint64_t v14 = (void *)(v13 + 16 * v12);
  BOOL v15 = *v14 == v9 && v14[1] == v8;
  if (!v15 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v16 = ~v11;
    for (unint64_t i = v12 + 1; ; unint64_t i = v18 + 1)
    {
      uint64_t v18 = i & v16;
      if (((*(void *)(v5 + (((i & v16) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v16)) & 1) == 0) {
        break;
      }
      char v19 = (void *)(v13 + 16 * v18);
      BOOL v20 = *v19 == v9 && v19[1] == v8;
      if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_21;
      }
    }
    goto LABEL_18;
  }
LABEL_21:
  swift_release();
  swift_bridgeObjectRelease();
LABEL_23:
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1000A2524(uint64_t a1)
{
  return sub_1000A130C(a1, *(void *)(v1 + 16)) & 1;
}

unint64_t sub_1000A2544()
{
  unint64_t result = qword_10022EC20;
  if (!qword_10022EC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022EC20);
  }
  return result;
}

uint64_t sub_1000A2590()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A25C8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

id sub_1000A2618(uint64_t a1)
{
  return sub_10009DB64(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1000A2624()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A2664(uint64_t a1)
{
  return sub_10009F1A4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000A266C()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  return _swift_deallocObject(v0, 56, 7);
}

id sub_1000A26B4()
{
  return sub_10009F900(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(uint64_t (**)(void))(v0 + 40));
}

uint64_t sub_1000A26C4(uint64_t *a1, uint64_t *a2)
{
  return sub_1000A1D20(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t sub_1000A26F0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A2700(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100043478(a3);
  sub_1000456E0();
  sub_100011DCC();
  v4();
  return a2;
}

uint64_t sub_1000A275C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022D880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for ContentManager.BatchDownloadingError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000A2860);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentManager.BatchDownloadingError()
{
  return &type metadata for ContentManager.BatchDownloadingError;
}

unint64_t sub_1000A289C()
{
  unint64_t result = qword_10022EC30;
  if (!qword_10022EC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022EC30);
  }
  return result;
}

uint64_t sub_1000A28F8()
{
  return sub_100027BD8(v1 - 152, v0);
}

void sub_1000A2910(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 256) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1000A292C()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

BOOL sub_1000A2948@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void sub_1000A2954(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000019;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_1000A2978(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 160) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

void sub_1000A2994()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  sub_1000502C4(0, v2, 1, v0);
}

uint64_t sub_1000A29B8(uint64_t result)
{
  *(void *)(v1 - 288) = result;
  return result;
}

uint64_t sub_1000A29C4()
{
  uint64_t v2 = *(void *)(v0 - 312);
  *(void *)(v0 - 128) = *(void *)(v0 - 224);
  *(void *)(v0 - 120) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000A29F8(uint64_t result)
{
  *(void *)(v1 - 296) = result;
  return result;
}

uint64_t sub_1000A2A04()
{
  return LogMessage.init(stringLiteral:)();
}

uint64_t sub_1000A2A24()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_1000A2A3C()
{
  return sub_100027BD8(v1 - 128, v0);
}

__n128 *sub_1000A2A54(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t sub_1000A2A6C()
{
  sub_100049788((void *)(v0 - 128), *(void *)(v0 - 104));
  return swift_getDynamicType();
}

void *sub_1000A2AD0@<X0>(uint64_t a1@<X8>)
{
  v2[37] = v3;
  v2[34] = v1;
  v2[35] = a1;
  return v2 + 34;
}

uint64_t sub_1000A2AE4()
{
  return sub_100027BD8(v1 - 152, v0);
}

uint64_t sub_1000A2AFC()
{
  return static LogMessage.safe(_:)();
}

uint64_t sub_1000A2B14()
{
  return sub_100027BD8(v1 - 120, v0);
}

unint64_t sub_1000A2B2C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020C1C0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t sub_1000A2B78(char a1)
{
  uint64_t result = 1415071060;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x52454745544E49;
      break;
    case 2:
      uint64_t result = 1112493122;
      break;
    case 3:
      uint64_t result = 1279346002;
      break;
    case 4:
      uint64_t result = 0x205952414D495250;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000A2C10(unsigned __int8 *a1, char *a2)
{
  return sub_10007D51C(*a1, *a2);
}

Swift::Int sub_1000A2C1C()
{
  return sub_100059F88(*v0);
}

uint64_t sub_1000A2C24()
{
  return sub_10005A5F8();
}

Swift::Int sub_1000A2C2C(uint64_t a1)
{
  return sub_10005AFF4(a1, *v1);
}

unint64_t sub_1000A2C34@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000A2B2C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000A2C64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000A2B78(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000A2C90()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A2CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000A2D04(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t sub_1000A2D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t sub_1000A2D9C(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000A2DDC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for DatabaseCreationParameter()
{
}

uint64_t sub_1000A2E28(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 3) {
    return swift_bridgeObjectRetain();
  }
  if (!a3) {
    return sub_10004EA44(result, a2);
  }
  return result;
}

uint64_t sub_1000A2E48(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  return sub_100044D8C(v2, v3, v4);
}

uint64_t sub_1000A2E88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_1000A2E28(v4, v5, v6);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  return a1;
}

uint64_t sub_1000A2EE0(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[2];
  unint64_t v5 = v2[3];
  LOBYTE(v2) = *((unsigned char *)v2 + 32);
  sub_1000A2E28(v4, v5, (char)v2);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v8 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = (_BYTE)v2;
  sub_100044D8C(v6, v7, v8);
  return a1;
}

uint64_t sub_1000A2F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  char v8 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v5;
  sub_100044D8C(v6, v7, v8);
  return a1;
}

uint64_t sub_1000A2FB0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000A2FF0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for DatabaseCriteriaParameter()
{
}

uint64_t getEnumTagSinglePayload for MercuryCacheUpdateTask.UpdateError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_1000A30C8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A3194);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for DatabaseCreationParameter.ValueType()
{
}

unint64_t sub_1000A31CC()
{
  unint64_t result = qword_10022EC38;
  if (!qword_10022EC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022EC38);
  }
  return result;
}

id sub_1000A3218()
{
  uint64_t v0 = sub_100043478(&qword_10022EC40);
  __chkstk_darwin(v0 - 8);
  int v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = [objc_allocWithZone((Class)NSDateFormatter) init];
  sub_1000A3354(0xD00000000000001DLL, 0x80000001001CC920, v3);
  TimeZone.init(identifier:)();
  uint64_t v4 = type metadata accessor for TimeZone();
  Class isa = 0;
  if (sub_10004FD40((uint64_t)v2, 1, v4) != 1)
  {
    Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v2, v4);
  }
  [v3 setTimeZone:isa];

  return v3;
}

void sub_1000A3354(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setDateFormat:v4];
}

uint64_t sub_1000A33B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_100043478((uint64_t *)&unk_100231D40);
  __chkstk_darwin(v6 - 8);
  sub_100020EAC();
  uint64_t v9 = v8 - v7;
  sub_100043478((uint64_t *)&unk_10022F680);
  sub_100020DEC();
  uint64_t v24 = v10;
  uint64_t v25 = v11;
  __chkstk_darwin(v10);
  sub_100020EAC();
  uint64_t v14 = v13 - v12;
  uint64_t v26 = sub_100043478(&qword_10022ED10);
  sub_100020DEC();
  uint64_t v29 = v15;
  __chkstk_darwin(v16);
  sub_100020EAC();
  uint64_t v19 = v18 - v17;
  sub_100043478((uint64_t *)&unk_100231D50);
  swift_allocObject();
  uint64_t v27 = v4;
  *(void *)(v4 + 16) = PassthroughSubject.init()();
  *(void *)(v4 + 24) = 0;
  type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  sub_1000466D4();
  sub_1000438EC();
  sub_10002B6DC(&qword_10022ED18, (uint64_t *)&unk_100231D50);
  sub_10006737C();
  swift_retain();
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_1000A3808(v9);
  swift_release();
  sub_1000466D4();
  sub_10002B6DC(&qword_10022ED20, (uint64_t *)&unk_10022F680);
  Publisher.receive<A>(on:options:)();
  sub_1000A3808(v9);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v14, v24);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a3;
  *(void *)(v20 + 24) = a4;
  sub_10002B6DC(&qword_10022ED28, &qword_10022ED10);
  swift_retain();
  uint64_t v21 = Publisher<>.sink(receiveValue:)();

  swift_release();
  swift_release();
  uint64_t v22 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(a1, v22);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v19, v26);
  *(void *)(v27 + 24) = v21;
  swift_release();
  return v27;
}

uint64_t sub_1000A3724(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1000A374C()
{
  if (*(void *)(v0 + 24))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  *(void *)(v0 + 24) = 0;
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1000A37B0()
{
  sub_1000A374C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Debouncer()
{
  return self;
}

uint64_t sub_1000A3808(uint64_t a1)
{
  uint64_t v2 = sub_100043478((uint64_t *)&unk_100231D40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000A3868()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

CFPropertyListRef sub_1000A38A0(char a1)
{
  sub_1000466F4();
  sub_1000493A4();
  uint64_t v2 = (__CFString *)sub_1000449C0();
  swift_bridgeObjectRelease();
  CFPreferencesAppSynchronize(v2);

  sub_10003A9FC(a1);
  id v3 = (__CFString *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v4 = (__CFString *)sub_1000449C0();
  swift_bridgeObjectRelease();
  CFPropertyListRef v5 = CFPreferencesCopyAppValue(v3, v4);

  return v5;
}

void sub_1000A3990(const void *a1, char a2)
{
  sub_10003A9FC(a2);
  id v3 = (__CFString *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v4 = (__CFString *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  CFPreferencesSetAppValue(v3, a1, v4);

  applicationID = (__CFString *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  CFPreferencesAppSynchronize(applicationID);
}

id sub_1000A3A84()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Defaults();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_1000A3ADC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Defaults();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1000A3B10(const void *a1, char a2)
{
}

CFPropertyListRef sub_1000A3B28(char a1)
{
  return sub_1000A38A0(a1);
}

CFPropertyListRef sub_1000A3B40()
{
  CFPropertyListRef result = sub_1000A38A0(6);
  if (result)
  {
    if (swift_dynamicCast()) {
      return (CFPropertyListRef)v1;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000A3BAC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000A3C4C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 112);
  if (v7)
  {
    if (a2)
    {
      uint64_t v8 = swift_bridgeObjectRetain();
      char v9 = sub_1001A35A8(v8, a2);
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(v3 + 112);
      if (v9) {
        goto LABEL_4;
      }
    }
LABEL_6:
    uint64_t v10 = 0;
    *a1 = v7;
    goto LABEL_7;
  }
  if (a2) {
    goto LABEL_6;
  }
LABEL_4:
  *(void *)(v3 + 112) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = a3;
  uint64_t v10 = 1;
LABEL_7:
  swift_bridgeObjectRetain();
  return v10;
}

uint64_t sub_1000A3CF8(uint64_t a1)
{
  *(void *)(v1 + 112) = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A3D34()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 104));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1000A3DAC()
{
  sub_1000A3D34();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for StateTracker()
{
  return sub_10008034C();
}

void sub_1000A3DF0()
{
}

uint64_t sub_1000A3DF8(uint64_t a1, uint64_t a2)
{
  if (a1 && a2) {
    return sub_1001A35A8(a1, a2);
  }
  else {
    return (a1 | a2) == 0;
  }
}

void sub_1000A3E18()
{
}

uint64_t sub_1000A3E34(uint64_t *a1, uint64_t *a2)
{
  return sub_1000A3DF8(*a1, *a2);
}

uint64_t sub_1000A3E40()
{
  type metadata accessor for DeviceAccountPrivacyAcknowledgementHandler();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_1000A61A8();
  qword_100244088 = v0;
  return result;
}

uint64_t sub_1000A3E7C()
{
  sub_100020958();
  v1[118] = v0;
  v1[117] = v2;
  v1[119] = *v0;
  type metadata accessor for LogMessage.StringInterpolation();
  v1[120] = swift_task_alloc();
  sub_100043E7C();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_1000A3F30()
{
  uint64_t v43 = v0;
  uint64_t v1 = v0[117];
  id v2 = objc_msgSend(self, "ams_sharedAccountStore");
  uint64_t v3 = sub_10004D510(0, &qword_10022D5A8);
  v0[10] = v2;
  v0[13] = v3;
  v0[14] = &off_10020D750;
  uint64_t v40 = _swiftEmptyArrayStorage;
  uint64_t v41 = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v0[117] + 32);
    id v6 = v2;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v7 = v0[119];
      uint64_t v8 = *v5++;
      uint64_t v42 = v8;
      sub_1000A54B0(&v42, (uint64_t *)&v40, v7, v0 + 10, &v41);
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    char v9 = v40;
    unint64_t v10 = (unint64_t)v41;
  }
  else
  {
    id v11 = v2;
    unint64_t v10 = (unint64_t)_swiftEmptyArrayStorage;
    char v9 = _swiftEmptyArrayStorage;
  }
  v0[122] = v9;
  v0[121] = v10;
  sub_10004377C((uint64_t)(v0 + 10));

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v0[123] = v12;
  if (!v12)
  {
    uint64_t v13 = v0 + 64;
    swift_bridgeObjectRelease();
    if (qword_10022C498 != -1) {
      swift_once();
    }
    uint64_t v22 = v0[118];
    sub_100043478(&qword_10022E560);
    uint64_t v23 = type metadata accessor for LogMessage();
    sub_100044798(v23);
    *(_OWORD *)(sub_10004DCE0() + 16) = xmmword_1001C3120;
    v0[67] = type metadata accessor for DeviceAccountPrivacyAcknowledgementHandler();
    v0[64] = v22;
    swift_retain();
    id v24 = (id)AMSLogKey();
    if (v24)
    {
      uint64_t v25 = v24;
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v28 = v27;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      uint64_t v29 = sub_100046704(v0 + 64);
      v0[47] = swift_getMetatypeMetadata();
      v0[44] = v29;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)(v0 + 44));
      sub_100020E44();
      v0[39] = &type metadata for String;
      v0[36] = v26;
      v0[37] = v28;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      uint64_t v13 = v0 + 64;
      sub_1000423CC((uint64_t)(v0 + 36));
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      uint64_t v34 = sub_10002106C(v13);
      v0[63] = swift_getMetatypeMetadata();
      v0[60] = v34;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)(v0 + 60));
      sub_100020E94();
      sub_10001D6F8();
    }
LABEL_23:
    sub_10004377C((uint64_t)v13);
    sub_100020924();
    LogMessage.init(stringLiteral:)();
    uint64_t v36 = static os_log_type_t.default.getter();
    sub_10004841C(v36);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_10004AB48();
    sub_10004B3E8();
    __asm { BRAA            X2, X16 }
  }
  if ([self isBuddyRunning])
  {
    uint64_t v13 = v0 + 96;
    swift_bridgeObjectRelease();
    if (qword_10022C498 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[118];
    sub_100043478(&qword_10022E560);
    uint64_t v15 = type metadata accessor for LogMessage();
    sub_100044798(v15);
    *(_OWORD *)(sub_10004DCE0() + 16) = xmmword_1001C3120;
    v0[99] = type metadata accessor for DeviceAccountPrivacyAcknowledgementHandler();
    v0[96] = v14;
    swift_retain();
    id v16 = (id)AMSLogKey();
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      uint64_t v21 = sub_100046704(v0 + 96);
      v0[107] = swift_getMetatypeMetadata();
      v0[104] = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)(v0 + 104));
      sub_100020E44();
      v0[111] = &type metadata for String;
      v0[108] = v18;
      v0[109] = v20;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      uint64_t v13 = v0 + 96;
      sub_1000423CC((uint64_t)(v0 + 108));
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      uint64_t v35 = sub_10002106C(v13);
      v0[103] = swift_getMetatypeMetadata();
      v0[100] = v35;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)(v0 + 100));
      sub_100020E94();
      sub_10001D6F8();
    }
    goto LABEL_23;
  }
  v0[124] = *(void *)(v0[118] + 16);
  swift_bridgeObjectRetain();
  sub_10004B3E8();
  return _swift_task_switch(v30, v31, v32);
}

uint64_t sub_1000A44E0()
{
  sub_100020958();
  *(unsigned char *)(v0 + 1041) = sub_1000A3C4C((void *)(v0 + 928), 0, *(void *)(v0 + 968)) & 1;
  swift_bridgeObjectRelease();
  sub_100043E7C();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_1000A4560()
{
  uint64_t v3 = *(void *)(v0 + 928);
  if (*(unsigned char *)(v0 + 1041) == 1)
  {
    swift_bridgeObjectRelease();
    if (qword_10022C5C8 != -1) {
      swift_once();
    }
    uint64_t v4 = *(void *)(v0 + 984);
    sub_10004BEC4((uint64_t)"engagementScheduler");
    if (v4 >= 1)
    {
      uint64_t v5 = *(void *)(v0 + 968);
      *(void *)(v0 + 1000) = sub_10004D510(0, (unint64_t *)&qword_100232020);
      *(void *)(v0 + 1008) = 0;
      if ((v5 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v5 + 32);
      }
      *(void *)(v0 + 1016) = v6;
      id v19 = v6;
      id v20 = sub_1000493B4();
      id v21 = [objc_allocWithZone((Class)AMSDeviceAccountPrivacyAcknowledgementTask) initWithAccount:v1 bag:v20];

      id v22 = [v21 performPrivacyAcknowledgement];
      *(void *)(v0 + 1024) = v22;

      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 56) = v0 + 1040;
      *(void *)(v0 + 24) = sub_1000A49F0;
      uint64_t v23 = swift_continuation_init();
      *(void *)(v0 + 120) = _NSConcreteStackBlock;
      *(void *)(v0 + 128) = 0x40000000;
      *(void *)(v0 + 136) = sub_1000A5450;
      *(void *)(v0 + 144) = &unk_10020F208;
      *(void *)(v0 + 152) = v23;
      [v22 resultWithCompletion:v0 + 120];
      return _swift_continuation_await(v0 + 16);
    }
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v2 = (void *)(v0 + 320);
  swift_bridgeObjectRelease();
  if (qword_10022C498 != -1) {
LABEL_19:
  }
    swift_once();
  uint64_t v7 = *(void *)(v0 + 944);
  sub_100043478(&qword_10022E560);
  uint64_t v8 = type metadata accessor for LogMessage();
  sub_100044798(v8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  *(void *)(v0 + 344) = type metadata accessor for DeviceAccountPrivacyAcknowledgementHandler();
  *(void *)(v0 + 320) = v7;
  swift_retain();
  id v9 = (id)AMSLogKey();
  if (v9)
  {
    unint64_t v10 = v9;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v3;
    uint64_t v12 = v11;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v13 = sub_100046704(v2);
    *(void *)(v0 + 248) = swift_getMetatypeMetadata();
    *(void *)(v0 + 224) = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 224);
    sub_100020E44();
    *(void *)(v0 + 280) = &type metadata for String;
    *(void *)(v0 + 256) = v24;
    *(void *)(v0 + 264) = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 256);
    sub_1000208D8();
    sub_100011DB4();
    uint64_t v3 = v25;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v14 = sub_100046704(v2);
    *(void *)(v0 + 184) = swift_getMetatypeMetadata();
    *(void *)(v0 + 160) = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 160);
    sub_100020E94();
    sub_100011DB4();
  }
  sub_10004377C((uint64_t)v2);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  *(void *)(v0 + 216) = &unk_10020F1F8;
  *(void *)(v0 + 192) = v3;
  static LogMessage.sensitive(_:)();
  sub_1000423CC(v0 + 192);
  uint64_t v15 = static os_log_type_t.error.getter();
  sub_10004841C(v15);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v16 = sub_10004AB48();
  return v17(v16);
}

uint64_t sub_1000A49F0()
{
  sub_100020958();
  *(void *)(*(void *)v0 + 1032) = *(void *)(*(void *)v0 + 48);
  sub_100043E7C();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_1000A4AF8()
{
  uint64_t v1 = v0 + 672;
  char v2 = *(unsigned char *)(v0 + 1040);

  if (qword_10022C498 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 944);
  sub_100043478(&qword_10022E560);
  uint64_t v4 = type metadata accessor for LogMessage();
  sub_100044798(v4);
  id v6 = *(void **)(v5 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1001C3130;
  unint64_t v10 = v9 + v8;
  *(void *)(v0 + 632) = type metadata accessor for DeviceAccountPrivacyAcknowledgementHandler();
  *(void *)(v0 + 608) = v3;
  swift_retain();
  id v11 = (id)AMSLogKey();
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = v0 + 704;
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788((void *)(v0 + 608), *(void *)(v0 + 632));
    uint64_t DynamicType = swift_getDynamicType();
    *(void *)(v0 + 728) = swift_getMetatypeMetadata();
    *(void *)(v0 + 704) = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 704);
    sub_100020E44();
    *(void *)(v0 + 760) = &type metadata for String;
    *(void *)(v0 + 736) = v30;
    *(void *)(v0 + 744) = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 736);
    sub_1000208D8();
    sub_100011DB4();
    uint64_t v1 = v0 + 672;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049788((void *)(v0 + 608), *(void *)(v0 + 632));
    uint64_t v13 = swift_getDynamicType();
    *(void *)(v0 + 664) = swift_getMetatypeMetadata();
    *(void *)(v0 + 640) = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 640);
    sub_100020E94();
    sub_100011DB4();
  }
  uint64_t v17 = *(void **)(v0 + 1016);
  sub_10004377C(v0 + 608);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  *(void *)(v0 + 696) = &type metadata for Bool;
  *(unsigned char *)(v0 + 672) = v2;
  static LogMessage.safe(_:)();
  sub_1000423CC(v1);
  uint64_t v18 = static os_log_type_t.default.getter();
  sub_10004841C(v18);
  swift_bridgeObjectRelease();

  uint64_t v19 = sub_1000457A8();
  if (v21)
  {
    uint64_t v20 = *(void *)(v0 + 992);
    swift_bridgeObjectRelease();
    return _swift_task_switch(sub_1000A4F1C, v20, 0);
  }
  else
  {
    uint64_t v22 = sub_100020A44(v19);
    if (v21) {
      id v24 = *(id *)(v23 + 8 * v22 + 32);
    }
    else {
      id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    sub_100046228(v24);
    id v25 = sub_1000493B4();
    id v26 = [objc_allocWithZone((Class)AMSDeviceAccountPrivacyAcknowledgementTask) initWithAccount:v6 bag:v25];

    id v27 = [v26 performPrivacyAcknowledgement];
    *(void *)(v0 + 1024) = v27;

    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v10;
    *(void *)(v0 + 24) = sub_1000A49F0;
    uint64_t v28 = swift_continuation_init();
    *(void *)(v0 + 120) = _NSConcreteStackBlock;
    *(void *)(v0 + 128) = 0x40000000;
    *(void *)(v0 + 136) = sub_1000A5450;
    *(void *)(v0 + 144) = &unk_10020F208;
    *(void *)(v0 + 152) = v28;
    [v27 resultWithCompletion:v13];
    return _swift_continuation_await(v17);
  }
}

uint64_t sub_1000A4F1C()
{
  sub_100020958();
  sub_1000A3CF8(0);
  sub_100043E7C();
  return _swift_task_switch(v0, v1, v2);
}

uint64_t sub_1000A4F80()
{
  sub_100020958();
  sub_10004BEC4((uint64_t)"engagementScheduler");
  swift_task_dealloc();
  uint64_t v0 = sub_10004AB48();
  return v1(v0);
}

uint64_t sub_1000A4FEC()
{
  uint64_t v1 = v0 + 56;
  uint64_t v2 = (void *)v0[128];
  swift_willThrow();

  if (qword_10022C498 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[118];
  sub_100043478(&qword_10022E560);
  uint64_t v4 = type metadata accessor for LogMessage();
  sub_100044798(v4);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  v0[51] = type metadata accessor for DeviceAccountPrivacyAcknowledgementHandler();
  v0[48] = v3;
  swift_retain();
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    id v6 = v5;
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v9 = sub_10002106C(v0 + 48);
    v0[71] = swift_getMetatypeMetadata();
    v0[68] = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 68));
    sub_100020E44();
    v0[75] = &type metadata for String;
    v0[72] = v33;
    v0[73] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 72));
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    uint64_t v1 = v0 + 56;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v10 = sub_100046704(v0 + 48);
    v0[55] = swift_getMetatypeMetadata();
    v0[52] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 52));
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  uint64_t v11 = v0[129];
  uint64_t v12 = (void *)v0[127];
  sub_10004377C((uint64_t)(v0 + 48));
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  swift_getErrorValue();
  uint64_t v13 = (void *)v0[112];
  uint64_t v14 = v0[113];
  v0[59] = v14;
  uint64_t v15 = sub_10003BAA4(v1);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v15, v13, v14);
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)v1);
  uint64_t v16 = static os_log_type_t.error.getter();
  sub_10004841C(v16);
  swift_bridgeObjectRelease();

  swift_errorRelease();
  uint64_t v17 = sub_1000457A8();
  if (v22)
  {
    swift_bridgeObjectRelease();
    sub_10004B3E8();
    return _swift_task_switch(v18, v19, v20);
  }
  else
  {
    uint64_t v23 = sub_100020A44(v17);
    if (v22) {
      id v25 = *(id *)(v24 + 8 * v23 + 32);
    }
    else {
      id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    sub_100046228(v25);
    id v26 = sub_1000493B4();
    id v27 = [objc_allocWithZone((Class)AMSDeviceAccountPrivacyAcknowledgementTask) initWithAccount:v13 bag:v26];

    id v28 = [v27 performPrivacyAcknowledgement];
    v0[128] = v28;

    v0[2] = v0;
    v0[7] = v12;
    v0[3] = sub_1000A49F0;
    uint64_t v29 = swift_continuation_init();
    v0[15] = _NSConcreteStackBlock;
    v0[16] = 0x40000000;
    v0[17] = sub_1000A5450;
    v0[18] = &unk_10020F208;
    v0[19] = v29;
    [v28 resultWithCompletion:v11];
    sub_10004B3E8();
    return _swift_continuation_await(v30);
  }
}

uint64_t sub_1000A5450(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    id v4 = a3;
    return sub_1000EB8AC(v3, v4);
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 32);
    return sub_1000EB90C(v6, a2);
  }
}

void sub_1000A54B0(uint64_t *a1, uint64_t *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = *a1;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v65, v11, &v67);
  sub_1000434BC((uint64_t)v65);
  if (!MetatypeMetadata)
  {
    sub_1000423CC((uint64_t)&v67);
LABEL_5:
    swift_bridgeObjectRetain();
    sub_1000BA37C();
    uint64_t v12 = *(void *)(*a2 + 16);
    sub_1000BA498(v12);
    uint64_t v13 = *a2;
    *(void *)(v13 + 16) = v12 + 1;
    *(void *)(v13 + 8 * v12 + 32) = v11;
    return;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v61 = a5;
  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0) {
    goto LABEL_5;
  }
  if (qword_10022C498 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v62 = sub_100043478(&qword_10022EE90);
  uint64_t v66 = v62;
  v65[0] = a3;
  id v15 = (id)AMSLogKey();
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    sub_100049788(v65, v66);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v67 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v67);
    v22._countAndFlagsBits = 5972026;
    v22._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t MetatypeMetadata = &type metadata for String;
    *(void *)&long long v67 = v17;
    *((void *)&v67 + 1) = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v67);
    v23._countAndFlagsBits = 93;
    v23._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    sub_100049788(v65, v66);
    uint64_t v25 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v67 = v25;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v67);
    v26._countAndFlagsBits = 58;
    v26._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v65);
  LogMessage.init(stringLiteral:)();
  uint64_t v27 = sub_100043478(&qword_10022D6F0);
  uint64_t v66 = v27;
  v65[0] = v11;
  swift_bridgeObjectRetain();
  static LogMessage.sensitive(_:)();
  sub_1000423CC((uint64_t)v65);
  uint64_t v28 = static os_log_type_t.default.getter();
  sub_10004841C(v28);
  swift_bridgeObjectRelease();
  uint64_t v29 = a4[3];
  uint64_t v30 = a4[4];
  sub_100049788(a4, v29);
  uint64_t v31 = (void *)sub_1000A5E7C(v11, v29, v30);
  if (v63)
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    uint64_t v66 = v62;
    v65[0] = a3;
    id v32 = (id)AMSLogKey();
    if (v32)
    {
      uint64_t v33 = v32;
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v36 = v35;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v37._countAndFlagsBits = 0;
      v37._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      sub_100049788(v65, v66);
      uint64_t v38 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v67 = v38;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v67);
      v39._countAndFlagsBits = 5972026;
      v39._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&long long v67 = v34;
      *((void *)&v67 + 1) = v36;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v67);
      v40._countAndFlagsBits = 93;
      v40._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v42._countAndFlagsBits = 0;
      v42._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      sub_100049788(v65, v66);
      uint64_t v43 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v67 = v43;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v67);
      v44._countAndFlagsBits = 58;
      v44._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v44);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v65);
    LogMessage.init(stringLiteral:)();
    swift_getErrorValue();
    uint64_t v66 = v64;
    uint64_t v45 = sub_10003BAA4(v65);
    (*(void (**)(uint64_t *))(*(void *)(v64 - 8) + 16))(v45);
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)v65);
    uint64_t v46 = static os_log_type_t.error.getter();
    sub_10004841C(v46);
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else
  {
    uint64_t v60 = v27;
    if (v31)
    {
      id v41 = v31;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      sub_100053864(*(void *)((*v61 & 0xFFFFFFFFFFFFFF8) + 0x10));
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
      uint64_t v66 = v62;
      v65[0] = a3;
      id v47 = (id)AMSLogKey();
      if (v47)
      {
        uint64_t v48 = v47;
        uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v51 = v50;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v52._countAndFlagsBits = 0;
        v52._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v52);
        sub_100049788(v65, v66);
        uint64_t v53 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        *(void *)&long long v67 = v53;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v67);
        v54._countAndFlagsBits = 5972026;
        v54._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v54);
        uint64_t MetatypeMetadata = &type metadata for String;
        *(void *)&long long v67 = v49;
        *((void *)&v67 + 1) = v51;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v67);
        v55._countAndFlagsBits = 93;
        v55._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v55);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v56._countAndFlagsBits = 0;
        v56._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v56);
        sub_100049788(v65, v66);
        uint64_t v57 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        *(void *)&long long v67 = v57;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v67);
        v58._countAndFlagsBits = 58;
        v58._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v58);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v65);
      LogMessage.init(stringLiteral:)();
      uint64_t v66 = v60;
      v65[0] = v11;
      swift_bridgeObjectRetain();
      static LogMessage.sensitive(_:)();
      sub_1000423CC((uint64_t)v65);
      uint64_t v59 = static os_log_type_t.default.getter();
      sub_10004841C(v59);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1000A5E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v9, a1, &v10);
  sub_1000434BC((uint64_t)v9);
  if (!v11)
  {
    sub_1000423CC((uint64_t)&v10);
    goto LABEL_5;
  }
  sub_100043478(&qword_10022D7B0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    sub_1000A63E4();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    return v3;
  }
  uint64_t v3 = sub_1000A61F0(0x746E756F636361, a2, a3);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1000A5FB0()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DeviceAccountPrivacyAcknowledgementHandler()
{
  return self;
}

void *sub_1000A600C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000A603C()
{
  return swift_bridgeObjectRelease();
}

void *sub_1000A6044(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1000A6080(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void *sub_1000A608C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000A60C0(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000A6110(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_1000A6164(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1000A617C(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *uint64_t result = v2;
  return result;
}

void type metadata accessor for DeviceAccountPrivacyAcknowledgementHandler.State()
{
}

uint64_t sub_1000A61A8()
{
  sub_100043478(&qword_10022EE88);
  uint64_t v1 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v1 + 112) = 0;
  *(void *)(v0 + 16) = v1;
  return v0;
}

uint64_t sub_1000A61F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10004D120(1684632420, 0xE400000000000000, a1, &v17);
  if (!v18)
  {
    sub_1000423CC((uint64_t)&v17);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    sub_1000A63E4();
    swift_allocError();
    *long long v10 = 1;
    swift_willThrow();
    return v3;
  }
  sub_10004D120(0x44495344746C61, 0xE700000000000000, a1, &v17);
  if (v18)
  {
    int v7 = swift_dynamicCast();
    if (v7) {
      uint64_t v8 = v15;
    }
    else {
      uint64_t v8 = 0;
    }
    if (v7) {
      uint64_t v9 = v16;
    }
    else {
      uint64_t v9 = 0;
    }
  }
  else
  {
    sub_1000423CC((uint64_t)&v17);
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  sub_10004D120(0x656D616E72657375, 0xE800000000000000, a1, &v17);
  if (v18)
  {
    int v11 = swift_dynamicCast();
    if (v11) {
      uint64_t v12 = v15;
    }
    else {
      uint64_t v12 = 0;
    }
    if (v11) {
      uint64_t v13 = v16;
    }
    else {
      uint64_t v13 = 0;
    }
  }
  else
  {
    sub_1000423CC((uint64_t)&v17);
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(v15, v8, v9, v12, v13, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_1000A63E4()
{
  unint64_t result = qword_10022EE98;
  if (!qword_10022EE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022EE98);
  }
  return result;
}

unsigned char *sub_1000A6430(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A64FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for AccountDecodingError()
{
}

unint64_t sub_1000A6534()
{
  unint64_t result = qword_10022EEA0;
  if (!qword_10022EEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022EEA0);
  }
  return result;
}

uint64_t sub_1000A6584(uint64_t a1)
{
  sub_100043478(&qword_10022E6A0);
  uint64_t v3 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v29 = a1 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  uint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v30 = (unint64_t)(63 - v4) >> 6;
  uint64_t v31 = a1;
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  if (!v6) {
    goto LABEL_7;
  }
LABEL_5:
  sub_10004AB58();
LABEL_6:
  uint64_t v9 = *(void *)(v31 + 56);
  LOBYTE(v39) = *(unsigned char *)(*(void *)(v31 + 48) + v8);
  sub_10005416C(v9 + 40 * v8, (uint64_t)&v39 + 8);
  uint64_t v10 = a1;
  while (1)
  {
    sub_10004382C((uint64_t)&v39, (uint64_t)v42, &qword_10022EEB8);
    if (!v44) {
      return sub_100048CB4();
    }
    uint64_t v16 = v42[0];
    sub_100028270(&v43, (uint64_t)v41);
    unint64_t v17 = 0xE300000000000000;
    unint64_t v18 = 7368801;
    switch(v16)
    {
      case 0:
        break;
      case 1:
        unint64_t v17 = 0xE700000000000000;
        unint64_t v18 = 0x79726574746162;
        break;
      case 2:
        sub_10004BEE4();
        break;
      case 3:
        unint64_t v17 = 0xE900000000000073;
        unint64_t v18 = 0x73616C4361746164;
        break;
      case 4:
        unint64_t v17 = 0xE400000000000000;
        unint64_t v18 = 1702125924;
        break;
      case 5:
        unint64_t v17 = 0xEE00657669747061;
        unint64_t v18 = 0x6441734965746164;
        break;
      case 6:
        unint64_t v17 = 0xE500000000000000;
        unint64_t v18 = 0x79616C6564;
        break;
      case 7:
        unint64_t v17 = 0xE600000000000000;
        unint64_t v18 = 0x73746E657665;
        break;
      case 8:
        unint64_t v17 = 0xEA00000000007265;
        unint64_t v18 = 0x696669746E656469;
        break;
      case 9:
        unint64_t v17 = 0xE500000000000000;
        unint64_t v18 = 0x6563617267;
        break;
      case 10:
        unint64_t v17 = 0xE400000000000000;
        unint64_t v18 = 1701869940;
        break;
      case 11:
        unint64_t v17 = 0x80000001001CA5C0;
        unint64_t v18 = 0xD000000000000010;
        break;
      case 12:
        unint64_t v18 = 0x746972777265766FLL;
        unint64_t v17 = 0xE900000000000065;
        break;
      default:
        JUMPOUT(0);
    }
    sub_10005416C((uint64_t)v41, (uint64_t)v38);
    *(void *)&long long v39 = v18;
    *((void *)&v39 + 1) = v17;
    sub_100028270(v38, (uint64_t)v40);
    unint64_t v36 = v18;
    unint64_t v37 = v17;
    sub_10005416C((uint64_t)v40, (uint64_t)v38);
    unint64_t v33 = v18;
    unint64_t v34 = v17;
    a1 = (uint64_t)v35;
    sub_10005416C((uint64_t)v40, (uint64_t)v35);
    sub_100028270(v35, (uint64_t)v32);
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_100046DC0();
    sub_100051558();
    if (v12)
    {
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      JUMPOUT(0x1000A6A68);
    }
    uint64_t v22 = v20;
    char v23 = v21;
    sub_100043478(&qword_10022EEC0);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, (Swift::Int)v35))
    {
      sub_100046DC0();
      sub_100046734();
      if (!v25) {
        goto LABEL_57;
      }
      uint64_t v22 = v24;
    }
    if (v23)
    {
      a1 = *(void *)(v3 + 56) + 40 * v22;
      sub_10004377C(a1);
      sub_100028270(v32, a1);
    }
    else
    {
      sub_1000493F0();
      sub_100028270(v32, v26 + 40 * v22);
      sub_1000471D8();
      if (v12) {
        goto LABEL_54;
      }
      *(void *)(v3 + 16) = v27;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002CC0C((uint64_t)&v39, &qword_10022EEC8);
    sub_10004377C((uint64_t)v41);
    swift_bridgeObjectRelease();
    sub_10004377C((uint64_t)v38);
    uint64_t v7 = v10;
    if (v1) {
      goto LABEL_5;
    }
LABEL_7:
    a1 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_55;
    }
    uint64_t v10 = v7;
    if (a1 < v30)
    {
      if (*(void *)(v29 + 8 * a1)) {
        goto LABEL_10;
      }
      uint64_t v10 = v7 + 1;
      sub_100046250();
      if (v11 != v12)
      {
        sub_10004B404();
        if (v14) {
          goto LABEL_14;
        }
        uint64_t v10 = v13;
        if (v7 + 3 < v30)
        {
          if (*(void *)(v29 + 8 * (v7 + 3)))
          {
            a1 = v7 + 3;
            goto LABEL_10;
          }
          uint64_t v10 = v7 + 3;
          sub_100046250();
          if (v11 != v12)
          {
            sub_10004B404();
            if (v15)
            {
LABEL_14:
              a1 = v13;
LABEL_10:
              sub_10002109C();
              goto LABEL_6;
            }
            while (1)
            {
              a1 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_56;
              }
              if (a1 >= v30) {
                break;
              }
              ++v13;
              if (*(void *)(v29 + 8 * a1)) {
                goto LABEL_10;
              }
            }
            uint64_t v10 = v30 - 1;
          }
        }
      }
    }
    uint64_t v1 = 0;
    memset(v40, 0, 32);
    long long v39 = 0u;
  }
}

#error "1000A6AFC: call analysis failed (funcsize=178)"

void sub_1000A6D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, long long a19, uint64_t a20,uint64_t a21,uint64_t a22,unint64_t a23,long long a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28,long long a29,uint64_t a30,uint64_t a31,long long a32,long long a33,uint64_t a34,uint64_t a35,uint64_t a36,long long a37,uint64_t a38,uint64_t a39,unsigned __int8 a40,long long a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  sub_100045E50();
  a56 = v58;
  a57 = v59;
  uint64_t v61 = v60;
  uint64_t v62 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v84 = v61 + 64;
  uint64_t v63 = -1 << *(unsigned char *)(v61 + 32);
  if (-v63 < 64) {
    uint64_t v64 = ~(-1 << -(char)v63);
  }
  else {
    uint64_t v64 = -1;
  }
  uint64_t v65 = v64 & *(void *)(v61 + 64);
  int64_t v85 = (unint64_t)(63 - v63) >> 6;
  uint64_t v86 = v61;
  swift_bridgeObjectRetain();
  uint64_t v66 = 0;
  if (!v65) {
    goto LABEL_7;
  }
LABEL_5:
  sub_10004AB58();
LABEL_6:
  uint64_t v68 = *(void *)(v86 + 56);
  LOBYTE(a32) = *(unsigned char *)(*(void *)(v86 + 48) + v67);
  sub_100043520(v68 + 32 * v67, (uint64_t)&a32 + 8);
  uint64_t v69 = v61;
  while (1)
  {
    sub_10004382C((uint64_t)&a32, (uint64_t)&a40, &qword_10022EED0);
    if (!a43) {
      break;
    }
    uint64_t v71 = a40;
    sub_100043510(&a41, &a37);
    unint64_t v72 = 0xE900000000000073;
    uint64_t v73 = 0x79654B6863746162;
    switch(v71)
    {
      case 0:
        break;
      case 1:
        unint64_t v72 = 0xE800000000000000;
        uint64_t v73 = 0x79654B6568636163;
        break;
      case 2:
        sub_10004BEE4();
        break;
      case 3:
        unint64_t v72 = 0xE700000000000000;
        uint64_t v73 = 0x73657269707865;
        break;
      case 4:
        unint64_t v72 = 0xE800000000000000;
        uint64_t v73 = 0x617461646174656DLL;
        break;
      case 5:
        unint64_t v72 = 0xE400000000000000;
        uint64_t v73 = 1752457584;
        break;
      case 6:
        unint64_t v72 = 0xE500000000000000;
        uint64_t v73 = 0x6574617473;
        break;
      case 7:
        unint64_t v72 = 0xEE00726569666974;
        uint64_t v73 = 0x6E6564496B736174;
        break;
      case 8:
        unint64_t v72 = 0xE700000000000000;
        uint64_t v73 = 0x6E6F6973726576;
        break;
      default:
        JUMPOUT(0);
    }
    sub_100043520((uint64_t)&a37, (uint64_t)&a29);
    *(void *)&a32 = v73;
    *((void *)&a32 + 1) = v72;
    sub_100043510(&a29, &a33);
    a27 = v73;
    a28 = v72;
    sub_100043520((uint64_t)&a33, (uint64_t)&a29);
    a22 = v73;
    a23 = v72;
    uint64_t v61 = (uint64_t)&a24;
    sub_100043520((uint64_t)&a33, (uint64_t)&a24);
    sub_100043510(&a24, &a19);
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_100046DC0();
    sub_100051558();
    if (v77)
    {
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      JUMPOUT(0x1000A71E4);
    }
    uint64_t v78 = v75;
    char v79 = v76;
    sub_100043478(&qword_10022E5B0);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, (Swift::Int)&a24))
    {
      sub_100046DC0();
      sub_100046734();
      if (!v81) {
        goto LABEL_51;
      }
      uint64_t v78 = v80;
    }
    if (v79)
    {
      uint64_t v61 = *(void *)(v62 + 56) + 32 * v78;
      sub_10004377C(v61);
      sub_100043510(&a19, (_OWORD *)v61);
    }
    else
    {
      sub_1000493F0();
      sub_100043510(&a19, (_OWORD *)(v82 + 32 * v78));
      sub_1000471D8();
      if (v77) {
        goto LABEL_48;
      }
      *(void *)(v62 + 16) = v83;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002CC0C((uint64_t)&a32, &qword_10022D848);
    sub_10004377C((uint64_t)&a37);
    swift_bridgeObjectRelease();
    sub_10004377C((uint64_t)&a29);
    uint64_t v66 = v69;
    if (v57) {
      goto LABEL_5;
    }
LABEL_7:
    uint64_t v61 = v66 + 1;
    if (__OFADD__(v66, 1)) {
      goto LABEL_49;
    }
    uint64_t v69 = v66;
    if (v61 < v85)
    {
      if (*(void *)(v84 + 8 * v61)) {
        goto LABEL_10;
      }
      uint64_t v70 = v66 + 2;
      uint64_t v69 = v66 + 1;
      if (v66 + 2 < v85)
      {
        if (*(void *)(v84 + 8 * v70)) {
          goto LABEL_13;
        }
        uint64_t v69 = v66 + 2;
        if (v66 + 3 < v85)
        {
          if (*(void *)(v84 + 8 * (v66 + 3)))
          {
            uint64_t v61 = v66 + 3;
            goto LABEL_10;
          }
          uint64_t v70 = v66 + 4;
          uint64_t v69 = v66 + 3;
          if (v66 + 4 < v85)
          {
            if (*(void *)(v84 + 8 * v70))
            {
LABEL_13:
              uint64_t v61 = v70;
LABEL_10:
              sub_10002109C();
              goto LABEL_6;
            }
            while (1)
            {
              uint64_t v61 = v70 + 1;
              if (__OFADD__(v70, 1)) {
                goto LABEL_50;
              }
              if (v61 >= v85) {
                break;
              }
              ++v70;
              if (*(void *)(v84 + 8 * v61)) {
                goto LABEL_10;
              }
            }
            uint64_t v69 = v85 - 1;
          }
        }
      }
    }
    uint64_t v57 = 0;
    a34 = 0;
    a32 = 0u;
    a33 = 0u;
  }
  sub_100048CB4();
  sub_1000457BC();
}

#error "1000A726C: call analysis failed (funcsize=178)"

uint64_t sub_1000A74E8(uint64_t a1)
{
  sub_10008F818();
  unsigned int v2 = (void *)Dictionary.init(dictionaryLiteral:)();
  uint64_t v36 = a1 + 64;
  uint64_t v37 = a1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v35 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  int64_t v38 = 0;
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v6 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v7 = v6 | (v38 << 6);
  while (1)
  {
    char v12 = *(void **)(*(void *)(v37 + 48) + 8 * v7);
    uint64_t v13 = *(void **)(*(void *)(v37 + 56) + 8 * v7);
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;
    id v17 = v12;
    id v18 = v13;
    swift_bridgeObjectRetain();
    id v19 = v18;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v21 = sub_100042ADC(v14, v16);
    uint64_t v23 = v2[2];
    BOOL v24 = (v22 & 1) == 0;
    Swift::Int v25 = v23 + v24;
    if (__OFADD__(v23, v24))
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    unint64_t v26 = v21;
    char v27 = v22;
    sub_100043478((uint64_t *)&unk_10022E6B0);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v25))
    {
      sub_100042ADC(v14, v16);
      sub_100046734();
      if (!v29) {
        goto LABEL_36;
      }
      unint64_t v26 = v28;
    }
    if (v27)
    {
      uint64_t v30 = v2[7];

      *(void *)(v30 + 8 * v26) = v19;
    }
    else
    {
      v2[(v26 >> 6) + 8] |= 1 << v26;
      uint64_t v31 = (uint64_t *)(v2[6] + 16 * v26);
      *uint64_t v31 = v14;
      v31[1] = v16;
      *(void *)(v2[7] + 8 * v26) = v19;
      sub_1000471D8();
      if (v33) {
        goto LABEL_33;
      }
      v2[2] = v32;
      swift_bridgeObjectRetain();
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();

    if (v5) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v8 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      goto LABEL_34;
    }
    if (v8 >= v35) {
      goto LABEL_31;
    }
    unint64_t v9 = *(void *)(v36 + 8 * v8);
    int64_t v10 = v38 + 1;
    if (!v9)
    {
      int64_t v10 = v38 + 2;
      if (v38 + 2 >= v35) {
        goto LABEL_31;
      }
      unint64_t v9 = *(void *)(v36 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v38 + 3;
        if (v38 + 3 >= v35) {
          goto LABEL_31;
        }
        unint64_t v9 = *(void *)(v36 + 8 * v10);
        if (!v9) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v5 = (v9 - 1) & v9;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    int64_t v38 = v10;
  }
  int64_t v11 = v38 + 4;
  if (v38 + 4 >= v35)
  {
LABEL_31:
    sub_100011E28();
    return (uint64_t)v2;
  }
  unint64_t v9 = *(void *)(v36 + 8 * v11);
  if (v9)
  {
    int64_t v10 = v38 + 4;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v35) {
      goto LABEL_31;
    }
    unint64_t v9 = *(void *)(v36 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_19;
    }
  }
LABEL_35:
  __break(1u);
LABEL_36:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1000A7804(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v13 = sub_100043478(&qword_10022D340);
  uint64_t result = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    if (qword_10022C5C8 != -1) {
      swift_once();
    }
    sub_10002A570(a5, a6);
    sub_100049788(a7, a7[3]);
    swift_bridgeObjectRetain();
    sub_1001ADE08();
    swift_bridgeObjectRelease();
    uint64_t v17 = type metadata accessor for TaskPriority();
    sub_100021AC0((uint64_t)v16, 1, 1, v17);
    sub_10005416C((uint64_t)a7, (uint64_t)v20);
    id v18 = (void *)swift_allocObject();
    v18[2] = 0;
    v18[3] = 0;
    sub_100028270(v20, (uint64_t)(v18 + 4));
    v18[9] = a8;
    v18[10] = a5;
    v18[11] = a6;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_10016D650((uint64_t)v16, (uint64_t)&unk_10022EF80, (uint64_t)v18);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000A799C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  return _swift_task_switch(sub_1000A79C0, 0, 0);
}

uint64_t sub_1000A79C0()
{
  uint64_t v1 = *(void *)(v0 + 112);
  unsigned int v2 = (long long *)sub_100049788(*(void **)(v0 + 104), *(void *)(*(void *)(v0 + 104) + 24));
  *(void *)(v0 + 88) = type metadata accessor for DynamicActivityTaskScheduler();
  *(void *)(v0 + 96) = &off_10020F2B0;
  *(void *)(v0 + 64) = v1;
  long long v4 = *v2;
  long long v3 = v2[1];
  *(_OWORD *)(v0 + 41) = *(long long *)((char *)v2 + 25);
  *(_OWORD *)(v0 + 16) = v4;
  *(_OWORD *)(v0 + 32) = v3;
  swift_retain();
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v5;
  *unint64_t v5 = v0;
  v5[1] = sub_1000A7AA0;
  return sub_100120EA8();
}

uint64_t sub_1000A7AA0()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v2 = v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    long long v3 = sub_1000A7C2C;
  }
  else
  {
    sub_10004377C(v2 + 64);
    long long v3 = sub_1000A7B98;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000A7B98()
{
  sub_100020958();
  if (qword_10022C5C8 != -1) {
    swift_once();
  }
  sub_10000A734(v0[15], v0[16]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1000A7C2C()
{
  sub_100020958();
  sub_10004377C((uint64_t)(v0 + 8));
  if (qword_10022C5C8 != -1) {
    swift_once();
  }
  sub_10000A734(v0[15], v0[16]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t type metadata accessor for DynamicActivityTaskScheduler()
{
  return self;
}

uint64_t sub_1000A7CEC()
{
  swift_unknownObjectRelease();
  sub_10004377C(v0 + 32);
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1000A7D3C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[9];
  uint64_t v8 = v1[10];
  uint64_t v9 = v1[11];
  int64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *int64_t v10 = v2;
  v10[1] = sub_1000A7E14;
  return sub_1000A799C(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1000A7E14()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000A7EE0()
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100018FA0();
  uint64_t v5 = sub_100043478(&qword_10022FB40);
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_1000440DC();
  sub_100044830();
  uint64_t v8 = v7;
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v12 = __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v49 - v13;
  sub_1000A8CD4(v2);
  if (sub_10004FD40(v2, 1, v0) == 1) {
    return sub_10002CCBC(v2, &qword_10022FB40);
  }
  uint64_t v16 = *(void *)(v8 + 32);
  uint64_t v53 = v8 + 32;
  Swift::String v54 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = v16;
  sub_100040C6C();
  v17();
  sub_100043478(&qword_10022E560);
  uint64_t v18 = type metadata accessor for LogMessage();
  sub_100044798(v18);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v61 = (void *)sub_100043478(&qword_10022F038);
  Swift::String v55 = v1;
  aBlock = v1;
  id v19 = (id)AMSLogKey();
  Swift::String v56 = v14;
  uint64_t v57 = v8;
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_1000480D0();
    sub_100020F04(&aBlock);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100045E6C(MetatypeMetadata);
    sub_10002CCBC((uint64_t)v64, &qword_10022F490);
    sub_100020E44();
    v64[3] = &type metadata for String;
    v64[0] = v21;
    v64[1] = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)v64, &qword_10022F490);
    v25._countAndFlagsBits = 93;
    v25._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    sub_100043BC8();
    uint64_t v14 = v56;
    uint64_t v8 = v57;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_1000480D0();
    sub_100020F04(&aBlock);
    uint64_t v26 = swift_getMetatypeMetadata();
    sub_100045E6C(v26);
    sub_10002CCBC((uint64_t)v64, &qword_10022F490);
    v27._countAndFlagsBits = 58;
    v27._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    sub_100043BC8();
  }
  sub_10004377C((uint64_t)&aBlock);
  LogMessage.init(stringLiteral:)();
  uint64_t v61 = (void *)v0;
  unint64_t v28 = sub_10003BAA4((uint64_t *)&aBlock);
  char v29 = *(void (**)(uint64_t *, char *, uint64_t))(v8 + 16);
  uint64_t v51 = v0;
  v29(v28, v14, v0);
  static LogMessage.safe(_:)();
  sub_10002CCBC((uint64_t)&aBlock, &qword_10022F490);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v30 = static os_log_type_t.info.getter();
  sub_10004841C(v30);
  swift_bridgeObjectRelease();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = _swiftEmptyDictionarySingleton;
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v32 = sub_100045068();
  if (qword_10022C418 != -1) {
    swift_once();
  }
  id v33 = [v32 stringForKey:qword_10022EF88];

  id v50 = [v33 valuePromise];
  id v34 = sub_100045068();
  if (qword_10022C420 != -1) {
    swift_once();
  }
  id v35 = [v34 arrayForKey:qword_10022EF90];

  id v36 = [v35 valuePromise];
  uint64_t v37 = v56;
  uint64_t v38 = v51;
  v29((uint64_t *)v54, v56, v51);
  uint64_t v39 = v57;
  unint64_t v40 = (v10 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v31;
  *(void *)(v41 + 24) = v36;
  sub_100040C6C();
  v42();
  long long v43 = v55;
  *(void *)(v41 + v40) = v55;
  uint64_t v62 = sub_1000AD854;
  uint64_t v63 = v41;
  aBlock = _NSConcreteStackBlock;
  uint64_t v59 = 1107296256;
  uint64_t v60 = (void (*)(uint64_t, void *))sub_1000FE3F8;
  uint64_t v61 = &unk_10020F430;
  uint64_t v44 = _Block_copy(&aBlock);
  swift_retain();
  id v45 = v36;
  swift_release();
  id v46 = v50;
  [v50 addSuccessBlock:v44];
  _Block_release(v44);
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v43;
  uint64_t v62 = sub_1000AD8D4;
  uint64_t v63 = v47;
  aBlock = _NSConcreteStackBlock;
  uint64_t v59 = 1107296256;
  uint64_t v60 = sub_100181204;
  uint64_t v61 = &unk_10020F480;
  uint64_t v48 = _Block_copy(&aBlock);
  swift_release();
  [v46 addErrorBlock:v48];
  _Block_release(v48);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v38);
  return swift_release();
}

uint64_t sub_1000A85A8()
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100018FA0();
  uint64_t v5 = sub_100043478(&qword_10022FB40);
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_1000440DC();
  sub_100044830();
  uint64_t v8 = v7;
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v12 = __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v38 - v13;
  sub_1000A8CD4(v2);
  if (sub_10004FD40(v2, 1, v0) == 1) {
    return sub_10002CCBC(v2, &qword_10022FB40);
  }
  uint64_t v16 = *(void *)(v8 + 32);
  uint64_t v41 = v8 + 32;
  Swift::String v42 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = v16;
  sub_100040C6C();
  v17();
  sub_100043478(&qword_10022E560);
  uint64_t v18 = type metadata accessor for LogMessage();
  sub_100044798(v18);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v47 = (void *)sub_100043478(&qword_10022F038);
  long long v43 = v1;
  aBlock = v1;
  id v19 = (id)AMSLogKey();
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v39 = v8;
    uint64_t v22 = v21;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_1000480D0();
    sub_100020F04(&aBlock);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_1000457EC(MetatypeMetadata);
    sub_10002CCBC((uint64_t)v50, &qword_10022F490);
    sub_100020E44();
    v50[3] = &type metadata for String;
    v50[0] = v38;
    v50[1] = v22;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)v50, &qword_10022F490);
    v24._countAndFlagsBits = 93;
    v24._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    sub_100043BC8();
    uint64_t v8 = v39;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_1000480D0();
    sub_100020F04(&aBlock);
    uint64_t v25 = swift_getMetatypeMetadata();
    sub_1000457EC(v25);
    sub_10002CCBC((uint64_t)v50, &qword_10022F490);
    v26._countAndFlagsBits = 58;
    v26._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    sub_100043BC8();
  }
  sub_10004377C((uint64_t)&aBlock);
  LogMessage.init(stringLiteral:)();
  uint64_t v47 = (void *)v0;
  sub_10003BAA4((uint64_t *)&aBlock);
  Swift::String v27 = *(void (**)(void))(v8 + 16);
  sub_100049D5C();
  v27();
  static LogMessage.safe(_:)();
  sub_10002CCBC((uint64_t)&aBlock, &qword_10022F490);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v28 = static os_log_type_t.info.getter();
  sub_10004841C(v28);
  swift_bridgeObjectRelease();
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v29 = sub_100045068();
  uint64_t v30 = v43;
  if (qword_10022C420 != -1) {
    swift_once();
  }
  id v31 = [v29 arrayForKey:qword_10022EF90];

  id v32 = [v31 valuePromise];
  sub_100049D5C();
  v27();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v30;
  sub_100040C6C();
  v34();
  uint64_t v48 = sub_1000AD5C4;
  uint64_t v49 = v33;
  aBlock = _NSConcreteStackBlock;
  uint64_t v45 = 1107296256;
  id v46 = (void (*)(uint64_t, void *))sub_1000FE3F8;
  uint64_t v47 = &unk_10020F318;
  id v35 = _Block_copy(&aBlock);
  swift_release();
  [v32 addSuccessBlock:v35];
  _Block_release(v35);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v30;
  uint64_t v48 = sub_1000AD61C;
  uint64_t v49 = v36;
  aBlock = _NSConcreteStackBlock;
  uint64_t v45 = 1107296256;
  id v46 = sub_100181204;
  uint64_t v47 = &unk_10020F368;
  uint64_t v37 = _Block_copy(&aBlock);
  swift_release();
  [v32 addErrorBlock:v37];
  _Block_release(v37);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v0);
}

NSString sub_1000A8B68()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10022EF88 = (uint64_t)result;
  return result;
}

NSString sub_1000A8BA4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10022EF90 = (uint64_t)result;
  return result;
}

void sub_1000A8BE4()
{
  id v0 = [self defaultSessionConfiguration];
  id v1 = [self sessionWithConfiguration:v0];

  qword_10022EF98 = (uint64_t)v1;
}

CFPropertyListRef sub_1000A8C58()
{
  type metadata accessor for Defaults();
  CFPropertyListRef result = sub_1000A38A0(9);
  if (result)
  {
    if (swift_dynamicCast()) {
      return (CFPropertyListRef)v1;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000A8CD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v32 - v12;
  id v14 = objc_msgSend(self, "ams_dynamicUIDirectory");
  if (v14)
  {
    uint64_t v15 = v14;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v16(v6, v11, v7);
    sub_100021AC0((uint64_t)v6, 0, 1, v7);
    if (sub_10004FD40((uint64_t)v6, 1, v7) != 1)
    {
      v16(v13, v6, v7);
      id v17 = [self defaultManager];
      sub_10003D34C();

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
  }
  else
  {
    sub_100021AC0((uint64_t)v6, 1, 1, v7);
  }
  sub_10002CCBC((uint64_t)v6, &qword_10022FB40);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v35 = sub_100043478(&qword_10022F038);
  v34[0] = v1;
  id v19 = (id)AMSLogKey();
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    sub_100049788(v34, v35);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v32[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)v32, &qword_10022F490);
    v26._countAndFlagsBits = 5972026;
    v26._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    uint64_t MetatypeMetadata = &type metadata for String;
    v32[0] = v21;
    v32[1] = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)v32, &qword_10022F490);
    v27._countAndFlagsBits = 93;
    v27._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    sub_100049788(v34, v35);
    uint64_t v29 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v32[0] = v29;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)v32, &qword_10022F490);
    v30._countAndFlagsBits = 58;
    v30._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v34);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v31 = static os_log_type_t.fault.getter();
  sub_10004841C(v31);
  swift_bridgeObjectRelease();
  return sub_100021AC0(a1, 1, 1, v7);
}

void sub_1000A91DC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v22 = a3;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  if (qword_10022C418 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)qword_10022EF88;
  swift_beginAccess();
  id v13 = v12;
  id v14 = a1;
  sub_10008B9FC();
  swift_endAccess();

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  *(void *)(v16 + ((v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = a5;
  Swift::String v27 = sub_1000AD98C;
  uint64_t v28 = v16;
  aBlock = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  uint64_t v25 = (void (*)(uint64_t, void *))sub_1000FE3F8;
  Swift::String v26 = &unk_10020F4D0;
  id v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v18 = v22;
  [v22 addSuccessBlock:v17];
  _Block_release(v17);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a5;
  Swift::String v27 = sub_1000ADA0C;
  uint64_t v28 = v19;
  aBlock = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  uint64_t v25 = sub_100181204;
  Swift::String v26 = &unk_10020F520;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_release();
  [v18 addErrorBlock:v20];
  _Block_release(v20);
}

uint64_t sub_1000A94C8(void *a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10022C420 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_10022EF90;
  swift_beginAccess();
  id v7 = v6;
  id v8 = a1;
  sub_10008B9FC();
  swift_endAccess();

  URL.appendingPathComponent(_:isDirectory:)();
  swift_beginAccess();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_1000A9680(v9, (uint64_t)v5);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1000A9680(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = self;
  type metadata accessor for AMSBagKey(0);
  sub_1000ADA40();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v47[0] = 0;
  id v7 = [v5 archivedDataWithRootObject:isa requiringSecureCoding:1 error:v47];

  id v8 = v47[0];
  if (v7)
  {
    uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;

    Data.write(to:options:)();
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    uint64_t v48 = sub_100043478(&qword_10022F038);
    v47[0] = v2;
    id v28 = (id)AMSLogKey();
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v32 = v31;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v33._countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      sub_100049788(v47, v48);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v44 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v44, &qword_10022F490);
      v35._countAndFlagsBits = 5972026;
      v35._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v44 = v30;
      uint64_t v45 = v32;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v44, &qword_10022F490);
      v36._countAndFlagsBits = 93;
      v36._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v37._countAndFlagsBits = 0;
      v37._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      sub_100049788(v47, v48);
      uint64_t v38 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v44 = v38;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v44, &qword_10022F490);
      v39._countAndFlagsBits = 58;
      v39._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v47);
    LogMessage.init(stringLiteral:)();
    uint64_t v40 = type metadata accessor for URL();
    uint64_t v48 = v40;
    uint64_t v41 = sub_10003BAA4((uint64_t *)v47);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v41, a2, v40);
    static LogMessage.safe(_:)();
    sub_10002CCBC((uint64_t)v47, &qword_10022F490);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v42 = static os_log_type_t.info.getter();
    sub_10004841C(v42);
    swift_bridgeObjectRelease();
    return sub_10004B278(v9, v11);
  }
  else
  {
    uint64_t v12 = v8;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    uint64_t v48 = sub_100043478(&qword_10022F038);
    v47[0] = v2;
    id v13 = (id)AMSLogKey();
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      sub_100049788(v47, v48);
      uint64_t v19 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v44 = v19;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v44, &qword_10022F490);
      v20._countAndFlagsBits = 5972026;
      v20._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v44 = v15;
      uint64_t v45 = v17;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v44, &qword_10022F490);
      v21._countAndFlagsBits = 93;
      v21._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v22._countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      sub_100049788(v47, v48);
      uint64_t v23 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v44 = v23;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v44, &qword_10022F490);
      v24._countAndFlagsBits = 58;
      v24._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v47);
    LogMessage.init(stringLiteral:)();
    swift_getErrorValue();
    uint64_t v48 = v43;
    uint64_t v25 = sub_10003BAA4((uint64_t *)v47);
    (*(void (**)(uint64_t *))(*(void *)(v43 - 8) + 16))(v25);
    static LogMessage.safe(_:)();
    sub_10002CCBC((uint64_t)v47, &qword_10022F490);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v26 = static os_log_type_t.error.getter();
    sub_10004841C(v26);
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
}

uint64_t sub_1000A9DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v24 = sub_100043478(&qword_10022F038);
  v23[0] = a2;
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    sub_100049788(v23, v24);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v21[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)v21, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v21[0] = v8;
    v21[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)v21, &qword_10022F490);
    v13._countAndFlagsBits = 93;
    v13._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    sub_100049788(v23, v24);
    uint64_t v15 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v21[0] = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)v21, &qword_10022F490);
    v16._countAndFlagsBits = 58;
    v16._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v23);
  LogMessage.init(stringLiteral:)();
  swift_getErrorValue();
  uint64_t v24 = v20;
  uint64_t v17 = sub_10003BAA4(v23);
  (*(void (**)(uint64_t *))(*(void *)(v20 - 8) + 16))(v17);
  static LogMessage.safe(_:)();
  sub_10002CCBC((uint64_t)v23, &qword_10022F490);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v18 = static os_log_type_t.error.getter();
  sub_10004841C(v18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000AA134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v106 = a3;
  uint64_t v119 = a2;
  uint64_t v105 = type metadata accessor for JetpackOutputWriter();
  uint64_t v3 = __chkstk_darwin(v105);
  uint64_t v109 = (_OWORD *)((char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v100 = (_OWORD *)((char *)&v94 - v5);
  uint64_t v6 = sub_100043478(&qword_10022FB40);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v115 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v101 = (char *)&v94 - v9;
  uint64_t v110 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v110 - 8);
  uint64_t v11 = __chkstk_darwin(v110);
  uint64_t v108 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  id v107 = (char *)&v94 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v104 = (char *)&v94 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  Swift::String v99 = (char *)&v94 - v18;
  __chkstk_darwin(v17);
  uint64_t v98 = (char *)&v94 - v19;
  uint64_t v20 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v20 - 8);
  uint64_t v114 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  Swift::String v22 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSArray.makeIterator()();
  NSFastEnumerationIterator.next()();
  if (v127)
  {
    uint64_t v102 = 0;
    uint64_t v97 = (void (**)(char *, uint64_t, uint64_t))(v10 + 32);
    uint64_t v103 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v96 = (void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    uint64_t v118 = &type metadata for Any + 1;
    long long v117 = xmmword_1001C3130;
    unint64_t v116 = 0x80000001001CCD90;
    long long v112 = xmmword_1001C3120;
    unint64_t v111 = 0x80000001001CCDB0;
    while (1)
    {
      sub_100043510(&v126, &v125);
      sub_100043520((uint64_t)&v125, (uint64_t)&v123);
      uint64_t v23 = sub_100043478(&qword_10022D7B0);
      if (swift_dynamicCast()) {
        break;
      }
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = v117;
      *((void *)&v124 + 1) = sub_100043478(&qword_10022F038);
      *(void *)&long long v123 = v119;
      id v34 = (id)AMSLogKey();
      if (v34)
      {
        Swift::String v35 = v34;
        uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v38 = v37;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v39._countAndFlagsBits = 0;
        v39._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v39);
        sub_100049788(&v123, *((uint64_t *)&v124 + 1));
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v120 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CCBC((uint64_t)&v120, &qword_10022F490);
        v41._countAndFlagsBits = 5972026;
        v41._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v41);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v120 = v36;
        uint64_t v121 = v38;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CCBC((uint64_t)&v120, &qword_10022F490);
        v42._countAndFlagsBits = 93;
        v42._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v42);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v52._countAndFlagsBits = 0;
        v52._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v52);
        sub_100049788(&v123, *((uint64_t *)&v124 + 1));
        uint64_t v53 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v120 = v53;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CCBC((uint64_t)&v120, &qword_10022F490);
        v54._countAndFlagsBits = 58;
        v54._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v54);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v123);
      LogMessage.init(stringLiteral:)();
      sub_100043520((uint64_t)&v125, (uint64_t)&v123);
      static LogMessage.safe(_:)();
      sub_10002CCBC((uint64_t)&v123, &qword_10022F490);
LABEL_21:
      if (qword_10022C460 != -1) {
        swift_once();
      }
      uint64_t v55 = static os_log_type_t.error.getter();
      sub_10004841C(v55);
      swift_bridgeObjectRelease();
LABEL_24:
      sub_10004377C((uint64_t)&v125);
LABEL_29:
      NSFastEnumerationIterator.next()();
      if (!v127) {
        return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v22, v114);
      }
    }
    uint64_t v24 = v120;
    if (!*(void *)(v120 + 16)
      || (unint64_t v25 = sub_100042ADC(25705, 0xE200000000000000), (v26 & 1) == 0)
      || (sub_100043520(*(void *)(v24 + 56) + 32 * v25, (uint64_t)&v123), (swift_dynamicCast() & 1) == 0))
    {
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = v117;
      *((void *)&v124 + 1) = sub_100043478(&qword_10022F038);
      *(void *)&long long v123 = v119;
      id v43 = (id)AMSLogKey();
      if (v43)
      {
        uint64_t v44 = v43;
        uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v47 = v46;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v48._countAndFlagsBits = 0;
        v48._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v48);
        sub_100049788(&v123, *((uint64_t *)&v124 + 1));
        uint64_t v49 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v120 = v49;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CCBC((uint64_t)&v120, &qword_10022F490);
        v50._countAndFlagsBits = 5972026;
        v50._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v50);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v120 = v45;
        uint64_t v121 = v47;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CCBC((uint64_t)&v120, &qword_10022F490);
        v51._countAndFlagsBits = 93;
        v51._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v51);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v56._countAndFlagsBits = 0;
        v56._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v56);
        sub_100049788(&v123, *((uint64_t *)&v124 + 1));
        uint64_t v57 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v120 = v57;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CCBC((uint64_t)&v120, &qword_10022F490);
        v58._countAndFlagsBits = 58;
        v58._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v58);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v123);
      LogMessage.init(stringLiteral:)();
      *((void *)&v124 + 1) = v23;
      *(void *)&long long v123 = v24;
      static LogMessage.safe(_:)();
      sub_10002CCBC((uint64_t)&v123, &qword_10022F490);
      if (qword_10022C460 != -1) {
        swift_once();
      }
      uint64_t v59 = static os_log_type_t.error.getter();
      sub_10004841C(v59);
      swift_bridgeObjectRelease();
      sub_10004377C((uint64_t)&v125);
      goto LABEL_29;
    }
    if (*(void *)(v24 + 16))
    {
      unint64_t v27 = sub_100042ADC(0x556B63617074656ALL, 0xEA00000000004C52);
      if (v28)
      {
        sub_100043520(*(void *)(v24 + 56) + 32 * v27, (uint64_t)&v123);
        if (swift_dynamicCast())
        {
          uint64_t v29 = (uint64_t)v101;
          URL.init(string:)();
          swift_bridgeObjectRelease();
          uint64_t v30 = v110;
          if (sub_10004FD40(v29, 1, v110) != 1)
          {
            Swift::String v95 = v22;
            swift_bridgeObjectRelease();
            uint64_t v84 = (uint64_t)v98;
            (*v97)(v98, v29, v30);
            int64_t v85 = v104;
            uint64_t v86 = v106;
            URL.appendingPathComponent(_:)();
            swift_bridgeObjectRelease();
            URL.pathExtension.getter();
            uint64_t v87 = (uint64_t)v99;
            URL.appendingPathExtension(_:)();
            swift_bridgeObjectRelease();
            id v88 = *v103;
            (*v103)(v85, v30);
            sub_1000AB2B8(v84, v87);
            uint64_t v89 = v105;
            uint64_t v90 = v100;
            uint64_t v91 = *v96;
            (*v96)((uint64_t)v100 + *(int *)(v105 + 20), v86, v30);
            v91((uint64_t)v90 + *(int *)(v89 + 24), v87, v30);
            v90[2] = 0u;
            v90[3] = 0u;
            v90[4] = 0u;
            *uint64_t v90 = 0u;
            v90[1] = 0u;
            *((unsigned char *)v90 + *(int *)(v89 + 28)) = 1;
            uint64_t v92 = v102;
            sub_1000CCA90();
            if (v92) {
              swift_errorRelease();
            }
            uint64_t v102 = 0;
            Swift::String v22 = v95;
            sub_1000AD650((uint64_t)v100);
            v88(v99, v30);
            v88(v98, v30);
            goto LABEL_24;
          }
          sub_10002CCBC(v29, &qword_10022FB40);
        }
      }
    }
    uint64_t v31 = (uint64_t)v115;
    if (*(void *)(v24 + 16))
    {
      unint64_t v32 = sub_100042ADC(7107189, 0xE300000000000000);
      if (v33)
      {
        sub_100043520(*(void *)(v24 + 56) + 32 * v32, (uint64_t)&v123);
      }
      else
      {
        long long v123 = 0u;
        long long v124 = 0u;
      }
      uint64_t v31 = (uint64_t)v115;
    }
    else
    {
      long long v123 = 0u;
      long long v124 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v124 + 1))
    {
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
      URL.init(string:)();
      swift_bridgeObjectRelease();
      uint64_t v60 = v110;
      if (sub_10004FD40(v31, 1, v110) != 1)
      {
        Swift::String v95 = v22;
        uint64_t v75 = (uint64_t)v107;
        (*v97)(v107, v31, v60);
        char v76 = v104;
        uint64_t v77 = v106;
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        URL.pathExtension.getter();
        uint64_t v78 = (uint64_t)v108;
        URL.appendingPathExtension(_:)();
        swift_bridgeObjectRelease();
        char v79 = *v103;
        (*v103)(v76, v60);
        sub_1000AB2B8(v75, v78);
        uint64_t v80 = v105;
        char v81 = v109;
        uint64_t v82 = *v96;
        (*v96)((uint64_t)v109 + *(int *)(v105 + 20), v77, v60);
        v82((uint64_t)v81 + *(int *)(v80 + 24), v78, v60);
        v81[2] = 0u;
        v81[3] = 0u;
        v81[4] = 0u;
        *char v81 = 0u;
        v81[1] = 0u;
        *((unsigned char *)v81 + *(int *)(v80 + 28)) = 0;
        uint64_t v83 = v102;
        sub_1000CCA90();
        if (v83) {
          swift_errorRelease();
        }
        uint64_t v102 = 0;
        Swift::String v22 = v95;
        sub_1000AD650((uint64_t)v109);
        v79(v108, v60);
        v79(v107, v60);
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
      uint64_t v61 = (long long *)v31;
      uint64_t v62 = &qword_10022FB40;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v61 = &v123;
      uint64_t v62 = &qword_10022F490;
    }
    sub_10002CCBC((uint64_t)v61, v62);
LABEL_41:
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = v112;
    *((void *)&v124 + 1) = sub_100043478(&qword_10022F038);
    *(void *)&long long v123 = v119;
    id v63 = (id)AMSLogKey();
    if (v63)
    {
      uint64_t v64 = v63;
      uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v67 = v66;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v68._countAndFlagsBits = 0;
      v68._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v68);
      sub_100049788(&v123, *((uint64_t *)&v124 + 1));
      uint64_t v69 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v120 = v69;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v120, &qword_10022F490);
      v70._countAndFlagsBits = 5972026;
      v70._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v70);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v120 = v65;
      uint64_t v121 = v67;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v120, &qword_10022F490);
      v71._countAndFlagsBits = 93;
      v71._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v71);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v72._countAndFlagsBits = 0;
      v72._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v72);
      sub_100049788(&v123, *((uint64_t *)&v124 + 1));
      uint64_t v73 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v120 = v73;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v120, &qword_10022F490);
      v74._countAndFlagsBits = 58;
      v74._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v74);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v123);
    LogMessage.init(stringLiteral:)();
    goto LABEL_21;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v22, v114);
}

uint64_t sub_1000AB2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v72 = a2;
  uint64_t v4 = (void *)type metadata accessor for URL();
  uint64_t v74 = *(v4 - 1);
  __chkstk_darwin(v4);
  uint64_t v68 = v5;
  uint64_t v73 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URLRequest();
  uint64_t v69 = *(void *)(v6 - 8);
  uint64_t v70 = v6;
  __chkstk_darwin(v6);
  char v76 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_100043478(&qword_10022E560);
  uint64_t v10 = *(void *)(type metadata accessor for LogMessage() - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v11 + 32) & ~v11;
  uint64_t v71 = *(void *)(v10 + 72);
  uint64_t v66 = v11 | 7;
  uint64_t v67 = v9;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v65 = v12;
  uint64_t v64 = (void *)sub_100043478(&qword_10022F038);
  uint64_t v80 = v64;
  uint64_t v75 = v2;
  aBlock = v2;
  id v13 = (id)AMSLogKey();
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    sub_100049788(&aBlock, (uint64_t)v80);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v83 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)&v83, &qword_10022F490);
    v20._countAndFlagsBits = 5972026;
    v20._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v83 = v15;
    uint64_t v84 = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)&v83, &qword_10022F490);
    v21._countAndFlagsBits = 93;
    v21._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    sub_100049788(&aBlock, (uint64_t)v80);
    uint64_t v23 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v83 = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)&v83, &qword_10022F490);
    v24._countAndFlagsBits = 58;
    v24._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&aBlock);
  LogMessage.init(stringLiteral:)();
  uint64_t v80 = v4;
  unint64_t v25 = sub_10003BAA4((uint64_t *)&aBlock);
  char v26 = *(void (**)(uint64_t *, uint64_t, void *))(v74 + 16);
  v26(v25, a1, v4);
  static LogMessage.safe(_:)();
  sub_10002CCBC((uint64_t)&aBlock, &qword_10022F490);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v27 = static os_log_type_t.default.getter();
  sub_10004841C(v27);
  swift_bridgeObjectRelease();
  v26((uint64_t *)v73, a1, v4);
  URLRequest.init(url:cachePolicy:timeoutInterval:)();
  id v28 = [self defaultManager];
  URL.path.getter();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v30 = [v28 fileExistsAtPath:v29];

  uint64_t v31 = (void **)sub_1000A8C58();
  if (v32)
  {
    char v33 = v32;
    if (v30)
    {
      id v63 = v31;
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_1001C3120;
      uint64_t v67 = v34;
      uint64_t v80 = v64;
      aBlock = v75;
      id v35 = (id)AMSLogKey();
      if (v35)
      {
        uint64_t v36 = v35;
        uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v38 = v37;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v39._countAndFlagsBits = 0;
        v39._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v39);
        sub_100049788(&aBlock, (uint64_t)v80);
        uint64_t v40 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v83 = v40;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CCBC((uint64_t)&v83, &qword_10022F490);
        v41._countAndFlagsBits = 5972026;
        v41._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v41);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v83 = v66;
        uint64_t v84 = v38;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CCBC((uint64_t)&v83, &qword_10022F490);
        v42._countAndFlagsBits = 93;
        v42._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v42);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v43._countAndFlagsBits = 0;
        v43._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v43);
        sub_100049788(&aBlock, (uint64_t)v80);
        uint64_t v44 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v83 = v44;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CCBC((uint64_t)&v83, &qword_10022F490);
        v45._countAndFlagsBits = 58;
        v45._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v45);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&aBlock);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v46._countAndFlagsBits = 0xD000000000000013;
      v46._object = (void *)0x80000001001CCE20;
      LogMessage.StringInterpolation.appendLiteral(_:)(v46);
      uint64_t v80 = &type metadata for String;
      uint64_t v47 = (uint64_t)v63;
      aBlock = v63;
      uint64_t v78 = (uint64_t)v33;
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&aBlock, &qword_10022F490);
      v48._countAndFlagsBits = 0;
      v48._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v48);
      LogMessage.init(stringInterpolation:)();
      uint64_t v49 = static os_log_type_t.debug.getter();
      sub_10004841C(v49);
      swift_bridgeObjectRelease();
      v50._object = (void *)0x80000001001CCE40;
      v51._countAndFlagsBits = v47;
      v51._object = v33;
      v50._countAndFlagsBits = 0xD000000000000011;
      URLRequest.addValue(_:forHTTPHeaderField:)(v51, v50);
    }
    swift_bridgeObjectRelease();
  }
  if (qword_10022C428 != -1) {
    swift_once();
  }
  Swift::String v52 = (void *)qword_10022EF98;
  uint64_t v53 = v76;
  Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
  uint64_t v55 = v73;
  v26((uint64_t *)v73, v72, v4);
  uint64_t v56 = v74;
  unint64_t v57 = (*(unsigned __int8 *)(v74 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = v75;
  *(unsigned char *)(v58 + 24) = v30;
  (*(void (**)(unint64_t, char *, void *))(v56 + 32))(v58 + v57, v55, v4);
  char v81 = sub_1000AD720;
  uint64_t v82 = v58;
  aBlock = _NSConcreteStackBlock;
  uint64_t v78 = 1107296256;
  char v79 = sub_1000AD408;
  uint64_t v80 = &unk_10020F3B8;
  uint64_t v59 = _Block_copy(&aBlock);
  swift_release();
  id v60 = [v52 downloadTaskWithRequest:isa completionHandler:v59];
  _Block_release(v59);

  [v60 resume];
  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v53, v70);
}

void sub_1000ABBF4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v175 = a6;
  uint64_t v176 = a1;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v164 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v177 = (char *)&v164 - v18;
  uint64_t v19 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v19 - 8);
  Swift::String v21 = (char *)&v164 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for URL();
  __chkstk_darwin(v22);
  unint64_t v25 = (char *)&v164 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    *((void *)&v186 + 1) = sub_100043478(&qword_10022F038);
    *(void *)&long long v185 = a4;
    swift_errorRetain();
    id v26 = (id)AMSLogKey();
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v31._countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      sub_100049788(&v185, *((uint64_t *)&v186 + 1));
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v182 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
      v33._countAndFlagsBits = 5972026;
      v33._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v182 = v28;
      uint64_t v183 = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
      v34._countAndFlagsBits = 93;
      v34._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v36._countAndFlagsBits = 0;
      v36._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      sub_100049788(&v185, *((uint64_t *)&v186 + 1));
      uint64_t v37 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v182 = v37;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
      v38._countAndFlagsBits = 58;
      v38._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v185);
    LogMessage.init(stringLiteral:)();
    swift_getErrorValue();
    uint64_t v39 = v178;
    uint64_t v40 = v179;
    *((void *)&v186 + 1) = v179;
    Swift::String v41 = sub_10003BAA4((uint64_t *)&v185);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v41, v39, v40);
    static LogMessage.safe(_:)();
    sub_10002CCBC((uint64_t)&v185, &qword_10022F490);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v42 = static os_log_type_t.error.getter();
    sub_10004841C(v42);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    return;
  }
  uint64_t v169 = v11;
  uint64_t v170 = v10;
  uint64_t v171 = v17;
  uint64_t v174 = a4;
  uint64_t v172 = v25;
  uint64_t v173 = v23;
  sub_100006084(v176, (uint64_t)v21);
  if (sub_10004FD40((uint64_t)v21, 1, v22) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v173 + 32))(v172, v21, v22);
    id v35 = a2;
    if (!a2 || (self, (uint64_t v43 = swift_dynamicCastObjCClass()) == 0))
    {
      (*(void (**)(char *, uint64_t))(v173 + 8))(v172, v22);
      goto LABEL_15;
    }
    uint64_t v44 = (void *)v43;
    uint64_t v171 = (char *)v22;
    sub_10004D510(0, &qword_100233160);
    id v166 = a2;
    id v45 = sub_1000A3218();
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v169 + 8))(v13, v170);
    id v165 = v45;
    id v47 = [v45 stringForObjectValue:isa];

    type metadata accessor for Defaults();
    sub_1000A3990(v47, 9);

    id v48 = [v44 statusCode];
    uint64_t v49 = sub_100043478(&qword_10022E560);
    uint64_t v50 = *(void *)(type metadata accessor for LogMessage() - 8);
    uint64_t v51 = *(void *)(v50 + 72);
    uint64_t v52 = *(unsigned __int8 *)(v50 + 80);
    uint64_t v53 = (v52 + 32) & ~v52;
    uint64_t v169 = v49;
    uint64_t v168 = v52 | 7;
    uint64_t v54 = swift_allocObject();
    long long v164 = xmmword_1001C3120;
    *(_OWORD *)(v54 + 16) = xmmword_1001C3120;
    uint64_t v170 = v53;
    uint64_t v167 = sub_100043478(&qword_10022F038);
    *((void *)&v186 + 1) = v167;
    *(void *)&long long v185 = v174;
    id v55 = (id)AMSLogKey();
    uint64_t v176 = v51;
    if (v55)
    {
      uint64_t v56 = v55;
      uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v59 = v58;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v60._countAndFlagsBits = 0;
      v60._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v60);
      sub_100049788(&v185, *((uint64_t *)&v186 + 1));
      uint64_t v61 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v182 = v61;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
      v62._countAndFlagsBits = 5972026;
      v62._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v62);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v182 = v57;
      uint64_t v183 = v59;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      uint64_t v51 = v176;
      sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
      v63._countAndFlagsBits = 93;
      v63._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v63);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v80._countAndFlagsBits = 0;
      v80._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v80);
      sub_100049788(&v185, *((uint64_t *)&v186 + 1));
      uint64_t v81 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v182 = v81;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
      v82._countAndFlagsBits = 58;
      v82._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v82);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v185);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v83._countAndFlagsBits = 0xD000000000000029;
    v83._object = (void *)0x80000001001CCE80;
    LogMessage.StringInterpolation.appendLiteral(_:)(v83);
    *((void *)&v186 + 1) = &type metadata for Int;
    *(void *)&long long v185 = v48;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)&v185, &qword_10022F490);
    v84._countAndFlagsBits = 0;
    v84._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v84);
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v85 = static os_log_type_t.debug.getter();
    sub_10004841C(v85);
    swift_bridgeObjectRelease();
    if (v48 == (id)304)
    {
      *(_OWORD *)(swift_allocObject() + 16) = v164;
      *((void *)&v186 + 1) = v167;
      *(void *)&long long v185 = v174;
      id v86 = (id)AMSLogKey();
      id v87 = v166;
      if (v86)
      {
        id v88 = v86;
        uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v91 = v90;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v92._countAndFlagsBits = 0;
        v92._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v92);
        sub_100049788(&v185, *((uint64_t *)&v186 + 1));
        uint64_t v93 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v182 = v93;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
        v94._countAndFlagsBits = 5972026;
        v94._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v94);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v182 = v89;
        uint64_t v183 = v91;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
        v95._countAndFlagsBits = 93;
        v95._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v95);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v106._countAndFlagsBits = 0;
        v106._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v106);
        sub_100049788(&v185, *((uint64_t *)&v186 + 1));
        uint64_t v107 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v182 = v107;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
        v108._countAndFlagsBits = 58;
        v108._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v108);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v185);
      LogMessage.init(stringLiteral:)();
      uint64_t v109 = static os_log_type_t.info.getter();
      sub_10004841C(v109);

      swift_bridgeObjectRelease();
LABEL_47:
      (*(void (**)(char *, char *))(v173 + 8))(v172, v171);
      return;
    }
    uint64_t v96 = v174;
    *(void *)&long long v164 = v170 + 3 * v51;
    if (a5)
    {
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
      *((void *)&v186 + 1) = v167;
      *(void *)&long long v185 = v96;
      id v97 = (id)AMSLogKey();
      if (v97)
      {
        uint64_t v98 = v97;
        uint64_t v99 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v101 = v100;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v102._countAndFlagsBits = 0;
        v102._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v102);
        sub_100049788(&v185, *((uint64_t *)&v186 + 1));
        uint64_t v103 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v182 = v103;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
        v104._countAndFlagsBits = 5972026;
        v104._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v104);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v182 = v99;
        uint64_t v183 = v101;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
        v105._countAndFlagsBits = 93;
        v105._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v105);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v110._countAndFlagsBits = 0;
        v110._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v110);
        sub_100049788(&v185, *((uint64_t *)&v186 + 1));
        uint64_t v111 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v182 = v111;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
        v112._countAndFlagsBits = 58;
        v112._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v112);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v185);
      LogMessage.init(stringLiteral:)();
      uint64_t v113 = v171;
      *((void *)&v186 + 1) = v171;
      uint64_t v114 = sub_10003BAA4((uint64_t *)&v185);
      (*(void (**)(uint64_t *, uint64_t, char *))(v173 + 16))(v114, v175, v113);
      static LogMessage.safe(_:)();
      sub_10002CCBC((uint64_t)&v185, &qword_10022F490);
      uint64_t v115 = static os_log_type_t.info.getter();
      sub_10004841C(v115);
      swift_bridgeObjectRelease();
      id v116 = objc_msgSend(self, "defaultManager", (void)v164);
      URL.path.getter();
      NSString v117 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      *(void *)&long long v185 = 0;
      unsigned int v118 = [v116 removeItemAtPath:v117 error:&v185];

      uint64_t v119 = (void *)v185;
      if (!v118)
      {
LABEL_43:
        id v147 = v119;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
        *((void *)&v186 + 1) = v167;
        *(void *)&long long v185 = v174;
        id v148 = (id)AMSLogKey();
        if (v148)
        {
          uint64_t v149 = v148;
          uint64_t v150 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v152 = v151;

          swift_bridgeObjectRetain();
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v153._countAndFlagsBits = 0;
          v153._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v153);
          sub_100049788(&v185, *((uint64_t *)&v186 + 1));
          uint64_t v154 = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          uint64_t v182 = v154;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
          v155._countAndFlagsBits = 5972026;
          v155._object = (void *)0xE300000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v155);
          uint64_t MetatypeMetadata = &type metadata for String;
          uint64_t v182 = v150;
          uint64_t v183 = v152;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
          v156._countAndFlagsBits = 93;
          v156._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v156);
          LogMessage.init(stringInterpolation:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v157._countAndFlagsBits = 0;
          v157._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v157);
          sub_100049788(&v185, *((uint64_t *)&v186 + 1));
          uint64_t v158 = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          uint64_t v182 = v158;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
          v159._countAndFlagsBits = 58;
          v159._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v159);
          LogMessage.init(stringInterpolation:)();
        }
        sub_10004377C((uint64_t)&v185);
        LogMessage.init(stringLiteral:)();
        swift_getErrorValue();
        uint64_t v160 = v180;
        uint64_t v161 = v181;
        *((void *)&v186 + 1) = v181;
        unint64_t v162 = sub_10003BAA4((uint64_t *)&v185);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v161 - 8) + 16))(v162, v160, v161);
        static LogMessage.safe(_:)();
        sub_10002CCBC((uint64_t)&v185, &qword_10022F490);
        uint64_t v163 = static os_log_type_t.error.getter();
        sub_10004841C(v163);
        swift_bridgeObjectRelease();

        swift_errorRelease();
        goto LABEL_47;
      }
      id v120 = (id)v185;
      uint64_t v96 = v174;
    }
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    *((void *)&v186 + 1) = v167;
    *(void *)&long long v185 = v96;
    id v121 = (id)AMSLogKey();
    if (v121)
    {
      uint64_t v122 = v121;
      uint64_t v123 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v125 = v124;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v126._countAndFlagsBits = 0;
      v126._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v126);
      sub_100049788(&v185, *((uint64_t *)&v186 + 1));
      uint64_t v127 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v182 = v127;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
      v128._countAndFlagsBits = 5972026;
      v128._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v128);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v182 = v123;
      uint64_t v183 = v125;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
      v129._countAndFlagsBits = 93;
      v129._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v129);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v130._countAndFlagsBits = 0;
      v130._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v130);
      sub_100049788(&v185, *((uint64_t *)&v186 + 1));
      uint64_t v131 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v182 = v131;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
      v132._countAndFlagsBits = 58;
      v132._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v132);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v185);
    LogMessage.init(stringLiteral:)();
    uint64_t v133 = v171;
    *((void *)&v186 + 1) = v171;
    uint64_t v134 = sub_10003BAA4((uint64_t *)&v185);
    uint64_t v135 = v173;
    (*(void (**)(uint64_t *, uint64_t, char *))(v173 + 16))(v134, v175, v133);
    static LogMessage.safe(_:)();
    sub_10002CCBC((uint64_t)&v185, &qword_10022F490);
    uint64_t v136 = static os_log_type_t.info.getter();
    sub_10004841C(v136);
    swift_bridgeObjectRelease();
    id v137 = [self defaultManager];
    uint64_t v138 = v172;
    URL._bridgeToObjectiveC()(&var18);
    uint64_t v140 = v139;
    URL._bridgeToObjectiveC()(v141);
    uint64_t v143 = v142;
    *(void *)&long long v185 = 0;
    unsigned int v144 = [v137 moveItemAtURL:v140 toURL:v142 error:&v185];

    uint64_t v119 = (void *)v185;
    if (v144)
    {
      int v145 = *(void (**)(char *, char *))(v135 + 8);
      id v146 = (id)v185;
      v145(v138, v133);

      return;
    }
    goto LABEL_43;
  }
  sub_10002CCBC((uint64_t)v21, &qword_10022FB40);
  id v35 = a2;
LABEL_15:
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  *((void *)&v186 + 1) = sub_100043478(&qword_10022F038);
  *(void *)&long long v185 = v174;
  id v64 = (id)AMSLogKey();
  if (v64)
  {
    uint64_t v65 = v64;
    uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v68 = v67;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v69._countAndFlagsBits = 0;
    v69._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v69);
    sub_100049788(&v185, *((uint64_t *)&v186 + 1));
    uint64_t v70 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v182 = v70;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
    v71._countAndFlagsBits = 5972026;
    v71._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v71);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v182 = v66;
    uint64_t v183 = v68;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
    v72._countAndFlagsBits = 93;
    v72._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v72);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v73._countAndFlagsBits = 0;
    v73._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v73);
    sub_100049788(&v185, *((uint64_t *)&v186 + 1));
    uint64_t v74 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v182 = v74;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)&v182, &qword_10022F490);
    v75._countAndFlagsBits = 58;
    v75._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v75);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v185);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v76._countAndFlagsBits = 0xD00000000000001BLL;
  v76._object = (void *)0x80000001001CCE60;
  LogMessage.StringInterpolation.appendLiteral(_:)(v76);
  if (v35)
  {
    *((void *)&v186 + 1) = sub_10004D510(0, &qword_10022F040);
    *(void *)&long long v185 = v35;
  }
  else
  {
    long long v185 = 0u;
    long long v186 = 0u;
  }
  id v77 = v35;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CCBC((uint64_t)&v185, &qword_10022F490);
  v78._countAndFlagsBits = 41;
  v78._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v78);
  LogMessage.init(stringInterpolation:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v79 = static os_log_type_t.error.getter();
  sub_10004841C(v79);
  swift_bridgeObjectRelease();
}

uint64_t sub_1000AD408(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, void *, void *))(a1 + 32);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = type metadata accessor for URL();
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v12 = type metadata accessor for URL();
    uint64_t v13 = 1;
  }
  sub_100021AC0((uint64_t)v10, v13, 1, v12);
  swift_retain();
  id v14 = a3;
  id v15 = a4;
  v11(v10, a3, a4);

  swift_release();
  return sub_10002CCBC((uint64_t)v10, &qword_10022FB40);
}

uint64_t type metadata accessor for DynamicUICache()
{
  return self;
}

uint64_t sub_1000AD550()
{
  type metadata accessor for URL();
  sub_1000457D8();
  uint64_t v3 = sub_10004AB74();
  v4(v3);
  return _swift_deallocObject(v1, v0, v2);
}

uint64_t sub_1000AD5C4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for URL();
  sub_100044E90(v3);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return sub_1000AA134(a1, v5, v6);
}

uint64_t sub_1000AD61C(uint64_t a1)
{
  return sub_1000A9DFC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1000AD650(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for JetpackOutputWriter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000AD6AC()
{
  type metadata accessor for URL();
  sub_1000457D8();
  uint64_t v3 = sub_10004AB74();
  v4(v3);
  return _swift_deallocObject(v1, v0, v2);
}

void sub_1000AD720(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for URL();
  sub_100044E90(v7);
  uint64_t v9 = *(void *)(v3 + 16);
  char v10 = *(unsigned char *)(v3 + 24);
  uint64_t v11 = v3 + ((*(unsigned __int8 *)(v8 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  sub_1000ABBF4(a1, a2, a3, v9, v10, v11);
}

uint64_t sub_1000AD790()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000AD7C8()
{
  type metadata accessor for URL();
  sub_100044830();
  sub_10004625C();

  uint64_t v3 = sub_1000210B4();
  v4(v3);
  return _swift_deallocObject(v0, v2, v1);
}

void sub_1000AD854(void *a1)
{
  uint64_t v3 = type metadata accessor for URL();
  sub_100044798(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = *(void *)(v1 + 16);
  char v10 = *(void **)(v1 + 24);
  uint64_t v11 = *(void *)(v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1000A91DC(a1, v9, v10, v1 + v8, v11);
}

uint64_t sub_1000AD8D4(uint64_t a1)
{
  return sub_1000A9DFC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1000AD908()
{
  type metadata accessor for URL();
  sub_100044830();
  sub_10004625C();
  uint64_t v3 = sub_1000210B4();
  v4(v3);
  return _swift_deallocObject(v0, v2, v1);
}

uint64_t sub_1000AD98C(void *a1)
{
  uint64_t v2 = type metadata accessor for URL();
  sub_100044798(v2);
  return sub_1000A94C8(a1);
}

uint64_t sub_1000ADA0C(uint64_t a1)
{
  return sub_1000A9DFC(a1, *(void *)(v1 + 16));
}

unint64_t sub_1000ADA40()
{
  unint64_t result = qword_10022C6F0;
  if (!qword_10022C6F0)
  {
    type metadata accessor for AMSBagKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022C6F0);
  }
  return result;
}

uint64_t sub_1000ADAC0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  if (qword_10022C4B8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  Swift::String v41 = &type metadata for EngagementScheduleRunner;
  id v3 = (id)AMSLogKey();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v8);
    sub_100049788(v40, (uint64_t)v41);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v38[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v38);
    v10._countAndFlagsBits = 5972026;
    v10._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    uint64_t MetatypeMetadata = &type metadata for String;
    v38[0] = v5;
    v38[1] = v7;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v38);
    v11._countAndFlagsBits = 93;
    v11._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v40, (uint64_t)v41);
    uint64_t v13 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v38[0] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v38);
    v14._countAndFlagsBits = 58;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v40);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._object = (void *)0x80000001001CD020;
  v15._countAndFlagsBits = 0xD000000000000012;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  uint64_t v16 = (ValueMetadata *)type metadata accessor for ScheduleInfo(0);
  Swift::String v41 = v16;
  uint64_t v17 = sub_10003BAA4(v40);
  sub_100087CD0(a1, (uint64_t)v17);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)v40);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  LogMessage.init(stringInterpolation:)();
  uint64_t v19 = static os_log_type_t.default.getter();
  sub_10004841C(v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = (unsigned char *)(a1 + SHIDWORD(v16[1].Kind));
  uint64_t v21 = type metadata accessor for ScheduleInfo.Metadata(0);
  if (v20[*(int *)(v21 + 52)])
  {
    id v22 = [objc_allocWithZone((Class)AMSEngagementSyncRequest) init];
    sub_100043478(&qword_10022D738);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1001C3110;
    unsigned int v24 = *v20;
    switch(*v20)
    {
      case 1:
        sub_100049420();
        break;
      case 2:
        sub_100046744();
        break;
      case 3:
        sub_100044A60();
        break;
      default:
        break;
    }
    *(void *)(v23 + 32) = 0x636974796C616E61;
    *(void *)(v23 + 40) = 0xE900000000000073;
    sub_1000AE198(v23, v22);
    if (*(void *)(*(void *)a1 + 16))
    {
      swift_bridgeObjectRetain();
      v29.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      v29.super.Class isa = 0;
    }
    [v22 setContext:v29.super.isa];

    if (qword_10022C430 != -1) {
      swift_once();
    }
    sub_1000B0CFC();

    swift_release();
  }
  else
  {
    id v25 = [objc_allocWithZone((Class)AMSEngagementEnqueueRequest) init];
    id v26 = [self currentProcess];
    [v25 setClientInfo:v26];

    sub_100043478(&qword_100231DE0);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1001C4B80;
    unsigned int v24 = *v20;
    uint64_t v28 = v27;
    switch(*v20)
    {
      case 1:
        sub_100049420();
        break;
      case 2:
        sub_100046744();
        break;
      case 3:
        sub_100044A60();
        break;
      default:
        break;
    }
    sub_10004D510(0, &qword_10022EC18);
    *(void *)(v28 + 32) = sub_1000BC5A4();
    v40[0] = v28;
    specialized Array._endMutation()();
    sub_1000BD0F4(v40[0], v25);
    uint64_t v30 = swift_bridgeObjectRetain();
    sub_1000AE204(v30, v25);
    swift_bridgeObjectRelease();
    sub_10004D510(0, (unint64_t *)&qword_100232020);
    id v31 = sub_100051DF8();
    id v32 = [objc_allocWithZone((Class)AMSEngagement) initWithBag:v31];

    id v33 = [v32 _enqueue:v25];
  }
  Swift::String v34 = &v20[*(int *)(v21 + 44)];
  id v35 = *(ValueMetadata **)v34;
  Swift::String v36 = (void *)*((void *)v34 + 1);
  sub_100164B6C(*(ValueMetadata **)v34, (uint64_t)v36, v24);
  sub_100167AE4(v24, (uint64_t)v35, v36);
  sub_1001ADE08();
  return swift_bridgeObjectRelease();
}

void sub_1000AE198(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setApps:isa];
}

void sub_1000AE204(uint64_t a1, void *a2)
{
  sub_100043478(&qword_10022D6F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [a2 setEvents:isa];
}

ValueMetadata *type metadata accessor for EngagementScheduleRunner()
{
  return &type metadata for EngagementScheduleRunner;
}

void *sub_1000AE284(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    uint64_t v6 = &_swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v7 = *v5;
      v13[0] = *(v5 - 1);
      v13[1] = v7;
      swift_bridgeObjectRetain();
      sub_1000B1908(v13, a2, &v14);
      if (v2) {
        break;
      }
      swift_bridgeObjectRelease();
      char v8 = v14;
      if (v14 != 4)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100070A68();
          uint64_t v6 = v10;
        }
        unint64_t v9 = v6[2];
        if (v9 >= v6[3] >> 1)
        {
          sub_100070A68();
          uint64_t v6 = v11;
        }
        v6[2] = v9 + 1;
        *((unsigned char *)v6 + v9 + 32) = v8;
      }
      v5 += 2;
      if (!--v4)
      {

        swift_bridgeObjectRelease();
        return v6;
      }
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    return &_swiftEmptyArrayStorage;
  }
  return v6;
}

void *sub_1000AE3E8(uint64_t a1, char *a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  unint64_t v13 = (unint64_t)_swiftEmptyArrayStorage;
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    while (1)
    {
      char v12 = *(unsigned char *)(a1 + v8 + 32);
      sub_1000B1F40(a2, a3, &v11);
      if (v3) {
        break;
      }
      if (v11)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      if (v5 == ++v8)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = (void *)v13;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)v13;

    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:
  }
  return v6;
}

void *sub_1000AE538(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v5 = a2;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v6 = a1;
    uint64_t v7 = 0;
    uint64_t v8 = &_swiftEmptyArrayStorage;
    int v34 = a3 & 1;
    uint64_t v19 = swift_bridgeObjectRetain();
    while (1)
    {
      unsigned __int8 v35 = *(unsigned char *)(v6 + v7 + 32);
      sub_1000B1CBC(v5, &v35, v34, (uint64_t)a4, (uint64_t)&v26);
      if (v4) {
        break;
      }
      uint64_t v9 = v27;
      if (v27)
      {
        __int16 v10 = v26;
        long long v22 = v29;
        long long v23 = v28;
        uint64_t v12 = v30;
        uint64_t v11 = v31;
        uint64_t v24 = v33;
        char v25 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100031C64();
          uint64_t v8 = v15;
        }
        unint64_t v13 = v8[2];
        if (v13 >= v8[3] >> 1)
        {
          sub_100031C64();
          uint64_t v8 = v16;
        }
        v8[2] = v13 + 1;
        char v14 = (char *)&v8[10 * v13];
        v14[32] = v10 & 1;
        v14[33] = HIBYTE(v10);
        *((void *)v14 + 5) = v9;
        *((_OWORD *)v14 + 3) = v23;
        *((_OWORD *)v14 + 4) = v22;
        *((void *)v14 + 10) = v12;
        *((void *)v14 + 11) = v11;
        v14[96] = v25;
        *((void *)v14 + 13) = v24;
        uint64_t v5 = a2;
        uint64_t v6 = v19;
      }
      if (v20 == ++v7)
      {

        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    uint64_t v8 = &_swiftEmptyArrayStorage;
LABEL_14:
  }
  return v8;
}

void sub_1000AE70C()
{
  sub_1000209F4();
  sub_100020A78(v3);
  sub_100020DEC();
  __chkstk_darwin(v4);
  sub_10004998C(v5, v36);
  sub_100020DEC();
  __chkstk_darwin(v6);
  sub_1000210CC(v7, v37);
  sub_100020DEC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100049D70();
  sub_100020DEC();
  __chkstk_darwin(v11);
  sub_10002257C();
  __chkstk_darwin(v12);
  sub_100036188();
  uint64_t v13 = sub_100035CB8();
  sub_1000BC598(v13);
  id v14 = objc_allocWithZone((Class)NSLock);
  sub_1000228C0();
  id v15 = [v0 init];
  if (v2) {
    goto LABEL_9;
  }
  sub_1000228F8();
  if (qword_10022C588 != -1) {
    swift_once();
  }
  static DispatchTime.now()();
  sub_10004A8BC();
  if (v17)
  {
    __break(1u);
  }
  else if (v16 > -9.22337204e18)
  {
    sub_100042B54();
    if (!v19) {
      goto LABEL_12;
    }
    sub_10001D710(v18);
    uint64_t v20 = sub_100043BE0();
    v21(v20);
    sub_100045B74();
    uint64_t v22 = sub_1000420B8();
    v23(v22);
    uint64_t v24 = sub_10004AB8C();
    v25(v24);
    uint64_t v26 = sub_100035CB8();
    *(void *)(v26 + 16) = v15;
    *(void *)(v26 + 24) = v1;
    v38[4] = sub_1000BB864;
    v38[5] = v26;
    v38[0] = _NSConcreteStackBlock;
    sub_100022644(COERCE_DOUBLE(1107296256));
    long long v38[2] = sub_10002CD0C;
    void v38[3] = &unk_10020FE88;
    uint64_t v27 = _Block_copy(v38);
    id v28 = v15;
    swift_retain();
    sub_100023FDC();
    sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v9 = &unk_10022F4C0;
    sub_100043478((uint64_t *)&unk_10022F4C0);
    sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
    sub_1000480EC();
    sub_10004BEFC();
    _Block_release(v27);
    sub_100043FB0();
    v29();
    sub_100043FB0();
    v30();
    uint64_t v31 = sub_10004A38C();
    v32(v31);
    swift_release();
LABEL_9:
    uint64_t v33 = sub_100035CB8();
    sub_10002289C(v33);
    uint64_t v34 = sub_100035CB8();
    sub_1000BC56C(v34);
    sub_1000BC4A8();
    id v35 = v9;
    sub_10004A06C();
    swift_release();

    swift_release();
    swift_release();
    sub_100020FDC();
    return;
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

void sub_1000AEABC()
{
  sub_1000209F4();
  sub_100020A78(v3);
  sub_100020DEC();
  __chkstk_darwin(v4);
  sub_10004998C(v5, v36);
  sub_100020DEC();
  __chkstk_darwin(v6);
  sub_1000210CC(v7, v37);
  sub_100020DEC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100049D70();
  sub_100020DEC();
  __chkstk_darwin(v11);
  sub_10002257C();
  __chkstk_darwin(v12);
  sub_100036188();
  uint64_t v13 = sub_100035CB8();
  sub_1000BC598(v13);
  id v14 = objc_allocWithZone((Class)NSLock);
  sub_1000228C0();
  id v15 = [v0 init];
  if (v2) {
    goto LABEL_9;
  }
  sub_1000228F8();
  if (qword_10022C588 != -1) {
    swift_once();
  }
  static DispatchTime.now()();
  sub_10004A8BC();
  if (v17)
  {
    __break(1u);
  }
  else if (v16 > -9.22337204e18)
  {
    sub_100042B54();
    if (!v19) {
      goto LABEL_12;
    }
    sub_10001D710(v18);
    uint64_t v20 = sub_100043BE0();
    v21(v20);
    sub_100045B74();
    uint64_t v22 = sub_1000420B8();
    v23(v22);
    uint64_t v24 = sub_10004AB8C();
    v25(v24);
    uint64_t v26 = sub_100035CB8();
    *(void *)(v26 + 16) = v15;
    *(void *)(v26 + 24) = v1;
    v38[4] = sub_1000BBAE4;
    v38[5] = v26;
    v38[0] = _NSConcreteStackBlock;
    sub_100022644(COERCE_DOUBLE(1107296256));
    long long v38[2] = sub_10002CD0C;
    void v38[3] = &unk_10020FCA8;
    uint64_t v27 = _Block_copy(v38);
    id v28 = v15;
    swift_retain();
    sub_100023FDC();
    sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v9 = &unk_10022F4C0;
    sub_100043478((uint64_t *)&unk_10022F4C0);
    sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
    sub_1000480EC();
    sub_10004BEFC();
    _Block_release(v27);
    sub_100043FB0();
    v29();
    sub_100043FB0();
    v30();
    uint64_t v31 = sub_10004A38C();
    v32(v31);
    swift_release();
LABEL_9:
    uint64_t v33 = sub_100035CB8();
    sub_10002289C(v33);
    uint64_t v34 = sub_100035CB8();
    sub_1000BC56C(v34);
    sub_1000BC4A8();
    id v35 = v9;
    sub_10004A06C();
    swift_release();

    swift_release();
    swift_release();
    sub_100020FDC();
    return;
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

uint64_t sub_1000AEE6C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  double v44 = *(double *)&a1;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  __chkstk_darwin(v9);
  uint64_t v40 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  Swift::String v38 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchTimeInterval();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (void *)((char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v37 = *(void *)(v45 - 8);
  uint64_t v16 = __chkstk_darwin(v45);
  double v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v36 - v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a3;
  *(void *)(v21 + 24) = a4;
  id v22 = objc_allocWithZone((Class)NSLock);
  swift_retain();
  id v23 = [v22 init];
  if (a2) {
    goto LABEL_8;
  }
  v36[1] = v5;
  if (qword_10022C588 != -1) {
    swift_once();
  }
  uint64_t result = static DispatchTime.now()();
  if ((~*(void *)&v44 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v44 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v44 < 9.22337204e18)
  {
    *id v15 = (uint64_t)v44;
    (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchTimeInterval.seconds(_:), v12);
    v36[0] = v20;
    + infix(_:_:)();
    (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
    double v44 = *(double *)(v37 + 8);
    (*(void (**)(char *, uint64_t))&v44)(v18, v45);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v23;
    *(void *)(v25 + 24) = v21;
    aBlock[4] = sub_1000BB864;
    aBlock[5] = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002CD0C;
    aBlock[3] = &unk_10020F898;
    uint64_t v26 = _Block_copy(aBlock);
    id v27 = v23;
    swift_retain();
    id v28 = v38;
    static DispatchQoS.unspecified.getter();
    Swift::String v46 = _swiftEmptyArrayStorage;
    sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100043478((uint64_t *)&unk_10022F4C0);
    sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
    long long v29 = v40;
    uint64_t v30 = v43;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v31 = v36[0];
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v30);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v41);
    (*(void (**)(uint64_t, uint64_t))&v44)(v31, v45);
    swift_release();
LABEL_8:
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v23;
    *(void *)(v32 + 24) = v21;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v23;
    *(void *)(v33 + 24) = v21;
    id v34 = v23;
    swift_retain_n();
    id v35 = v34;
    sub_10004D400();
    swift_release();

    swift_release();
    return swift_release();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000AF460(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  double v44 = *(double *)&a1;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  __chkstk_darwin(v9);
  uint64_t v40 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  Swift::String v38 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchTimeInterval();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (void *)((char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v37 = *(void *)(v45 - 8);
  uint64_t v16 = __chkstk_darwin(v45);
  double v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v36 - v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a3;
  *(void *)(v21 + 24) = a4;
  id v22 = objc_allocWithZone((Class)NSLock);
  swift_retain();
  id v23 = [v22 init];
  if (a2) {
    goto LABEL_8;
  }
  v36[1] = v5;
  if (qword_10022C588 != -1) {
    swift_once();
  }
  uint64_t result = static DispatchTime.now()();
  if ((~*(void *)&v44 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v44 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v44 < 9.22337204e18)
  {
    *id v15 = (uint64_t)v44;
    (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchTimeInterval.seconds(_:), v12);
    v36[0] = v20;
    + infix(_:_:)();
    (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
    double v44 = *(double *)(v37 + 8);
    (*(void (**)(char *, uint64_t))&v44)(v18, v45);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v23;
    *(void *)(v25 + 24) = v21;
    aBlock[4] = sub_1000BB864;
    aBlock[5] = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002CD0C;
    aBlock[3] = &unk_10020F7D0;
    uint64_t v26 = _Block_copy(aBlock);
    id v27 = v23;
    swift_retain();
    id v28 = v38;
    static DispatchQoS.unspecified.getter();
    Swift::String v46 = _swiftEmptyArrayStorage;
    sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100043478((uint64_t *)&unk_10022F4C0);
    sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
    long long v29 = v40;
    uint64_t v30 = v43;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v31 = v36[0];
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v30);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v41);
    (*(void (**)(uint64_t, uint64_t))&v44)(v31, v45);
    swift_release();
LABEL_8:
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v23;
    *(void *)(v32 + 24) = v21;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v23;
    *(void *)(v33 + 24) = v21;
    id v34 = v23;
    swift_retain_n();
    id v35 = v34;
    sub_10004D400();
    swift_release();

    swift_release();
    return swift_release();
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_1000AFA54()
{
  sub_1000209F4();
  sub_100020A78(v3);
  sub_100020DEC();
  __chkstk_darwin(v4);
  sub_10004998C(v5, v36);
  sub_100020DEC();
  __chkstk_darwin(v6);
  sub_1000210CC(v7, v37);
  sub_100020DEC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100049D70();
  sub_100020DEC();
  __chkstk_darwin(v11);
  sub_10002257C();
  __chkstk_darwin(v12);
  sub_100036188();
  uint64_t v13 = sub_100035CB8();
  sub_1000BC598(v13);
  id v14 = objc_allocWithZone((Class)NSLock);
  sub_1000228C0();
  id v15 = [v0 init];
  if (v2) {
    goto LABEL_9;
  }
  sub_1000228F8();
  if (qword_10022C588 != -1) {
    swift_once();
  }
  static DispatchTime.now()();
  sub_10004A8BC();
  if (v17)
  {
    __break(1u);
  }
  else if (v16 > -9.22337204e18)
  {
    sub_100042B54();
    if (!v19) {
      goto LABEL_12;
    }
    sub_10001D710(v18);
    uint64_t v20 = sub_100043BE0();
    v21(v20);
    sub_100045B74();
    uint64_t v22 = sub_1000420B8();
    v23(v22);
    uint64_t v24 = sub_10004AB8C();
    v25(v24);
    uint64_t v26 = sub_100035CB8();
    *(void *)(v26 + 16) = v15;
    *(void *)(v26 + 24) = v1;
    v38[4] = sub_1000BBBE8;
    v38[5] = v26;
    v38[0] = _NSConcreteStackBlock;
    sub_100022644(COERCE_DOUBLE(1107296256));
    long long v38[2] = sub_10002CD0C;
    void v38[3] = &unk_10020FF50;
    id v27 = _Block_copy(v38);
    id v28 = v15;
    swift_retain();
    sub_100023FDC();
    sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v9 = &unk_10022F4C0;
    sub_100043478((uint64_t *)&unk_10022F4C0);
    sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
    sub_1000480EC();
    sub_10004BEFC();
    _Block_release(v27);
    sub_100043FB0();
    v29();
    sub_100043FB0();
    v30();
    uint64_t v31 = sub_10004A38C();
    v32(v31);
    swift_release();
LABEL_9:
    uint64_t v33 = sub_100035CB8();
    sub_10002289C(v33);
    uint64_t v34 = sub_100035CB8();
    sub_1000BC56C(v34);
    sub_1000BC4A8();
    id v35 = v9;
    sub_10004A06C();
    swift_release();

    swift_release();
    swift_release();
    sub_100020FDC();
    return;
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

void sub_1000AFE04(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100043478(&qword_10022F100);
    char v2 = (void *)sub_10004A1D4();
  }
  else
  {
    char v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  uint64_t v5 = v4 & *(void *)(a1 + 64);
  sub_100020DD8();
  uint64_t v6 = v2 + 8;
  swift_bridgeObjectRetain();
  swift_retain();
  if (!v5) {
    goto LABEL_9;
  }
LABEL_8:
  sub_100017E44();
  while (1)
  {
    sub_100011E44();
    uint64_t v16 = v15[1];
    *(void *)&v32[0] = *v15;
    *((void *)&v32[0] + 1) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_100043478(&qword_10022D7B0);
    swift_dynamicCast();
    long long v28 = v24;
    long long v29 = v25;
    uint64_t v30 = v26;
    sub_100043510(&v27, v31);
    long long v24 = v28;
    long long v25 = v29;
    uint64_t v26 = v30;
    sub_100043510(v31, v32);
    sub_100043510(v32, &v28);
    unint64_t v17 = AnyHashable._rawHashValue(seed:)(v2[5]) & ~(-1 << *((unsigned char *)v2 + 32));
    if (((-1 << v17) & ~v6[v17 >> 6]) == 0) {
      break;
    }
    sub_1000499B8();
LABEL_38:
    *(void *)((char *)v6 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v23 = v2[6] + 40 * v18;
    *(_OWORD *)uint64_t v23 = v24;
    *(_OWORD *)(v23 + 16) = v25;
    *(void *)(v23 + 32) = v26;
    sub_100043510(&v28, (_OWORD *)(v2[7] + 32 * v18));
    sub_100018FB8();
    if (v5) {
      goto LABEL_8;
    }
LABEL_9:
    sub_100024554();
    if (v7 == v8)
    {
LABEL_40:
      swift_release();
      sub_100021B0C();
      return;
    }
    sub_100035DE4();
    if (!v9)
    {
      sub_100050D8C();
      if (v7 == v8) {
        goto LABEL_40;
      }
      sub_10003631C();
      if (!v10)
      {
        sub_100050D8C();
        if (v7 == v8) {
          goto LABEL_40;
        }
        sub_10003631C();
        if (!v11)
        {
          sub_100050D8C();
          if (v7 == v8) {
            goto LABEL_40;
          }
          sub_10003631C();
          if (!v12)
          {
            sub_100024554();
            if (v7 == v8) {
              goto LABEL_40;
            }
            if (!*(void *)(a1 + 64 + 8 * v13))
            {
              while (!__OFADD__(v13, 1))
              {
                sub_100050D8C();
                if (v7 == v8) {
                  goto LABEL_40;
                }
                sub_100036AFC();
                if (v14) {
                  goto LABEL_28;
                }
              }
              goto LABEL_42;
            }
          }
        }
      }
    }
LABEL_28:
    sub_1000BC4C4();
  }
  sub_10004ABAC();
  while (++v20 != v21 || (v19 & 1) == 0)
  {
    BOOL v22 = v20 == v21;
    if (v20 == v21) {
      uint64_t v20 = 0;
    }
    v19 |= v22;
    if (v6[v20] != -1)
    {
      sub_10004D6A0();
      goto LABEL_38;
    }
  }
  __break(1u);
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_1000B0110(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100043478(&qword_10022F100);
    char v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    char v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  if (!v5) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v10 = v9 | (v8 << 6);
  while (1)
  {
    id v15 = (void *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v16 = v15[1];
    *(void *)&v36[0] = *v15;
    *((void *)&v36[0] + 1) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_100043510(&v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_100043510(v35, v36);
    sub_100043510(v36, &v32);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v17 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v18 = result & ~v17;
    unint64_t v19 = v18 >> 6;
    if (((-1 << v18) & ~*(void *)&v6[8 * (v18 >> 6)]) == 0)
    {
      char v21 = 0;
      unint64_t v22 = (unint64_t)(63 - v17) >> 6;
      while (++v19 != v22 || (v21 & 1) == 0)
      {
        BOOL v23 = v19 == v22;
        if (v19 == v22) {
          unint64_t v19 = 0;
        }
        v21 |= v23;
        uint64_t v24 = *(void *)&v6[8 * v19];
        if (v24 != -1)
        {
          unint64_t v20 = __clz(__rbit64(~v24)) + (v19 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    unint64_t v20 = __clz(__rbit64((-1 << v18) & ~*(void *)&v6[8 * (v18 >> 6)])) | v18 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)&v6[(v20 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v20;
    uint64_t v25 = v2[6] + 40 * v20;
    *(_OWORD *)uint64_t v25 = v28;
    *(_OWORD *)(v25 + 16) = v29;
    *(void *)(v25 + 32) = v30;
    uint64_t result = (uint64_t)sub_100043510(&v32, (_OWORD *)(v2[7] + 32 * v20));
    ++v2[2];
    if (v5) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_38;
    }
    if (v11 >= v26) {
      goto LABEL_36;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    int64_t v13 = v8 + 1;
    if (!v12)
    {
      int64_t v13 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_36;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_36;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_36;
          }
          unint64_t v12 = *(void *)(v27 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v8 = v13;
  }
  int64_t v14 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_36:
    swift_release();
    sub_100011E28();
    return (uint64_t)v2;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v8 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_36;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1000B04C8(void *a1)
{
  if (a1[2])
  {
    sub_100043478(&qword_10022F100);
    uint64_t v4 = (Swift::Int *)sub_10004A1D4();
  }
  else
  {
    uint64_t v4 = (Swift::Int *)&_swiftEmptyDictionarySingleton;
  }
  sub_100043E88();
  uint64_t v7 = v6 & v5;
  sub_1000BC544();
  int64_t v8 = v4 + 8;
  swift_bridgeObjectRetain();
  swift_retain();
  if (!v7) {
    goto LABEL_6;
  }
LABEL_5:
  sub_100017E44();
  while (1)
  {
    uint64_t v18 = *(void *)(a1[6] + 8 * v9);
    sub_100043520(a1[7] + 32 * v9, (uint64_t)v37 + 8);
    *(void *)&v37[0] = v18;
    v35[0] = v37[0];
    v35[1] = v37[1];
    uint64_t v36 = v38;
    *(void *)&v34[0] = v18;
    swift_dynamicCast();
    sub_100043510((_OWORD *)((char *)v35 + 8), v1);
    long long v31 = v28;
    long long v32 = v29;
    uint64_t v33 = v30;
    sub_100043510(v1, v2);
    long long v28 = v31;
    long long v29 = v32;
    uint64_t v30 = v33;
    sub_100043510(v2, v34);
    sub_100043510(v34, &v31);
    AnyHashable._rawHashValue(seed:)(v4[5]);
    sub_100035E20();
    if (((v21 << v20) & ~v8[v19]) == 0) {
      break;
    }
    sub_1000499B8();
LABEL_35:
    *(Swift::Int *)((char *)v8 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    uint64_t v27 = v4[6] + 40 * v22;
    *(_OWORD *)uint64_t v27 = v28;
    *(_OWORD *)(v27 + 16) = v29;
    *(void *)(v27 + 32) = v30;
    sub_100043510(&v31, (_OWORD *)(v4[7] + 32 * v22));
    sub_100018FB8();
    if (v7) {
      goto LABEL_5;
    }
LABEL_6:
    sub_10004A550();
    if (v10 == v11)
    {
LABEL_37:
      swift_release();
      sub_100021B0C();
      return;
    }
    sub_100035DE4();
    if (!v12)
    {
      sub_10004A544();
      if (v10 == v11) {
        goto LABEL_37;
      }
      sub_100043A0C();
      if (!v13)
      {
        sub_10004A544();
        if (v10 == v11) {
          goto LABEL_37;
        }
        sub_100043A0C();
        if (!v14)
        {
          sub_10004A544();
          if (v10 == v11) {
            goto LABEL_37;
          }
          sub_100043A0C();
          if (!v15)
          {
            sub_10004A550();
            if (v10 == v11) {
              goto LABEL_37;
            }
            if (!a1[v16 + 8])
            {
              while (!__OFADD__(v16, 1))
              {
                sub_10004A544();
                if (v10 == v11) {
                  goto LABEL_37;
                }
                sub_100036AFC();
                if (v17) {
                  goto LABEL_25;
                }
              }
              goto LABEL_39;
            }
          }
        }
      }
    }
LABEL_25:
    sub_1000BC4C4();
  }
  sub_10004ABAC();
  while (++v24 != v25 || (v23 & 1) == 0)
  {
    BOOL v26 = v24 == v25;
    if (v24 == v25) {
      uint64_t v24 = 0;
    }
    v23 |= v26;
    if (v8[v24] != -1)
    {
      sub_10004D6A0();
      goto LABEL_35;
    }
  }
  __break(1u);
  __break(1u);
LABEL_39:
  __break(1u);
}

#error "1000B09BC: call analysis failed (funcsize=151)"

void sub_1000B0A1C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100043478((uint64_t *)&unk_100234670);
    uint64_t v1 = (void *)sub_10004A1D4();
  }
  else
  {
    uint64_t v1 = _swiftEmptyDictionarySingleton;
  }
  sub_1000474C4();
  uint64_t v4 = v3 & v2;
  sub_1000BC558();
  uint64_t v34 = v5;
  uint64_t v35 = (uint64_t)(v1 + 8);
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  while (1)
  {
    while (1)
    {
      if (v4)
      {
        v4 &= v4 - 1;
      }
      else
      {
        if (__OFADD__(v6, 1)) {
          goto LABEL_36;
        }
        sub_10004A550();
        if (v7 == v8)
        {
LABEL_33:
          sub_1000BC584();
          sub_100011E28();
          return;
        }
        sub_100035DE4();
        if (!v9)
        {
          sub_10004A544();
          if (v7 == v8) {
            goto LABEL_33;
          }
          sub_100043A0C();
          if (!v10)
          {
            sub_10004A544();
            if (v7 == v8) {
              goto LABEL_33;
            }
            sub_100043A0C();
            if (!v11)
            {
              sub_10004A544();
              if (v7 == v8) {
                goto LABEL_33;
              }
              sub_100043A0C();
              if (!v12)
              {
                sub_10004A550();
                if (v7 == v8) {
                  goto LABEL_33;
                }
                if (!*(void *)(v36 + 8 * v13))
                {
                  while (!__OFADD__(v13, 1))
                  {
                    sub_10004A544();
                    if (v7 == v8) {
                      goto LABEL_33;
                    }
                    sub_100036AFC();
                    if (v14) {
                      goto LABEL_27;
                    }
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        sub_1000BC4EC();
        uint64_t v4 = v16 & v15;
        uint64_t v6 = v17;
      }
      sub_100011E44();
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      sub_100025334(v22 + 40 * v21, (uint64_t)v47);
      *(void *)&long long v46 = v20;
      *((void *)&v46 + 1) = v19;
      v43[2] = v46;
      v44[0] = v47[0];
      v44[1] = v47[1];
      uint64_t v45 = v48;
      uint64_t v38 = v20;
      uint64_t v39 = v19;
      sub_100028270(v44, (uint64_t)v37);
      swift_bridgeObjectRetain();
      sub_100043478(&qword_10022E6A0);
      swift_dynamicCast();
      uint64_t v24 = v38;
      uint64_t v23 = v39;
      sub_100043510(&v40, v42);
      sub_100043510(v42, v43);
      sub_100043510(v43, &v41);
      unint64_t v25 = sub_100042ADC(v24, v23);
      unint64_t v26 = v25;
      if ((v27 & 1) == 0) {
        break;
      }
      long long v28 = (uint64_t *)(v1[6] + 16 * v25);
      swift_bridgeObjectRelease();
      *long long v28 = v24;
      v28[1] = v23;
      long long v29 = (_OWORD *)(v1[7] + 32 * v26);
      sub_10004377C((uint64_t)v29);
      sub_100043510(&v41, v29);
    }
    if (v1[2] >= v1[3]) {
      break;
    }
    sub_1000307A0((v25 >> 3) & 0x1FFFFFFFFFFFFFF8, v34, v35);
    long long v31 = (uint64_t *)(v30 + 16 * v26);
    *long long v31 = v24;
    v31[1] = v23;
    sub_100043510(&v41, (_OWORD *)(v1[7] + 32 * v26));
    uint64_t v32 = v1[2];
    BOOL v8 = __OFADD__(v32, 1);
    uint64_t v33 = v32 + 1;
    if (v8) {
      goto LABEL_35;
    }
    v1[2] = v33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1000B0CFC()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  __chkstk_darwin(v3);
  sub_100040C78();
  sub_100020DEC();
  __chkstk_darwin(v4);
  sub_100045B24();
  sub_100043478(&qword_10022F0C0);
  uint64_t v5 = Promise.__allocating_init()();
  uint64_t v6 = (void *)sub_100011D64();
  v6[2] = v2;
  v6[3] = v5;
  v6[4] = v0;
  v14[4] = sub_1000B93F4;
  v14[5] = v6;
  v14[0] = _NSConcreteStackBlock;
  sub_100022644(COERCE_DOUBLE(1107296256));
  void v14[2] = sub_10002CD0C;
  v14[3] = &unk_10020F5A0;
  char v7 = _Block_copy(v14);
  id v8 = v2;
  swift_retain();
  id v9 = v0;
  static DispatchQoS.unspecified.getter();
  sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  sub_100040FB8();
  sub_100011E9C();
  _Block_release(v7);
  uint64_t v10 = sub_100046BEC();
  v11(v10);
  uint64_t v12 = sub_1000BC4FC();
  v13(v12);
  swift_release();
  sub_100017EDC();
  swift_release();
  sub_100020FDC();
}

void sub_1000B0F58(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = a1;
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19)
  {
    unint64_t v5 = 0;
    uint64_t v6 = (void *)(a1 + 56);
    char v7 = _swiftEmptyArrayStorage;
    while (v5 < *(void *)(v4 + 16))
    {
      uint64_t v8 = *(v6 - 2);
      char v9 = *((unsigned char *)v6 - 8);
      uint64_t v10 = *v6;
      char v11 = *((unsigned char *)v6 - 24);
      v22[0] = v11;
      uint64_t v23 = v8;
      char v24 = v9;
      uint64_t v25 = v10;
      swift_bridgeObjectRetain();
      char v12 = sub_1000B21EC((uint64_t)v22, a2, a3);
      if (v3)
      {

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      if (v12)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v26 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000734A4(0, v7[2] + 1, 1);
          char v7 = v26;
        }
        unint64_t v15 = v7[2];
        unint64_t v14 = v7[3];
        unint64_t v16 = v15 + 1;
        if (v15 >= v14 >> 1)
        {
          sub_1000734A4(v14 > 1, v15 + 1, 1);
          unint64_t v16 = v15 + 1;
          char v7 = v26;
        }
        v7[2] = v16;
        uint64_t v17 = &v7[4 * v15];
        *((unsigned char *)v17 + 32) = v11;
        v17[5] = v8;
        *((unsigned char *)v17 + 48) = v9;
        v17[7] = v10;
        uint64_t v4 = a1;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      ++v5;
      v6 += 4;
      if (v19 == v5) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000B111C(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  __chkstk_darwin(v5);
  char v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v39 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_100043478(&qword_10022F0D8);
  uint64_t v41 = v12;
  if (v12)
  {
    unint64_t v40 = a1;
    uint64_t v30 = v10;
    uint64_t v31 = v9;
    uint64_t v32 = v4;
    uint64_t v33 = v2;
    uint64_t v38 = Promise.__allocating_init()();
    uint64_t v13 = dispatch_group_create();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = _swiftEmptyArrayStorage;
    uint64_t v34 = sub_10004D510(0, (unint64_t *)&qword_10022F690);
    if (qword_10022C588 != -1) {
      swift_once();
    }
    id v15 = (id)qword_100244180;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100050588((unint64_t *)&qword_10022F470, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
    sub_100043478((uint64_t *)&unk_100231D60);
    sub_10002B720((unint64_t *)&qword_10022F480, (uint64_t *)&unk_100231D60);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    (*(void (**)(char *, void, uint64_t))(v36 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v37);
    unint64_t v16 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = _swiftEmptyArrayStorage;
    if (v41 < 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v18 = result;
      unint64_t v19 = v40 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      uint64_t v20 = 0;
      do
      {
        if (v19) {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          swift_retain();
        }
        ++v20;
        dispatch_group_enter(v13);
        uint64_t v21 = (void *)swift_allocObject();
        v21[2] = v16;
        void v21[3] = v18;
        v21[4] = v14;
        v21[5] = v13;
        swift_retain();
        swift_retain();
        id v22 = v16;
        uint64_t v23 = v13;
        sub_1000AF460(0, 1, (uint64_t)sub_1000BB90C, (uint64_t)v21);
        swift_release();
        swift_release();
      }
      while (v41 != v20);
      swift_bridgeObjectRelease();
      char v24 = (void *)swift_allocObject();
      uint64_t v25 = v38;
      v24[2] = v14;
      void v24[3] = v25;
      v24[4] = v18;
      aBlock[4] = sub_10002FB70;
      aBlock[5] = v24;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10002CD0C;
      aBlock[3] = &unk_10020F960;
      unint64_t v26 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_retain();
      char v27 = v39;
      static DispatchQoS.unspecified.getter();
      uint64_t v42 = _swiftEmptyArrayStorage;
      sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100043478((uint64_t *)&unk_10022F4C0);
      sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
      long long v28 = v32;
      uint64_t v29 = v33;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v28, v29);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v31);
      swift_release();
      swift_release();
      swift_release();
      return v38;
    }
  }
  else
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    return Promise.__allocating_init(value:)();
  }
  return result;
}

id sub_1000B17B8()
{
  id result = sub_1000BB594();
  qword_100244090 = (uint64_t)result;
  return result;
}

id sub_1000B17D8()
{
  if (qword_10022C430 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_100244090;
  return v0;
}

void *sub_1000B185C(void *a1, char a2)
{
  uint64_t v5 = sub_100078E48();
  uint64_t v6 = sub_1000BABCC(a1);
  if (v6)
  {
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1000AE284(v7, v2);
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = sub_1000AE538((uint64_t)v5, a1, a2 & 1, v2);
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1000B1908@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = *a1;
  uint64_t v8 = (void *)a1[1];
  swift_bridgeObjectRetain();
  v33._countAndFlagsBits = v9;
  v33._object = v8;
  unint64_t result = sub_10003227C(v33);
  char v11 = result;
  if (result == 4)
  {
    uint64_t v32 = v3;
    if (qword_10022C498 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v31 = (void *)type metadata accessor for EngagementService();
    v30[0] = a2;
    id v12 = a2;
    id v13 = (id)AMSLogKey();
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      sub_100049788(v30, (uint64_t)v31);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v28[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v28, &qword_10022F490);
      v20._countAndFlagsBits = 5972026;
      v20._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      uint64_t MetatypeMetadata = &type metadata for String;
      v28[0] = v15;
      v28[1] = v17;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v28, &qword_10022F490);
      v21._countAndFlagsBits = 93;
      v21._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v22._countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      sub_100049788(v30, (uint64_t)v31);
      uint64_t v23 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v28[0] = v23;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v28, &qword_10022F490);
      v24._countAndFlagsBits = 58;
      v24._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v30);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    uint64_t v31 = &type metadata for String;
    v30[0] = v9;
    v30[1] = v8;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v30, &qword_10022F490);
    v26._object = (void *)0x80000001001CDB20;
    v26._countAndFlagsBits = 0xD00000000000001FLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    LogMessage.init(stringInterpolation:)();
    uint64_t v27 = static os_log_type_t.error.getter();
    sub_10004841C(v27);
    unint64_t result = swift_bridgeObjectRelease();
  }
  *a3 = v11;
  return result;
}

double sub_1000B1CBC@<D0>(id a1@<X1>, unsigned __int8 *a2@<X0>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *a2;
  id v9 = [a1 origin];
  if (v9)
  {
    uint64_t v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v11 = String._bridgeToObjectiveC()();

    swift_bridgeObjectRelease();
    sub_100049788((void *)(a4 + OBJC_IVAR____TtC14amsengagementd17EngagementService_appDefaultsProvider), *(void *)(a4 + OBJC_IVAR____TtC14amsengagementd17EngagementService_appDefaultsProvider + 24));
    sub_100081BB4((uint64_t)v20);
    sub_100024E38((uint64_t)v20, (uint64_t)v21, &qword_10022E068);
    if (!*(void *)&v21[0]) {
      goto LABEL_6;
    }
    long long v23 = v21[0];
    long long v24 = v21[1];
    long long v25 = v21[2];
    uint64_t v26 = v22;
    sub_100024E38((uint64_t)&v26, (uint64_t)v27, &qword_10022E040);
    uint64_t v28 = v23;
    sub_10008378C((uint64_t)v27);
    sub_1000BC204((uint64_t)&v28);
    sub_100024E38((uint64_t)&v25, (uint64_t)v29, &qword_10022E060);
    sub_10002711C((uint64_t)v29);
    sub_1000BC204((uint64_t)v27);
    sub_100024E38((uint64_t)v27, (uint64_t)&v30, &qword_10022E040);
    id v12 = v30;
    if (!v30) {
      goto LABEL_6;
    }
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    char v15 = sub_1001810DC(v13, v14, v12);
    swift_bridgeObjectRelease();
    sub_1000BC204((uint64_t)v27);
    if (v15)
    {
      id v16 = [self currentProcess];

      *(void *)a5 = v8 << 8;
      *(void *)(a5 + 8) = v16;
      *(void *)(a5 + 16) = -1;
      *(void *)(a5 + 24) = 0;
      *(void *)(a5 + 32) = 0;
      *(void *)(a5 + 40) = 0xD000000000000018;
      *(void *)(a5 + 48) = 0x80000001001CA820;
      *(void *)&double result = 25;
      *(_OWORD *)(a5 + 56) = xmmword_1001C50A0;
      *(void *)(a5 + 72) = 10485760;
    }
    else
    {
LABEL_6:

      double result = 0.0;
      *(_OWORD *)(a5 + 48) = 0u;
      *(_OWORD *)(a5 + 64) = 0u;
      *(_OWORD *)(a5 + 16) = 0u;
      *(_OWORD *)(a5 + 32) = 0u;
      *(_OWORD *)a5 = 0u;
    }
  }
  else
  {
    id v18 = [self currentProcess];
    uint64_t v19 = 25;
    if (a3) {
      uint64_t v19 = 17;
    }
    *(void *)a5 = v8 << 8;
    *(void *)(a5 + 8) = v18;
    *(void *)(a5 + 16) = -1;
    *(void *)(a5 + 24) = 0;
    *(void *)(a5 + 32) = 0;
    *(void *)(a5 + 40) = 0xD000000000000018;
    *(void *)(a5 + 48) = 0x80000001001CA820;
    *(void *)(a5 + 56) = v19;
    *(void *)&double result = 2;
    *(_OWORD *)(a5 + 64) = xmmword_1001C50B0;
  }
  return result;
}

id sub_1000B1F40@<X0>(char *a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  sub_100049788(&a1[OBJC_IVAR____TtC14amsengagementd17EngagementService_appDefaultsProvider], *(void *)&a1[OBJC_IVAR____TtC14amsengagementd17EngagementService_appDefaultsProvider + 24]);
  sub_100081BB4((uint64_t)v19);
  id result = (id)sub_100024E38((uint64_t)v19, (uint64_t)v20, &qword_10022E068);
  if (!*(void *)&v20[0]) {
    goto LABEL_5;
  }
  long long v22 = v20[0];
  long long v23 = v20[1];
  long long v24 = v20[2];
  uint64_t v25 = v21;
  sub_1000B0F58(*(uint64_t *)&v20[0], a2, a1);
  uint64_t v8 = v7;
  sub_100024E38((uint64_t)&v24, (uint64_t)v26, &qword_10022E060);
  sub_10002711C((uint64_t)v26);
  sub_100024E38((uint64_t)&v25, (uint64_t)v27, &qword_10022E040);
  sub_1000BC204((uint64_t)v27);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
    id result = (id)swift_bridgeObjectRelease();
LABEL_5:
    id v12 = 0;
    goto LABEL_16;
  }
  uint64_t v10 = *(void *)(v8 + 16);
  sub_10004D510(0, &qword_10022EC18);
  id v11 = sub_1000BC5A4();
  id v12 = v11;
  char v13 = 0;
  uint64_t v14 = 32;
  do
  {
    v13 |= *(unsigned char *)(v8 + v14);
    v14 += 32;
    --v10;
  }
  while (v10);
  [v11 setAllowsResponse:v13 & 1];
  uint64_t v15 = 0;
  id v16 = (unsigned char *)(v8 + 48);
  uint64_t v17 = 1;
  while (1)
  {
    uint64_t v15 = *v16 == 1 ? -1 : *((void *)v16 - 1) | v15;
    if (v9 == v17) {
      break;
    }
    v16 += 32;
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      break;
    }
  }
  swift_bridgeObjectRelease();
  id result = [v12 setComponents:v15];
LABEL_16:
  *a3 = v12;
  return result;
}

uint64_t sub_1000B21EC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  char v8 = sub_1000B25E0(a2, *(void *)(a1 + 24));
  if (v3)
  {
    if (qword_10022C498 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v31 = type metadata accessor for EngagementService();
    v30[0] = (uint64_t)a3;
    id v9 = a3;
    id v10 = (id)AMSLogKey();
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v15._countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      sub_100049788(v30, v31);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v28[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v28, &qword_10022F490);
      v17._countAndFlagsBits = 5972026;
      v17._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      uint64_t MetatypeMetadata = &type metadata for String;
      v28[0] = v12;
      v28[1] = v14;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v28, &qword_10022F490);
      v18._countAndFlagsBits = 93;
      v18._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      sub_100049788(v30, v31);
      uint64_t v20 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v28[0] = v20;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v28, &qword_10022F490);
      v21._countAndFlagsBits = 58;
      v21._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v30);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v22._object = (void *)0x80000001001CDA70;
    v22._countAndFlagsBits = 0xD000000000000023;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    swift_getErrorValue();
    uint64_t v31 = v27;
    long long v23 = sub_10003BAA4(v30);
    (*(void (**)(uint64_t *))(*(void *)(v27 - 8) + 16))(v23);
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v30, &qword_10022F490);
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    LogMessage.init(stringInterpolation:)();
    uint64_t v25 = static os_log_type_t.info.getter();
    sub_10004841C(v25);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_1000B25E0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v67 = a1;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v66 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v56 = (char *)&v53 - v8;
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v58 = a2 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v59 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v68 = a2;
  swift_bridgeObjectRetain();
  int64_t v13 = 0;
  uint64_t v65 = &type metadata for Any + 1;
  long long v55 = xmmword_1001C3120;
  uint64_t v54 = (void *)0x80000001001CDAA0;
  while (v12)
  {
    unint64_t v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v15 = v14 | (v13 << 6);
LABEL_17:
    Swift::String v19 = (uint64_t *)(*(void *)(v68 + 48) + 16 * v15);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    Swift::String v22 = (uint64_t *)(*(void *)(v68 + 56) + 16 * v15);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v25 = String._bridgeToObjectiveC()();
    *(void *)&long long v72 = 0;
    id v26 = [v67 valueForKeyPath:v25 exception:&v72];

    id v69 = (id)v72;
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      id v27 = objc_allocWithZone((Class)NSRegularExpression);
      id v28 = sub_1000BA04C(v23, v24, 0);
      if (v3)
      {

        swift_bridgeObjectRelease();
        swift_release();
        return v23 & 1;
      }
      uint64_t v29 = v28;
      NSString v30 = String._bridgeToObjectiveC()();
      uint64_t v31 = String.count.getter();
      swift_bridgeObjectRelease();
      id v32 = objc_msgSend(v29, "firstMatchInString:options:range:", v30, 0, 0, v31);

      if (v32)
      {
        LOBYTE(v23) = 1;
        goto LABEL_36;
      }
    }
    else
    {
      int64_t v61 = v13;
      unint64_t v63 = v12;
      uint64_t v64 = v3;
      swift_bridgeObjectRelease();
      sub_100043478(&qword_10022E560);
      uint64_t v62 = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = v55;
      uint64_t v60 = v33;
      *((void *)&v73 + 1) = sub_100043478(&qword_10022F1A8);
      *(void *)&long long v72 = v57;
      id v34 = (id)AMSLogKey();
      if (v34)
      {
        uint64_t v35 = v34;
        uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v38 = v37;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v39._countAndFlagsBits = 0;
        v39._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v39);
        sub_100049788(&v72, *((uint64_t *)&v73 + 1));
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v70[0] = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v70, &qword_10022F490);
        v41._countAndFlagsBits = 5972026;
        v41._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v41);
        uint64_t MetatypeMetadata = &type metadata for String;
        v70[0] = v36;
        v70[1] = v38;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v70, &qword_10022F490);
        v42._countAndFlagsBits = 93;
        v42._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v42);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v43._countAndFlagsBits = 0;
        v43._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v43);
        sub_100049788(&v72, *((uint64_t *)&v73 + 1));
        uint64_t v44 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v70[0] = v44;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v70, &qword_10022F490);
        v45._countAndFlagsBits = 58;
        v45._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v45);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v72);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v46._countAndFlagsBits = 0xD000000000000035;
      v46._object = v54;
      LogMessage.StringInterpolation.appendLiteral(_:)(v46);
      *((void *)&v73 + 1) = &type metadata for String;
      *(void *)&long long v72 = v21;
      *((void *)&v72 + 1) = v20;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v72, &qword_10022F490);
      v47._countAndFlagsBits = 0x747065637865202CLL;
      v47._object = (void *)0xED0000203A6E6F69;
      LogMessage.StringInterpolation.appendLiteral(_:)(v47);
      id v48 = v69;
      if (v69)
      {
        *((void *)&v73 + 1) = sub_10004D510(0, &qword_10022F1B0);
        *(void *)&long long v72 = v48;
      }
      else
      {
        long long v72 = 0u;
        long long v73 = 0u;
      }
      unint64_t v12 = v63;
      id v49 = v48;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v72, &qword_10022F490);
      v50._countAndFlagsBits = 0;
      v50._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v50);
      LogMessage.init(stringInterpolation:)();
      if (qword_10022C460 != -1) {
        swift_once();
      }
      uint64_t v51 = static os_log_type_t.debug.getter();
      sub_10004841C(v51);

      swift_bridgeObjectRelease();
      uint64_t v3 = v64;
      int64_t v13 = v61;
    }
  }
  if (__OFADD__(v13++, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v13 >= v59) {
    goto LABEL_34;
  }
  unint64_t v17 = *(void *)(v58 + 8 * v13);
  if (v17)
  {
LABEL_16:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_17;
  }
  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v59) {
    goto LABEL_34;
  }
  unint64_t v17 = *(void *)(v58 + 8 * v18);
  if (v17) {
    goto LABEL_15;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v59) {
    goto LABEL_34;
  }
  unint64_t v17 = *(void *)(v58 + 8 * v18);
  if (v17)
  {
LABEL_15:
    int64_t v13 = v18;
    goto LABEL_16;
  }
  int64_t v18 = v13 + 3;
  if (v13 + 3 < v59)
  {
    unint64_t v17 = *(void *)(v58 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        int64_t v13 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          break;
        }
        if (v13 >= v59) {
          goto LABEL_34;
        }
        unint64_t v17 = *(void *)(v58 + 8 * v13);
        ++v18;
        if (v17) {
          goto LABEL_16;
        }
      }
LABEL_39:
      __break(1u);
    }
    goto LABEL_15;
  }
LABEL_34:
  LOBYTE(v23) = 0;
LABEL_36:
  swift_release();
  return v23 & 1;
}

uint64_t sub_1000B2D5C(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    id v7 = [objc_allocWithZone((Class)AMSEngagementSyncRequest) init];
    sub_100043478(&qword_10022D738);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1001C3110;
    *(void *)(v8 + 32) = a1;
    *(void *)(v8 + 40) = a2;
    swift_bridgeObjectRetain();
    sub_1000AE198(v8, v7);
    if (qword_10022C498 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v29 = (void *)type metadata accessor for EngagementService();
    v28[0] = (uint64_t)v6;
    id v9 = v6;
    id v10 = (id)AMSLogKey();
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v27 = a1;
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v15._countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      sub_100049788(v28, (uint64_t)v29);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v31[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v31, &qword_10022F490);
      v17._countAndFlagsBits = 5972026;
      v17._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      uint64_t MetatypeMetadata = &type metadata for String;
      v31[0] = v12;
      v31[1] = v14;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v31, &qword_10022F490);
      v18._countAndFlagsBits = 93;
      v18._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      LogMessage.init(stringInterpolation:)();
      a1 = v27;
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v21._countAndFlagsBits = 0;
      v21._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      sub_100049788(v28, (uint64_t)v29);
      uint64_t v22 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v31[0] = v22;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v31, &qword_10022F490);
      v23._countAndFlagsBits = 58;
      v23._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v28);
    v28[0] = 0;
    v28[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(16);
    swift_bridgeObjectRelease();
    strcpy((char *)v28, "Force syncing ");
    HIBYTE(v28[1]) = -18;
    v24._countAndFlagsBits = a1;
    v24._object = a2;
    String.append(_:)(v24);
    uint64_t v29 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_100027BD8((uint64_t)v28, &qword_10022F490);
    uint64_t v25 = static os_log_type_t.default.getter();
    sub_10004841C(v25);
    swift_bridgeObjectRelease();
    sub_1000B0CFC();
    uint64_t v29 = (void *)type metadata accessor for SyncTaskScheduler();
    NSString v30 = &protocol witness table for SyncTaskScheduler;
    sub_10003BAA4(v28);
    SyncTaskScheduler.init()();
    uint64_t v20 = Promise.map<A>(on:_:)();

    swift_release();
    sub_10004377C((uint64_t)v28);
  }
  else
  {
    sub_100043478(&qword_10022F198);
    sub_1000BC344();
    swift_allocError();
    *Swift::String v19 = 1;
    return Promise.__allocating_init(error:)();
  }
  return v20;
}

uint64_t sub_1000B3238()
{
  type metadata accessor for Defaults();
  CFPropertyListRef v0 = sub_1000A3B40();
  uint64_t v2 = v1;
  id v3 = [self buildVersion];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  if (v2)
  {
    if (v0 == (CFPropertyListRef)v4 && v2 == v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v9 = 0;
    }
    else
    {
      sub_100021A68();
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v9 = v8 ^ 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    char v9 = 1;
  }
  return v9 & 1;
}

BOOL sub_1000B3318(uint64_t a1)
{
  sub_100024E38(a1, (uint64_t)v20, &qword_10022F190);
  uint64_t v2 = v21;
  sub_100024E38(a1, (uint64_t)__src, &qword_10022F190);
  if (__src[1])
  {
    memcpy(__dst, __src, sizeof(__dst));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v3 = v2;
    uint64_t v4 = *(void *)(sub_10015A714() + 16);
    if (v4)
    {
      uint64_t v18 = a1;
      uint64_t v5 = __dst[1];
      uint64_t v6 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
      while (1)
      {
        uint64_t v8 = *(v6 - 1);
        uint64_t v7 = *v6;
        v6 += 2;
        unint64_t v9 = 0xE900000000000073;
        uint64_t v10 = 0x636974796C616E61;
        switch(v5)
        {
          case 1:
            unint64_t v9 = 0xE800000000000000;
            uint64_t v10 = 0x6C616E7265746E69;
            break;
          case 2:
            unint64_t v9 = 0xE800000000000000;
            uint64_t v10 = 0x7379656E72756F6ALL;
            break;
          case 3:
            unint64_t v9 = 0xEF736E6F69746164;
            uint64_t v10 = 0x6E656D6D6F636572;
            break;
          default:
            break;
        }
        uint64_t v19 = v10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v11._countAndFlagsBits = 46;
        v11._object = (void *)0xE100000000000000;
        String.append(_:)(v11);
        swift_bridgeObjectRelease();
        sub_100027148();
        swift_bridgeObjectRetain();
        v12._countAndFlagsBits = sub_10002FDB4();
        String.append(_:)(v12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v8 == v19 && v7 == v9) {
          break;
        }
        sub_100011DF0();
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v14) {
          goto LABEL_19;
        }
        if (!--v4)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v15 = v18;
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_19:
      swift_bridgeObjectRelease_n();
      sub_1000BC2A4(v18);
      return 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = a1;
LABEL_17:
      sub_1000BC2A4(v15);
      return 0;
    }
  }
  else
  {
    uint64_t v16 = *(void *)(sub_10015A714() + 16);
    swift_bridgeObjectRelease();
    return v16 != 0;
  }
}

uint64_t sub_1000B35AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v102 = a2;
  uint64_t v103 = a3;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  Swift::String v108 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  Swift::String v105 = (char *)&v87 - v9;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v89 = *(void *)(v10 - 8);
  uint64_t v90 = v10;
  __chkstk_darwin(v10);
  uint64_t v88 = (uint64_t)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  id v12 = (id)AMSLogKey();
  if (!v12) {
    id v12 = (id)AMSGenerateLogCorrelationKey();
  }
  uint64_t v109 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v110 = v13;

  if (qword_10022C5C8 != -1) {
    swift_once();
  }
  sub_10002A570(0xD000000000000013, 0x80000001001CCB70);
  if (qword_10022C498 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100043478(&qword_10022E560);
  uint64_t v15 = *(void *)(type metadata accessor for LogMessage() - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = (v16 + 32) & ~v16;
  uint64_t v104 = *(void *)(v15 + 72);
  uint64_t v101 = v14;
  uint64_t v98 = v16 | 7;
  uint64_t v99 = v17 + 2 * v104;
  uint64_t v18 = swift_allocObject();
  long long v97 = xmmword_1001C3120;
  *(_OWORD *)(v18 + 16) = xmmword_1001C3120;
  uint64_t v100 = v17;
  uint64_t v96 = (void *)type metadata accessor for EngagementService();
  *((void *)&v131 + 1) = v96;
  v130[0] = (uint64_t)v4;
  id v114 = v4;
  id v19 = (id)AMSLogKey();
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    sub_100049788(v130, *((uint64_t *)&v131 + 1));
    uint64_t DynamicType = swift_getDynamicType();
    v129[3] = swift_getMetatypeMetadata();
    v129[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v129, &qword_10022F490);
    v26._countAndFlagsBits = 5972026;
    v26._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    v129[3] = &type metadata for String;
    v129[0] = v21;
    v129[1] = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v129, &qword_10022F490);
    v27._countAndFlagsBits = 93;
    v27._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    sub_100049788(v130, *((uint64_t *)&v131 + 1));
    uint64_t v29 = swift_getDynamicType();
    v129[3] = swift_getMetatypeMetadata();
    v129[0] = v29;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v129, &qword_10022F490);
    v30._countAndFlagsBits = 58;
    v30._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v130);
  LogMessage.init(stringLiteral:)();
  uint64_t v31 = static os_log_type_t.default.getter();
  sub_10004841C(v31);
  swift_bridgeObjectRelease();
  unint64_t v122 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v123 = (uint64_t)_swiftEmptyArrayStorage;
  v130[0] = a1;
  swift_bridgeObjectRetain();
  sub_100028C90(v130);
  uint64_t v32 = v130[0];
  uint64_t v107 = *(void *)(v130[0] + 16);
  if (v107)
  {
    uint64_t v33 = 0;
    uint64_t v116 = 0;
    Swift::String v94 = (long long *)&v125;
    uint64_t v95 = OBJC_IVAR____TtC14amsengagementd17EngagementService_priorityQueue;
    uint64_t v91 = 0x80000001001CD2F0;
    Swift::String v92 = (void *)0x80000001001CD2D0;
    uint64_t v93 = (long long *)&v126;
    uint64_t v106 = v130[0];
    while (1)
    {
      uint64_t v34 = v32 + v33;
      memcpy(v129, (const void *)(v32 + v33 + 32), sizeof(v129));
      uint64_t v35 = *(unsigned __int8 *)(v32 + v33 + 32);
      uint64_t v36 = *(unsigned __int8 *)(v32 + v33 + 33);
      uint64_t v37 = *(void *)(v34 + 40);
      long long v38 = *(_OWORD *)(v34 + 48);
      long long v39 = *(_OWORD *)(v34 + 64);
      uint64_t v41 = *(void *)(v34 + 80);
      uint64_t v40 = *(void *)(v34 + 88);
      uint64_t v42 = *(unsigned __int8 *)(v34 + 96);
      uint64_t v43 = *(void *)(v34 + 104);
      int v115 = LOBYTE(v129[8]);
      uint64_t v113 = v33;
      long long v111 = v39;
      long long v112 = v38;
      if (LOBYTE(v129[8]) && LOBYTE(v129[8]) != 1)
      {
        char v137 = v129[0];
        sub_10002C008((uint64_t)v129);
        swift_bridgeObjectRelease();
      }
      else
      {
        char v137 = v129[0];
        char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_10002C008((uint64_t)v129);
        swift_bridgeObjectRelease();
        if ((v44 & 1) == 0) {
          goto LABEL_19;
        }
      }
      v130[0] = v35 | (v36 << 8);
      v130[1] = v37;
      long long v131 = v112;
      long long v132 = v111;
      uint64_t v133 = v41;
      uint64_t v134 = v40;
      uint64_t v135 = v42;
      uint64_t v136 = v43;
      sub_10002C008((uint64_t)v129);
      BOOL v45 = sub_1000B3318((uint64_t)v130);
      sub_100024DF0((uint64_t)v129);
      if (!v45)
      {
LABEL_19:
        *(_OWORD *)(swift_allocObject() + 16) = v97;
        id v121 = v96;
        id v49 = v114;
        uint64_t v119 = (uint64_t)v114;
        uint64_t v50 = v110;
        swift_bridgeObjectRetain_n();
        id v51 = v49;
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v52._countAndFlagsBits = 0;
        v52._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v52);
        sub_100049788(&v119, (uint64_t)v121);
        uint64_t v53 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v117[0] = v53;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v117, &qword_10022F490);
        v54._countAndFlagsBits = 5972026;
        v54._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v54);
        uint64_t MetatypeMetadata = &type metadata for String;
        v117[0] = v109;
        v117[1] = v50;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v117, &qword_10022F490);
        v55._countAndFlagsBits = 93;
        v55._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v55);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
        sub_10004377C((uint64_t)&v119);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v56._countAndFlagsBits = 0x6E69756575716E45;
        v56._object = (void *)0xEA00000000002067;
        LogMessage.StringInterpolation.appendLiteral(_:)(v56);
        if (v115)
        {
          if (v115 == 1)
          {
            uint64_t v57 = 0x696577746867696CLL;
            unint64_t v58 = 0xEF636E7953746867;
          }
          else
          {
            unint64_t v58 = 0xE400000000000000;
            uint64_t v57 = 1668184435;
          }
        }
        else
        {
          unint64_t v58 = 0xE700000000000000;
          uint64_t v57 = 0x65756575716E65;
        }
        id v121 = &type metadata for String;
        uint64_t v119 = v57;
        unint64_t v120 = v58;
        char v59 = BYTE1(v129[0]);
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v119, &qword_10022F490);
        v60._countAndFlagsBits = 0x7473657571657220;
        v60._object = (void *)0xEF203A7070612820;
        LogMessage.StringInterpolation.appendLiteral(_:)(v60);
        id v121 = &unk_10020E0E8;
        LOBYTE(v119) = v59;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v119, &qword_10022F490);
        v61._countAndFlagsBits = 0xD000000000000012;
        v61._object = v92;
        LogMessage.StringInterpolation.appendLiteral(_:)(v61);
        id v121 = &type metadata for Bool;
        LOBYTE(v119) = v137;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v119, &qword_10022F490);
        v62._countAndFlagsBits = 0x69726F697270202CLL;
        v62._object = (void *)0xEC000000203A7974;
        LogMessage.StringInterpolation.appendLiteral(_:)(v62);
        uint64_t v63 = sub_100027148();
        id v121 = &type metadata for String;
        uint64_t v119 = v63;
        unint64_t v120 = v64;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v119, &qword_10022F490);
        v65._countAndFlagsBits = 41;
        v65._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v65);
        LogMessage.init(stringInterpolation:)();
        uint64_t v66 = static os_log_type_t.default.getter();
        sub_10004841C(v66);
        swift_bridgeObjectRelease();
        uint64_t v67 = sub_100027148();
        id v69 = v68;
        uint64_t v70 = swift_allocObject();
        memcpy((void *)(v70 + 16), v129, 0x50uLL);
        uint64_t v71 = v110;
        *(void *)(v70 + 96) = v109;
        *(void *)(v70 + 104) = v71;
        *(void *)(v70 + 112) = v116;
        *(void *)(v70 + 120) = v51;
        *(unsigned char *)(v70 + 128) = v115;
        uint64_t v72 = v103;
        *(void *)(v70 + 136) = v102;
        *(void *)(v70 + 144) = v72;
        id v73 = v51;
        swift_bridgeObjectRetain();
        sub_10002C008((uint64_t)v129);
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1000299D4(v59, v67, v69, (uint64_t)&v124);
        sub_10002A91C();
        long long v128 = *v94;
        sub_10002711C((uint64_t)&v128);
        long long v127 = *v93;
        sub_10002711C((uint64_t)&v127);
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_25;
      }
      sub_100043478(&qword_10022F0C0);
      NSString v46 = String._bridgeToObjectiveC()();
      NSString v47 = String._bridgeToObjectiveC()();
      id v48 = (id)AMSError();

      Promise.__allocating_init(error:)();
LABEL_25:
      uint64_t v32 = v106;
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      if (v137 == 1)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        swift_release();
      }
      uint64_t v74 = v116 + 1;
      sub_100024DF0((uint64_t)v129);
      uint64_t v33 = v113 + 80;
      uint64_t v116 = v74;
      if (v107 == v74)
      {
        swift_release();
        unint64_t v75 = v122;
        goto LABEL_35;
      }
    }
  }
  swift_release();
  unint64_t v75 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_35:
  if (!(v75 >> 62))
  {
    if (*(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_37;
    }
LABEL_41:
    uint64_t v76 = 0;
    goto LABEL_42;
  }
  swift_bridgeObjectRetain();
  uint64_t v77 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v77) {
    goto LABEL_41;
  }
LABEL_37:
  if ((v75 & 0xC000000000000001) != 0)
  {
    uint64_t v76 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_42;
  }
  if (*(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v76 = *(void *)(v75 + 32);
    swift_retain();
LABEL_42:
    uint64_t v78 = v123;
    swift_retain();
    unint64_t v79 = swift_bridgeObjectRetain();
    uint64_t v80 = sub_1000B111C(v79);
    swift_bridgeObjectRelease();
    uint64_t v81 = swift_allocObject();
    swift_unknownObjectWeakInit();
    Swift::String v82 = (void *)swift_allocObject();
    uint64_t v84 = v109;
    uint64_t v83 = v110;
    v82[2] = v81;
    v82[3] = v84;
    v82[4] = v83;
    swift_bridgeObjectRetain();
    sub_1000AEE6C(0, 1, (uint64_t)sub_100023580, (uint64_t)v82);
    swift_release();
    uint64_t v85 = v88;
    sub_10002A110(v84, v83, v78, v80, v75, v76, v88, (uint64_t)&unk_10020F718, (uint64_t)sub_1000BB7F8, (uint64_t)sub_1000AF460, v87, v88, v89, v90, v91, (uint64_t)v92, (uint64_t)v93, (uint64_t)v94, v95,
      (uint64_t)v96,
      v97,
      *((void (**)(void, uint64_t, uint64_t, uint64_t))&v97 + 1));
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v85, v90);
    return v78;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_1000B4304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for LogMessage();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v89[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = &v89[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (char *)Strong;
    long long v102 = 0u;
    long long v103 = 0u;
    long long v100 = 0u;
    long long v101 = 0u;
    long long v99 = 0u;
    BOOL v17 = sub_1000B3318((uint64_t)&v99);
    uint64_t v18 = *(void *)&v16[OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseToken + 8];
    uint64_t v93 = (uint64_t *)&v16[OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseToken];
    if (!v18)
    {
LABEL_8:
      BOOL v90 = v17;
      *((void *)&v92 + 1) = a3;
      if (qword_10022C498 != -1) {
        swift_once();
      }
      *(void *)&long long v92 = a2;
      uint64_t v91 = qword_100244100;
      sub_100043478(&qword_10022E560);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3FC0;
      *((void *)&v98 + 1) = swift_getMetatypeMetadata();
      *(void *)&long long v97 = a4;
      id v27 = (id)AMSLogKey();
      if (v27)
      {
        Swift::String v28 = v27;
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v31 = v30;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v32._countAndFlagsBits = 0;
        v32._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v32);
        sub_100049788(&v97, *((uint64_t *)&v98 + 1));
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v94 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v94, &qword_10022F490);
        v34._countAndFlagsBits = 5972026;
        v34._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v34);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v94 = v29;
        uint64_t v95 = v31;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v94, &qword_10022F490);
        v35._countAndFlagsBits = 93;
        v35._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v35);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v58._countAndFlagsBits = 0;
        v58._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v58);
        sub_100049788(&v97, *((uint64_t *)&v98 + 1));
        uint64_t v59 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v94 = v59;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v94, &qword_10022F490);
        v60._countAndFlagsBits = 58;
        v60._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v60);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v97);
      *((void *)&v98 + 1) = &type metadata for String;
      *(void *)&long long v97 = 0xD000000000000018;
      *((void *)&v97 + 1) = 0x80000001001CD9B0;
      static LogMessage.safe(_:)();
      sub_100027BD8((uint64_t)&v97, &qword_10022F490);
      LogMessage.init(stringLiteral:)();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v61._countAndFlagsBits = 0xD000000000000015;
      v61._object = (void *)0x80000001001CD9F0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v61);
      uint64_t v62 = v93[1];
      if (v62)
      {
        uint64_t v63 = *v93;
        *((void *)&v98 + 1) = &type metadata for String;
        *(void *)&long long v97 = v63;
        *((void *)&v97 + 1) = v62;
      }
      else
      {
        long long v97 = 0u;
        long long v98 = 0u;
      }
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v97, &qword_10022F490);
      v64._countAndFlagsBits = 0xD000000000000013;
      v64._object = (void *)0x80000001001CDA10;
      LogMessage.StringInterpolation.appendLiteral(_:)(v64);
      *((void *)&v98 + 1) = &type metadata for Bool;
      LOBYTE(v97) = v90;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v97, &qword_10022F490);
      v65._countAndFlagsBits = 0x3A6E656B6F74202CLL;
      v65._object = (void *)0xE900000000000020;
      LogMessage.StringInterpolation.appendLiteral(_:)(v65);
      *((void *)&v98 + 1) = &type metadata for String;
      long long v97 = v92;
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v97, &qword_10022F490);
      v66._countAndFlagsBits = 41;
      v66._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v66);
      LogMessage.init(stringInterpolation:)();
      uint64_t v67 = static os_log_type_t.debug.getter();
      sub_10004841C(v67);
      swift_bridgeObjectRelease();

      return;
    }
    if (*(void *)&v16[OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseToken] == a2 && v18 == a3)
    {
      if (v17) {
        goto LABEL_8;
      }
    }
    else
    {
      *((void *)&v92 + 1) = v14;
      uint64_t v20 = a4;
      uint64_t v21 = v16;
      uint64_t v22 = v8;
      uint64_t v23 = v10;
      uint64_t v24 = v7;
      BOOL v25 = v17;
      char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
      BOOL v17 = v25;
      uint64_t v7 = v24;
      uint64_t v10 = v23;
      uint64_t v8 = v22;
      uint64_t v16 = v21;
      a4 = v20;
      if (v17 || (v26 & 1) == 0) {
        goto LABEL_8;
      }
    }
    sub_100043478(&qword_10022E560);
    uint64_t v45 = *(void *)(v8 + 72);
    unint64_t v46 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_1001C3130;
    *(void *)&long long v92 = v46;
    *((void *)&v98 + 1) = type metadata accessor for EngagementService();
    *(void *)&long long v97 = v16;
    *((void *)&v92 + 1) = v16;
    id v48 = (id)AMSLogKey();
    if (v48)
    {
      id v49 = v48;
      uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v91 = v45;
      uint64_t v51 = v50;
      uint64_t v53 = v52;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v54._countAndFlagsBits = 0;
      v54._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v54);
      sub_100049788(&v97, *((uint64_t *)&v98 + 1));
      uint64_t v55 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v94 = v55;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v94, &qword_10022F490);
      v56._countAndFlagsBits = 5972026;
      v56._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v56);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v94 = v51;
      uint64_t v45 = v91;
      uint64_t v95 = v53;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v94, &qword_10022F490);
      v57._countAndFlagsBits = 93;
      v57._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v57);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v72._countAndFlagsBits = 0;
      v72._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v72);
      sub_100049788(&v97, *((uint64_t *)&v98 + 1));
      uint64_t v73 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v94 = v73;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v94, &qword_10022F490);
      v74._countAndFlagsBits = 58;
      v74._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v74);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v97);
    *((void *)&v98 + 1) = &type metadata for String;
    *(void *)&long long v97 = 0xD000000000000018;
    *((void *)&v97 + 1) = 0x80000001001CD9B0;
    static LogMessage.safe(_:)();
    sub_100027BD8((uint64_t)&v97, &qword_10022F490);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C498 != -1) {
      swift_once();
    }
    uint64_t v75 = qword_100244100;
    os_log_type_t v76 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(*(os_log_t *)(v75 + 16), v76))
    {
      *(void *)&long long v97 = 0;
      *((void *)&v97 + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(45);
      swift_bridgeObjectRelease();
      *(void *)&long long v97 = 0xD000000000000015;
      *((void *)&v97 + 1) = 0x80000001001CD9F0;
      if (v93[1])
      {
        uint64_t v77 = *v93;
        uint64_t v78 = (void *)v93[1];
      }
      else
      {
        uint64_t v78 = (void *)0xE400000000000000;
        uint64_t v77 = 1701736302;
      }
      swift_bridgeObjectRetain();
      v79._countAndFlagsBits = v77;
      v79._object = v78;
      String.append(_:)(v79);
      swift_bridgeObjectRelease();
      v80._countAndFlagsBits = 0xD000000000000013;
      v80._object = (void *)0x80000001001CDA10;
      String.append(_:)(v80);
      v81._countAndFlagsBits = 0x65736C6166;
      v81._object = (void *)0xE500000000000000;
      String.append(_:)(v81);
      v82._countAndFlagsBits = 41;
      v82._object = (void *)0xE100000000000000;
      String.append(_:)(v82);
      *((void *)&v98 + 1) = &type metadata for String;
      static LogMessage.safe(_:)();
      sub_100027BD8((uint64_t)&v97, &qword_10022F490);
      unint64_t v84 = *(void *)(v47 + 16);
      unint64_t v83 = *(void *)(v47 + 24);
      if (v84 >= v83 >> 1) {
        uint64_t v47 = sub_100070E40(v83 > 1, v84 + 1, 1, v47);
      }
      *(void *)(v47 + 16) = v84 + 1;
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v8 + 32))(v47 + v92 + v84 * v45, v10, v7);
    }
    uint64_t v85 = *(NSObject **)(qword_100244100 + 16);
    os_log_type_t v86 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = static os_log_type_t.default.getter();
      swift_bridgeObjectRetain();
      sub_10004841C(v87);
      swift_bridgeObjectRelease();
    }
    uint64_t v88 = (void *)*((void *)&v92 + 1);
    sub_100054278(0, 0, 0, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_10022C498 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    *((void *)&v100 + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v99 = a4;
    id v36 = (id)AMSLogKey();
    if (v36)
    {
      uint64_t v37 = v36;
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v40 = v39;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v41._countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      sub_100049788(&v99, *((uint64_t *)&v100 + 1));
      uint64_t v42 = swift_getDynamicType();
      *((void *)&v98 + 1) = swift_getMetatypeMetadata();
      *(void *)&long long v97 = v42;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v97, &qword_10022F490);
      v43._countAndFlagsBits = 5972026;
      v43._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      *((void *)&v98 + 1) = &type metadata for String;
      *(void *)&long long v97 = v38;
      *((void *)&v97 + 1) = v40;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v97, &qword_10022F490);
      v44._countAndFlagsBits = 93;
      v44._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v44);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v68._countAndFlagsBits = 0;
      v68._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v68);
      sub_100049788(&v99, *((uint64_t *)&v100 + 1));
      uint64_t v69 = swift_getDynamicType();
      *((void *)&v98 + 1) = swift_getMetatypeMetadata();
      *(void *)&long long v97 = v69;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v97, &qword_10022F490);
      v70._countAndFlagsBits = 58;
      v70._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v70);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v99);
    LogMessage.init(stringLiteral:)();
    uint64_t v71 = static os_log_type_t.default.getter();
    sub_10004841C(v71);
    swift_bridgeObjectRelease();
  }
}

void sub_1000B4F88()
{
  sub_1000209F4();
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  v48[1] = (char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self buildVersion];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  uint64_t v8 = (void **)sub_100078E48();
  uint64_t v9 = (char *)v8[2];
  uint64_t v10 = OBJC_IVAR____TtC14amsengagementd17EngagementService_appDefaultsProvider;
  id v49 = v0;
  if (v9)
  {
    unint64_t v11 = 0;
    uint64_t v12 = &v0[v10];
    uint64_t v53 = &v66;
    Swift::String v54 = (_UNKNOWN **)(v8 + 4);
    uint64_t v52 = v9;
    uint64_t v50 = v9 - 1;
    uint64_t v51 = _swiftEmptyArrayStorage;
    do
    {
      unint64_t v13 = v11;
      while (1)
      {
        if (v13 >= (unint64_t)v8[2])
        {
          __break(1u);
          goto LABEL_42;
        }
        uint64_t v14 = v8;
        char v15 = *((unsigned char *)v54 + v13);
        unint64_t v11 = v13 + 1;
        sub_100049788(v12, *((void *)v12 + 3));
        sub_100081BB4((uint64_t)v59);
        sub_100024E38((uint64_t)v59, (uint64_t)v60, &qword_10022E068);
        if (!*(void *)&v60[0]) {
          break;
        }
        long long v64 = v60[1];
        long long v65 = v61;
        long long v63 = v60[0];
        uint64_t v66 = v62;
        long long v16 = v61;
        uint64_t v67 = *(void *)&v60[0];
        sub_1000BC204((uint64_t)&v67);
        sub_100024E38((uint64_t)v53, (uint64_t)v68, &qword_10022E040);
        sub_1000BC204((uint64_t)v68);
        if (!*((void *)&v16 + 1)) {
          break;
        }
        if ((void)v16 == v5 && *((void *)&v16 + 1) == v7)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0) {
            break;
          }
        }
        ++v13;
        uint64_t v8 = v14;
        if (v52 == (char *)v11) {
          goto LABEL_23;
        }
      }
      id v19 = v51;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v57[0] = v19;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100073524(0, v19[2] + 1, 1);
        id v19 = (void *)v57[0];
      }
      unint64_t v22 = v19[2];
      unint64_t v21 = v19[3];
      uint64_t v23 = (void *)(v22 + 1);
      if (v22 >= v21 >> 1)
      {
        uint64_t v51 = (void *)(v22 + 1);
        sub_100073524((char *)(v21 > 1), v22 + 1, 1);
        uint64_t v23 = v51;
        id v19 = (void *)v57[0];
      }
      void v19[2] = v23;
      uint64_t v51 = v19;
      *((unsigned char *)v19 + v22 + 32) = v15;
      uint64_t v8 = v14;
    }
    while (v50 != (char *)v13);
  }
  else
  {
    uint64_t v51 = _swiftEmptyArrayStorage;
  }
LABEL_23:
  swift_bridgeObjectRelease();
  uint64_t v8 = (void **)v49;

  swift_bridgeObjectRelease();
  if (v51[2])
  {
    if (qword_10022C498 != -1) {
LABEL_42:
    }
      swift_once();
    uint64_t v24 = qword_100244100;
    sub_100043478(&qword_10022E560);
    uint64_t v25 = sub_10002D318();
    sub_100044798(v25);
    *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
    uint64_t v58 = type metadata accessor for EngagementService();
    v57[0] = v8;
    v8;
    id v26 = (id)AMSLogKey();
    if (v26)
    {
      id v27 = v26;
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;

      swift_bridgeObjectRetain();
      Swift::String v54 = (_UNKNOWN **)v24;
      sub_100020F60();
      v31._countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      sub_100049788(v57, v58);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v55[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v55, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      v55[0] = v28;
      v55[1] = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v55, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      sub_100049788(v57, v58);
      uint64_t v33 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v55[0] = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v55, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v57);
    LogMessage.init(stringLiteral:)();
    uint64_t v34 = static os_log_type_t.info.getter();
    sub_10004841C(v34);
    swift_bridgeObjectRelease();
    id v35 = [objc_allocWithZone((Class)AMSEngagementSyncRequest) init];
    uint64_t v36 = v51[2];
    if (v36)
    {
      v57[0] = _swiftEmptyArrayStorage;
      uint64_t v37 = sub_10002DA84();
      sub_100027304(v37, v38, v39);
      uint64_t v40 = v51;
      uint64_t v41 = 0;
      uint64_t v42 = (void *)v57[0];
      do
      {
        unint64_t v43 = 0xE900000000000073;
        uint64_t v44 = 0x636974796C616E61;
        switch(*((unsigned char *)v40 + v41 + 32))
        {
          case 1:
            unint64_t v43 = 0xE800000000000000;
            uint64_t v44 = 0x6C616E7265746E69;
            break;
          case 2:
            unint64_t v43 = 0xE800000000000000;
            uint64_t v44 = 0x7379656E72756F6ALL;
            break;
          case 3:
            unint64_t v43 = 0xEF736E6F69746164;
            uint64_t v44 = 0x6E656D6D6F636572;
            break;
          default:
            break;
        }
        v57[0] = v42;
        unint64_t v46 = v42[2];
        unint64_t v45 = v42[3];
        if (v46 >= v45 >> 1)
        {
          sub_100027304(v45 > 1, v46 + 1, 1);
          uint64_t v40 = v51;
          uint64_t v42 = (void *)v57[0];
        }
        ++v41;
        _OWORD v42[2] = v46 + 1;
        uint64_t v47 = &v42[2 * v46];
        v47[4] = v44;
        v47[5] = v43;
      }
      while (v36 != v41);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v42 = _swiftEmptyArrayStorage;
    }
    sub_1000AE198((uint64_t)v42, v35);
    sub_1000B0CFC();
  }
  swift_release();
  sub_100020FDC();
}

BOOL sub_1000B55FC()
{
  uint64_t v1 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10002257C();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v12 - v6;
  sub_1000792E4((uint64_t)&v12 - v6);
  static Date.now.getter();
  Date.timeIntervalSince(_:)();
  double v9 = v8;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v10(v0, v1);
  v10((uint64_t)v7, v1);
  return v9 <= 60.0;
}

void sub_1000B56F0(uint64_t a1)
{
  uint64_t v3 = sub_100043478(&qword_1002344F0);
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_10004A85C();
  type metadata accessor for Defaults();
  if (sub_1000A38A0(5) && (sub_100043478(&qword_10022D9C0), swift_dynamicCast()))
  {
    uint64_t v5 = v16;
  }
  else
  {
    type metadata accessor for Date();
    uint64_t v5 = Dictionary.init(dictionaryLiteral:)();
  }
  uint64_t v17 = v5;
  uint64_t v6 = *(unsigned __int8 *)(a1 + 1);
  uint64_t v7 = 0xE900000000000073;
  uint64_t v8 = 0x636974796C616E61;
  switch(v6)
  {
    case 1:
      uint64_t v7 = 0xE800000000000000;
      uint64_t v8 = 0x6C616E7265746E69;
      break;
    case 2:
      uint64_t v7 = 0xE800000000000000;
      uint64_t v8 = 0x7379656E72756F6ALL;
      break;
    case 3:
      uint64_t v7 = 0xEF736E6F69746164;
      uint64_t v8 = 0x6E656D6D6F636572;
      break;
    default:
      break;
  }
  Date.init()();
  uint64_t v9 = type metadata accessor for Date();
  sub_100021AC0(v1, 0, 1, v9);
  sub_100088538(v1, v8, v7, v10, v11, v12, v13, v14, v16, v17, v18, v19, v20, v21, v22, v23, vars0, vars8);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_1000A3990(isa, 5);
}

uint64_t sub_1000B58F4(uint64_t a1)
{
  uint64_t v3 = sub_100043478(&qword_10022D340);
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  uint64_t v5 = type metadata accessor for TaskPriority();
  sub_100021AC0(v1, 1, 1, v5);
  uint64_t v6 = (void *)sub_100011D64();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = a1;
  int v7 = sub_10004FD40(v1, 1, v5);
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    sub_100027BD8(v1, &qword_10022D340);
  }
  else
  {
    TaskPriority.rawValue.getter();
    sub_1000456E0();
    sub_100043FB0();
    v8();
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      dispatch thunk of Actor.unownedExecutor.getter();
      swift_unknownObjectRelease();
    }
  }
  uint64_t v9 = sub_100035CB8();
  *(void *)(v9 + 16) = &unk_10022F180;
  *(void *)(v9 + 24) = v6;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1000B5AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 56) = a4;
  return _swift_task_switch(sub_1000B5AF0, 0, 0);
}

uint64_t sub_1000B5AF0()
{
  sub_100020958();
  if (qword_10022C410 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  void *v1 = v0;
  v1[1] = sub_1000B5BB8;
  return sub_1000A3E7C();
}

uint64_t sub_1000B5BB8()
{
  sub_100020958();
  sub_1000447B0();
  *(void *)(v1 + 72) = v0;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000B5C90, 0, 0);
}

uint64_t sub_1000B5C90()
{
  id v1 = objc_msgSend(self, "ams_sharedAccountStore");
  id v2 = objc_msgSend(v1, "ams_activeiTunesAccount");

  uint64_t v3 = type metadata accessor for SystemEngagementPerformer();
  uint64_t v4 = swift_allocObject();
  v0[5] = v3;
  v0[6] = &off_1002170C8;
  v0[2] = v4;
  type metadata accessor for SystemEngagementAction();
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = sub_10003660C((uint64_t)(v0 + 2), v3);
  uint64_t v7 = *(void *)(v3 - 8);
  uint64_t v8 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v3);
  uint64_t v9 = *v8;
  v5[6] = v3;
  v5[7] = &off_1002170C8;
  v5[2] = v2;
  v5[3] = v9;
  sub_10004377C((uint64_t)(v0 + 2));
  swift_task_dealloc();
  sub_10018669C();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100040954();
  return v10();
}

void sub_1000B5E40()
{
}

id sub_1000B5E80()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EngagementService();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000B5F6C()
{
  sub_100020958();
  v0[6] = v1;
  v0[7] = v2;
  v0[4] = v3;
  v0[5] = v4;
  v0[2] = v5;
  v0[3] = v6;
  uint64_t v7 = type metadata accessor for ContentInfo();
  v0[8] = v7;
  sub_100044798(v7);
  v0[9] = v8;
  v0[10] = swift_task_alloc();
  return _swift_task_switch(sub_1000B600C, 0, 0);
}

uint64_t sub_1000B600C()
{
  swift_bridgeObjectRetain();
  v49._countAndFlagsBits = sub_100022570();
  char v1 = sub_10003227C(v49);
  if (v1 == 4)
  {
    sub_10002064C();
    NSString v2 = String._bridgeToObjectiveC()();
    sub_10002064C();
    NSString v3 = String._bridgeToObjectiveC()();
    (id)AMSError();

    swift_willThrow();
    swift_task_dealloc();
    sub_100040954();
    sub_100017EAC();
    __asm { BRAA            X1, X16 }
  }
  char v6 = v1;
  type metadata accessor for ContentManager();
  *(unsigned char *)(swift_allocObject() + 16) = v6;
  sub_100011DF0();
  sub_1000995B4();
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    sub_100017EAC();
    __asm { BRAA            X2, X16 }
  }
  uint64_t v10 = v0[8];
  uint64_t v9 = v0[9];
  uint64_t v11 = _swiftEmptyDictionarySingleton;
  uint64_t v12 = v7 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v45 = *(void *)(v9 + 72);
  uint64_t v46 = v10;
  while (1)
  {
    uint64_t v13 = v0[10];
    sub_100092730(v12, v13);
    id v14 = [objc_allocWithZone((Class)AMSContentInfo) init];
    sub_100022570();
    NSString v15 = String._bridgeToObjectiveC()();
    sub_1000BC514((uint64_t)v15, "setCacheKey:");

    Class isa = Date._bridgeToObjectiveC()().super.isa;
    sub_1000BC514((uint64_t)isa, "setCreated:");

    Class v17 = Date._bridgeToObjectiveC()().super.isa;
    sub_1000BC514((uint64_t)v17, "setExpires:");

    uint64_t v47 = v8;
    if (*(void *)(v13 + *(int *)(v10 + 36) + 8))
    {
      swift_bridgeObjectRetain();
      sub_100021A68();
      NSString v19 = String._bridgeToObjectiveC()();
      uint64_t v18 = swift_bridgeObjectRelease();
    }
    else
    {
      NSString v19 = 0;
    }
    uint64_t v20 = v0[10];
    sub_1000BC514(v18, "setPath:");

    uint64_t v21 = (uint64_t *)(v20 + *(int *)(v10 + 48));
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    swift_bridgeObjectRetain();
    NSString v24 = String._bridgeToObjectiveC()();
    uint64_t v25 = swift_bridgeObjectRelease();
    sub_1000BC514(v25, "setVersion:");

    swift_bridgeObjectRetain();
    id v26 = v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v48 = v11;
    uint64_t result = sub_100042ADC(v23, v22);
    uint64_t v30 = v11[2];
    BOOL v31 = (v29 & 1) == 0;
    Swift::Int v32 = v30 + v31;
    if (__OFADD__(v30, v31)) {
      break;
    }
    unint64_t v33 = result;
    char v34 = v29;
    sub_100043478(&qword_10022F170);
    uint64_t result = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v32);
    uint64_t v11 = v48;
    if (result)
    {
      uint64_t result = sub_100042ADC(v23, v22);
      if ((v34 & 1) != (v35 & 1))
      {
        sub_100017EAC();
        return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      }
      unint64_t v33 = result;
    }
    if (v34)
    {
      uint64_t v36 = v48[7];

      *(void *)(v36 + 8 * v33) = v26;
    }
    else
    {
      v48[(v33 >> 6) + 8] |= 1 << v33;
      uint64_t v37 = (uint64_t *)(v48[6] + 16 * v33);
      *uint64_t v37 = v23;
      v37[1] = v22;
      *(void *)(v48[7] + 8 * v33) = v26;
      uint64_t v38 = v48[2];
      BOOL v39 = __OFADD__(v38, 1);
      uint64_t v40 = v38 + 1;
      if (v39) {
        goto LABEL_26;
      }
      void v48[2] = v40;
      swift_bridgeObjectRetain();
    }
    uint64_t v41 = v0[10];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_10007CDA8(v41);
    uint64_t v10 = v46;
    v12 += v45;
    uint64_t v8 = v47 - 1;
    if (v47 == 1) {
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1000B6514(int a1, int a2, uint64_t a3, void *aBlock, void *a5)
{
  v5[2] = a5;
  v5[3] = _Block_copy(aBlock);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v5[4] = v8;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v5[5] = v9;
  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v11 = 0;
  }
  v5[6] = v11;
  id v12 = a5;
  uint64_t v13 = (void *)swift_task_alloc();
  v5[7] = v13;
  *uint64_t v13 = v5;
  v13[1] = sub_1000B6640;
  return sub_1000B5F6C();
}

uint64_t sub_1000B6640()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  sub_100020EBC();
  *uint64_t v5 = v4;
  char v6 = *(void **)(v3 + 16);
  uint64_t v7 = *v1;
  *uint64_t v5 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v8 = _convertErrorToNSError(_:)();
    swift_errorRelease();
    Class isa = 0;
    uint64_t v10 = (void *)v8;
  }
  else
  {
    sub_10004D510(0, &qword_10022F168);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v8 = 0;
    uint64_t v10 = isa;
  }
  uint64_t v11 = *(void (***)(void, void, void))(v4 + 24);
  ((void (**)(void, Class, uint64_t))v11)[2](v11, isa, v8);

  _Block_release(v11);
  id v12 = *(uint64_t (**)(void))(v7 + 8);
  return v12();
}

uint64_t sub_1000B6878(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (uint64_t *)(a3 + 16);
  char v6 = (uint64_t *)(a4 + 16);
  uint64_t v8 = a1;
  swift_errorRetain();
  [a2 lock];
  sub_1000B68F0(&v8, v5, v6);
  [a2 unlock];
  return swift_willThrow();
}

uint64_t sub_1000B68F0(void *a1, uint64_t *a2, uint64_t *a3)
{
  swift_errorRetain();
  char v6 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  sub_100043478((uint64_t *)&unk_10022E570);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3120;
  AnyHashable.init<A>(_:)();
  swift_beginAccess();
  uint64_t v8 = *a2;
  *(void *)(inited + 96) = sub_100043478(&qword_10022F138);
  *(void *)(inited + 72) = v8;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  swift_beginAccess();
  uint64_t v10 = *a3;
  uint64_t v9 = a3[1];
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 144) = v10;
  *(void *)(inited + 152) = v9;
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v6, "ams_errorByAddingUserInfo:", isa, 0x74616E6974736564, 0xEB000000006E6F69);

  *a1 = v12;
  return swift_errorRelease();
}

uint64_t sub_1000B6ADC()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = sub_100009F68;
  *(void *)(v1 + 24) = v0;
  swift_retain_n();
  sub_10004D400();
  swift_release();
  swift_release();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = j_j___s9JetEngine7PromiseC6rejectyys5Error_pF;
  *(void *)(v2 + 24) = v0;
  swift_retain_n();
  sub_10004D400();
  swift_release();
  return swift_release();
}

uint64_t sub_1000B6C0C()
{
  sub_1000BC4E0();
  uint64_t v1 = sub_100035CB8();
  *(void *)(v1 + 16) = j___s9JetEngine7PromiseC7resolveyyxF;
  *(void *)(v1 + 24) = v0;
  sub_100040AA0();
  sub_100011D34();
  swift_release();
  swift_release();
  uint64_t v2 = sub_100035CB8();
  *(void *)(v2 + 16) = j___s9JetEngine7PromiseC6rejectyys5Error_pF;
  *(void *)(v2 + 24) = v0;
  sub_100040AA0();
  sub_100036A7C();
  swift_release();
  return swift_release();
}

uint64_t sub_1000B6D08()
{
  sub_1000BC4E0();
  uint64_t v1 = sub_100035CB8();
  *(void *)(v1 + 16) = sub_1000BBAEC;
  *(void *)(v1 + 24) = v0;
  sub_100040AA0();
  sub_100011D34();
  swift_release();
  swift_release();
  uint64_t v2 = sub_100035CB8();
  *(void *)(v2 + 16) = j_j___s9JetEngine7PromiseC6rejectyys5Error_pF;
  *(void *)(v2 + 24) = v0;
  sub_100040AA0();
  sub_100036A7C();
  swift_release();
  return swift_release();
}

uint64_t sub_1000B6E04()
{
  sub_1000BC4E0();
  uint64_t v1 = sub_100035CB8();
  *(void *)(v1 + 16) = sub_100009F68;
  *(void *)(v1 + 24) = v0;
  sub_100040AA0();
  sub_100011D34();
  swift_release();
  swift_release();
  uint64_t v2 = sub_100035CB8();
  *(void *)(v2 + 16) = j_j___s9JetEngine7PromiseC6rejectyys5Error_pF;
  *(void *)(v2 + 24) = v0;
  sub_100040AA0();
  sub_100036A7C();
  swift_release();
  return swift_release();
}

uint64_t sub_1000B6F00()
{
  sub_1000BC4E0();
  uint64_t v1 = sub_100035CB8();
  *(void *)(v1 + 16) = sub_100009F68;
  *(void *)(v1 + 24) = v0;
  sub_100040AA0();
  sub_100011D34();
  swift_release();
  swift_release();
  uint64_t v2 = sub_100035CB8();
  *(void *)(v2 + 16) = j_j___s9JetEngine7PromiseC6rejectyys5Error_pF;
  *(void *)(v2 + 24) = v0;
  sub_100040AA0();
  sub_100036A7C();
  swift_release();
  return swift_release();
}

uint64_t sub_1000B6FFC()
{
  sub_1000BC4E0();
  uint64_t v1 = sub_100035CB8();
  *(void *)(v1 + 16) = sub_100009F68;
  *(void *)(v1 + 24) = v0;
  sub_100040AA0();
  sub_100011D34();
  swift_release();
  swift_release();
  uint64_t v2 = sub_100035CB8();
  *(void *)(v2 + 16) = j_j___s9JetEngine7PromiseC6rejectyys5Error_pF;
  *(void *)(v2 + 24) = v0;
  sub_100040AA0();
  sub_100036A7C();
  swift_release();
  return swift_release();
}

uint64_t sub_1000B70F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10002DA84();
    sub_1000732A8();
    uint64_t v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v4 = *v3;
      sub_100043478(&qword_10022D330);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1001C3130;
      *(void *)(inited + 32) = 0x656372756F73;
      *(void *)(inited + 40) = 0xE600000000000000;
      strcpy((char *)(inited + 48), "amsengagementd");
      *(unsigned char *)(inited + 63) = -18;
      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 80) = 0x707954746E657665;
      *(void *)(inited + 88) = 0xE900000000000065;
      *(void *)(inited + 96) = 0xD000000000000013;
      *(void *)(inited + 104) = 0x80000001001CD7D0;
      *(void *)(inited + 120) = &type metadata for String;
      *(void *)(inited + 128) = 0x696669746E656469;
      *(void *)(inited + 168) = &type metadata for String;
      *(void *)(inited + 136) = 0xEA00000000007265;
      *(void *)(inited + 144) = v5;
      *(void *)(inited + 152) = v4;
      swift_bridgeObjectRetain();
      uint64_t v7 = Dictionary.init(dictionaryLiteral:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1000732A8();
      }
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1)
      {
        sub_1000A2948(v8);
        sub_1000732A8();
      }
      v3 += 2;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      _swiftEmptyArrayStorage[v9 + 4] = v7;
      --v1;
    }
    while (v1);
  }
  id v10 = [objc_allocWithZone((Class)AMSEngagementEnqueueRequest) init];
  sub_100043478(&qword_100231DE0);
  uint64_t v11 = sub_100011D64();
  *(_OWORD *)(v11 + 16) = xmmword_1001C4B80;
  sub_10004D510(0, &qword_10022EC18);
  *(void *)(v11 + 32) = sub_1000BC5A4();
  specialized Array._endMutation()();
  sub_1000BD0F4(v11, v10);
  id v12 = sub_1000F1274((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  sub_1000BD07C((uint64_t)v12, v10);
  if (qword_10022C430 != -1) {
    swift_once();
  }
  sub_100017BD0();

  return swift_release();
}

void sub_1000B7438(void *a1, uint64_t a2, void *a3)
{
  sub_100027C50(a1);
  if (v5)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }

  if ([self isBuddyRunning])
  {
    NSString v7 = String._bridgeToObjectiveC()();
    NSString v8 = String._bridgeToObjectiveC()();
    id v18 = (id)AMSError();

    Promise.reject(_:)();
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = Dictionary.init(dictionaryLiteral:)();
    id v10 = [objc_allocWithZone((Class)NSLock) init];
    char v11 = sub_1000B3238() & 1;
    id v12 = sub_1000B185C(a1, v11);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a3;
    *(void *)(v13 + 24) = v10;
    *(void *)(v13 + 32) = v9;
    *(unsigned char *)(v13 + 40) = v11;
    *(void *)(v13 + 48) = a1;
    id v14 = a3;
    id v18 = v10;
    swift_retain();
    id v15 = a1;
    sub_1000B35AC((uint64_t)v12, (uint64_t)sub_1000BB770, v13);
    uint64_t v17 = v16;
    swift_release();
    swift_bridgeObjectRelease();
    if (!v17)
    {
      void v19[3] = type metadata accessor for SyncTaskScheduler();
      v19[4] = (uint64_t)&protocol witness table for SyncTaskScheduler;
      sub_10003BAA4(v19);
      SyncTaskScheduler.init()();
      sub_10004D510(0, (unint64_t *)&qword_10022F0C8);
      Promise.map<A>(on:_:)();
      sub_10004377C((uint64_t)v19);
      sub_1000B6ADC();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();

      return;
    }
    swift_retain();
    sub_1000B6ADC();
    swift_release();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000B7778(unsigned char *a1, void *a2, void *a3, uint64_t a4, char a5, void *a6)
{
  id v110 = a2;
  uint64_t v11 = type metadata accessor for OSSignposter();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v108 = v11;
  uint64_t v109 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v107 = &v92[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  Swift::String v105 = &v92[-v15];
  uint64_t v16 = type metadata accessor for OSSignpostID();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v106 = &v92[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  uint64_t v21 = &v92[-v20];
  uint64_t v22 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v22 - 8);
  if (sub_1000B55FC())
  {
    sub_100043478(&qword_10022F0C0);
    NSString v23 = String._bridgeToObjectiveC()();
    NSString v24 = String._bridgeToObjectiveC()();
    id v25 = (id)AMSError();

    return Promise.__allocating_init(error:)();
  }
  else
  {
    long long v99 = a6;
    long long v103 = v21;
    uint64_t v101 = a4;
    sub_1000B56F0((uint64_t)a1);
    unint64_t v27 = 0xE000000000000000;
    uint64_t v114 = 0;
    unint64_t v115 = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    if (*a1) {
      uint64_t v28 = 3041653;
    }
    else {
      uint64_t v28 = 0;
    }
    if (*a1) {
      unint64_t v27 = 0xE300000000000000;
    }
    unint64_t v29 = v27;
    String.append(_:)(*(Swift::String *)&v28);
    swift_bridgeObjectRelease();
    v30._countAndFlagsBits = 0x656D656761676E65;
    v30._object = (void *)0xEF636E79732E746ELL;
    String.append(_:)(v30);
    uint64_t v31 = v114;
    uint64_t v32 = v115;
    [a3 lock];
    swift_beginAccess();
    uint64_t v98 = v31;
    uint64_t v97 = v32;
    sub_1000258D8(0xD000000000000013, 0x80000001001CD480, v31, v32);
    swift_endAccess();
    [a3 unlock];
    uint64_t v104 = v17;
    uint64_t v102 = v16;
    long long v100 = a3;
    if (a5)
    {
      if (qword_10022C498 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v116 = type metadata accessor for EngagementService();
      uint64_t v114 = (uint64_t)v110;
      id v33 = v110;
      id v34 = (id)AMSLogKey();
      if (v34)
      {
        char v35 = v34;
        uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v38 = v37;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v39._countAndFlagsBits = 0;
        v39._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v39);
        sub_100049788(&v114, v116);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v111 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v111, &qword_10022F490);
        v41._countAndFlagsBits = 5972026;
        v41._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v41);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v111 = v36;
        uint64_t v112 = v38;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v111, &qword_10022F490);
        v42._countAndFlagsBits = 93;
        v42._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v42);
        LogMessage.init(stringInterpolation:)();
        uint64_t v16 = v102;
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v53._countAndFlagsBits = 0;
        v53._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v53);
        sub_100049788(&v114, v116);
        uint64_t v54 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v111 = v54;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v111, &qword_10022F490);
        v55._countAndFlagsBits = 58;
        v55._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v55);
        LogMessage.init(stringInterpolation:)();
      }
      Swift::String v56 = v103;
      sub_10004377C((uint64_t)&v114);
      LogMessage.init(stringLiteral:)();
      uint64_t v57 = static os_log_type_t.default.getter();
      sub_10004841C(v57);
      swift_bridgeObjectRelease();
      uint64_t v58 = (void *)type metadata accessor for UniversalLinksUpdater();
      sub_1001AB744(v58);
    }
    else
    {
      if (qword_10022C498 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v116 = type metadata accessor for EngagementService();
      uint64_t v114 = (uint64_t)v110;
      id v43 = v110;
      id v44 = (id)AMSLogKey();
      if (v44)
      {
        uint64_t v45 = v44;
        uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v48 = v47;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v49._countAndFlagsBits = 0;
        v49._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v49);
        sub_100049788(&v114, v116);
        uint64_t v50 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v111 = v50;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v111, &qword_10022F490);
        v51._countAndFlagsBits = 5972026;
        v51._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v51);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v111 = v46;
        uint64_t v112 = v48;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v111, &qword_10022F490);
        v52._countAndFlagsBits = 93;
        v52._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v52);
        LogMessage.init(stringInterpolation:)();
        uint64_t v16 = v102;
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v59._countAndFlagsBits = 0;
        v59._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v59);
        sub_100049788(&v114, v116);
        uint64_t v60 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v111 = v60;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v111, &qword_10022F490);
        v61._countAndFlagsBits = 58;
        v61._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v61);
        LogMessage.init(stringInterpolation:)();
      }
      Swift::String v56 = v103;
      sub_10004377C((uint64_t)&v114);
      LogMessage.init(stringLiteral:)();
      uint64_t v62 = static os_log_type_t.default.getter();
      sub_10004841C(v62);
      swift_bridgeObjectRelease();
    }
    id v63 = v110;
    sub_100025E8C();
    uint64_t v65 = v64;
    uint64_t v67 = v66;
    type metadata accessor for SyncRunner();
    swift_allocObject();
    uint64_t v68 = sub_10002ABE0(a1, v65, v67);
    sub_100025334((uint64_t)v63 + OBJC_IVAR____TtC14amsengagementd17EngagementService_appDefaultsProvider, (uint64_t)&v114);
    sub_100024E38((uint64_t)&v114, (uint64_t)&v111, &qword_10022F0F0);
    swift_beginAccess();
    uint64_t v96 = v65;
    swift_unknownObjectRetain();
    sub_10002C008((uint64_t)a1);
    sub_100025394((uint64_t)&v111, v68 + 16);
    swift_endAccess();
    uint64_t v69 = v105;
    sub_100024D7C();
    swift_retain();
    OSSignposter.logHandle.getter();
    uint64_t v95 = v68;
    OSSignpostID.init(log:object:)();
    Swift::String v70 = *(unsigned char **)(v109 + 8);
    v109 += 8;
    Swift::String v105 = v70;
    ((void (*)(unsigned char *, uint64_t))v70)(v69, v108);
    unint64_t v71 = 0xE900000000000073;
    uint64_t v72 = 0x636974796C616E61;
    uint64_t v73 = v104;
    switch(a1[1])
    {
      case 1:
        unint64_t v71 = 0xE800000000000000;
        uint64_t v72 = 0x6C616E7265746E69;
        break;
      case 2:
        unint64_t v71 = 0xE800000000000000;
        uint64_t v72 = 0x7379656E72756F6ALL;
        break;
      case 3:
        unint64_t v71 = 0xEF736E6F69746164;
        uint64_t v72 = 0x6E656D6D6F636572;
        break;
      default:
        break;
    }
    sub_100024D7C();
    swift_bridgeObjectRetain_n();
    Swift::String v74 = OSSignposter.logHandle.getter();
    int v75 = static os_signpost_type_t.begin.getter();
    char v76 = OS_os_log.signpostsEnabled.getter();
    uint64_t v94 = v72;
    if (v76)
    {
      int v93 = v75;
      uint64_t v77 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v73 + 16);
      uint64_t v78 = v106;
      v77(v106, v56, v16);
      Swift::String v79 = (uint8_t *)swift_slowAlloc();
      uint64_t v114 = swift_slowAlloc();
      *(_DWORD *)Swift::String v79 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v111 = sub_100024E94(v72, v71, &v114);
      uint64_t v73 = v104;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      os_signpost_id_t v80 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v74, (os_signpost_type_t)v93, v80, "Sync", "%s sync", v79, 0xCu);
      swift_arrayDestroy();
      Swift::String v56 = v103;
      swift_slowDealloc();
      uint64_t v81 = v102;
      swift_slowDealloc();

      uint64_t v16 = v81;
      (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v78, v81);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      uint64_t v77 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v73 + 16);
      uint64_t v78 = v106;
    }
    v77(v78, v56, v16);
    type metadata accessor for OSSignpostIntervalState();
    swift_allocObject();
    uint64_t v82 = OSSignpostIntervalState.init(id:isOpen:)();
    ((void (*)(unsigned char *, uint64_t))v105)(v107, v108);
    uint64_t v83 = sub_100184BE8(v99);
    unint64_t v84 = v56;
    uint64_t v85 = (void *)swift_allocObject();
    os_log_type_t v86 = v100;
    uint64_t v87 = v101;
    v85[2] = v100;
    v85[3] = v87;
    uint64_t v88 = v97;
    v85[4] = v98;
    v85[5] = v88;
    id v89 = v110;
    v85[6] = v110;
    v85[7] = v82;
    v85[8] = v94;
    v85[9] = v71;
    id v90 = v89;
    id v91 = v86;
    swift_retain();
    swift_retain();
    sub_1000AF460(0, 1, (uint64_t)sub_1000BBA28, (uint64_t)v85);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v84, v16);
    return v83;
  }
}

id sub_1000B84D0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)&long long v83 = a8;
  uint64_t v84 = a2;
  uint64_t v76 = type metadata accessor for OSSignpostError();
  uint64_t v75 = *(void *)(v76 - 8);
  uint64_t v14 = __chkstk_darwin(v76);
  uint64_t v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v73 - v17;
  uint64_t v80 = type metadata accessor for OSSignpostID();
  uint64_t v79 = *(void *)(v80 - 8);
  uint64_t v19 = __chkstk_darwin(v80);
  uint64_t v21 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  NSString v23 = (char *)&v73 - v22;
  uint64_t v78 = type metadata accessor for OSSignposter();
  uint64_t v77 = *(void *)(v78 - 8);
  uint64_t v24 = __chkstk_darwin(v78);
  id v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v73 - v27;
  [a3 lock];
  swift_beginAccess();
  uint64_t v82 = (uint64_t *)(a4 + 16);
  sub_1000258D8(0xD000000000000018, 0x80000001001CD730, a5, a6);
  swift_endAccess();
  id v81 = a3;
  unint64_t v29 = a3;
  uint64_t v30 = v84;
  [v29 unlock];
  if (v30)
  {
    uint64_t v31 = a9;
    swift_errorRetain();
    sub_100024D7C();
    uint64_t v32 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v33 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      uint64_t v74 = a9;
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v34 = v75;
      uint64_t v35 = v76;
      if ((*(unsigned int (**)(char *, uint64_t))(v75 + 88))(v18, v76) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v36 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v35);
        uint64_t v36 = "Failed";
      }
      id v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v43 = 0;
      os_signpost_id_t v44 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v32, v33, v44, "Sync", v36, v43, 2u);
      swift_slowDealloc();
      uint64_t v31 = v74;
    }

    (*(void (**)(char *, uint64_t))(v79 + 8))(v23, v80);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v28, v78);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    objc_allocWithZone((Class)AMSMetricsLoggingEvent);
    swift_errorRetain();
    id v45 = sub_1000BA128();
    swift_getErrorValue();
    Error.localizedDescription.getter();
    NSString v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v45 setErrorMessage:v46];

    id v47 = v81;
    [v81 lock];
    uint64_t v48 = v31;
    Swift::String v49 = v82;
    swift_beginAccess();
    uint64_t v50 = (void *)swift_bridgeObjectRetain();
    sub_1000B04C8(v50);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v45 setBreadcrumbs:isa];

    [v47 unlock];
    sub_100043478(&qword_10022D808);
    uint64_t v52 = swift_allocObject();
    long long v83 = xmmword_1001C3110;
    *(_OWORD *)(v52 + 16) = xmmword_1001C3110;
    *(void *)(v52 + 56) = &type metadata for String;
    uint64_t v53 = v48;
    *(void *)(v52 + 32) = v48;
    *(void *)(v52 + 40) = a10;
    swift_bridgeObjectRetain();
    Class v54 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v45 setEventDestinations:v54];

    Swift::String v55 = self;
    uint64_t v56 = sub_1000BAC24(v55);
    if (!v56) {
      uint64_t v56 = Dictionary.init(dictionaryLiteral:)();
    }
    uint64_t v57 = v56;
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_100012420(v53, a10, v57);
    uint64_t v60 = v59;
    swift_bridgeObjectRelease();
    if (v60)
    {
      swift_bridgeObjectRelease();
      sub_100043478((uint64_t *)&unk_10022E570);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v83;
      aBlock = (void **)v53;
      uint64_t v86 = a10;
      swift_bridgeObjectRetain();
      AnyHashable.init<A>(_:)();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 72) = v58;
      *(void *)(inited + 80) = v60;
      Dictionary.init(dictionaryLiteral:)();
    }
    else
    {
      sub_1000B0110(v57);
      swift_bridgeObjectRelease();
    }
    Class v62 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v45 setJsVersions:v62];

    id v63 = self;
    sub_10004D510(0, (unint64_t *)&qword_100232020);
    id v64 = sub_100051DF8();
    id v65 = [v63 shouldSampleErrorsWithBag:v64];

    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = v45;
    id v89 = sub_1000BBA8C;
    uint64_t v90 = v66;
    aBlock = _NSConcreteStackBlock;
    uint64_t v86 = 1107296256;
    uint64_t v87 = sub_10002CD0C;
    uint64_t v88 = &unk_10020FAF0;
    uint64_t v67 = _Block_copy(&aBlock);
    id v68 = v45;
    swift_release();
    [v65 addSuccessBlock:v67];
    _Block_release(v67);

    swift_errorRelease();
  }
  else
  {
    sub_100024D7C();
    uint64_t v37 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v38 = static os_signpost_type_t.end.getter();
    Swift::String v39 = v21;
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v40 = v75;
      uint64_t v41 = v76;
      if ((*(unsigned int (**)(char *, uint64_t))(v75 + 88))(v16, v76) == enum case for OSSignpostError.doubleEnd(_:))
      {
        Swift::String v42 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v41);
        Swift::String v42 = "Succeeded";
      }
      uint64_t v69 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v69 = 0;
      os_signpost_id_t v70 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v37, v38, v70, "Sync", v42, v69, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v79 + 8))(v39, v80);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v26, v78);
    id v47 = v81;
    Swift::String v49 = v82;
  }
  [v47 lock];
  uint64_t v71 = Dictionary.init(dictionaryLiteral:)();
  swift_beginAccess();
  *Swift::String v49 = v71;
  swift_bridgeObjectRelease();
  return [v47 unlock];
}

void sub_1000B8F70(uint64_t a1)
{
  uint64_t v2 = self;
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v3 = sub_100051DF8();
  id v4 = [v2 internalInstanceUsingBag:v3];

  [v4 enqueueEvent:a1];
}

id sub_1000B9048@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    id result = [objc_allocWithZone((Class)AMSEngagementSyncResult) init];
    id v7 = result;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  id result = (id)_CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v3 + 32);
LABEL_6:
    id v7 = v6;
    id result = (id)swift_bridgeObjectRelease();
LABEL_9:
    *a2 = v7;
    return result;
  }
  __break(1u);
  return result;
}

void sub_1000B9208()
{
  if (qword_10022C550 != -1) {
    swift_once();
  }
  sub_100138224();
}

uint64_t sub_1000B92F0(char a1, uint64_t (*a2)(void))
{
  if (qword_10022C550 != -1) {
    swift_once();
  }
  return a2(a1 & 1);
}

uint64_t sub_1000B93B4()
{
  swift_release();
  uint64_t v1 = sub_10005249C();
  return _swift_deallocObject(v1, v2, v3);
}

void sub_1000B93F4()
{
  sub_1000B7438(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_1000B9400()
{
}

uint64_t sub_1000B9430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if (qword_10022C4B0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_10001B9B4();
  uint64_t v5 = Promise.resolve(_:)();
  return a4(v5);
}

uint64_t sub_1000B94D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if (qword_10022C4B0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100011DF0();
  sub_1001094E4();
  uint64_t v5 = Promise.reject(_:)();
  return a4(v5);
}

uint64_t sub_1000B9574()
{
  return Promise.resolve(_:)();
}

uint64_t sub_1000B9598()
{
  return Promise.resolve(_:)();
}

void sub_1000B95CC()
{
  sub_10004782C();
  v1();
  if (v0)
  {
    sub_10004D568();
    swift_errorRelease();
  }
  else
  {
    Promise.resolve(_:)();
  }
}

uint64_t sub_1000B9644(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6 = type metadata accessor for JSResponse();
  sub_100020DEC();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10002D300();
  a3(a1);
  Promise.resolve(_:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v3, v6);
}

uint64_t sub_1000B971C()
{
  sub_10004782C();
  v1();
  if (v0)
  {
    sub_10004D568();
    return swift_errorRelease();
  }
  else
  {
    Promise.resolve(_:)();
    return sub_10004377C((uint64_t)v3);
  }
}

id sub_1000B9794(void *a1, uint64_t a2)
{
  [a1 lock];
  swift_beginAccess();
  uint64_t v4 = *(void (**)(char *, id))(a2 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  sub_100050578((uint64_t)v4);
  sub_10003E0EC(v5);
  id result = [a1 unlock];
  if (v4)
  {
    char v9 = 1;
    swift_retain();
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = (id)AMSError();

    v4(&v9, v8);
    sub_10003E0EC((uint64_t)v4);

    return (id)sub_10003E0EC((uint64_t)v4);
  }
  return result;
}

id sub_1000B98C8(void *a1, uint64_t a2, void (*a3)(void, uint64_t), void (*a4)(uint64_t, uint64_t))
{
  [a1 lock];
  sub_10002CAAC();
  char v9 = *(void (**)(uint64_t *, id))(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  a3(v9, v8);
  a4(v10, v11);
  id result = [a1 unlock];
  if (v9)
  {
    uint64_t v15 = 0;
    swift_retain();
    sub_10002064C();
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = (id)AMSError();

    v9(&v15, v14);
    a4((uint64_t)v9, v8);
    return (id)((uint64_t (*)(void, uint64_t))a4)(v9, v8);
  }
  return result;
}

id sub_1000B9A04(void *a1, uint64_t a2)
{
  [a1 lock];
  swift_beginAccess();
  uint64_t v4 = *(void (**)(_OWORD *, id))(a2 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  sub_100050578((uint64_t)v4);
  sub_10003E0EC(v5);
  id result = [a1 unlock];
  if (v4)
  {
    memset(v9, 0, sizeof(v9));
    swift_retain();
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = (id)AMSError();

    v4(v9, v8);
    sub_10003E0EC((uint64_t)v4);
    sub_10003E0EC((uint64_t)v4);
    return (id)sub_100027BD8((uint64_t)v9, &qword_10022F118);
  }
  return result;
}

id sub_1000B9B40(void *a1, uint64_t a2)
{
  [a1 lock];
  swift_beginAccess();
  uint64_t v4 = *(void (**)(char *, void))(a2 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  sub_100050578((uint64_t)v4);
  sub_10003E0EC(v5);
  id result = [a1 unlock];
  if (v4)
  {
    char v7 = 0;
    swift_retain();
    v4(&v7, 0);
    sub_10003E0EC((uint64_t)v4);
    return (id)sub_10003E0EC((uint64_t)v4);
  }
  return result;
}

id sub_1000B9C20(uint64_t a1, id a2, uint64_t a3)
{
  [a2 lock];
  swift_beginAccess();
  uint64_t v6 = *(void (**)(unsigned char *, void))(a3 + 16);
  swift_beginAccess();
  uint64_t v7 = *(void *)(a3 + 16);
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  sub_100050578((uint64_t)v6);
  sub_10003E0EC(v7);
  id result = [a2 unlock];
  if (v6)
  {
    sub_1000BBBF0(a1, (uint64_t)v9);
    swift_retain();
    v6(v9, 0);
    sub_10003E0EC((uint64_t)v6);
    sub_10003E0EC((uint64_t)v6);
    return (id)sub_100027BD8((uint64_t)v9, &qword_10022F118);
  }
  return result;
}

id sub_1000B9D28(uint64_t a1, id a2, uint64_t a3)
{
  [a2 lock];
  swift_beginAccess();
  uint64_t v6 = *(void (**)(char *, uint64_t))(a3 + 16);
  swift_beginAccess();
  uint64_t v7 = *(void *)(a3 + 16);
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  sub_100050578((uint64_t)v6);
  sub_10003E0EC(v7);
  id result = [a2 unlock];
  if (v6)
  {
    char v9 = 1;
    swift_retain();
    v6(&v9, a1);
    sub_10003E0EC((uint64_t)v6);
    return (id)sub_10003E0EC((uint64_t)v6);
  }
  return result;
}

void sub_1000B9E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  sub_10004C1B0();
  a27 = v33;
  a28 = v34;
  sub_10004D5B0();
  [v32 lock];
  sub_10004D1BC();
  uint64_t v35 = *(void (**)(uint64_t *, uint64_t))(v31 + 16);
  uint64_t v36 = *(void *)(v31 + 24);
  sub_1000227A4();
  uint64_t v37 = sub_10002A0FC();
  v30(v37);
  uint64_t v38 = sub_10002FDB4();
  v28(v38);
  [v32 unlock];
  if (v35)
  {
    a10 = 0;
    swift_retain();
    v35(&a10, v29);
    ((void (*)(void, uint64_t))v28)(v35, v36);
    ((void (*)(void, uint64_t))v28)(v35, v36);
  }
  sub_100020670();
}

id sub_1000B9ED4(uint64_t a1, id a2, uint64_t a3)
{
  [a2 lock];
  swift_beginAccess();
  uint64_t v6 = *(void (**)(_OWORD *, uint64_t))(a3 + 16);
  swift_beginAccess();
  uint64_t v7 = *(void *)(a3 + 16);
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  sub_100050578((uint64_t)v6);
  sub_10003E0EC(v7);
  id result = [a2 unlock];
  if (v6)
  {
    memset(v9, 0, sizeof(v9));
    swift_retain();
    v6(v9, a1);
    sub_10003E0EC((uint64_t)v6);
    sub_10003E0EC((uint64_t)v6);
    return (id)sub_100027BD8((uint64_t)v9, &qword_10022F118);
  }
  return result;
}

uint64_t sub_1000B9FD8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000BA000()
{
  swift_getErrorValue();
  sub_1000BED94(v1);
  return swift_willThrow();
}

id sub_1000BA04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithPattern:v5 options:a3 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

id sub_1000BA128()
{
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)_convertErrorToNSError(_:)();
  id v4 = [v0 initWithSubsystem:v1 category:v2 error:v3];
  swift_errorRelease();

  return v4;
}

unint64_t sub_1000BA1D4(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000BA1F8(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_100043478(&qword_10022D7B8);
      NSString v2 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      v2[2] = a1;
    }
    else
    {
      NSString v2 = _swiftEmptyArrayStorage;
    }
    sub_100043478(&qword_10022D7B8);
    return (uint64_t)v2;
  }
  return result;
}

void *sub_1000BA2E0(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
    result[2] = a1;
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_1000BA37C()
{
  return sub_1000BA43C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000707BC);
}

uint64_t sub_1000BA394()
{
  return sub_1000BA43C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100070818);
}

uint64_t sub_1000BA3AC()
{
  return sub_1000BA43C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100052734);
}

uint64_t sub_1000BA3C4()
{
  return sub_1000BA43C(sub_10007084C);
}

uint64_t sub_1000BA3DC()
{
  return sub_1000BA43C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000502C4);
}

uint64_t sub_1000BA3F4()
{
  return sub_1000BA43C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100070FDC);
}

uint64_t sub_1000BA40C()
{
  return sub_1000BA43C(sub_100071190);
}

uint64_t sub_1000BA424()
{
  return sub_1000BA43C(sub_1000707D0);
}

uint64_t sub_1000BA43C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    uint64_t *v1 = result;
  }
  return result;
}

uint64_t sub_1000BA498(uint64_t a1)
{
  return sub_1000BA558(a1, (uint64_t (*)(BOOL))sub_1000707BC);
}

uint64_t sub_1000BA4B0(uint64_t a1)
{
  return sub_1000BA558(a1, (uint64_t (*)(BOOL))sub_1000707D0);
}

uint64_t sub_1000BA4C8(uint64_t a1)
{
  return sub_1000BA558(a1, (uint64_t (*)(BOOL))sub_100070818);
}

uint64_t sub_1000BA4E0(uint64_t a1)
{
  return sub_1000BA558(a1, (uint64_t (*)(BOOL))sub_100052734);
}

uint64_t sub_1000BA4F8(uint64_t a1)
{
  return sub_1000BA558(a1, (uint64_t (*)(BOOL))sub_10007084C);
}

uint64_t sub_1000BA510(uint64_t a1)
{
  return sub_1000BA558(a1, (uint64_t (*)(BOOL))sub_1000502C4);
}

uint64_t sub_1000BA528(uint64_t a1)
{
  return sub_1000BA558(a1, (uint64_t (*)(BOOL))sub_100070FDC);
}

uint64_t sub_1000BA540(uint64_t a1)
{
  return sub_1000BA558(a1, (uint64_t (*)(BOOL))sub_100071190);
}

uint64_t sub_1000BA558(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    uint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }
  return result;
}

void *sub_1000BA5A0(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_1000BA678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v6 = String.UTF16View.index(_:offsetBy:)();
    sub_1000BC52C(v6);
    return v7 | 4;
  }
  else
  {
    uint64_t v3 = String.UTF8View._foreignIndex(_:offsetBy:)();
    sub_1000BC52C(v3);
    return v4 | 8;
  }
}

char *sub_1000BA6D4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100043478(&qword_10022F0F8);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  NSString v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_100072084(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100072A70(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1000BA7AC(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  unint64_t v6 = a2;
  int64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 80;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 80;
  if (v9 >= v11)
  {
    sub_1000722A0(a2, (uint64_t)(a3 - (void)a2) / 80, a4);
    uint64_t v12 = &v4[80 * v11];
    if (v7 >= v6 || v10 < 80) {
      goto LABEL_46;
    }
    uint64_t v21 = (char *)(a3 - 80);
    uint64_t v35 = v4;
    while (1)
    {
      unint64_t v38 = (unint64_t)v12;
      uint64_t v22 = v12 - 80;
      memcpy(__dst, v12 - 80, 0x50uLL);
      NSString v23 = v6 - 80;
      memcpy(v36, v6 - 80, sizeof(v36));
      sub_10002C008((uint64_t)__dst);
      sub_10002C008((uint64_t)v36);
      uint64_t v24 = sub_100027148();
      uint64_t v26 = v25;
      if (v24 == sub_100027148() && v26 == v27) {
        char v29 = 0;
      }
      else {
        char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      uint64_t v30 = v21 + 80;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100024DF0((uint64_t)v36);
      sub_100024DF0((uint64_t)__dst);
      if (v29)
      {
        BOOL v31 = v30 != v6 || v21 >= v6;
        v6 -= 80;
        uint64_t v4 = v35;
        uint64_t v12 = (char *)v38;
        if (!v31) {
          goto LABEL_42;
        }
      }
      else
      {
        BOOL v32 = v30 != (char *)v38 || (unint64_t)v21 >= v38;
        NSString v23 = v22;
        uint64_t v12 = v22;
        uint64_t v4 = v35;
        if (!v32) {
          goto LABEL_42;
        }
      }
      memmove(v21, v23, 0x50uLL);
LABEL_42:
      v21 -= 80;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_46;
      }
    }
  }
  sub_1000722A0(a1, (a2 - a1) / 80, a4);
  uint64_t v12 = &v4[80 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 80)
  {
    do
    {
      memcpy(__dst, v6, 0x50uLL);
      memcpy(v36, v4, sizeof(v36));
      sub_10002C008((uint64_t)__dst);
      sub_10002C008((uint64_t)v36);
      uint64_t v13 = sub_100027148();
      uint64_t v15 = v14;
      BOOL v17 = v13 == sub_100027148() && v15 == v16;
      if (v17)
      {
        swift_bridgeObjectRelease_n();
        sub_100024DF0((uint64_t)v36);
        sub_100024DF0((uint64_t)__dst);
      }
      else
      {
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100024DF0((uint64_t)v36);
        sub_100024DF0((uint64_t)__dst);
        if (v18)
        {
          uint64_t v19 = v6;
          BOOL v17 = v7 == v6;
          v6 += 80;
          if (v17) {
            goto LABEL_15;
          }
LABEL_14:
          memmove(v7, v19, 0x50uLL);
          goto LABEL_15;
        }
      }
      uint64_t v19 = v4;
      BOOL v17 = v7 == v4;
      v4 += 80;
      if (!v17) {
        goto LABEL_14;
      }
LABEL_15:
      v7 += 80;
    }
    while (v4 < v12 && (unint64_t)v6 < a3);
  }
  unint64_t v6 = v7;
LABEL_46:
  sub_1000722A0(v4, (v12 - v4) / 80, v6);
  return 1;
}

char *sub_1000BAAAC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100043478(&qword_10022F0E8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1000BABA4(uint64_t a1)
{
  return sub_1000BAAAC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_1000BABB8()
{
}

uint64_t sub_1000BABCC(void *a1)
{
  id v1 = [a1 apps];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1000BAC24(void *a1)
{
  id v1 = [a1 jsVersionMap];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1000BAC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v16 = a3;
  uint64_t v15 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v7 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v10);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v11 - 8);
  void v19[3] = type metadata accessor for BagProvider();
  v19[4] = &off_10020E9C0;
  v19[0] = a1;
  v18[3] = type metadata accessor for Defaults();
  v18[4] = &off_10020F098;
  v18[0] = a2;
  *(void *)(a4 + 104) = &_swiftEmptySetSingleton;
  sub_100025334((uint64_t)v19, a4 + 16);
  sub_100025334((uint64_t)v18, a4 + 56);
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  static DispatchQoS.utility.getter();
  BOOL v17 = _swiftEmptyArrayStorage;
  sub_100050588((unint64_t *)&qword_10022F470, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100043478((uint64_t *)&unk_100231D60);
  sub_10002B720((unint64_t *)&qword_10022F480, (uint64_t *)&unk_100231D60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v15);
  uint64_t v12 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  sub_10004377C((uint64_t)v18);
  sub_10004377C((uint64_t)v19);
  *(void *)(a4 + 96) = v12;
  return a4;
}

uint64_t sub_1000BAF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = type metadata accessor for BagProvider();
  uint64_t v22 = &off_10020E9C0;
  v20[0] = a1;
  uint64_t v18 = type metadata accessor for Defaults();
  uint64_t v19 = &off_10020F098;
  v17[0] = a2;
  type metadata accessor for ForceSyncCoordinator();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = sub_10003660C((uint64_t)v20, v21);
  __chkstk_darwin(v7);
  uint64_t v9 = (void *)((char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v10 + 16))(v9);
  uint64_t v11 = sub_10003660C((uint64_t)v17, v18);
  __chkstk_darwin(v11);
  uint64_t v13 = (void *)((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  uint64_t v15 = sub_1000BAC88(*v9, *v13, a3, v6);
  sub_10004377C((uint64_t)v17);
  sub_10004377C((uint64_t)v20);
  return v15;
}

id sub_1000BB134(char *a1)
{
  uint64_t v26 = a1;
  uint64_t v2 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v2 - 8);
  uint64_t v29 = (uint64_t)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v8 - 8);
  uint64_t v33 = &type metadata for JSEnginePerformerProvider;
  uint64_t v34 = &off_100211828;
  uint64_t v27 = OBJC_IVAR____TtC14amsengagementd17EngagementService_serviceQueue;
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  uint64_t v9 = a1;
  static DispatchQoS.unspecified.getter();
  BOOL v31 = _swiftEmptyArrayStorage;
  sub_100050588((unint64_t *)&qword_10022F470, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100043478((uint64_t *)&unk_100231D60);
  sub_10002B720((unint64_t *)&qword_10022F480, (uint64_t *)&unk_100231D60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v28);
  uint64_t v10 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v26[v27] = v10;
  uint64_t v11 = &v9[OBJC_IVAR____TtC14amsengagementd17EngagementService_appDefaultsProvider];
  uint64_t v12 = type metadata accessor for URL();
  sub_100021AC0(v29, 1, 1, v12);
  uint64_t v13 = type metadata accessor for AppDefaultsProvider();
  swift_allocObject();
  sub_1000819B4();
  *((void *)v11 + 3) = v13;
  *((void *)v11 + 4) = &off_10020E430;
  *(void *)uint64_t v11 = v14;
  uint64_t v15 = &v9[OBJC_IVAR____TtC14amsengagementd17EngagementService_currentEnginePerformer];
  *(_OWORD *)uint64_t v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *(void *)&v9[OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseDelay] = 1;
  uint64_t v16 = &v9[OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseToken];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  BOOL v17 = &v9[OBJC_IVAR____TtC14amsengagementd17EngagementService_featureFlagProvider];
  *((void *)v17 + 3) = &type metadata for FeatureFlagProvider;
  *((void *)v17 + 4) = &off_100210B68;
  *(void *)&v9[OBJC_IVAR____TtC14amsengagementd17EngagementService_syncBackoff] = 0x404E000000000000;
  sub_100025334((uint64_t)v32, (uint64_t)&v9[OBJC_IVAR____TtC14amsengagementd17EngagementService_enginePerformerProvider]);
  type metadata accessor for PriorityQueue();
  swift_allocObject();
  id v18 = v10;
  sub_10015A47C();
  *(void *)&v9[OBJC_IVAR____TtC14amsengagementd17EngagementService_priorityQueue] = v19;
  type metadata accessor for BagProvider();
  uint64_t v20 = swift_allocObject();
  id v21 = objc_allocWithZone((Class)type metadata accessor for Defaults());
  id v22 = v18;
  *(void *)&v9[OBJC_IVAR____TtC14amsengagementd17EngagementService_forceSyncCoordinator] = sub_1000BAF50(v20, (uint64_t)[v21 init], (uint64_t)v10);

  NSString v23 = (objc_class *)type metadata accessor for EngagementService();
  v30.receiver = v9;
  v30.super_class = v23;
  id v24 = objc_msgSendSuper2(&v30, "init");
  sub_10004377C((uint64_t)v32);
  return v24;
}

id sub_1000BB594()
{
  uint64_t v6 = &type metadata for JSEnginePerformerProvider;
  uint64_t v7 = &off_100211828;
  uint64_t v0 = (char *)objc_allocWithZone((Class)type metadata accessor for EngagementService());
  uint64_t v1 = sub_10003660C((uint64_t)v5, (uint64_t)&type metadata for JSEnginePerformerProvider);
  __chkstk_darwin(v1);
  (*(void (**)(void))(v2 + 16))();
  id v3 = sub_1000BB134(v0);
  sub_10004377C((uint64_t)v5);
  return v3;
}

uint64_t sub_1000BB680@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000BA000();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1000BB6AC()
{
  return sub_10004CE78((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

void sub_1000BB6D8()
{
}

uint64_t sub_1000BB6F8()
{
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_100036260();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1000BB728()
{
  swift_release();
  uint64_t v1 = sub_10004274C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000BB770(unsigned char *a1)
{
  return sub_1000B7778(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_1000BB784(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  return sub_1000B9430(*a1, a2, a3, a4);
}

uint64_t sub_1000BB78C(uint64_t a1)
{
  return sub_10015C278(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1000BB798()
{
  swift_unknownObjectWeakDestroy();
  uint64_t v0 = sub_100036260();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1000BB7C8()
{
  return sub_10004CE78((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1000BB7F8(uint64_t a1, uint64_t a2)
{
  return sub_100029B20(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100029BCC);
}

#error "1000BB854: call analysis failed (funcsize=15)"

id sub_1000BB864()
{
  return sub_1000B98C8(*(void **)(v0 + 16), *(void *)(v0 + 24), (void (*)(void, uint64_t))sub_100022154, (void (*)(uint64_t, uint64_t))sub_100022150);
}

#error "1000BB8F8: call analysis failed (funcsize=16)"

uint64_t sub_1000BB90C(uint64_t a1, uint64_t a2)
{
  return sub_1000BB8B8(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1000BB920()
{
  return sub_10002FC48((uint64_t (*)(void *, void, void, void, void))sub_10002FC60);
}

uint64_t sub_1000BB93C()
{
  return sub_100032994((uint64_t)&unk_10020FA38, (uint64_t)sub_1000BB960);
}

uint64_t sub_1000BB960(uint64_t a1, uint64_t a2)
{
  return sub_100036BD0(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1000BB9C8()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 80, 7);
}

id sub_1000BBA28(uint64_t a1, uint64_t a2)
{
  return sub_1000B84D0(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72));
}

uint64_t sub_1000BBA5C()
{
  uint64_t v1 = sub_100036260();
  return _swift_deallocObject(v1, v2, v3);
}

void sub_1000BBA8C()
{
  sub_1000B8F70(*(void *)(v0 + 16));
}

uint64_t sub_1000BBA94()
{
  swift_release();
  uint64_t v0 = sub_100044104();
  return _swift_deallocObject(v0, v1, v2);
}

id sub_1000BBACC()
{
  return sub_1000B9B40(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

id sub_1000BBAD8(uint64_t a1)
{
  return sub_1000B9D28(a1, *(id *)(v1 + 16), *(void *)(v1 + 24));
}

id sub_1000BBAE4()
{
  return sub_1000B9794(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000BBAEC()
{
  return sub_1000B9574();
}

uint64_t sub_1000BBAF4(uint64_t a1)
{
  return sub_10019C8DC(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1000BBB00()
{
  return sub_100032994((uint64_t)&unk_10020FD80, (uint64_t)sub_1000BBB24);
}

uint64_t sub_1000BBB24(uint64_t a1, uint64_t a2)
{
  return sub_100036BD0(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1000BBB88(unsigned __int8 *a1)
{
  return sub_1000BB784(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_1000BBB98(uint64_t a1)
{
  return sub_1000B94D8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

id sub_1000BBBD0(uint64_t a1)
{
  return sub_1000B9C20(a1, *(id *)(v1 + 16), *(void *)(v1 + 24));
}

id sub_1000BBBDC(uint64_t a1)
{
  return sub_1000B9ED4(a1, *(id *)(v1 + 16), *(void *)(v1 + 24));
}

id sub_1000BBBE8()
{
  return sub_1000B9A04(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000BBBF0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000BBC50()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000BBC7C()
{
  _Block_release(*(const void **)(v0 + 16));

  uint64_t v1 = sub_100044104();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000BBCB4()
{
  _Block_release(*(const void **)(v0 + 16));
  uint64_t v1 = sub_100036260();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000BBCE4()
{
  swift_release();
  uint64_t v1 = sub_10005249C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000BBD24()
{
  return sub_10004CE78((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_1000BBD50()
{
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_100044104();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1000BBD80()
{
  swift_release();
  swift_release();

  uint64_t v1 = sub_10004274C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000BBDD0()
{
  uint64_t v1 = sub_100044104();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000BBE08()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_100044104();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1000BBE40()
{
  swift_release();
  swift_release();
  uint64_t v1 = sub_10005249C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000BBE80(uint64_t a1)
{
  return sub_1000B6878(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1000BBEC4()
{
  return sub_10004CE78((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1000BBF10()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000BBF68()
{
  _Block_release(*(const void **)(v0 + 40));
  uint64_t v1 = sub_10004274C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000BBFB8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v5 = (void *)v0[6];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_10002219C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_100052880;
  uint64_t v9 = (uint64_t (*)(int, int, uint64_t, void *, void *))((char *)&dword_10022F150 + dword_10022F150);
  return v9(v1, v2, v3, v4, v5);
}

uint64_t sub_1000BC07C()
{
  return sub_10004CE78((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1000BC0A8()
{
  sub_100041F70();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_10002219C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_100052880;
  return sub_1000B5AD0(v2, v3, v4, v5);
}

uint64_t sub_1000BC154()
{
  sub_100041F70();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10002219C(v0);
  void *v1 = v2;
  v1[1] = sub_100045A38;
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_100232EC0 + dword_100232EC0);
  return v3();
}

uint64_t sub_1000BC204(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000BC230()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_10002068C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000BC268()
{
  return sub_100008CB0((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_1000BC298()
{
  sub_1000B4304(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1000BC2A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000BC2F0(uint64_t a1, void *a2)
{
  if (a2)
  {

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000BC33C(uint64_t a1, void *a2)
{
  return sub_1000B2D5C(a1, a2);
}

unint64_t sub_1000BC344()
{
  unint64_t result = qword_10022F1A0;
  if (!qword_10022F1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022F1A0);
  }
  return result;
}

uint64_t sub_1000BC488@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000BB680(a1);
}

uint64_t sub_1000BC4A8()
{
  return swift_retain_n();
}

uint64_t sub_1000BC4FC()
{
  return v0;
}

id sub_1000BC514(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

unint64_t sub_1000BC52C(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

id sub_1000BC56C(uint64_t a1)
{
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v1;
  return v2;
}

uint64_t sub_1000BC584()
{
  return v0;
}

uint64_t sub_1000BC598(uint64_t result)
{
  *(void *)(result + 16) = v1;
  *(void *)(result + 24) = v2;
  return result;
}

id sub_1000BC5A4()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithIdentifier:v1];

  return v2;
}

uint64_t sub_1000BC618(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for ScheduleInfo(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100043478(&qword_10022E6E0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v57 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v57 - v15;
  id v17 = (id)AMSGenerateLogCorrelationKey();
  uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v61 = v18;

  uint64_t v62 = 0x73746E657665;
  unint64_t v63 = 0xE600000000000000;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v64, a1, &v67);
  sub_1000434BC((uint64_t)&v64);
  if (MetatypeMetadata)
  {
    sub_100043478(&qword_10022F258);
    if (sub_100049438())
    {
      uint64_t v19 = (void *)v62;
      goto LABEL_6;
    }
  }
  else
  {
    sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
  }
  uint64_t v19 = _swiftEmptyArrayStorage;
LABEL_6:
  sub_100021AC0((uint64_t)v16, 1, 1, v5);
  uint64_t v62 = 0x656C756465686373;
  unint64_t v63 = 0xE800000000000000;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v64, a1, &v67);
  sub_1000434BC((uint64_t)&v64);
  if (MetatypeMetadata)
  {
    sub_100043478(&qword_10022D6F0);
    if (sub_100049438())
    {
      swift_bridgeObjectRetain();
      sub_100167058();
      sub_10002CC0C((uint64_t)v16, &qword_10022E6E0);
      sub_1000BD1DC((uint64_t)v14, (uint64_t)v16);
    }
  }
  else
  {
    sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
  }
  sub_100087D58((uint64_t)v16, (uint64_t)v11);
  int v20 = sub_10004FD40((uint64_t)v11, 1, v5);
  uint64_t v60 = v16;
  if (v20 == 1)
  {
    sub_10002CC0C((uint64_t)v11, &qword_10022E6E0);
    sub_100043478(&qword_10022E560);
    uint64_t v21 = type metadata accessor for LogMessage();
    sub_100044798(v21);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v66 = (void *)sub_100043478(&qword_10022F250);
    uint64_t v64 = v59;
    uint64_t v22 = *(void *)(a2 + 32);
    if (v22)
    {
      uint64_t v23 = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      sub_100049788(&v64, (uint64_t)v66);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v67 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
      v25._countAndFlagsBits = 5972026;
      v25._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&long long v67 = v23;
      *((void *)&v67 + 1) = v22;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
      uint64_t v26 = 93;
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      sub_100049788(&v64, (uint64_t)v66);
      uint64_t v33 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v67 = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
      uint64_t v26 = 58;
    }
    unint64_t v34 = 0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v26);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)&v64);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v35._countAndFlagsBits = 0xD000000000000021;
    v35._object = (void *)0x80000001001CDBD0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    uint64_t v66 = &type metadata for String;
    uint64_t v36 = v58;
    uint64_t v37 = v61;
    uint64_t v64 = v58;
    uint64_t v65 = v61;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v64, &qword_10022F490);
    v38._countAndFlagsBits = 41;
    v38._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v39 = static os_log_type_t.default.getter();
    sub_10004841C(v39);
    swift_bridgeObjectRelease();
    id v40 = [objc_allocWithZone((Class)AMSEngagementEnqueueRequest) init];
    sub_1000BD07C((uint64_t)v19, v40);
    sub_100043478(&qword_100231DE0);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_1001C4B80;
    uint64_t v42 = (uint64_t)v60;
    uint64_t v43 = v41;
    sub_10004D510(0, &qword_10022EC18);
    *(void *)(v43 + 32) = sub_1000BC5A4();
    uint64_t v64 = v43;
    specialized Array._endMutation()();
    sub_1000BD0F4(v64, v40);
    id v52 = [self currentProcess];
    [v40 setClientInfo:v52];

    sub_1000BD178(v36, v37, v40);
    sub_10004D510(0, (unint64_t *)&qword_100232020);
    id v53 = sub_100051DF8();
    id v54 = [objc_allocWithZone((Class)AMSEngagement) initWithBag:v53];

    id v55 = [v54 _enqueue:v40];
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10008005C((uint64_t)v11, (uint64_t)v7);
    sub_100043478(&qword_10022E560);
    uint64_t v27 = type metadata accessor for LogMessage();
    sub_100044798(v27);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v66 = (void *)sub_100043478(&qword_10022F250);
    uint64_t v64 = v59;
    uint64_t v28 = *(void *)(a2 + 32);
    if (v28)
    {
      uint64_t v29 = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      uint64_t v30 = sub_1000450D0();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v67 = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
      v31._countAndFlagsBits = 5972026;
      v31._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&long long v67 = v29;
      *((void *)&v67 + 1) = v28;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
      uint64_t v32 = 93;
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      uint64_t v44 = sub_1000450D0();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v67 = v44;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v67, &qword_10022F490);
      uint64_t v32 = 58;
    }
    unint64_t v45 = 0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v32);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)&v64);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v46._object = (void *)0x80000001001CDC00;
    v46._countAndFlagsBits = 0xD00000000000001BLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    uint64_t v47 = *(int *)(v5 + 20);
    uint64_t v48 = (uint64_t *)&v7[v47 + *(int *)(type metadata accessor for ScheduleInfo.Metadata(0) + 44)];
    uint64_t v50 = *v48;
    uint64_t v49 = v48[1];
    uint64_t v66 = &type metadata for String;
    uint64_t v64 = v50;
    uint64_t v65 = v49;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v64, &qword_10022F490);
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v51 = static os_log_type_t.default.getter();
    sub_10004841C(v51);
    swift_bridgeObjectRelease();
    sub_10006FFD8((uint64_t)v7);
    sub_1000800C0((uint64_t)v7);
    uint64_t v42 = (uint64_t)v60;
  }
  return sub_10002CC0C(v42, &qword_10022E6E0);
}

uint64_t type metadata accessor for EnqueueAction()
{
  return self;
}

void sub_1000BD07C(uint64_t a1, void *a2)
{
  sub_100043478(&qword_10022D6F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setEvents:isa];
}

void sub_1000BD0F4(uint64_t a1, void *a2)
{
  sub_10004D510(0, &qword_10022EC18);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setDestinations:isa];
}

void sub_1000BD178(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setLogKey:v4];
}

uint64_t sub_1000BD1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022E6E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1000BD244(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v4, a1, &v5);
  sub_1000434BC((uint64_t)v4);
  if (!v6)
  {
LABEL_8:
    sub_1000423CC((uint64_t)&v5);
    goto LABEL_9;
  }
  sub_100043478(&qword_10022D6F0);
  if (swift_dynamicCast())
  {
    AnyHashable.init<A>(_:)();
    sub_100032918((uint64_t)v4, 0x746E756F636361, &v5);
    swift_bridgeObjectRelease();
    sub_1000434BC((uint64_t)v4);
    if (v6)
    {
      if (swift_dynamicCast())
      {
        v4[0] = 1684632420;
        v4[1] = 0;
        swift_bridgeObjectRelease();
      }
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_9:
  sub_1000BD6F4();
  uint64_t v3 = swift_bridgeObjectRetain();
  return sub_10006CD7C(v3, 0, 0, 0);
}

unint64_t sub_1000BD6F4()
{
  unint64_t result = qword_10022F260;
  if (!qword_10022F260)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10022F260);
  }
  return result;
}

uint64_t sub_1000BD734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v9 - 8);
  sub_100011D4C();
  swift_beginAccess();
  sub_1000BEBA4((uint64_t)v5 + 16, (uint64_t)&v78);
  if (!v80) {
    return sub_10002CBB4((uint64_t)&v78, &qword_10022F0F0);
  }
  sub_100028270((long long *)&v78, (uint64_t)v66);
  if (a2)
  {
    char v10 = *(unsigned char *)(a5 + 1);
    uint64_t v11 = *(void *)(a2 + 16);
    char v60 = v10;
    if (v11)
    {
      uint64_t v59 = v5;
      *(void *)uint64_t v73 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1000734A4(0, v11, 0);
      unint64_t v63 = *(void **)v73;
      uint64_t v61 = self;
      uint64_t v12 = 0;
      while (1)
      {
        swift_bridgeObjectRetain();
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        id v78 = 0;
        id v14 = [v61 dataWithJSONObject:isa options:0 error:&v78];

        id v15 = v78;
        if (!v14) {
          break;
        }
        uint64_t v16 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v18 = v17;

        type metadata accessor for JSONDecoder();
        swift_allocObject();
        JSONDecoder.init()();
        sub_100083478();
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        sub_10004B278(v16, v18);
        swift_bridgeObjectRelease();
        swift_release();
        char v19 = (char)v78;
        uint64_t v20 = v79;
        char v21 = BYTE8(v79);
        uint64_t v22 = v80;
        uint64_t v23 = v63;
        *(void *)uint64_t v73 = v63;
        unint64_t v25 = v63[2];
        unint64_t v24 = v63[3];
        if (v25 >= v24 >> 1)
        {
          sub_1000734A4(v24 > 1, v25 + 1, 1);
          uint64_t v23 = *(void **)v73;
        }
        v23[2] = v25 + 1;
        unint64_t v63 = v23;
        uint64_t v26 = &v23[4 * v25];
        *((unsigned char *)v26 + 32) = v19;
        ++v12;
        v26[5] = v20;
        *((unsigned char *)v26 + 48) = v21;
        v26[7] = v22;
        if (v11 == v12)
        {
          swift_bridgeObjectRelease();
          uint64_t v6 = v59;
          char v10 = v60;
          goto LABEL_14;
        }
      }
      uint64_t v28 = v15;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      sub_100043478(&qword_10022E560);
      uint64_t v29 = sub_10002D318();
      sub_100044798(v29);
      sub_10004ABC0();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v80 = (void *)type metadata accessor for EnqueueRunner();
      id v78 = v59;
      swift_retain();
      id v30 = (id)AMSLogKey();
      if (v30)
      {
        Swift::String v31 = v30;
        uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v34 = v33;

        swift_bridgeObjectRetain();
        sub_1000208BC();
        sub_100020E60();
        sub_100049788(&v78, (uint64_t)v80);
        uint64_t DynamicType = swift_getDynamicType();
        *(void *)&v73[24] = swift_getMetatypeMetadata();
        *(void *)uint64_t v73 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100045E8C();
        sub_100020E44();
        *(void *)&v73[24] = &type metadata for String;
        *(void *)uint64_t v73 = v32;
        *(void *)&v73[8] = v34;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100045E8C();
        v36._countAndFlagsBits = 93;
        v36._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v36);
        sub_100011DB4();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020E78();
        sub_100020E60();
        uint64_t v54 = sub_100049944(&v78);
        *(void *)&v73[24] = swift_getMetatypeMetadata();
        *(void *)uint64_t v73 = v54;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CBB4((uint64_t)v73, &qword_10022F490);
        v55._countAndFlagsBits = 58;
        v55._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v55);
        sub_100011DB4();
      }
      sub_10004377C((uint64_t)&v78);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v56._countAndFlagsBits = 0x6C696166202E2E2ELL;
      v56._object = (void *)0xEC000000203A6465;
      LogMessage.StringInterpolation.appendLiteral(_:)(v56);
      swift_getErrorValue();
      uint64_t v80 = v64;
      sub_10003BAA4((uint64_t *)&v78);
      sub_1000456E0();
      (*(void (**)(void))(v57 + 16))();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v78, &qword_10022F490);
      sub_100020E60();
      LogMessage.init(stringInterpolation:)();
      if (qword_10022C460 != -1) {
        swift_once();
      }
      uint64_t v58 = static os_log_type_t.error.getter();
      sub_10004841C(v58);
      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
    else
    {
      unint64_t v63 = _swiftEmptyArrayStorage;
LABEL_14:
      sub_100043478(&qword_10022E560);
      uint64_t v37 = type metadata accessor for LogMessage();
      sub_100044798(v37);
      sub_10004ABC0();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v80 = (void *)type metadata accessor for EnqueueRunner();
      id v78 = v6;
      swift_retain();
      id v38 = (id)AMSLogKey();
      if (v38)
      {
        uint64_t v39 = v38;
        uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v42 = v41;

        swift_bridgeObjectRetain();
        sub_1000208BC();
        sub_100020E60();
        uint64_t v43 = sub_100046704(&v78);
        *(void *)&v73[24] = swift_getMetatypeMetadata();
        *(void *)uint64_t v73 = v43;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100045E8C();
        sub_100020E44();
        *(void *)&v73[24] = &type metadata for String;
        *(void *)uint64_t v73 = v40;
        *(void *)&v73[8] = v42;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100045E8C();
        v44._countAndFlagsBits = 93;
        v44._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v44);
        sub_100011DB4();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020E78();
        sub_100020E60();
        uint64_t v45 = sub_100049944(&v78);
        *(void *)&v73[24] = swift_getMetatypeMetadata();
        *(void *)uint64_t v73 = v45;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CBB4((uint64_t)v73, &qword_10022F490);
        v46._countAndFlagsBits = 58;
        v46._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v46);
        sub_100011DB4();
      }
      sub_10004377C((uint64_t)&v78);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100043BFC((uint64_t)"Updating app defaults: ");
      uint64_t v80 = &unk_10020E0E8;
      LOBYTE(v78) = v10;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v78, &qword_10022F490);
      v47._countAndFlagsBits = 3026478;
      v47._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v47);
      LogMessage.init(stringInterpolation:)();
      if (qword_10022C460 != -1) {
        swift_once();
      }
      uint64_t v48 = static os_log_type_t.default.getter();
      sub_10004841C(v48);
      swift_bridgeObjectRelease();
      sub_100049788(v66, v67);
      sub_100081BB4((uint64_t)v68);
      uint64_t v50 = v68[4];
      uint64_t v49 = v68[5];
      uint64_t v51 = v68[6];
      sub_1000837D8((uint64_t)v68, (uint64_t)&v69, &qword_10022E068);
      if ((void)v69)
      {
        *(_OWORD *)uint64_t v73 = v69;
        *(_OWORD *)&v73[16] = v70;
        long long v74 = v71;
        uint64_t v75 = v72;
        long long v62 = *(_OWORD *)&v73[8];
        char v52 = BYTE8(v70);
        v65[0] = v69;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1000BC204((uint64_t)v65);
        sub_1000837D8((uint64_t)&v74, (uint64_t)v76, &qword_10022E060);
        sub_10002711C((uint64_t)v76);
        sub_1000837D8((uint64_t)&v75, (uint64_t)v77, &qword_10022E040);
        sub_1000BC204((uint64_t)v77);
        swift_bridgeObjectRelease();
        long long v53 = v62;
      }
      else
      {
        uint64_t v51 = 0;
        uint64_t v50 = 0;
        uint64_t v49 = 0;
        char v52 = 0;
        long long v53 = xmmword_1001C5150;
      }
      id v78 = v63;
      long long v79 = v53;
      LOBYTE(v80) = v52;
      uint64_t v81 = v50;
      uint64_t v82 = v49;
      uint64_t v83 = v51;
      sub_100049788(v66, v67);
      sub_100081EDC((uint64_t *)&v78, v60);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return sub_10004377C((uint64_t)v66);
}

void sub_1000BE048(uint64_t a1, uint64_t a2)
{
  id v3 = [self loadFromDisk];
  if (a2)
  {
    id v6 = v3;
    sub_100043478(&qword_10022D6F0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 setAllowedEvents:isa appIdentifier:v5];

    [v6 saveToDisk];
    id v3 = v6;
  }
}

id sub_1000BE1B4()
{
  NSString v0 = String._bridgeToObjectiveC()();
  if (qword_10022C3E0 != -1) {
    swift_once();
  }
  id v1 = [(id)qword_10022D990 integerForKey:v0];
  id v2 = [v1 valuePromise];

  id v8 = 0;
  id v3 = [v2 resultWithError:&v8];

  id v4 = v8;
  if (v3)
  {
    id v8 = 0;
    char v9 = 1;
    id v5 = v4;
    static Int._conditionallyBridgeFromObjectiveC(_:result:)();

    return v8;
  }
  else
  {
    id v7 = v8;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    return 0;
  }
}

uint64_t sub_1000BE330(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t result = __chkstk_darwin(v4 - 8);
  id v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    swift_beginAccess();
    sub_1000BEBA4(v1 + 16, (uint64_t)&v61);
    if (*((void *)&v62 + 1))
    {
      sub_100028270(&v61, (uint64_t)v55);
      sub_100049788(v55, v55[3]);
      uint64_t v9 = *(unsigned __int8 *)(v1 + 57);
      sub_100081BB4((uint64_t)v56);
      sub_1000837D8((uint64_t)v56, (uint64_t)v59, &qword_10022E068);
      if (*(void *)&v59[0])
      {
        long long v61 = v59[0];
        long long v62 = v59[1];
        long long v63 = v59[2];
        uint64_t v64 = v60;
        sub_1000837D8((uint64_t)&v61 + 8, (uint64_t)v65, &qword_10022E030);
        uint64_t v66 = v61;
        sub_1000BC204((uint64_t)&v66);
        sub_1000837D8((uint64_t)&v63, (uint64_t)v67, &qword_10022E060);
        sub_10002711C((uint64_t)v67);
        sub_1000837D8((uint64_t)&v64, (uint64_t)v68, &qword_10022E040);
        sub_1000BC204((uint64_t)v68);
        sub_1000837D8((uint64_t)v65, (uint64_t)v69, &qword_10022E030);
        if (v69[0] != 2)
        {
          uint64_t v48 = v70;
          unsigned __int8 v72 = v71;
          if (v69[0])
          {
            sub_100043478(&qword_10022E560);
            uint64_t v10 = sub_10002D318();
            sub_100044798(v10);
            uint64_t v12 = *(void *)(v11 + 72);
            uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
            uint64_t v15 = (v14 + 32) & ~v14;
            uint64_t v47 = v12;
            uint64_t v45 = &v64;
            v40[1] = v15 + 2 * v12;
            uint64_t v42 = v14 | 7;
            uint64_t v16 = swift_allocObject();
            long long v43 = xmmword_1001C3120;
            *(_OWORD *)(v16 + 16) = xmmword_1001C3120;
            uint64_t v44 = v15;
            uint64_t v49 = v16;
            uint64_t v41 = type metadata accessor for EnqueueRunner();
            uint64_t v58 = (void *)v41;
            v57[0] = v1;
            uint64_t v17 = *(void *)(v1 + 80);
            uint64_t v18 = *(void *)(v1 + 88);
            uint64_t v50 = v17;
            uint64_t v46 = v18;
            swift_retain();
            if (v18)
            {
              swift_bridgeObjectRetain();
              LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
              sub_1000448B8();
              sub_100020F04(v57);
              uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
              sub_10004580C(MetatypeMetadata);
              sub_10002CBB4((uint64_t)v53, &qword_10022F490);
              sub_100020E44();
              uint64_t v54 = &type metadata for String;
              v53[0] = v17;
              v53[1] = v18;
              LogMessage.StringInterpolation.appendInterpolation(safe:)();
              sub_10002CBB4((uint64_t)v53, &qword_10022F490);
              uint64_t v20 = 93;
            }
            else
            {
              LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
              sub_1000448B8();
              sub_100020F04(v57);
              uint64_t v21 = swift_getMetatypeMetadata();
              sub_10004580C(v21);
              sub_10002CBB4((uint64_t)v53, &qword_10022F490);
              uint64_t v20 = 58;
            }
            unint64_t v22 = 0xE100000000000000;
            LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v20);
            LogMessage.init(stringInterpolation:)();
            sub_10004377C((uint64_t)v57);
            LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
            v23._countAndFlagsBits = 0x6965756575716E45;
            v23._object = (void *)0xEB0000000020676ELL;
            LogMessage.StringInterpolation.appendLiteral(_:)(v23);
            uint64_t v58 = &type metadata for Int;
            v57[0] = v8;
            LogMessage.StringInterpolation.appendInterpolation(safe:)();
            sub_10002CBB4((uint64_t)v57, &qword_10022F490);
            sub_100043BFC((uint64_t)" event(s) to backlog...");
            LogMessage.init(stringInterpolation:)();
            if (qword_10022C460 != -1) {
LABEL_25:
            }
              swift_once();
            uint64_t v24 = static os_log_type_t.default.getter();
            sub_10004841C(v24);
            swift_bridgeObjectRelease();
            type metadata accessor for AppDatabase();
            uint64_t v25 = v9;
            uint64_t v9 = 0;
            uint64_t v26 = sub_1000124C0(v25);
            v40[0] = v7;
            swift_bridgeObjectRetain();
            uint64_t v27 = 0;
            LODWORD(v49) = v72;
            do
            {
              uint64_t v28 = v27 + 1;
              if (__OFADD__(v27, 1))
              {
                __break(1u);
                goto LABEL_25;
              }
              swift_bridgeObjectRetain_n();
              sub_100077DD4(v57);
              if (v49)
              {
                id v29 = sub_1000BE1B4();
                char v31 = v30 & 1;
              }
              else
              {
                char v31 = 0;
                id v29 = v48;
              }
              id v7 = (char *)v26;
              sub_10007E744((uint64_t)v57, (uint64_t)v29, v31);
              sub_1000BEC0C((uint64_t)v57);
              swift_bridgeObjectRelease();
              ++v27;
              BOOL v32 = v28 == v8;
              uint64_t v33 = v50;
            }
            while (!v32);
            swift_bridgeObjectRelease();
            *(_OWORD *)(swift_allocObject() + 16) = v43;
            uint64_t v54 = (void *)v41;
            v53[0] = v2;
            uint64_t v34 = v46;
            if (v46)
            {
              swift_retain();
              swift_bridgeObjectRetain();
              sub_1000208BC();
              sub_100020E60();
              uint64_t v35 = sub_100046704(v53);
              char v52 = (void *)swift_getMetatypeMetadata();
              v51[0] = v35;
              LogMessage.StringInterpolation.appendInterpolation(safe:)();
              sub_10004BF24();
              sub_100020E44();
              char v52 = &type metadata for String;
              v51[0] = v33;
              v51[1] = v34;
              LogMessage.StringInterpolation.appendInterpolation(safe:)();
              sub_10004BF24();
              uint64_t v36 = 93;
            }
            else
            {
              swift_retain();
              sub_100020E78();
              sub_100020E60();
              uint64_t v37 = sub_100046704(v53);
              char v52 = (void *)swift_getMetatypeMetadata();
              v51[0] = v37;
              LogMessage.StringInterpolation.appendInterpolation(safe:)();
              sub_10002CBB4((uint64_t)v51, &qword_10022F490);
              uint64_t v36 = 58;
            }
            unint64_t v38 = 0xE100000000000000;
            LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v36);
            LogMessage.init(stringInterpolation:)();
            sub_10004377C((uint64_t)v53);
            LogMessage.init(stringLiteral:)();
            uint64_t v39 = static os_log_type_t.default.getter();
            sub_10004841C(v39);
            swift_release();
            swift_bridgeObjectRelease();
          }
        }
      }
      return sub_10004377C((uint64_t)v55);
    }
    else
    {
      return sub_10002CBB4((uint64_t)&v61, &qword_10022F0F0);
    }
  }
  return result;
}

uint64_t sub_1000BEBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022F0F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000BEC0C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_10004B278(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000BEC5C()
{
  uint64_t v1 = type metadata accessor for OSSignpostID();
  sub_100020DEC();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = (*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  swift_release();
  return _swift_deallocObject(v0, v9 + 9, v8);
}

void sub_1000BED1C(uint64_t a1, void *a2)
{
  sub_100043478(&qword_10022D6F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setActions:isa];
}

id sub_1000BED94(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  if (_getErrorEmbeddedNSError<A>(_:)())
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v6, v4, a1);
  }
  uint64_t v7 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  id v8 = objc_msgSend(v7, "ams_sanitizedForSecureCoding");

  return v8;
}

uint64_t sub_1000BEEFC()
{
  return String.init<A>(describing:)();
}

unint64_t sub_1000BEF2C(unint64_t result)
{
  if (result >= 3) {
    return 3;
  }
  return result;
}

BOOL sub_1000BEF3C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020C258, v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

unint64_t sub_1000BEF84()
{
  return 0xD000000000000022;
}

unint64_t sub_1000BEFA0@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000BEF2C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000BEFCC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000C425C();
  unint64_t v5 = sub_100052E34();
  return CustomNSError<>.errorCode.getter(a1, a2, v4, v5);
}

uint64_t sub_1000BF024()
{
  return sub_1000BEEFC();
}

uint64_t sub_1000BF02C(uint64_t a1)
{
  unint64_t v2 = sub_1000C4210();
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1000BF068(uint64_t a1)
{
  unint64_t v2 = sub_1000C4210();
  unint64_t v3 = sub_1000C425C();
  unint64_t v4 = sub_100052E34();
  return Error<>._code.getter(a1, v2, v3, v4);
}

BOOL sub_1000BF0D0@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_1000BEF3C(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1000BF108@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_1000BEF84();
  *a1 = 0xD000000000000022;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000BF138()
{
  if (qword_10022C488 != -1) {
    swift_once();
  }
  id v0 = *(id *)(qword_1002440F0 + 16);
  return OSSignposter.init(logHandle:)();
}

uint64_t sub_1000BF1AC()
{
  type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100020DEC();
  uint64_t v16 = v2;
  uint64_t v17 = v1;
  __chkstk_darwin(v1);
  sub_100040A70();
  uint64_t v15 = v3;
  sub_100043EA8();
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  sub_100020EAC();
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_100020EAC();
  uint64_t v7 = type metadata accessor for DispatchQoS.QoSClass();
  sub_100020DEC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100020EAC();
  uint64_t v13 = v12 - v11;
  *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v13, enum case for DispatchQoS.QoSClass.utility(_:), v7);
  static OS_dispatch_queue.global(qos:)();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
  static DispatchQoS.unspecified.getter();
  sub_10002AFB0((unint64_t *)&qword_10022F470, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100043478((uint64_t *)&unk_100231D60);
  sub_10002B720((unint64_t *)&qword_10022F480, (uint64_t *)&unk_100231D60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v15, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v17);
  sub_10002064C();
  *(void *)(v0 + 24) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  sub_1000C3554();
  return v0;
}

uint64_t sub_1000BF45C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_100011D4C();
  swift_bridgeObjectRetain();
  unint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = (uint64_t)sub_1000BF8F4(v7, a1, a2);
  swift_bridgeObjectRelease();
  if (v8)
  {
    uint64_t v35 = a1;
    if (qword_10022C488 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v9 = type metadata accessor for LogMessage();
    sub_100044798(v9);
    *(_OWORD *)(sub_100020AB4() + 16) = xmmword_1001C3130;
    uint64_t v34 = (void *)type metadata accessor for ExtensionLoader();
    uint64_t v32 = v2;
    swift_retain();
    id v10 = (id)AMSLogKey();
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100045EA4();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100040FDC(MetatypeMetadata);
      sub_1000423CC((uint64_t)&v29);
      sub_100020E44();
      char v31 = &type metadata for String;
      uint64_t v29 = v12;
      uint64_t v30 = v14;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v29);
      sub_1000208D8();
      sub_1000474F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100045EA4();
      uint64_t v23 = swift_getMetatypeMetadata();
      sub_100040FDC(v23);
      sub_1000423CC((uint64_t)&v29);
      sub_100020E94();
      sub_1000474F0();
    }
    sub_10004377C((uint64_t)&v32);
    sub_100043B80();
    uint64_t v34 = &type metadata for String;
    uint64_t v32 = v35;
    uint64_t v33 = a2;
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)&v32);
    uint64_t v24 = static os_log_type_t.default.getter();
    sub_10004841C(v24);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_10022C488 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v16 = type metadata accessor for LogMessage();
    sub_100044798(v16);
    uint64_t v8 = sub_100020AB4();
    *(_OWORD *)(v8 + 16) = xmmword_1001C3130;
    uint64_t v34 = (void *)type metadata accessor for ExtensionLoader();
    uint64_t v32 = v2;
    swift_retain();
    id v17 = (id)AMSLogKey();
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v35 = a1;
      uint64_t v21 = v20;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100045EA4();
      uint64_t v22 = swift_getMetatypeMetadata();
      sub_100040FDC(v22);
      sub_1000423CC((uint64_t)&v29);
      sub_100020E44();
      char v31 = &type metadata for String;
      uint64_t v29 = v19;
      uint64_t v30 = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v29);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      a1 = v35;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100045EA4();
      uint64_t v25 = swift_getMetatypeMetadata();
      sub_100040FDC(v25);
      sub_1000423CC((uint64_t)&v29);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v32);
    LogMessage.init(stringLiteral:)();
    uint64_t v34 = &type metadata for String;
    uint64_t v32 = a1;
    uint64_t v33 = a2;
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)&v32);
    uint64_t v26 = static os_log_type_t.error.getter();
    sub_10004841C(v26);
    swift_bridgeObjectRelease();
    sub_1000C3D18();
    swift_allocError();
    *uint64_t v27 = 1;
    swift_willThrow();
  }
  return v8;
}

void *sub_1000BF8F4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = a1;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v20 = v5;
    unint64_t v21 = v5 & 0xC000000000000001;
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = v21 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v5 + 8 * v7);
      uint64_t v9 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      uint64_t v10 = v6;
      uint64_t v11 = v8;
      uint64_t v12 = a3;
      id v13 = [v8 bundleIdentifier];
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      a3 = v12;
      BOOL v17 = v14 == a2 && v16 == v12;
      if (v17)
      {
        swift_bridgeObjectRelease();
LABEL_17:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v11;
      }
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_17;
      }

      ++v7;
      uint64_t v6 = v10;
      BOOL v17 = v9 == v10;
      unint64_t v5 = v20;
      if (v17) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
LABEL_20:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000BFAAC(uint64_t a1, void *a2, int a3, uint64_t a4, void (*a5)(void, void), double a6)
{
  uint64_t v248 = a4;
  v249 = a5;
  LODWORD(v250) = a3;
  uint64_t v274 = a1;
  uint64_t v9 = *v6;
  type metadata accessor for OSSignpostError();
  sub_100020DEC();
  uint64_t v237 = v11;
  v238 = v10;
  __chkstk_darwin(v10);
  sub_100040A70();
  uint64_t v236 = v12;
  sub_100043EA8();
  type metadata accessor for DispatchQoS.QoSClass();
  sub_100020DEC();
  uint64_t v245 = v14;
  uint64_t v246 = v13;
  __chkstk_darwin(v13);
  sub_100040A70();
  uint64_t v244 = v15;
  sub_100043EA8();
  uint64_t v256 = type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  uint64_t v263 = v16;
  __chkstk_darwin(v17);
  sub_100040A70();
  uint64_t v255 = v18;
  sub_100043EA8();
  uint64_t v254 = type metadata accessor for DispatchQoS();
  sub_100020DEC();
  uint64_t v262 = v19;
  __chkstk_darwin(v20);
  sub_100040A70();
  uint64_t v253 = v21;
  sub_100043EA8();
  type metadata accessor for DispatchTimeInterval();
  sub_100020DEC();
  uint64_t v241 = v23;
  v242 = v22;
  __chkstk_darwin(v22);
  sub_100040A70();
  v240 = v24;
  sub_100043EA8();
  uint64_t v252 = type metadata accessor for DispatchTime();
  sub_100020DEC();
  uint64_t v261 = v25;
  __chkstk_darwin(v26);
  sub_100035C70();
  uint64_t v239 = v27;
  sub_100020974();
  __chkstk_darwin(v28);
  v243 = (char *)&v235 - v29;
  sub_100043EA8();
  uint64_t v30 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v31 = sub_1000208F0(v30);
  __chkstk_darwin(v31);
  sub_100040A70();
  uint64_t v276 = v32;
  sub_100043EA8();
  uint64_t v33 = type metadata accessor for OSSignposter();
  sub_100020DEC();
  uint64_t v35 = v34;
  __chkstk_darwin(v36);
  sub_100035C70();
  uint64_t v247 = v37;
  sub_100020974();
  uint64_t v39 = __chkstk_darwin(v38);
  uint64_t v41 = (char *)&v235 - v40;
  __chkstk_darwin(v39);
  long long v43 = (char *)&v235 - v42;
  type metadata accessor for OSSignpostID();
  sub_100020DEC();
  uint64_t v281 = v45;
  uint64_t v282 = v44;
  __chkstk_darwin(v44);
  sub_100035C70();
  uint64_t v251 = v46;
  sub_100020974();
  __chkstk_darwin(v47);
  v280 = (char *)&v235 - v48;
  sub_100020974();
  __chkstk_darwin(v49);
  uint64_t v51 = (char *)&v235 - v50;
  id v265 = a2;
  id v52 = [a2 bundleIdentifier];
  v284 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v54 = v53;

  sub_1000BF138();
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  Swift::String v55 = *(void **)(v35 + 8);
  uint64_t v272 = v35 + 8;
  uint64_t v273 = v33;
  id v271 = v55;
  ((void (*)(char *, uint64_t))v55)(v43, v33);
  uint64_t v56 = v9;
  uint64_t v57 = v282;
  uint64_t v275 = v56;
  sub_1000BF138();
  swift_bridgeObjectRetain_n();
  v279 = v41;
  uint64_t v58 = OSSignposter.logHandle.getter();
  int v59 = static os_signpost_type_t.begin.getter();
  char v60 = OS_os_log.signpostsEnabled.getter();
  v278 = v51;
  if (v60)
  {
    v277 = *(void (**)(char *, char *, uint64_t))(v281 + 16);
    LODWORD(v269) = v59;
    v277(v280, v51, v57);
    long long v61 = (uint8_t *)swift_slowAlloc();
    id v290 = (id)swift_slowAlloc();
    *(_DWORD *)long long v61 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v296 = sub_100024E94((uint64_t)v284, v54, (uint64_t *)&v290);
    uint64_t v62 = v282;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    os_signpost_id_t v63 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v58, (os_signpost_type_t)v269, v63, "ExtensionLoader", "Request to %s", v61, 0xCu);
    swift_arrayDestroy();
    uint64_t v64 = v278;
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v65 = v280;
    sub_10005156C();
    v66();
    v277(v65, v64, v62);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, char *, uint64_t))(v281 + 16))(v280, v51, v57);
  }
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  v277 = (void (*)(char *, char *, uint64_t))OSSignpostIntervalState.init(id:isOpen:)();
  sub_10005156C();
  v67();
  id v68 = (void *)swift_allocObject();
  id v69 = AMSMetricsLoggingSubsystemEngagement;
  uint64_t v70 = Dictionary.init(dictionaryLiteral:)();
  id v71 = [objc_allocWithZone((Class)NSLock) init];
  void v68[2] = v69;
  v260 = v68 + 2;
  v68[6] = v70;
  void v68[7] = v71;
  unsigned __int8 v72 = v284;
  v68[3] = 0;
  v68[4] = v72;
  v279 = v68;
  v280 = (char *)v54;
  v68[5] = v54;
  swift_bridgeObjectRetain();
  [v71 lock];
  v259 = v68 + 6;
  sub_1000258D8(0x6E69726170657250, 0xE900000000000067, 0x74736575716572, 0xE700000000000000);
  [v71 unlock];
  if (qword_10022C488 != -1) {
    swift_once();
  }
  *(void *)&long long v264 = qword_1002440F0;
  uint64_t v73 = sub_100043478(&qword_10022E560);
  uint64_t v74 = type metadata accessor for LogMessage();
  sub_100044798(v74);
  uint64_t v76 = *(void *)(v75 + 72);
  uint64_t v78 = *(unsigned __int8 *)(v77 + 80);
  uint64_t v79 = (v78 + 32) & ~v78;
  uint64_t v80 = v79 + 2 * v76;
  uint64_t v268 = v73;
  uint64_t v266 = v78 | 7;
  uint64_t v81 = swift_allocObject();
  long long v257 = xmmword_1001C3120;
  *(_OWORD *)(v81 + 16) = xmmword_1001C3120;
  uint64_t v269 = v79;
  v267 = (void *)type metadata accessor for ExtensionLoader();
  v293 = v267;
  id v290 = v283;
  swift_retain();
  id v82 = (id)AMSLogKey();
  if (v82)
  {
    uint64_t v83 = v82;
    uint64_t v84 = v76;
    uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v87 = v86;

    swift_bridgeObjectRetain();
    uint64_t v88 = v276;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100046794();
    sub_10004675C();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100046284(MetatypeMetadata);
    sub_1000423CC((uint64_t)&v296);
    sub_100020E44();
    v298 = &type metadata for String;
    uint64_t v296 = v85;
    uint64_t v76 = v84;
    v297 = v87;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v296);
    sub_1000208D8();
    sub_100040AB8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v88 = v276;
    sub_1000499CC();
    sub_100046794();
    sub_10004675C();
    uint64_t v90 = swift_getMetatypeMetadata();
    sub_100046284(v90);
    sub_1000423CC((uint64_t)&v296);
    sub_100020E94();
    sub_100040AB8();
  }
  sub_10004377C((uint64_t)&v290);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10002064C();
  LogMessage.StringInterpolation.appendLiteral(_:)(v91);
  sub_100043520(v274, (uint64_t)&v290);
  LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
  sub_1000423CC((uint64_t)&v290);
  v92._countAndFlagsBits = 544175136;
  v92._object = (void *)0xE400000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v92);
  v293 = &type metadata for String;
  int v93 = v284;
  uint64_t v94 = v280;
  id v290 = v284;
  uint64_t v291 = (uint64_t)v280;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)&v290);
  v95._countAndFlagsBits = 41;
  v95._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v95);
  LogMessage.init(stringInterpolation:)();
  uint64_t v96 = static os_log_type_t.default.getter();
  sub_10004841C(v96);
  swift_bridgeObjectRelease();
  id v290 = 0;
  id v97 = [v265 makeXPCConnectionWithError:&v290];
  id v98 = v290;
  uint64_t v258 = v76;
  if (v97)
  {
    long long v99 = v97;
    *(void *)&long long v264 = v80;
    long long v100 = v93;
    uint64_t v101 = self;
    id v102 = v98;
    id v103 = v99;
    uint64_t v104 = (void *)v101;
    Swift::String v105 = v103;
    id v106 = [v104 interfaceWithProtocol:&OBJC_PROTOCOL___AMSEngagementExtensionRemoteContextProtocol];
    [v105 setRemoteObjectInterface:v106];

    [v105 resume];
    uint64_t v107 = (void *)swift_allocObject();
    uint64_t v108 = v283;
    v107[2] = v283;
    v107[3] = v93;
    v107[4] = v94;
    v294 = sub_1000C3E64;
    v295 = v107;
    id v290 = _NSConcreteStackBlock;
    uint64_t v291 = 1107296256;
    uint64_t v109 = v108;
    v292 = sub_100181204;
    v293 = &unk_1002108D8;
    id v110 = _Block_copy(&v290);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    id v111 = [v105 synchronousRemoteObjectProxyWithErrorHandler:v110];
    _Block_release(v110);
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100043520((uint64_t)&v296, (uint64_t)&v290);
    sub_100043478((uint64_t *)&unk_10022F4B0);
    uint64_t v112 = swift_dynamicCast();
    id v265 = v105;
    if (v112)
    {
      uint64_t v113 = v288;
      sub_1000C369C(v112, v105);
      uint64_t v114 = swift_allocObject();
      *(unsigned char *)(v114 + 16) = 0;
      uint64_t v115 = swift_allocObject();
      uint64_t v116 = v249;
      *(void *)(v115 + 16) = v248;
      *(void *)(v115 + 24) = v116;
      id v117 = objc_allocWithZone((Class)NSLock);
      swift_retain();
      id v118 = [v117 init];
      uint64_t v119 = (void *)swift_allocObject();
      v119[2] = v114;
      v119[3] = v118;
      v119[4] = v105;
      v119[5] = v115;
      unint64_t v120 = v277;
      v119[6] = v279;
      v119[7] = v120;
      uint64_t v273 = (uint64_t)v119;
      v119[8] = v275;
      double v121 = a6 * 1000.0;
      if ((~COERCE__INT64(a6 * 1000.0) & 0x7FF0000000000000) != 0)
      {
        if (v121 > -9.22337204e18)
        {
          if (v121 < 9.22337204e18)
          {
            uint64_t v237 = v113;
            uint64_t v122 = (uint64_t)v121;
            uint64_t v251 = v283[3];
            swift_retain();
            id v271 = v118;
            uint64_t v272 = v115;
            swift_retain();
            swift_retain();
            swift_retain();
            uint64_t v123 = v239;
            static DispatchTime.now()();
            uint64_t v124 = v240;
            v238 = (void *)v122;
            uint64_t *v240 = v122;
            uint64_t v125 = v114;
            uint64_t v127 = v241;
            uint64_t v126 = v242;
            (*(void (**)(uint64_t *, void, void (*)(void, void)))(v241 + 104))(v124, enum case for DispatchTimeInterval.milliseconds(_:), v242);
            long long v128 = v243;
            + infix(_:_:)();
            (*(void (**)(uint64_t *, void))(v127 + 8))(v124, v126);
            Swift::String v129 = *(void (**)(void, void))(v261 + 8);
            v261 += 8;
            v242 = v129;
            v129(v123, v252);
            uint64_t v130 = swift_allocObject();
            swift_weakInit();
            long long v131 = (void *)swift_allocObject();
            v131[2] = v125;
            v131[3] = v130;
            long long v132 = v280;
            v131[4] = v100;
            v131[5] = v132;
            uint64_t v133 = v273;
            v131[6] = sub_1000C3F20;
            v131[7] = v133;
            v131[8] = v275;
            v294 = sub_1000C3FDC;
            v295 = v131;
            id v290 = _NSConcreteStackBlock;
            uint64_t v291 = 1107296256;
            v292 = sub_10002CD0C;
            v293 = &unk_1002109C8;
            uint64_t v134 = _Block_copy(&v290);
            swift_bridgeObjectRetain();
            uint64_t v275 = v125;
            swift_retain();
            swift_retain();
            swift_retain();
            uint64_t v135 = v253;
            static DispatchQoS.unspecified.getter();
            *(void *)&long long v288 = _swiftEmptyArrayStorage;
            uint64_t v136 = sub_10002AFB0((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
            uint64_t v137 = sub_100043478((uint64_t *)&unk_10022F4C0);
            uint64_t v247 = sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
            uint64_t v248 = v137;
            uint64_t v250 = v136;
            dispatch thunk of SetAlgebra.init<A>(_:)();
            OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
            _Block_release(v134);
            uint64_t v138 = *(void *)(v263 + 8);
            v263 += 8;
            uint64_t v251 = v138;
            sub_10005156C();
            v139();
            uint64_t v140 = v262 + 8;
            v249 = *(void (**)(void, void))(v262 + 8);
            v249(v135, v254);
            v242(v128, v252);
            swift_release();
            swift_release();
            uint64_t v261 = qword_1002440F0;
            uint64_t v141 = swift_allocObject();
            sub_100045EDC(v141);
            id v142 = (id)AMSLogKey();
            uint64_t v262 = v140;
            if (v142)
            {
              uint64_t v143 = v142;
              uint64_t v144 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v146 = v145;

              swift_bridgeObjectRetain();
              sub_1000208BC();
              sub_100020E60();
              uint64_t v147 = sub_10002110C();
              v289 = (void *)swift_getMetatypeMetadata();
              *(void *)&long long v288 = v147;
              LogMessage.StringInterpolation.appendInterpolation(safe:)();
              sub_1000423CC((uint64_t)&v288);
              sub_100020E44();
              v289 = &type metadata for String;
              *(void *)&long long v288 = v144;
              *((void *)&v288 + 1) = v146;
              LogMessage.StringInterpolation.appendInterpolation(safe:)();
              sub_1000423CC((uint64_t)&v288);
              sub_1000208D8();
              sub_100011CC0();
              swift_bridgeObjectRelease();
            }
            else
            {
              sub_100020E78();
              sub_100020E60();
              sub_100049788(&v290, (uint64_t)v293);
              uint64_t DynamicType = swift_getDynamicType();
              v289 = (void *)swift_getMetatypeMetadata();
              *(void *)&long long v288 = DynamicType;
              LogMessage.StringInterpolation.appendInterpolation(safe:)();
              sub_1000423CC((uint64_t)&v288);
              sub_100020E94();
              sub_100011CC0();
            }
            uint64_t v193 = v237;
            sub_10004377C((uint64_t)&v290);
            LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
            sub_10002064C();
            LogMessage.StringInterpolation.appendLiteral(_:)(v194);
            v293 = &type metadata for String;
            long long v195 = v284;
            long long v196 = v280;
            id v290 = v284;
            uint64_t v291 = (uint64_t)v280;
            swift_bridgeObjectRetain();
            LogMessage.StringInterpolation.appendInterpolation(safe:)();
            sub_1000423CC((uint64_t)&v290);
            v197._countAndFlagsBits = 0x756F656D69742820;
            v197._object = (void *)0xEB00000000203A74;
            LogMessage.StringInterpolation.appendLiteral(_:)(v197);
            v293 = &type metadata for Int;
            id v290 = v238;
            LogMessage.StringInterpolation.appendInterpolation(safe:)();
            sub_1000423CC((uint64_t)&v290);
            v198._countAndFlagsBits = 695430432;
            v198._object = (void *)0xE400000000000000;
            LogMessage.StringInterpolation.appendLiteral(_:)(v198);
            sub_100011CC0();
            uint64_t v199 = static os_log_type_t.default.getter();
            sub_10004841C(v199);
            swift_bridgeObjectRelease();
            swift_beginAccess();
            v200 = (void *)v279[7];
            [v200 lock];
            sub_1000486D4(0xD000000000000012, (uint64_t)"Performing request");
            [v200 unlock];
            swift_endAccess();
            sub_10004D510(0, (unint64_t *)&qword_10022F690);
            uint64_t v202 = v244;
            uint64_t v201 = v245;
            uint64_t v203 = v246;
            (*(void (**)(uint64_t, void, uint64_t))(v245 + 104))(v244, enum case for DispatchQoS.QoSClass.default(_:), v246);
            v204 = (void *)static OS_dispatch_queue.global(qos:)();
            (*(void (**)(uint64_t, uint64_t))(v201 + 8))(v202, v203);
            sub_100043520(v274, (uint64_t)&v288);
            uint64_t v205 = swift_allocObject();
            *(void *)(v205 + 16) = v193;
            sub_100043510(&v288, (_OWORD *)(v205 + 24));
            *(void *)(v205 + 56) = v283;
            *(void *)(v205 + 64) = v195;
            *(void *)(v205 + 72) = v196;
            *(void *)(v205 + 80) = sub_1000C3F20;
            *(void *)(v205 + 88) = v273;
            v294 = sub_1000C4048;
            v295 = (void *)v205;
            id v290 = _NSConcreteStackBlock;
            uint64_t v291 = 1107296256;
            v292 = sub_10002CD0C;
            v293 = &unk_100210A18;
            v206 = _Block_copy(&v290);
            swift_retain();
            swift_retain();
            swift_unknownObjectRetain();
            static DispatchQoS.unspecified.getter();
            v285 = _swiftEmptyArrayStorage;
            dispatch thunk of SetAlgebra.init<A>(_:)();
            OS_dispatch_queue.async(group:qos:flags:execute:)();

            _Block_release(v206);
            swift_release();
            swift_release();
            swift_unknownObjectRelease();

            sub_10005156C();
            v207();
            sub_10005156C();
            v208();
            sub_10004377C((uint64_t)&v296);
            uint64_t v209 = sub_10004A55C();
            v210(v209);
            swift_release();
            swift_release();
            swift_release();
            return swift_release();
          }
LABEL_48:
          __break(1u);
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_48;
    }

    swift_bridgeObjectRelease();
    uint64_t v154 = swift_allocObject();
    sub_100045EDC(v154);
    id v155 = (id)AMSLogKey();
    if (v155)
    {
      Swift::String v156 = v155;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100044114();

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100049788(&v290, (uint64_t)v293);
      uint64_t v157 = swift_getDynamicType();
      v289 = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v288 = v157;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v288);
      sub_100020E44();
      v289 = &type metadata for String;
      *(void *)&long long v288 = v88;
      *((void *)&v288 + 1) = v109;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v288);
      sub_1000208D8();
      sub_100011CC0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000499CC();
      sub_100046794();
      uint64_t v182 = sub_10004675C();
      v289 = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v288 = v182;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v288);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    uint64_t v183 = v281;
    sub_10004377C((uint64_t)&v290);
    sub_100043B80();
    uint64_t v184 = static os_log_type_t.error.getter();
    sub_10004841C(v184);
    swift_bridgeObjectRelease();
    sub_1000BF138();
    long long v185 = OSSignposter.logHandle.getter();
    uint64_t v186 = v251;
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v187 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      uint64_t v188 = v236;
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v190 = v237;
      uint64_t v189 = v238;
      if ((*(unsigned int (**)(uint64_t, void *))(v237 + 88))(v188, v238) == enum case for OSSignpostError.doubleEnd(_:))
      {
        NSURL v191 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, void *))(v190 + 8))(v188, v189);
        NSURL v191 = "Proxy Object does not conform to protocol";
      }
      v218 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v218 = 0;
      uint64_t v219 = v251;
      os_signpost_id_t v220 = OSSignpostID.rawValue.getter();
      v221 = v191;
      uint64_t v186 = v219;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v185, v187, v220, "ExtensionLoader", v221, v218, 2u);
      swift_slowDealloc();
    }

    v284 = *(void **)(v183 + 8);
    ((void (*)(uint64_t, uint64_t))v284)(v186, v282);
    sub_10005156C();
    v222();
    v223 = v279;
    v224 = (void *)v279[7];
    [v224 lock];
    sub_1000486D4(0xD000000000000026, (uint64_t)"Extension does not conform to protocol");
    [v224 unlock];
    sub_1000C3D18();
    uint64_t v225 = sub_100043C1C();
    unsigned char *v226 = 0;
    v227 = (void *)v223[7];
    [v227 lock];
    swift_errorRetain();
    swift_errorRelease();
    v223[3] = v225;
    [v227 unlock];
    swift_errorRelease();
    long long v228 = v260[1];
    v299[0] = *v260;
    v299[1] = v228;
    v299[2] = v260[2];
    sub_1000C3D64((uint64_t)v299);
    sub_10016AAEC();
    sub_1000C3DC4((uint64_t)v299);
    sub_100043C1C();
    unsigned char *v229 = 0;
    swift_willThrow();
    swift_release();

    sub_10004377C((uint64_t)&v296);
    ((void (*)(char *, uint64_t))v284)(v278, v282);
    return swift_release();
  }
  id v148 = v290;
  uint64_t v149 = _convertNSErrorToError(_:)();

  uint64_t v270 = v149;
  swift_willThrow();
  uint64_t v273 = qword_1002440F0;
  uint64_t v150 = (__n128 *)swift_allocObject();
  sub_100045B94(v150, (__n128)xmmword_1001C3140);
  id v290 = v283;
  swift_retain();
  id v151 = (id)AMSLogKey();
  if (v151)
  {
    uint64_t v152 = v151;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100044114();

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(&v290, (uint64_t)v293);
    uint64_t v153 = swift_getDynamicType();
    v298 = (void *)swift_getMetatypeMetadata();
    uint64_t v296 = v153;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v296);
    sub_100020E44();
    v298 = &type metadata for String;
    uint64_t v296 = v88;
    v297 = &v290;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v296);
    sub_1000208D8();
    sub_1000474F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000499CC();
    sub_100046794();
    sub_10004675C();
    uint64_t v158 = swift_getMetatypeMetadata();
    sub_100046284(v158);
    sub_1000423CC((uint64_t)&v296);
    sub_100020E94();
    sub_100040AB8();
  }
  sub_10004377C((uint64_t)&v290);
  sub_100043B80();
  uint64_t v272 = 2 * v76;
  v293 = &type metadata for String;
  id v290 = v284;
  uint64_t v291 = (uint64_t)v280;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)&v290);
  LogMessage.init(stringLiteral:)();
  swift_getErrorValue();
  uint64_t v159 = v286;
  uint64_t v160 = v287;
  v293 = v287;
  uint64_t v161 = sub_10003BAA4((uint64_t *)&v290);
  (*(void (**)(uint64_t *, uint64_t, void *))(*(v160 - 1) + 16))(v161, v159, v160);
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)&v290);
  uint64_t v162 = static os_log_type_t.error.getter();
  sub_10004841C(v162);
  swift_bridgeObjectRelease();
  if (v250)
  {
    swift_bridgeObjectRelease();
    uint64_t v163 = v279;
    long long v164 = (void *)v279[7];
    [v164 lock];
    sub_1000486D4(0xD000000000000011, (uint64_t)"Invalid extension");
    [v164 unlock];
    sub_1000C3D18();
    uint64_t v165 = sub_100043C1C();
    *id v166 = 0;
    uint64_t v167 = (void *)v163[7];
    [v167 lock];
    swift_errorRetain();
    swift_errorRelease();
    v163[3] = v165;
    [v167 unlock];
    swift_errorRelease();
    long long v168 = v260[1];
    v300[0] = *v260;
    v300[1] = v168;
    v300[2] = v260[2];
    sub_1000C3D64((uint64_t)v300);
    sub_10016AAEC();
    sub_1000C3DC4((uint64_t)v300);
    sub_100043C1C();
    unsigned char *v169 = 0;
    swift_willThrow();
    sub_1000C1ABC();
    swift_errorRelease();
    swift_release();
    uint64_t v170 = sub_10004A55C();
    v171(v170);
    return swift_release();
  }
  uint64_t v173 = (void *)_convertErrorToNSError(_:)();
  id v174 = [v173 domain];
  uint64_t v175 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v177 = v176;

  BOOL v179 = v175 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v177 == v178;
  uint64_t v180 = v281;
  if (v179)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v181 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v181 & 1) == 0) {
      goto LABEL_39;
    }
  }
  if ([v173 code] != (id)5)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    swift_willThrow();

    sub_1000C1ABC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v180 + 8))(v278, v282);
    return swift_release();
  }
  id v271 = v173;
  uint64_t v273 = qword_1002440F0;
  id v265 = (id)(v269 + 3 * v76);
  v211 = (__n128 *)swift_allocObject();
  long long v264 = xmmword_1001C3130;
  sub_100045B94(v211, (__n128)xmmword_1001C3130);
  id v290 = v283;
  swift_retain();
  id v212 = (id)AMSLogKey();
  if (v212)
  {
    v213 = v212;
    uint64_t v214 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v216 = v215;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v217 = sub_10002110C();
    v298 = (void *)swift_getMetatypeMetadata();
    uint64_t v296 = v217;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v296);
    sub_100020E44();
    v298 = &type metadata for String;
    uint64_t v296 = v214;
    v297 = v216;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v296);
    sub_1000208D8();
    sub_1000474F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000499CC();
    sub_100046794();
    sub_10004675C();
    uint64_t v230 = swift_getMetatypeMetadata();
    sub_100046284(v230);
    sub_1000423CC((uint64_t)&v296);
    sub_100020E94();
    sub_100040AB8();
  }
  sub_10004377C((uint64_t)&v290);
  sub_100043B80();
  v293 = &type metadata for String;
  uint64_t v231 = (uint64_t)v284;
  uint64_t v232 = (uint64_t)v280;
  id v290 = v284;
  uint64_t v291 = (uint64_t)v280;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)&v290);
  uint64_t v233 = static os_log_type_t.default.getter();
  sub_10004841C(v233);
  swift_bridgeObjectRelease();
  sub_1000C3554();
  v234 = (void *)sub_1000BF45C(v231, v232);
  sub_1000BFAAC(v274, v234, 1, v248, v249, a6);

  swift_bridgeObjectRelease();
  sub_1000C1ABC();
  swift_errorRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v281 + 8))(v278, v282);
  return swift_release();
}

uint64_t sub_1000C1ABC()
{
  uint64_t v0 = type metadata accessor for OSSignpostError();
  uint64_t v18 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = &v16[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for OSSignpostID();
  uint64_t v3 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for OSSignposter();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000BF138();
  uint64_t v10 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  int v17 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v11 = v18;
    if ((*(unsigned int (**)(unsigned char *, uint64_t))(v18 + 88))(v2, v0) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v12 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v2, v0);
      uint64_t v12 = "Failed to make XPC connection";
    }
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    os_signpost_id_t v14 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, (os_signpost_type_t)v17, v14, "ExtensionLoader", v12, v13, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v19);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1000C1DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  if (qword_10022C488 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v26 = (void *)type metadata accessor for ExtensionLoader();
  v25[0] = a2;
  swift_retain();
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = a3;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    sub_100049788(v25, (uint64_t)v26);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    v16._countAndFlagsBits = 5972026;
    v16._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v11;
    v23[1] = v13;
    a3 = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    v17._countAndFlagsBits = 93;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    sub_100049788(v25, (uint64_t)v26);
    uint64_t v19 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    v20._countAndFlagsBits = 58;
    v20._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v25);
  LogMessage.init(stringLiteral:)();
  uint64_t v26 = &type metadata for String;
  v25[0] = a3;
  v25[1] = a4;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)v25);
  uint64_t v21 = static os_log_type_t.error.getter();
  sub_10004841C(v21);
  return swift_bridgeObjectRelease();
}

id sub_1000C20EC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v76 = a8;
  uint64_t v71 = a7;
  uint64_t v75 = a6;
  id v73 = a5;
  id v78 = a4;
  uint64_t v74 = a2;
  uint64_t v77 = a1;
  uint64_t v10 = type metadata accessor for OSSignpostError();
  uint64_t v70 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for OSSignpostID();
  uint64_t v72 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  Swift::String v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  Swift::String v18 = (char *)&v60 - v17;
  uint64_t v19 = type metadata accessor for OSSignposter();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (unsigned char *)(a3 + 16);
  id result = (id)swift_beginAccess();
  if ((*(unsigned char *)(a3 + 16) & 1) == 0)
  {
    long long v61 = v12;
    uint64_t v62 = v10;
    id v68 = v22;
    id v69 = v18;
    os_signpost_id_t v63 = v16;
    uint64_t v66 = v20;
    uint64_t v67 = v19;
    uint64_t v25 = v72;
    uint64_t v64 = v13;
    uint64_t v65 = a9;
    uint64_t v26 = v75;
    uint64_t v27 = (void *)(v75 + 16);
    [v78 lock];
    [v73 invalidate];
    swift_beginAccess();
    unsigned char *v23 = 1;
    swift_beginAccess();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 16);
    uint64_t v29 = v77;
    uint64_t v30 = v74;
    if (v28)
    {
      swift_retain();
      v28(v29, v30);
      sub_10003E0EC((uint64_t)v28);
    }
    swift_beginAccess();
    uint64_t v31 = *(void *)(v26 + 16);
    *uint64_t v27 = 0;
    *(void *)(v26 + 24) = 0;
    sub_10003E0EC(v31);
    uint64_t v32 = v25;
    uint64_t v33 = v66;
    uint64_t v34 = v69;
    if (v30)
    {
      uint64_t v35 = v71;
      uint64_t v36 = (_OWORD *)(v71 + 16);
      swift_beginAccess();
      uint64_t v37 = *(void **)(v35 + 56);
      swift_errorRetain();
      swift_errorRetain();
      [v37 lock];
      swift_errorRetain();
      swift_errorRelease();
      *(void *)(v35 + 24) = v30;
      [v37 unlock];
      swift_errorRelease();
      uint64_t v38 = *(void **)(v35 + 56);
      [v38 lock];
      sub_1000258D8(0x64656873696E6946, 0xE800000000000000, 0x74736575716572, 0xE700000000000000);
      [v38 unlock];
      swift_endAccess();
      swift_beginAccess();
      long long v39 = *(_OWORD *)(v35 + 32);
      v83[0] = *v36;
      v83[1] = v39;
      uint64_t v29 = v77;
      v83[2] = *(_OWORD *)(v35 + 48);
      sub_1000C3D64((uint64_t)v83);
      sub_10016AAEC();
      sub_1000C3DC4((uint64_t)v83);
      swift_errorRelease();
    }
    uint64_t v40 = v68;
    sub_1000BF138();
    sub_100043410(v29, (uint64_t)v81);
    uint64_t v41 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    int v42 = static os_signpost_type_t.end.getter();
    char v43 = OS_os_log.signpostsEnabled.getter();
    uint64_t v44 = v67;
    if (v43)
    {
      LODWORD(v77) = v42;
      swift_retain();
      uint64_t v45 = v61;
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v46 = v70;
      uint64_t v47 = v62;
      int v48 = (*(uint64_t (**)(char *, uint64_t))(v70 + 88))(v45, v62);
      uint64_t v49 = v64;
      uint64_t v50 = v63;
      if (v48 == enum case for OSSignpostError.doubleEnd(_:))
      {
        char v51 = 0;
        char v52 = 0;
        unint64_t v53 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v47);
        unint64_t v53 = "%s";
        char v52 = 2;
        char v51 = 1;
      }
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v50, v34, v49);
      uint64_t v54 = v33;
      uint64_t v55 = swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      *(unsigned char *)uint64_t v55 = v52;
      *(unsigned char *)(v55 + 1) = v51;
      *(_WORD *)(v55 + 2) = 2080;
      if (v82) {
        uint64_t v56 = 0x6564656563637553;
      }
      else {
        uint64_t v56 = 0x64656C696146;
      }
      if (v82) {
        unint64_t v57 = 0xE900000000000064;
      }
      else {
        unint64_t v57 = 0xE600000000000000;
      }
      uint64_t v79 = sub_100024E94(v56, v57, &v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000423CC((uint64_t)v81);
      os_signpost_id_t v58 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v41, (os_signpost_type_t)v77, v58, "ExtensionLoader", v53, (uint8_t *)v55, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      int v59 = *(void (**)(char *, uint64_t))(v32 + 8);
      v59(v69, v49);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v68, v67);
      v59(v50, v49);
    }
    else
    {

      sub_1000423CC((uint64_t)v81);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v34, v64);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v40, v44);
    }
    return [v78 unlock];
  }
  return result;
}

uint64_t sub_1000C2870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(long long *, uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v12 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v12 - 8);
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 16))
  {
    if (qword_10022C488 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v14 = Strong;
      uint64_t MetatypeMetadata = (void *)type metadata accessor for ExtensionLoader();
      *(void *)&long long v48 = v14;
      sub_100043510(&v48, &v50);
    }
    else
    {
      *((void *)&v51 + 1) = swift_getMetatypeMetadata();
      *(void *)&long long v50 = a7;
    }
    id v17 = (id)AMSLogKey();
    if (v17)
    {
      Swift::String v18 = v17;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v22._countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      sub_100049788(&v50, *((uint64_t *)&v51 + 1));
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v48 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v48);
      v24._countAndFlagsBits = 5972026;
      v24._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&long long v48 = v19;
      *((void *)&v48 + 1) = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v48);
      v25._countAndFlagsBits = 93;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v35._countAndFlagsBits = 0;
      v35._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      sub_100049788(&v50, *((uint64_t *)&v51 + 1));
      uint64_t v36 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v48 = v36;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v48);
      v37._countAndFlagsBits = 58;
      v37._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v50);
    LogMessage.init(stringLiteral:)();
    uint64_t v38 = static os_log_type_t.debug.getter();
    sub_10004841C(v38);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_10022C488 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    swift_beginAccess();
    uint64_t v15 = swift_weakLoadStrong();
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t MetatypeMetadata = (void *)type metadata accessor for ExtensionLoader();
      *(void *)&long long v48 = v16;
      sub_100043510(&v48, &v50);
    }
    else
    {
      *((void *)&v51 + 1) = swift_getMetatypeMetadata();
      *(void *)&long long v50 = a7;
    }
    id v26 = (id)AMSLogKey();
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v31._countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      sub_100049788(&v50, *((uint64_t *)&v51 + 1));
      uint64_t v32 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v48 = v32;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v48);
      v33._countAndFlagsBits = 5972026;
      v33._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&long long v48 = v28;
      *((void *)&v48 + 1) = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v48);
      v34._countAndFlagsBits = 93;
      v34._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v40._countAndFlagsBits = 0;
      v40._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      sub_100049788(&v50, *((uint64_t *)&v51 + 1));
      uint64_t v41 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v48 = v41;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v48);
      v42._countAndFlagsBits = 58;
      v42._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v50);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v43._countAndFlagsBits = 0x2074736575716552;
    v43._object = (void *)0xEB00000000206F74;
    LogMessage.StringInterpolation.appendLiteral(_:)(v43);
    *((void *)&v51 + 1) = &type metadata for String;
    *(void *)&long long v50 = a3;
    *((void *)&v50 + 1) = a4;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v50);
    v44._object = (void *)0x80000001001CE0E0;
    v44._countAndFlagsBits = 0xD00000000000001DLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v44);
    LogMessage.init(stringInterpolation:)();
    uint64_t v45 = static os_log_type_t.default.getter();
    sub_10004841C(v45);
    swift_bridgeObjectRelease();
    sub_1000C3D18();
    long long v50 = 0u;
    long long v51 = 0u;
    uint64_t v46 = swift_allocError();
    *uint64_t v47 = 2;
    a5(&v50, v46);
    swift_errorRelease();
    return sub_1000423CC((uint64_t)&v50);
  }
}

uint64_t sub_1000C2F30(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_100049788(a2, a2[3]);
  uint64_t v13 = _bridgeAnythingToObjectiveC<A>(_:)();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a3;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  void v14[6] = a7;
  v17[4] = sub_1000C40A8;
  v17[5] = v14;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_1000C34C0;
  void v17[3] = &unk_100210A68;
  uint64_t v15 = _Block_copy(v17);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [a1 performRequestWithObject:v13 completion:v15];
  _Block_release(v15);
  return swift_unknownObjectRelease();
}

uint64_t sub_1000C3070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  __chkstk_darwin(v10);
  if (qword_10022C488 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  *((void *)&v37 + 1) = type metadata accessor for ExtensionLoader();
  *(void *)&long long v36 = a3;
  swift_retain();
  id v11 = (id)AMSLogKey();
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(&v36, *((uint64_t *)&v37 + 1));
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v34[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v34);
    v18._countAndFlagsBits = 5972026;
    v18._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    uint64_t MetatypeMetadata = &type metadata for String;
    v34[0] = v13;
    v34[1] = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v34);
    v19._countAndFlagsBits = 93;
    v19._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    sub_100049788(&v36, *((uint64_t *)&v37 + 1));
    uint64_t v21 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v34[0] = v21;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v34);
    v22._countAndFlagsBits = 58;
    v22._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v36);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v23._object = (void *)0x80000001001CE0C0;
  v23._countAndFlagsBits = 0xD000000000000012;
  LogMessage.StringInterpolation.appendLiteral(_:)(v23);
  *((void *)&v37 + 1) = &type metadata for String;
  *(void *)&long long v36 = a4;
  *((void *)&v36 + 1) = a5;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)&v36);
  v24._countAndFlagsBits = 0x6C75736572202D20;
  v24._object = (void *)0xEB00000000203A74;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  v25._countAndFlagsBits = 0x726F727265202D20;
  v25._object = (void *)0xEA0000000000203ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v25);
  if (a2)
  {
    swift_getErrorValue();
    *((void *)&v37 + 1) = v33;
    id v26 = sub_10003BAA4((uint64_t *)&v36);
    (*(void (**)(uint64_t *))(*(void *)(v33 - 8) + 16))(v26);
  }
  else
  {
    long long v36 = 0u;
    long long v37 = 0u;
  }
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)&v36);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  LogMessage.init(stringInterpolation:)();
  uint64_t v28 = static os_log_type_t.default.getter();
  sub_10004841C(v28);
  swift_bridgeObjectRelease();
  return a6(a1, a2);
}

uint64_t sub_1000C34C0(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v5 = *(void (**)(long long *, void *))(a1 + 32);
  if (a2)
  {
    *((void *)&v9 + 1) = swift_getObjectType();
    *(void *)&long long v8 = a2;
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(&v8, a3);
  swift_release();

  return sub_1000423CC((uint64_t)&v8);
}

uint64_t sub_1000C3554()
{
  uint64_t v1 = v0;
  sub_10004D510(0, &qword_10022F498);
  id v2 = sub_1000C3628();
  id v3 = [self executeQuery:v2];
  sub_10004D510(0, &qword_10022F4A0);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)(v1 + 16) = v4;
  return swift_bridgeObjectRelease();
}

id sub_1000C3628()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithExtensionPointIdentifier:v1];

  return v2;
}

void sub_1000C369C(uint64_t a1, void *a2)
{
  id v6 = _NSConcreteStackBlock;
  uint64_t v7 = 1107296256;
  long long v8 = sub_10002CD0C;
  long long v9 = &unk_100210838;
  uint64_t v4 = _Block_copy(&v6);
  swift_retain();
  swift_release();
  [a2 setInvalidationHandler:v4];
  _Block_release(v4);
  uint64_t v10 = sub_1000C3C84;
  uint64_t v11 = v2;
  id v6 = _NSConcreteStackBlock;
  uint64_t v7 = 1107296256;
  long long v8 = sub_10002CD0C;
  long long v9 = &unk_100210860;
  unint64_t v5 = _Block_copy(&v6);
  swift_retain();
  swift_release();
  [a2 setInterruptionHandler:v5];
  _Block_release(v5);
}

uint64_t sub_1000C37F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_100011D4C();
  if (qword_10022C488 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v7 = type metadata accessor for LogMessage();
  sub_100044798(v7);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v26 = type metadata accessor for ExtensionLoader();
  v25[0] = a1;
  swift_retain();
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    long long v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(v25, v26);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    v15._countAndFlagsBits = 5972026;
    v15._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v10;
    v23[1] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    v16._countAndFlagsBits = 93;
    v16._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    sub_100049788(v25, v26);
    uint64_t v18 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    v19._countAndFlagsBits = 58;
    v19._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v25);
  uint64_t v20 = LogMessage.init(stringLiteral:)();
  uint64_t v21 = a3(v20);
  sub_10004841C(v21);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C3AA4()
{
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1000C3ACC()
{
  sub_1000C3AA4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ExtensionLoader()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ExtensionLoader.ExtensionPoint(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *id result = a2;
        return result;
      case 2:
        *(_WORD *)id result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)id result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *id result = 0;
      break;
    case 2:
      *(_WORD *)id result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000C3BC0);
    case 4:
      *(_DWORD *)id result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtensionLoader.ExtensionPoint()
{
  return &type metadata for ExtensionLoader.ExtensionPoint;
}

unint64_t sub_1000C3BFC()
{
  unint64_t result = qword_10022F460;
  if (!qword_10022F460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022F460);
  }
  return result;
}

uint64_t sub_1000C3C48()
{
  sub_10002064C();
  return sub_1000C37F4(v0, v1, (uint64_t (*)(uint64_t))&static os_log_type_t.debug.getter);
}

uint64_t sub_1000C3C84()
{
  sub_10002064C();
  return sub_1000C37F4(v0, v1, (uint64_t (*)(uint64_t))&static os_log_type_t.error.getter);
}

uint64_t sub_1000C3CC0()
{
  swift_errorRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

unint64_t sub_1000C3D18()
{
  unint64_t result = qword_10022F4A8;
  if (!qword_10022F4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022F4A8);
  }
  return result;
}

uint64_t sub_1000C3D64(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
  id v3 = *(id *)a1;
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v4 = v2;
  return a1;
}

uint64_t sub_1000C3DC4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);

  swift_errorRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000C3E24()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000C3E64(uint64_t a1)
{
  return sub_1000C1DAC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1000C3E70()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000C3E80()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C3EC0()
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 72, 7);
}

id sub_1000C3F20(uint64_t a1, uint64_t a2)
{
  return sub_1000C20EC(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64));
}

uint64_t sub_1000C3F54()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C3F8C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1000C3FDC()
{
  return sub_1000C2870(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(long long *, uint64_t))(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1000C3FF0()
{
  swift_unknownObjectRelease();
  sub_10004377C(v0 + 24);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1000C4048()
{
  return sub_1000C2F30(*(void **)(v0 + 16), (void *)(v0 + 24), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88));
}

uint64_t sub_1000C4060()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000C40A8(uint64_t a1, uint64_t a2)
{
  return sub_1000C3070(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 40));
}

unsigned char *storeEnumTagSinglePayload for ExtensionLoaderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C4184);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtensionLoaderError()
{
  return &type metadata for ExtensionLoaderError;
}

unint64_t sub_1000C41C4()
{
  unint64_t result = qword_10022F4D0;
  if (!qword_10022F4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022F4D0);
  }
  return result;
}

unint64_t sub_1000C4210()
{
  unint64_t result = qword_10022F4D8;
  if (!qword_10022F4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022F4D8);
  }
  return result;
}

unint64_t sub_1000C425C()
{
  unint64_t result = qword_10022F4E0;
  if (!qword_10022F4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022F4E0);
  }
  return result;
}

uint64_t sub_1000C4350()
{
  sub_100043478((uint64_t *)&unk_10022E570);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = &type metadata for String;
  strcpy((char *)(inited + 72), "FamilyChanged");
  *(_WORD *)(inited + 86) = -4864;
  return Dictionary.init(dictionaryLiteral:)();
}

id sub_1000C4420()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FamilyObserver.EngagementFamilyChangedEvent();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_1000C447C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FamilyObserver.EngagementFamilyChangedEvent();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000C44B4()
{
  type metadata accessor for FamilyObserver();
  swift_allocObject();
  uint64_t result = sub_1000C4540();
  qword_100244098 = result;
  return result;
}

uint64_t sub_1000C44F0()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  sub_10006741C(v0, qword_10022F4F0);
  sub_100067344(v0, (uint64_t)qword_10022F4F0);
  return static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
}

uint64_t sub_1000C4540()
{
  uint64_t v1 = sub_100043478((uint64_t *)&unk_100231D40);
  __chkstk_darwin(v1 - 8);
  int v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100043478((uint64_t *)&unk_10022F680);
  uint64_t v23 = *(void *)(v8 - 8);
  uint64_t v24 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100043478((uint64_t *)&unk_100231D50);
  swift_allocObject();
  uint64_t v11 = PassthroughSubject.init()();
  *(void *)(v0 + 16) = v11;
  *(void *)(v0 + 24) = 0;
  uint64_t v22 = v0;
  uint64_t v26 = v11;
  uint64_t v12 = qword_10022C440;
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100067344(v4, (uint64_t)qword_10022F4F0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13, v4);
  if (qword_10022C588 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_100244180;
  id v25 = (id)qword_100244180;
  uint64_t v15 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  sub_100021AC0((uint64_t)v3, 1, 1, v15);
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  sub_10002B6DC(&qword_10022ED18, (uint64_t *)&unk_100231D50);
  sub_10006737C();
  id v16 = v14;
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_10002CC0C((uint64_t)v3, (uint64_t *)&unk_100231D40);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  swift_allocObject();
  uint64_t v17 = v22;
  swift_weakInit();
  sub_10002B6DC(&qword_10022ED20, (uint64_t *)&unk_10022F680);
  uint64_t v18 = v24;
  uint64_t v19 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v18);
  *(void *)(v17 + 24) = v19;
  swift_release();
  return v17;
}

uint64_t sub_1000C4918()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000C4C78();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000C4970()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v1 - 8);
  sub_100011D4C();
  sub_100043478(&qword_10022E560);
  uint64_t v2 = type metadata accessor for LogMessage();
  sub_100044798(v2);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v18 = type metadata accessor for FamilyObserver();
  v17[0] = v0;
  swift_retain();
  id v3 = (id)AMSLogKey();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(v17, v18);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v15[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v15, &qword_10022F490);
    v9._countAndFlagsBits = 5972026;
    v9._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    uint64_t MetatypeMetadata = &type metadata for String;
    v15[0] = v5;
    v15[1] = v7;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v15, &qword_10022F490);
    v10._countAndFlagsBits = 93;
    v10._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(v17, v18);
    uint64_t v11 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v15[0] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v15, &qword_10022F490);
    v12._countAndFlagsBits = 58;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v17);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v13 = static os_log_type_t.info.getter();
  sub_10004841C(v13);
  swift_bridgeObjectRelease();
  swift_retain();
  sub_100043478((uint64_t *)&unk_100231D50);
  sub_10002B6DC((unint64_t *)&unk_10022F6B0, (uint64_t *)&unk_100231D50);
  Subject<>.send()();
  return swift_release();
}

void sub_1000C4C78()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v1 - 8);
  sub_100011D4C();
  sub_100043478(&qword_10022E560);
  uint64_t v2 = type metadata accessor for LogMessage();
  sub_100044798(v2);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v20 = type metadata accessor for FamilyObserver();
  v19[0] = v0;
  swift_retain();
  id v3 = (id)AMSLogKey();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(v19, v20);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v17[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v17, &qword_10022F490);
    v9._countAndFlagsBits = 5972026;
    v9._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    uint64_t MetatypeMetadata = &type metadata for String;
    v17[0] = v5;
    v17[1] = v7;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v17, &qword_10022F490);
    v10._countAndFlagsBits = 93;
    v10._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(v19, v20);
    uint64_t v11 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v17[0] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v17, &qword_10022F490);
    v12._countAndFlagsBits = 58;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v19);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v13 = static os_log_type_t.info.getter();
  sub_10004841C(v13);
  swift_bridgeObjectRelease();
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v14 = sub_100051DF8();
  id v15 = [objc_allocWithZone((Class)AMSEngagement) initWithBag:v14];

  id v16 = [objc_allocWithZone((Class)type metadata accessor for FamilyObserver.EngagementFamilyChangedEvent()) init];
}

uint64_t sub_1000C4FDC()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1000C5004()
{
  sub_1000C4FDC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FamilyObserver()
{
  return self;
}

uint64_t type metadata accessor for FamilyObserver.EngagementFamilyChangedEvent()
{
  return self;
}

uint64_t sub_1000C5080()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C50B8()
{
  return sub_1000C4918();
}

ValueMetadata *type metadata accessor for FeatureFlagProvider()
{
  return &type metadata for FeatureFlagProvider;
}

id sub_1000C50D0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v13 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = URL.path.getter();
  LOBYTE(a5) = (*(uint64_t (**)(uint64_t))(a5 + 24))(v14);
  swift_bridgeObjectRelease();
  if (a5)
  {
    uint64_t v15 = type metadata accessor for URL();
    sub_1000456E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a6, a1, v15);
    return (id)sub_100021AC0(a6, 0, 1, v15);
  }
  else
  {
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v68 = a4;
    sub_10003BAA4((uint64_t *)v67);
    sub_1000456E0();
    uint64_t v59 = v6;
    os_signpost_id_t v58 = *(void (**)(uint64_t))(v18 + 16);
    v58(v19);
    id v20 = (id)AMSLogKey();
    uint64_t v61 = a6;
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_1000448B8();
      sub_100045108();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100021144(MetatypeMetadata);
      sub_1000423CC((uint64_t)&v64);
      v26._countAndFlagsBits = 5972026;
      v26._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      uint64_t v66 = &type metadata for String;
      uint64_t v64 = v22;
      uint64_t v65 = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v64);
      v27._countAndFlagsBits = 93;
      v27._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_1000448B8();
      uint64_t v28 = sub_100048CD4();
      uint64_t v66 = (void *)swift_getMetatypeMetadata();
      uint64_t v64 = v28;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v64);
      v29._countAndFlagsBits = 58;
      v29._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v67);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v30._object = (void *)0x80000001001CE300;
    v30._countAndFlagsBits = 0xD000000000000014;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    uint64_t v31 = type metadata accessor for URL();
    uint64_t v68 = v31;
    sub_10003BAA4((uint64_t *)v67);
    sub_1000456E0();
    uint64_t v33 = *(void (**)(void))(v32 + 16);
    uint64_t v60 = v31;
    v33();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v67);
    v34._countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v34);
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v35 = static os_log_type_t.debug.getter();
    sub_10004841C(v35);
    swift_bridgeObjectRelease();
    id v36 = [self defaultManager];
    URL._bridgeToObjectiveC()(v37);
    long long v39 = v38;
    if (a3)
    {
      type metadata accessor for FileAttributeKey(0);
      sub_1000C5A7C();
      v40.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    }
    else
    {
      v40.super.Class isa = 0;
    }
    v67[0] = 0;
    unsigned int v41 = [v36 createDirectoryAtURL:v39 withIntermediateDirectories:a2 & 1 attributes:v40.super.isa error:v67];

    id v62 = v67[0];
    if (v41)
    {
      ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v61, a1, v60);
      sub_100021AC0(v61, 0, 1, v60);
      return v62;
    }
    else
    {
      id v42 = v67[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v68 = a4;
      Swift::String v43 = sub_10003BAA4((uint64_t *)v67);
      ((void (*)(uint64_t *, uint64_t, uint64_t))v58)(v43, v59, a4);
      id v44 = (id)AMSLogKey();
      if (v44)
      {
        uint64_t v45 = v44;
        uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v48 = v47;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        sub_1000448B8();
        sub_100045108();
        uint64_t v49 = swift_getMetatypeMetadata();
        sub_100021144(v49);
        sub_1000423CC((uint64_t)&v64);
        v50._countAndFlagsBits = 5972026;
        v50._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v50);
        uint64_t v66 = &type metadata for String;
        uint64_t v64 = v46;
        uint64_t v65 = v48;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v64);
        v51._countAndFlagsBits = 93;
        v51._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v51);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        sub_1000448B8();
        uint64_t v52 = sub_100048CD4();
        uint64_t v66 = (void *)swift_getMetatypeMetadata();
        uint64_t v64 = v52;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v64);
        v53._countAndFlagsBits = 58;
        v53._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v53);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v67);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v54._countAndFlagsBits = 0xD00000000000001CLL;
      v54._object = (void *)0x80000001001CE320;
      LogMessage.StringInterpolation.appendLiteral(_:)(v54);
      swift_getErrorValue();
      uint64_t v68 = v63;
      sub_10003BAA4((uint64_t *)v67);
      sub_1000456E0();
      (*(void (**)(void))(v55 + 16))();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v67);
      v56._countAndFlagsBits = 0;
      v56._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v56);
      LogMessage.init(stringInterpolation:)();
      uint64_t v57 = static os_log_type_t.error.getter();
      sub_10004841C(v57);
      swift_errorRelease();
      swift_bridgeObjectRelease();
      return (id)sub_100021AC0(v61, 1, 1, v60);
    }
  }
}

void sub_1000C5920()
{
}

uint64_t sub_1000C5970()
{
  return Data.write(to:options:)();
}

uint64_t sub_1000C599C()
{
  return sub_1000C59C0();
}

uint64_t sub_1000C59C0()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 contentsAtPath:v1];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

unint64_t sub_1000C5A3C()
{
  return (unint64_t)sub_1001AD03C() & 1;
}

uint64_t sub_1000C5A64()
{
  return sub_1000C5970();
}

unint64_t sub_1000C5A7C()
{
  unint64_t result = qword_10022CD88;
  if (!qword_10022CD88)
  {
    type metadata accessor for FileAttributeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CD88);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AMSFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C5B98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AMSFlags()
{
  return &type metadata for AMSFlags;
}

unint64_t sub_1000C5BD4()
{
  unint64_t result = qword_10022F6C0;
  if (!qword_10022F6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022F6C0);
  }
  return result;
}

void sub_1000C5C20(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  *(void *)&long long v67 = 0x696669746E656469;
  *((void *)&v67 + 1) = 0xEA00000000007265;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v70, a1, &v73);
  sub_1000434BC((uint64_t)&v70);
  if (!v74)
  {
    sub_1000423CC((uint64_t)&v73);
LABEL_16:
    sub_100043478(&qword_10022E560);
    uint64_t v18 = type metadata accessor for LogMessage();
    sub_100044798(v18);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    uint64_t v70 = v1;
    id v19 = (id)AMSLogKey();
    if (v19)
    {
      id v20 = v19;
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v22;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      uint64_t v24 = sub_10004B410();
      uint64_t v74 = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v73 = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v73);
      v25._countAndFlagsBits = 5972026;
      v25._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v74 = &type metadata for String;
      *(void *)&long long v73 = v21;
      *((void *)&v73 + 1) = v23;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v73);
      v26._countAndFlagsBits = 93;
      v26._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      sub_100049788(&v70, MetatypeMetadata);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t v74 = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v73 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v73);
      v28._countAndFlagsBits = 58;
      v28._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v70);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 == -1) {
      goto LABEL_27;
    }
LABEL_75:
    swift_once();
LABEL_27:
    uint64_t v40 = static os_log_type_t.error.getter();
    sub_10004841C(v40);
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v4 = *((void *)&v67 + 1);
  uint64_t v5 = v67;
  *(void *)&long long v67 = 1635017060;
  *((void *)&v67 + 1) = 0xE400000000000000;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v70, a1, &v73);
  sub_1000434BC((uint64_t)&v70);
  if (!v74)
  {
    swift_bridgeObjectRelease();
    sub_1000423CC((uint64_t)&v73);
    goto LABEL_23;
  }
  uint64_t v6 = sub_100043478(&qword_10022D6F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_23:
    sub_100043478(&qword_10022E560);
    uint64_t v29 = type metadata accessor for LogMessage();
    sub_100044798(v29);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    uint64_t v70 = v1;
    id v30 = (id)AMSLogKey();
    if (v30)
    {
      uint64_t v31 = v30;
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v34 = v33;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      uint64_t v35 = sub_10004B410();
      uint64_t v74 = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v73 = v35;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v73);
      v36._countAndFlagsBits = 5972026;
      v36._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      uint64_t v74 = &type metadata for String;
      *(void *)&long long v73 = v32;
      *((void *)&v73 + 1) = v34;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v73);
      v37._countAndFlagsBits = 93;
      v37._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      sub_100049788(&v70, MetatypeMetadata);
      uint64_t v38 = swift_getDynamicType();
      uint64_t v74 = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v73 = v38;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v73);
      v39._countAndFlagsBits = 58;
      v39._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v70);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 == -1) {
      goto LABEL_27;
    }
    goto LABEL_75;
  }
  uint64_t v7 = v67;
  sub_100043478((uint64_t *)&unk_10022E570);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1001C3130;
  uint64_t v70 = 49;
  unint64_t v71 = 0xE100000000000000;
  sub_100048D0C();
  *(void *)(v8 + 96) = &type metadata for Int;
  *(void *)(v8 + 72) = 25;
  uint64_t v70 = 50;
  unint64_t v71 = 0xE100000000000000;
  sub_100048D0C();
  *(void *)(v8 + 168) = &type metadata for String;
  *(void *)(v8 + 144) = v5;
  *(void *)(v8 + 152) = v4;
  uint64_t v70 = 7565409;
  unint64_t v71 = 0xE300000000000000;
  sub_100048D0C();
  *(void *)(v8 + 240) = v6;
  *(void *)(v8 + 216) = v7;
  swift_bridgeObjectRetain();
  uint64_t v69 = Dictionary.init(dictionaryLiteral:)();
  *(void *)&long long v73 = 0x44746E756F636361;
  *((void *)&v73 + 1) = 0xEB00000000444953;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v70, v7, &v67);
  swift_bridgeObjectRelease();
  sub_1000434BC((uint64_t)&v70);
  if (!*((void *)&v68 + 1))
  {
    sub_1000423CC((uint64_t)&v67);
LABEL_79:
    if (qword_10022C3E0 != -1) {
      swift_once();
    }
    uint64_t v58 = qword_10022D990;
    id v59 = objc_allocWithZone((Class)AMSPushConfiguration);
    swift_unknownObjectRetain();
    id v60 = [v59 init];
    sub_1000C677C();
    swift_unknownObjectRetain();
    id v61 = v60;
    id v62 = sub_1000C66F4(v60, v58);
    swift_bridgeObjectRetain();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    unsigned int v64 = [v62 shouldHandleNotification:isa];

    if (v64)
    {
      Class v65 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v62 handleNotification:v65];

      swift_unknownObjectRelease();
      return;
    }

    swift_unknownObjectRelease();
LABEL_28:
    swift_bridgeObjectRelease();
    return;
  }
  sub_100043510(&v67, &v73);
  *(void *)&long long v67 = 48;
  *((void *)&v67 + 1) = 0xE100000000000000;
  AnyHashable.init<A>(_:)();
  sub_100043520((uint64_t)&v73, (uint64_t)&v67);
  uint64_t v9 = String.init<A>(describing:)();
  uint64_t v11 = v10;
  uint64_t v12 = HIBYTE(v10) & 0xF;
  uint64_t v13 = v9 & 0xFFFFFFFFFFFFLL;
  if ((v11 & 0x2000000000000000) != 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v14)
  {
    swift_bridgeObjectRelease();
    goto LABEL_77;
  }
  if ((v11 & 0x1000000000000000) != 0)
  {
    uint64_t v16 = (uint64_t)sub_1000C67BC(v9, v11, 10);
    LOBYTE(v4) = v66;
    goto LABEL_66;
  }
  if ((v11 & 0x2000000000000000) == 0)
  {
    if ((v9 & 0x1000000000000000) != 0) {
      uint64_t v15 = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v15 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    uint64_t v16 = (uint64_t)sub_1000100DC(v15, v13, 10);
    LOBYTE(v4) = v17 & 1;
LABEL_66:
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0)
    {
      *((void *)&v68 + 1) = &type metadata for Int;
      *(void *)&long long v67 = v16;
LABEL_78:
      sub_100088240((uint64_t)&v67, (uint64_t)&v70);
      sub_10004377C((uint64_t)&v73);
      goto LABEL_79;
    }
LABEL_77:
    long long v67 = 0u;
    long long v68 = 0u;
    goto LABEL_78;
  }
  *(void *)&long long v67 = v9;
  *((void *)&v67 + 1) = v11 & 0xFFFFFFFFFFFFFFLL;
  if (v9 == 43)
  {
    if (!v12) {
      goto LABEL_87;
    }
    if (v12 == 1) {
      goto LABEL_52;
    }
    sub_1000462A4();
    if (!v45 & v44) {
      goto LABEL_52;
    }
    uint64_t v16 = v47;
    if (v46 != 2)
    {
      sub_1000462A4();
      if (!v45 & v44) {
        goto LABEL_52;
      }
      uint64_t v16 = 10 * v16 + v49;
      if (v48 != 3)
      {
        while (1)
        {
          sub_100045F0C();
          if (!v45 & v44) {
            goto LABEL_52;
          }
          sub_100045140();
          if (!v45) {
            goto LABEL_52;
          }
          uint64_t v16 = v51 + v50;
          if (__OFADD__(v51, v50)) {
            goto LABEL_52;
          }
          sub_100045154();
          if (v45) {
            goto LABEL_66;
          }
        }
      }
    }
LABEL_65:
    LOBYTE(v4) = 0;
    goto LABEL_66;
  }
  if (v9 != 45)
  {
    if (!v12 || (v9 - 48) > 9u) {
      goto LABEL_52;
    }
    uint64_t v16 = (v9 - 48);
    if (v12 != 1)
    {
      sub_1000462A4();
      if (!v45 & v44) {
        goto LABEL_52;
      }
      uint64_t v16 = 10 * v16 + v53;
      if (v52 != 2)
      {
        while (1)
        {
          sub_100045F0C();
          if (!v45 & v44) {
            goto LABEL_52;
          }
          sub_100045140();
          if (!v45) {
            goto LABEL_52;
          }
          uint64_t v16 = v55 + v54;
          if (__OFADD__(v55, v54)) {
            goto LABEL_52;
          }
          sub_100045154();
          if (v45) {
            goto LABEL_66;
          }
        }
      }
    }
    goto LABEL_65;
  }
  if (v12)
  {
    if (v12 != 1)
    {
      sub_1000462A4();
      if (!(!v45 & v44))
      {
        if (v42 == 2)
        {
          LOBYTE(v4) = 0;
          uint64_t v16 = -(uint64_t)v43;
          goto LABEL_66;
        }
        if ((v41 - 48) <= 9u)
        {
          uint64_t v16 = -10 * v43 - (v41 - 48);
          if (v42 == 3) {
            goto LABEL_65;
          }
          while (1)
          {
            sub_100045F0C();
            if (!v45 & v44) {
              break;
            }
            sub_100045140();
            if (!v45) {
              break;
            }
            uint64_t v16 = v57 - v56;
            if (__OFSUB__(v57, v56)) {
              break;
            }
            sub_100045154();
            if (v45) {
              goto LABEL_66;
            }
          }
        }
      }
    }
LABEL_52:
    uint64_t v16 = 0;
    LOBYTE(v4) = 1;
    goto LABEL_66;
  }
  __break(1u);
LABEL_87:
  __break(1u);
}

id sub_1000C66F4(void *a1, uint64_t a2)
{
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithConfiguration:a1 bag:a2];

  swift_unknownObjectRelease();
  return v3;
}

uint64_t type metadata accessor for FollowUpNotificationAction()
{
  return self;
}

unint64_t sub_1000C677C()
{
  unint64_t result = qword_10022F760;
  if (!qword_10022F760)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10022F760);
  }
  return result;
}

unsigned __int8 *sub_1000C67BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:)();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1000C68A4();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v11 = sub_1000100DC(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1000C68A4()
{
  unint64_t v0 = sub_1000C6910();
  uint64_t v4 = sub_1000C6944(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1000C6910()
{
  return String.subscript.getter();
}

uint64_t sub_1000C6944(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1000C6A9C(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          uint64_t v11 = sub_1000252CC(v9, 0),
          unint64_t v12 = sub_1000C6B9C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_1000C6A9C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1000BA678(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1000BA678(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_1000C6B9C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    *uint64_t v9 = a4;
    v9[1] = a5;
    _OWORD v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t result = v12;
    if ((v12 & 0xC) == v15) {
      unint64_t result = sub_1000BA678(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      unint64_t result = sub_1000BA678(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

void sub_1000C6DA0(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v8 = _swiftEmptyArrayStorage;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v7 << 6);
LABEL_22:
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = (void *)v14[1];
    swift_bridgeObjectRetain();
    v17._countAndFlagsBits = v15;
    v17._object = v16;
    unint64_t v18 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020BA88, v17);
    swift_bridgeObjectRelease();
    if (v18 <= 3)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100070A68();
        uint64_t v8 = v23;
      }
      char v19 = v8;
      unint64_t v20 = v8[2];
      uint64_t v21 = v19;
      if (v20 >= v19[3] >> 1)
      {
        sub_100070A68();
        uint64_t v21 = v24;
      }
      v21[2] = v20 + 1;
      uint64_t v22 = (char *)v21 + v20;
      uint64_t v8 = v21;
      v22[32] = v18;
    }
  }
  int64_t v11 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v11 >= v6) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v11);
  ++v7;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 1;
  if (v11 + 1 >= v6) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v7);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 2;
  if (v11 + 2 >= v6) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v7);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 3;
  if (v11 + 3 >= v6) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v7);
  if (v12)
  {
LABEL_21:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
    goto LABEL_22;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_28:
    swift_release();
    return;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v7 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v7 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v7 >= v6) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v7);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_1000C6FB4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v47 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v9 << 6);
LABEL_22:
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    *(void *)&v45[0] = *v15;
    *((void *)&v45[0] + 1) = v17;
    swift_bridgeObjectRetain_n();
    id v18 = objc_msgSend(a3, "__swift_objectForKeyedSubscript:", _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)());
    swift_unknownObjectRelease();
    if (v18)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v45, 0, sizeof(v45));
    }
    sub_100053404((uint64_t)v45, (uint64_t)v46);
    if (v46[3])
    {
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      char isUnique = swift_isUniquelyReferenced_nonNull_native();
      v46[0] = a1;
      unint64_t v23 = sub_100042ADC(v16, v17);
      uint64_t v25 = a1[2];
      BOOL v26 = (v24 & 1) == 0;
      Swift::Int v27 = v25 + v26;
      if (__OFADD__(v25, v26)) {
        goto LABEL_44;
      }
      char v28 = v24;
      unint64_t v40 = v23;
      sub_100043478(&qword_10022E6C8);
      Swift::Bool v29 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUnique, v27);
      unint64_t v30 = v40;
      if (v29)
      {
        unint64_t v31 = sub_100042ADC(v16, v17);
        if ((v28 & 1) != (v32 & 1)) {
          goto LABEL_46;
        }
        unint64_t v30 = v31;
      }
      a1 = (void *)v46[0];
      if (v28)
      {
        uint64_t v33 = (void *)(*(void *)(v46[0] + 56) + 16 * v30);
        swift_bridgeObjectRelease();
        *uint64_t v33 = v43;
        v33[1] = v44;
      }
      else
      {
        *(void *)(v46[0] + 8 * (v30 >> 6) + 64) |= 1 << v30;
        uint64_t v34 = (uint64_t *)(a1[6] + 16 * v30);
        *uint64_t v34 = v16;
        v34[1] = v17;
        uint64_t v35 = (void *)(a1[7] + 16 * v30);
        void *v35 = v43;
        v35[1] = v44;
        uint64_t v36 = a1[2];
        BOOL v37 = __OFADD__(v36, 1);
        uint64_t v38 = v36 + 1;
        if (v37) {
          goto LABEL_45;
        }
        a1[2] = v38;
        swift_bridgeObjectRetain();
      }
LABEL_40:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1000423CC((uint64_t)v46);
LABEL_29:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100042ADC(v16, v17);
      char v20 = v19;
      swift_bridgeObjectRelease();
      if (v20)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v46[0] = a1;
        Swift::Int v22 = a1[3];
        sub_100043478(&qword_10022E6C8);
        _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v22);
        a1 = (void *)v46[0];
        swift_bridgeObjectRelease();
        _NativeDictionary._delete(at:)();
        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
      swift_bridgeObjectRelease_n();
    }
  }
  int64_t v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v12 >= v47) {
    goto LABEL_41;
  }
  unint64_t v13 = *(void *)(v42 + 8 * v12);
  ++v9;
  if (v13) {
    goto LABEL_21;
  }
  int64_t v9 = v12 + 1;
  if (v12 + 1 >= v47) {
    goto LABEL_41;
  }
  unint64_t v13 = *(void *)(v42 + 8 * v9);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v9 = v12 + 2;
  if (v12 + 2 >= v47) {
    goto LABEL_41;
  }
  unint64_t v13 = *(void *)(v42 + 8 * v9);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v9 = v12 + 3;
  if (v12 + 3 >= v47) {
    goto LABEL_41;
  }
  unint64_t v13 = *(void *)(v42 + 8 * v9);
  if (v13)
  {
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_22;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v47)
  {
LABEL_41:
    swift_release();

    return (uint64_t)a1;
  }
  unint64_t v13 = *(void *)(v42 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v47) {
      goto LABEL_41;
    }
    unint64_t v13 = *(void *)(v42 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1000C7440(uint64_t a1, void *a2, void (*a3)(void *, unint64_t))
{
  sub_10005370C(a1, v24);
  uint64_t v6 = v24[0];
  uint64_t v22 = v24[1];
  int64_t v7 = v24[3];
  unint64_t v8 = v24[4];
  int64_t v25 = (unint64_t)(v24[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v11 = v10 | (v7 << 6);
  while (1)
  {
    uint64_t v15 = *(void *)(v6 + 48) + 16 * v11;
    uint64_t v16 = *(void **)v15;
    uint64_t v17 = *(void **)(v15 + 8);
    uint64_t v18 = *(void *)(v6 + 56) + 16 * v11;
    char v19 = *(void **)v18;
    char v20 = *(void **)(v18 + 8);
    v23[0] = v16;
    v23[1] = v17;
    v23[2] = v19;
    void v23[3] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000C9774(v23, a2, a3);
    if (v3)
    {
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v12 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      break;
    }
    if (v12 >= v25) {
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v12);
    if (!v13)
    {
      int64_t v14 = v7 + 2;
      if (v7 + 2 >= v25) {
        goto LABEL_24;
      }
      unint64_t v13 = *(void *)(v22 + 8 * v14);
      if (v13) {
        goto LABEL_12;
      }
      int64_t v14 = v7 + 3;
      if (v7 + 3 >= v25) {
        goto LABEL_24;
      }
      unint64_t v13 = *(void *)(v22 + 8 * v14);
      if (v13) {
        goto LABEL_12;
      }
      int64_t v14 = v7 + 4;
      if (v7 + 4 >= v25) {
        goto LABEL_24;
      }
      unint64_t v13 = *(void *)(v22 + 8 * v14);
      if (v13)
      {
LABEL_12:
        int64_t v12 = v14;
      }
      else
      {
        int64_t v12 = v7 + 5;
        if (v7 + 5 >= v25) {
          goto LABEL_24;
        }
        unint64_t v13 = *(void *)(v22 + 8 * v12);
        if (!v13)
        {
          int64_t v21 = v7 + 6;
          while (v21 < v25)
          {
            unint64_t v13 = *(void *)(v22 + 8 * v21++);
            if (v13)
            {
              int64_t v12 = v21 - 1;
              goto LABEL_13;
            }
          }
LABEL_24:
          swift_release();
          swift_release();
          return swift_release();
        }
      }
    }
LABEL_13:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
    int64_t v7 = v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000C7664(uint64_t a1, void (*a2)(uint64_t, unint64_t), uint64_t a3)
{
  int64_t v7 = (void *)*v3;
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v12 = (void *)v3[12];
  void *v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    if (a1)
    {
      uint64_t v15 = swift_bridgeObjectRetain();
      sub_1000C6DA0(v15);
      uint64_t v17 = v16;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = sub_100078E48();
    }
    uint64_t v18 = (char *)v17[2];
    if (v18)
    {
      swift_bridgeObjectRetain();
      char v19 = 0;
      do
      {
        char v20 = v19 + 1;
        char v22 = v19[(void)v17 + 32];
        sub_1000C783C((unsigned __int8 *)&v22, (uint64_t)v3, a2, a3, v7);
        char v19 = v20;
      }
      while (v18 != v20);
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000C783C(unsigned __int8 *a1, uint64_t a2, void (*a3)(uint64_t, unint64_t), uint64_t a4, void *a5)
{
  uint64_t v72 = a5;
  uint64_t v70 = a4;
  unint64_t v71 = a3;
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  uint64_t v75 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v75 - 8);
  uint64_t v9 = __chkstk_darwin(v75);
  unint64_t v11 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v74 = (uint64_t)v66 - v12;
  uint64_t v13 = *a1;
  uint64_t v14 = 0xE900000000000073;
  uint64_t v15 = 0x636974796C616E61;
  uint64_t v73 = v13;
  switch(v13)
  {
    case 1:
      uint64_t v14 = 0xE800000000000000;
      uint64_t v15 = 0x6C616E7265746E69;
      break;
    case 2:
      uint64_t v14 = 0xE800000000000000;
      uint64_t v15 = 0x7379656E72756F6ALL;
      break;
    case 3:
      uint64_t v15 = 0x6E656D6D6F636572;
      uint64_t v14 = 0xEF736E6F69746164;
      break;
    default:
      break;
  }
  swift_beginAccess();
  uint64_t v16 = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  Swift::Int v17 = v15;
  sub_100148B90(v15, v14, v16);
  char v19 = v18;
  swift_bridgeObjectRelease();
  if (v19) {
    return swift_bridgeObjectRelease();
  }
  id v21 = [self currentProcess];
  char v83 = 0;
  char v84 = v73;
  id v68 = v21;
  id v85 = v21;
  uint64_t v86 = -1;
  uint64_t v87 = 0;
  uint64_t v88 = 0;
  v66[2] = "";
  unint64_t v89 = 0xD000000000000018;
  unint64_t v90 = 0x80000001001CA820;
  uint64_t v91 = 25;
  char v92 = 2;
  uint64_t v93 = 10485760;
  sub_1000792E4(v74);
  static Date.now.getter();
  Date.timeIntervalSince(_:)();
  double v23 = v22;
  char v24 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  uint64_t v69 = v8 + 8;
  long long v67 = v24;
  v24((uint64_t)v11, v75);
  sub_100043478(&qword_10022E560);
  uint64_t v25 = *(void *)(type metadata accessor for LogMessage() - 8);
  unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1001C3120;
  v66[1] = v27 + v26;
  if (v23 >= 100800.0)
  {
    id v78 = v72;
    double v76 = *(double *)&a2;
    swift_retain();
    id v37 = (id)AMSLogKey();
    Swift::Int v38 = v17;
    if (v37)
    {
      Swift::String v39 = v37;
      uint64_t v72 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v41 = v40;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v42._countAndFlagsBits = 0;
      v42._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      sub_100049788(&v76, (uint64_t)v78);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v80 = (void *)DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v80);
      v44._countAndFlagsBits = 5972026;
      v44._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v44);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v80 = v72;
      uint64_t v81 = v41;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v80);
      v45._countAndFlagsBits = 93;
      v45._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v53._countAndFlagsBits = 0;
      v53._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v53);
      sub_100049788(&v76, (uint64_t)v78);
      uint64_t v54 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v80 = (void *)v54;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v80);
      v55._countAndFlagsBits = 58;
      v55._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v55);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v76);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v56._countAndFlagsBits = 0x6E65656220736148;
    v56._object = (void *)0xE900000000000020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v56);
    id v78 = &type metadata for Double;
    double v76 = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v76);
    v57._countAndFlagsBits = 0x73646E6F63657320;
    v57._object = (void *)0xEF2065636E697320;
    LogMessage.StringInterpolation.appendLiteral(_:)(v57);
    id v78 = &type metadata for String;
    double v76 = *(double *)&v38;
    uint64_t v77 = v14;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v76);
    v58._object = (void *)0x80000001001CE510;
    v58._countAndFlagsBits = 0xD000000000000018;
    LogMessage.StringInterpolation.appendLiteral(_:)(v58);
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v59 = static os_log_type_t.debug.getter();
    sub_10004841C(v59);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_10004A8EC((Swift::Int *)&v80, v38, v14);
    swift_endAccess();
    swift_bridgeObjectRelease();
    unint64_t v60 = 0xE900000000000073;
    uint64_t v61 = 0x636974796C616E61;
    switch((int)v73)
    {
      case 1:
        unint64_t v60 = 0xE800000000000000;
        uint64_t v61 = 0x6C616E7265746E69;
        break;
      case 2:
        unint64_t v60 = 0xE800000000000000;
        uint64_t v61 = 0x7379656E72756F6ALL;
        break;
      case 3:
        uint64_t v61 = 0x6E656D6D6F636572;
        unint64_t v60 = 0xEF736E6F69746164;
        break;
      default:
        break;
    }
    v71(v61, v60);
    swift_bridgeObjectRelease();
    id v62 = (void *)swift_allocObject();
    v62[2] = a2;
    void v62[3] = v38;
    v62[4] = v14;
    uint64_t v63 = (void *)swift_allocObject();
    v63[2] = a2;
    v63[3] = v38;
    v63[4] = v14;
    unsigned int v64 = *(void **)(a2 + 96);
    id v78 = (void *)sub_10004D510(0, (unint64_t *)&qword_10022F690);
    uint64_t v79 = &protocol witness table for OS_dispatch_queue;
    double v76 = *(double *)&v64;
    swift_retain_n();
    swift_bridgeObjectRetain();
    id v65 = v64;
    Promise.then(perform:orCatchError:on:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    swift_release();
    swift_release();
    v67(v74, v75);
    return sub_10004377C((uint64_t)&v76);
  }
  else
  {
    id v78 = v72;
    double v76 = *(double *)&a2;
    swift_retain();
    id v28 = (id)AMSLogKey();
    if (v28)
    {
      Swift::Bool v29 = v28;
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v32 = v31;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v33._countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      sub_100049788(&v76, (uint64_t)v78);
      uint64_t v34 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v80 = (void *)v34;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v80);
      v35._countAndFlagsBits = 5972026;
      v35._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v80 = (void *)v30;
      uint64_t v81 = v32;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v80);
      v36._countAndFlagsBits = 93;
      v36._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v46._countAndFlagsBits = 0;
      v46._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v46);
      sub_100049788(&v76, (uint64_t)v78);
      uint64_t v47 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v80 = (void *)v47;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v80);
      v48._countAndFlagsBits = 58;
      v48._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v48);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v76);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v49._countAndFlagsBits = 0x6E65656220736148;
    v49._object = (void *)0xE900000000000020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v49);
    id v78 = &type metadata for Double;
    double v76 = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v76);
    v50._countAndFlagsBits = 0x73646E6F63657320;
    v50._object = (void *)0xEF2065636E697320;
    LogMessage.StringInterpolation.appendLiteral(_:)(v50);
    id v78 = &type metadata for String;
    double v76 = *(double *)&v17;
    uint64_t v77 = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v76);
    v51._object = (void *)0x80000001001CE4F0;
    v51._countAndFlagsBits = 0xD000000000000018;
    LogMessage.StringInterpolation.appendLiteral(_:)(v51);
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v52 = static os_log_type_t.debug.getter();
    sub_10004841C(v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return ((uint64_t (*)(uint64_t, uint64_t))v67)(v74, v75);
  }
}

uint64_t sub_1000C840C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v25 = (void *)type metadata accessor for ForceSyncCoordinator();
  v24[0] = a2;
  swift_retain();
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(v24, (uint64_t)v25);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    v15._countAndFlagsBits = 5972026;
    v15._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    uint64_t MetatypeMetadata = &type metadata for String;
    v22[0] = v10;
    v22[1] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    v16._countAndFlagsBits = 93;
    v16._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    sub_100049788(v24, (uint64_t)v25);
    uint64_t v18 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    v19._countAndFlagsBits = 58;
    v19._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v24);
  LogMessage.init(stringLiteral:)();
  uint64_t v25 = &type metadata for String;
  v24[0] = a3;
  v24[1] = a4;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)v24);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v20 = static os_log_type_t.default.getter();
  sub_10004841C(v20);
  swift_bridgeObjectRelease();
  return sub_1000C8744(a3, a4);
}

uint64_t sub_1000C8744(uint64_t a1, void *a2)
{
  unint64_t v5 = (void *)*v2;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v27 = v5;
  uint64_t v25 = (uint64_t)v2;
  swift_retain();
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(&v25, (uint64_t)v27);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    v14._countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v9;
    v23[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    v15._countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(&v25, (uint64_t)v27);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    v18._countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v25);
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  uint64_t v25 = 0x676E69766F6D6552;
  unint64_t v26 = 0xE900000000000020;
  v19._countAndFlagsBits = a1;
  v19._object = a2;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 0x7571206D6F726620;
  v20._object = (void *)0xEB00000000657565;
  String.append(_:)(v20);
  uint64_t v27 = &type metadata for String;
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)&v25);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v21 = static os_log_type_t.debug.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_10016CF70(a1, (uint64_t)a2);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C8B04(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3FC0;
  id v28 = (void *)type metadata accessor for ForceSyncCoordinator();
  uint64_t v26 = a2;
  swift_retain();
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(&v26, (uint64_t)v28);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v24[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v24);
    v15._countAndFlagsBits = 5972026;
    v15._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    uint64_t MetatypeMetadata = &type metadata for String;
    v24[0] = v10;
    v24[1] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v24);
    v16._countAndFlagsBits = 93;
    v16._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    sub_100049788(&v26, (uint64_t)v28);
    uint64_t v18 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v24[0] = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v24);
    v19._countAndFlagsBits = 58;
    v19._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v26);
  swift_getErrorValue();
  uint64_t v20 = Error.localizedDescription.getter();
  id v28 = &type metadata for String;
  uint64_t v26 = v20;
  uint64_t v27 = v21;
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)&v26);
  LogMessage.init(stringLiteral:)();
  id v28 = &type metadata for String;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)&v26);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v22 = static os_log_type_t.error.getter();
  sub_10004841C(v22);
  swift_bridgeObjectRelease();
  return sub_1000C8744(a3, a4);
}

uint64_t sub_1000C8E94()
{
  unint64_t v0 = sub_100078E48();
  uint64_t v1 = (uint64_t)v0[2];
  if (v1)
  {
    sub_100027304(0, v1, 0);
    uint64_t v2 = 0;
    do
    {
      unint64_t v3 = 0xE900000000000073;
      uint64_t v4 = 0x636974796C616E61;
      switch(*((unsigned char *)v0 + v2 + 32))
      {
        case 1:
          unint64_t v3 = 0xE800000000000000;
          uint64_t v4 = 0x6C616E7265746E69;
          break;
        case 2:
          unint64_t v3 = 0xE800000000000000;
          uint64_t v4 = 0x7379656E72756F6ALL;
          break;
        case 3:
          unint64_t v3 = 0xEF736E6F69746164;
          uint64_t v4 = 0x6E656D6D6F636572;
          break;
        default:
          break;
      }
      unint64_t v6 = _swiftEmptyArrayStorage[2];
      unint64_t v5 = _swiftEmptyArrayStorage[3];
      if (v6 >= v5 >> 1) {
        sub_100027304(v5 > 1, v6 + 1, 1);
      }
      ++v2;
      _swiftEmptyArrayStorage[2] = v6 + 1;
      uint64_t v7 = &_swiftEmptyArrayStorage[2 * v6];
      v7[4] = v4;
      v7[5] = v3;
    }
    while (v1 != v2);
  }
  swift_bridgeObjectRelease();
  return sub_10002318C((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_1000C9028(uint64_t a1, void *a2, void (*a3)(void *, unint64_t))
{
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = (void *)v3[12];
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    swift_beginAccess();
    uint64_t v14 = v3[13];
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1000C9228();
    uint64_t v16 = sub_1000C6FB4(&_swiftEmptyDictionarySingleton, a1, a2);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1000CA5F8(v16, v14, (uint64_t)v3, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = swift_retain();
    uint64_t v19 = sub_1001A0F34(v18, v14);
    sub_1000C9718(v19);
    swift_bridgeObjectRelease();
    swift_retain();
    swift_retain();
    sub_1000C7440(v17, v3, a3);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000C9228()
{
  sub_100049788((void *)(v0 + 56), *(void *)(v0 + 80));
  if (sub_1000A3B28(1))
  {
    self;
    if (swift_dynamicCastObjCClass()) {
      static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
    }
    swift_unknownObjectRelease();
  }
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_1000C92FC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v15 = *a2;
  uint64_t v14 = a2[1];
  sub_100148B90(v13, v12, a3);
  if (v16)
  {
    uint64_t v45 = v5;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    Swift::String v44 = (void *)type metadata accessor for ForceSyncCoordinator();
    uint64_t v42 = a4;
    swift_retain();
    id v17 = (id)AMSLogKey();
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v22._countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      sub_100049788(&v42, (uint64_t)v44);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v40[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v40);
      v24._countAndFlagsBits = 5972026;
      v24._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      uint64_t MetatypeMetadata = &type metadata for String;
      v40[0] = v19;
      v40[1] = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v40);
      v25._countAndFlagsBits = 93;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v34._countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      sub_100049788(&v42, (uint64_t)v44);
      uint64_t v35 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v40[0] = v35;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v40);
      v36._countAndFlagsBits = 58;
      v36._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v42);
    uint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v42 = v13;
    unint64_t v43 = v12;
    v37._object = (void *)0x80000001001CE5D0;
    v37._countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v37);
    Swift::String v44 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)&v42);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v38 = static os_log_type_t.debug.getter();
    sub_10004841C(v38);
    swift_bridgeObjectRelease();
    char v33 = 0;
    return v33 & 1;
  }
  if (!*(void *)(a5 + 16))
  {
LABEL_16:
    char v33 = 1;
    return v33 & 1;
  }
  swift_bridgeObjectRetain();
  unint64_t v26 = sub_100042ADC(v13, v12);
  if ((v27 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  id v28 = (uint64_t *)(*(void *)(a5 + 56) + 16 * v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v30 == v15 && v29 == v14)
  {
    swift_bridgeObjectRelease();
    char v33 = 0;
  }
  else
  {
    char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v33 = v32 ^ 1;
  }
  return v33 & 1;
}

uint64_t sub_1000C9718(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 104) = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C9774(void **a1, void *a2, void (*a3)(void *, unint64_t))
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  unint64_t v6 = (unint64_t)a1[1];
  Swift::String v39 = *a1;
  uint64_t v8 = a1[2];
  uint64_t v7 = a1[3];
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  Swift::String v34 = (void *)type metadata accessor for ForceSyncCoordinator();
  uint64_t v31 = (uint64_t)a2;
  swift_retain();
  id v9 = (id)AMSLogKey();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v29 = v8;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    sub_100049788(&v31, (uint64_t)v34);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v36 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v36);
    v16._countAndFlagsBits = 5972026;
    v16._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v36 = v11;
    unint64_t v37 = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v36);
    v17._countAndFlagsBits = 93;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
    uint64_t v8 = v29;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    sub_100049788(&v31, (uint64_t)v34);
    uint64_t v19 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v36 = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v36);
    v20._countAndFlagsBits = 58;
    v20._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v31);
  uint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  uint64_t v36 = v31;
  unint64_t v37 = v32;
  v21._object = (void *)0x80000001001CE5B0;
  v21._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v21);
  Swift::String v22 = v39;
  uint64_t v31 = (uint64_t)v39;
  unint64_t v32 = v6;
  char v33 = v8;
  Swift::String v34 = v7;
  sub_100043478(&qword_10022F820);
  _print_unlocked<A, B>(_:_:)();
  Swift::String v34 = &type metadata for String;
  uint64_t v31 = v36;
  unint64_t v32 = v37;
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)&v31);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v23 = static os_log_type_t.default.getter();
  sub_10004841C(v23);
  swift_bridgeObjectRelease();
  a3(v22, v6);
  Swift::String v24 = (void *)swift_allocObject();
  v24[2] = a2;
  void v24[3] = v22;
  v24[4] = v6;
  void v24[5] = v8;
  v24[6] = v7;
  Swift::String v25 = (void *)swift_allocObject();
  v25[2] = a2;
  void v25[3] = v22;
  v25[4] = v6;
  v25[5] = v8;
  v25[6] = v7;
  unint64_t v26 = (void *)a2[12];
  Swift::String v34 = (void *)sub_10004D510(0, (unint64_t *)&qword_10022F690);
  uint64_t v35 = &protocol witness table for OS_dispatch_queue;
  uint64_t v31 = (uint64_t)v26;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v27 = v26;
  Promise.then(perform:orCatchError:on:)();
  swift_release();
  swift_release();
  swift_release();
  return sub_10004377C((uint64_t)&v31);
}

uint64_t sub_1000C9C20(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v11 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v11 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3FC0;
  char v33 = (void *)type metadata accessor for ForceSyncCoordinator();
  uint64_t v31 = a2;
  swift_retain();
  id v12 = (id)AMSLogKey();
  if (v12)
  {
    unint64_t v13 = v12;
    id v27 = a6;
    uint64_t v28 = a3;
    uint64_t v14 = a5;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    sub_100049788(&v31, (uint64_t)v33);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v29[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v29);
    v20._countAndFlagsBits = 5972026;
    v20._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    uint64_t MetatypeMetadata = &type metadata for String;
    v29[0] = v15;
    v29[1] = v17;
    a5 = v14;
    a6 = v27;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v29);
    v21._countAndFlagsBits = 93;
    v21._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    LogMessage.init(stringInterpolation:)();
    a3 = v28;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    sub_100049788(&v31, (uint64_t)v33);
    uint64_t v23 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v29[0] = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v29);
    v24._countAndFlagsBits = 58;
    v24._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v31);
  LogMessage.init(stringLiteral:)();
  char v33 = &type metadata for String;
  uint64_t v31 = a3;
  unint64_t v32 = a4;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)&v31);
  char v33 = &type metadata for String;
  uint64_t v31 = a5;
  unint64_t v32 = a6;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)&v31);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v25 = static os_log_type_t.default.getter();
  sub_10004841C(v25);
  swift_bridgeObjectRelease();
  sub_1000C9FA8();
  return sub_1000C8744(a3, a4);
}

uint64_t sub_1000C9FA8()
{
  sub_1000C9228();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_isUniquelyReferenced_nonNull_native();
  sub_10008BF2C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000CA410();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000CA064(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v9 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3140;
  char v33 = (void *)type metadata accessor for ForceSyncCoordinator();
  uint64_t v31 = a2;
  swift_retain();
  id v10 = (id)AMSLogKey();
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = a3;
    uint64_t v15 = v14;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(&v31, (uint64_t)v33);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v29[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v29);
    v18._countAndFlagsBits = 5972026;
    v18._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    uint64_t MetatypeMetadata = &type metadata for String;
    v29[0] = v12;
    v29[1] = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v29);
    v19._countAndFlagsBits = 93;
    v19._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    LogMessage.init(stringInterpolation:)();
    a3 = v13;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    sub_100049788(&v31, (uint64_t)v33);
    uint64_t v21 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v29[0] = v21;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v29);
    v22._countAndFlagsBits = 58;
    v22._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v31);
  swift_getErrorValue();
  uint64_t v23 = Error.localizedDescription.getter();
  char v33 = &type metadata for String;
  uint64_t v31 = v23;
  unint64_t v32 = v24;
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)&v31);
  LogMessage.init(stringLiteral:)();
  char v33 = &type metadata for String;
  uint64_t v31 = a3;
  unint64_t v32 = a4;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)&v31);
  char v33 = &type metadata for String;
  uint64_t v31 = a5;
  unint64_t v32 = a6;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)&v31);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v25 = static os_log_type_t.error.getter();
  sub_10004841C(v25);
  swift_bridgeObjectRelease();
  return sub_1000C8744(a3, a4);
}

void sub_1000CA410()
{
  sub_100049788((void *)(v0 + 56), *(void *)(v0 + 80));
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  sub_1000A3B10(isa, 1);
}

uint64_t sub_1000CA488()
{
  sub_10004377C(v0 + 16);
  sub_10004377C(v0 + 56);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000CA4C0()
{
  sub_1000CA488();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ForceSyncCoordinator()
{
  return self;
}

uint64_t sub_1000CA518()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000CA550()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000CA59C(uint64_t a1)
{
  return sub_1000C840C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1000CA5AC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000CA5EC(uint64_t a1)
{
  return sub_1000C8B04(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1000CA5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a1;
  char v9 = *(unsigned char *)(a1 + 32);
  unsigned int v10 = v9 & 0x3F;
  unint64_t v11 = (unint64_t)((1 << v9) + 63) >> 6;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v10 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    uint64_t v13 = (uint64_t *)((char *)&v17 - ((8 * v11 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1001A638C(0, v11, v13);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1000CA858((uint64_t)v13, v11, v8, a2, a3, a4);
    if (v4) {
      swift_willThrow();
    }
    else {
      uint64_t v8 = v14;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = (void *)swift_slowAlloc();
    sub_1001A638C(0, v11, v15);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1000CA858((uint64_t)v15, v11, v8, a2, a3, a4);
    swift_slowDealloc();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return v8;
}

uint64_t sub_1000CA858(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v34 = a4;
  id v27 = (uint64_t *)result;
  int64_t v9 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = a3 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a3 + 64);
  int64_t v30 = (unint64_t)(v10 + 63) >> 6;
  while (v12)
  {
    unint64_t v13 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v14 = v13 | (v9 << 6);
LABEL_17:
    uint64_t v18 = *(void *)(a3 + 56);
    Swift::String v19 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v14);
    uint64_t v20 = v19[1];
    v33[0] = *v19;
    v33[1] = v20;
    uint64_t v21 = (uint64_t *)(v18 + 16 * v14);
    uint64_t v22 = v21[1];
    v32[0] = *v21;
    v32[1] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v23 = sub_1000C92FC(v33, v32, v34, a5, a6);
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    char v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v24)
    {
      *(uint64_t *)((char *)v27 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      BOOL v15 = __OFADD__(v28++, 1);
      if (v15) {
        goto LABEL_30;
      }
    }
  }
  BOOL v15 = __OFADD__(v9++, 1);
  if (v15)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v9 >= v30) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v29 + 8 * v9);
  if (v16)
  {
LABEL_16:
    unint64_t v12 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v9 << 6);
    goto LABEL_17;
  }
  int64_t v17 = v9 + 1;
  if (v9 + 1 >= v30) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v29 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v9 + 2;
  if (v9 + 2 >= v30) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v29 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v9 + 3;
  if (v9 + 3 >= v30)
  {
LABEL_27:
    uint64_t v25 = sub_1001194C8(v27, a2, v28, a3);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return v25;
  }
  unint64_t v16 = *(void *)(v29 + 8 * v17);
  if (v16)
  {
LABEL_15:
    int64_t v9 = v17;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v9 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v9 >= v30) {
      goto LABEL_27;
    }
    unint64_t v16 = *(void *)(v29 + 8 * v9);
    ++v17;
    if (v16) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1000CAACC(uint64_t a1)
{
  return sub_1000C9C20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_1000CAAE0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000CAB28(uint64_t a1)
{
  return sub_1000CA064(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_1000CAB38(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v35 = a5;
  uint64_t v36 = a8;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v34 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  Swift::String v44 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v45 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v38 = (char *)&v30 - v12;
  __chkstk_darwin(v11);
  Swift::String v39 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  char v33 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v19 = dispatch thunk of Collection.count.getter();
  if (!v19) {
    return static Array._allocateUninitialized(_:)();
  }
  Swift::Int v20 = v19;
  uint64_t v31 = v14;
  uint64_t v48 = ContiguousArray.init()();
  uint64_t v40 = type metadata accessor for ContiguousArray();
  ContiguousArray.reserveCapacity(_:)(v20);
  unint64_t v32 = v18;
  uint64_t result = dispatch thunk of Collection.startIndex.getter();
  if (v20 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v22 = (void (**)(char *))(v45 + 16);
    uint64_t v41 = (void (**)(char *, uint64_t))(v45 + 8);
    uint64_t v45 = a6;
    char v23 = v38;
    char v24 = v32;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
      (*v22)(v23);
      v25(v47, 0);
      uint64_t v26 = v46;
      v42(v23, v44);
      if (v26) {
        break;
      }
      uint64_t v46 = 0;
      (*v41)(v23, AssociatedTypeWitness);
      ContiguousArray.append(_:)();
      dispatch thunk of Collection.formIndex(after:)();
      if (!--v20)
      {
        uint64_t v27 = v37;
        uint64_t v28 = v33;
        uint64_t v29 = v31;
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v33, v24, v31);
        _expectEnd<A>(of:is:)();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
        return v48;
      }
    }
    (*v41)(v23, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v36, v44, v35);
  }
  return result;
}

uint64_t (*HeapType.comparator<A>(type:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4))(uint64_t a1, uint64_t a2)
{
  if (a2) {
    uint64_t v6 = sub_1000CB030;
  }
  else {
    uint64_t v6 = sub_1000CB04C;
  }
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a3;
  v7[3] = a4;
  v7[4] = a3;
  return v6;
}

uint64_t sub_1000CB030(uint64_t a1, uint64_t a2)
{
  return sub_1000CB064(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void))&dispatch thunk of static Comparable.< infix(_:_:));
}

uint64_t sub_1000CB04C(uint64_t a1, uint64_t a2)
{
  return sub_1000CB064(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void))&dispatch thunk of static Comparable.> infix(_:_:));
}

uint64_t sub_1000CB064(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  return a3(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24)) & 1;
}

unint64_t sub_1000CB09C()
{
  unint64_t result = qword_10022F828[0];
  if (!qword_10022F828[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10022F828);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HeapType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000CB1B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeapType()
{
  return &type metadata for HeapType;
}

uint64_t sub_1000CB1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t type metadata accessor for Heap()
{
  return sub_10008034C();
}

uint64_t sub_1000CB224()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000CB240(uint64_t result)
{
  if (result + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  BOOL v1 = __OFADD__(2 * result, 2);
  unint64_t result = 2 * result + 2;
  if (v1) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1000CB264(uint64_t a1, uint64_t (*a2)(unsigned char *, unsigned char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a3;
  uint64_t v28 = a6;
  uint64_t v25 = *(void *)(a5 - 8);
  uint64_t v10 = __chkstk_darwin(a1);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v15 = &v23[-v14];
  if (v16 + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v17 = sub_1000CB240(a4);
  uint64_t result = ContiguousArray.count.getter();
  if (__OFSUB__(result, 1))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  uint64_t v26 = a1;
  uint64_t v18 = a4;
  if (result - 1 >= ((2 * a4) | 1))
  {
    ContiguousArray.subscript.getter();
    ContiguousArray.subscript.getter();
    int v24 = a2(v15, v12);
    uint64_t v19 = *(void (**)(unsigned char *, uint64_t))(v25 + 8);
    v19(v12, a5);
    v19(v15, a5);
    if (v24) {
      uint64_t v18 = (2 * a4) | 1;
    }
    else {
      uint64_t v18 = a4;
    }
  }
  uint64_t v20 = v26;
  uint64_t result = ContiguousArray.count.getter();
  if (__OFSUB__(result, 1)) {
    goto LABEL_16;
  }
  if (result - 1 >= v17)
  {
    ContiguousArray.subscript.getter();
    ContiguousArray.subscript.getter();
    char v21 = a2(v15, v12);
    uint64_t v22 = *(void (**)(unsigned char *, uint64_t))(v25 + 8);
    v22(v12, a5);
    uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v22)(v15, a5);
    uint64_t v20 = v26;
    if (v21) {
      uint64_t v18 = v17;
    }
  }
  if (v18 != a4)
  {
    uint64_t v29 = v18;
    uint64_t v30 = a4;
    type metadata accessor for ContiguousArray();
    swift_getWitnessTable();
    MutableCollection.swapAt(_:_:)();
    return sub_1000CB264(v20, a2, v27, v18, a5, v28);
  }
  return result;
}

uint64_t sub_1000CB528(uint64_t *a1, uint64_t (*a2)(char *, char *), uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v12 = *(void *)(a6 - 8);
  uint64_t v13 = __chkstk_darwin(a1);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v24 - v16;
  ContiguousArray.subscript.getter();
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  LOBYTE(a3) = a2(v17, a5);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  v24[2] = v12 + 8;
  uint64_t v25 = v18;
  v18(v17, a6);
  if (a3)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    v24[1] = type metadata accessor for ContiguousArray();
    ContiguousArray._makeMutableAndUnique()();
    uint64_t v19 = *a1;
    sub_1000CC69C(a4, *a1);
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v12 + 24))(v19+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * a4, a5, a6);
    if (a4 >= 1)
    {
      char v21 = v25;
      do
      {
        ContiguousArray.subscript.getter();
        unint64_t v22 = a4 - 1;
        ContiguousArray.subscript.getter();
        char v23 = v26(v17, v15);
        v21(v15, a6);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v21)(v17, a6);
        if ((v23 & 1) == 0) {
          break;
        }
        unint64_t v28 = (unint64_t)(a4 - 1) >> 1;
        uint64_t v29 = a4;
        swift_getWitnessTable();
        uint64_t result = MutableCollection.swapAt(_:_:)();
        a4 = (unint64_t)(a4 - 1) >> 1;
      }
      while (v22 > 1);
    }
  }
  return result;
}

uint64_t sub_1000CB7E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000CB7EC(0, a1, a2);
}

uint64_t sub_1000CB7EC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v47 = a3;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(a1);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v41 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v16 = v3[1];
  uint64_t v45 = v3;
  uint64_t v46 = v3 + 1;
  uint64_t v48 = v16;
  type metadata accessor for ContiguousArray();
  swift_getWitnessTable();
  if (Collection.isEmpty.getter())
  {
    uint64_t v17 = 1;
    uint64_t v18 = v47;
    return sub_100021AC0(v18, v17, 1, v6);
  }
  Swift::String v44 = v15;
  ContiguousArray.subscript.getter();
  swift_retain();
  uint64_t v19 = ContiguousArray.count.getter();
  swift_release();
  uint64_t v20 = v7;
  if (v19 == 1) {
    goto LABEL_6;
  }
  ContiguousArray.subscript.getter();
  swift_retain();
  uint64_t v21 = ContiguousArray.count.getter();
  swift_release();
  uint64_t result = v21 - 1;
  if (__OFSUB__(v21, 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  ContiguousArray.subscript.getter();
  uint64_t v23 = *(void *)(a2 + 24);
  char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v7 + 8);
  v25(v10, v6);
  v25(v13, v6);
  if (v24)
  {
LABEL_6:
    swift_getWitnessTable();
    swift_getWitnessTable();
    RangeReplaceableCollection<>.removeLast()();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_7:
    uint64_t v18 = v47;
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v47, v44, v6);
    uint64_t v17 = 0;
    return sub_100021AC0(v18, v17, 1, v6);
  }
  uint64_t v43 = v25;
  uint64_t v26 = (uint64_t (*)(char *, char *))v45[2];
  uint64_t v41 = v23;
  uint64_t v42 = v26;
  swift_retain();
  ContiguousArray.subscript.getter();
  swift_retain();
  uint64_t v27 = ContiguousArray.count.getter();
  swift_release();
  uint64_t result = v27 - 1;
  if (__OFSUB__(v27, 1)) {
    goto LABEL_16;
  }
  ContiguousArray.subscript.getter();
  char v28 = v42(v13, v10);
  swift_release();
  uint64_t v29 = v43;
  v43(v10, v6);
  v29(v13, v6);
  if (v28)
  {
    uint64_t v30 = v46;
    swift_retain();
    uint64_t v31 = ContiguousArray.count.getter();
    swift_release();
    uint64_t result = v31 - 1;
    if (!__OFSUB__(v31, 1))
    {
      ContiguousArray.subscript.getter();
      ContiguousArray._makeMutableAndUnique()();
      unint64_t v32 = v45;
      uint64_t v33 = v45[1];
      sub_1000CC69C(a1, v33);
      (*(void (**)(unint64_t, char *, uint64_t))(v20 + 40))(v33+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * a1, v13, v6);
      swift_getWitnessTable();
      swift_getWitnessTable();
      RangeReplaceableCollection<>.removeLast()();
      v29(v13, v6);
      uint64_t v35 = (uint64_t (*)(unsigned char *, unsigned char *))v32[2];
      uint64_t v34 = v32[3];
      swift_retain();
      sub_1000CB264((uint64_t)v30, v35, v34, a1, v6, v41);
      swift_release();
      goto LABEL_7;
    }
    goto LABEL_17;
  }
  uint64_t v36 = a1;
  uint64_t v38 = (uint64_t (*)(char *, char *))v45[2];
  uint64_t v37 = v45[3];
  swift_retain();
  swift_retain();
  uint64_t v39 = ContiguousArray.count.getter();
  swift_release();
  uint64_t result = v39 - 1;
  if (!__OFSUB__(v39, 1))
  {
    ContiguousArray.subscript.getter();
    sub_1000CB528(v46, v38, v37, v36, v13, v6);
    uint64_t v40 = v43;
    v43(v13, v6);
    swift_release();
    swift_getWitnessTable();
    swift_getWitnessTable();
    RangeReplaceableCollection<>.removeLast()();
    v40(v13, v6);
    goto LABEL_7;
  }
LABEL_18:
  __break(1u);
  return result;
}

void sub_1000CBDB4(int a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v62 = a3;
  uint64_t v63 = a4;
  object = a2;
  uint64_t v66 = (uint64_t)a2;
  uint64_t v10 = type metadata accessor for ContiguousArray();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = Collection.isEmpty.getter();
  if ((v12 & 1) == 0)
  {
    int v58 = a1;
    uint64_t v66 = (uint64_t)object;
    __chkstk_darwin(v12);
    v57[2] = a5;
    uint64_t v57[3] = a6;
    swift_retain();
    uint64_t v14 = sub_1000CAB38((void (*)(char *, char *))sub_1000CC67C, (uint64_t)v57, v10, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v13);
    swift_release();
    int64_t v15 = *(void *)(v14 + 16);
    int64_t v65 = v15;
    if (v15)
    {
      uint64_t v66 = (uint64_t)_swiftEmptyArrayStorage;
      sub_100073544(0, v15, 0);
      uint64_t v16 = (void *)v66;
      uint64_t v17 = v14;
      uint64_t v18 = v14 + 40;
      do
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = String.count.getter();
        swift_bridgeObjectRelease();
        uint64_t v66 = (uint64_t)v16;
        unint64_t v21 = v16[2];
        unint64_t v20 = v16[3];
        if (v21 >= v20 >> 1)
        {
          sub_100073544((char *)(v20 > 1), v21 + 1, 1);
          uint64_t v16 = (void *)v66;
        }
        v18 += 16;
        v16[2] = v21 + 1;
        v16[v21 + 4] = v19;
        --v15;
      }
      while (v15);
      uint64_t v14 = v17;
      int64_t v15 = v65;
    }
    else
    {
      uint64_t v16 = _swiftEmptyArrayStorage;
    }
    Swift::Int v22 = sub_1000CC398(v16);
    char v24 = v23;
    swift_bridgeObjectRelease();
    if (v24)
    {
LABEL_43:
      __break(1u);
      return;
    }
    uint64_t v60 = a5;
    uint64_t v61 = a6;
    if (v15)
    {
      v59._object = object;
      id v68 = _swiftEmptyArrayStorage;
      sub_100027304(0, v15, 0);
      uint64_t v25 = 0;
      uint64_t v26 = v68;
      v59._uint64_t countAndFlagsBits = v14;
      uint64_t v64 = v14 + 32;
      do
      {
        uint64_t v27 = (uint64_t *)(v64 + 16 * v25);
        uint64_t v28 = *v27;
        uint64_t v29 = (void *)v27[1];
        swift_bridgeObjectRetain_n();
        uint64_t v30 = String.count.getter();
        uint64_t v31 = v29;
        while (v30 < v22)
        {
          if (String.count.getter())
          {
            uint64_t v66 = v28;
            unint64_t v67 = (unint64_t)v31;
            v33._uint64_t countAndFlagsBits = sub_100049478();
            String.append(_:)(v33);
          }
          else
          {
            uint64_t v66 = 32;
            unint64_t v67 = 0xE100000000000000;
            v32._uint64_t countAndFlagsBits = v28;
            v32._object = v31;
            String.append(_:)(v32);
            swift_bridgeObjectRelease();
          }
          uint64_t v28 = v66;
          uint64_t v31 = (void *)v67;
          uint64_t v30 = String.count.getter();
        }
        swift_bridgeObjectRelease();
        id v68 = v26;
        unint64_t v35 = v26[2];
        unint64_t v34 = v26[3];
        if (v35 >= v34 >> 1)
        {
          sub_100027304(v34 > 1, v35 + 1, 1);
          uint64_t v26 = v68;
        }
        ++v25;
        v26[2] = v35 + 1;
        uint64_t v36 = &v26[2 * v35];
        v36[4] = v28;
        v36[5] = v31;
      }
      while (v25 != v65);
      swift_bridgeObjectRelease();
      object = v59._object;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = _swiftEmptyArrayStorage;
    }
    uint64_t v66 = 10;
    unint64_t v67 = 0xE100000000000000;
    v37._uint64_t countAndFlagsBits = sub_100049478();
    Swift::String v59 = String.init(repeating:count:)(v37, v22);
    int64_t v65 = v26[2];
    if (v65)
    {
      uint64_t v38 = 0;
      LODWORD(v64) = v58 & 1;
      uint64_t v39 = (void **)(v26 + 5);
      while (1)
      {
        uint64_t v40 = (uint64_t)*(v39 - 1);
        uint64_t v41 = *v39;
        swift_bridgeObjectRetain();
        sub_1000CC3DC(v38, v64, (uint64_t)object, v62, v63, v22, v60, v61);
        Swift::Int v43 = v42;
        v44._uint64_t countAndFlagsBits = sub_100049478();
        Swift::String v46 = String.init(repeating:count:)(v44, v45);
        String.append(_:)(v46);
        swift_bridgeObjectRelease();
        v47._uint64_t countAndFlagsBits = v40;
        v47._object = v41;
        String.append(_:)(v47);
        swift_bridgeObjectRelease();
        v48._uint64_t countAndFlagsBits = sub_100049478();
        Swift::String v49 = String.init(repeating:count:)(v48, v43);
        String.append(_:)(v49);
        swift_bridgeObjectRelease();
        double v50 = log2((double)(v38 + 1));
        double v51 = v50;
        if ((~*(void *)&v50 & 0x7FF0000000000000) == 0) {
          break;
        }
        if (v50 <= -9.22337204e18) {
          goto LABEL_38;
        }
        if (v50 >= 9.22337204e18) {
          goto LABEL_39;
        }
        uint64_t v52 = v38 + 2;
        double v53 = log2((double)(v38 + 2));
        if ((~*(void *)&v53 & 0x7FF0000000000000) == 0) {
          goto LABEL_40;
        }
        if (v53 <= -9.22337204e18) {
          goto LABEL_41;
        }
        if (v53 >= 9.22337204e18) {
          goto LABEL_42;
        }
        if (*(uint64_t *)&v51 == *(uint64_t *)&v53)
        {
          uint64_t countAndFlagsBits = v59._countAndFlagsBits;
          Swift::String v55 = v59._object;
        }
        else
        {
          uint64_t countAndFlagsBits = 10;
          Swift::String v55 = (void *)0xE100000000000000;
        }
        String.append(_:)(*(Swift::String *)&countAndFlagsBits);
        v39 += 2;
        ++v38;
        if (v52 - 1 == v65) {
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v56._uint64_t countAndFlagsBits = 10;
    v56._object = (void *)0xE100000000000000;
    String.append(_:)(v56);
  }
}

uint64_t sub_1000CC2C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = String.init<A>(describing:)();
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1000CC398(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return 0;
  }
  uint64_t result = a1[4];
  uint64_t v4 = v1 - 1;
  if (v1 != 1)
  {
    uint64_t v5 = a1 + 5;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if (result <= v7) {
        uint64_t result = v6;
      }
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_1000CC3DC(uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v14 = a2 & 1;
  uint64_t v15 = (2 * result) | 1;
  uint64_t v16 = sub_1000CB240(result);
  if (v15 >= ContiguousArray.count.getter()) {
    goto LABEL_7;
  }
  uint64_t result = sub_1000CC3DC(v15, v14, a3, a4, a5, a6, a7, a8);
  uint64_t v18 = result + v17;
  if (__OFADD__(result, v17))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v19 = v18 + a6;
  if (!__OFADD__(v18, a6)) {
    goto LABEL_8;
  }
  __break(1u);
LABEL_7:
  uint64_t v19 = 0;
LABEL_8:
  if (v16 >= ContiguousArray.count.getter()) {
    return v19;
  }
  uint64_t result = sub_1000CC3DC(v16, v14, a3, a4, a5, a6, a7, a8);
  if (!__OFADD__(result, v20))
  {
    if (__OFADD__(result + v20, a6)) {
      __break(1u);
    }
    return v19;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_1000CC508(uint64_t a1)
{
  sub_1000CBDB4(*v1, *((void **)v1 + 1), *((void *)v1 + 2), *((void *)v1 + 3), *(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_1000CC520@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Heap();
  return sub_1000CB7E0(v2, a1);
}

uint64_t sub_1000CC564()
{
  return ContiguousArray.count.getter();
}

uint64_t sub_1000CC570(char a1)
{
  uint64_t v1 = a1 & 1;
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t sub_1000CC5C4@<X0>(uint64_t a1@<X8>)
{
  char v3 = sub_1000CC570(*v1);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  swift_release();
  uint64_t result = swift_release();
  *(unsigned char *)a1 = v3 & 1;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v9;
  return result;
}

uint64_t sub_1000CC644()
{
  return sub_1000CC564();
}

uint64_t sub_1000CC658()
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t sub_1000CC67C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000CC2C8(a1, a2);
}

unint64_t sub_1000CC69C(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*(void *)(a2 + 16) <= result) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1000CC6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_1000CC6C0()
{
  swift_release();
  return swift_release();
}

uint64_t sub_1000CC6FC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1000CC748(unsigned char *a1, unsigned char *a2)
{
  sub_1000467B0(a1, a2);
  v3[1] = *(void *)(v4 + 8);
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(v2 + 24);
  v3[2] = *(void *)(v2 + 16);
  v3[3] = v5;
  swift_retain();
  swift_release();
  return v3;
}

uint64_t sub_1000CC7A4(unsigned char *a1, unsigned char *a2)
{
  sub_1000467B0(a1, a2);
  swift_release();
  uint64_t v4 = *(void *)(v2 + 24);
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(v2 + 8);
  *(void *)(v3 + 24) = v4;
  swift_release();
  return v3;
}

uint64_t sub_1000CC7E8(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000CC828(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for HeapIterator()
{
  return sub_10008034C();
}

id sub_1000CC880()
{
  id result = [objc_allocWithZone((Class)NSISO8601DateFormatter) init];
  qword_1002440A0 = (uint64_t)result;
  return result;
}

uint64_t sub_1000CC8B4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14amsengagementd12JetpackIndex_scriptURL;
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000CC930()
{
  sub_1000CC8B4();
  return swift_deallocClassInstance();
}

uint64_t sub_1000CC988()
{
  return type metadata accessor for JetpackIndex();
}

uint64_t type metadata accessor for JetpackIndex()
{
  uint64_t result = qword_10022F958;
  if (!qword_10022F958) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000CC9D8()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JetpackProperties()
{
  return &type metadata for JetpackProperties;
}

uint64_t sub_1000CCA90()
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  sub_100020EAC();
  uint64_t v3 = type metadata accessor for URL.DirectoryHint();
  sub_100020DEC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100020EAC();
  uint64_t v9 = v8 - v7;
  type metadata accessor for URL();
  sub_100020DEC();
  __chkstk_darwin(v10);
  sub_100020EAC();
  uint64_t v35 = type metadata accessor for JetpackOutputWriter();
  if (*(unsigned char *)(v0 + *(int *)(v35 + 28)) == 1)
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v11)
    {
      uint64_t v12 = 1;
      goto LABEL_7;
    }
    uint64_t v12 = 2;
  }
  else
  {
    uint64_t v12 = 1;
  }
  swift_bridgeObjectRelease();
LABEL_7:
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  v38[0] = v12;
  sub_1000CD2A4();
  uint64_t v13 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  if (v1)
  {
    swift_release();
    if (qword_10022C470 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    uint64_t v39 = v35;
    uint64_t v17 = sub_10003BAA4(v38);
    sub_1000CD2F0(v0, (uint64_t)v17);
    id v18 = (id)AMSLogKey();
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v23._uint64_t countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      sub_100041F7C();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000450B0(MetatypeMetadata);
      sub_1000423CC((uint64_t)v37);
      v25._uint64_t countAndFlagsBits = 5972026;
      v25._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v37[3] = &type metadata for String;
      v37[0] = v20;
      v37[1] = v22;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v37);
      v26._uint64_t countAndFlagsBits = 93;
      v26._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v27._uint64_t countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      sub_100041F7C();
      uint64_t v28 = swift_getMetatypeMetadata();
      sub_1000450B0(v28);
      sub_1000423CC((uint64_t)v37);
      v29._uint64_t countAndFlagsBits = 58;
      v29._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v38);
    LogMessage.init(stringLiteral:)();
    swift_getErrorValue();
    uint64_t v39 = v36;
    uint64_t v30 = sub_10003BAA4(v38);
    (*(void (**)(uint64_t *))(*(void *)(v36 - 8) + 16))(v30);
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)v38);
    uint64_t v31 = static os_log_type_t.error.getter();
    sub_10004841C(v31);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  else
  {
    uint64_t v15 = v13;
    unint64_t v16 = v14;
    swift_release();
    strcpy((char *)v38, "metadata.plist");
    HIBYTE(v38[1]) = -18;
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v9, enum case for URL.DirectoryHint.inferFromPath(_:), v3);
    sub_10003C8FC();
    URL.appending<A>(path:directoryHint:)();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
    swift_bridgeObjectRelease();
    Data.write(to:options:)();
    uint64_t v32 = sub_1000467DC();
    v33(v32);
    return sub_10004B278(v15, v16);
  }
}

uint64_t sub_1000CD018(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1000CD0A0(void *a1)
{
  uint64_t v2 = sub_100043478(&qword_10022FAA0);
  sub_100020DEC();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_100020EAC();
  uint64_t v8 = v7 - v6;
  sub_100049788(a1, a1[3]);
  sub_1000544E8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

uint64_t sub_1000CD19C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000CD018(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1000CD1C8(uint64_t a1)
{
  unint64_t v2 = sub_1000544E8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000CD204(uint64_t a1)
{
  unint64_t v2 = sub_1000544E8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000CD240(void *a1)
{
  return sub_1000CD0A0(a1);
}

uint64_t type metadata accessor for JetpackOutputWriter()
{
  uint64_t result = qword_10022FA50;
  if (!qword_10022FA50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1000CD2A4()
{
  unint64_t result = qword_10022F9F0;
  if (!qword_10022F9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022F9F0);
  }
  return result;
}

uint64_t sub_1000CD2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JetpackOutputWriter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *sub_1000CD354(char *__dst, void *__src, int *a3)
{
  uint64_t v4 = __dst;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *__src;
    *(void *)uint64_t v4 = *__src;
    uint64_t v4 = (char *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (void *)__src[1];
    if (v7)
    {
      *(_WORD *)__dst = *(_WORD *)__src;
      *((void *)__dst + 1) = v7;
      *((_OWORD *)__dst + 1) = *((_OWORD *)__src + 1);
      uint64_t v8 = __src[5];
      *((void *)__dst + 4) = __src[4];
      *((void *)__dst + 5) = v8;
      uint64_t v9 = __src[7];
      *((void *)__dst + 6) = __src[6];
      *((void *)__dst + 7) = v9;
      __dst[64] = *((unsigned char *)__src + 64);
      *((void *)__dst + 9) = __src[9];
      id v10 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(__dst, __src, 0x50uLL);
    }
    uint64_t v12 = a3[5];
    uint64_t v13 = &v4[v12];
    unint64_t v14 = (char *)__src + v12;
    uint64_t v15 = type metadata accessor for URL();
    unint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    v16(v13, v14, v15);
    v16(&v4[a3[6]], (char *)__src + a3[6], v15);
    v4[a3[7]] = *((unsigned char *)__src + a3[7]);
  }
  return v4;
}

uint64_t sub_1000CD4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v6 - 8), v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  return v9(v7, v6);
}

void *sub_1000CD584(void *__dst, void *__src, int *a3)
{
  uint64_t v6 = (void *)__src[1];
  if (v6)
  {
    *(_WORD *)__dst = *(_WORD *)__src;
    __dst[1] = v6;
    *((_OWORD *)__dst + 1) = *((_OWORD *)__src + 1);
    uint64_t v7 = __src[5];
    __dst[4] = __src[4];
    __dst[5] = v7;
    uint64_t v8 = __src[7];
    __dst[6] = __src[6];
    __dst[7] = v8;
    *((unsigned char *)__dst + 64) = *((unsigned char *)__src + 64);
    __dst[9] = __src[9];
    id v9 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(__dst, __src, 0x50uLL);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)__dst + v10;
  uint64_t v12 = (char *)__src + v10;
  uint64_t v13 = type metadata accessor for URL();
  unint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  v14(v11, v12, v13);
  v14((char *)__dst + a3[6], (char *)__src + a3[6], v13);
  *((unsigned char *)__dst + a3[7]) = *((unsigned char *)__src + a3[7]);
  return __dst;
}

void *sub_1000CD6A0(void *__dst, void *__src, int *a3)
{
  uint64_t v6 = (void *)__dst[1];
  uint64_t v7 = __src[1];
  if (!v6)
  {
    if (v7)
    {
      *(unsigned char *)__dst = *(unsigned char *)__src;
      *((unsigned char *)__dst + 1) = *((unsigned char *)__src + 1);
      uint64_t v10 = (void *)__src[1];
      __dst[1] = v10;
      __dst[2] = __src[2];
      __dst[3] = __src[3];
      __dst[4] = __src[4];
      __dst[5] = __src[5];
      __dst[6] = __src[6];
      __dst[7] = __src[7];
      *((unsigned char *)__dst + 64) = *((unsigned char *)__src + 64);
      __dst[9] = __src[9];
      id v11 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    memcpy(__dst, __src, 0x50uLL);
    goto LABEL_8;
  }
  if (!v7)
  {
    sub_1000CD878((uint64_t)__dst);
    goto LABEL_7;
  }
  *(unsigned char *)__dst = *(unsigned char *)__src;
  *((unsigned char *)__dst + 1) = *((unsigned char *)__src + 1);
  uint64_t v8 = (void *)__src[1];
  __dst[1] = v8;
  id v9 = v8;

  __dst[2] = __src[2];
  __dst[3] = __src[3];
  __dst[4] = __src[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[5] = __src[5];
  __dst[6] = __src[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[7] = __src[7];
  *((unsigned char *)__dst + 64) = *((unsigned char *)__src + 64);
  __dst[9] = __src[9];
LABEL_8:
  uint64_t v12 = a3[5];
  uint64_t v13 = (char *)__dst + v12;
  unint64_t v14 = (char *)__src + v12;
  uint64_t v15 = type metadata accessor for URL();
  unint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  v16((char *)__dst + a3[6], (char *)__src + a3[6], v15);
  *((unsigned char *)__dst + a3[7]) = *((unsigned char *)__src + a3[7]);
  return __dst;
}

uint64_t sub_1000CD878(uint64_t a1)
{
  return a1;
}

char *sub_1000CD8CC(char *a1, char *a2, int *a3)
{
  memcpy(a1, a2, 0x50uLL);
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

void *sub_1000CD98C(void *__dst, void *__src, int *a3)
{
  uint64_t v6 = (void *)__dst[1];
  if (!v6) {
    goto LABEL_5;
  }
  uint64_t v7 = __src[1];
  if (!v7)
  {
    sub_1000CD878((uint64_t)__dst);
LABEL_5:
    memcpy(__dst, __src, 0x50uLL);
    goto LABEL_6;
  }
  *(unsigned char *)__dst = *(unsigned char *)__src;
  *((unsigned char *)__dst + 1) = *((unsigned char *)__src + 1);
  __dst[1] = v7;

  *((_OWORD *)__dst + 1) = *((_OWORD *)__src + 1);
  __dst[4] = __src[4];
  swift_bridgeObjectRelease();
  uint64_t v8 = __src[6];
  __dst[5] = __src[5];
  __dst[6] = v8;
  swift_bridgeObjectRelease();
  __dst[7] = __src[7];
  *((unsigned char *)__dst + 64) = *((unsigned char *)__src + 64);
  __dst[9] = __src[9];
LABEL_6:
  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)__dst + v9;
  id v11 = (char *)__src + v9;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40);
  v13(v10, v11, v12);
  v13((char *)__dst + a3[6], (char *)__src + a3[6], v12);
  *((unsigned char *)__dst + a3[7]) = *((unsigned char *)__src + a3[7]);
  return __dst;
}

uint64_t sub_1000CDAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000CDADC);
}

uint64_t sub_1000CDADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for URL();
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    return sub_10004FD40(v10, a2, v9);
  }
}

uint64_t sub_1000CDB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000CDB84);
}

uint64_t sub_1000CDB84(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return sub_100021AC0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1000CDC04()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for JetpackMetadata()
{
  return &type metadata for JetpackMetadata;
}

ValueMetadata *type metadata accessor for JetpackMetadata.CodingKeys()
{
  return &type metadata for JetpackMetadata.CodingKeys;
}

unint64_t sub_1000CDCF4()
{
  unint64_t result = qword_10022FAA8;
  if (!qword_10022FAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022FAA8);
  }
  return result;
}

unint64_t sub_1000CDD44()
{
  unint64_t result = qword_10022FAB0;
  if (!qword_10022FAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022FAB0);
  }
  return result;
}

unint64_t sub_1000CDD94()
{
  unint64_t result = qword_10022FAB8;
  if (!qword_10022FAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022FAB8);
  }
  return result;
}

uint64_t sub_1000CDDE0(const void *a1)
{
  uint64_t v2 = sub_100043478(&qword_10022FAC0);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100043478(&qword_10022FAC8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  id v11 = (char *)&v29 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v29 - v12;
  sub_1000CE188(v4);
  if (sub_10004FD40((uint64_t)v4, 1, v5) == 1)
  {
    sub_10002CC0C((uint64_t)v4, &qword_10022FAC0);
    if (qword_10022C3E0 != -1) {
      swift_once();
    }
    unint64_t v14 = (void *)qword_10022D990;
    sub_100043478(&qword_10022FAD0);
    swift_unknownObjectRetain();
    uint64_t v15 = Promise.__allocating_init()();
    sub_100043478(&qword_10022FAD8);
    NSString v16 = sub_10007917C();
    id v17 = [v14 URLForKey:v16];

    id v18 = [v17 valuePromise];
    Promise<A>.init(_:)();
    uint64_t v19 = (void *)swift_allocObject();
    memcpy(v19 + 2, a1, 0x50uLL);
    v19[12] = v14;
    v19[13] = v15;
    swift_retain_n();
    swift_unknownObjectRetain();
    sub_10002C008((uint64_t)a1);
    sub_10003A184();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v20 = *(int *)(v5 + 48);
    uint64_t v21 = &v13[v20];
    Swift::String v29 = &v13[v20];
    uint64_t v30 = (uint64_t)&v4[v20];
    char v22 = *v4;
    *uint64_t v13 = *v4;
    uint64_t v23 = type metadata accessor for URL();
    uint64_t v24 = *(void *)(v23 - 8);
    Swift::String v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 32);
    v25(v21, v30, v23);
    uint64_t v30 = sub_100043478(&qword_10022FAD0);
    Swift::String v26 = &v11[*(int *)(v5 + 48)];
    unsigned char *v11 = v22;
    (*(void (**)(unsigned char *, char *, uint64_t))(v24 + 16))(v26, v29, v23);
    Swift::String v27 = &v8[*(int *)(v5 + 48)];
    *uint64_t v8 = v22;
    v25(v27, (uint64_t)v26, v23);
    uint64_t v15 = Promise.__allocating_init(value:)();
    sub_10002CC0C((uint64_t)v13, &qword_10022FAC8);
  }
  return v15;
}

uint64_t sub_1000CE188@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = sub_100043478(&qword_10022FB40);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v34 - v6;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v34 - v13;
  type metadata accessor for Defaults();
  uint64_t v15 = (void *)sub_1000A38A0(7);
  if (v15)
  {
    NSString v16 = v15;
    if ([v15 respondsToSelector:"objectForKeyedSubscript:"])
    {
      NSString v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v20 = [v16 objectForKeyedSubscript:v19];

      if (v20)
      {
        id v35 = v20;
        sub_100043478(&qword_10022FB48);
        if (swift_dynamicCast())
        {
          URL.init(string:)();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          if (sub_10004FD40((uint64_t)v7, 1, v8) == 1)
          {
            uint64_t v21 = (uint64_t)v7;
LABEL_20:
            sub_10002CC0C(v21, &qword_10022FB40);
LABEL_23:
            uint64_t v26 = sub_100043478(&qword_10022FAC8);
            uint64_t v27 = (uint64_t)a1;
            uint64_t v28 = 1;
            return sub_100021AC0(v27, v28, 1, v26);
          }
          Swift::String v29 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
          v29(v14, v7, v8);
          uint64_t v30 = sub_100043478(&qword_10022FAC8);
          uint64_t v31 = &a1[*(int *)(v30 + 48)];
          *a1 = 1;
          v29(v31, v14, v8);
          goto LABEL_27;
        }
      }
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  id v17 = (void *)sub_1000A38A0(8);
  if (v17)
  {
    id v18 = v17;
    if ([v17 respondsToSelector:"objectForKeyedSubscript:"])
    {
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v25 = [v18 objectForKeyedSubscript:v24];

      if (v25)
      {
        id v35 = v25;
        sub_100043478(&qword_10022FB48);
        if (swift_dynamicCast())
        {
          URL.init(string:)();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          if (sub_10004FD40((uint64_t)v5, 1, v8) == 1)
          {
            uint64_t v21 = (uint64_t)v5;
            goto LABEL_20;
          }
          uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
          v32(v12, v5, v8);
          uint64_t v30 = sub_100043478(&qword_10022FAC8);
          Swift::String v33 = &a1[*(int *)(v30 + 48)];
          *a1 = 0;
          v32(v33, v12, v8);
LABEL_27:
          uint64_t v27 = (uint64_t)a1;
          uint64_t v28 = 0;
          uint64_t v26 = v30;
          return sub_100021AC0(v27, v28, 1, v26);
        }
      }
LABEL_22:
      swift_unknownObjectRelease();
      goto LABEL_23;
    }
LABEL_21:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  uint64_t v22 = sub_100043478(&qword_10022FAC8);
  return sub_100021AC0((uint64_t)a1, 1, 1, v22);
}

uint64_t sub_1000CE730()
{
  uint64_t v0 = sub_100043478(&qword_10022FAC8);
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = &v3[*(int *)(v1 + 56)];
  *uint64_t v3 = 1;
  (*(void (**)(unsigned char *, char *, uint64_t))(v5 + 32))(v8, v7, v4);
  Promise.resolve(_:)();
  return sub_10002CC0C((uint64_t)v3, &qword_10022FAC8);
}

uint64_t sub_1000CE880()
{
  return sub_1000CE730();
}

uint64_t sub_1000CE888(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  if (qword_10022C470 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v27 = &type metadata for JetPackResourceResolver;
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._uint64_t countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    sub_100049788(v26, (uint64_t)v27);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v29[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v29, &qword_10022F490);
    v13._uint64_t countAndFlagsBits = 5972026;
    v13._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    uint64_t MetatypeMetadata = &type metadata for String;
    v29[0] = v8;
    v29[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v29, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 93;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    sub_100049788(v26, (uint64_t)v27);
    uint64_t v16 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v29[0] = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v29, &qword_10022F490);
    v17._uint64_t countAndFlagsBits = 58;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v26);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._object = (void *)0x80000001001CE6C0;
  v18._uint64_t countAndFlagsBits = 0xD000000000000047;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  char v19 = *(unsigned char *)(a2 + 1);
  uint64_t v27 = (ValueMetadata *)&unk_10020E0E8;
  LOBYTE(v26[0]) = v19;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)v26, &qword_10022F490);
  v20._uint64_t countAndFlagsBits = 41;
  v20._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  LogMessage.init(stringInterpolation:)();
  uint64_t v21 = static os_log_type_t.error.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022FAD8);
  NSString v22 = sub_1000790CC();
  id v23 = [a3 URLForKey:v22];

  id v24 = [v23 valuePromise];
  Promise<A>.init(_:)();
  uint64_t v27 = (ValueMetadata *)type metadata accessor for SyncTaskScheduler();
  uint64_t v28 = &protocol witness table for SyncTaskScheduler;
  sub_10003BAA4(v26);
  SyncTaskScheduler.init()();
  sub_100043478(&qword_10022FAC8);
  Promise.map<A>(on:_:)();
  swift_release();
  sub_10004377C((uint64_t)v26);
  sub_1000CEDA8();
  return swift_release();
}

uint64_t sub_1000CECF0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1000CED48(uint64_t a1)
{
  return sub_1000CE888(a1, v1 + 16, *(void **)(v1 + 96));
}

uint64_t sub_1000CED54@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000CEDA8()
{
  return swift_release_n();
}

ValueMetadata *type metadata accessor for JetPackResourceResolver()
{
  return &type metadata for JetPackResourceResolver;
}

uint64_t sub_1000CEE40()
{
  return sub_10001EC54((SEL *)&selRef_ams_altDSID);
}

uint64_t sub_1000CEE64()
{
  return sub_10001EC54((SEL *)&selRef_ams_creditsString);
}

id sub_1000CEE88()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC14amsengagementd9JSAccount_account), "ams_accountFlags");
  if (v1)
  {
    type metadata accessor for AMSAccountFlag(0);
    sub_10008F818();
    sub_1000CF214();
    uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v1 = (id)sub_1000A74E8(v2);
    swift_bridgeObjectRelease();
  }
  return v1;
}

id sub_1000CEF58()
{
  return sub_1000CEFA4(&AMSAccountFlagHasFamilySharingEnabled);
}

id sub_1000CEF98()
{
  return sub_1000CEFA4(&AMSAccountFlagHasiCloudFamily);
}

id sub_1000CEFA4(void *a1)
{
  if (objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC14amsengagementd9JSAccount_account), "ams_accountFlagValueForAccountFlag:", *a1))
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_100053404((uint64_t)v5, (uint64_t)v6);
  if (!v7)
  {
    sub_1000423CC((uint64_t)v6);
    return 0;
  }
  sub_10008F818();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v2 = [v4 BOOLValue];

  return v2;
}

Class sub_1000CF09C(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4 = a1;
  uint64_t v5 = a3();

  if (v5)
  {
    sub_10008F818();
    v6.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6.super.Class isa = 0;
  }
  return v6.super.isa;
}

uint64_t sub_1000CF124()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC14amsengagementd9JSAccount_account), "ams_privacyAcknowledgement");
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  sub_10008F818();
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_1000CF1A0()
{
}

id sub_1000CF1E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSAccount();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_1000CF214()
{
  unint64_t result = qword_10022CC40;
  if (!qword_10022CC40)
  {
    type metadata accessor for AMSAccountFlag(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CC40);
  }
  return result;
}

void sub_1000CF264()
{
}

id sub_1000CF2A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSAccountStore();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1000CF31C()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_app);
}

id sub_1000CF35C()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_backlog);
}

id sub_1000CF39C()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_client);
}

id sub_1000CF3DC()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_content);
}

id sub_1000CF41C()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_family);
}

id sub_1000CF45C()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_followUp);
}

id sub_1000CF49C()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_localize);
}

id sub_1000CF4DC()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_location);
}

id sub_1000CF51C()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_marketing);
}

id sub_1000CF55C()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_media);
}

id sub_1000CF59C()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_plugin);
}

id sub_1000CF5DC()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_privacy);
}

uint64_t sub_1000CF650()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000CF6E0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC14amsengagementd5JSAMS_props) = a1;
  return swift_bridgeObjectRelease();
}

id sub_1000CF72C()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_subscription);
}

id sub_1000CF76C()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_telephony);
}

id sub_1000CF7AC()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_treatmentStore);
}

id sub_1000CF7EC()
{
  return sub_100044AB8(OBJC_IVAR____TtC14amsengagementd5JSAMS_userNotifications);
}

id sub_1000CF7F8()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v1 - 8);
  sub_100020EAC();
  if (qword_10022C470 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v2 = type metadata accessor for LogMessage();
  sub_100044798(v2);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v3 = (objc_class *)type metadata accessor for JSAMS();
  uint64_t v24 = (uint64_t)v3;
  v23[0] = (uint64_t)v0;
  id v4 = v0;
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    NSDictionary v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(v23, v24);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v21[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v21, &qword_10022F490);
    v11._uint64_t countAndFlagsBits = 5972026;
    v11._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t MetatypeMetadata = &type metadata for String;
    v21[0] = v7;
    v21[1] = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v21, &qword_10022F490);
    v12._uint64_t countAndFlagsBits = 93;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(v23, v24);
    uint64_t v13 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v21[0] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v21, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 58;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v23);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._uint64_t countAndFlagsBits = 0x20636F6C6C616544;
  v15._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  uint64_t v16 = (uint64_t)v4 + OBJC_IVAR____TtC14amsengagementd5JSAMS_uuid;
  uint64_t v24 = sub_100043478(&qword_10022FCB0);
  Swift::String v17 = sub_10003BAA4(v23);
  sub_10005479C(v16, (uint64_t)v17);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)v23, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v18 = static os_log_type_t.debug.getter();
  sub_10004841C(v18);
  swift_bridgeObjectRelease();
  v20.receiver = v4;
  v20.super_class = v3;
  return objc_msgSendSuper2(&v20, "dealloc");
}

uint64_t sub_1000CFD1C()
{
  return type metadata accessor for JSAMS();
}

void sub_1000CFD24()
{
}

void sub_1000CFD64()
{
  sub_1000CFE38();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000CFE38()
{
  if (!qword_10022FCA8)
  {
    type metadata accessor for UUID();
    unint64_t v0 = type metadata accessor for AppReference();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10022FCA8);
    }
  }
}

uint64_t sub_1000CFEDC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC14amsengagementd5JSApp_name);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1000CFF28()
{
}

id sub_1000CFF68()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSApp();
  return objc_msgSendSuper2(&v2, "dealloc");
}

BOOL sub_1000CFFB0(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020C290, v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

unint64_t sub_1000CFFF8()
{
  return 0xD000000000000016;
}

BOOL sub_1000D0020@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_1000CFFB0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1000D0058@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_1000CFFF8();
  *a1 = 0xD000000000000016;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000D0088()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  sub_100011D4C();
  if (qword_10022C470 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v3 = type metadata accessor for LogMessage();
  sub_100044798(v3);
  sub_100045F1C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v17 = type metadata accessor for JSAppEngine();
  v16[0] = v0;
  swift_retain();
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v16, v17);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v14[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v14, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v14[0] = v6;
    v14[1] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v14, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049788(v16, v17);
    uint64_t v10 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v14[0] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v14, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v16);
  LogMessage.init(stringLiteral:)();
  uint64_t v11 = static os_log_type_t.info.getter();
  sub_10004841C(v11);
  swift_bridgeObjectRelease();
  Swift::String v12 = *(void **)(v0 + 24);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1000D0324()
{
  sub_1000D0088();
  return swift_deallocClassInstance();
}

uint64_t sub_1000D0358(uint64_t a1)
{
  uint64_t v2 = sub_100043478(&qword_10022FE28);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for JSError();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v24 = a1;
  swift_errorRetain();
  sub_100043478((uint64_t *)&unk_100233150);
  if (swift_dynamicCast())
  {
    sub_100021AC0((uint64_t)v4, 0, 1, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    id v26 = (id)_convertErrorToNSError(_:)();
    sub_100043478((uint64_t *)&unk_10022E570);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001C3FC0;
    *(void *)&long long v24 = 0x6E6D756C6F63;
    *((void *)&v24 + 1) = 0xE600000000000000;
    AnyHashable.init<A>(_:)();
    uint64_t v10 = JSError.column.getter();
    if (v11)
    {
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 72) = 0x6E776F6E6B6E75;
      *(void *)(inited + 80) = 0xE700000000000000;
    }
    else
    {
      id v25 = &type metadata for Int;
      *(void *)&long long v24 = v10;
      sub_100043510(&v24, (_OWORD *)(inited + 72));
    }
    *(void *)&long long v24 = 1701734764;
    *((void *)&v24 + 1) = 0xE400000000000000;
    AnyHashable.init<A>(_:)();
    uint64_t v13 = JSError.line.getter();
    if (v14)
    {
      *(void *)(inited + 168) = &type metadata for String;
      *(void *)(inited + 144) = 0x6E776F6E6B6E75;
      *(void *)(inited + 152) = 0xE700000000000000;
    }
    else
    {
      id v25 = &type metadata for Int;
      *(void *)&long long v24 = v13;
      sub_100043510(&v24, (_OWORD *)(inited + 144));
    }
    *(void *)&long long v24 = 0x6567617373656DLL;
    *((void *)&v24 + 1) = 0xE700000000000000;
    AnyHashable.init<A>(_:)();
    uint64_t v15 = JSError.message.getter();
    *(void *)(inited + 240) = &type metadata for String;
    *(void *)(inited + 216) = v15;
    *(void *)(inited + 224) = v16;
    *(void *)&long long v24 = 0x5255656372756F73;
    *((void *)&v24 + 1) = 0xE90000000000004CLL;
    AnyHashable.init<A>(_:)();
    uint64_t v17 = JSError.sourceURL.getter();
    *(void *)(inited + 312) = &type metadata for String;
    if (v18) {
      uint64_t v19 = v17;
    }
    else {
      uint64_t v19 = 0x6E776F6E6B6E75;
    }
    if (v18) {
      unint64_t v20 = v18;
    }
    else {
      unint64_t v20 = 0xE700000000000000;
    }
    *(void *)(inited + 288) = v19;
    *(void *)(inited + 296) = v20;
    Dictionary.init(dictionaryLiteral:)();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v22 = v26;
    objc_msgSend(v26, "ams_errorByAddingUserInfo:", isa);

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    sub_100021AC0((uint64_t)v4, 1, 1, v5);
    sub_10004357C((uint64_t)v4, &qword_10022FE28);
    swift_willThrow();
    return swift_errorRetain();
  }
}

uint64_t sub_1000D0738(uint64_t a1, void (*a2)(void))
{
  a2();
  sub_1000B6C0C();
  return swift_release();
}

uint64_t sub_1000D078C()
{
  uint64_t v0 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v0 - 8);
  if (qword_10022C470 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v1 = type metadata accessor for JSAppEngine();
  uint64_t v19 = sub_100043478(&qword_10022FDD8);
  v18[0] = v1;
  id v2 = (id)AMSLogKey();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v7._uint64_t countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v7);
    sub_100049788(v18, v19);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v16[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v16, &qword_10022F490);
    v9._uint64_t countAndFlagsBits = 5972026;
    v9._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    uint64_t MetatypeMetadata = &type metadata for String;
    v16[0] = v4;
    v16[1] = v6;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v16, &qword_10022F490);
    v10._uint64_t countAndFlagsBits = 93;
    v10._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._uint64_t countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    sub_100049788(v18, v19);
    uint64_t v12 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v16[0] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v16, &qword_10022F490);
    v13._uint64_t countAndFlagsBits = 58;
    v13._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v18);
  LogMessage.init(stringLiteral:)();
  uint64_t v14 = static os_log_type_t.fault.getter();
  sub_10004841C(v14);
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1000D0A8C()
{
  return sub_1000D078C() & 1;
}

uint64_t sub_1000D0AA8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000D0AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022FDE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D0B20()
{
  return sub_100009E44((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1000D0B38()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000D0B70()
{
  return sub_100009E44((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1000D0B88()
{
  type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = ((*(void *)(v4 + 64) + ((v5 + 32) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1000210B4();
  v9(v8);
  swift_release();
  return _swift_deallocObject(v0, v7, v6);
}

uint64_t sub_1000D0C38(uint64_t a1, void (*a2)(uint64_t *, uint64_t))
{
  uint64_t v3 = 0;
  a2(&v3, a1);
  return Promise.reject(_:)();
}

uint64_t sub_1000D0C94(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v4 = sub_100043478(&qword_10022FE30);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for JSResponse();
  sub_100021AC0((uint64_t)v6, 1, 1, v7);
  a2(v6, a1);
  sub_10004357C((uint64_t)v6, &qword_10022FE30);
  return Promise.reject(_:)();
}

uint64_t sub_1000D0D64()
{
  return sub_100009E44((void (*)(void))&_swift_release);
}

uint64_t sub_1000D0D7C()
{
  return sub_100009E44((void (*)(void))&_swift_release);
}

uint64_t sub_1000D0D94(uint64_t a1)
{
  return sub_1000D0C38(a1, *(void (**)(uint64_t *, uint64_t))(v1 + 16));
}

uint64_t sub_1000D0DA0()
{
  type metadata accessor for JSRequest();
  sub_100020DEC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 56) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1000210B4();
  v9(v8);
  return _swift_deallocObject(v0, v6, v7);
}

uint64_t sub_1000D0E44()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D0E7C()
{
  type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = ((*(void *)(v4 + 64) + ((v5 + 40) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1000210B4();
  v9(v8);
  return _swift_deallocObject(v0, v7, v6);
}

unint64_t sub_1000D0F28()
{
  unint64_t result = qword_10022FE20;
  if (!qword_10022FE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022FE20);
  }
  return result;
}

uint64_t sub_1000D0F78(uint64_t a1)
{
  return sub_1000B9644(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_1000D0F84()
{
  return sub_100009E44((void (*)(void))&_swift_release);
}

uint64_t sub_1000D0F9C()
{
  return sub_100009E44((void (*)(void))&_swift_release);
}

uint64_t sub_1000D0FB4(uint64_t a1)
{
  return sub_1000D0C94(a1, *(void (**)(char *, uint64_t))(v1 + 16));
}

uint64_t sub_1000D0FC0()
{
  type metadata accessor for JSRequest();
  sub_100020DEC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 24) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_release();
  uint64_t v8 = sub_1000210B4();
  v9(v8);
  return _swift_deallocObject(v0, v6, v7);
}

uint64_t sub_1000D1054()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000D1098()
{
  return sub_1000D0738(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

unsigned char *storeEnumTagSinglePayload for JSAppEngineError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000D1140);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for JSAppEngineError()
{
  return &type metadata for JSAppEngineError;
}

unint64_t sub_1000D117C()
{
  unint64_t result = qword_10022FE38;
  if (!qword_10022FE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022FE38);
  }
  return result;
}

uint64_t sub_1000D11C8()
{
  sub_100010084();
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

void *sub_1000D1258(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v39 = a4;
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v10 - 8);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v11 = static RunLoopWorkerThread.current.getter();
  if (v11)
  {
    uint64_t v12 = v11;
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v38 = type metadata accessor for JSBacklog();
    v37[0] = a2;
    a2;
    id v13 = (id)AMSLogKey();
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      sub_100049788(v37, v38);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v35[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v35);
      v20._uint64_t countAndFlagsBits = 5972026;
      v20._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      uint64_t MetatypeMetadata = &type metadata for String;
      v35[0] = v15;
      v35[1] = v17;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v35);
      v21._uint64_t countAndFlagsBits = 93;
      v21._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v22._uint64_t countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      sub_100049788(v37, v38);
      uint64_t v23 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v35[0] = v23;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v35);
      v24._uint64_t countAndFlagsBits = 58;
      v24._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v37);
    LogMessage.init(stringLiteral:)();
    uint64_t v25 = static os_log_type_t.default.getter();
    sub_10004841C(v25);
    swift_bridgeObjectRelease();
    sub_100010084();
    uint64_t v26 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v27 = (void *)swift_allocObject();
    v27[2] = v26;
    v27[3] = v12;
    uint64_t v28 = v39;
    v27[4] = a3;
    v27[5] = v28;
    v27[6] = a5;
    v27[7] = a6;
    swift_retain();
    swift_retain();
    id v29 = a3;
    id v30 = v28;
    id v31 = a5;
    id v32 = a6;
    a5 = (void *)sub_100010358(a1, (uint64_t)sub_1000D36C8, (uint64_t)v27);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000002DLL, 0x80000001001CFC90, 0, 0);
    swift_willThrow();
  }
  return a5;
}

void sub_1000D16BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void *a8, void *a9)
{
  id v56 = a8;
  uint64_t v55 = a7;
  int v58 = a6;
  uint64_t v54 = a2;
  uint64_t v12 = type metadata accessor for JSCallable();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (unsigned __int8 *)Strong;
    uint64_t v60 = v14;
    uint64_t v61 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v59 = v12;
    uint64_t v57 = a3;
    uint64_t v66 = a5;
    type metadata accessor for AppDatabase();
    uint64_t v17 = sub_1000124C0(v16[OBJC_IVAR____TtC14amsengagementd9JSBacklog_config + 1]);
    if (v9)
    {
      uint64_t v34 = v59;
      id v35 = v61;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v61, v57, v59);
      unint64_t v36 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = v16;
      *(void *)(v37 + 24) = v9;
      (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v37 + v36, v35, v34);
      uint64_t v38 = v16;
      swift_errorRetain();
      dispatch thunk of RunLoopWorkerThread.schedule(task:)();
      swift_errorRelease();
      swift_release();
    }
    else
    {
      uint64_t v18 = v17;
      uint64_t v19 = sub_1000DA92C(v58);
      uint64_t v53 = v18;
      if (v19 && (unint64_t v20 = sub_10001075C(v19), swift_bridgeObjectRelease(), v20))
      {
        sub_1000D2068(v20, (uint64_t)v62);
        uint64_t v23 = v62[0];
        uint64_t v24 = v62[1];
        uint64_t v25 = v62[2];
        uint64_t v26 = v62[3];
        int v27 = v63;
      }
      else
      {
        uint64_t v23 = 0;
        uint64_t v24 = 0;
        uint64_t v25 = 0;
        uint64_t v26 = 0;
        int v27 = 255;
      }
      uint64_t v52 = v25;
      uint64_t v51 = v26;
      int v50 = v27;
      uint64_t v49 = v24;
      uint64_t v48 = v23;
      v64[0] = v23;
      v64[1] = v24;
      v64[2] = v25;
      v64[3] = v26;
      char v65 = v27;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = _swiftEmptyArrayStorage;
      uint64_t v47 = v28 + 16;
      int v58 = (void *)JSValue.int.getter();
      LODWORD(v55) = v29 & 1;
      id v30 = (void *)swift_allocObject();
      id v31 = v56;
      v30[2] = v28;
      uint64_t v30[3] = v31;
      v30[4] = a9;
      v30[5] = v16;
      id v32 = v31;
      id v56 = a9;
      Swift::String v33 = v16;
      sub_10007E5A0();
      sub_10007720C((uint64_t)v64, (uint64_t)v58, v55, (uint64_t)sub_1000D392C, (uint64_t)v30);
      uint64_t v39 = v56;
      swift_retain();
      swift_release();
      swift_release();
      swift_beginAccess();
      uint64_t v40 = *(void *)(v28 + 16);
      if (*(void *)(v40 + 16))
      {
        sub_100043478(&qword_10022D808);
        uint64_t v41 = swift_allocObject();
        *(_OWORD *)(v41 + 16) = xmmword_1001C3110;
        *(void *)(v41 + 56) = sub_100043478(&qword_10022F258);
        *(void *)(v41 + 32) = v40;
        swift_bridgeObjectRetain();
      }
      Swift::Int v42 = v61;
      uint64_t v43 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v61, v54, v59);
      unint64_t v44 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v33;
      (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v45 + v44, v42, v43);
      Swift::String v46 = v33;
      dispatch thunk of RunLoopWorkerThread.schedule(task:)();
      sub_10007855C(v48, v49, v52, v51, v50);
      swift_release();

      swift_release();
      swift_release();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v12);
    unint64_t v21 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v22 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v22 + v21, (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
    dispatch thunk of RunLoopWorkerThread.schedule(task:)();
    swift_release();
  }
}

uint64_t sub_1000D1CBC()
{
  uint64_t v0 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v0 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v1 = type metadata accessor for JSBacklog();
  uint64_t v22 = sub_100043478(&qword_10022FE90);
  v21[0] = v1;
  id v2 = (id)AMSLogKey();
  if (v2)
  {
    int v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v7._uint64_t countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v7);
    sub_100049788(v21, v22);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v19[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v19);
    v9._uint64_t countAndFlagsBits = 5972026;
    v9._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    uint64_t MetatypeMetadata = &type metadata for String;
    v19[0] = v4;
    v19[1] = v6;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v19);
    v10._uint64_t countAndFlagsBits = 93;
    v10._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._uint64_t countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    sub_100049788(v21, v22);
    uint64_t v12 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v19[0] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v19);
    v13._uint64_t countAndFlagsBits = 58;
    v13._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v21);
  LogMessage.init(stringLiteral:)();
  uint64_t v14 = static os_log_type_t.error.getter();
  sub_10004841C(v14);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1001C3110;
  type metadata accessor for JSError();
  uint64_t v16 = (void *)sub_1000DE184(0, 0x462070756B6F6F4CLL, 0xED000064656C6961, 0x6E617620666C6553, 0xED00006465687369);
  uint64_t v17 = sub_100028288();

  *(void *)(v15 + 56) = sub_100043478(&qword_10022D7B0);
  *(void *)(v15 + 32) = v17;
  sub_10001147C(v15);
  return swift_bridgeObjectRelease();
}

void sub_1000D2068(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10004D120(1701869940, 0xE400000000000000, a1, &v105);
  if (!v106)
  {
    swift_bridgeObjectRelease();
    sub_1000423CC((uint64_t)&v105);
LABEL_11:
    sub_1000D3A94();
    sub_100021180();
    *(void *)uint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    char v10 = 2;
    goto LABEL_12;
  }
  uint64_t v5 = &type metadata for Any;
  if ((sub_100044AC0() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v7 = v93;
  uint64_t v6 = v101;
  BOOL v8 = v93 == 6581857 && v101 == 0xE300000000000000;
  if (!v8 && (sub_100048D60() & 1) == 0)
  {
    BOOL v25 = v93 == 7368801 && v101 == 0xE300000000000000;
    if (v25 || (sub_100048D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_10004D120(7368801, 0xE300000000000000, a1, &v105);
      swift_bridgeObjectRelease();
      if (v106)
      {
        if (sub_100044AC0())
        {
          uint64_t v26 = 0;
          uint64_t v27 = 0;
          uint64_t v7 = v93;
          uint64_t v6 = v101;
          char v28 = 1;
          goto LABEL_32;
        }
      }
      else
      {
        sub_1000423CC((uint64_t)&v105);
      }
      sub_1000D3A94();
      sub_100021180();
      long long v31 = xmmword_1001C5BA0;
LABEL_87:
      *(_OWORD *)uint64_t v30 = v31;
      *(unsigned char *)(v30 + 16) = 0;
      goto LABEL_88;
    }
    BOOL v32 = v93 == 0x5472657461657267 && v101 == 0xEB000000006E6168;
    if (v32 || (sub_100048D60() & 1) != 0)
    {
      uint64_t v33 = swift_bridgeObjectRelease();
      sub_100045180(v33, v34, v35, v36, v37, v38, v39, v40, v93, v101, v105);
      if (v106)
      {
        uint64_t v41 = sub_100044AC0();
        if (v41)
        {
          sub_10004B480(v41, v42, v43, v44, v45, v46, v47, v48, v95, v102, v105);
          swift_bridgeObjectRelease();
          if (v106)
          {
            if (sub_100044AC0())
            {
              uint64_t v27 = 0;
              uint64_t v26 = v96;
              char v28 = 2;
              goto LABEL_32;
            }
            goto LABEL_56;
          }
          goto LABEL_55;
        }
        goto LABEL_69;
      }
      goto LABEL_68;
    }
    BOOL v49 = v93 == 0x6E6168547373656CLL && v101 == 0xE800000000000000;
    if (v49 || (sub_100048D60() & 1) != 0)
    {
      uint64_t v50 = swift_bridgeObjectRelease();
      sub_100045180(v50, v51, v52, v53, v54, v55, v56, v57, v93, v101, v105);
      if (v106)
      {
        uint64_t v58 = sub_100044AC0();
        if (v58)
        {
          sub_10004B480(v58, v59, v60, v61, v62, v63, v64, v65, v97, v103, v105);
          swift_bridgeObjectRelease();
          if (v106)
          {
            if (sub_100044AC0())
            {
              uint64_t v27 = 0;
              uint64_t v26 = v98;
              char v28 = 3;
              goto LABEL_32;
            }
LABEL_56:
            swift_bridgeObjectRelease();
            goto LABEL_57;
          }
LABEL_55:
          swift_bridgeObjectRelease();
          sub_1000423CC((uint64_t)&v105);
LABEL_57:
          sub_1000D3A94();
          sub_100021180();
          long long v31 = xmmword_1001C5B90;
          goto LABEL_87;
        }
        goto LABEL_69;
      }
      goto LABEL_68;
    }
    BOOL v66 = v93 == 1701538156 && v101 == 0xE400000000000000;
    if (v66 || (sub_100048D60() & 1) != 0)
    {
      uint64_t v67 = swift_bridgeObjectRelease();
      sub_100045180(v67, v68, v69, v70, v71, v72, v73, v74, v93, v101, v105);
      if (v106)
      {
        if (sub_100044AC0())
        {
          uint64_t v7 = v99;
          uint64_t v6 = v104;
          sub_10004D120(0x6E726574746170, 0xE700000000000000, a1, &v105);
          swift_bridgeObjectRelease();
          if (v106)
          {
            if (sub_100044AC0())
            {
              uint64_t v26 = v99;
              uint64_t v27 = v104;
              char v28 = 4;
              goto LABEL_32;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            sub_1000423CC((uint64_t)&v105);
          }
          sub_1000D3A94();
          sub_100021180();
          long long v31 = xmmword_1001C5B70;
          goto LABEL_87;
        }
LABEL_69:
        swift_bridgeObjectRelease();
        goto LABEL_70;
      }
LABEL_68:
      swift_bridgeObjectRelease();
      sub_1000423CC((uint64_t)&v105);
LABEL_70:
      sub_1000D3A94();
      sub_100021180();
      long long v31 = xmmword_1001C5B80;
      goto LABEL_87;
    }
    BOOL v75 = v93 == 29295 && v101 == 0xE200000000000000;
    if (v75 || (sub_100048D60() & 1) != 0)
    {
      uint64_t v76 = swift_bridgeObjectRelease();
      sub_10004871C(v76, v77, v78, v79, v80, v81, v82, v83, v93, v101, v105);
      swift_bridgeObjectRelease();
      if (!v106) {
        goto LABEL_85;
      }
      sub_100043478(&qword_10022FE80);
      if ((sub_100044AC0() & 1) == 0) {
        goto LABEL_86;
      }
      uint64_t v6 = v100;
      uint64_t v7 = *(void *)(v100 + 16);
      if (v7)
      {
        sub_10004DD24();
        uint64_t v84 = 0;
        id v85 = (void *)v105;
        while (1)
        {
          sub_10004ABD8();
          sub_1000D2068(v108, v5);
          if (v2) {
            goto LABEL_89;
          }
          swift_bridgeObjectRelease();
          *(void *)&long long v105 = v85;
          unint64_t v86 = v85[2];
          uint64_t v5 = (uint64_t (**)(void))(v86 + 1);
          if (v86 >= v85[3] >> 1)
          {
            BOOL v87 = sub_100021198();
            unint64_t v89 = v88;
            sub_100073564((char *)v87, v90, v91);
            unint64_t v86 = v89;
            id v85 = (void *)v105;
          }
          ++v84;
          v85[2] = v5;
          sub_100078484(v108, (uint64_t)&v85[5 * v86 + 4]);
          if (v7 == v84)
          {
            swift_bridgeObjectRelease();
            goto LABEL_95;
          }
        }
      }
      swift_bridgeObjectRelease();
      id v85 = _swiftEmptyArrayStorage;
LABEL_95:
      swift_allocObject();
      sub_1000499E8();
      *(void *)(v92 + 16) = v85;
      char v28 = 5;
LABEL_32:
      *(void *)a2 = v7;
      *(void *)(a2 + 8) = v6;
      *(void *)(a2 + 16) = v26;
      *(void *)(a2 + 24) = v27;
      *(unsigned char *)(a2 + 32) = v28;
      return;
    }
    swift_bridgeObjectRelease();
    sub_1000D3A94();
    sub_100021180();
    *(void *)uint64_t v9 = v93;
    *(void *)(v9 + 8) = v101;
    char v10 = 1;
LABEL_12:
    *(unsigned char *)(v9 + 16) = v10;
LABEL_88:
    swift_willThrow();
    return;
  }
  uint64_t v11 = swift_bridgeObjectRelease();
  sub_10004871C(v11, v12, v13, v14, v15, v16, v17, v18, v93, v101, v105);
  swift_bridgeObjectRelease();
  if (!v106)
  {
LABEL_85:
    sub_1000423CC((uint64_t)&v105);
    goto LABEL_86;
  }
  sub_100043478(&qword_10022FE80);
  if ((sub_100044AC0() & 1) == 0)
  {
LABEL_86:
    sub_1000D3A94();
    sub_100021180();
    long long v31 = xmmword_1001C5B60;
    goto LABEL_87;
  }
  uint64_t v6 = v94;
  uint64_t v7 = *(void *)(v94 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    unint64_t v20 = _swiftEmptyArrayStorage;
LABEL_31:
    swift_allocObject();
    sub_1000499E8();
    char v28 = 0;
    *(void *)(v29 + 16) = v20;
    goto LABEL_32;
  }
  sub_10004DD24();
  uint64_t v19 = 0;
  unint64_t v20 = (void *)v105;
  while (1)
  {
    sub_10004ABD8();
    sub_1000D2068(v107, v5);
    if (v2) {
      break;
    }
    swift_bridgeObjectRelease();
    *(void *)&long long v105 = v20;
    unint64_t v21 = v20[2];
    uint64_t v5 = (uint64_t (**)(void))(v21 + 1);
    if (v21 >= v20[3] >> 1)
    {
      BOOL v22 = sub_100021198();
      sub_100073564((char *)v22, v23, v24);
      unint64_t v20 = (void *)v105;
    }
    ++v19;
    long long v20[2] = v5;
    sub_100078484(v107, (uint64_t)&v20[5 * v21 + 4]);
    if (v7 == v19)
    {
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
  }
LABEL_89:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
}

id sub_1000D27AC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  v48[0] = 0;
  id v11 = [v9 JSONObjectWithData:isa options:0 error:v48];

  if (!v11)
  {
    id v26 = v48[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10022C490 != -1) {
      swift_once();
    }
    char v27 = qword_1002440F8;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v49 = type metadata accessor for JSBacklog();
    v48[0] = a5;
    id v28 = a5;
    id v29 = (id)AMSLogKey();
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v33 = v32;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v34._uint64_t countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      sub_100049788(v48, v49);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v46[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v46);
      v36._uint64_t countAndFlagsBits = 5972026;
      v36._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      uint64_t MetatypeMetadata = &type metadata for String;
      v46[0] = v31;
      v46[1] = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v46);
      v37._uint64_t countAndFlagsBits = 93;
      v37._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v38._uint64_t countAndFlagsBits = 0;
      v38._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      sub_100049788(v48, v49);
      uint64_t v39 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v46[0] = v39;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v46);
      v40._uint64_t countAndFlagsBits = 58;
      v40._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v48);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v41._object = (void *)0x80000001001CFD00;
    v41._uint64_t countAndFlagsBits = 0xD000000000000034;
    LogMessage.StringInterpolation.appendLiteral(_:)(v41);
    swift_getErrorValue();
    uint64_t v49 = v45;
    uint64_t v42 = sub_10003BAA4((uint64_t *)v48);
    (*(void (**)(uint64_t *))(*(void *)(v45 - 8) + 16))(v42);
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v48);
    v43._uint64_t countAndFlagsBits = 41;
    v43._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v43);
    LogMessage.init(stringInterpolation:)();
    uint64_t v44 = static os_log_type_t.error.getter();
    char v25 = v27;
    sub_10004841C(v44);
    swift_bridgeObjectRelease();
    swift_willThrow();
    return (id)(v25 & 1);
  }
  id v12 = v48[0];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100043478(&qword_10022D6F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    char v25 = 0;
    return (id)(v25 & 1);
  }
  uint64_t v13 = (uint64_t *)(a2 + 16);
  uint64_t v14 = v46[0];
  swift_beginAccess();
  sub_1000BA37C();
  uint64_t v15 = *(void *)(*v13 + 16);
  sub_1000BA498(v15);
  uint64_t v16 = *v13;
  *(void *)(v16 + 16) = v15 + 1;
  *(void *)(v16 + 8 * v15 + 32) = v14;
  swift_endAccess();
  uint64_t v17 = JSValue.int.getter();
  if ((v18 & 1) != 0 || (v19 = v17, swift_beginAccess(), uint64_t v20 = *v13, *(void *)(*v13 + 16) != v19))
  {
    char v25 = 1;
    return (id)(v25 & 1);
  }
  sub_100043478(&qword_10022D808);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1001C3110;
  *(void *)(v21 + 56) = sub_100043478(&qword_10022F258);
  *(void *)(v21 + 32) = v20;
  swift_bridgeObjectRetain();
  id result = sub_1000D3950(v21, a4);
  if (result)
  {
    int64_t v23 = result;
    char v24 = JSValue.BOOL.getter();

    char v25 = v24 & 1;
    swift_beginAccess();
    *uint64_t v13 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    return (id)(v25 & 1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000D2D50(void *a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v23 = type metadata accessor for JSBacklog();
  v22[0] = a1;
  id v3 = a1;
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v9._uint64_t countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    sub_100049788(v22, v23);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v20);
    v11._uint64_t countAndFlagsBits = 5972026;
    v11._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t MetatypeMetadata = &type metadata for String;
    v20[0] = v6;
    v20[1] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v20);
    v12._uint64_t countAndFlagsBits = 93;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._uint64_t countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(v22, v23);
    uint64_t v14 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v20);
    v15._uint64_t countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v22);
  LogMessage.init(stringLiteral:)();
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_10004841C(v16);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1001C3110;
  uint64_t v18 = Dictionary.init(dictionaryLiteral:)();
  *(void *)(v17 + 56) = sub_100043478(&qword_10022FE88);
  *(void *)(v17 + 32) = v18;
  sub_10001147C(v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D30B0(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v31 = type metadata accessor for JSBacklog();
  v30[0] = (uint64_t)a1;
  id v5 = a1;
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._uint64_t countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    sub_100049788(v30, v31);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v28);
    v13._uint64_t countAndFlagsBits = 5972026;
    v13._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    uint64_t MetatypeMetadata = &type metadata for String;
    v28[0] = v8;
    v28[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v28);
    v14._uint64_t countAndFlagsBits = 93;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    sub_100049788(v30, v31);
    uint64_t v16 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v28);
    v17._uint64_t countAndFlagsBits = 58;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v30);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._object = (void *)0x80000001001CFD40;
  v18._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  swift_getErrorValue();
  uint64_t v31 = v27;
  uint64_t v19 = sub_10003BAA4(v30);
  (*(void (**)(uint64_t *))(*(void *)(v27 - 8) + 16))(v19);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)v30);
  v20._uint64_t countAndFlagsBits = 41;
  v20._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  LogMessage.init(stringInterpolation:)();
  uint64_t v21 = static os_log_type_t.error.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1001C3110;
  id v23 = objc_allocWithZone((Class)type metadata accessor for JSError());
  swift_errorRetain();
  id v24 = sub_100027FB8(a2);
  uint64_t v25 = sub_100028288();

  *(void *)(v22 + 56) = sub_100043478(&qword_10022D7B0);
  *(void *)(v22 + 32) = v25;
  sub_10001147C(v22);
  return swift_bridgeObjectRelease();
}

void sub_1000D3548()
{
}

id sub_1000D3588()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSBacklog();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void *sub_1000D360C(void *a1)
{
  return sub_1000D1258(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1000D3630()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D3668()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_1000D36C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000D16BC(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32), *(void *)(v3 + 40), *(void **)(v3 + 48), *(void **)(v3 + 56));
}

uint64_t sub_1000D36F8()
{
  uint64_t v1 = type metadata accessor for JSCallable();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000D3788()
{
  uint64_t v0 = type metadata accessor for JSCallable();
  sub_100044E90(v0);
  return sub_1000D1CBC();
}

uint64_t sub_1000D37C8()
{
  type metadata accessor for JSCallable();
  sub_100044830();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 32) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;

  swift_errorRelease();
  uint64_t v8 = sub_1000210B4();
  v9(v8);
  return _swift_deallocObject(v0, v6, v7);
}

uint64_t sub_1000D3860()
{
  uint64_t v1 = type metadata accessor for JSCallable();
  sub_100044E90(v1);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  return sub_1000D30B0(v2, v3);
}

uint64_t sub_1000D38A4()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D38DC()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

unint64_t sub_1000D392C(uint64_t a1)
{
  return (unint64_t)sub_1000D27AC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40)) & 1;
}

id sub_1000D3950(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v4 = [a2 callWithArguments:isa];

  return v4;
}

uint64_t sub_1000D39C0()
{
  type metadata accessor for JSCallable();
  sub_100044830();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 24) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;

  uint64_t v8 = sub_1000210B4();
  v9(v8);
  return _swift_deallocObject(v0, v6, v7);
}

uint64_t sub_1000D3A50()
{
  uint64_t v1 = type metadata accessor for JSCallable();
  sub_100044E90(v1);
  uint64_t v2 = *(void **)(v0 + 16);
  return sub_1000D2D50(v2);
}

unint64_t sub_1000D3A94()
{
  unint64_t result = qword_10022FE78;
  if (!qword_10022FE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022FE78);
  }
  return result;
}

uint64_t sub_1000D3AE4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for AppBacklogPredicateError(uint64_t a1)
{
  return sub_1000D3B0C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1000D3B0C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s14amsengagementd24AppBacklogPredicateErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1000D3AE4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AppBacklogPredicateError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1000D3AE4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1000D3B0C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for AppBacklogPredicateError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1000D3B0C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppBacklogPredicateError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppBacklogPredicateError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000D3C94(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1000D3CAC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AppBacklogPredicateError()
{
  return &type metadata for AppBacklogPredicateError;
}

id sub_1000D3CD8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Bag();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100043478(&qword_10022FF08);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2 + OBJC_IVAR____TtC14amsengagementd5JSBag_bag, v6);
  id result = (id)sub_10001EA1C(a3);
  if (v15)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Bag.subscript.getter();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    Bag.Value.currentOrNil()();
    if (v19)
    {
      id v17 = [self valueWithUndefinedInContext:a1];
      if (v17)
      {
LABEL_6:
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        return v17;
      }
      __break(1u);
    }
    id result = [self valueWithDouble:a1 inContext:v18[2]];
    id v17 = result;
    if (result) {
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1000D3FB0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Bag();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100043478(&qword_10022FF00);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2 + OBJC_IVAR____TtC14amsengagementd5JSBag_bag, v6);
  id result = (id)sub_10001EA1C(a3);
  if (v15)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Bag.subscript.getter();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    Bag.Value.currentOrNil()();
    if (v19 == 1)
    {
      id v17 = [self valueWithUndefinedInContext:a1];
      if (v17)
      {
LABEL_6:
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        return v17;
      }
      __break(1u);
    }
    id result = [self valueWithDouble:a1 inContext:(double)v18[2]];
    id v17 = result;
    if (result) {
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1000D4290(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Bag();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100043478(&qword_10022FEF8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2 + OBJC_IVAR____TtC14amsengagementd5JSBag_bag, v6);
  id result = (id)sub_10001EA1C(a3);
  if (v15)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Bag.subscript.getter();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    Bag.Value.currentOrNil()();
    char v17 = v20;
    if (v20 == 2)
    {
      id v18 = [self valueWithUndefinedInContext:a1];
      if (v18)
      {
LABEL_6:
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        return v18;
      }
      __break(1u);
    }
    id result = [self valueWithBool:v17 & 1 inContext:a1];
    id v18 = result;
    if (result) {
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000D45D8(void *a1, uint64_t a2, void *a3)
{
  id v33 = a1;
  uint64_t v5 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for URL();
  uint64_t v30 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  id v29 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Bag();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100043478(&qword_10022FED8);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  NSString v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2 + OBJC_IVAR____TtC14amsengagementd5JSBag_bag, v9);
  uint64_t result = sub_10001EA1C(a3);
  if (v18)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Bag.subscript.getter();

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    Bag.Value.currentOrNil()();
    uint64_t v20 = v31;
    uint64_t v21 = v13;
    if (sub_10004FD40((uint64_t)v7, 1, v31) == 1)
    {
      sub_1000D4B80((uint64_t)v7);
      id v22 = [self valueWithUndefinedInContext:v33];
      if (v22)
      {
LABEL_7:
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v21);
        return (uint64_t)v22;
      }
      __break(1u);
    }
    id v24 = v29;
    uint64_t v23 = v30;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v29, v7, v20);
    sub_10004D510(0, &qword_10022FEE0);
    uint64_t v25 = URL.absoluteString.getter();
    void v32[3] = &type metadata for String;
    v32[0] = v25;
    v32[1] = v26;
    id v27 = v33;
    id v28 = v33;
    uint64_t result = (uint64_t)sub_10001EA80(v32, v27);
    if (result)
    {
      id v22 = (id)result;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v20);
      goto LABEL_7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1000D49E8()
{
}

id sub_1000D4A28()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000D4ACC()
{
  return type metadata accessor for JSBag();
}

uint64_t sub_1000D4AD4()
{
  uint64_t result = type metadata accessor for Bag();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000D4B64(void *a1)
{
  return sub_1000D45D8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1000D4B80(uint64_t a1)
{
  uint64_t v2 = sub_100043478(&qword_10022FB40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1000D4BE0(void *a1)
{
  return sub_10000C930(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), &qword_10022FEF0, (void (*)(NSString))&Bag.subscript.getter, &qword_10022DE18);
}

id sub_1000D4C20(uint64_t a1)
{
  return sub_1000D4290(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

id sub_1000D4C3C(uint64_t a1)
{
  return sub_1000D3FB0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

id sub_1000D4C58(uint64_t a1)
{
  return sub_1000D3CD8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1000D4C74(uint64_t a1)
{
}

uint64_t sub_1000D4CC0()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1000D4D30(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC14amsengagementd8JSClient_demo) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_1000D4D60()
{
  return sub_1000D4D90((SEL *)&selRef_bundleIdentifier);
}

uint64_t sub_1000D4D84()
{
  return sub_1000D4D90((SEL *)&selRef_clientVersion);
}

uint64_t sub_1000D4D90(SEL *a1)
{
  uint64_t result = sub_1000D5174(*(id *)(v1 + OBJC_IVAR____TtC14amsengagementd8JSClient_clientInfo), a1);
  if (!v3) {
    return 0;
  }
  return result;
}

uint64_t sub_1000D4E40()
{
  if ([self deviceIsAudioAccessory])
  {
    uint64_t v0 = (__CFString *)String._bridgeToObjectiveC()();
    CFStringRef v1 = kCFPreferencesAnyApplication;
    CFStringRef v2 = kCFPreferencesCurrentUser;
    CFStringRef v3 = kCFPreferencesAnyHost;
    CFPropertyListRef v4 = CFPreferencesCopyValue(v0, kCFPreferencesAnyApplication, kCFPreferencesCurrentUser, kCFPreferencesAnyHost);

    if (v4)
    {
      if (sub_100044B18())
      {
        uint64_t v5 = v12;
        if (v12)
        {
          uint64_t v6 = v11;
          goto LABEL_11;
        }
      }
    }
  }
  else
  {
    CFStringRef v1 = kCFPreferencesAnyApplication;
    CFStringRef v2 = kCFPreferencesCurrentUser;
    CFStringRef v3 = kCFPreferencesAnyHost;
  }
  uint64_t v7 = (__CFString *)String._bridgeToObjectiveC()();
  CFPropertyListRef v8 = CFPreferencesCopyValue(v7, v1, v2, v3);

  if (v8)
  {
    int v9 = sub_100044B18();
    uint64_t v6 = v11;
    uint64_t v5 = v12;
    if (!v9)
    {
      uint64_t v5 = 0;
      uint64_t v6 = 0;
    }
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
LABEL_11:
  if (v5) {
    return v6;
  }
  else {
    return 0;
  }
}

id sub_1000D4FD4(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1000D5044()
{
  id v1 = [self userAgentForProcessInfo:*(void *)(v0 + OBJC_IVAR____TtC14amsengagementd8JSClient_clientInfo)];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

void sub_1000D50B4()
{
}

id sub_1000D50F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSClient();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000D5174(void *a1, SEL *a2)
{
  id v3 = [a1 *a2];

  if (!v3) {
    return 0;
  }
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

unint64_t sub_1000D5214()
{
  id v16 = 0;
  id v0 = [self sharedInstance];
  CFPropertyListRef v8 = v0;
  if (v0)
  {
    id v15 = 0;
    unint64_t v9 = (unint64_t)[v0 typeOfDemoDevice:&v15];

    id v16 = v15;
    id v0 = v15;
    if ((v9 & 0x8000000000000000) != 0) {
      __break(1u);
    }
    CFPropertyListRef v8 = v0;
  }
  else
  {
    unint64_t v9 = 0;
  }
  uint64_t v10 = sub_100044B38((uint64_t)v0, v1, v2, v3, v4, v5, v6, v7, v14, (uint64_t)v15, (char)v16);
  sub_1000D56B0((id *)v10, v11, 37, 0xD000000000000025, v12);

  return v9;
}

id sub_1000D5330()
{
  return [self isRunningInStoreDemoMode];
}

uint64_t sub_1000D53D0()
{
  id v21 = 0;
  id v0 = [self sharedInstance];
  if (!v0)
  {
    id v3 = 0;
LABEL_6:
    uint64_t v6 = Dictionary.init(dictionaryLiteral:)();
    uint64_t v4 = v6;
    goto LABEL_7;
  }
  uint64_t v1 = v0;
  id v20 = 0;
  id v2 = [v0 getDeviceOptions:&v20];

  id v3 = v20;
  id v21 = v20;
  if (!v2)
  {
    id v14 = v20;
    goto LABEL_6;
  }
  uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  id v5 = v3;

LABEL_7:
  id v15 = sub_100044B38(v6, v7, v8, v9, v10, v11, v12, v13, v19, (uint64_t)v20, (char)v21);
  sub_1000D56B0((id *)v15, v16, 41, 0xD000000000000029, v17);

  return v4;
}

void *sub_1000D558C()
{
  id v18 = 0;
  id v0 = [self sharedInstance];
  uint64_t v8 = v0;
  if (v0)
  {
    id v17 = 0;
    id v9 = [v0 getStoreID:&v17];

    id v10 = v17;
    id v18 = v17;
    if (v9)
    {
      uint64_t v8 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v11 = v10;
    }
    else
    {
      id v0 = v17;
      id v11 = v0;
      uint64_t v8 = 0;
    }
  }
  else
  {
    id v11 = 0;
  }
  uint64_t v12 = sub_100044B38((uint64_t)v0, v1, v2, v3, v4, v5, v6, v7, v16, (uint64_t)v17, (char)v18);
  sub_1000D56B0((id *)v12, v13, 34, 0xD000000000000022, v14);

  return v8;
}

uint64_t sub_1000D56B0(id *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t result = __chkstk_darwin(v9 - 8);
  if (*a1)
  {
    uint64_t v11 = qword_10022C490;
    id v31 = *a1;
    if (v11 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    unint64_t v35 = type metadata accessor for JSClientDemo();
    v34[0] = a2;
    id v12 = a2;
    id v13 = (id)AMSLogKey();
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = a4;
      uint64_t v16 = a5;
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v20._uint64_t countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      uint64_t v21 = sub_100045EA4();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v32[0] = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v32);
      v22._uint64_t countAndFlagsBits = 5972026;
      v22._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      uint64_t MetatypeMetadata = &type metadata for String;
      v32[0] = v17;
      v32[1] = v19;
      a5 = v16;
      a4 = v15;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v32);
      v23._uint64_t countAndFlagsBits = 93;
      v23._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v24._uint64_t countAndFlagsBits = 0;
      v24._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      uint64_t v25 = sub_100045EA4();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v32[0] = v25;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v32);
      v26._uint64_t countAndFlagsBits = 58;
      v26._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v34);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v27._uint64_t countAndFlagsBits = a4;
    v27._object = a5;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    unint64_t v35 = sub_1000D5A28();
    v34[0] = v31;
    id v28 = v31;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v34);
    v29._uint64_t countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    LogMessage.init(stringInterpolation:)();
    uint64_t v30 = static os_log_type_t.error.getter();
    sub_10004841C(v30);

    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1000D59F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSClientDemo();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_1000D5A28()
{
  unint64_t result = qword_100234520;
  if (!qword_100234520)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100234520);
  }
  return result;
}

uint64_t sub_1000D5A68@<X0>(void *a1@<X8>)
{
  uint64_t v4 = type metadata accessor for JSContent.Request(0);
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_100011D4C();
  sub_100049FA0();
  v19[0] = v6;
  v19[1] = 0xE800000000000000;
  sub_10004A3A0();
  sub_100040AD0();
  sub_1000434BC((uint64_t)v20);
  if (!v22)
  {
    swift_bridgeObjectRelease();
    sub_100027BD8((uint64_t)v21, &qword_10022F490);
LABEL_11:
    sub_1000DAAE0();
    sub_100021180();
    *id v13 = 0;
    return swift_willThrow();
  }
  if ((sub_10004CE80() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v8 = v19[0];
  uint64_t v7 = v19[1];
  sub_100036270();
  v19[0] = v9;
  v19[1] = 0xE700000000000000;
  sub_10004A3A0();
  sub_100040AD0();
  sub_1000434BC((uint64_t)v20);
  if (!v22)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100027BD8((uint64_t)v21, &qword_10022F490);
LABEL_14:
    sub_1000DAAE0();
    sub_100021180();
    char v15 = 1;
LABEL_18:
    *id v14 = v15;
    return swift_willThrow();
  }
  if ((sub_10004CE80() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v11 = v19[0];
  uint64_t v10 = v19[1];
  strcpy((char *)v19, "contentRequest");
  HIBYTE(v19[1]) = -18;
  sub_10004A3A0();
  sub_100040AD0();
  sub_1000434BC((uint64_t)v20);
  if (!v22)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100027BD8((uint64_t)v21, &qword_10022F490);
LABEL_17:
    sub_1000DAAE0();
    sub_100021180();
    char v15 = 2;
    goto LABEL_18;
  }
  uint64_t v23 = v11;
  sub_100043478(&qword_10022D6F0);
  if ((sub_10005013C() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  sub_1000D5E18(v1);
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  strcpy((char *)v19, "options");
  v19[1] = 0xE700000000000000;
  sub_10004A3A0();
  sub_100040AD0();
  swift_bridgeObjectRelease();
  sub_1000434BC((uint64_t)v20);
  if (v22)
  {
    if (sub_10005013C()) {
      goto LABEL_25;
    }
  }
  else
  {
    sub_100027BD8((uint64_t)v21, &qword_10022F490);
  }
  Dictionary.init(dictionaryLiteral:)();
LABEL_25:
  int v16 = sub_1000D62D0();
  *a1 = v8;
  a1[1] = v7;
  a1[2] = v23;
  a1[3] = v10;
  uint64_t v17 = type metadata accessor for JSContent.CacheRequest(0);
  uint64_t result = sub_1000DAA7C(v1, (uint64_t)a1 + *(int *)(v17 + 24), (void (*)(void))type metadata accessor for JSContent.Request);
  uint64_t v18 = (char *)a1 + *(int *)(v17 + 28);
  *uint64_t v18 = v16 & 1;
  v18[1] = BYTE1(v16) & 1;
  v18[2] = (v16 & 0xFFFF0000) != 0;
  return result;
}

uint64_t sub_1000D5E18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100043478(&qword_10022FB40);
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  uint64_t v5 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38._uint64_t countAndFlagsBits = 7107189;
  v38._object = (void *)0xE300000000000000;
  sub_10004A3A0();
  sub_100047508();
  sub_1000434BC((uint64_t)v39);
  if (!v41)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = &qword_10022F490;
    id v12 = v40;
    goto LABEL_6;
  }
  if ((sub_10004CE80() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if (sub_10004FD40(v1, 1, v5) == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = &qword_10022FB40;
    id v12 = (void *)v1;
LABEL_6:
    sub_100027BD8((uint64_t)v12, v11);
LABEL_8:
    sub_1000DAA10();
    sub_100021180();
    *id v13 = 0;
    return swift_willThrow();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v10, v1, v5);
  v38._uint64_t countAndFlagsBits = 0x646F6874656DLL;
  v38._object = (void *)0xE600000000000000;
  sub_10004A3A0();
  sub_100047508();
  sub_1000434BC((uint64_t)v39);
  if (v41)
  {
    if (sub_10004CE80())
    {
      Swift::String v15 = v38;
      goto LABEL_14;
    }
  }
  else
  {
    sub_100027BD8((uint64_t)v40, &qword_10022F490);
  }
  v15._uint64_t countAndFlagsBits = sub_100049DE0();
LABEL_14:
  int v16 = sub_1000D660C(v15);
  if (v16 == 8)
  {
    swift_bridgeObjectRelease();
    sub_1000DAA10();
    sub_100021180();
    *uint64_t v17 = 1;
    swift_willThrow();
    uint64_t v18 = sub_100050D98();
    return v19(v18);
  }
  int v37 = v16;
  v38._uint64_t countAndFlagsBits = 0x73726564616568;
  v38._object = (void *)0xE700000000000000;
  sub_10004A3A0();
  sub_100047508();
  sub_1000434BC((uint64_t)v39);
  if (!v41)
  {
    sub_100027BD8((uint64_t)v40, &qword_10022F490);
    goto LABEL_20;
  }
  sub_100043478(&qword_10022D7B0);
  if (!sub_10004CE80())
  {
LABEL_20:
    uint64_t countAndFlagsBits = Dictionary.init(dictionaryLiteral:)();
    goto LABEL_21;
  }
  uint64_t countAndFlagsBits = v38._countAndFlagsBits;
LABEL_21:
  uint64_t v42 = countAndFlagsBits;
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v35 = v22;
  uint64_t v36 = v21;
  uint64_t v23 = self;
  id v24 = [self currentProcess];
  id v25 = [v23 userAgentForProcessInfo:v24];

  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;

  v39[3] = &type metadata for String;
  v39[0] = v26;
  v39[1] = v28;
  sub_10003E698((uint64_t)v39, v36, v35);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(a1, v10, v5);
  Swift::String v29 = (int *)type metadata accessor for JSContent.Request(0);
  *(unsigned char *)(a1 + v29[6]) = v37;
  *(void *)(a1 + v29[5]) = v42;
  v40[0] = 2036625250;
  v40[1] = 0xE400000000000000;
  AnyHashable.init<A>(_:)();
  sub_100047508();
  swift_bridgeObjectRelease();
  sub_1000434BC((uint64_t)v39);
  uint64_t v30 = sub_100050D98();
  v31(v30);
  if (v41)
  {
    uint64_t result = swift_dynamicCast();
    uint64_t v32 = v38._countAndFlagsBits;
    object = v38._object;
    if (!result)
    {
      uint64_t v32 = 0;
      object = 0;
    }
  }
  else
  {
    uint64_t result = sub_100027BD8((uint64_t)v40, &qword_10022F490);
    uint64_t v32 = 0;
    object = 0;
  }
  Swift::String v34 = (uint64_t *)(a1 + v29[7]);
  *Swift::String v34 = v32;
  v34[1] = (uint64_t)object;
  return result;
}

uint64_t sub_1000D62D0()
{
  *(void *)&long long v37 = 0x756F656D69546E6FLL;
  *((void *)&v37 + 1) = 0xE900000000000074;
  uint64_t v0 = AnyHashable.init<A>(_:)();
  sub_1000DC05C(v0, v1, v2, v3, v4, v5, v6, v7, v28, v32[0], v33, v34, v35, v36, v37);
  sub_1000434BC((uint64_t)v32);
  if (v38)
  {
    if (sub_100045BA8())
    {
      int v8 = HIBYTE(v29);
      goto LABEL_6;
    }
  }
  else
  {
    sub_100027BD8((uint64_t)&v37, &qword_10022F490);
  }
  int v8 = 0;
LABEL_6:
  *(void *)&long long v37 = 0xD000000000000011;
  *((void *)&v37 + 1) = 0x80000001001D0370;
  uint64_t v9 = AnyHashable.init<A>(_:)();
  sub_1000DC05C(v9, v10, v11, v12, v13, v14, v15, v16, v29, v32[0], v33, v34, v35, v36, v37);
  sub_1000434BC((uint64_t)v32);
  if (!v38)
  {
    sub_100027BD8((uint64_t)&v37, &qword_10022F490);
    goto LABEL_12;
  }
  if (!sub_100045BA8())
  {
LABEL_12:
    int v17 = 0;
    goto LABEL_13;
  }
  if (HIBYTE(v30)) {
    int v17 = 256;
  }
  else {
    int v17 = 0;
  }
LABEL_13:
  *(void *)&long long v37 = 0xD00000000000001ALL;
  *((void *)&v37 + 1) = 0x80000001001D0390;
  uint64_t v18 = AnyHashable.init<A>(_:)();
  sub_1000DC05C(v18, v19, v20, v21, v22, v23, v24, v25, v30, v32[0], v33, v34, v35, v36, v37);
  swift_bridgeObjectRelease();
  sub_1000434BC((uint64_t)v32);
  if (!v38)
  {
    sub_100027BD8((uint64_t)&v37, &qword_10022F490);
    goto LABEL_19;
  }
  if (!sub_100045BA8())
  {
LABEL_19:
    int v26 = 0;
    return v17 | v8 | v26;
  }
  if (v31) {
    int v26 = 0x10000;
  }
  else {
    int v26 = 0;
  }
  return v17 | v8 | v26;
}

unint64_t sub_1000D649C(uint64_t a1)
{
  strcpy((char *)&v5, "requestingApp");
  HIWORD(v5._object) = -4864;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v6, a1, v7);
  sub_1000434BC((uint64_t)v6);
  if (v8)
  {
    if (sub_100042B64())
    {
      Swift::String v2 = v5;
      goto LABEL_6;
    }
  }
  else
  {
    sub_100027BD8((uint64_t)v7, &qword_10022F490);
  }
  v2._uint64_t countAndFlagsBits = sub_100049DE0();
LABEL_6:
  unint64_t v3 = sub_10003227C(v2);
  strcpy(v7, "notificationId");
  v7[15] = -18;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v6, a1, v7);
  swift_bridgeObjectRelease();
  sub_1000434BC((uint64_t)v6);
  if (v8) {
    sub_100042B64();
  }
  else {
    sub_100027BD8((uint64_t)v7, &qword_10022F490);
  }
  return v3;
}

unint64_t sub_1000D660C(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020C300, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 8) {
    return 8;
  }
  else {
    return v3;
  }
}

uint64_t sub_1000D6658(char a1)
{
  uint64_t result = 0x5443454E4E4F43;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x4554454C4544;
      break;
    case 2:
      unsigned __int16 v3 = 17735;
      goto LABEL_8;
    case 3:
      uint64_t result = 1145128264;
      break;
    case 4:
      uint64_t result = 0x4843544150;
      break;
    case 5:
      uint64_t result = 1414745936;
      break;
    case 6:
      unsigned __int16 v3 = 21840;
LABEL_8:
      uint64_t result = v3 | 0x540000u;
      break;
    case 7:
      uint64_t result = 0x455441445055;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000D672C(unsigned __int8 *a1, char *a2)
{
  return sub_10007CFA4(*a1, *a2);
}

Swift::Int sub_1000D6738()
{
  return sub_100059FD0(*v0);
}

uint64_t sub_1000D6740()
{
  return sub_10005A20C();
}

Swift::Int sub_1000D6748(uint64_t a1)
{
  return sub_10005B150(a1, *v1);
}

unint64_t sub_1000D6750@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000D660C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000D6780@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000D6658(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1000D67AC()
{
  sub_1000209F4();
  uint64_t v45 = v2;
  uint64_t v4 = v3;
  uint64_t v46 = v5;
  uint64_t v47 = v6;
  uint64_t v7 = type metadata accessor for JSContent.CacheRequest(0);
  uint64_t v8 = sub_100044798(v7);
  uint64_t v10 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = sub_100049DB8();
  uint64_t v12 = sub_1000208F0(v11);
  __chkstk_darwin(v12);
  sub_100040A70();
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v13 = sub_1000208FC();
  sub_100044798(v13);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v55 = (void *)type metadata accessor for JSContent();
  v54[0] = v0;
  v0;
  id v14 = (id)AMSLogKey();
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v48 = v4;
    uint64_t v18 = v17;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    sub_100048B98();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100040960(MetatypeMetadata);
    sub_100027BD8((uint64_t)&v51, &qword_10022F490);
    sub_100020E44();
    uint64_t v53 = &type metadata for String;
    uint64_t v51 = v16;
    uint64_t v52 = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v51, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    uint64_t v4 = v48;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    sub_100048B98();
    uint64_t v20 = swift_getMetatypeMetadata();
    sub_100040960(v20);
    sub_100027BD8((uint64_t)&v51, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v54);
  sub_100043B80();
  uint64_t v55 = &type metadata for String;
  v54[0] = v46;
  v54[1] = v47;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_100027BD8((uint64_t)v54, &qword_10022F490);
  uint64_t v21 = static os_log_type_t.default.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  uint64_t v49 = sub_100104D4C(v4);
  if (v49)
  {
    uint64_t v22 = *(void *)(v49 + 16);
    uint64_t v23 = _swiftEmptyArrayStorage;
    if (v22)
    {
      uint64_t v24 = v49 + 32;
      do
      {
        sub_100043520(v24, (uint64_t)v54);
        sub_100043520((uint64_t)v54, (uint64_t)&v51);
        sub_100043478(&qword_10022D6F0);
        if ((swift_dynamicCast() & 1) == 0) {
          uint64_t v50 = 0;
        }
        sub_10004377C((uint64_t)v54);
        if (v50)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1000707BC();
            uint64_t v23 = v26;
          }
          unint64_t v25 = v23[2];
          if (v25 >= v23[3] >> 1)
          {
            sub_1000707BC();
            uint64_t v23 = v27;
          }
          v23[2] = v25 + 1;
          v23[v25 + 4] = v50;
        }
        v24 += 32;
        --v22;
      }
      while (v22);
    }
    swift_bridgeObjectRelease();
    uint64_t v28 = v23[2];
    if (v28)
    {
      v54[0] = _swiftEmptyArrayStorage;
      sub_100073584(0, v28, 0);
      uint64_t v29 = 0;
      uint64_t v30 = (void *)v54[0];
      do
      {
        swift_bridgeObjectRetain_n();
        sub_1000D5A68(v1);
        swift_bridgeObjectRelease();
        v54[0] = v30;
        unint64_t v32 = v30[2];
        unint64_t v31 = v30[3];
        if (v32 >= v31 >> 1)
        {
          sub_100073584(v31 > 1, v32 + 1, 1);
          uint64_t v30 = (void *)v54[0];
        }
        ++v29;
        v30[2] = v32 + 1;
        sub_1000DAA7C((uint64_t)v1, (uint64_t)v30+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v32, (void (*)(void))type metadata accessor for JSContent.CacheRequest);
      }
      while (v28 != v29);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v30 = _swiftEmptyArrayStorage;
    }
    uint64_t v33 = sub_10004C1CC();
    uint64_t v34 = sub_10004582C(v33);
    id v35 = (id)AMSLogKey();
    if (v35)
    {
      uint64_t v36 = v35;
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v39 = v38;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020E60();
      sub_100048B98();
      uint64_t v40 = swift_getMetatypeMetadata();
      sub_100040960(v40);
      sub_10004A70C();
      sub_100020E44();
      uint64_t v53 = &type metadata for String;
      uint64_t v51 = v37;
      uint64_t v52 = v39;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004A70C();
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100020E60();
      sub_100048B98();
      uint64_t v41 = swift_getMetatypeMetadata();
      sub_100040960(v41);
      sub_100027BD8((uint64_t)&v51, &qword_10022F490);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004377C((uint64_t)v54);
    sub_100043B80();
    uint64_t v55 = (void *)sub_100043478(&qword_10022FFB0);
    v54[0] = v30;
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_100027BD8((uint64_t)v54, &qword_10022F490);
    uint64_t v42 = static os_log_type_t.default.getter();
    sub_10004841C(v42);
    swift_bridgeObjectRelease();
    char v43 = v34[OBJC_IVAR____TtC14amsengagementd9JSContent_config + 1];
    type metadata accessor for ContentManager();
    *(unsigned char *)(sub_100030788() + 16) = v43;
    sub_1000119BC(v45);
    sub_1000D649C(v44);
    sub_1000942B8();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100020FDC();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000D70E4()
{
  type metadata accessor for ContentManager();
  uint64_t v0 = sub_100030788();
  sub_10002CB00(v0);
  uint64_t v2 = sub_1000921C8(v1);
  swift_release();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1000D7200()
{
  type metadata accessor for ContentManager();
  uint64_t v0 = sub_100030788();
  sub_10002CB00(v0);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = type metadata accessor for ContentInfo();
    sub_100044798(v4);
    uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v8 = *(void *)(v7 + 72);
    do
    {
      sub_100099E30();
      v6 += v8;
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1000D72EC()
{
  sub_1000209F4();
  uint64_t v33 = v2;
  uint64_t v39 = v4;
  uint64_t v40 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for JSContent.Request(0);
  uint64_t v12 = sub_1000208F0(v11);
  __chkstk_darwin(v12);
  uint64_t v13 = sub_100049DB8();
  uint64_t v14 = sub_1000208F0(v13);
  __chkstk_darwin(v14);
  sub_100020658();
  if (qword_10022C490 != -1) {
    swift_once();
  }
  uint64_t v37 = qword_1002440F8;
  uint64_t v15 = sub_100043478(&qword_10022E560);
  uint64_t v16 = type metadata accessor for LogMessage();
  sub_100044798(v16);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = (v18 + 32) & ~v18;
  uint64_t v36 = v15;
  uint64_t v35 = v18 | 7;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3140;
  uint64_t v34 = type metadata accessor for JSContent();
  uint64_t v44 = (void *)v34;
  uint64_t v42 = (uint64_t)v0;
  uint64_t v38 = v0;
  id v20 = (id)AMSLogKey();
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v31 = v8;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v6;
    uint64_t v24 = v23;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100044E44();
    sub_100020F04(&v42);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100043AFC(MetatypeMetadata);
    sub_100027BD8((uint64_t)v41, &qword_10022F490);
    sub_100020E44();
    void v41[3] = &type metadata for String;
    v41[0] = v22;
    v41[1] = v24;
    uint64_t v8 = v31;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v41, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    uint64_t v6 = v32;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100044E44();
    sub_100020F04(&v42);
    uint64_t v26 = swift_getMetatypeMetadata();
    sub_100043AFC(v26);
    sub_100027BD8((uint64_t)v41, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v42);
  sub_100043B80();
  uint64_t v44 = &type metadata for String;
  uint64_t v42 = v10;
  uint64_t v43 = v8;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_100027BD8((uint64_t)&v42, &qword_10022F490);
  LogMessage.init(stringLiteral:)();
  uint64_t v44 = &type metadata for String;
  uint64_t v42 = v40;
  uint64_t v43 = v6;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_100027BD8((uint64_t)&v42, &qword_10022F490);
  uint64_t v27 = static os_log_type_t.default.getter();
  sub_10004841C(v27);
  swift_bridgeObjectRelease();
  char v28 = v38[OBJC_IVAR____TtC14amsengagementd9JSContent_config + 1];
  type metadata accessor for ContentManager();
  *(unsigned char *)(sub_100030788() + 16) = v28;
  sub_1000119BC((uint64_t)v39);
  sub_1000D5E18(v1);
  sub_1000119BC(v33);
  int v29 = sub_1000D62D0();
  sub_1000959DC(0, 0, v10, v8, v40, v6, v1, v29 & 0x101 | (((v29 & 0xFFFF0000) != 0) << 16), 0, 0, 1, v30, v31, v32, v10, v33, v34, v35, v19,
    v36,
    v37,
    (uint64_t)v38,
    v39);
  swift_release();
  sub_1000DA9B8(v1, (void (*)(void))type metadata accessor for JSContent.Request);
  sub_100020FDC();
}

uint64_t sub_1000D79E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v10 = sub_1000208F0(v9);
  __chkstk_darwin(v10);
  sub_100040A70();
  type metadata accessor for ContentInfo();
  sub_100020DEC();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_100040A70();
  uint64_t v44 = v14;
  uint64_t v41 = v4;
  char v15 = *((unsigned char *)v4 + OBJC_IVAR____TtC14amsengagementd9JSContent_config + 1);
  type metadata accessor for ContentManager();
  *(unsigned char *)(sub_100030788() + 16) = v15;
  *(void *)&long long v42 = a1;
  *((void *)&v42 + 1) = a2;
  sub_1000995B4();
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v18 = v16 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v40 = *(void *)(v12 + 72);
    do
    {
      sub_100092730(v18, v44);
      if (qword_10022C490 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      uint64_t v19 = sub_1000208FC();
      sub_100044798(v19);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
      *((void *)&v49 + 1) = type metadata accessor for JSContent();
      *(void *)&long long v48 = v41;
      id v20 = v41;
      id v21 = (id)AMSLogKey();
      if (v21)
      {
        uint64_t v22 = v21;
        uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v24 = v23;

        swift_bridgeObjectRetain();
        sub_100020F60();
        v25._uint64_t countAndFlagsBits = sub_100049DE0();
        LogMessage.StringInterpolation.appendLiteral(_:)(v25);
        uint64_t v26 = sub_100020F04(&v48);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v45 = v26;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v45, &qword_10022F490);
        sub_100020E44();
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v45 = v43;
        uint64_t v46 = v24;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v45, &qword_10022F490);
        sub_1000208D8();
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020980();
        sub_100020E60();
        uint64_t v27 = sub_1000524AC();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v45 = v27;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)&v45, &qword_10022F490);
        sub_100020E94();
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v48);
      LogMessage.init(stringLiteral:)();
      *((void *)&v49 + 1) = &type metadata for String;
      long long v48 = v42;
      swift_bridgeObjectRetain();
      static LogMessage.safe(_:)();
      sub_1000409A0();
      uint64_t v28 = static os_log_type_t.default.getter();
      sub_10004841C(v28);
      swift_bridgeObjectRelease();
      Date.addTimeInterval(_:)(2592000.0);
      sub_10009A43C();
      sub_1000DA9B8(v44, (void (*)(void))type metadata accessor for ContentInfo);
      v18 += v40;
      --v17;
    }
    while (v17);
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v29 = sub_1000208FC();
    sub_100044798(v29);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3FC0;
    *((void *)&v49 + 1) = type metadata accessor for JSContent();
    *(void *)&long long v48 = v41;
    id v30 = v41;
    id v31 = (id)AMSLogKey();
    if (v31)
    {
      uint64_t v32 = v31;
      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v35 = v34;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020E60();
      sub_100049788(&v48, *((uint64_t *)&v49 + 1));
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v45 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v45, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v45 = v33;
      uint64_t v46 = v35;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v45, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100020E60();
      sub_100049788(&v48, *((uint64_t *)&v49 + 1));
      uint64_t v37 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v45 = v37;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v45, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v48);
    sub_100043B80();
    *((void *)&v49 + 1) = &type metadata for String;
    long long v48 = v42;
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_100027BD8((uint64_t)&v48, &qword_10022F490);
    if (a4)
    {
      *((void *)&v49 + 1) = &type metadata for String;
      *(void *)&long long v48 = a3;
      *((void *)&v48 + 1) = a4;
    }
    else
    {
      long long v48 = 0u;
      long long v49 = 0u;
    }
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_100027BD8((uint64_t)&v48, &qword_10022F490);
    uint64_t v38 = static os_log_type_t.default.getter();
    sub_10004841C(v38);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D813C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v9 = sub_1000208F0(v8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v100 = (char *)v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v91 - v12;
  uint64_t v98 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_100040A70();
  uint64_t v97 = v17;
  uint64_t v96 = type metadata accessor for ContentInfo();
  sub_100020DEC();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_10002D300();
  uint64_t v21 = sub_1000467C4();
  sub_10004D120(v21, v22, a3, v23);
  *(void *)&long long v99 = v4;
  *((void *)&v99 + 1) = v15;
  uint64_t v95 = (uint64_t)v13;
  uint64_t v24 = a1;
  if (*((void *)&v105 + 1))
  {
    int v25 = swift_dynamicCast();
    if (v25) {
      uint64_t v26 = v101;
    }
    else {
      uint64_t v26 = 0;
    }
    if (v25) {
      uint64_t v27 = v102;
    }
    else {
      uint64_t v27 = 0;
    }
  }
  else
  {
    sub_100027BD8((uint64_t)&v104, &qword_10022F490);
    uint64_t v26 = 0;
    uint64_t v27 = 0;
  }
  unint64_t v28 = (unint64_t)&type metadata for String;
  char v29 = v3[OBJC_IVAR____TtC14amsengagementd9JSContent_config + 1];
  type metadata accessor for ContentManager();
  uint64_t v30 = sub_100030788();
  char isUniquelyReferenced_nonNull_native = v3;
  *(unsigned char *)(v30 + 16) = v29;
  uint64_t v32 = v30;
  sub_1000995B4();
  uint64_t v34 = v33;
  if (*(void *)(v33 + 16))
  {
    uint64_t v100 = *(char **)(v33 + 16);
    v91[1] = v32;
    swift_bridgeObjectRelease();
    sub_100043478(&qword_10022D7B0);
    uint64_t v35 = (void *)Dictionary.init(dictionaryLiteral:)();
    uint64_t v36 = *(unsigned __int8 *)(v19 + 80);
    v91[0] = v34;
    uint64_t v37 = v34 + ((v36 + 32) & ~v36);
    uint64_t v92 = *(void *)(v19 + 72);
    uint64_t v38 = (uint64_t *)v99;
    uint64_t v95 = *((void *)&v99 + 1) + 8;
    long long v94 = xmmword_1001C3FD0;
    uint64_t v93 = &type metadata for Any + 1;
    while (1)
    {
      *((void *)&v99 + 1) = v37;
      sub_100092730(v37, (uint64_t)v38);
      sub_100043478(&qword_10022D330);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v94;
      sub_100049FA0();
      *(void *)(v40 + 32) = v41;
      *(void *)(v40 + 40) = 0xE800000000000000;
      uint64_t v42 = v38[3];
      *(void *)(inited + 48) = v38[2];
      *(void *)(inited + 56) = v42;
      *(void *)(inited + 72) = v28;
      *(void *)(inited + 80) = 0x64657461657263;
      *(void *)(inited + 88) = 0xE700000000000000;
      uint64_t v43 = (int *)v96;
      swift_bridgeObjectRetain();
      Date.timeIntervalSince1970.getter();
      *(double *)(inited + 96) = v44 * 1000.0;
      *(void *)(inited + 120) = &type metadata for Double;
      *(void *)(inited + 128) = 0x73657269707865;
      *(void *)(inited + 136) = 0xE700000000000000;
      Date.timeIntervalSince1970.getter();
      *(double *)(inited + 144) = v45 * 1000.0;
      *(void *)(inited + 168) = &type metadata for Double;
      *(void *)(inited + 176) = 0x64657269707865;
      *(void *)(inited + 184) = 0xE700000000000000;
      Date.init()();
      char v46 = static Date.< infix(_:_:)();
      sub_100043FB0();
      v48(v47);
      *(unsigned char *)(inited + 192) = v46 & 1;
      *(void *)(inited + 216) = &type metadata for Bool;
      *(void *)(inited + 224) = 0x6574617473;
      *(void *)(inited + 232) = 0xE500000000000000;
      *(void *)(inited + 240) = *((unsigned __int8 *)v38 + v43[10]);
      *(void *)(inited + 264) = &type metadata for Int;
      *(void *)(inited + 272) = 1752457584;
      *(void *)(inited + 280) = 0xE400000000000000;
      long long v49 = (uint64_t *)((char *)v38 + v43[9]);
      uint64_t v51 = *v49;
      uint64_t v50 = v49[1];
      sub_100043478(&qword_10022E060);
      *(void *)(inited + 288) = v51;
      *(void *)(inited + 296) = v50;
      sub_100036270();
      *(void *)(inited + 312) = v52;
      *(void *)(inited + 320) = v53;
      *(void *)(inited + 328) = 0xE700000000000000;
      uint64_t v54 = (uint64_t *)((char *)v38 + v43[12]);
      uint64_t v56 = *v54;
      uint64_t v55 = v54[1];
      *(void *)(inited + 336) = *v54;
      *(void *)(inited + 344) = v55;
      *(void *)(inited + 360) = v28;
      *(void *)(inited + 368) = 0x79654B6863746162;
      *(void *)(inited + 376) = 0xE900000000000073;
      uint64_t v57 = *v38;
      *(void *)(inited + 408) = sub_100043478(&qword_100232940);
      *(void *)(inited + 384) = v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v58 = (void *)v28;
      uint64_t v59 = Dictionary.init(dictionaryLiteral:)();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v104 = v35;
      unint64_t v60 = sub_100042ADC(v56, v55);
      uint64_t v62 = v35[2];
      BOOL v63 = (v61 & 1) == 0;
      Swift::Int v64 = v62 + v63;
      if (__OFADD__(v62, v63))
      {
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      unint64_t v28 = v60;
      char v65 = v61;
      sub_100043478(&qword_10022E9F0);
      if (_NativeDictionary.ensureUnique(isUnique:capacity:)((Swift::Bool)isUniquelyReferenced_nonNull_native, v64))
      {
        unint64_t v66 = sub_100042ADC(v56, v55);
        if ((v65 & 1) != (v67 & 1))
        {
          uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          return result;
        }
        unint64_t v28 = v66;
      }
      uint64_t v35 = (void *)v104;
      if (v65)
      {
        uint64_t v68 = *(void *)(v104 + 56);
        swift_bridgeObjectRelease();
        *(void *)(v68 + 8 * v28) = v59;
      }
      else
      {
        *(void *)(v104 + 8 * (v28 >> 6) + 64) |= 1 << v28;
        uint64_t v69 = (uint64_t *)(v35[6] + 16 * v28);
        *uint64_t v69 = v56;
        v69[1] = v55;
        *(void *)(v35[7] + 8 * v28) = v59;
        uint64_t v70 = v35[2];
        BOOL v71 = __OFADD__(v70, 1);
        uint64_t v72 = v70 + 1;
        if (v71) {
          goto LABEL_31;
        }
        _OWORD v35[2] = v72;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = (uint64_t *)v99;
      sub_1000DA9B8(v99, (void (*)(void))type metadata accessor for ContentInfo);
      uint64_t v37 = *((void *)&v99 + 1) + v92;
      --v100;
      unint64_t v28 = (unint64_t)v58;
      if (!v100)
      {
        swift_bridgeObjectRelease();
        sub_1000AFE04((uint64_t)v35);
        uint64_t v74 = v73;
        swift_bridgeObjectRelease();
        swift_release();
        return v74;
      }
    }
  }
  uint64_t v98 = v26;
  *(void *)&long long v99 = v24;
  *(void *)&long long v94 = v27;
  *((void *)&v99 + 1) = a2;
  swift_bridgeObjectRelease();
  if (qword_10022C490 != -1) {
LABEL_32:
  }
    swift_once();
  uint64_t v97 = qword_1002440F8;
  sub_100043478(&qword_10022E560);
  uint64_t v75 = type metadata accessor for LogMessage();
  sub_100044798(v75);
  uint64_t v96 = *(void *)(v76 + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  *((void *)&v105 + 1) = type metadata accessor for JSContent();
  *(void *)&long long v104 = isUniquelyReferenced_nonNull_native;
  id v77 = isUniquelyReferenced_nonNull_native;
  id v78 = (id)AMSLogKey();
  if (v78)
  {
    uint64_t v79 = v78;
    uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v82 = v81;

    swift_bridgeObjectRetain();
    sub_100020F60();
    v83._uint64_t countAndFlagsBits = sub_100049DE0();
    LogMessage.StringInterpolation.appendLiteral(_:)(v83);
    uint64_t v84 = sub_100020F04(&v104);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    uint64_t v101 = v84;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v101, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = v28;
    uint64_t v101 = v80;
    uint64_t v102 = v82;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v101, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    uint64_t v85 = sub_1000524AC();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    uint64_t v101 = v85;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v101, &qword_10022F490);
    sub_100020E94();
    sub_10001D6F8();
  }
  sub_10004377C((uint64_t)&v104);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v86._object = (void *)0x80000001001D02B0;
  v86._uint64_t countAndFlagsBits = 0xD000000000000025;
  LogMessage.StringInterpolation.appendLiteral(_:)(v86);
  *((void *)&v105 + 1) = v28;
  long long v104 = v99;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)&v104, &qword_10022F490);
  v87._uint64_t countAndFlagsBits = 0x6F6973726576202CLL;
  v87._object = (void *)0xEB00000000203A6ELL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v87);
  if ((void)v94)
  {
    *((void *)&v105 + 1) = v28;
    *(void *)&long long v104 = v98;
    *((void *)&v104 + 1) = v94;
  }
  else
  {
    long long v104 = 0u;
    long long v105 = 0u;
  }
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)&v104, &qword_10022F490);
  v88._uint64_t countAndFlagsBits = 41;
  v88._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v88);
  LogMessage.init(stringInterpolation:)();
  uint64_t v89 = static os_log_type_t.default.getter();
  sub_10004841C(v89);
  swift_release();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000D8B00()
{
  char v1 = *(unsigned char *)(v0 + OBJC_IVAR____TtC14amsengagementd9JSContent_config + 1);
  type metadata accessor for ContentManager();
  *(unsigned char *)(sub_100030788() + 16) = v1;
  sub_100099B24();
  uint64_t v3 = sub_1000921C8(v2);
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

void sub_1000D8C20()
{
  sub_1000209F4();
  uint64_t v3 = v2;
  uint64_t v103 = v4;
  uint64_t v104 = v5;
  uint64_t v102 = v6;
  v87[2] = type metadata accessor for URL();
  sub_100020DEC();
  v87[1] = v7;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87[6] = type metadata accessor for Date();
  sub_100020DEC();
  v87[5] = v11;
  __chkstk_darwin(v12);
  sub_100040A70();
  v87[4] = v13;
  uint64_t v14 = sub_100043478(&qword_10022D880);
  uint64_t v15 = sub_1000208F0(v14);
  __chkstk_darwin(v15);
  sub_100040A70();
  uint64_t v100 = v16;
  uint64_t v101 = type metadata accessor for ContentInfo();
  sub_1000456E0();
  __chkstk_darwin(v17);
  uint64_t v18 = sub_100049DB8();
  uint64_t v19 = sub_1000208F0(v18);
  __chkstk_darwin(v19);
  sub_10002D300();
  uint64_t v20 = v0[OBJC_IVAR____TtC14amsengagementd9JSContent_config + 1];
  type metadata accessor for ContentManager();
  uint64_t v21 = sub_100030788();
  *(unsigned char *)(v21 + 16) = v20;
  uint64_t v22 = sub_1000467C4();
  long long v105 = v3;
  sub_10004D120(v22, v23, (uint64_t)v3, v24);
  if (v112)
  {
    int v25 = swift_dynamicCast();
    uint64_t v26 = v107;
    if (!v25) {
      uint64_t v26 = 0;
    }
    uint64_t v98 = v26;
    if (v25) {
      uint64_t v27 = v108;
    }
    else {
      uint64_t v27 = 0;
    }
    uint64_t v99 = v27;
  }
  else
  {
    sub_100027BD8((uint64_t)&v110, &qword_10022F490);
    uint64_t v98 = 0;
    uint64_t v99 = 0;
  }
  v87[3] = v10;
  if (qword_10022C490 != -1) {
    swift_once();
  }
  uint64_t v97 = qword_1002440F8;
  sub_100043478(&qword_10022E560);
  uint64_t v28 = sub_1000208FC();
  sub_100044798(v28);
  uint64_t v30 = *(void *)(v29 + 72);
  uint64_t v32 = *(unsigned __int8 *)(v31 + 80);
  uint64_t v33 = (v32 + 32) & ~v32;
  uint64_t v94 = v20;
  uint64_t v89 = v33 + 5 * v30;
  uint64_t v91 = v32 | 7;
  uint64_t v34 = swift_allocObject();
  long long v88 = xmmword_1001C3140;
  *(_OWORD *)(v34 + 16) = xmmword_1001C3140;
  uint64_t v95 = v33;
  uint64_t v92 = type metadata accessor for JSContent();
  uint64_t v112 = (void *)v92;
  id v110 = v0;
  uint64_t v93 = v0;
  id v35 = (id)AMSLogKey();
  if (v35)
  {
    uint64_t v36 = v35;
    uint64_t v37 = v21;
    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v40 = v39;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020B08();
    sub_100020F04(&v110);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100046DD8(MetatypeMetadata);
    sub_100040FA0();
    sub_100020E44();
    uint64_t v109 = &type metadata for String;
    uint64_t v107 = v38;
    uint64_t v108 = v40;
    uint64_t v21 = v37;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100040FA0();
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020B08();
    sub_100020F04(&v110);
    uint64_t v42 = swift_getMetatypeMetadata();
    sub_100046DD8(v42);
    sub_100027BD8((uint64_t)&v107, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v110);
  sub_100043B80();
  uint64_t v90 = 2 * v30;
  uint64_t v112 = &type metadata for String;
  id v110 = v103;
  uint64_t v111 = v104;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_10004A1F0();
  v87[7] = 3 * v30;
  sub_1000227C4();
  uint64_t v43 = sub_100043478(&qword_10022D7B0);
  uint64_t v112 = (void *)v43;
  id v110 = v105;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_10004A1F0();
  uint64_t v44 = static os_log_type_t.default.getter();
  sub_10004841C(v44);
  swift_bridgeObjectRelease();
  sub_1000995B4();
  uint64_t v46 = v45;
  swift_bridgeObjectRelease();
  uint64_t v47 = v100;
  sub_100159D48(v46, v100);
  swift_bridgeObjectRelease();
  uint64_t v48 = v101;
  int v49 = sub_10004FD40(v47, 1, v101);
  uint64_t v96 = v30;
  if (v49 == 1)
  {
    sub_100027BD8(v47, &qword_10022D880);
LABEL_22:
    *(_OWORD *)(swift_allocObject() + 16) = v88;
    sub_100047844();
    id v61 = (id)AMSLogKey();
    if (v61)
    {
      uint64_t v62 = v61;
      uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v101 = 4 * v30;
      uint64_t v65 = v64;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020B08();
      sub_100020F04(&v110);
      uint64_t v66 = swift_getMetatypeMetadata();
      sub_100046DD8(v66);
      sub_100040FA0();
      sub_100020E44();
      uint64_t v109 = &type metadata for String;
      uint64_t v107 = v63;
      uint64_t v108 = v65;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100040FA0();
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100020B08();
      sub_100020F04(&v110);
      uint64_t v67 = swift_getMetatypeMetadata();
      sub_100046DD8(v67);
      sub_100027BD8((uint64_t)&v107, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v110);
    sub_100043B80();
    uint64_t v112 = &type metadata for String;
    id v110 = v103;
    uint64_t v111 = v104;
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_10004A1F0();
    sub_1000227C4();
    uint64_t v112 = (void *)v43;
    id v110 = v105;
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_10004A1F0();
    uint64_t v68 = static os_log_type_t.default.getter();
    sub_10004841C(v68);
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_26;
  }
  sub_1000DAA7C(v47, (uint64_t)v1, (void (*)(void))type metadata accessor for ContentInfo);
  Date.init()();
  char v50 = static Date.< infix(_:_:)();
  sub_100043FB0();
  v51();
  if ((v50 & 1) != 0 || (uint64_t v52 = &v1[*(int *)(v48 + 36)], (v53 = *((void *)v52 + 1)) == 0))
  {
    sub_1000DA9B8((uint64_t)v1, (void (*)(void))type metadata accessor for ContentInfo);
    goto LABEL_22;
  }
  uint64_t v54 = *(void **)v52;
  swift_bridgeObjectRetain();
  URL.init(fileURLWithPath:)();
  uint64_t v70 = Data.init(contentsOf:options:)();
  unint64_t v72 = v71;
  uint64_t v73 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v110 = 0;
  id v75 = [v73 JSONObjectWithData:isa options:0 error:&v110];

  id v76 = v110;
  if (v75)
  {
    swift_bridgeObjectRelease();
    _bridgeAnyObjectToAny(_:)();
    sub_10004B278(v70, v72);
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v77 = sub_10002D3B4();
    v78(v77);
    sub_1000DA9B8((uint64_t)v1, (void (*)(void))type metadata accessor for ContentInfo);
    goto LABEL_27;
  }
  Swift::String v86 = v76;
  long long v105 = v1;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  sub_10004B278(v70, v72);
  uint64_t v104 = qword_1002440F8;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  sub_100047844();
  id v55 = (id)AMSLogKey();
  if (v55)
  {
    uint64_t v56 = v55;
    uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v103 = (void *)v21;
    uint64_t v59 = v58;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020B08();
    sub_100020F04(&v110);
    uint64_t v60 = swift_getMetatypeMetadata();
    sub_100046DD8(v60);
    sub_100027BD8((uint64_t)&v107, &qword_10022F490);
    sub_100020E44();
    uint64_t v109 = &type metadata for String;
    uint64_t v107 = v57;
    uint64_t v108 = v59;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v107, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020B08();
    sub_100020F04(&v110);
    uint64_t v79 = swift_getMetatypeMetadata();
    sub_100046DD8(v79);
    sub_100027BD8((uint64_t)&v107, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v110);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v80._object = (void *)0x80000001001D0290;
  v80._uint64_t countAndFlagsBits = 0xD000000000000016;
  LogMessage.StringInterpolation.appendLiteral(_:)(v80);
  uint64_t v112 = &type metadata for String;
  id v110 = v54;
  uint64_t v111 = v53;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)&v110, &qword_10022F490);
  v81._uint64_t countAndFlagsBits = 8236;
  v81._object = (void *)0xE200000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v81);
  swift_getErrorValue();
  uint64_t v112 = v106;
  sub_10003BAA4((uint64_t *)&v110);
  sub_1000456E0();
  sub_1000476D8();
  v82();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)&v110, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v83 = static os_log_type_t.error.getter();
  sub_10004841C(v83);
  swift_bridgeObjectRelease();
  swift_release();
  swift_errorRelease();
  uint64_t v84 = sub_10002D3B4();
  v85(v84);
  sub_1000DA9B8((uint64_t)v105, (void (*)(void))type metadata accessor for ContentInfo);
LABEL_26:
  uint64_t v69 = v102;
  *uint64_t v102 = 0u;
  v69[1] = 0u;
LABEL_27:
  sub_100020FDC();
}

void sub_1000D995C()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_100011D4C();
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v7 = type metadata accessor for LogMessage();
  sub_100044798(v7);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v20 = (void *)type metadata accessor for JSContent();
  v19[0] = v0;
  uint64_t v8 = v0;
  id v9 = (id)AMSLogKey();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    sub_100042B84();
    swift_getMetatypeMetadata();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000409A0();
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v17[0] = v11;
    v17[1] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000409A0();
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    sub_100049788(v19, (uint64_t)v20);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v17[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v17, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v19);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  uint64_t v20 = &type metadata for String;
  v19[0] = v4;
  v19[1] = v2;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_100027BD8((uint64_t)v19, &qword_10022F490);
  uint64_t v15 = static os_log_type_t.default.getter();
  sub_10004841C(v15);
  swift_bridgeObjectRelease();
  char v16 = v8[OBJC_IVAR____TtC14amsengagementd9JSContent_config + 1];
  type metadata accessor for ContentManager();
  *(unsigned char *)(sub_100030788() + 16) = v16;
  sub_10009A1D0();
  swift_release();
  sub_100020FDC();
}

uint64_t sub_1000D9C68(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  id v9 = a1;
  a4(v6, v8);

  return swift_bridgeObjectRelease();
}

void sub_1000D9CD4()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  *(void *)&long long v44 = v3;
  *((void *)&v44 + 1) = v4;
  uint64_t v42 = v6;
  uint64_t v43 = v5;
  uint64_t v41 = v7;
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v9 = sub_1000208F0(v8);
  __chkstk_darwin(v9);
  sub_100020658();
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v10 = type metadata accessor for LogMessage();
  sub_100044798(v10);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3140;
  uint64_t v40 = type metadata accessor for JSContent();
  int v49 = (void *)v40;
  *(void *)&long long v48 = v0;
  uint64_t v11 = v0;
  id v12 = (id)AMSLogKey();
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    char v16 = v15;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100044E44();
    sub_100020F04(&v48);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100042048(MetatypeMetadata);
    sub_100027BD8((uint64_t)&v46, &qword_10022F490);
    sub_100020E44();
    uint64_t v47 = &type metadata for String;
    v46._uint64_t countAndFlagsBits = v14;
    v46._object = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v46, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100044E44();
    sub_100020F04(&v48);
    uint64_t v18 = swift_getMetatypeMetadata();
    sub_100042048(v18);
    sub_100027BD8((uint64_t)&v46, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v48);
  LogMessage.init(stringLiteral:)();
  int v49 = &type metadata for String;
  *(void *)&long long v48 = v43;
  *((void *)&v48 + 1) = v42;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_10004A1F0();
  int v49 = &type metadata for String;
  long long v48 = v44;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_10004A1F0();
  int v49 = (void *)sub_100043478(&qword_10022D7B0);
  *(void *)&long long v48 = v2;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_10004A1F0();
  uint64_t v19 = static os_log_type_t.default.getter();
  sub_10004841C(v19);
  swift_bridgeObjectRelease();
  char v20 = v11[OBJC_IVAR____TtC14amsengagementd9JSContent_config + 1];
  sub_10004D120(0x6974736575716572, 0xED0000707041676ELL, v2, &v48);
  if (v49)
  {
    if (swift_dynamicCast())
    {
      char v21 = sub_10003227C(v46);
      if (v21 != 4) {
        char v20 = v21;
      }
    }
  }
  else
  {
    sub_100027BD8((uint64_t)&v48, &qword_10022F490);
  }
  type metadata accessor for ContentManager();
  *(unsigned char *)(sub_100030788() + 16) = v20;
  if (sub_1000DA92C(v41))
  {
    uint64_t v22 = self;
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    *(void *)&long long v48 = 0;
    id v24 = [v22 dataWithJSONObject:isa options:0 error:&v48];

    id v25 = (id)v48;
    if (v24)
    {
      uint64_t v26 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v28 = v27;

      sub_1000119BC(v2);
      sub_10009A678();
      swift_bridgeObjectRelease();
      swift_release();
      sub_10004B278(v26, v28);
    }
    else
    {
      uint64_t v29 = v25;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
      int v49 = (void *)v40;
      *(void *)&long long v48 = v11;
      uint64_t v30 = v11;
      id v31 = (id)AMSLogKey();
      if (v31)
      {
        uint64_t v32 = v31;
        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v35 = v34;

        swift_bridgeObjectRetain();
        sub_100020F60();
        sub_100044E44();
        sub_100020F04(&v48);
        uint64_t v36 = swift_getMetatypeMetadata();
        sub_100042048(v36);
        sub_100040FA0();
        sub_100020E44();
        uint64_t v47 = &type metadata for String;
        v46._uint64_t countAndFlagsBits = v33;
        v46._object = v35;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100040FA0();
        sub_1000208D8();
        sub_100022650();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020980();
        sub_100044E44();
        sub_100020F04(&v48);
        uint64_t v37 = swift_getMetatypeMetadata();
        sub_100042048(v37);
        sub_100027BD8((uint64_t)&v46, &qword_10022F490);
        sub_100020E94();
        sub_100022650();
      }
      sub_10004377C((uint64_t)&v48);
      sub_100020924();
      LogMessage.init(stringLiteral:)();
      swift_getErrorValue();
      int v49 = v45;
      sub_10003BAA4((uint64_t *)&v48);
      sub_1000456E0();
      sub_1000476D8();
      v38();
      static LogMessage.safe(_:)();
      sub_100027BD8((uint64_t)&v48, &qword_10022F490);
      uint64_t v39 = static os_log_type_t.error.getter();
      sub_10004841C(v39);
      swift_bridgeObjectRelease();
      swift_release();
      swift_errorRelease();
    }
  }
  else
  {
    swift_release();
  }
  sub_100020FDC();
}

void sub_1000DA47C()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  id v24 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v9 = sub_1000208F0(v8);
  __chkstk_darwin(v9);
  sub_100011D4C();
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v10 = type metadata accessor for LogMessage();
  sub_100044798(v10);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3FC0;
  uint64_t v29 = (void *)type metadata accessor for JSContent();
  unint64_t v27 = v0;
  uint64_t v11 = v0;
  id v12 = (id)AMSLogKey();
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v23 = v5;
    uint64_t v14 = v2;
    uint64_t v15 = v7;
    char v16 = v11;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    sub_100042B84();
    swift_getMetatypeMetadata();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000409A0();
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v25[0] = v17;
    v25[1] = v19;
    uint64_t v11 = v16;
    uint64_t v7 = v15;
    uint64_t v2 = v14;
    uint64_t v5 = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000409A0();
    sub_1000208D8();
    sub_10001D6F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    sub_100049788(&v27, (uint64_t)v29);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v25[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v25, &qword_10022F490);
    sub_100020E94();
    sub_10001D6F8();
  }
  sub_10004377C((uint64_t)&v27);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  uint64_t v29 = &type metadata for String;
  unint64_t v27 = v7;
  uint64_t v28 = v5;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_100027BD8((uint64_t)&v27, &qword_10022F490);
  uint64_t v29 = &type metadata for String;
  unint64_t v27 = v24;
  uint64_t v28 = v2;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_100027BD8((uint64_t)&v27, &qword_10022F490);
  uint64_t v21 = static os_log_type_t.default.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  char v22 = v11[OBJC_IVAR____TtC14amsengagementd9JSContent_config + 1];
  type metadata accessor for ContentManager();
  *(unsigned char *)(sub_100030788() + 16) = v22;
  sub_10009B570();
  swift_release();
  sub_100020FDC();
}

void sub_1000DA868()
{
}

id sub_1000DA8A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSContent();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000DA92C(void *a1)
{
  id v1 = [a1 toDictionary];
  if (!v1) {
    return 0;
  }
  objc_super v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t type metadata accessor for JSContent.Request(uint64_t a1)
{
  return sub_1000514B4(a1, qword_1002300B0);
}

uint64_t sub_1000DA9B8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1000456E0();
  sub_100043FB0();
  v3();
  return a1;
}

unint64_t sub_1000DAA10()
{
  unint64_t result = qword_10022FFA8;
  if (!qword_10022FFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022FFA8);
  }
  return result;
}

uint64_t type metadata accessor for JSContent.CacheRequest(uint64_t a1)
{
  return sub_1000514B4(a1, qword_100230018);
}

uint64_t sub_1000DAA7C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1000456E0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unint64_t sub_1000DAAE0()
{
  unint64_t result = qword_10022FFB8;
  if (!qword_10022FFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022FFB8);
  }
  return result;
}

uint64_t sub_1000DAB30()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000DAB38(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000DAB70(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000DABBC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000DABF8(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000DAC4C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

void type metadata accessor for JSContent.BatchOptions()
{
}

unsigned char *sub_1000DACAC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000DAD78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for JSContent.CacheRequest.CacheRequestError()
{
}

uint64_t *sub_1000DADAC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for URL();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = (int *)type metadata accessor for JSContent.Request(0);
    *(void *)&v10[v14[5]] = *(void *)&v11[v14[5]];
    v10[v14[6]] = v11[v14[6]];
    uint64_t v15 = v14[7];
    char v16 = &v10[v15];
    uint64_t v17 = &v11[v15];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)char v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = *(int *)(a3 + 28);
    char v20 = (char *)v4 + v19;
    uint64_t v21 = (char *)a2 + v19;
    long long v20[2] = v21[2];
    *(_WORD *)char v20 = *(_WORD *)v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000DAF14(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for JSContent.Request(0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1000DAFBC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = (int *)type metadata accessor for JSContent.Request(0);
  *(void *)&v9[v13[5]] = *(void *)&v10[v13[5]];
  v9[v13[6]] = v10[v13[6]];
  uint64_t v14 = v13[7];
  uint64_t v15 = &v9[v14];
  char v16 = &v10[v14];
  uint64_t v17 = *((void *)v16 + 1);
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = v17;
  uint64_t v18 = *(int *)(a3 + 28);
  uint64_t v19 = (char *)a1 + v18;
  char v20 = (char *)a2 + v18;
  void v19[2] = v20[2];
  *(_WORD *)uint64_t v19 = *(_WORD *)v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1000DB0D4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for JSContent.Request(0);
  *(void *)&v7[v10[5]] = *(void *)&v8[v10[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v10[6]] = v8[v10[6]];
  uint64_t v11 = v10[7];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (char *)a1 + v14;
  char v16 = (char *)a2 + v14;
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  v15[2] = v16[2];
  return a1;
}

_OWORD *sub_1000DB224(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for JSContent.Request(0);
  *(void *)&v8[v11[5]] = *(void *)&v9[v11[5]];
  v8[v11[6]] = v9[v11[6]];
  *(_OWORD *)&v8[v11[7]] = *(_OWORD *)&v9[v11[7]];
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(_WORD *)uint64_t v13 = *(_WORD *)v14;
  uint64_t v13[2] = v14[2];
  return a1;
}

void *sub_1000DB2F8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for JSContent.Request(0);
  *(void *)&v9[v12[5]] = *(void *)&v10[v12[5]];
  swift_bridgeObjectRelease();
  v9[v12[6]] = v10[v12[6]];
  uint64_t v13 = v12[7];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  uint64_t v17 = *(void *)v15;
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = v17;
  *((void *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(int *)(a3 + 28);
  uint64_t v19 = (char *)a1 + v18;
  char v20 = (char *)a2 + v18;
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  void v19[2] = v20[2];
  return a1;
}

uint64_t sub_1000DB408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000DB41C);
}

uint64_t sub_1000DB41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100043A18(*(void *)(a1 + 8));
  }
  uint64_t v7 = type metadata accessor for JSContent.Request(0);
  uint64_t v8 = a1 + *(int *)(a3 + 24);
  return sub_10004FD40(v8, a2, v7);
}

uint64_t sub_1000DB498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000DB4AC);
}

uint64_t sub_1000DB4AC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for JSContent.Request(0);
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return sub_100021AC0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1000DB52C()
{
  uint64_t result = type metadata accessor for JSContent.Request(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *sub_1000DB5CC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000DB698);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for JSContent.Request.RequestError()
{
}

void *sub_1000DB6CC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v9 = a3[7];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000DB7C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000DB844(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000DB8E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000DB9AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1000DBA3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000DBAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000DBAF8);
}

uint64_t sub_1000DBAF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for URL();
  sub_100044124();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_100043A18(*(void *)(a1 + *(int *)(a3 + 20)));
  }
  return sub_10004FD40(a1, a2, v6);
}

uint64_t sub_1000DBB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000DBB8C);
}

void sub_1000DBB8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for URL();
  sub_100044124();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    sub_100021AC0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_1000DBC14()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1000DBCC4()
{
  unint64_t result = qword_1002300F0;
  if (!qword_1002300F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002300F0);
  }
  return result;
}

unint64_t sub_1000DBD14()
{
  unint64_t result = qword_1002300F8;
  if (!qword_1002300F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002300F8);
  }
  return result;
}

uint64_t sub_1000DBD60(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t sub_1000DBD74(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v3 = -1;
    return (v3 + 1);
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        goto LABEL_5;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
      {
LABEL_5:
        int v3 = (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776962;
        return (v3 + 1);
      }
    }
  }
  unsigned int v4 = *(unsigned __int8 *)a1;
  BOOL v5 = v4 >= 2;
  int v3 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t sub_1000DBDEC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)unint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)unint64_t result = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

void type metadata accessor for JSContent.Options()
{
}

uint64_t sub_1000DBE84(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_1000DBF0C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000DBFD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void type metadata accessor for JSContent.Request.Method()
{
}

unint64_t sub_1000DC010()
{
  unint64_t result = qword_100230100;
  if (!qword_100230100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230100);
  }
  return result;
}

double sub_1000DC05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, long long a15)
{
  return sub_100032918((uint64_t)&a10, v15, &a15);
}

uint64_t sub_1000DC078(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for JSPromise();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = a1;
  swift_retain();
  JSPromise.init(in:executor:)();
  if (!v3)
  {
    a3 = JSPromise.value.getter();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return a3;
}

uint64_t sub_1000DC194(void *a1)
{
  return sub_1000DC078(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void *sub_1000DC1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v26 = v2;
  uint64_t v5 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v6 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v7 = *v5;
    if (*(void *)(a2 + 16))
    {
      uint64_t v8 = *(v5 - 1);
      swift_bridgeObjectRetain_n();
      unint64_t v9 = sub_100042ADC(v8, v7);
      if (v10)
      {
        sub_100043520(*(void *)(a2 + 56) + 32 * v9, (uint64_t)&v21);
      }
      else
      {
        long long v21 = 0u;
        long long v22 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v22 + 1))
      {
        sub_100043510(&v21, &v18);
        *(void *)&long long v23 = v8;
        *((void *)&v23 + 1) = v7;
        sub_100043510(&v18, &v24);
        goto LABEL_11;
      }
    }
    else
    {
      long long v21 = 0u;
      long long v22 = 0u;
      swift_bridgeObjectRetain();
    }
    sub_10002CBB4((uint64_t)&v21, &qword_10022F490);
    long long v23 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    swift_bridgeObjectRelease();
LABEL_11:
    if (*((void *)&v23 + 1))
    {
      long long v18 = v23;
      long long v19 = v24;
      long long v20 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100070F38();
        uint64_t v6 = v15;
      }
      unint64_t v11 = v6[2];
      if (v11 >= v6[3] >> 1)
      {
        sub_100070F38();
        uint64_t v6 = v16;
      }
      v6[2] = v11 + 1;
      uint64_t v12 = &v6[6 * v11];
      long long v13 = v18;
      long long v14 = v20;
      v12[3] = v19;
      v12[4] = v14;
      v12[2] = v13;
    }
    else
    {
      sub_10002CBB4((uint64_t)&v23, &qword_100230178);
    }
    v5 += 2;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1000DC3BC(uint64_t a1, void *a2)
{
  sub_10005370C(a1, v25);
  uint64_t v3 = v25[0];
  int64_t v4 = v25[3];
  unint64_t v5 = v25[4];
  uint64_t v17 = v25[1];
  int64_t v18 = (unint64_t)(v25[2] + 64) >> 6;
  uint64_t v26 = v24;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v8 = v7 | (v4 << 6);
  while (1)
  {
    long long v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    sub_100043520(*(void *)(v3 + 56) + 32 * v8, (uint64_t)v26);
    *(void *)&long long v23 = v14;
    *((void *)&v23 + 1) = v15;
    long long v21 = v23;
    v22[0] = v24[0];
    v22[1] = v24[1];
    long long v16 = v23;
    sub_100043520((uint64_t)v22, (uint64_t)v19);
    sub_100043510(v19, v20);
    swift_bridgeObjectRetain();
    sub_1000DD4D8(v16, *((uint64_t *)&v16 + 1), (uint64_t)v20);
    sub_10002CBB4((uint64_t)v20, &qword_10022F490);
    uint64_t result = sub_10002CBB4((uint64_t)&v21, &qword_10022E208);
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v9 >= v18) {
      goto LABEL_21;
    }
    unint64_t v10 = *(void *)(v17 + 8 * v9);
    int64_t v11 = v4 + 1;
    if (!v10)
    {
      int64_t v11 = v4 + 2;
      if (v4 + 2 >= v18) {
        goto LABEL_21;
      }
      unint64_t v10 = *(void *)(v17 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v4 + 3;
        if (v4 + 3 >= v18) {
          goto LABEL_21;
        }
        unint64_t v10 = *(void *)(v17 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v4 + 4;
          if (v4 + 4 >= v18) {
            goto LABEL_21;
          }
          unint64_t v10 = *(void *)(v17 + 8 * v11);
          if (!v10)
          {
            int64_t v11 = v4 + 5;
            if (v4 + 5 >= v18) {
              goto LABEL_21;
            }
            unint64_t v10 = *(void *)(v17 + 8 * v11);
            if (!v10)
            {
              int64_t v12 = v4 + 6;
              while (v12 < v18)
              {
                unint64_t v10 = *(void *)(v17 + 8 * v12++);
                if (v10)
                {
                  int64_t v11 = v12 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:

              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    int64_t v4 = v11;
  }
  __break(1u);
  return result;
}

void sub_1000DC5E0()
{
  sub_1000209F4();
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_100020658();
  sub_10004CFE8();
  sub_10004791C(v1);
  swift_release();
  sub_100020FDC();
}

uint64_t sub_1000DC8F4()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_100020658();
  sub_10004CFE8();
  sub_10004F03C(v1);
  sub_100020FDC();
  return swift_release();
}

void sub_1000DCBE4()
{
}

id sub_1000DCC24()
{
  return sub_1000DD8EC(type metadata accessor for JSDatabase);
}

double sub_1000DCC3C@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC14amsengagementd20JSUbiquitousDatabase_keyValueStore);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 objectForKey:v4];

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t sub_1000DCCF0(uint64_t a1)
{
  uint64_t v2 = (void *)Dictionary.init(dictionaryLiteral:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (uint64_t)v2;
  }
  swift_bridgeObjectRetain();
  for (unint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
  {
    uint64_t v5 = *(i - 1);
    uint64_t v6 = *i;
    swift_bridgeObjectRetain();
    sub_1000DCC3C(&v30);
    if (!v31)
    {
      sub_10002CBB4((uint64_t)&v30, &qword_10022F490);
      swift_bridgeObjectRetain();
      unint64_t v18 = sub_100042ADC(v5, v6);
      char v20 = v19;
      swift_bridgeObjectRelease();
      if (v20)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        Swift::Int v22 = v2[3];
        sub_100043478(&qword_10022E5B0);
        _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v22);
        swift_bridgeObjectRelease();
        sub_100043510((_OWORD *)(v2[7] + 32 * v18), v29);
        _NativeDictionary._delete(at:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        memset(v29, 0, sizeof(v29));
      }
      sub_10002CBB4((uint64_t)v29, &qword_10022F490);
      goto LABEL_17;
    }
    sub_100043510(&v30, v29);
    char v7 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = v2;
    unint64_t v8 = sub_100042ADC(v5, v6);
    uint64_t v10 = v2[2];
    BOOL v11 = (v9 & 1) == 0;
    Swift::Int v12 = v10 + v11;
    if (__OFADD__(v10, v11)) {
      break;
    }
    unint64_t v13 = v8;
    char v14 = v9;
    sub_100043478(&qword_10022E5B0);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v7, v12))
    {
      unint64_t v15 = sub_100042ADC(v5, v6);
      if ((v14 & 1) != (v16 & 1)) {
        goto LABEL_22;
      }
      unint64_t v13 = v15;
    }
    uint64_t v2 = v28;
    if (v14)
    {
      uint64_t v17 = (_OWORD *)(v28[7] + 32 * v13);
      sub_10004377C((uint64_t)v17);
      sub_100043510(v29, v17);
    }
    else
    {
      v28[(v13 >> 6) + 8] |= 1 << v13;
      long long v23 = (uint64_t *)(v28[6] + 16 * v13);
      uint64_t *v23 = v5;
      v23[1] = v6;
      sub_100043510(v29, (_OWORD *)(v28[7] + 32 * v13));
      uint64_t v24 = v28[2];
      BOOL v25 = __OFADD__(v24, 1);
      uint64_t v26 = v24 + 1;
      if (v25) {
        goto LABEL_21;
      }
      void v28[2] = v26;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
LABEL_17:
    swift_bridgeObjectRelease();
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v2;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Class sub_1000DCFEC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v7 = a1;
  a4(v6);

  swift_bridgeObjectRelease();
  v8.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  return v8.super.isa;
}

uint64_t sub_1000DD094(uint64_t a1, uint64_t a2)
{
  id v5 = [*(id *)(v2 + OBJC_IVAR____TtC14amsengagementd20JSUbiquitousDatabase_keyValueStore) dictionaryRepresentation];
  uint64_t v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10004D510(0, &qword_100230168);
  sub_100043478(&qword_10022F0D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1001C3110;
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = sub_100049180();
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  id v8 = (id)NSPredicate.init(format:_:)();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_1000DD1FC(v9, v8);
  uint64_t v11 = v10;
  swift_bridgeObjectRetain();
  Swift::Int v12 = sub_1000DC1B0(v11, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1000DD430((uint64_t)v12);

  return v13;
}

void sub_1000DD1FC(uint64_t a1, void *a2)
{
  sub_10005370C(a1, v24);
  uint64_t v3 = v24[0];
  int64_t v4 = v24[3];
  unint64_t v5 = v24[4];
  uint64_t v22 = v24[1];
  int64_t v23 = (unint64_t)(v24[2] + 64) >> 6;
  uint64_t v6 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v8 = v7 | (v4 << 6);
      goto LABEL_20;
    }
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v9 >= v23) {
      goto LABEL_27;
    }
    unint64_t v10 = *(void *)(v22 + 8 * v9);
    int64_t v11 = v4 + 1;
    if (!v10)
    {
      int64_t v11 = v4 + 2;
      if (v4 + 2 >= v23) {
        goto LABEL_27;
      }
      unint64_t v10 = *(void *)(v22 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v4 + 3;
        if (v4 + 3 >= v23) {
          goto LABEL_27;
        }
        unint64_t v10 = *(void *)(v22 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v4 + 4;
          if (v4 + 4 >= v23) {
            goto LABEL_27;
          }
          unint64_t v10 = *(void *)(v22 + 8 * v11);
          if (!v10)
          {
            int64_t v11 = v4 + 5;
            if (v4 + 5 >= v23) {
              goto LABEL_27;
            }
            unint64_t v10 = *(void *)(v22 + 8 * v11);
            if (!v10)
            {
              int64_t v12 = v4 + 6;
              while (v12 < v23)
              {
                unint64_t v10 = *(void *)(v22 + 8 * v12++);
                if (v10)
                {
                  int64_t v11 = v12 - 1;
                  goto LABEL_19;
                }
              }
LABEL_27:

              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    int64_t v4 = v11;
LABEL_20:
    uint64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    swift_bridgeObjectRetain();
    NSString v16 = String._bridgeToObjectiveC()();
    unsigned int v17 = [a2 evaluateWithObject:v16];

    if (v17)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      BOOL v25 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100027304(0, v6[2] + 1, 1);
        uint64_t v6 = v25;
      }
      unint64_t v20 = v6[2];
      unint64_t v19 = v6[3];
      if (v20 >= v19 >> 1)
      {
        sub_100027304(v19 > 1, v20 + 1, 1);
        uint64_t v6 = v25;
      }
      v6[2] = v20 + 1;
      long long v21 = &v6[2 * v20];
      v21[4] = v15;
      v21[5] = v14;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  __break(1u);
}

uint64_t sub_1000DD430(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100043478((uint64_t *)&unk_100234670);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v6 = v3;
  sub_1000DD958(a1, 1, (uint64_t *)&v6);
  uint64_t v4 = (uint64_t)v6;
  if (v1) {
    swift_release();
  }
  return v4;
}

void sub_1000DD4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 24);
  sub_10004FD68(a3, (uint64_t)v20, &qword_10022F490);
  if (!v5)
  {
    sub_10002CBB4((uint64_t)v20, &qword_10022F490);
    goto LABEL_6;
  }
  sub_100053404((uint64_t)v20, (uint64_t)v18);
  if (v19)
  {
    sub_10004D510(0, qword_10022DE28);
    if (swift_dynamicCast())
    {

LABEL_6:
      uint64_t v6 = *(void **)(v3 + OBJC_IVAR____TtC14amsengagementd20JSUbiquitousDatabase_keyValueStore);
      NSString v7 = String._bridgeToObjectiveC()();
      [v6 removeObjectForKey:v7];
      goto LABEL_12;
    }
  }
  else
  {
    sub_10002CBB4((uint64_t)v18, &qword_10022F490);
  }
  unint64_t v8 = *(void **)(v3 + OBJC_IVAR____TtC14amsengagementd20JSUbiquitousDatabase_keyValueStore);
  sub_10004FD68(a3, (uint64_t)v18, &qword_10022F490);
  uint64_t v9 = v19;
  if (v19)
  {
    sub_100049788(v18, v19);
    sub_1000448FC();
    uint64_t v11 = v10;
    __chkstk_darwin(v12);
    sub_100020EAC();
    uint64_t v15 = v14 - v13;
    (*(void (**)(uint64_t))(v11 + 16))(v14 - v13);
    uint64_t v16 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v9);
    sub_10004377C((uint64_t)v18);
  }
  else
  {
    uint64_t v16 = 0;
  }
  NSString v7 = String._bridgeToObjectiveC()();
  [v8 setObject:v16 forKey:v7];
  swift_unknownObjectRelease();
LABEL_12:
}

uint64_t sub_1000DD70C(uint64_t a1)
{
  return sub_1000DC3BC(a1, v1);
}

uint64_t sub_1000DD768(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = a1;
  uint64_t v7 = sub_10004C838();
  a4(v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000DD7E8(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = swift_bridgeObjectRetain() + 40;
    do
    {
      sub_1000476EC();
      sub_1000DD4D8(v1, v2, (uint64_t)v5);
      sub_10002CBB4((uint64_t)v5, &qword_10022F490);
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1000DD894()
{
}

id sub_1000DD8D4()
{
  return sub_1000DD8EC(type metadata accessor for JSUbiquitousDatabase);
}

id sub_1000DD8EC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for JSUbiquitousDatabase()
{
  return self;
}

uint64_t sub_1000DD958(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v28 = &v27;
  uint64_t v6 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_10004FD68(v6, (uint64_t)v26, &qword_10022D848);
    uint64_t v7 = v26[0];
    uint64_t v8 = v26[1];
    sub_100043510(v28, v25);
    uint64_t v9 = *a3;
    unint64_t v11 = sub_100042ADC(v7, v8);
    uint64_t v12 = *(void *)(v9 + 16);
    BOOL v13 = (v10 & 1) == 0;
    if (__OFADD__(v12, v13)) {
      break;
    }
    char v14 = v10;
    if (*(void *)(v9 + 24) >= v12 + v13)
    {
      if (a2)
      {
        if (v10) {
          goto LABEL_10;
        }
      }
      else
      {
        sub_100043478(&qword_10022E5B0);
        _NativeDictionary.copy()();
        if (v14) {
          goto LABEL_10;
        }
      }
    }
    else
    {
      sub_1001A5C3C();
      unint64_t v15 = sub_100042ADC(v7, v8);
      if ((v14 & 1) != (v16 & 1)) {
        goto LABEL_20;
      }
      unint64_t v11 = v15;
      if (v14)
      {
LABEL_10:
        sub_100043520((uint64_t)v25, (uint64_t)v24);
        sub_10004377C((uint64_t)v25);
        swift_bridgeObjectRelease();
        unsigned int v17 = (_OWORD *)(*(void *)(*a3 + 56) + 32 * v11);
        sub_10004377C((uint64_t)v17);
        sub_100043510(v24, v17);
        goto LABEL_14;
      }
    }
    unint64_t v18 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v19 = (uint64_t *)(v18[6] + 16 * v11);
    *uint64_t v19 = v7;
    v19[1] = v8;
    sub_100043510(v25, (_OWORD *)(v18[7] + 32 * v11));
    uint64_t v20 = v18[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_19;
    }
    v18[2] = v22;
LABEL_14:
    v6 += 48;
    a2 = 1;
    if (!--v3) {
      return swift_bridgeObjectRelease_n();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1000DDB50()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v1 - 8);
  type metadata accessor for AppDatabase();
  uint64_t v2 = v0 + OBJC_IVAR____TtC14amsengagementd15JSDatabaseStore_config;
  unsigned __int8 v3 = *(unsigned char *)(v0 + OBJC_IVAR____TtC14amsengagementd15JSDatabaseStore_config + 1);
  sub_1000124C0(v3);
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = 0x746C75736572;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v5 = *(void **)(v2 + 8);
  uint64_t v7 = *(void *)(v2 + 48);
  uint64_t v6 = *(void *)(v2 + 56);
  char v8 = *(unsigned char *)(v2 + 64);
  uint64_t v9 = *(void *)(v2 + 72);
  v16[0] = *(unsigned char *)v2;
  v16[1] = v3;
  long long v15 = *(_OWORD *)(v2 + 32);
  long long v18 = *(_OWORD *)(v2 + 16);
  long long v19 = v15;
  unsigned int v17 = v5;
  uint64_t v20 = v7;
  uint64_t v21 = v6;
  char v22 = v8;
  uint64_t v23 = v9;
  char v10 = (objc_class *)type metadata accessor for JSScheduleDatabase();
  objc_allocWithZone(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v11 = v5;
  id v12 = sub_1000F786C((uint64_t)v16);
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 48) = v12;
  uint64_t v13 = Dictionary.init(dictionaryLiteral:)();
  swift_release();
  return v13;
}

void sub_1000DDFF8()
{
}

id sub_1000DE038()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSDatabaseStore();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1000DE0F0()
{
  return [self deviceIsBundle];
}

uint64_t sub_1000DE134()
{
  return sub_1000179DC((SEL *)&selRef_operatingSystem);
}

id sub_1000DE140()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSDevice();
  return objc_msgSendSuper2(&v2, "dealloc");
}

ValueMetadata *type metadata accessor for JSEnginePerformerProvider()
{
  return &type metadata for JSEnginePerformerProvider;
}

uint64_t sub_1000DE184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a5)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  id v8 = (id)AMSError();

  id v9 = objc_allocWithZone((Class)type metadata accessor for JSError());
  return sub_100027FB8(v8);
}

id sub_1000DE26C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  return v7;
}

void sub_1000DE360()
{
}

void sub_1000DE3CC()
{
}

id sub_1000DE444()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSError();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000DE478(uint64_t a1)
{
  uint64_t v2 = sub_100043478(&qword_100230200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000DE4D8(uint64_t a1)
{
  if (!*(void *)(a1 + 16) || (unint64_t v2 = sub_100042ADC(0xD000000000000013, 0x80000001001D0CA0), (v3 & 1) == 0))
  {
    long long v6 = 0u;
    long long v7 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_100043520(*(void *)(a1 + 56) + 32 * v2, (uint64_t)&v6);
  swift_bridgeObjectRelease();
  if (!*((void *)&v7 + 1))
  {
LABEL_9:
    sub_1000435D4((uint64_t)&v6, &qword_10022F490);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000DE5AC()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  static DispatchQoS.unspecified.getter();
  v7[1] = _swiftEmptyArrayStorage;
  sub_100050588((unint64_t *)&qword_10022F470, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100043478((uint64_t *)&unk_100231D60);
  sub_10002B720((unint64_t *)&qword_10022F480, (uint64_t *)&unk_100231D60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  qword_1002440C0 = result;
  return result;
}

uint64_t sub_1000DE7FC()
{
  uint64_t v1 = OBJC_IVAR____TtC14amsengagementd11JSExtension____lazy_storage___extensionLoader;
  if (*(void *)(v0 + OBJC_IVAR____TtC14amsengagementd11JSExtension____lazy_storage___extensionLoader))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC14amsengagementd11JSExtension____lazy_storage___extensionLoader);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for ExtensionLoader();
    swift_allocObject();
    uint64_t v2 = sub_1000BF1AC();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_1000DE878()
{
  off_100230210 = &_swiftEmptyArrayStorage;
}

uint64_t sub_1000DE88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  sub_1000DE4D8(a4);
  sub_10004D510(0, (unint64_t *)&qword_10022FE70);
  uint64_t v5 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v6 = JSContext.propagateErrorsToExceptions(_:)();

  return v6;
}

uint64_t sub_1000DE954(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  long long v19 = a1;
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v12 = static RunLoopWorkerThread.current.getter();
  if (v12)
  {
    uint64_t v13 = v12;
    sub_10004D510(0, (unint64_t *)&qword_10022FE70);
    uint64_t v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_100043520(a5, (uint64_t)v18);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v14;
    *(void *)(v15 + 24) = a3;
    *(void *)(v15 + 32) = a4;
    sub_100043510(v18, (_OWORD *)(v15 + 40));
    *(void *)(v15 + 72) = a6;
    *(unsigned char *)(v15 + 80) = a7 & 1;
    *(void *)(v15 + 88) = v13;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v16 = sub_100010358(v19, (uint64_t)sub_1000E181C, v15);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v16 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000002CLL, 0x80000001001D0CC0, 0, 0);
    swift_willThrow();
  }
  return v16;
}

uint64_t sub_1000DEB00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v30 = a3;
  uint64_t v29 = a2;
  uint64_t v14 = type metadata accessor for JSCallable();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  unsigned int v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    v27[0] = a10;
    id v28 = Strong;
    v27[1] = sub_1000E05C4(a5, a6, a7, a8, a9 & 1);
    long long v19 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v19((char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v14);
    unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v29 = swift_allocObject();
    uint64_t v21 = *(void (**)(unint64_t, char *, uint64_t))(v15 + 32);
    v21(v29 + v20, v17, v14);
    v19(v17, v30, v14);
    uint64_t v22 = swift_allocObject();
    v21(v22 + v20, v17, v14);
    void v31[3] = type metadata accessor for RunLoopWorkerThread();
    v31[4] = &protocol witness table for RunLoopWorkerThread;
    v31[0] = v27[0];
    swift_retain();
    Promise.then(perform:orCatchError:on:)();

    swift_release();
    swift_release();
    swift_release();
    return sub_10004377C((uint64_t)v31);
  }
  else
  {
    sub_100043478(&qword_10022D808);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1001C3110;
    type metadata accessor for JSError();
    BOOL v25 = (void *)sub_1000DE184(0, 0xD000000000000018, 0x80000001001D0CF0, 0x6E617620666C6553, 0xED00006465687369);
    uint64_t v26 = sub_100028288();

    *(void *)(v24 + 56) = sub_100043478(&qword_10022D7B0);
    *(void *)(v24 + 32) = v26;
    sub_10001147C(v24);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000DEE1C(uint64_t a1)
{
  sub_100043478(&qword_10022D808);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1001C3110;
  sub_100043520(a1, v2 + 32);
  sub_10001147C(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000DEE98(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v3 = type metadata accessor for JSExtension();
  uint64_t v27 = (void *)sub_100043478(&qword_100230258);
  v26[0] = v3;
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v9._uint64_t countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    sub_100049788(v26, (uint64_t)v27);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v24[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v24, &qword_10022F490);
    v11._uint64_t countAndFlagsBits = 5972026;
    v11._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t MetatypeMetadata = &type metadata for String;
    v24[0] = v6;
    v24[1] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v24, &qword_10022F490);
    v12._uint64_t countAndFlagsBits = 93;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._uint64_t countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(v26, (uint64_t)v27);
    uint64_t v14 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v24[0] = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v24, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v26);
  LogMessage.init(stringLiteral:)();
  v26[0] = a1;
  swift_errorRetain();
  sub_100043478((uint64_t *)&unk_100233150);
  uint64_t v16 = String.init<A>(describing:)();
  uint64_t v27 = &type metadata for String;
  v26[0] = v16;
  v26[1] = v17;
  static LogMessage.safe(_:)();
  sub_1000435D4((uint64_t)v26, &qword_10022F490);
  uint64_t v18 = static os_log_type_t.error.getter();
  sub_10004841C(v18);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1001C3110;
  id v20 = objc_allocWithZone((Class)type metadata accessor for JSError());
  swift_errorRetain();
  id v21 = sub_100027FB8(a1);
  uint64_t v22 = sub_100028288();

  *(void *)(v19 + 56) = sub_100043478(&qword_10022D7B0);
  *(void *)(v19 + 32) = v22;
  sub_10001147C(v19);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000DF384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  sub_10002D300();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_1000DE4D8(v7);
  sub_1000E05C4(a1, a2, a3, v8, v9 & 1);
  sub_10018FFE8(&v13);
  swift_release();
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = 0x746C75736572;
  *(void *)(inited + 40) = 0xE600000000000000;
  sub_100043520((uint64_t)&v13, inited + 48);
  uint64_t v11 = Dictionary.init(dictionaryLiteral:)();
  sub_1000E1168((uint64_t)&v13);
  return v11;
}

uint64_t sub_1000DF940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v34 = a1;
  uint64_t v35 = a4;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = type metadata accessor for Date();
  sub_1000448FC();
  uint64_t v12 = v11;
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v31 - v18;
  Date.init()();
  id v20 = (id)AMSLogKey();
  if (v20)
  {
    id v21 = v20;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v23;
    uint64_t v33 = v22;
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v33 = 0;
  }
  sub_100043520(a5, (uint64_t)v37);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v19, v10);
  unint64_t v24 = (*(unsigned __int8 *)(v12 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v34;
  *(void *)(v25 + 16) = v6;
  *(void *)(v25 + 24) = v26;
  *(void *)(v25 + 32) = a2;
  sub_100043510(v37, (_OWORD *)(v25 + 40));
  *(void *)(v25 + 72) = a3;
  *(void *)(v25 + 80) = v35;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v25 + v24, v17, v10);
  uint64_t v27 = (uint64_t *)(v25 + ((v14 + v24 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v28 = v32;
  *uint64_t v27 = v33;
  v27[1] = v28;
  id v29 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000E0288((uint64_t)sub_1000E12B0, v25);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v19, v10);
}

void (*sub_1000DFB50(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9))(void, void)
{
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v30 = a9;
  uint64_t v31 = a8;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v29 = sub_1000E05C4(a2, a3, a4, 0x403E000000000000, 0);
  sub_100043520(a4, (uint64_t)v32);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a7, v14);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v19 = (v16 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a2;
  *(void *)(v20 + 24) = a3;
  uint64_t v21 = v28;
  *(void *)(v20 + 32) = v27;
  *(void *)(v20 + 40) = v21;
  sub_100043510(v32, (_OWORD *)(v20 + 48));
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v20 + v18, v17, v14);
  *(void *)(v20 + v19) = a1;
  uint64_t v22 = (void *)(v20 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v23 = v30;
  *uint64_t v22 = v31;
  v22[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v24 = a1;
  uint64_t v25 = v29;
  sub_1000AFA54();
  swift_release();
  return v25;
}

void sub_1000DFD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C5FB0;
  *(void *)(inited + 32) = 0x6E696769726FLL;
  *(void *)(inited + 40) = 0xE600000000000000;
  strcpy((char *)(inited + 48), "amsengagementd");
  *(unsigned char *)(inited + 63) = -18;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x707954746E657665;
  *(void *)(inited + 88) = 0xE900000000000065;
  *(void *)(inited + 96) = 0x657645636E797341;
  *(void *)(inited + 104) = 0xEA0000000000746ELL;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0x64496E6967756C70;
  *(void *)(inited + 136) = 0xE800000000000000;
  *(void *)(inited + 144) = a3;
  *(void *)(inited + 152) = a4;
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 176) = 0x4974736575716572;
  *(void *)(inited + 184) = 0xE900000000000064;
  *(void *)(inited + 192) = a5;
  *(void *)(inited + 200) = a6;
  *(void *)(inited + 216) = &type metadata for String;
  *(void *)(inited + 224) = 0x4474736575716572;
  *(void *)(inited + 232) = 0xEB00000000617461;
  sub_100043520(a7, inited + 240);
  *(void *)(inited + 272) = 0x64657461657263;
  *(void *)(inited + 280) = 0xE700000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Date.timeIntervalSince1970.getter();
  *(void *)(inited + 312) = &type metadata for Double;
  *(void *)(inited + 288) = v18;
  uint64_t v38 = Dictionary.init(dictionaryLiteral:)();
  sub_10004FDC8(a1, (uint64_t)&v34, &qword_10022F118);
  if (*((void *)&v35 + 1))
  {
    long long v36 = v34;
    long long v37 = v35;
    sub_100043520((uint64_t)&v36, (uint64_t)&v34);
    sub_10003E698((uint64_t)&v34, 0x65736E6F70736572, 0xE800000000000000);
    sub_1000E1168((uint64_t)&v36);
  }
  else
  {
    sub_1000435D4((uint64_t)&v34, &qword_10022F118);
  }
  if (a2)
  {
    id v19 = objc_allocWithZone((Class)type metadata accessor for JSError());
    swift_errorRetain();
    swift_errorRetain();
    id v20 = sub_100027FB8(a2);
    uint64_t v21 = sub_100028288();

    *((void *)&v37 + 1) = sub_100043478(&qword_10022D7B0);
    *(void *)&long long v36 = v21;
    sub_10003E698((uint64_t)&v36, 0x726F727265, 0xE500000000000000);
    swift_errorRelease();
  }
  id v22 = [objc_allocWithZone((Class)AMSEngagementEnqueueRequest) init];
  sub_100043478(&qword_10022D798);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1001C3110;
  sub_1000119BC(v38);
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 32) = v25;
  sub_1000BD07C(v23, v22);
  sub_100043478(&qword_100231DE0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1001C4B80;
  uint64_t v27 = v26;
  sub_10004D510(0, &qword_10022EC18);
  *(void *)(v27 + 32) = sub_1000BC5A4();
  *(void *)&long long v36 = v27;
  specialized Array._endMutation()();
  sub_1000BD0F4(v36, v22);
  id v28 = [self currentProcess];
  [v22 setClientInfo:v28];

  if (a11) {
    NSString v29 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v29 = 0;
  }
  [v22 setLogKey:v29];

  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v30 = sub_100051DF8();
  id v31 = [objc_allocWithZone((Class)AMSEngagement) initWithBag:v30];

  id v32 = [v31 _enqueue:v22];
}

uint64_t sub_1000E0288(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  sub_1000448FC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100047480();
  uint64_t v11 = type metadata accessor for DispatchQoS();
  sub_1000448FC();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_10002D300();
  if (qword_10022C450 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v2;
  void v15[3] = a1;
  v15[4] = a2;
  aBlock[4] = sub_1000E1364;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  aBlock[3] = &unk_100211900;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v3, v7);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v11);
  return swift_release();
}

void (*sub_1000E05C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5))(void, void)
{
  if ((a5 & 0x101) != 0) {
    double v9 = sub_10003A778(*(unsigned char *)(v5 + OBJC_IVAR____TtC14amsengagementd11JSExtension_config + 64));
  }
  else {
    double v9 = *(double *)&a4;
  }
  sub_100043478(&qword_100230250);
  Promise.__allocating_init()();
  uint64_t v10 = (void (*)(void, void))sub_10000B754(0xD000000000000011, 0x80000001001D0C30, (uint64_t)&unk_100211848, (uint64_t)&unk_100211870, (uint64_t)sub_1000E11CC, (uint64_t)&unk_100211888);
  swift_release();
  uint64_t v11 = qword_10022C5C8;
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  sub_10002A570(0x6F69736E65747865, 0xEF726564616F4C6ELL);
  sub_1000DE7FC();
  uint64_t v12 = (void *)sub_1000BF45C(a1, a2);
  swift_release();
  sub_1000DE7FC();
  sub_1000BFAAC(a3, v12, 0, (uint64_t)sub_1000E1090, v10, v9);

  swift_release();
  swift_release();
  return v10;
}

uint64_t sub_1000E07DC(uint64_t a1, uint64_t a2)
{
  sub_10004FDC8(a1, (uint64_t)&v6, &qword_10022F490);
  if (v7)
  {
    sub_100043510(&v6, v8);
    sub_100043520((uint64_t)v8, (uint64_t)&v6);
    Promise.resolve(_:)();
    sub_1000E1168((uint64_t)&v6);
    sub_10004377C((uint64_t)v8);
  }
  else
  {
    sub_1000435D4((uint64_t)&v6, &qword_10022F490);
    id v3 = objc_allocWithZone((Class)type metadata accessor for JSError());
    swift_errorRetain();
    id v4 = sub_100027FB8(a2);
    Promise.reject(_:)();
  }
  if (qword_10022C5C8 != -1) {
    swift_once();
  }
  return sub_10000A734(0x6F69736E65747865, 0xEF726564616F4C6ELL);
}

uint64_t sub_1000E0900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_10022C458 != -1) {
    swift_once();
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  sub_1000BA3F4();
  uint64_t v6 = *((void *)off_100230210 + 2);
  sub_1000BA528(v6);
  uint64_t v7 = (char *)off_100230210;
  *((void *)off_100230210 + 2) = v6 + 1;
  uint64_t v8 = &v7[16 * v6];
  *((void *)v8 + 4) = sub_1000E13A8;
  *((void *)v8 + 5) = v5;
  swift_endAccess();
  uint64_t result = swift_release();
  if (*((void *)off_100230210 + 2) == 1) {
    return sub_1000E0A18();
  }
  return result;
}

uint64_t sub_1000E0A18()
{
  void (*v10)(uint64_t *__return_ptr, uint64_t);
  uint64_t v11;
  uint64_t v12;

  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  sub_1000448FC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100047480();
  if (qword_10022C450 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1002440C0;
  void *v1 = qword_1002440C0;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v1, enum case for DispatchPredicate.onQueue(_:), v3);
  id v8 = (id)v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v1, v3);
  if (v7)
  {
    if (qword_10022C458 == -1) {
      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_5:
  uint64_t result = swift_beginAccess();
  if (*((void *)off_100230210 + 2))
  {
    uint64_t v10 = (void (*)(uint64_t *__return_ptr, uint64_t))*((void *)off_100230210 + 4);
    uint64_t v11 = swift_retain();
    v10(&v12, v11);
    swift_release();
    *(void *)(swift_allocObject() + 16) = v2;
    sub_1000AFA54();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000E0BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v14[0] - 8);
  __chkstk_darwin(v14[0]);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10022C450 != -1) {
    swift_once();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  aBlock[4] = sub_1000E13E8;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  aBlock[3] = &unk_1002119A0;
  uint64_t v12 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  v14[1] = _swiftEmptyArrayStorage;
  sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void))(v8 + 8))(v10, v14[0]);
  return swift_release();
}

uint64_t sub_1000E0EC8()
{
  if (qword_10022C458 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_1000E0F5C();
  swift_endAccess();
  uint64_t v0 = swift_release();
  return sub_1000E0A18(v0);
}

uint64_t sub_1000E0F5C()
{
  if (*(void *)(*(void *)v0 + 16))
  {
    uint64_t v1 = *(void *)(*(void *)v0 + 32);
    swift_retain();
    sub_1000E14F0(0, 1);
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000E0FB0()
{
}

id sub_1000E0FF0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSExtension();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000E1090(uint64_t a1, uint64_t a2)
{
  return sub_1000E07DC(a1, a2);
}

void sub_1000E1098()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    NSString v0 = String._bridgeToObjectiveC()();
    NSString v1 = String._bridgeToObjectiveC()();
    id v2 = (id)AMSError();

    Promise.invalidate(_:)();
    swift_release();
  }
}

uint64_t sub_1000E1168(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000E1190()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000E11CC()
{
}

uint64_t sub_1000E11EC()
{
  type metadata accessor for Date();
  sub_1000448FC();
  sub_1000462B4();

  swift_bridgeObjectRelease();
  sub_10004377C(v0 + 40);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_1000210B4();
  v4(v3);
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, v2 + 16, v1);
}

void (*sub_1000E12B0())(void, void)
{
  uint64_t v1 = type metadata accessor for Date();
  sub_100044798(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1000DFB50(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v0 + 40, *(void *)(v0 + 72), *(void *)(v0 + 80), v0 + v6, *(void *)(v0 + v7), *(void *)(v0 + v7 + 8));
}

uint64_t sub_1000E132C()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000E1364()
{
  return sub_1000E0900(v0[2], v0[3], v0[4]);
}

uint64_t sub_1000E1370()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000E13A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1000E13DC(uint64_t a1, uint64_t a2)
{
  return sub_1000E0BF4(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1000E13E8()
{
  return sub_1000E0EC8();
}

uint64_t sub_1000E13F0(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v6 = result;
  uint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      uint64_t v11 = v5 + v8;
    }
    else {
      uint64_t v11 = v5;
    }
    sub_1000502C4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
    uint64_t v4 = v12;
  }
  uint64_t v13 = (char *)(v4 + 32 + 16 * v6);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_16;
  }
  uint64_t v14 = *(void *)(v4 + 16);
  if (__OFSUB__(v14, a2)) {
    goto LABEL_22;
  }
  uint64_t result = (uint64_t)sub_10004A0C4((char *)(v4 + 32 + 16 * a2), v14 - a2, v13);
  uint64_t v15 = *(void *)(v4 + 16);
  BOOL v16 = __OFADD__(v15, v8);
  uint64_t v17 = v15 - v7;
  if (!v16)
  {
    *(void *)(v4 + 16) = v17;
LABEL_16:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1000E14F0(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v6 = result;
  uint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v5, v8))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v5 - v7 > *(void *)(v4 + 24) >> 1)
  {
    sub_100070FDC();
    uint64_t v4 = v9;
  }
  uint64_t v10 = (char *)(v4 + 32 + 16 * v6);
  sub_100043478(&qword_10022D840);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_13;
  }
  uint64_t v11 = *(void *)(v4 + 16);
  if (__OFSUB__(v11, a2)) {
    goto LABEL_19;
  }
  uint64_t result = (uint64_t)sub_1000334F0((char *)(v4 + 32 + 16 * a2), v11 - a2, v10);
  uint64_t v12 = *(void *)(v4 + 16);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 - v7;
  if (!v13)
  {
    *(void *)(v4 + 16) = v14;
LABEL_13:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1000E15F8()
{
  type metadata accessor for Date();
  sub_1000448FC();
  sub_1000462B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10004377C(v0 + 48);
  uint64_t v3 = sub_1000210B4();
  v4(v3);

  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, ((v2 + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v1);
}

void sub_1000E16C4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Date();
  sub_100044798(v5);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1000DFD3C(a1, a2, v2[2], v2[3], v2[4], v2[5], (uint64_t)(v2 + 6), (uint64_t)v2 + v10, *(uint64_t *)((char *)v2 + v11), *(uint64_t *)((char *)v2 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t *)((char *)v2 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1000E176C(void *a1)
{
  return sub_1000DE954(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56));
}

uint64_t sub_1000E1794()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E17CC()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_10004377C(v0 + 40);
  swift_release();
  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1000E181C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000DEB00(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), v3 + 40, *(void *)(v3 + 72), *(unsigned char *)(v3 + 80), *(void *)(v3 + 88));
}

uint64_t sub_1000E1860()
{
  uint64_t v0 = type metadata accessor for JSCallable();
  sub_100044E90(v0);
  uint64_t v1 = sub_10004DD48();
  return sub_1000DEE1C(v1);
}

uint64_t sub_1000E18A8()
{
  uint64_t v0 = type metadata accessor for JSCallable();
  sub_100044E90(v0);
  uint64_t v1 = sub_10004DD48();
  return sub_1000DEE98(v1);
}

uint64_t destroy for JSExtension.Response(uint64_t a1)
{
  return sub_10004377C(a1);
}

uint64_t initializeWithCopy for JSExtension.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for JSExtension.Response(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

_OWORD *assignWithTake for JSExtension.Response(_OWORD *a1, _OWORD *a2)
{
  sub_10004377C((uint64_t)a1);
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return a1;
}

ValueMetadata *type metadata accessor for JSExtension.Response()
{
  return &type metadata for JSExtension.Response;
}

uint64_t sub_1000E19E4()
{
  sub_10004D510(0, (unint64_t *)&qword_10022FE70);
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_1000E1A68(void *a1, void *a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v8 = static RunLoopWorkerThread.current.getter();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v27 = a1;
    if (qword_10022C490 != -1) {
      swift_once();
    }
    uint64_t v32 = v3;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    uint64_t v31 = type metadata accessor for JSFamily();
    v30[0] = a2;
    a2;
    id v10 = (id)AMSLogKey();
    if (v10)
    {
      unint64_t v11 = v10;
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v15._uint64_t countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      sub_100049788(v30, v31);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v28[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v28);
      v17._uint64_t countAndFlagsBits = 5972026;
      v17._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      uint64_t MetatypeMetadata = &type metadata for String;
      v28[0] = v12;
      v28[1] = v14;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v28);
      v18._uint64_t countAndFlagsBits = 93;
      v18._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v20._uint64_t countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      sub_100049788(v30, v31);
      uint64_t v21 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v28[0] = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v28);
      v22._uint64_t countAndFlagsBits = 58;
      v22._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v30);
    LogMessage.init(stringLiteral:)();
    uint64_t v31 = sub_100043478(&qword_10022D7B0);
    v30[0] = a3;
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)v30);
    uint64_t v23 = static os_log_type_t.default.getter();
    sub_10004841C(v23);
    swift_bridgeObjectRelease();
    sub_10004D510(0, (unint64_t *)&qword_10022FE70);
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v25 = (void *)swift_allocObject();
    _OWORD v25[2] = v24;
    void v25[3] = a3;
    v25[4] = v9;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v19 = sub_100010358(v27, (uint64_t)sub_1000E568C, (uint64_t)v25);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v19 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000002CLL, 0x80000001001D0CC0, 0, 0);
    swift_willThrow();
  }
  return v19;
}

void sub_1000E1EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v50 = a2;
  uint64_t v51 = a6;
  uint64_t v53 = a3;
  uint64_t v7 = type metadata accessor for JSCallable();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v52 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v47 - v11;
  uint64_t v13 = sub_100043478(&qword_10022D340);
  __chkstk_darwin(v13 - 8);
  Swift::String v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v16 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v18 = (void *)Strong;
    if (*(void *)(Strong + OBJC_IVAR____TtC14amsengagementd8JSFamily_config + 32))
    {
      swift_bridgeObjectRetain();
      NSString v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v19 = 0;
    }
    id v30 = (id)AMSSetLogKey();

    sub_10004D120(0x746E756F636361, 0xE700000000000000, a5, &v56);
    if (v57)
    {
      type metadata accessor for JSAccount();
      if (swift_dynamicCast())
      {
        uint64_t v48 = v54[0];
        uint64_t v31 = type metadata accessor for TaskPriority();
        int v49 = v15;
        sub_100021AC0((uint64_t)v15, 1, 1, v31);
        uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
        v32(v12, v50, v7);
        v32(v52, v53, v7);
        uint64_t v33 = *(unsigned __int8 *)(v8 + 80);
        uint64_t v34 = (v33 + 56) & ~v33;
        uint64_t v35 = (v9 + v33 + v34) & ~v33;
        long long v36 = (char *)swift_allocObject();
        *((void *)v36 + 2) = 0;
        *((void *)v36 + 3) = 0;
        uint64_t v37 = v48;
        *((void *)v36 + 4) = v18;
        *((void *)v36 + 5) = v37;
        *((void *)v36 + 6) = v51;
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
        v38(&v36[v34], v12, v7);
        v38(&v36[v35], v52, v7);
        id v39 = v18;
        swift_retain();
        sub_10016D650((uint64_t)v49, (uint64_t)&unk_1002302B8, (uint64_t)v36);
        swift_release();

        return;
      }
    }
    else
    {
      sub_1000423CC((uint64_t)&v56);
    }
    sub_100043478(&qword_10022D808);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1001C3110;
    *(void *)(v40 + 56) = &type metadata for String;
    *(void *)(v40 + 32) = 0x2064696C61766E49;
    *(void *)(v40 + 40) = 0xEF746E756F636361;
    uint64_t v41 = v58;
    uint64_t v42 = (void *)JSCallable.call(_:)();
    swift_bridgeObjectRelease();

    if (!v41) {
  }
    }
  else
  {
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v20 = type metadata accessor for JSFamily();
    uint64_t v57 = sub_100043478(&qword_1002302A8);
    *(void *)&long long v56 = v20;
    id v21 = (id)AMSLogKey();
    if (v21)
    {
      Swift::String v22 = v21;
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v25 = v24;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v26._uint64_t countAndFlagsBits = 0;
      v26._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      sub_100049788(&v56, v57);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v54[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v54);
      v28._uint64_t countAndFlagsBits = 5972026;
      v28._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      uint64_t MetatypeMetadata = &type metadata for String;
      v54[0] = v23;
      v54[1] = v25;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v54);
      v29._uint64_t countAndFlagsBits = 93;
      v29._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v43._uint64_t countAndFlagsBits = 0;
      v43._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      sub_100049788(&v56, v57);
      uint64_t v44 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v54[0] = v44;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v54);
      v45._uint64_t countAndFlagsBits = 58;
      v45._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v56);
    LogMessage.init(stringLiteral:)();
    uint64_t v46 = static os_log_type_t.error.getter();
    sub_10004841C(v46);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000E2548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  _OWORD v8[2] = a4;
  uint64_t v9 = type metadata accessor for JSCallable();
  v8[7] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[8] = v10;
  v8[9] = *(void *)(v10 + 64);
  v8[10] = swift_task_alloc();
  return _swift_task_switch(sub_1000E2618, 0, 0);
}

uint64_t sub_1000E2618()
{
  sub_100020958();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  void *v1 = v0;
  v1[1] = sub_1000E26BC;
  return sub_1000E44CC();
}

uint64_t sub_1000E26BC(uint64_t a1)
{
  sub_1000447B0();
  uint64_t v5 = v4;
  sub_100044DDC();
  void *v6 = v5;
  uint64_t v7 = *v2;
  sub_100044DDC();
  *uint64_t v8 = v7;
  *(void *)(v5 + 96) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v5 + 104) = a1;
  }
  sub_100043E7C();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_1000E27B4()
{
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v7 = (void *)v0[2];
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 16))(v3, v0[5], v5);
  sub_10004DD5C();
  unint64_t v8 = (v4 + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v9 + v1, v3, v5);
  *(void *)(v9 + v8) = v2;
  id v10 = v7;
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  swift_release();
  swift_task_dealloc();
  sub_100040954();
  return v11();
}

uint64_t sub_1000E28D4()
{
  uint64_t v2 = v0[12];
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v7 = (void *)v0[2];
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 16))(v3, v0[6], v5);
  sub_10004DD5C();
  unint64_t v8 = (v4 + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v9 + v1, v3, v5);
  *(void *)(v9 + v8) = v2;
  id v10 = v7;
  swift_errorRetain();
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  swift_errorRelease();
  swift_release();
  swift_task_dealloc();
  sub_100040954();
  return v11();
}

uint64_t sub_1000E2A08(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v25 = type metadata accessor for JSFamily();
  v24[0] = a1;
  id v6 = a1;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    unint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v24, v25);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    v14._uint64_t countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v22[0] = v9;
    v22[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    v15._uint64_t countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(v24, v25);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    v18._uint64_t countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v24);
  LogMessage.init(stringLiteral:)();
  uint64_t v19 = static os_log_type_t.default.getter();
  sub_10004841C(v19);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1001C3110;
  *(void *)(v20 + 56) = sub_100043478(&qword_10022D7B0);
  *(void *)(v20 + 32) = a3;
  swift_bridgeObjectRetain();
  sub_10001147C(v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E2D4C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v28 = type metadata accessor for JSFamily();
  v27[0] = a1;
  id v6 = a1;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    unint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v27, v28);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v25[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v25);
    v14._uint64_t countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v25[0] = v9;
    v25[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v25);
    v15._uint64_t countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(v27, v28);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v25[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v25);
    v18._uint64_t countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v27);
  LogMessage.init(stringLiteral:)();
  uint64_t v19 = static os_log_type_t.error.getter();
  sub_10004841C(v19);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1001C3110;
  id v21 = objc_allocWithZone((Class)type metadata accessor for JSError());
  swift_errorRetain();
  id v22 = sub_100027FB8(a3);
  uint64_t v23 = sub_100028288();

  *(void *)(v20 + 56) = sub_100043478(&qword_10022D7B0);
  *(void *)(v20 + 32) = v23;
  sub_10001147C(v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E30D0()
{
  sub_10004D510(0, (unint64_t *)&qword_10022FE70);
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_1000E3154(void *a1, uint64_t a2, void *a3)
{
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v6 = static RunLoopWorkerThread.current.getter();
  if (v6)
  {
    uint64_t v7 = v6;
    sub_10004D510(0, (unint64_t *)&qword_10022FE70);
    unint64_t v8 = (void *)swift_allocObject();
    _OWORD v8[2] = a2;
    v8[3] = a3;
    v8[4] = v7;
    swift_bridgeObjectRetain();
    id v9 = a3;
    swift_retain();
    uint64_t v10 = sub_100010358(a1, (uint64_t)sub_1000E52FC, (uint64_t)v8);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v10 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD000000000000037, 0x80000001001D0F00, 0, 0);
    swift_willThrow();
  }
  return v10;
}

void sub_1000E3288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v63 = a2;
  uint64_t v10 = type metadata accessor for JSCallable();
  uint64_t v72 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v72 + 64);
  __chkstk_darwin(v10);
  uint64_t v12 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v12 - 8);
  sub_10004D120(0x79747265706F7270, 0xEC000000656D614ELL, a4, &aBlock);
  if (!v66)
  {
    sub_1000423CC((uint64_t)&aBlock);
    goto LABEL_10;
  }
  uint64_t v61 = v10;
  uint64_t v62 = a6;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    sub_100043478(&qword_10022D808);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1001C3110;
    *(void *)(v33 + 56) = &type metadata for String;
    *(void *)(v33 + 32) = 0xD000000000000014;
    *(void *)(v33 + 40) = 0x80000001001D0F40;
    goto LABEL_14;
  }
  uint64_t v59 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = v69;
  unint64_t v13 = v70;
  sub_10004D120(0x4449656C646E7562, 0xE800000000000000, a4, &aBlock);
  if (!v66)
  {
    swift_bridgeObjectRelease();
    sub_1000423CC((uint64_t)&aBlock);
LABEL_13:
    sub_100043478(&qword_10022D808);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1001C3110;
    *(void *)(v34 + 56) = &type metadata for String;
    *(void *)(v34 + 32) = 0xD000000000000010;
    *(void *)(v34 + 40) = 0x80000001001D0F60;
LABEL_14:
    Swift::String v18 = (void *)JSCallable.call(_:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return;
    }
    goto LABEL_18;
  }
  unint64_t v14 = v13;
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v15 = v69;
  unint64_t v16 = v70;
  id v17 = objc_allocWithZone((Class)FAEligiblityEvaluationRequest);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v52 = v14;
  unint64_t v55 = v16;
  uint64_t v56 = v15;
  Swift::String v18 = sub_1000E531C();
  if (qword_10022C490 != -1) {
    swift_once();
  }
  uint64_t v57 = qword_1002440F8;
  sub_100043478(&qword_10022E560);
  uint64_t v19 = *(void *)(type metadata accessor for LogMessage() - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v53 = *(void *)(v19 + 72);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1001C3120;
  uint64_t v54 = v21;
  unint64_t v22 = v21 + v20;
  uint64_t v66 = (void *)type metadata accessor for JSFamily();
  *(void *)&long long aBlock = a5;
  id v58 = a5;
  id v23 = (id)AMSLogKey();
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v52 = v22;
    uint64_t v26 = v25;
    unint64_t v28 = v27;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v29._uint64_t countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    sub_100049788(&aBlock, (uint64_t)v66);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v69 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v69);
    v31._uint64_t countAndFlagsBits = 5972026;
    v31._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v69 = v26;
    unint64_t v70 = v28;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v69);
    v32._uint64_t countAndFlagsBits = 93;
    v32._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v35._uint64_t countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    sub_100049788(&aBlock, (uint64_t)v66);
    uint64_t v36 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v69 = v36;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v69);
    v37._uint64_t countAndFlagsBits = 58;
    v37._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
    LogMessage.init(stringInterpolation:)();
    unint64_t v14 = v52;
  }
  sub_10004377C((uint64_t)&aBlock);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v38._uint64_t countAndFlagsBits = 0xD000000000000034;
  v38._object = (void *)0x80000001001D0F80;
  LogMessage.StringInterpolation.appendLiteral(_:)(v38);
  uint64_t v66 = &type metadata for String;
  *(void *)&long long aBlock = v56;
  *((void *)&aBlock + 1) = v55;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)&aBlock);
  v39._object = (void *)0x80000001001D0FC0;
  v39._uint64_t countAndFlagsBits = 0xD000000000000010;
  LogMessage.StringInterpolation.appendLiteral(_:)(v39);
  uint64_t v66 = &type metadata for String;
  *(void *)&long long aBlock = v60;
  *((void *)&aBlock + 1) = v14;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)&aBlock);
  v40._uint64_t countAndFlagsBits = 41;
  v40._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v40);
  LogMessage.init(stringInterpolation:)();
  uint64_t v41 = static os_log_type_t.default.getter();
  sub_10004841C(v41);
  swift_bridgeObjectRelease();
  uint64_t v42 = v72;
  Swift::String v43 = v59;
  uint64_t v44 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v59, v63, v61);
  unint64_t v45 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v46 = swift_allocObject();
  uint64_t v47 = v58;
  uint64_t v48 = v62;
  *(void *)(v46 + 16) = v58;
  *(void *)(v46 + 24) = v48;
  (*(void (**)(unint64_t, char *, uint64_t))(v42 + 32))(v46 + v45, v43, v44);
  uint64_t v67 = sub_1000E5448;
  uint64_t v68 = v46;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v65 = sub_1000E4354;
  uint64_t v66 = &unk_100211C08;
  int v49 = _Block_copy(&aBlock);
  id v50 = v47;
  swift_retain();
  swift_release();
  [v18 startRequestWithCompletion:v49];
  _Block_release(v49);
LABEL_18:
}

uint64_t sub_1000E39C0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for JSCallable();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v47 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v13 - 8);
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = 0x6C69626967696C65;
  *(void *)(inited + 40) = 0xEB00000000797469;
  *(void *)(inited + 72) = &type metadata for UInt;
  uint64_t v48 = a1;
  *(void *)(inited + 48) = a1;
  uint64_t v55 = Dictionary.init(dictionaryLiteral:)();
  if (a2)
  {
    uint64_t v44 = a5;
    uint64_t v45 = v10;
    swift_errorRetain();
    if (qword_10022C490 != -1) {
      swift_once();
    }
    v43[2] = qword_1002440F8;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    uint64_t v54 = type metadata accessor for JSFamily();
    v53[0] = (uint64_t)a3;
    uint64_t v46 = a3;
    id v15 = a3;
    id v16 = (id)AMSLogKey();
    if (v16)
    {
      id v17 = v16;
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v43[1] = a4;
      uint64_t v19 = v18;
      uint64_t v21 = v20;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v22._uint64_t countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      sub_100049788(v53, v54);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v51[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v51);
      v24._uint64_t countAndFlagsBits = 5972026;
      v24._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      uint64_t MetatypeMetadata = &type metadata for String;
      v51[0] = v19;
      v51[1] = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v51);
      v25._uint64_t countAndFlagsBits = 93;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v26._uint64_t countAndFlagsBits = 0;
      v26._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      sub_100049788(v53, v54);
      uint64_t v27 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v51[0] = v27;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v51);
      v28._uint64_t countAndFlagsBits = 58;
      v28._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v53);
    LogMessage.init(stringLiteral:)();
    swift_getErrorValue();
    uint64_t v29 = v49;
    uint64_t v30 = v50;
    uint64_t v54 = v50;
    Swift::String v31 = sub_10003BAA4(v53);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v31, v29, v30);
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)v53);
    uint64_t v32 = static os_log_type_t.error.getter();
    sub_10004841C(v32);
    swift_bridgeObjectRelease();
    id v33 = objc_allocWithZone((Class)type metadata accessor for JSError());
    swift_errorRetain();
    id v34 = sub_100027FB8(a2);
    uint64_t v35 = sub_100028288();

    uint64_t v54 = sub_100043478(&qword_10022D7B0);
    v53[0] = v35;
    sub_10003E698((uint64_t)v53, 0x726F727265, 0xE500000000000000);
    swift_errorRelease();
    a3 = v46;
    uint64_t v10 = v45;
    a5 = v44;
  }
  uint64_t v36 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v47, a5, v10);
  uint64_t v37 = v55;
  unint64_t v38 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v39 = swift_allocObject();
  uint64_t v40 = v48;
  *(void *)(v39 + 16) = a3;
  *(void *)(v39 + 24) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v39 + v38, v36, v10);
  *(void *)(v39 + ((v12 + v38 + 7) & 0xFFFFFFFFFFFFFFF8)) = v37;
  id v41 = a3;
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  return swift_release();
}

uint64_t sub_1000E3F9C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v29 = (void *)type metadata accessor for JSFamily();
  v28[0] = a1;
  id v8 = a1;
  id v9 = (id)AMSLogKey();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v14._uint64_t countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    sub_100049788(v28, (uint64_t)v29);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v26[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v26);
    v16._uint64_t countAndFlagsBits = 5972026;
    v16._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    uint64_t MetatypeMetadata = &type metadata for String;
    v26[0] = v11;
    v26[1] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v26);
    v17._uint64_t countAndFlagsBits = 93;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v18._uint64_t countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    sub_100049788(v28, (uint64_t)v29);
    uint64_t v19 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v26[0] = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v26);
    v20._uint64_t countAndFlagsBits = 58;
    v20._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v28);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._object = (void *)0x80000001001D1030;
  v21._uint64_t countAndFlagsBits = 0xD000000000000030;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  uint64_t v29 = &type metadata for UInt;
  v28[0] = a2;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)v28);
  v22._uint64_t countAndFlagsBits = 41;
  v22._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  LogMessage.init(stringInterpolation:)();
  uint64_t v23 = static os_log_type_t.default.getter();
  sub_10004841C(v23);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1001C3110;
  *(void *)(v24 + 56) = sub_100043478(&qword_10022D7B0);
  *(void *)(v24 + 32) = a4;
  swift_bridgeObjectRetain();
  sub_1000D4C74(v24);
  return swift_bridgeObjectRelease();
}

void sub_1000E4354(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

id sub_1000E43E4(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  id v7 = a1;
  id v8 = (void *)a4(v6);
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_1000E4474()
{
  uint64_t v3 = &type metadata for AMSFlags;
  unint64_t v4 = sub_10002FDEC();
  v2[0] = 1;
  char v0 = isFeatureEnabled(_:)();
  sub_10004377C((uint64_t)v2);
  return v0 & 1;
}

uint64_t sub_1000E44CC()
{
  sub_100020958();
  v1[62] = v2;
  v1[63] = v0;
  v1[64] = swift_getObjectType();
  type metadata accessor for LogMessage.StringInterpolation();
  v1[65] = swift_task_alloc();
  sub_100043E7C();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_1000E4560()
{
  if ((sub_1000E4474() & 1) != 0
    && ((objc_msgSend(*(id *)(v0 + 496), "ams_isiCloudAccount") & 1) != 0
     || (v1 = objc_msgSend(*(id *)(*(void *)(v0 + 504) + OBJC_IVAR____TtC14amsengagementd8JSFamily_accountStore), "ams_iCloudAccountForAccount:", *(void *)(v0 + 496))) != 0&& (uint64_t v2 = v1, v3 = objc_msgSend(v1, "isActive"), v2, v3)))
  {
    uint64_t v4 = v0 + 224;
    if (qword_10022C490 != -1) {
      swift_once();
    }
    uint64_t v5 = *(void **)(v0 + 504);
    sub_100043478(&qword_10022E560);
    uint64_t v6 = type metadata accessor for LogMessage();
    sub_100044798(v6);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    *(void *)(v0 + 248) = type metadata accessor for JSFamily();
    *(void *)(v0 + 224) = v5;
    id v7 = v5;
    id v8 = (id)AMSLogKey();
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      uint64_t v13 = sub_10002106C((void *)(v0 + 224));
      *(void *)(v0 + 344) = swift_getMetatypeMetadata();
      *(void *)(v0 + 320) = v13;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC(v0 + 320);
      v14._uint64_t countAndFlagsBits = 5972026;
      v14._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v14);
      *(void *)(v0 + 408) = &type metadata for String;
      *(void *)(v0 + 384) = v10;
      *(void *)(v0 + 392) = v12;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      uint64_t v4 = v0 + 224;
      sub_1000423CC(v0 + 384);
      v15._uint64_t countAndFlagsBits = 93;
      v15._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      uint64_t v41 = sub_10002106C((void *)(v0 + 224));
      *(void *)(v0 + 376) = swift_getMetatypeMetadata();
      *(void *)(v0 + 352) = v41;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC(v0 + 352);
      v42._uint64_t countAndFlagsBits = 58;
      v42._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      LogMessage.init(stringInterpolation:)();
    }
    uint64_t v43 = *(void *)(v0 + 504);
    sub_10004377C(v4);
    LogMessage.init(stringLiteral:)();
    uint64_t v44 = static os_log_type_t.info.getter();
    sub_10004841C(v44);
    swift_bridgeObjectRelease();
    id v45 = [objc_allocWithZone((Class)FAFetchFamilyCircleRequest) init];
    *(void *)(v0 + 528) = v45;
    [v45 setCachePolicy:*(unsigned char *)(v43 + OBJC_IVAR____TtC14amsengagementd8JSFamily_config + 64) != 0];
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 488;
    *(void *)(v0 + 24) = sub_1000E4CF4;
    uint64_t v46 = swift_continuation_init();
    *(void *)(v0 + 144) = _NSConcreteStackBlock;
    *(void *)(v0 + 152) = 0x40000000;
    *(void *)(v0 + 160) = sub_1000E50A0;
    *(void *)(v0 + 168) = &unk_100211BA0;
    *(void *)(v0 + 176) = v46;
    [v45 startRequestWithCompletionHandler:v0 + 144];
    uint64_t v40 = v0 + 16;
  }
  else
  {
    if (qword_10022C490 != -1) {
      swift_once();
    }
    Swift::String v16 = *(void **)(v0 + 504);
    sub_100043478(&qword_10022E560);
    uint64_t v17 = type metadata accessor for LogMessage();
    sub_100044798(v17);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    *(void *)(v0 + 472) = type metadata accessor for JSFamily();
    *(void *)(v0 + 448) = v16;
    id v18 = v16;
    id v19 = (id)AMSLogKey();
    if (v19)
    {
      Swift::String v20 = v19;
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v22;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      uint64_t v24 = sub_10002106C((void *)(v0 + 448));
      *(void *)(v0 + 280) = swift_getMetatypeMetadata();
      *(void *)(v0 + 256) = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC(v0 + 256);
      v25._uint64_t countAndFlagsBits = 5972026;
      v25._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      *(void *)(v0 + 312) = &type metadata for String;
      *(void *)(v0 + 288) = v21;
      *(void *)(v0 + 296) = v23;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC(v0 + 288);
      v26._uint64_t countAndFlagsBits = 93;
      v26._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      uint64_t v27 = sub_10002106C((void *)(v0 + 448));
      *(void *)(v0 + 440) = swift_getMetatypeMetadata();
      *(void *)(v0 + 416) = v27;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC(v0 + 416);
      v28._uint64_t countAndFlagsBits = 58;
      v28._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      LogMessage.init(stringInterpolation:)();
    }
    uint64_t v30 = *(void **)(v0 + 496);
    uint64_t v29 = *(void *)(v0 + 504);
    sub_10004377C(v0 + 448);
    LogMessage.init(stringLiteral:)();
    uint64_t v31 = static os_log_type_t.info.getter();
    sub_10004841C(v31);
    swift_bridgeObjectRelease();
    int v32 = *(unsigned __int8 *)(v29 + OBJC_IVAR____TtC14amsengagementd8JSFamily_config + 64);
    sub_10004D510(0, &qword_1002302A0);
    uint64_t v33 = qword_10022C3E0;
    id v34 = v30;
    if (v33 != -1) {
      swift_once();
    }
    uint64_t v35 = *(void **)(v0 + 496);
    uint64_t v36 = qword_10022D990;
    swift_unknownObjectRetain();
    id v37 = sub_1000E50CC(v35, v36);
    *(void *)(v0 + 544) = v37;
    id v38 = [v37 performFamilyInfoLookupWithCachePolicy:2 * (v32 == 0)];
    *(void *)(v0 + 552) = v38;
    *(void *)(v0 + 80) = v0;
    *(void *)(v0 + 120) = v0 + 480;
    *(void *)(v0 + 88) = sub_1000E4E44;
    uint64_t v39 = swift_continuation_init();
    *(void *)(v0 + 184) = _NSConcreteStackBlock;
    *(void *)(v0 + 192) = 0x40000000;
    *(void *)(v0 + 200) = sub_1000E50A0;
    *(void *)(v0 + 208) = &unk_100211B88;
    *(void *)(v0 + 216) = v39;
    [v38 resultWithCompletion:v0 + 184];
    uint64_t v40 = v0 + 80;
  }
  return _swift_continuation_await(v40);
}

uint64_t sub_1000E4CF4()
{
  sub_100020958();
  sub_1000447B0();
  sub_100044DDC();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 536) = *(void *)(v3 + 48);
  sub_100043E7C();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1000E4DD4()
{
  sub_100020958();
  sub_1000E5B08(*(void **)(v0 + 488));

  swift_task_dealloc();
  uint64_t v1 = sub_1000462C8();
  return v2(v1);
}

uint64_t sub_1000E4E44()
{
  sub_100020958();
  sub_1000447B0();
  sub_100044DDC();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 560) = *(void *)(v3 + 112);
  sub_100043E7C();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1000E4F24()
{
  sub_100020958();
  uint64_t v1 = *(void **)(v0 + 544);
  sub_1000E6160(*(void **)(v0 + 480));

  swift_task_dealloc();
  uint64_t v2 = sub_1000462C8();
  return v3(v2);
}

uint64_t sub_1000E4F9C()
{
  uint64_t v1 = *(void **)(v0 + 528);
  swift_willThrow();
  swift_willThrow();

  swift_task_dealloc();
  sub_100040954();
  return v2();
}

uint64_t sub_1000E5020()
{
  uint64_t v1 = *(void **)(v0 + 552);
  uint64_t v2 = *(void **)(v0 + 544);
  swift_willThrow();

  swift_task_dealloc();
  sub_100040954();
  return v3();
}

uint64_t sub_1000E50A0(uint64_t a1, void *a2, void *a3)
{
  return sub_1000E512C(a1, a2, a3, (uint64_t (*)(uint64_t, id))sub_1000EB8AC, (uint64_t (*)(uint64_t, id))sub_1000EB92C);
}

id sub_1000E50CC(void *a1, uint64_t a2)
{
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithAccount:a1 bag:a2];

  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_1000E512C(uint64_t result, void *a2, void *a3, uint64_t (*a4)(uint64_t, id), uint64_t (*a5)(uint64_t, id))
{
  uint64_t v5 = *(void *)(result + 32);
  if (a3)
  {
    id v6 = a3;
    uint64_t v7 = v5;
    uint64_t v8 = a4;
    return v8(v7, v6);
  }
  if (a2)
  {
    id v6 = a2;
    uint64_t v7 = v5;
    uint64_t v8 = a5;
    return v8(v7, v6);
  }
  __break(1u);
  return result;
}

void sub_1000E51C0()
{
}

id sub_1000E5200()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSFamily();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000E5298(void *a1)
{
  return sub_1000E3154(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1000E52B4()
{
  swift_bridgeObjectRelease();

  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000E52FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000E3288(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32));
}

id sub_1000E531C()
{
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [v0 initWithPropertyName:v1 bundleID:v2];

  return v3;
}

uint64_t sub_1000E53A4()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 32) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;

  swift_release();
  sub_10004874C();
  v8();
  return _swift_deallocObject(v0, v6, v7);
}

uint64_t sub_1000E5448(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for JSCallable() - 8);
  uint64_t v6 = *(void **)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1000E39C0(a1, a2, v6, v7, v8);
}

uint64_t sub_1000E54CC()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = (*(void *)(v4 + 64) + ((v5 + 32) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8;

  sub_10004874C();
  v8();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, v7 + 8, v6);
}

uint64_t sub_1000E5584()
{
  uint64_t v1 = type metadata accessor for JSCallable();
  sub_100044798(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = *(void **)(v0 + 16);
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t v9 = *(void *)(v0 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1000E3F9C(v7, v8, v0 + v6, v9);
}

uint64_t sub_1000E55F0(void *a1)
{
  return sub_1000E1A68(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000E560C()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E5644()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000E568C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000E1EDC(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_1000E56AC()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  uint64_t v7 = ((*(void *)(v4 + 64) + v5 + ((v5 + 56) & ~v5)) & ~v5) + *(void *)(v4 + 64);
  swift_unknownObjectRelease();

  swift_release();
  uint64_t v8 = *(void (**)(void))(v2 + 8);
  sub_10004874C();
  v8();
  sub_10004874C();
  v8();
  return _swift_deallocObject(v0, v7, v6);
}

uint64_t sub_1000E5780(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for JSCallable();
  sub_100044798(v4);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v9 + 56) & ~v9;
  uint64_t v11 = v1[2];
  uint64_t v12 = v1[3];
  uint64_t v13 = v1[4];
  uint64_t v14 = v1[5];
  uint64_t v15 = v1[6];
  uint64_t v16 = (uint64_t)v1 + v10;
  uint64_t v17 = (uint64_t)v1 + ((*(void *)(v8 + 64) + v9 + v10) & ~v9);
  id v18 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v18;
  *id v18 = v2;
  v18[1] = sub_1000E589C;
  return sub_1000E2548(a1, v11, v12, v13, v14, v15, v16, v17);
}

uint64_t sub_1000E589C()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v1 = *v0;
  sub_100044DDC();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100040954();
  return v3();
}

uint64_t sub_1000E5960()
{
  return sub_1000E59A8((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_1000E5978()
{
  return sub_1000E5A88((uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1000E2D4C);
}

uint64_t sub_1000E5990()
{
  return sub_1000E59A8((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1000E59A8(void (*a1)(void))
{
  uint64_t v3 = type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = (v8 + 24) & ~v8;
  uint64_t v10 = v8 | 7;
  unint64_t v11 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1 + v9, v3);
  a1(*(void *)(v1 + v11));
  return _swift_deallocObject(v1, v11 + 8, v10);
}

uint64_t sub_1000E5A70()
{
  return sub_1000E5A88((uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1000E2A08);
}

uint64_t sub_1000E5A88(uint64_t (*a1)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v2 = type metadata accessor for JSCallable();
  sub_100044798(v2);
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a1(v8, v1 + v7, v9);
}

void sub_1000E5B08(void *a1)
{
  v227 = _swiftEmptyDictionarySingleton;
  id v2 = [a1 members];
  sub_10004D510(0, &qword_1002302C0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
LABEL_54:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = 0;
  if (v4)
  {
    unint64_t v203 = v3 & 0xC000000000000001;
    uint64_t v6 = _swiftEmptyArrayStorage;
    uint64_t v7 = 4;
    uint64_t v161 = 0x80000001001D1190;
    uint64_t v173 = 0x80000001001D1170;
    uint64_t v183 = v4;
    uint64_t v193 = v3;
    while (1)
    {
      if (v203) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v3 + 8 * v7);
      }
      uint64_t v9 = v8;
      if (__OFADD__(v7 - 4, 1))
      {
        __break(1u);
        goto LABEL_54;
      }
      if ([v8 isOrganizer])
      {

        id v10 = v9;
        uint64_t v5 = v9;
      }
      id v11 = objc_msgSend(a1, "me", v161);
      if (!v11)
      {

        __break(1u);
        return;
      }
      uint64_t v12 = v11;
      id v13 = [v11 dsid];

      id v14 = [v9 dsid];
      uint64_t v15 = v14;
      if (v13)
      {
        if (!v14)
        {
          uint64_t v15 = v13;
LABEL_20:

          char v25 = 0;
          v226 = _swiftEmptyDictionarySingleton;
LABEL_21:
          uint64_t v26 = -1;
          goto LABEL_22;
        }
        sub_10004D510(0, (unint64_t *)&qword_100231E00);
        id v16 = v13;
        char v17 = static NSObject.== infix(_:_:)();

        v226 = _swiftEmptyDictionarySingleton;
        if ((v17 & 1) == 0)
        {
          char v25 = 0;
          goto LABEL_21;
        }
      }
      else
      {
        if (v14) {
          goto LABEL_20;
        }
        v226 = _swiftEmptyDictionarySingleton;
      }
      uint64_t v26 = (uint64_t)[a1 ageCategory];
      char v25 = 1;
LABEL_22:
      uint64_t v27 = sub_10004DD70(v26, v18, v19, v20, v21, v22, v23, v24, v162, v173, v183, v193, v203, v7 - 3, v26);
      sub_1000494D4((uint64_t)v27);
      id v28 = [v9 hasAskToBuyEnabled];
      uint64_t v36 = sub_10004DD70((uint64_t)v28, v29, v30, v31, v32, v33, v34, v35, v163, v174, v184, v194, v204, v214, (char)v28);
      uint64_t v37 = sub_1000467F4((uint64_t)v36);
      uint64_t v225 = &type metadata for Bool;
      id v45 = sub_10004DD70(v37, v38, v39, v40, v41, v42, v43, v44, v164, v175, v185, v195, v205, v215, v25);
      sub_10003E698((uint64_t)v45, 0xD000000000000013, v176);
      sub_100038B5C(v9, (SEL *)&selRef_firstName);
      if (v46) {
        sub_100045F34();
      }
      else {
        sub_100048D7C();
      }
      uint64_t v55 = sub_10004DD70(v47, v48, v49, v50, v51, v52, v53, v54, v165, v176, v186, v196, v206, v216, (char)v223);
      sub_1000462DC((uint64_t)v55);
      id v56 = [v9 dsid];
      if (v56)
      {
        uint64_t v57 = v56;
        id v58 = [v56 stringValue];

        uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v61 = v60;

        uint64_t v225 = &type metadata for String;
        id v223 = (id)v59;
        uint64_t v224 = v61;
      }
      else
      {
        sub_100048D7C();
      }
      unint64_t v70 = sub_100047234(v62, v63, v64, v65, v66, v67, v68, v69, v166, v177, v187, v197, v207, v217, (char)v223);
      sub_10004875C((uint64_t)v70, v71);
      sub_100038B5C(v9, (SEL *)&selRef_appleID);
      if (v72) {
        sub_100045F34();
      }
      else {
        sub_100048D7C();
      }
      Swift::String v81 = sub_100047234(v73, v74, v75, v76, v77, v78, v79, v80, v167, v178, v188, v198, v208, v218, (char)v223);
      sub_100044B98((uint64_t)v81, v82);
      id v83 = [v9 iTunesAccountDSID];
      if (v83)
      {
        uint64_t v84 = v83;
        id v85 = [v83 stringValue];

        uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v88 = v87;

        uint64_t v225 = &type metadata for String;
        id v223 = (id)v86;
        uint64_t v224 = v88;
      }
      else
      {
        sub_100048D7C();
      }
      uint64_t v97 = sub_10004CEA0(v89, v90, v91, v92, v93, v94, v95, v96, v168, v179, v189, v199, v209, v219, (char)v223);
      sub_10004875C((uint64_t)v97, v98);
      sub_100038B5C(v9, (SEL *)&selRef_iTunesAccountUsername);
      if (v99) {
        sub_100045F34();
      }
      else {
        sub_100048D7C();
      }
      uint64_t v108 = sub_10004CEA0(v100, v101, v102, v103, v104, v105, v106, v107, v169, v180, v190, v200, v210, v220, (char)v223);
      sub_100044B98((uint64_t)v108, v109);
      sub_100038B5C(v9, (SEL *)&selRef_lastName);
      if (v110) {
        sub_100045F34();
      }
      else {
        sub_100048D7C();
      }
      uint64_t v119 = sub_10004DD70(v111, v112, v113, v114, v115, v116, v117, v118, v170, v181, v191, v201, v211, v221, (char)v223);
      sub_10004ABF8((uint64_t)v119);
      id v120 = [v9 purchaseSharingEnabled];
      uint64_t v225 = &type metadata for Bool;
      uint64_t v127 = sub_10004DD70((uint64_t)v120, 0xD000000000000010, v121, v122, v123, v124, v125, v126, v171, v182, v192, v202, v212, v222, (char)v120);
      sub_10003E698((uint64_t)v127, v128, v161);
      Swift::String v129 = v226;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10007108C();
        uint64_t v6 = v132;
      }
      unint64_t v131 = v6[2];
      unint64_t v130 = v6[3];
      if (v131 >= v130 >> 1)
      {
        sub_100045884(v130);
        sub_10007108C();
        uint64_t v6 = v133;
      }
      v6[2] = v131 + 1;
      v6[v131 + 4] = v129;

      ++v7;
      unint64_t v3 = v193;
      if (v213 == v183) {
        goto LABEL_47;
      }
    }
  }
  uint64_t v6 = _swiftEmptyArrayStorage;
LABEL_47:
  swift_bridgeObjectRelease();
  uint64_t v225 = &type metadata for Int;
  id v223 = [a1 ageCategory];
  sub_1000494D4((uint64_t)&v223);
  uint64_t v225 = (void *)sub_100043478(&qword_10022FE80);
  id v223 = v6;
  sub_1000451C8((uint64_t)&v223);
  if (v5)
  {
    id v134 = v5;
    id v135 = [v134 dsid];
    if (v135)
    {
      uint64_t v136 = v135;
      id v137 = [v135 stringValue];

      uint64_t v138 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v140 = v139;

      uint64_t v225 = &type metadata for String;
      id v223 = (id)v138;
      uint64_t v224 = v140;
    }
    else
    {
      sub_100048D7C();
    }
    id v148 = sub_100043C58(v141, 0xD000000000000019, v142, v143, v144, v145, v146, v147, v161, v173, v183, v193, v203, v213, (char)v223);
    sub_10003E698((uint64_t)v148, v149, v150);
  }
  id v151 = objc_msgSend(a1, "sharedPaymentEnabled", v161);
  uint64_t v225 = &type metadata for Bool;
  uint64_t v159 = sub_100043C58((uint64_t)v151, v152, v153, v154, v155, v156, v157, v158, v172, v173, v183, v193, v203, v213, (char)v151);
  sub_10003E698((uint64_t)v159, 0xD000000000000013, v160);
}

void sub_1000E6160(void *a1)
{
  uint64_t v199 = _swiftEmptyDictionarySingleton;
  id v2 = [a1 familyMembers];
  sub_10004D510(0, &qword_1002302C8);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v151 = a1;
  if (!v4)
  {
    uint64_t v6 = _swiftEmptyArrayStorage;
LABEL_35:
    swift_bridgeObjectRelease();
    uint64_t v197 = (void *)sub_100043478(&qword_10022FE80);
    uint64_t v195 = v6;
    sub_1000451C8((uint64_t)&v195);
    uint64_t v126 = v151;
    id v127 = [v151 headOfHouseholdICloudDSID];
    id v128 = [v127 stringValue];

    LOBYTE(v127) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v130 = v129;

    uint64_t v197 = &type metadata for String;
    uint64_t v196 = v130;
    uint64_t v138 = sub_10004BF3C(v131, 0xD000000000000019, v132, v133, v134, v135, v136, v137, (uint64_t)v151, v162, v173, v184, (char)v127);
    sub_10003E698((uint64_t)v138, v139, v140);
    id v141 = [v126 isHeadOfHouseholdSharingPayment];
    uint64_t v197 = &type metadata for Bool;
    uint64_t v149 = sub_10004BF3C((uint64_t)v141, v142, v143, v144, v145, v146, v147, v148, (uint64_t)v161, v172, v183, v194, (char)v141);
    sub_10003E698((uint64_t)v149, 0xD000000000000013, v150);

    return;
  }
  if (v4 >= 1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = _swiftEmptyArrayStorage;
    uint64_t v173 = 0x80000001001D1170;
    unint64_t v184 = v3 & 0xC000000000000001;
    uint64_t v162 = 0x80000001001D1190;
    unint64_t v7 = v3;
    do
    {
      if (v184) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v3 + 8 * v5 + 32);
      }
      id v16 = v8;
      uint64_t v198 = _swiftEmptyDictionarySingleton;
      char v17 = sub_10004B4AC((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, (uint64_t)v151, v162, v173, v184, -1);
      sub_1000494D4((uint64_t)v17);
      id v18 = [v16 isAskToBuyEnabled];
      uint64_t v26 = sub_10004B4AC((uint64_t)v18, v19, v20, v21, v22, v23, v24, v25, (uint64_t)v152, v163, v174, v185, (char)v18);
      sub_1000467F4((uint64_t)v26);
      id v27 = [v16 isCurrentSignedInUser];
      uint64_t v197 = &type metadata for Bool;
      uint64_t v35 = sub_10004B4AC((uint64_t)v27, v28, v29, v30, v31, v32, v33, v34, (uint64_t)v153, v164, v175, v186, (char)v27);
      sub_10003E698((uint64_t)v35, 0xD000000000000013, v176);
      sub_100038B5C(v16, (SEL *)&selRef_firstName);
      if (v36) {
        sub_100049DEC();
      }
      else {
        sub_100048164();
      }
      uint64_t v45 = v4;
      uint64_t v46 = sub_10004B4AC(v37, v38, v39, v40, v41, v42, v43, v44, (uint64_t)v154, v165, v176, v187, (char)v195);
      sub_1000462DC((uint64_t)v46);
      id v47 = [v16 iCloudDSID];
      if (v47)
      {
        uint64_t v48 = v47;
        id v49 = [v47 stringValue];

        uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v52 = v51;

        uint64_t v197 = &type metadata for String;
        uint64_t v195 = (void *)v50;
        uint64_t v196 = v52;
      }
      else
      {
        sub_100048164();
      }
      uint64_t v61 = sub_1000211F8(v53, v54, v55, v56, v57, v58, v59, v60, (uint64_t)v155, v166, v177, v188, (char)v195);
      sub_10004875C((uint64_t)v61, v62);
      sub_100038B5C(v16, (SEL *)&selRef_iCloudUsername);
      if (v63) {
        sub_100049DEC();
      }
      else {
        sub_100048164();
      }
      uint64_t v72 = sub_1000211F8(v64, v65, v66, v67, v68, v69, v70, v71, (uint64_t)v156, v167, v178, v189, (char)v195);
      sub_100044B98((uint64_t)v72, v73);
      id v74 = [v16 iTunesDSID];
      if (v74)
      {
        uint64_t v75 = v74;
        id v76 = [v74 stringValue];

        uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v79 = v78;

        uint64_t v197 = &type metadata for String;
        uint64_t v195 = (void *)v77;
        uint64_t v196 = v79;
      }
      else
      {
        sub_100048164();
      }
      uint64_t v88 = sub_100049A1C(v80, v81, v82, v83, v84, v85, v86, v87, (uint64_t)v157, v168, v179, v190, (char)v195);
      sub_10004875C((uint64_t)v88, v89);
      sub_100038B5C(v16, (SEL *)&selRef_iTunesUsername);
      if (v90) {
        sub_100049DEC();
      }
      else {
        sub_100048164();
      }
      uint64_t v99 = sub_100049A1C(v91, v92, v93, v94, v95, v96, v97, v98, (uint64_t)v158, v169, v180, v191, (char)v195);
      sub_100044B98((uint64_t)v99, v100);
      sub_100038B5C(v16, (SEL *)&selRef_lastName);
      if (v101) {
        sub_100049DEC();
      }
      else {
        sub_100048164();
      }
      uint64_t v110 = sub_10004B4AC(v102, v103, v104, v105, v106, v107, v108, v109, (uint64_t)v159, v170, v181, v192, (char)v195);
      sub_10004ABF8((uint64_t)v110);
      id v111 = [v16 isSharingPurchases];
      uint64_t v197 = &type metadata for Bool;
      uint64_t v118 = sub_10004B4AC((uint64_t)v111, 0xD000000000000010, v112, v113, v114, v115, v116, v117, (uint64_t)v160, v171, v182, v193, (char)v111);
      sub_10003E698((uint64_t)v118, v119, v162);
      id v120 = v198;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10007108C();
        uint64_t v6 = v124;
      }
      unint64_t v122 = v6[2];
      unint64_t v121 = v6[3];
      if (v122 >= v121 >> 1)
      {
        sub_100045884(v121);
        sub_10007108C();
        uint64_t v6 = v125;
      }
      ++v5;
      v6[2] = v122 + 1;
      v6[v122 + 4] = v120;

      uint64_t v4 = v45;
      BOOL v123 = v45 == v5;
      unint64_t v3 = v7;
    }
    while (!v123);
    goto LABEL_35;
  }
  __break(1u);
}

uint64_t sub_1000E662C()
{
  return Dictionary.description.getter();
}

uint64_t sub_1000E664C()
{
  return sub_1000E662C();
}

ValueMetadata *type metadata accessor for JSFamilyCircle()
{
  return &type metadata for JSFamilyCircle;
}

void sub_1000E6664(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      sub_1000732A8();
      if (v3 < 0) {
        break;
      }
      uint64_t v4 = 0;
      while (v3 != v4)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v5 = *(id *)(a1 + 8 * v4 + 32);
        }
        uint64_t v6 = v5;
        uint64_t v7 = sub_10006D870(a2);

        unint64_t v8 = _swiftEmptyArrayStorage[2];
        if (v8 >= _swiftEmptyArrayStorage[3] >> 1) {
          sub_1000732A8();
        }
        ++v4;
        _swiftEmptyArrayStorage[2] = v8 + 1;
        _swiftEmptyArrayStorage[v8 + 4] = v7;
        if (v3 == v4) {
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v3) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
  }
}

id sub_1000E67E0()
{
  uint64_t v1 = OBJC_IVAR____TtC14amsengagementd10JSFollowUp____lazy_storage___dateFormatter;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC14amsengagementd10JSFollowUp____lazy_storage___dateFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC14amsengagementd10JSFollowUp____lazy_storage___dateFormatter);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)NSISO8601DateFormatter) init];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1000E6854()
{
  sub_10004D510(0, (unint64_t *)&qword_10022FE70);
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_1000E68E0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v8 = static RunLoopWorkerThread.current.getter();
  if (v8)
  {
    uint64_t v9 = v8;
    sub_10004D510(0, (unint64_t *)&qword_10022FE70);
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = a2;
    v10[3] = a3;
    v10[4] = v9;
    v10[5] = a4;
    swift_bridgeObjectRetain();
    swift_retain();
    id v11 = a4;
    uint64_t v12 = sub_100010358(a1, (uint64_t)sub_1000EA3E0, (uint64_t)v10);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v12 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000002CLL, 0x80000001001D0CC0, 0, 0);
    swift_willThrow();
  }
  return v12;
}

void sub_1000E6A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v33 = a6;
  uint64_t v34 = a2;
  uint64_t v9 = type metadata accessor for JSCallable();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [objc_allocWithZone((Class)AMSFollowUp) init];
  id v35 = v13;
  NSString v14 = String._bridgeToObjectiveC()();
  id v36 = [v13 clearFollowUpWithBackingIdentifier:v14];

  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v15 = a3;
  uint64_t v16 = v9;
  uint64_t v28 = v9;
  v32(v12, v15, v9);
  uint64_t v17 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v18 = (v17 + 32) & ~v17;
  uint64_t v30 = v17 | 7;
  uint64_t v31 = v18 + v11;
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v33;
  *(void *)(v19 + 16) = v33;
  *(void *)(v19 + 24) = a7;
  uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v29(v19 + v18, v12, v16);
  uint64_t v41 = sub_1000EA400;
  uint64_t v42 = v19;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v38 = 1107296256;
  uint64_t v39 = sub_100181204;
  uint64_t v40 = &unk_100212108;
  uint64_t v21 = _Block_copy(&aBlock);
  swift_retain();
  id v22 = a7;
  swift_release();
  [v36 addErrorBlock:v21];
  _Block_release(v21);
  uint64_t v23 = v28;
  v32(v12, v34, v28);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v20;
  *(void *)(v24 + 24) = v22;
  v29(v24 + v18, v12, v23);
  uint64_t v41 = sub_1000EA424;
  uint64_t v42 = v24;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v38 = 1107296256;
  uint64_t v39 = sub_10002CD0C;
  uint64_t v40 = &unk_100212158;
  uint64_t v25 = _Block_copy(&aBlock);
  swift_retain();
  id v26 = v22;
  swift_release();
  id v27 = v36;
  [v36 addSuccessBlock:v25];
  _Block_release(v25);
}

uint64_t sub_1000E6DCC()
{
  sub_100045F40();
  sub_10004D510(0, (unint64_t *)&qword_10022FE70);
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_1000E6E58(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v10 = static RunLoopWorkerThread.current.getter();
  if (v10)
  {
    uint64_t v11 = v10;
    sub_10004D510(0, (unint64_t *)&qword_10022FE70);
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = a2;
    v12[3] = a3;
    v12[4] = a4;
    v12[5] = a5;
    v12[6] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    id v13 = a2;
    uint64_t v14 = sub_100010358(a1, (uint64_t)sub_1000EA2F8, (uint64_t)v12);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v14 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000002CLL, 0x80000001001D0CC0, 0, 0);
    swift_willThrow();
  }
  return v14;
}

void sub_1000E6FA8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v35 = a8;
  uint64_t v36 = a2;
  uint64_t v33 = a3;
  uint64_t v10 = type metadata accessor for JSCallable();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  id v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [objc_allocWithZone((Class)AMSFollowUp) init];
  id v37 = v14;
  uint64_t v15 = a5;
  uint64_t v16 = a4;
  id v17 = sub_1000E9A90(v15);
  id v38 = v17;
  NSString v18 = String._bridgeToObjectiveC()();
  id v39 = [v14 clearFollowUpWithIdentifier:v18 account:v17];

  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v30[0] = v10;
  v34(v13, v33, v10);
  uint64_t v19 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v20 = (v19 + 32) & ~v19;
  uint64_t v32 = v19 | 7;
  uint64_t v33 = v20 + v12;
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v35;
  *(void *)(v21 + 16) = v35;
  *(void *)(v21 + 24) = v16;
  uint64_t v31 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v31(v21 + v20, v13, v10);
  uint64_t v44 = sub_1000EA31C;
  uint64_t v45 = v21;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v41 = 1107296256;
  v30[1] = &v42;
  uint64_t v42 = sub_100181204;
  uint64_t v43 = &unk_100211FF0;
  uint64_t v23 = _Block_copy(&aBlock);
  swift_retain();
  id v24 = v16;
  swift_release();
  [v39 addErrorBlock:v23];
  _Block_release(v23);
  uint64_t v25 = v30[0];
  v34(v13, v36, v30[0]);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v22;
  *(void *)(v26 + 24) = v24;
  v31(v26 + v20, v13, v25);
  uint64_t v44 = sub_1000EA340;
  uint64_t v45 = v26;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v41 = 1107296256;
  uint64_t v42 = sub_10002CD0C;
  uint64_t v43 = &unk_100212040;
  id v27 = _Block_copy(&aBlock);
  swift_retain();
  id v28 = v24;
  swift_release();
  id v29 = v39;
  [v39 addSuccessBlock:v27];
  _Block_release(v27);
}

void sub_1000E730C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1000209F4();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v26 = type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v28 = v27;
  uint64_t v30 = *(void *)(v29 + 64);
  __chkstk_darwin(v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))((char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v26);
  unint64_t v32 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v33 + v32, (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0), v26);
  id v34 = v25;
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  swift_release();
  sub_100020FDC();
}

void sub_1000E7418()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  sub_100011D4C();
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v3 = type metadata accessor for LogMessage();
  sub_100044798(v3);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v20 = type metadata accessor for JSFollowUp();
  v19[0] = v1;
  id v4 = v1;
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(v19, v20);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v17[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v17);
    v11._uint64_t countAndFlagsBits = 5972026;
    v11._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t MetatypeMetadata = &type metadata for String;
    v17[0] = v7;
    v17[1] = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v17);
    v12._uint64_t countAndFlagsBits = 93;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(v19, v20);
    uint64_t v13 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v17[0] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v17);
    v14._uint64_t countAndFlagsBits = 58;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v19);
  LogMessage.init(stringLiteral:)();
  uint64_t v15 = static os_log_type_t.default.getter();
  sub_10004841C(v15);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1001C3110;
  *(void *)(v16 + 56) = &type metadata for Bool;
  *(unsigned char *)(v16 + 32) = 1;
  sub_1000D4C74(v16);
  swift_bridgeObjectRelease();
  sub_100020FDC();
}

uint64_t sub_1000E7710()
{
  sub_100045F40();
  swift_getObjectType();
  sub_10004D510(0, (unint64_t *)&qword_10022FE70);
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_1000E77AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v10 = static RunLoopWorkerThread.current.getter();
  if (v10)
  {
    uint64_t v11 = v10;
    sub_10004D510(0, (unint64_t *)&qword_10022FE70);
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v13 = (void *)swift_allocObject();
    uint64_t v13[2] = v12;
    v13[3] = a3;
    v13[4] = a4;
    v13[5] = a5;
    v13[6] = v11;
    v13[7] = a6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v14 = sub_100010358(0, (uint64_t)sub_1000EA02C, (uint64_t)v13);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v14 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000002CLL, 0x80000001001D0CC0, 0, 0);
    swift_willThrow();
  }
  return v14;
}

void sub_1000E792C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v58 = a2;
  uint64_t v56 = a8;
  uint64_t v11 = type metadata accessor for JSCallable();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v57 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v14 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (void *)Strong;
    id v17 = [objc_allocWithZone((Class)AMSFollowUp) init];
    uint64_t v51 = a3;
    NSString v18 = v17;
    id v54 = v17;
    id v19 = sub_1000E9A90(a5);
    id v55 = v19;
    NSString v20 = String._bridgeToObjectiveC()();
    id v52 = [v18 pendingFollowUpWithIdentifier:v20 account:v19];

    uint64_t v21 = v56;
    uint64_t v22 = v57;
    uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v53(v57, v51, v11);
    uint64_t v23 = *(unsigned __int8 *)(v12 + 80);
    v47[0] = v11;
    uint64_t v50 = ((v23 + 32) & ~v23) + v13;
    uint64_t v24 = (v23 + 32) & ~v23;
    uint64_t v51 = v24;
    uint64_t v49 = v23 | 7;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v21;
    *(void *)(v25 + 24) = v16;
    uint64_t v48 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
    v48(v25 + v24, v22, v11);
    uint64_t v63 = sub_1000EA05C;
    uint64_t v64 = v25;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v60 = 1107296256;
    v47[1] = &v61;
    uint64_t v61 = sub_100181204;
    uint64_t MetatypeMetadata = &unk_100211ED8;
    uint64_t v26 = _Block_copy(&aBlock);
    uint64_t v27 = v21;
    swift_retain();
    id v28 = v16;
    swift_release();
    id v29 = v52;
    [v52 addErrorBlock:v26];
    _Block_release(v26);
    uint64_t v30 = v47[0];
    v53(v22, v58, v47[0]);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v27;
    *(void *)(v31 + 24) = v28;
    v48(v31 + v51, v22, v30);
    uint64_t v63 = sub_1000EA0D4;
    uint64_t v64 = v31;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v60 = 1107296256;
    uint64_t v61 = sub_1000E84B0;
    uint64_t MetatypeMetadata = &unk_100211F28;
    unint64_t v32 = _Block_copy(&aBlock);
    swift_retain();
    id v33 = v28;
    swift_release();
    [v29 addSuccessBlock:v32];
    _Block_release(v32);
  }
  else
  {
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    long long aBlock = a9;
    id v34 = (id)AMSLogKey();
    if (v34)
    {
      uint64_t v35 = v34;
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v38 = v37;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      sub_100049788(&aBlock, (uint64_t)MetatypeMetadata);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t v66 = (void *)swift_getMetatypeMetadata();
      v65[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v65);
      v41._uint64_t countAndFlagsBits = 5972026;
      v41._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      uint64_t v66 = &type metadata for String;
      v65[0] = v36;
      v65[1] = v38;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v65);
      v42._uint64_t countAndFlagsBits = 93;
      v42._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v43._uint64_t countAndFlagsBits = 0;
      v43._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      sub_100049788(&aBlock, (uint64_t)MetatypeMetadata);
      uint64_t v44 = swift_getDynamicType();
      uint64_t v66 = (void *)swift_getMetatypeMetadata();
      v65[0] = v44;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v65);
      v45._uint64_t countAndFlagsBits = 58;
      v45._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&aBlock);
    LogMessage.init(stringLiteral:)();
    uint64_t v46 = static os_log_type_t.error.getter();
    sub_10004841C(v46);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000E7FC4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for JSCallable();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  *(void *)(v11 + ((v9 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  id v12 = a3;
  id v13 = a1;
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  return swift_release();
}

uint64_t sub_1000E812C(void *a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v23 = type metadata accessor for JSFollowUp();
  v22[0] = a1;
  a1;
  id v3 = (id)AMSLogKey();
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v8._uint64_t countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v8);
    sub_100049788(v22, v23);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v20);
    v10._uint64_t countAndFlagsBits = 5972026;
    v10._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    uint64_t MetatypeMetadata = &type metadata for String;
    v20[0] = v5;
    v20[1] = v7;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v20);
    v11._uint64_t countAndFlagsBits = 93;
    v11._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v22, v23);
    uint64_t v13 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v20);
    v14._uint64_t countAndFlagsBits = 58;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v22);
  LogMessage.init(stringLiteral:)();
  uint64_t v15 = static os_log_type_t.default.getter();
  sub_10004841C(v15);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1001C3110;
  id v17 = sub_1000E67E0();
  uint64_t v18 = sub_10006D870(v17);

  *(void *)(v16 + 56) = sub_100043478(&qword_10022D7B0);
  *(void *)(v16 + 32) = v18;
  sub_1000D4C74(v16);
  return swift_bridgeObjectRelease();
}

void sub_1000E84B0(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

id sub_1000E8530(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;
  if (a4) {
    a4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v11 = a1;
  Swift::String v12 = (void *)a5(v8, v10, a4);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1000E85EC()
{
  swift_getObjectType();
  sub_10004D510(0, (unint64_t *)&qword_10022FE70);
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_1000E8680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v6 = static RunLoopWorkerThread.current.getter();
  if (v6)
  {
    uint64_t v7 = v6;
    sub_10004D510(0, (unint64_t *)&qword_10022FE70);
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v9 = (void *)swift_allocObject();
    _OWORD v9[2] = v8;
    v9[3] = a3;
    v9[4] = v7;
    v9[5] = a4;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v10 = sub_100010358(0, (uint64_t)sub_1000E9D20, (uint64_t)v9);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v10 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000002CLL, 0x80000001001D0CC0, 0, 0);
    swift_willThrow();
  }
  return v10;
}

void sub_1000E87E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void **a7)
{
  uint64_t v59 = a3;
  uint64_t v54 = a2;
  uint64_t v10 = type metadata accessor for JSCallable();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  id v55 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v47 - v14;
  uint64_t v16 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v16 - 8);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v57 = Strong;
    id v53 = [objc_allocWithZone((Class)AMSFollowUp) init];
    id v58 = sub_1000E8E84(a5, v53);
    uint64_t v56 = v15;
    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v49(v15, v59, v10);
    uint64_t v18 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v51 = v18 | 7;
    uint64_t v19 = swift_allocObject();
    uint64_t v48 = a6;
    id v20 = v57;
    *(void *)(v19 + 16) = a6;
    *(void *)(v19 + 24) = v20;
    uint64_t v50 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
    uint64_t v21 = v56;
    v50(v19 + ((v18 + 32) & ~v18), v56, v10);
    uint64_t v64 = sub_1000E9D40;
    uint64_t v65 = v19;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v61 = 1107296256;
    id v52 = &v62;
    uint64_t v62 = sub_100181204;
    uint64_t MetatypeMetadata = &unk_100211DC0;
    uint64_t v22 = _Block_copy(&aBlock);
    swift_retain();
    id v57 = v57;
    swift_release();
    [v58 addErrorBlock:v22];
    _Block_release(v22);
    uint64_t v23 = v49;
    v49(v21, v59, v10);
    uint64_t v24 = v55;
    v23(v55, v54, v10);
    uint64_t v25 = (v18 + 24) & ~v18;
    unint64_t v26 = (v12 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v48;
    uint64_t v28 = v27 + v25;
    id v29 = (void (*)(unint64_t, char *, uint64_t))v50;
    v50(v28, v56, v10);
    id v30 = v57;
    *(void *)(v27 + v26) = v57;
    v29(v27 + ((v18 + v26 + 8) & ~v18), v24, v10);
    uint64_t v64 = sub_1000E9E0C;
    uint64_t v65 = v27;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v61 = 1107296256;
    uint64_t v62 = (void (*)(uint64_t, void *))sub_1000FE3F8;
    uint64_t MetatypeMetadata = &unk_100211E10;
    uint64_t v31 = _Block_copy(&aBlock);
    swift_retain();
    id v32 = v30;
    swift_release();
    id v33 = v58;
    [v58 addSuccessBlock:v31];
    _Block_release(v31);
  }
  else
  {
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    long long aBlock = a7;
    id v34 = (id)AMSLogKey();
    if (v34)
    {
      uint64_t v35 = v34;
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v38 = v37;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      sub_100049788(&aBlock, (uint64_t)MetatypeMetadata);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t v67 = (void *)swift_getMetatypeMetadata();
      v66[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v66);
      v41._uint64_t countAndFlagsBits = 5972026;
      v41._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      uint64_t v67 = &type metadata for String;
      v66[0] = v36;
      v66[1] = v38;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v66);
      v42._uint64_t countAndFlagsBits = 93;
      v42._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v43._uint64_t countAndFlagsBits = 0;
      v43._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      sub_100049788(&aBlock, (uint64_t)MetatypeMetadata);
      uint64_t v44 = swift_getDynamicType();
      uint64_t v67 = (void *)swift_getMetatypeMetadata();
      v66[0] = v44;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v66);
      v45._uint64_t countAndFlagsBits = 58;
      v45._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&aBlock);
    LogMessage.init(stringLiteral:)();
    uint64_t v46 = static os_log_type_t.error.getter();
    sub_10004841C(v46);
    swift_bridgeObjectRelease();
  }
}

id sub_1000E8E84(uint64_t a1, void *a2)
{
  if (!a1)
  {
    long long v7 = 0u;
    long long v8 = 0u;
    goto LABEL_6;
  }
  sub_10004D120(0x746E756F636361, 0xE700000000000000, a1, &v7);
  if (!*((void *)&v8 + 1))
  {
LABEL_6:
    sub_1000423CC((uint64_t)&v7);
    goto LABEL_7;
  }
  type metadata accessor for JSAccount();
  if (swift_dynamicCast())
  {
    id v3 = [a2 pendingFollowUpsForAccount:*(void *)&v6[OBJC_IVAR____TtC14amsengagementd9JSAccount_account]];

    return v3;
  }
LABEL_7:
  id v5 = [a2 pendingFollowUps];
  return v5;
}

void sub_1000E8F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1000209F4();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v28 = type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v30 = v29;
  uint64_t v32 = *(void *)(v31 + 64);
  __chkstk_darwin(v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))((char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v28);
  unint64_t v34 = (*(unsigned __int8 *)(v30 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v35 + v34, (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v28);
  *(void *)(v35 + ((v32 + v34 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
  id v36 = v25;
  swift_errorRetain();
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  swift_release();
  sub_100020FDC();
}

void sub_1000E90A8()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  id v3 = v2;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  sub_100011D4C();
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  void v24[3] = type metadata accessor for JSFollowUp();
  v24[0] = v3;
  id v6 = v3;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    long long v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    uint64_t v12 = sub_100046824();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    v13._uint64_t countAndFlagsBits = 5972026;
    v13._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    uint64_t MetatypeMetadata = &type metadata for String;
    v22[0] = v9;
    v22[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    v14._uint64_t countAndFlagsBits = 93;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    uint64_t v15 = sub_100046824();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    v16._uint64_t countAndFlagsBits = 58;
    v16._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v24);
  LogMessage.init(stringLiteral:)();
  uint64_t v17 = static os_log_type_t.error.getter();
  sub_10004841C(v17);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1001C3110;
  id v19 = objc_allocWithZone((Class)type metadata accessor for JSError());
  swift_errorRetain();
  id v20 = sub_100027FB8(v1);
  uint64_t v21 = sub_100028288();

  *(void *)(v18 + 56) = sub_100043478(&qword_10022D7B0);
  *(void *)(v18 + 32) = v21;
  sub_1000D4C74(v18);
  swift_bridgeObjectRelease();
  sub_100020FDC();
}

uint64_t sub_1000E93B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v26[0] = a4;
  v26[1] = a2;
  uint64_t v8 = type metadata accessor for JSCallable();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  Swift::String v14 = (char *)v26 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15((char *)v26 - v13, a3, v8);
  v15(v12, a5, v8);
  uint64_t v16 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = (v16 + 24) & ~v16;
  unint64_t v18 = (v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = (v16 + v18 + 8) & ~v16;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  uint64_t v21 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v21(v20 + v17, v14, v8);
  uint64_t v22 = (void *)v26[0];
  *(void *)(v20 + v18) = v26[0];
  v21(v20 + v19, v12, v8);
  id v23 = a1;
  id v24 = v22;
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  return swift_release();
}

uint64_t sub_1000E9588()
{
  uint64_t v0 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v0 - 8);
  sub_10004D510(0, &qword_100230308);
  static Array._conditionallyBridgeFromObjectiveC(_:result:)();
  sub_100043478(&qword_10022D808);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1001C3110;
  uint64_t v2 = type metadata accessor for JSError();
  uint64_t v3 = sub_1000DE184(4, 0xD000000000000018, 0x80000001001D1270, 0, 0);
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 32) = v3;
  sub_1000D4C74(v1);
  return swift_bridgeObjectRelease();
}

id sub_1000E9A90(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v2 = v1;
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_100042ADC(0x746E756F636361, 0xE700000000000000);
  if ((v5 & 1) == 0) {
    return 0;
  }
  sub_100043520(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v11);
  sub_100043478(&qword_10022D7B0);
  if ((sub_100045898() & 1) == 0) {
    return 0;
  }
  sub_10004D120(1684632420, 0xE400000000000000, v10, &v11);
  swift_bridgeObjectRelease();
  if (!v12)
  {
    sub_1000423CC((uint64_t)&v11);
    return 0;
  }
  if ((sub_100045898() & 1) == 0) {
    return 0;
  }
  id v6 = *(void **)(v2 + OBJC_IVAR____TtC14amsengagementd10JSFollowUp_accountStore);
  id v7 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v10];
  id v8 = objc_msgSend(v6, "ams_iTunesAccountWithDSID:", v7);

  return v8;
}

void sub_1000E9BC0()
{
}

id sub_1000E9C00()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSFollowUp();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000E9C80(uint64_t a1)
{
  return sub_1000E8680(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1000E9CA0()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E9CD8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

void sub_1000E9D20()
{
  sub_100043C6C();
  sub_1000E87E4(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1000E9D40(uint64_t a1)
{
  return sub_1000EA07C(a1, &unk_100211E70, sub_1000E9F9C);
}

uint64_t sub_1000E9D60()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v3 = v2;
  sub_100048778();
  swift_release();
  uint64_t v4 = *(void (**)(void))(v3 + 8);
  sub_10004874C();
  v4();

  sub_10004874C();
  v4();
  uint64_t v5 = sub_100048170();
  return _swift_deallocObject(v5, v6, v7);
}

uint64_t sub_1000E9E0C(void *a1)
{
  uint64_t v3 = type metadata accessor for JSCallable();
  sub_100044798(v3);
  sub_10004B4B8();
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + v7);
  return sub_1000E93B8(a1, v6, v1 + v5, v8, v1 + v4);
}

uint64_t sub_1000E9E84()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v3 = v2;
  sub_100048778();

  uint64_t v4 = *(void (**)(void))(v3 + 8);
  sub_10004874C();
  v4();

  sub_10004874C();
  v4();
  uint64_t v5 = sub_100048170();
  return _swift_deallocObject(v5, v6, v7);
}

uint64_t sub_1000E9F30()
{
  uint64_t v0 = type metadata accessor for JSCallable();
  sub_100044798(v0);
  sub_10004B4B8();
  return sub_1000E9588();
}

void sub_1000E9F9C()
{
}

uint64_t sub_1000E9FB8(uint64_t a1)
{
  return sub_1000E77AC(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1000E9FDC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

void sub_1000EA02C()
{
  sub_100043C6C();
  sub_1000E792C(v1, v2, v3, v4, v5, v6, v7, *(void *)(v0 + 48), *(void ***)(v0 + 56));
}

uint64_t sub_1000EA05C(uint64_t a1)
{
  return sub_1000EA07C(a1, &unk_100211F88, sub_1000EA210);
}

#error "1000EA0BC: call analysis failed (funcsize=21)"

uint64_t sub_1000EA0D4(void *a1)
{
  uint64_t v2 = type metadata accessor for JSCallable();
  sub_100044E90(v2);
  sub_10004724C();
  return sub_1000E7FC4(a1, v3, v4, v5);
}

uint64_t sub_1000EA11C()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  sub_10004520C();
  sub_10004874C();
  v2();

  uint64_t v3 = sub_100048170();
  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_1000EA1B4()
{
  uint64_t v0 = type metadata accessor for JSCallable();
  sub_100044798(v0);
  uint64_t v1 = (void *)sub_100046304();
  return sub_1000E812C(v1);
}

void sub_1000EA210()
{
}

void sub_1000EA21C()
{
  uint64_t v0 = type metadata accessor for JSCallable();
  sub_100044798(v0);
  sub_100046304();
  sub_1000E90A8();
}

uint64_t sub_1000EA288(void *a1)
{
  return sub_1000E6E58(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1000EA2A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

void sub_1000EA2F8()
{
  sub_100043C6C();
  sub_1000E6FA8(v1, v2, v3, v4, v5, v6, v7, *(void *)(v0 + 48));
}

uint64_t sub_1000EA31C(uint64_t a1)
{
  return sub_1000EA07C(a1, &unk_1002120A0, sub_1000EA36C);
}

uint64_t sub_1000EA340()
{
  return sub_1000EA444(&unk_100212078, sub_1000EA364);
}

void sub_1000EA36C()
{
}

uint64_t sub_1000EA378(void *a1)
{
  return sub_1000E68E0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1000EA398()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1000EA3E0()
{
  sub_100043C6C();
  sub_1000E6A18(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1000EA400(uint64_t a1)
{
  return sub_1000EA07C(a1, &unk_1002121B8, sub_1000EA36C);
}

uint64_t sub_1000EA424()
{
  return sub_1000EA444(&unk_100212190, sub_1000EA364);
}

#error "1000EA488: call analysis failed (funcsize=22)"

uint64_t sub_1000EA4A0()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 24) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;

  sub_10004874C();
  v8();
  return _swift_deallocObject(v0, v6, v7);
}

void sub_1000EA53C()
{
  uint64_t v0 = type metadata accessor for JSCallable();
  sub_100044E90(v0);
  sub_1000E7418();
}

uint64_t sub_1000EA5B0(uint64_t a1, void *a2)
{
  id v4 = sub_100057CD4();
  v9._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = a1;
  v5._object = a2;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v9._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v9)._countAndFlagsBits;

  return countAndFlagsBits;
}

id sub_1000EA6CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSLocalize();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000EA700()
{
  swift_getObjectType();
  sub_100010084();
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_1000EA790(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v10 - 8);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v11 = static RunLoopWorkerThread.current.getter();
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v30 = a5;
    uint64_t v35 = a1;
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    unint64_t v34 = (void *)type metadata accessor for JSLocation();
    v33[0] = a2;
    a2;
    id v13 = (id)AMSLogKey();
    if (v13)
    {
      Swift::String v14 = v13;
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      sub_100049788(v33, (uint64_t)v34);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v31[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v31);
      v20._uint64_t countAndFlagsBits = 5972026;
      v20._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      uint64_t MetatypeMetadata = &type metadata for String;
      v31[0] = v15;
      v31[1] = v17;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v31);
      v21._uint64_t countAndFlagsBits = 93;
      v21._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v23._uint64_t countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      sub_100049788(v33, (uint64_t)v34);
      uint64_t v24 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v31[0] = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v31);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v33);
    LogMessage.init(stringLiteral:)();
    unint64_t v34 = &type metadata for String;
    v33[0] = a3;
    v33[1] = a4;
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)v33);
    uint64_t v26 = static os_log_type_t.default.getter();
    sub_10004841C(v26);
    swift_bridgeObjectRelease();
    sub_100010084();
    uint64_t v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v28 = (void *)swift_allocObject();
    void v28[2] = v27;
    void v28[3] = a3;
    v28[4] = a4;
    v28[5] = v12;
    v28[6] = v30;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v22 = sub_100010358(v35, (uint64_t)sub_1000EB5D0, (uint64_t)v28);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v22 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000002CLL, 0x80000001001D0CC0, 0, 0);
    swift_willThrow();
  }
  return v22;
}

void sub_1000EAC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v34 = a2;
  uint64_t v35 = a7;
  uint64_t v9 = type metadata accessor for JSCallable();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v12 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v14 = (void *)Strong;
    uint64_t v15 = self;
    NSString v16 = String._bridgeToObjectiveC()();
    LODWORD(v15) = [v15 authorizationStatusForBundleIdentifier:v16];

    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v9);
    unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 28) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v14;
    *(_DWORD *)(v18 + 24) = v15;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v17, (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    id v19 = v14;
    dispatch thunk of RunLoopWorkerThread.schedule(task:)();
    swift_release();
  }
  else
  {
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    v38[0] = a8;
    id v20 = (id)AMSLogKey();
    if (v20)
    {
      Swift::String v21 = v20;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v25._uint64_t countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      sub_100049788(v38, MetatypeMetadata);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t v37 = (void *)swift_getMetatypeMetadata();
      v36[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v36);
      v27._uint64_t countAndFlagsBits = 5972026;
      v27._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      uint64_t v37 = &type metadata for String;
      v36[0] = v22;
      v36[1] = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v36);
      v28._uint64_t countAndFlagsBits = 93;
      v28._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v29._uint64_t countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      sub_100049788(v38, MetatypeMetadata);
      uint64_t v30 = swift_getDynamicType();
      uint64_t v37 = (void *)swift_getMetatypeMetadata();
      v36[0] = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v36);
      v31._uint64_t countAndFlagsBits = 58;
      v31._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v38);
    LogMessage.init(stringLiteral:)();
    uint64_t v32 = static os_log_type_t.error.getter();
    sub_10004841C(v32);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000EB080(void *a1, int a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000EB468(a2);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v26 = type metadata accessor for JSLocation();
  v25[0] = a1;
  id v6 = a1;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v25, v26);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    v14._uint64_t countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v9;
    v23[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    v15._uint64_t countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(v25, v26);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    v18._uint64_t countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v25);
  LogMessage.init(stringLiteral:)();
  uint64_t v19 = sub_100043478(&qword_10022D7B0);
  uint64_t v26 = v19;
  v25[0] = v5;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)v25);
  uint64_t v20 = static os_log_type_t.default.getter();
  sub_10004841C(v20);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1001C3110;
  *(void *)(v21 + 56) = v19;
  *(void *)(v21 + 32) = v5;
  sub_10001147C(v21);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000EB468(int a1)
{
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = 0xD000000000000013;
  *(void *)(inited + 40) = 0x80000001001D1510;
  *(void *)(inited + 72) = &type metadata for Int32;
  *(_DWORD *)(inited + 48) = a1;
  return Dictionary.init(dictionaryLiteral:)();
}

id sub_1000EB4FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSLocation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000EB530(void *a1)
{
  return sub_1000EA790(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1000EB550()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000EB588()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

void sub_1000EB5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000EAC00(a1, a2, a3, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

uint64_t sub_1000EB5F4()
{
  uint64_t v1 = type metadata accessor for JSCallable();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 28) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000EB6C0()
{
  type metadata accessor for JSCallable();
  uint64_t v1 = *(void **)(v0 + 16);
  int v2 = *(_DWORD *)(v0 + 24);
  return sub_1000EB080(v1, v2);
}

uint64_t sub_1000EB738(uint64_t a1, uint64_t a2)
{
  return sub_100021590(a1, a2, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
}

uint64_t sub_1000EB768(uint64_t a1, uint64_t a2)
{
  return sub_100021590(a1, a2, (uint64_t (*)(void))&static os_log_type_t.info.getter);
}

void sub_1000EB798()
{
}

id sub_1000EB7D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSLog();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000EB85C(uint64_t result, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 32);
  if (a3) {
    return sub_1000EB8B0(v3, (uint64_t)a3);
  }
  if (a2) {
    return sub_1000EB930(v3, (uint64_t)a2);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000EB8B0(uint64_t a1, uint64_t a2)
{
  sub_100043478((uint64_t *)&unk_100233150);
  uint64_t v4 = sub_100021180();
  *uint64_t v5 = a2;
  return _swift_continuation_throwingResumeWithError(a1, v4);
}

uint64_t sub_1000EB90C(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(a1 + 64) + 40) = a2;
  return _swift_continuation_throwingResume();
}

uint64_t sub_1000EB930(uint64_t a1, uint64_t a2)
{
  **(void **)(*(void *)(a1 + 64) + 40) = a2;
  return _swift_continuation_throwingResume();
}

uint64_t sub_1000EB950(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v72 = a3;
  uint64_t v73 = a4;
  uint64_t v69 = a2;
  uint64_t v70 = a1;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  sub_100020EAC();
  uint64_t v71 = type metadata accessor for Bag();
  sub_100020DEC();
  uint64_t v7 = v6;
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v10);
  uint64_t v11 = sub_100043478(&qword_10022D340);
  __chkstk_darwin(v11 - 8);
  sub_100020EAC();
  uint64_t v14 = v13 - v12;
  Swift::String v15 = v4;
  Swift::String v16 = &v4[OBJC_IVAR____TtC14amsengagementd11JSMarketing_bag];
  uint64_t v17 = (void *)Bag.amsBag.getter();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v17 BOOLForKey:v18];
  swift_unknownObjectRelease();

  v76[0] = 0;
  id v20 = [v19 valueWithError:v76];

  if (v20)
  {
    id v21 = v76[0];
    unsigned int v22 = [v20 BOOLValue];

    if (v22)
    {
      uint64_t v23 = type metadata accessor for TaskPriority();
      uint64_t v68 = v14;
      sub_100021AC0(v14, 1, 1, v23);
      uint64_t v24 = *(void **)&v15[OBJC_IVAR____TtC14amsengagementd11JSMarketing_account];
      uint64_t v66 = *(void **)&v15[OBJC_IVAR____TtC14amsengagementd11JSMarketing_clientInfo];
      uint64_t v67 = v24;
      uint64_t v25 = *(void *)&v15[OBJC_IVAR____TtC14amsengagementd11JSMarketing_mediaClient];
      uint64_t v64 = *(void *)&v15[OBJC_IVAR____TtC14amsengagementd11JSMarketing_mediaClient + 8];
      uint64_t v65 = v25;
      uint64_t v26 = v7;
      Swift::String v27 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      uint64_t v63 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      v27(v63, v16, v71);
      unint64_t v28 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      unint64_t v29 = (v9 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v30 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v33 = (v32 + 23) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v34 = (char *)swift_allocObject();
      *((void *)v34 + 2) = 0;
      *((void *)v34 + 3) = 0;
      uint64_t v35 = v71;
      *((void *)v34 + 4) = v72;
      *((void *)v34 + 5) = v15;
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v34[v28], v63, v35);
      id v36 = &v34[v29];
      uint64_t v37 = v64;
      *(void *)id v36 = v65;
      *((void *)v36 + 1) = v37;
      uint64_t v38 = v67;
      *(void *)&v34[v30] = v67;
      Swift::String v39 = v66;
      *(void *)&v34[v31] = v66;
      uint64_t v40 = &v34[v32];
      uint64_t v41 = v69;
      *(void *)uint64_t v40 = v70;
      *((void *)v40 + 1) = v41;
      *(void *)&v34[v33] = v73;
      id v42 = v38;
      id v43 = v39;
      swift_bridgeObjectRetain();
      id v44 = v72;
      Swift::String v45 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10016D650(v68, (uint64_t)&unk_100230410, (uint64_t)v34);
      return swift_release();
    }
  }
  else
  {
    id v47 = v76[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v48 = type metadata accessor for LogMessage();
  sub_100044798(v48);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v77 = type metadata accessor for JSMarketing();
  v76[0] = v15;
  v15;
  id v49 = (id)AMSLogKey();
  if (v49)
  {
    uint64_t v50 = v49;
    uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v53 = v52;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v54._uint64_t countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v54);
    sub_100049788(v76, v77);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v74[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v74);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v74[0] = v51;
    v74[1] = v53;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v74);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v56._uint64_t countAndFlagsBits = 0;
    v56._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v56);
    sub_100049788(v76, v77);
    uint64_t v57 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v74[0] = v57;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v74);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v76);
  sub_100043B80();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v58 = static os_log_type_t.error.getter();
  sub_10004841C(v58);
  swift_bridgeObjectRelease();
  uint64_t v59 = sub_100046320();
  sub_10004D120(v59, v60, v73, v61);
  if (!v77) {
    return sub_1000423CC((uint64_t)v76);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    type metadata accessor for ContentManager();
    sub_1000EDB20();
    sub_100021180();
    *uint64_t v62 = 1;
    sub_1000950B8();
    swift_errorRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000EBFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 1152) = v13;
  *(_OWORD *)(v8 + 1136) = v12;
  *(_OWORD *)(v8 + 1120) = v11;
  *(void *)(v8 + 1112) = a8;
  *(void *)(v8 + 1104) = a7;
  *(void *)(v8 + 1096) = a6;
  *(void *)(v8 + 1088) = a5;
  *(void *)(v8 + 1080) = a4;
  type metadata accessor for LogMessage.StringInterpolation();
  *(void *)(v8 + 1160) = swift_task_alloc();
  return _swift_task_switch(sub_1000EC070, 0, 0);
}

uint64_t sub_1000EC070()
{
  sub_10010A380(*(id *)(v0 + 1080), (unint64_t *)(v0 + 352));
  uint64_t v1 = *(void **)(v0 + 1088);
  Swift::String v27 = (void *)(v0 + 656);
  *(void *)(v0 + 1168) = sub_100043478(&qword_10022E560);
  uint64_t v2 = type metadata accessor for LogMessage();
  sub_100044798(v2);
  *(void *)(v0 + 1176) = *(void *)(v3 + 72);
  *(_DWORD *)(v0 + 1232) = *(_DWORD *)(v4 + 80);
  *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3130;
  uint64_t v5 = type metadata accessor for JSMarketing();
  *(void *)(v0 + 1184) = v5;
  *(void *)(v0 + 680) = v5;
  *(void *)(v0 + 656) = v1;
  id v6 = v1;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v27, v5);
    uint64_t DynamicType = swift_getDynamicType();
    *(void *)(v0 + 584) = swift_getMetatypeMetadata();
    *(void *)(v0 + 560) = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 560);
    sub_100020E44();
    *(void *)(v0 + 488) = &type metadata for String;
    *(void *)(v0 + 464) = v25;
    *(void *)(v0 + 472) = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 464);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049788(v27, v5);
    uint64_t v12 = swift_getDynamicType();
    *(void *)(v0 + 712) = swift_getMetatypeMetadata();
    *(void *)(v0 + 688) = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 688);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v27);
  sub_100043B80();
  *(void *)(v0 + 744) = &type metadata for MarketingItemRequest;
  uint64_t v13 = swift_allocObject();
  *(void *)(v0 + 720) = v13;
  memcpy((void *)(v13 + 16), (const void *)(v0 + 352), 0x48uLL);
  sub_1000EDF54(v0 + 352);
  static LogMessage.safe(_:)();
  sub_1000423CC(v0 + 720);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v26 = *(void *)(v0 + 1120);
  uint64_t v28 = *(void *)(v0 + 1128);
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_10004841C(v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = Bag.amsBag.getter();
  uint64_t v16 = *(void *)(v0 + 400);
  *(void *)(v0 + 1192) = *(void *)(v0 + 392);
  *(void *)(v0 + 1200) = v16;
  id v17 = objc_allocWithZone((Class)AMSMarketingItemTask);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v18 = sub_1000EDFC0(v15);
  *(void *)(v0 + 1208) = v18;
  objc_msgSend(v18, "setAccount:", v26, v16);
  [v18 setClientInfo:v28];
  Class isa = *(Class *)(v0 + 352);
  if (isa)
  {
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_1000B07B8(v20);
    swift_bridgeObjectRelease();
    sub_100043478(&qword_10022F110);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [v18 setContextInfo:isa];

  if (*(void *)(v0 + 384))
  {
    swift_bridgeObjectRetain();
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v21 = 0;
  }
  [v18 setOfferHints:v21];

  id v22 = [v18 performWithFetchOnly];
  *(void *)(v0 + 1216) = v22;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 1072;
  *(void *)(v0 + 24) = sub_1000EC8D0;
  uint64_t v23 = swift_continuation_init();
  *(void *)(v0 + 424) = _NSConcreteStackBlock;
  *(void *)(v0 + 432) = 0x40000000;
  *(void *)(v0 + 440) = sub_1000EB85C;
  *(void *)(v0 + 448) = &unk_100212298;
  *(void *)(v0 + 456) = v23;
  [v22 resultWithCompletion:v0 + 424];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_1000EC8D0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 1224) = v2;
  if (v2)
  {
    sub_1000EE0C0(v1 + 352);
    uint64_t v3 = sub_1000ED4E8;
  }
  else
  {
    uint64_t v3 = sub_1000EC9E8;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000EC9E8()
{
  uint64_t v25 = v0;
  uint64_t v1 = (void *)v0[134];
  uint64_t v24 = 0;
  sub_1000EE12C();
  static Array._conditionallyBridgeFromObjectiveC(_:result:)();

  uint64_t v2 = (void *)v0[152];
  sub_1000EE0C0((uint64_t)(v0 + 44));

  uint64_t v3 = v0 + 66;
  id v22 = v0 + 98;
  uint64_t v23 = v0 + 118;
  uint64_t v4 = (void *)v0[151];
  sub_1000EDB20();
  sub_100021180();
  *uint64_t v5 = 0;
  swift_willThrow();

  id v6 = (void *)v0[136];
  sub_100043478(&qword_10022E560);
  uint64_t v7 = type metadata accessor for LogMessage();
  sub_100044798(v7);
  *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3130;
  v0[121] = type metadata accessor for JSMarketing();
  v0[118] = v6;
  id v8 = v6;
  id v9 = (id)AMSLogKey();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v23, v0[121]);
    uint64_t DynamicType = swift_getDynamicType();
    v0[77] = swift_getMetatypeMetadata();
    v0[74] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 74));
    sub_100020E44();
    v0[81] = &type metadata for String;
    v0[78] = v11;
    v0[79] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    uint64_t v3 = v0 + 66;
    sub_1000423CC((uint64_t)(v0 + 78));
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049788(v23, v0[121]);
    uint64_t v15 = swift_getDynamicType();
    v0[65] = swift_getMetatypeMetadata();
    v0[62] = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 62));
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v23);
  sub_100043B80();
  swift_getErrorValue();
  v0[101] = v0[127];
  sub_10003BAA4(v22);
  sub_1000456E0();
  sub_100049DF8();
  v16();
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)v22);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v17 = static os_log_type_t.error.getter();
  sub_10004841C(v17);
  swift_bridgeObjectRelease();
  sub_10004685C(v3);
  if (v0[69])
  {
    if (swift_dynamicCast())
    {
      sub_10004DD7C();
      uint64_t v18 = sub_100021180();
      sub_100045234(v18, v19);
      swift_errorRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_errorRelease();
    }
  }
  else
  {
    swift_errorRelease();
    sub_1000423CC((uint64_t)v3);
  }
  swift_task_dealloc();
  sub_100040954();
  return v20();
}

uint64_t sub_1000ED4E8()
{
  uint64_t v1 = v0 + 66;
  uint64_t v17 = v0 + 98;
  uint64_t v18 = v0 + 118;
  uint64_t v2 = (void *)v0[152];
  uint64_t v3 = (void *)v0[151];
  swift_willThrow();

  uint64_t v4 = (void *)v0[136];
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3130;
  v0[121] = type metadata accessor for JSMarketing();
  v0[118] = v4;
  id v6 = v4;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    id v8 = v7;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v18, v0[121]);
    uint64_t DynamicType = swift_getDynamicType();
    v0[77] = swift_getMetatypeMetadata();
    v0[74] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 74));
    sub_100020E44();
    sub_10005158C((uint64_t)&type metadata for String);
    uint64_t v1 = v0 + 66;
    sub_1000423CC((uint64_t)(v0 + 78));
    sub_1000208D8();
    sub_100020B40();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049788(v18, v0[121]);
    uint64_t v10 = swift_getDynamicType();
    v0[65] = swift_getMetatypeMetadata();
    v0[62] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 62));
    sub_100020E94();
    sub_100020B40();
  }
  sub_10004377C((uint64_t)v18);
  sub_10004BF50();
  swift_getErrorValue();
  v0[101] = v0[127];
  sub_10003BAA4(v17);
  sub_1000456E0();
  sub_100049DF8();
  v11();
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)v17);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v12 = static os_log_type_t.error.getter();
  sub_10004841C(v12);
  swift_bridgeObjectRelease();
  sub_10004685C(v1);
  if (v0[69])
  {
    if (swift_dynamicCast())
    {
      sub_10004DD7C();
      sub_1000EDB20();
      uint64_t v13 = sub_100021180();
      sub_100045234(v13, v14);
      swift_errorRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_errorRelease();
    }
  }
  else
  {
    swift_errorRelease();
    sub_1000423CC((uint64_t)v1);
  }
  swift_task_dealloc();
  sub_100040954();
  return v15();
}

void sub_1000ED944()
{
}

id sub_1000ED984()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSMarketing();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000EDA5C()
{
  return type metadata accessor for JSMarketing();
}

uint64_t sub_1000EDA64()
{
  uint64_t result = type metadata accessor for Bag();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1000EDB20()
{
  unint64_t result = qword_100230400;
  if (!qword_100230400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100230400);
  }
  return result;
}

uint64_t sub_1000EDB6C()
{
  uint64_t v1 = type metadata accessor for Bag();
  sub_100020DEC();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 48) & ~v6;
  uint64_t v11 = v6 | 7;
  unint64_t v8 = (((*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v11);
}

uint64_t sub_1000EDC98(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Bag();
  sub_100044798(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = v1[3];
  uint64_t v18 = v1[2];
  uint64_t v10 = v1[5];
  uint64_t v16 = v1[4];
  uint64_t v11 = (uint64_t)v1 + v8;
  uint64_t v12 = *(void *)((char *)v1 + v9);
  uint64_t v13 = *(void *)((char *)v1 + v9 + 8);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_1000EDE0C;
  return sub_1000EBFB8(a1, v18, v17, v16, v10, v11, v12, v13);
}

uint64_t sub_1000EDE0C()
{
  swift_task_dealloc();
  sub_100040954();
  return v0();
}

uint64_t sub_1000EDEFC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1000EDF54(uint64_t a1)
{
  return a1;
}

id sub_1000EDFC0(uint64_t a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [v1 initWithBag:a1 clientIdentifier:v3 clientVersion:v4 placement:v5 serviceType:v6];

  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_1000EE0C0(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000EE12C()
{
  unint64_t result = qword_100230418;
  if (!qword_100230418)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100230418);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JSMarketing.CacheError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000EE238);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSMarketing.CacheError()
{
  return &type metadata for JSMarketing.CacheError;
}

unint64_t sub_1000EE274()
{
  unint64_t result = qword_100230428;
  if (!qword_100230428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230428);
  }
  return result;
}

uint64_t sub_1000EE2C0()
{
  swift_getObjectType();
  sub_10004D510(0, (unint64_t *)&qword_10022FE70);
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_1000EE354(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v9 - 8);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v10 = static RunLoopWorkerThread.current.getter();
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v35 = v4;
    if (qword_10022C490 != -1) {
      swift_once();
    }
    unint64_t v30 = a1;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    uint64_t v34 = type metadata accessor for JSMediaAPI();
    v33[0] = a2;
    id v12 = a2;
    id v13 = (id)AMSLogKey();
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v17._uint64_t countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      sub_100049788(v33, v34);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v31[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v31, &qword_10022F490);
      v19._uint64_t countAndFlagsBits = 5972026;
      v19._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      uint64_t MetatypeMetadata = &type metadata for String;
      v31[0] = v29;
      v31[1] = v16;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v31, &qword_10022F490);
      v20._uint64_t countAndFlagsBits = 93;
      v20._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v22._uint64_t countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      sub_100049788(v33, v34);
      uint64_t v23 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v31[0] = v23;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v31, &qword_10022F490);
      v24._uint64_t countAndFlagsBits = 58;
      v24._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v33);
    LogMessage.init(stringLiteral:)();
    uint64_t v34 = sub_100043478(&qword_10022D7B0);
    v33[0] = a3;
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_10002CC0C((uint64_t)v33, &qword_10022F490);
    uint64_t v25 = static os_log_type_t.default.getter();
    sub_10004841C(v25);
    swift_bridgeObjectRelease();
    sub_10004D510(0, (unint64_t *)&qword_10022FE70);
    uint64_t v26 = swift_allocObject();
    swift_unknownObjectWeakInit();
    Swift::String v27 = (void *)swift_allocObject();
    void v27[2] = v26;
    void v27[3] = a3;
    v27[4] = v11;
    v27[5] = a4;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v21 = sub_100010358(v30, (uint64_t)sub_1000F0D40, (uint64_t)v27);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v21 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000002CLL, 0x80000001001D0CC0, 0, 0);
    swift_willThrow();
  }
  return v21;
}

void sub_1000EE7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v64 = a6;
  uint64_t v57 = a2;
  uint64_t v11 = type metadata accessor for JSCallable();
  uint64_t v58 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v58 + 64);
  __chkstk_darwin(v11);
  id v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v14 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (void *)Strong;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC14amsengagementd10JSMediaAPI_config + 64))
    {
      sub_10004D120(0xD000000000000010, 0x80000001001CFF70, a5, &v62);
      if (MetatypeMetadata)
      {
        if (swift_dynamicCast())
        {
          Swift::String v17 = v60;
          id v55 = v59;
          sub_10004D120(0x6556746E65696C63, 0xED00006E6F697372, a5, &v62);
          if (MetatypeMetadata)
          {
            Swift::String v56 = (void (*)(char *, uint64_t, uint64_t))v17;
            if (swift_dynamicCast())
            {
              uint64_t v18 = (uint64_t)v60;
              uint64_t v53 = (uint64_t)v59;
              sub_10004D120(0x746E756F636361, 0xE700000000000000, a5, &v62);
              if (MetatypeMetadata)
              {
                type metadata accessor for JSAccount();
                if (swift_dynamicCast()) {
                  Swift::String v19 = v59;
                }
                else {
                  Swift::String v19 = 0;
                }
              }
              else
              {
                sub_10002CC0C((uint64_t)&v62, &qword_10022F490);
                Swift::String v19 = 0;
              }
              sub_10004D120(7107189, 0xE300000000000000, a5, &v62);
              Swift::String v54 = v19;
              if (MetatypeMetadata)
              {
                if (swift_dynamicCast())
                {
                  uint64_t v39 = (uint64_t)v55;
                  id v55 = (char *)v18;
                  uint64_t v51 = sub_1000F0220((uint64_t)v59, (uint64_t)v60, v39, (uint64_t)v56, v37, v38, v19);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
LABEL_34:
                  swift_bridgeObjectRelease();
LABEL_38:
                  uint64_t v42 = v58;
                  Swift::String v56 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
                  v56((char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v57, v11);
                  uint64_t v43 = *(unsigned __int8 *)(v42 + 80);
                  uint64_t v44 = (v43 + 32) & ~v43;
                  id v55 = (char *)v44;
                  uint64_t v52 = v43 | 7;
                  uint64_t v53 = v44 + v12;
                  uint64_t v45 = swift_allocObject();
                  uint64_t v57 = v45;
                  uint64_t v46 = v64;
                  *(void *)(v45 + 16) = v64;
                  *(void *)(v45 + 24) = v16;
                  id v47 = *(void (**)(uint64_t, char *, uint64_t))(v42 + 32);
                  v47(v45 + v44, v13, v11);
                  v56(v13, a3, v11);
                  uint64_t v48 = swift_allocObject();
                  *(void *)(v48 + 16) = v46;
                  *(void *)(v48 + 24) = v16;
                  v47((uint64_t)&v55[v48], v13, v11);
                  swift_retain_n();
                  id v49 = v16;
                  sub_10003A184();

                  swift_release();
                  swift_release();
                  swift_release();

                  return;
                }
              }
              else
              {
                sub_10002CC0C((uint64_t)&v62, &qword_10022F490);
              }
              sub_10004D120(1701869940, 0xE400000000000000, a5, &v62);
              if (MetatypeMetadata)
              {
                if (swift_dynamicCast())
                {
                  uint64_t v51 = sub_1000F065C((uint64_t)v59, (uint64_t)v55, (uint64_t)v56, v53, v18, (uint64_t)v19);
                  swift_bridgeObjectRelease();
                  goto LABEL_34;
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_10002CC0C((uint64_t)&v62, &qword_10022F490);
              }
              sub_100043478(&qword_100230478);
              NSString v40 = String._bridgeToObjectiveC()();
              id v41 = (id)AMSError();

              uint64_t v51 = Promise.__allocating_init(error:)();
              goto LABEL_38;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            sub_10002CC0C((uint64_t)&v62, &qword_10022F490);
          }
          sub_100043478(&qword_10022D808);
          uint64_t v29 = swift_allocObject();
          *(_OWORD *)(v29 + 16) = xmmword_1001C3110;
          *(void *)(v29 + 56) = &type metadata for String;
          unint64_t v30 = 0xD00000000000001ALL;
          unint64_t v31 = "Client version not present";
          goto LABEL_23;
        }
      }
      else
      {
        sub_10002CC0C((uint64_t)&v62, &qword_10022F490);
      }
      sub_100043478(&qword_10022D808);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1001C3110;
      *(void *)(v29 + 56) = &type metadata for String;
      unint64_t v30 = 0xD00000000000001DLL;
      unint64_t v31 = "Client identifier not present";
    }
    else
    {
      sub_100043478(&qword_10022D808);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1001C3110;
      *(void *)(v29 + 56) = &type metadata for String;
      unint64_t v30 = 0xD000000000000016;
      unint64_t v31 = "Networking not enabled";
    }
LABEL_23:
    *(void *)(v29 + 32) = v30;
    *(void *)(v29 + 40) = (unint64_t)(v31 - 32) | 0x8000000000000000;
    id v36 = (void *)JSCallable.call(_:)();

    swift_bridgeObjectRelease();
    if (!v7) {

    }
    return;
  }
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
  *(void *)&long long v62 = a7;
  id v20 = (id)AMSLogKey();
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v25._uint64_t countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    sub_100049788(&v62, MetatypeMetadata);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t v61 = (void *)swift_getMetatypeMetadata();
    uint64_t v59 = (char *)DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
    v27._uint64_t countAndFlagsBits = 5972026;
    v27._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    uint64_t v61 = &type metadata for String;
    uint64_t v59 = (char *)v22;
    uint64_t v60 = (void (*)(void, void, void))v24;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
    v28._uint64_t countAndFlagsBits = 93;
    v28._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v32._uint64_t countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    sub_100049788(&v62, MetatypeMetadata);
    uint64_t v33 = swift_getDynamicType();
    uint64_t v61 = (void *)swift_getMetatypeMetadata();
    uint64_t v59 = (char *)v33;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
    v34._uint64_t countAndFlagsBits = 58;
    v34._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v34);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v62);
  LogMessage.init(stringLiteral:)();
  uint64_t v35 = static os_log_type_t.error.getter();
  sub_10004841C(v35);
  swift_bridgeObjectRelease();
}

uint64_t sub_1000EF134(void **a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for JSCallable();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  *(void *)(v12 + ((v9 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v10;
  id v13 = a3;
  id v14 = v10;
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  return swift_release();
}

uint64_t sub_1000EF2A0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v26 = type metadata accessor for JSMediaAPI();
  v25[0] = a1;
  id v6 = a1;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v25, v26);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v23, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v9;
    v23[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v23, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(v25, v26);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v23, &qword_10022F490);
    v18._uint64_t countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v25);
  LogMessage.init(stringLiteral:)();
  uint64_t v19 = static os_log_type_t.default.getter();
  sub_10004841C(v19);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1001C3110;
  uint64_t v21 = sub_1000F1090(a3);
  *(void *)(v20 + 56) = sub_100043478(&qword_10022D6F0);
  if (!v21) {
    uint64_t v21 = Dictionary.init(dictionaryLiteral:)();
  }
  *(void *)(v20 + 32) = v21;
  sub_10001147C(v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000EF630(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for JSCallable();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  *(void *)(v11 + ((v9 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  id v12 = a3;
  swift_errorRetain();
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  return swift_release();
}

uint64_t sub_1000EF79C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v28 = type metadata accessor for JSMediaAPI();
  v27[0] = a1;
  id v6 = a1;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v27, v28);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v25[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v25, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v25[0] = v9;
    v25[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v25, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(v27, v28);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v25[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v25, &qword_10022F490);
    v18._uint64_t countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v27);
  LogMessage.init(stringLiteral:)();
  uint64_t v19 = static os_log_type_t.error.getter();
  sub_10004841C(v19);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1001C3110;
  id v21 = objc_allocWithZone((Class)type metadata accessor for JSError());
  swift_errorRetain();
  id v22 = sub_100027FB8(a3);
  uint64_t v23 = sub_100028288();

  *(void *)(v20 + 56) = sub_100043478(&qword_10022D7B0);
  *(void *)(v20 + 32) = v23;
  sub_10001147C(v20);
  return swift_bridgeObjectRelease();
}

id sub_1000EFBA8(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4 = v3;
  Hasher.init()();
  String.hash(into:)();
  if (a3)
  {
    uint64_t v8 = *(void **)&a3[OBJC_IVAR____TtC14amsengagementd9JSAccount_account];
    uint64_t v9 = a3;
    id v10 = [v8 identifier];
    if (v10)
    {
      uint64_t v11 = v10;
      Hasher._combine(_:)(1u);
      id v12 = v11;
      NSObject.hash(into:)();

      uint64_t v9 = (char *)v12;
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  memcpy(__dst, v20, sizeof(__dst));
  id v13 = [objc_allocWithZone((Class)NSNumber) initWithInteger:Hasher.finalize()()];
  uint64_t v14 = OBJC_IVAR____TtC14amsengagementd10JSMediaAPI_encoders;
  id v15 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v4
                                                              + OBJC_IVAR____TtC14amsengagementd10JSMediaAPI_encoders), "objectForKey:", v13));
  if (v15)
  {
    id v16 = v15;
    id v17 = v13;
  }
  else
  {
    id v17 = sub_1000F07A0(a1, a2);
    if (qword_10022C3E0 != -1) {
      swift_once();
    }
    id v16 = [objc_allocWithZone((Class)AMSMediaRequestEncoder) initWithTokenService:v17 bag:qword_10022D990];
    if (a3) {
      a3 = (char *)*(id *)&a3[OBJC_IVAR____TtC14amsengagementd9JSAccount_account];
    }
    [v16 setAccount:a3];

    id v18 = [objc_allocWithZone((Class)AMSMediaResponseDecoder) init];
    [v16 setResponseDecoder:v18];

    [*(id *)(v4 + v14) setObject:v16 forKey:v13];
  }

  return v16;
}

uint64_t sub_1000EFDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v27 = a1;
  uint64_t v29 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v28 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v25 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)&v24 - v11;
  uint64_t v13 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchQoS.QoSClass.utility(_:), v13);
  id v17 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  static DispatchTime.now()();
  + infix(_:_:)();
  id v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v10, v6);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v27;
  aBlock[4] = nullsub_1;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  aBlock[3] = &unk_100212368;
  uint64_t v20 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  static DispatchQoS.unspecified.getter();
  uint64_t v33 = _swiftEmptyArrayStorage;
  sub_10002352C();
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_1000234D8();
  id v22 = v28;
  uint64_t v21 = v29;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v21);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v31);
  v18(v12, v25);
  return swift_release();
}

uint64_t sub_1000F0220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  swift_getObjectType();
  type metadata accessor for DispatchTimeInterval();
  sub_100020DEC();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_100020EAC();
  id v12 = (void *)(v11 - v10);
  uint64_t v13 = sub_100043478(&qword_100230480);
  __chkstk_darwin(v13 - 8);
  sub_100020EAC();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = type metadata accessor for URLComponents();
  sub_100020DEC();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_100020EAC();
  uint64_t v23 = v22 - v21;
  URLComponents.init(string:)();
  if (sub_10004FD40(v16, 1, v17) == 1)
  {
    sub_10002CC0C(v16, &qword_100230480);
    sub_100043478(&qword_100230478);
    NSString v24 = String._bridgeToObjectiveC()();
    NSString v25 = String._bridgeToObjectiveC()();
    id v26 = (id)AMSError();

    return Promise.__allocating_init(error:)();
  }
  else
  {
    uint64_t v42 = v23;
    uint64_t v43 = v19;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v23, v16, v17);
    id v28 = sub_1000EFBA8(a3, a4, a7);
    id v29 = sub_1000F08DC(a3, a4);
    *id v12 = 3;
    uint64_t v30 = *(void (**)(uint64_t))(v8 + 104);
    uint64_t v31 = sub_10004879C();
    v30(v31);
    id v32 = v28;
    sub_1000EFDEC((uint64_t)v32, (uint64_t)v12);

    uint64_t v33 = *(void (**)(uint64_t))(v8 + 8);
    uint64_t v34 = sub_100046344();
    v33(v34);
    *id v12 = 3;
    uint64_t v35 = sub_10004879C();
    v30(v35);
    id v36 = v29;
    sub_1000EFDEC((uint64_t)v36, (uint64_t)v12);

    uint64_t v37 = sub_100046344();
    v33(v37);
    Class isa = URLComponents._bridgeToObjectiveC()().super.isa;
    id v39 = [v32 requestWithComponents:isa];

    sub_100043478((uint64_t *)&unk_100233E60);
    id v40 = [v36 dataTaskPromiseWithRequestPromise:v39];
    Promise<A>.init(_:)();
    id v47[3] = type metadata accessor for SyncTaskScheduler();
    v47[4] = (uint64_t)&protocol witness table for SyncTaskScheduler;
    sub_10003BAA4(v47);
    SyncTaskScheduler.init()();
    sub_10004D510(0, &qword_100230488);
    uint64_t v27 = Promise.map<A>(on:_:)();

    swift_release();
    sub_10004377C((uint64_t)v47);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v17);
  }
  return v27;
}

id sub_1000F05D8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    uint64_t v5 = v4;
    id result = v3;
  }
  else
  {
    id result = [objc_allocWithZone((Class)AMSMediaResult) initWithResult:v3];
    uint64_t v5 = (uint64_t)result;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1000F065C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = qword_10022C3E0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_10022D990;
  objc_allocWithZone((Class)AMSMediaTask);
  swift_unknownObjectRetain();
  id v14 = sub_1000F0B50(a1, a2, a3, a4, a5, v13);
  if (a6) {
    id v15 = *(id *)(a6 + OBJC_IVAR____TtC14amsengagementd9JSAccount_account);
  }
  else {
    id v15 = 0;
  }
  [v14 setAccount:v15];

  sub_100043478(&qword_100230478);
  id v16 = [v14 perform];
  uint64_t v17 = Promise<A>.init(_:)();

  return v17;
}

id sub_1000F07A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = OBJC_IVAR____TtC14amsengagementd10JSMediaAPI_tokenServices;
  id v7 = *(id *)(v2 + OBJC_IVAR____TtC14amsengagementd10JSMediaAPI_tokenServices);
  NSString v8 = sub_10004B4D4();
  id v9 = [v7 objectForKey:v8];

  if (!v9)
  {
    uint64_t v10 = qword_10022C3E0;
    swift_bridgeObjectRetain();
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_10022D990;
    objc_allocWithZone((Class)AMSMediaTokenService);
    swift_unknownObjectRetain();
    id v12 = sub_1000F0C00(a1, a2, v11);
    id v13 = *(id *)(v3 + v6);
    id v9 = v12;
    NSString v14 = sub_10004B4D4();
    [v13 setObject:v9 forKey:v14];
  }
  return v9;
}

id sub_1000F08DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = OBJC_IVAR____TtC14amsengagementd10JSMediaAPI_urlSessions;
  id v7 = *(id *)(v2 + OBJC_IVAR____TtC14amsengagementd10JSMediaAPI_urlSessions);
  NSString v8 = sub_10004B4D4();
  id v9 = [v7 objectForKey:v8];

  if (!v9)
  {
    id v10 = sub_1000F07A0(a1, a2);
    memcpy(v20, (const void *)(v3 + OBJC_IVAR____TtC14amsengagementd10JSMediaAPI_config), sizeof(v20));
    id v11 = objc_allocWithZone((Class)type metadata accessor for AppURLSession());
    sub_10002C008((uint64_t)v20);
    id v12 = sub_10000B620((uint64_t)v20);
    id v13 = objc_allocWithZone((Class)AMSMediaProtocolHandler);
    id v14 = v12;
    id v15 = [v13 initWithTokenService:v10];
    [v14 setProtocolHandler:v15];

    id v16 = *(void **)(v3 + v6);
    id v9 = v14;
    id v17 = v16;
    NSString v18 = sub_10004B4D4();
    [v17 setObject:v9 forKey:v18];
  }
  return v9;
}

void sub_1000F0A50()
{
}

id sub_1000F0A90()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSMediaAPI();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1000F0B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v6 initWithType:a1 clientIdentifier:v9 clientVersion:v10 bag:a6];

  swift_unknownObjectRelease();
  return v11;
}

id sub_1000F0C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v3 initWithClientIdentifier:v5 bag:a3];

  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_1000F0C68()
{
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F0CA0(void *a1)
{
  return sub_1000EE354(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1000F0CC0()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F0CF8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

void sub_1000F0D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000EE7F0(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1000F0D64()
{
  uint64_t v0 = type metadata accessor for JSCallable();
  sub_100044E90(v0);
  uint64_t v1 = (void **)sub_100048180();
  return sub_1000EF134(v1, v2, v3, v4);
}

uint64_t sub_1000F0DAC()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 32) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_release();

  uint64_t v8 = sub_1000210B4();
  v9(v8);
  return _swift_deallocObject(v0, v6, v7);
}

uint64_t sub_1000F0E48()
{
  uint64_t v0 = type metadata accessor for JSCallable();
  sub_100044E90(v0);
  uint64_t v1 = sub_100048180();
  return sub_1000EF630(v1, v2, v3, v4);
}

uint64_t sub_1000F0E8C()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  sub_10004520C();
  uint64_t v3 = sub_1000210B4();
  v4(v3);
  swift_errorRelease();
  return _swift_deallocObject(v0, v2, v1);
}

uint64_t sub_1000F0F24()
{
  return sub_1000F0FEC((uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1000EF79C);
}

uint64_t sub_1000F0F3C()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  sub_10004520C();
  uint64_t v4 = sub_1000210B4();
  v5(v4);

  return _swift_deallocObject(v0, v2, v1);
}

uint64_t sub_1000F0FD4()
{
  return sub_1000F0FEC((uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1000EF2A0);
}

uint64_t sub_1000F0FEC(uint64_t (*a1)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for JSCallable() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a1(v4, v1 + v3, v5);
}

uint64_t sub_1000F1090(void *a1)
{
  id v1 = [a1 responseDictionary];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void *sub_1000F10FC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id result = _swiftEmptyArrayStorage;
  if (v2)
  {
    id result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v4 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v5 = *(id *)(a1 + 8 * v4 + 32);
        }
        uint64_t v6 = v5;
        ++v4;
        sub_10004D510(0, (unint64_t *)&qword_10022D3D8);
        id v7 = v6;
        sub_100043478(&qword_10022D8A8);
        swift_dynamicCast();

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      while (v2 != v4);
      return _swiftEmptyArrayStorage;
    }
  }
  return result;
}

void *sub_1000F1274(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000734F4();
    uint64_t v3 = a1 + 32;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_100043478(&qword_10022D7B0);
      sub_100043478(&qword_10022D6F0);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1000734F4();
      }
      unint64_t v4 = _swiftEmptyArrayStorage[2];
      if (v4 >= _swiftEmptyArrayStorage[3] >> 1) {
        sub_1000734F4();
      }
      _swiftEmptyArrayStorage[2] = v4 + 1;
      _swiftEmptyArrayStorage[v4 + 4] = v6;
      v3 += 8;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1000F13B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = &_swiftEmptyArrayStorage;
  if (v1)
  {
    NSString v9 = &_swiftEmptyArrayStorage;
    sub_100073618(0, v1, 0);
    uint64_t v2 = &_swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100073618(0, v2[2] + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_100073618(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      v2[2] = v6 + 1;
      sub_100043510(&v8, &v2[4 * v6 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1000F14E0(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v5 = result;
  id result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v1 = v3;
  if (!result || (uint64_t v6 = *(void *)(v3 + 24) >> 1, v6 < v4 + v2))
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    id result = swift_bridgeObjectRelease();
    uint64_t *v1 = v3;
    uint64_t v6 = *(void *)(v3 + 24) >> 1;
  }
  if (!*(void *)(v5 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_15;
  }
  if (v6 - *(void *)(v3 + 16) < v2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id result = sub_100072710(v5 + 32, v2);
  if (v2)
  {
    uint64_t v7 = *(void *)(*v1 + 16);
    BOOL v8 = __OFADD__(v7, v2);
    uint64_t v9 = v7 + v2;
    if (!v8)
    {
      *(void *)(*v1 + 16) = v9;
      goto LABEL_11;
    }
LABEL_17:
    __break(1u);
    return result;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return specialized Array._endMutation()();
}

void sub_1000F1600()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v27 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  uint64_t v26 = qword_1002440F8;
  sub_100043478(&qword_10022E560);
  uint64_t v9 = type metadata accessor for LogMessage();
  sub_100044798(v9);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v31 = (void *)type metadata accessor for JSMetrics();
  v30[0] = v0;
  v0;
  id v10 = (id)AMSLogKey();
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v7;
    uint64_t v13 = v2;
    uint64_t v15 = v14;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(v30, (uint64_t)v31);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v28, &qword_10022F490);
    v17._uint64_t countAndFlagsBits = 5972026;
    v17._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    uint64_t MetatypeMetadata = &type metadata for String;
    v28[0] = v12;
    v28[1] = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v28, &qword_10022F490);
    v18._uint64_t countAndFlagsBits = 93;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
    uint64_t v2 = v13;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(v30, (uint64_t)v31);
    uint64_t v19 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v28, &qword_10022F490);
    v20._uint64_t countAndFlagsBits = 58;
    v20._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v30);
  LogMessage.init(stringLiteral:)();
  uint64_t v31 = &type metadata for String;
  v30[0] = v7;
  v30[1] = v5;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_10002CC0C((uint64_t)v30, &qword_10022F490);
  uint64_t v21 = static os_log_type_t.default.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  id v22 = sub_1000F6048(v7, v5, v27, v2);
  sub_100043478(&qword_100231DE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C4B80;
  *(void *)(inited + 32) = v22;
  v30[0] = inited;
  specialized Array._endMutation()();
  id v24 = v22;
  sub_100004C58();
  swift_bridgeObjectRelease();
  if (qword_10022C3E8 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_10022D998, "enqueueEvent:", v24, v25, v26);

  sub_100020FDC();
}

uint64_t sub_1000F1AC0()
{
  sub_10004D510(0, (unint64_t *)&qword_10022FE70);
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_1000F1B38(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v5 = static RunLoopWorkerThread.current.getter();
  if (v5)
  {
    uint64_t v6 = v5;
    if (qword_10022C490 != -1) {
      swift_once();
    }
    id v29 = a1;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v28 = type metadata accessor for JSMetrics();
    v27[0] = a2;
    id v7 = a2;
    id v8 = (id)AMSLogKey();
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v12._uint64_t countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v12);
      sub_100049788(v27, v28);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v25[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v25, &qword_10022F490);
      v14._uint64_t countAndFlagsBits = 5972026;
      v14._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v14);
      uint64_t MetatypeMetadata = &type metadata for String;
      v25[0] = v24;
      v25[1] = v11;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v25, &qword_10022F490);
      v15._uint64_t countAndFlagsBits = 93;
      v15._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v17._uint64_t countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      sub_100049788(v27, v28);
      uint64_t v18 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v25[0] = v18;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v25, &qword_10022F490);
      v19._uint64_t countAndFlagsBits = 58;
      v19._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v27);
    LogMessage.init(stringLiteral:)();
    uint64_t v20 = static os_log_type_t.default.getter();
    sub_10004841C(v20);
    swift_bridgeObjectRelease();
    sub_10004D510(0, (unint64_t *)&qword_10022FE70);
    uint64_t v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v21;
    *(void *)(v22 + 24) = v6;
    swift_retain();
    swift_retain();
    uint64_t v16 = sub_100010358(v29, (uint64_t)sub_1000F6A80, v22);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v16 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000002CLL, 0x80000001001D0CC0, 0, 0);
    swift_willThrow();
  }
  return v16;
}

void sub_1000F1F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v51 = a2;
  uint64_t v8 = type metadata accessor for JSCallable();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v12 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v14 = (void *)Strong;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC14amsengagementd9JSMetrics_config + 64))
    {
      uint64_t v49 = a5;
      uint64_t v50 = v5;
      if (qword_10022C3E8 != -1) {
        swift_once();
      }
      id v15 = [(id)qword_10022D998 flush];
      uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      id v47 = v15;
      uint64_t v48 = v16;
      v16((char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8);
      uint64_t v17 = *(unsigned __int8 *)(v9 + 80);
      uint64_t v18 = (v17 + 32) & ~v17;
      uint64_t v45 = v17 | 7;
      uint64_t v46 = v18 + v10;
      uint64_t v19 = swift_allocObject();
      uint64_t v20 = v49;
      *(void *)(v19 + 16) = v49;
      *(void *)(v19 + 24) = v14;
      uint64_t v44 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
      v44(v19 + v18, v11, v8);
      Swift::String v56 = sub_1000F6AA0;
      uint64_t v57 = v19;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v53 = 1107296256;
      v43[1] = &v54;
      Swift::String v54 = sub_100181204;
      id v55 = &unk_100212728;
      uint64_t v21 = _Block_copy(&aBlock);
      swift_retain();
      id v22 = v14;
      swift_release();
      id v23 = v47;
      [v47 addErrorBlock:v21];
      _Block_release(v21);
      v48(v11, v51, v8);
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v20;
      *(void *)(v24 + 24) = v22;
      v44(v24 + v18, v11, v8);
      Swift::String v56 = sub_1000F6B18;
      uint64_t v57 = v24;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v53 = 1107296256;
      Swift::String v54 = (void (*)(uint64_t, void *))sub_1000FE3F8;
      id v55 = &unk_100212778;
      uint64_t v25 = _Block_copy(&aBlock);
      swift_retain();
      id v26 = v22;
      swift_release();
      [v23 addSuccessBlock:v25];
      _Block_release(v25);
    }
    else
    {
      sub_100043478(&qword_10022D808);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1001C3110;
      *(void *)(v37 + 56) = &type metadata for String;
      *(void *)(v37 + 32) = 0xD000000000000019;
      *(void *)(v37 + 40) = 0x80000001001D1C80;
      uint64_t v38 = (void *)JSCallable.call(_:)();

      swift_bridgeObjectRelease();
      if (!v5) {
    }
      }
  }
  else
  {
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v27 = type metadata accessor for JSMetrics();
    id v55 = (void *)sub_100043478(&qword_1002304C0);
    long long aBlock = (void **)v27;
    id v28 = (id)AMSLogKey();
    if (v28)
    {
      id v29 = v28;
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v32 = v31;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v33._uint64_t countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      sub_100049788(&aBlock, (uint64_t)v55);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v58[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v58, &qword_10022F490);
      v35._uint64_t countAndFlagsBits = 5972026;
      v35._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      uint64_t MetatypeMetadata = &type metadata for String;
      v58[0] = v30;
      v58[1] = v32;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v58, &qword_10022F490);
      v36._uint64_t countAndFlagsBits = 93;
      v36._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      sub_100049788(&aBlock, (uint64_t)v55);
      uint64_t v40 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v58[0] = v40;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v58, &qword_10022F490);
      v41._uint64_t countAndFlagsBits = 58;
      v41._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&aBlock);
    LogMessage.init(stringLiteral:)();
    uint64_t v42 = static os_log_type_t.error.getter();
    sub_10004841C(v42);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000F2638(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for JSCallable();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  *(void *)(v11 + ((v9 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  id v12 = a3;
  swift_errorRetain();
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  return swift_release();
}

uint64_t sub_1000F27A4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v28 = type metadata accessor for JSMetrics();
  v27[0] = a1;
  id v6 = a1;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v27, v28);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v25[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v25, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v25[0] = v9;
    v25[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v25, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(v27, v28);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v25[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v25, &qword_10022F490);
    v18._uint64_t countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v27);
  LogMessage.init(stringLiteral:)();
  uint64_t v19 = static os_log_type_t.error.getter();
  sub_10004841C(v19);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1001C3110;
  id v21 = objc_allocWithZone((Class)type metadata accessor for JSError());
  swift_errorRetain();
  id v22 = sub_100027FB8(a3);
  uint64_t v23 = sub_100028288();

  *(void *)(v20 + 56) = sub_100043478(&qword_10022D7B0);
  *(void *)(v20 + 32) = v23;
  sub_10001147C(v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000F2B2C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for JSCallable();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  *(void *)(v11 + ((v9 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  id v12 = a3;
  id v13 = a1;
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  return swift_release();
}

uint64_t sub_1000F2C94(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v26 = type metadata accessor for JSMetrics();
  v25[0] = a1;
  id v6 = a1;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v25, v26);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v23, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v9;
    v23[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v23, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(v25, v26);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v23, &qword_10022F490);
    v18._uint64_t countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v25);
  LogMessage.init(stringLiteral:)();
  uint64_t v19 = static os_log_type_t.default.getter();
  sub_10004841C(v19);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1001C3110;
  *(void *)(v20 + 56) = sub_10004D510(0, (unint64_t *)&qword_100231E00);
  *(void *)(v20 + 32) = a3;
  id v21 = a3;
  sub_10001147C(v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000F3044()
{
  sub_100048D88();
  uint64_t v0 = (void *)sub_10004D510(0, (unint64_t *)&qword_10022FE70);
  static JSContext.requiredCurrent.getter();
  sub_10004AC1C();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

char *sub_1000F30D0(void *a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7, int a8)
{
  int v52 = a8;
  uint64_t v58 = a7;
  uint64_t v50 = a3;
  uint64_t v51 = a5;
  uint64_t v13 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v13 - 8);
  Swift::String v15 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v16 = static RunLoopWorkerThread.current.getter();
  if (v16)
  {
    uint64_t v45 = v16;
    uint64_t v46 = a4;
    uint64_t v47 = a6;
    uint64_t v48 = a1;
    if (qword_10022C490 != -1) {
      swift_once();
    }
    uint64_t v49 = v8;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1001C3120;
    v44[0] = v17;
    uint64_t v57 = (void *)type metadata accessor for JSMetrics();
    id v55 = a2;
    v44[1] = a2;
    id v18 = (id)AMSLogKey();
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v23._uint64_t countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      sub_100049788(&v55, (uint64_t)v57);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v53[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v53, &qword_10022F490);
      v25._uint64_t countAndFlagsBits = 5972026;
      v25._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t MetatypeMetadata = &type metadata for String;
      v53[0] = v20;
      v53[1] = v22;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v53, &qword_10022F490);
      v26._uint64_t countAndFlagsBits = 93;
      v26._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v27._uint64_t countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      sub_100049788(&v55, (uint64_t)v57);
      uint64_t v28 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v53[0] = v28;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v53, &qword_10022F490);
      v29._uint64_t countAndFlagsBits = 58;
      v29._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v55);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v30._object = (void *)0x80000001001D1BC0;
    v30._uint64_t countAndFlagsBits = 0xD000000000000027;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    uint64_t v57 = &type metadata for String;
    uint64_t v31 = (uint64_t)v50;
    uint64_t v32 = v46;
    id v55 = v50;
    uint64_t v56 = v46;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v55, &qword_10022F490);
    v33._uint64_t countAndFlagsBits = 0x203A79656B202CLL;
    v33._object = (void *)0xE700000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v33);
    uint64_t v57 = &type metadata for String;
    uint64_t v34 = v31;
    Swift::String v35 = v51;
    uint64_t v36 = v47;
    id v55 = v51;
    uint64_t v56 = v47;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v55, &qword_10022F490);
    v37._uint64_t countAndFlagsBits = 41;
    v37._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
    LogMessage.init(stringInterpolation:)();
    uint64_t v38 = static os_log_type_t.default.getter();
    sub_10004841C(v38);
    swift_bridgeObjectRelease();
    sub_10004D510(0, (unint64_t *)&qword_10022FE70);
    uint64_t v39 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v40 = swift_allocObject();
    Swift::String v41 = v58;
    *(void *)(v40 + 16) = v39;
    *(void *)(v40 + 24) = v41;
    *(void *)(v40 + 32) = v34;
    *(void *)(v40 + 40) = v32;
    *(void *)(v40 + 48) = v45;
    *(void *)(v40 + 56) = v35;
    *(void *)(v40 + 64) = v36;
    *(unsigned char *)(v40 + 72) = v52 & 1;
    id v42 = v41;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    Swift::String v15 = (char *)sub_100010358(v48, (uint64_t)sub_1000F66B0, v40);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    type metadata accessor for JSError();
    sub_1000DE184(12, 0xD000000000000035, 0x80000001001D1B80, 0, 0);
    swift_willThrow();
  }
  return v15;
}

void sub_1000F35FC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, char *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  id v55 = a7;
  uint64_t v53 = a3;
  uint64_t v54 = a2;
  uint64_t v13 = type metadata accessor for JSCallable();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v56 = v15;
  uint64_t v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v17 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v19 = (void *)Strong;
    if (a5) {
      id v20 = *(id *)(a5 + OBJC_IVAR____TtC14amsengagementd9JSAccount_account);
    }
    else {
      id v20 = 0;
    }
    int v51 = a11;
    uint64_t v52 = a10;
    uint64_t v50 = a9;
    uint64_t v31 = self;
    NSString v32 = String._bridgeToObjectiveC()();
    if (qword_10022C3E0 != -1) {
      swift_once();
    }
    id v55 = [v31 identifierStoreWithAccount:v20 bagNamespace:v32 bag:qword_10022D990];

    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v49(v16, (uint64_t)v53, v13);
    Swift::String v33 = v16;
    uint64_t v34 = *(unsigned __int8 *)(v14 + 80);
    void v48[2] = v34 | 7;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = a8;
    *(void *)(v35 + 24) = v19;
    uint64_t v53 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
    v53(v35 + ((v34 + 32) & ~v34), v33, v13);
    uint64_t v61 = sub_1000F66E0;
    uint64_t v62 = v35;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v58 = 1107296256;
    v48[1] = &v59;
    uint64_t v59 = sub_100181204;
    uint64_t v60 = &unk_100212610;
    uint64_t v36 = _Block_copy(&aBlock);
    swift_retain();
    id v37 = v19;
    swift_release();
    [v55 addErrorBlock:v36];
    _Block_release(v36);
    v49(v33, v54, v13);
    uint64_t v38 = (v34 + 56) & ~v34;
    uint64_t v39 = swift_allocObject();
    uint64_t v40 = v52;
    *(void *)(v39 + 16) = v50;
    *(void *)(v39 + 24) = v40;
    *(unsigned char *)(v39 + 32) = v51 & 1;
    *(void *)(v39 + 40) = a8;
    *(void *)(v39 + 48) = v37;
    v53(v39 + v38, v33, v13);
    uint64_t v61 = sub_1000F67F0;
    uint64_t v62 = v39;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v58 = 1107296256;
    uint64_t v59 = sub_1000E84B0;
    uint64_t v60 = &unk_100212660;
    Swift::String v41 = _Block_copy(&aBlock);
    swift_retain();
    id v42 = v37;
    swift_bridgeObjectRetain();
    swift_release();
    id v43 = v55;
    [v55 addSuccessBlock:v41];
    _Block_release(v41);
  }
  else
  {
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v21 = type metadata accessor for JSMetrics();
    uint64_t v60 = (void *)sub_100043478(&qword_1002304C0);
    long long aBlock = (void **)v21;
    id v22 = (id)AMSLogKey();
    if (v22)
    {
      Swift::String v23 = v22;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v27._uint64_t countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      sub_100049788(&aBlock, (uint64_t)v60);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v63[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v63, &qword_10022F490);
      v29._uint64_t countAndFlagsBits = 5972026;
      v29._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      uint64_t MetatypeMetadata = &type metadata for String;
      v63[0] = v24;
      v63[1] = v26;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v63, &qword_10022F490);
      v30._uint64_t countAndFlagsBits = 93;
      v30._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v44._uint64_t countAndFlagsBits = 0;
      v44._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v44);
      sub_100049788(&aBlock, (uint64_t)v60);
      uint64_t v45 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v63[0] = v45;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v63, &qword_10022F490);
      v46._uint64_t countAndFlagsBits = 58;
      v46._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v46);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&aBlock);
    LogMessage.init(stringLiteral:)();
    uint64_t v47 = static os_log_type_t.error.getter();
    sub_10004841C(v47);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000F3CE4(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v31 = type metadata accessor for JSMetrics();
  v30[0] = (uint64_t)a1;
  id v5 = a1;
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._uint64_t countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    sub_100049788(v30, v31);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v28, &qword_10022F490);
    v13._uint64_t countAndFlagsBits = 5972026;
    v13._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    uint64_t MetatypeMetadata = &type metadata for String;
    v28[0] = v8;
    v28[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v28, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 93;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    sub_100049788(v30, v31);
    uint64_t v16 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v28, &qword_10022F490);
    v17._uint64_t countAndFlagsBits = 58;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v30);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._object = (void *)0x80000001001D1C10;
  v18._uint64_t countAndFlagsBits = 0xD000000000000023;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  swift_getErrorValue();
  uint64_t v31 = v27;
  uint64_t v19 = sub_10003BAA4(v30);
  (*(void (**)(uint64_t *))(*(void *)(v27 - 8) + 16))(v19);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)v30, &qword_10022F490);
  v20._uint64_t countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  LogMessage.init(stringInterpolation:)();
  uint64_t v21 = static os_log_type_t.error.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1001C3110;
  id v23 = objc_allocWithZone((Class)type metadata accessor for JSError());
  swift_errorRetain();
  id v24 = sub_100027FB8(a2);
  uint64_t v25 = sub_100028288();

  *(void *)(v22 + 56) = sub_100043478(&qword_10022D7B0);
  *(void *)(v22 + 32) = v25;
  sub_10001147C(v22);
  return swift_bridgeObjectRelease();
}

void sub_1000F40F8(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6, uint64_t a7)
{
  v23[0] = a7;
  v23[1] = a5;
  uint64_t v12 = type metadata accessor for JSCallable();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  sub_10004D510(0, (unint64_t *)&unk_100233D70);
  swift_bridgeObjectRetain();
  id v15 = sub_100189AEC(a2, a3, a4);
  id v16 = [a1 identifierForKey:v15];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  (*(void (**)(char *, void, uint64_t))(v13 + 16))((char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v23[0], v12);
  unint64_t v20 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = a6;
  *((void *)v21 + 3) = v17;
  *((void *)v21 + 4) = v19;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v21[v20], (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  id v22 = a6;
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  swift_release();
}

uint64_t sub_1000F42CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v28 = (void *)type metadata accessor for JSMetrics();
  v27[0] = a1;
  id v7 = a1;
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._uint64_t countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(v27, (uint64_t)v28);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v25[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v25, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 5972026;
    v15._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    uint64_t MetatypeMetadata = &type metadata for String;
    v25[0] = v10;
    v25[1] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v25, &qword_10022F490);
    v16._uint64_t countAndFlagsBits = 93;
    v16._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v17._uint64_t countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    sub_100049788(v27, (uint64_t)v28);
    uint64_t v18 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v25[0] = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v25, &qword_10022F490);
    v19._uint64_t countAndFlagsBits = 58;
    v19._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v27);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._object = (void *)0x80000001001D1BF0;
  v20._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  uint64_t v28 = &type metadata for String;
  v27[0] = a2;
  v27[1] = a3;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)v27, &qword_10022F490);
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  LogMessage.init(stringInterpolation:)();
  uint64_t v22 = static os_log_type_t.default.getter();
  sub_10004841C(v22);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1001C3110;
  *(void *)(v23 + 56) = &type metadata for String;
  *(void *)(v23 + 32) = a2;
  *(void *)(v23 + 40) = a3;
  swift_bridgeObjectRetain();
  sub_10001147C(v23);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000F46BC()
{
  sub_100048D88();
  swift_getObjectType();
  uint64_t v0 = (void *)sub_10004D510(0, (unint64_t *)&qword_10022FE70);
  static JSContext.requiredCurrent.getter();
  sub_10004AC1C();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_1000F4760(void *a1, char *a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, void *a7, char a8, uint64_t a9)
{
  Swift::String v44 = a7;
  uint64_t v14 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v14 - 8);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v15 = static RunLoopWorkerThread.current.getter();
  if (v15)
  {
    uint64_t v36 = v15;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    id v43 = (void *)type metadata accessor for JSMetrics();
    Swift::String v41 = a2;
    uint64_t v16 = *(void *)&a2[OBJC_IVAR____TtC14amsengagementd9JSMetrics_config + 32];
    if (v16)
    {
      uint64_t v35 = *(void *)&a2[OBJC_IVAR____TtC14amsengagementd9JSMetrics_config + 24];
      Swift::String v17 = a2;
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      sub_100049788(&v41, (uint64_t)v43);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v39[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v39, &qword_10022F490);
      v20._uint64_t countAndFlagsBits = 5972026;
      v20._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      uint64_t MetatypeMetadata = &type metadata for String;
      v39[0] = v35;
      v39[1] = v16;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v39, &qword_10022F490);
      uint64_t v21 = 93;
    }
    else
    {
      uint64_t v22 = a2;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v23._uint64_t countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      sub_100049788(&v41, (uint64_t)v43);
      uint64_t v24 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v39[0] = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v39, &qword_10022F490);
      uint64_t v21 = 58;
    }
    unint64_t v25 = 0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v21);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)&v41);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v26._object = (void *)0x80000001001D1AE0;
    v26._uint64_t countAndFlagsBits = 0xD000000000000023;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    id v43 = &type metadata for String;
    Swift::String v41 = (char *)a3;
    uint64_t v42 = a4;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v41, &qword_10022F490);
    v27._uint64_t countAndFlagsBits = 0x203A79656B202CLL;
    v27._object = (void *)0xE700000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    id v43 = &type metadata for String;
    Swift::String v41 = a5;
    uint64_t v42 = a6;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v41, &qword_10022F490);
    v28._uint64_t countAndFlagsBits = 41;
    v28._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v29 = static os_log_type_t.default.getter();
    sub_10004841C(v29);
    swift_bridgeObjectRelease();
    sub_10004D510(0, (unint64_t *)&qword_10022FE70);
    uint64_t v30 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v31 = swift_allocObject();
    NSString v32 = v44;
    *(void *)(v31 + 16) = v30;
    *(void *)(v31 + 24) = v32;
    *(void *)(v31 + 32) = a3;
    *(void *)(v31 + 40) = a4;
    *(void *)(v31 + 48) = v36;
    *(void *)(v31 + 56) = a5;
    *(void *)(v31 + 64) = a6;
    *(unsigned char *)(v31 + 72) = a8 & 1;
    *(void *)(v31 + 80) = a9;
    id v33 = v32;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    a3 = sub_100010358(a1, (uint64_t)sub_1000F641C, v31);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000003BLL, 0x80000001001D1AA0, 0, 0);
    swift_willThrow();
  }
  return a3;
}

void sub_1000F4C78(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, char *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v61 = a8;
  id v62 = a7;
  uint64_t v59 = a3;
  uint64_t v60 = a2;
  uint64_t v14 = type metadata accessor for JSCallable();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v63 = v16;
  Swift::String v17 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v18 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v20 = (void *)Strong;
    if (a5) {
      id v21 = *(id *)(a5 + OBJC_IVAR____TtC14amsengagementd9JSAccount_account);
    }
    else {
      id v21 = 0;
    }
    uint64_t v58 = v12;
    uint64_t v56 = a12;
    int v55 = a11;
    uint64_t v57 = a10;
    uint64_t v54 = a9;
    NSString v32 = self;
    NSString v33 = String._bridgeToObjectiveC()();
    if (qword_10022C3E0 != -1) {
      swift_once();
    }
    id v62 = [v32 identifierStoreWithAccount:v21 bagNamespace:v33 bag:qword_10022D990];

    uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v34 = v17;
    v53(v17, (uint64_t)v59, v14);
    uint64_t v35 = *(unsigned __int8 *)(v15 + 80);
    v52[2] = v35 | 7;
    uint64_t v36 = swift_allocObject();
    uint64_t v37 = v61;
    *(void *)(v36 + 16) = v61;
    *(void *)(v36 + 24) = v20;
    uint64_t v38 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
    v52[1] = v15 + 32;
    uint64_t v59 = v38;
    v38(v36 + ((v35 + 32) & ~v35), v34, v14);
    uint64_t v68 = sub_1000F6454;
    uint64_t v69 = v36;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v65 = 1107296256;
    uint64_t v66 = sub_100181204;
    uint64_t v67 = &unk_1002124F8;
    uint64_t v39 = _Block_copy(&aBlock);
    swift_retain();
    id v40 = v20;
    swift_release();
    [v62 addErrorBlock:v39];
    _Block_release(v39);
    v53(v34, v60, v14);
    uint64_t v41 = (v35 + 56) & ~v35;
    unint64_t v42 = (v63 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v43 = swift_allocObject();
    uint64_t v44 = v57;
    *(void *)(v43 + 16) = v54;
    *(void *)(v43 + 24) = v44;
    *(unsigned char *)(v43 + 32) = v55 & 1;
    *(void *)(v43 + 40) = v37;
    *(void *)(v43 + 48) = v40;
    v59(v43 + v41, v34, v14);
    *(void *)(v43 + v42) = v56;
    uint64_t v68 = sub_1000F650C;
    uint64_t v69 = v43;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v65 = 1107296256;
    uint64_t v66 = sub_1000E84B0;
    uint64_t v67 = &unk_100212548;
    uint64_t v45 = _Block_copy(&aBlock);
    swift_retain();
    id v46 = v40;
    swift_bridgeObjectRetain();
    swift_release();
    id v47 = v62;
    [v62 addSuccessBlock:v45];
    _Block_release(v45);
  }
  else
  {
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v22 = type metadata accessor for JSMetrics();
    uint64_t v67 = (void *)sub_100043478(&qword_1002304C0);
    long long aBlock = (void **)v22;
    id v23 = (id)AMSLogKey();
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v27 = v26;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v28._uint64_t countAndFlagsBits = 0;
      v28._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      sub_100049788(&aBlock, (uint64_t)v67);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v70[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v70, &qword_10022F490);
      v30._uint64_t countAndFlagsBits = 5972026;
      v30._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      uint64_t MetatypeMetadata = &type metadata for String;
      v70[0] = v25;
      v70[1] = v27;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v70, &qword_10022F490);
      v31._uint64_t countAndFlagsBits = 93;
      v31._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v48._uint64_t countAndFlagsBits = 0;
      v48._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v48);
      sub_100049788(&aBlock, (uint64_t)v67);
      uint64_t v49 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v70[0] = v49;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v70, &qword_10022F490);
      v50._uint64_t countAndFlagsBits = 58;
      v50._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v50);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&aBlock);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v51 = static os_log_type_t.error.getter();
    sub_10004841C(v51);
    swift_bridgeObjectRelease();
  }
}

void sub_1000F5398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1000209F4();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v28 = type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v30 = v29;
  uint64_t v32 = *(void *)(v31 + 64);
  __chkstk_darwin(v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))((char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v28);
  unint64_t v34 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v25;
  *(void *)(v35 + 24) = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v35 + v34, (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v28);
  id v36 = v25;
  swift_errorRetain();
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  swift_release();
  sub_100020FDC();
}

uint64_t sub_1000F54B0(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v31 = type metadata accessor for JSMetrics();
  v30[0] = (uint64_t)a1;
  id v5 = a1;
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._uint64_t countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    sub_100049788(v30, v31);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v28, &qword_10022F490);
    v13._uint64_t countAndFlagsBits = 5972026;
    v13._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    uint64_t MetatypeMetadata = &type metadata for String;
    v28[0] = v8;
    v28[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v28, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 93;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    sub_100049788(v30, v31);
    uint64_t v16 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v28, &qword_10022F490);
    v17._uint64_t countAndFlagsBits = 58;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v30);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._object = (void *)0x80000001001D1B60;
  v18._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  swift_getErrorValue();
  uint64_t v31 = v27;
  Swift::String v19 = sub_10003BAA4(v30);
  (*(void (**)(uint64_t *))(*(void *)(v27 - 8) + 16))(v19);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)v30, &qword_10022F490);
  v20._uint64_t countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  LogMessage.init(stringInterpolation:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v21 = static os_log_type_t.error.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1001C3110;
  id v23 = objc_allocWithZone((Class)type metadata accessor for JSError());
  swift_errorRetain();
  id v24 = sub_100027FB8(a2);
  uint64_t v25 = sub_100028288();

  *(void *)(v22 + 56) = sub_100043478(&qword_10022D7B0);
  *(void *)(v22 + 32) = v25;
  sub_10001147C(v22);
  return swift_bridgeObjectRelease();
}

void sub_1000F58C0(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v24 = a7;
  uint64_t v25 = a8;
  uint64_t v26 = a5;
  uint64_t v12 = type metadata accessor for JSCallable();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  sub_10004D510(0, (unint64_t *)&unk_100233D70);
  swift_bridgeObjectRetain();
  id v15 = sub_100189AEC(a2, a3, a4);
  sub_100043478(&qword_100231DE0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1001C4B80;
  *(void *)(v16 + 32) = v15;
  uint64_t v27 = v16;
  specialized Array._endMutation()();
  id v17 = v15;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [a1 generateEventFieldsForKeys:isa];

  uint64_t v20 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v12);
  unint64_t v22 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v21;
  *(void *)(v23 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v23 + v22, (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  *(void *)(v23 + ((v14 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
  swift_retain();
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  swift_release();
  swift_release();
}

uint64_t sub_1000F5B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    uint64_t v27 = (void *)type metadata accessor for JSMetrics();
    *(void *)&long long v26 = v8;
    sub_100043510(&v26, &v28);
  }
  else
  {
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    *(void *)&long long v28 = a4;
  }
  swift_beginAccess();
  uint64_t v9 = swift_unknownObjectWeakLoadStrong();
  if (v9
    && (uint64_t v10 = (void *)v9,
        uint64_t v12 = *(void *)(v9 + OBJC_IVAR____TtC14amsengagementd9JSMetrics_config + 24),
        uint64_t v11 = *(void *)(v9 + OBJC_IVAR____TtC14amsengagementd9JSMetrics_config + 32),
        swift_bridgeObjectRetain(),
        v10,
        v11))
  {
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._uint64_t countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(&v28, MetatypeMetadata);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t v27 = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v26 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v26, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 5972026;
    v15._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    uint64_t v27 = &type metadata for String;
    *(void *)&long long v26 = v12;
    *((void *)&v26 + 1) = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v26, &qword_10022F490);
    v16._uint64_t countAndFlagsBits = 93;
    v16._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    LogMessage.init(stringInterpolation:)();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v17._uint64_t countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    sub_100049788(&v28, MetatypeMetadata);
    uint64_t v18 = swift_getDynamicType();
    uint64_t v27 = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v26 = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v26, &qword_10022F490);
    v19._uint64_t countAndFlagsBits = 58;
    v19._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    LogMessage.init(stringInterpolation:)();
  }
  swift_bridgeObjectRelease();
  sub_10004377C((uint64_t)&v28);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._object = (void *)0x80000001001D1B40;
  v20._uint64_t countAndFlagsBits = 0xD000000000000017;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  uint64_t v21 = sub_100043478(&qword_10022D6F0);
  uint64_t MetatypeMetadata = v21;
  *(void *)&long long v28 = a2;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)&v28, &qword_10022F490);
  v22._uint64_t countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  LogMessage.init(stringInterpolation:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v23 = static os_log_type_t.default.getter();
  sub_10004841C(v23);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1001C3110;
  *(void *)(v24 + 56) = v21;
  *(void *)(v24 + 32) = a2;
  swift_bridgeObjectRetain();
  sub_10001147C(v24);
  return swift_bridgeObjectRelease();
}

id sub_1000F5F84()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  id v5 = v4;
  id v7 = v6;
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;
  id v14 = v5;
  id v15 = v7;
  v1(v5, v8, v10, v11, v13, v3);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100020FDC();
  return v16;
}

id sub_1000F6048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10004D120(0x746E756F636361, 0xE700000000000000, a4, &v13);
  if (v14)
  {
    type metadata accessor for JSAccount();
    if (sub_1000458B8()) {
      id v5 = (char *)v12;
    }
    else {
      id v5 = 0;
    }
  }
  else
  {
    sub_10002CC0C((uint64_t)&v13, &qword_10022F490);
    id v5 = 0;
  }
  sub_10004D120(0x6C616E6F73726570, 0xEC00000064657A69, a4, &v13);
  if (v14)
  {
    if (sub_1000458B8())
    {
      char v6 = v12 ^ 1;
      goto LABEL_11;
    }
  }
  else
  {
    sub_10002CC0C((uint64_t)&v13, &qword_10022F490);
  }
  char v6 = 1;
LABEL_11:
  sub_10004D510(0, (unint64_t *)&qword_10022D810);
  swift_bridgeObjectRetain();
  id v7 = sub_1001571F4();
  if (v5) {
    id v8 = *(id *)&v5[OBJC_IVAR____TtC14amsengagementd9JSAccount_account];
  }
  else {
    id v8 = 0;
  }
  [v7 setAccount:v8];

  [v7 setAnonymous:v6 & 1];
  [v7 setSuppressEngagement:1];
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  [v7 addPropertiesWithDictionary:isa];

  sub_10004D120(0xD000000000000012, 0x80000001001D1A50, a4, &v13);
  if (v14)
  {
    sub_100043478(&qword_100232940);
    if (swift_dynamicCast())
    {
      sub_1000F13B8(v12);
      swift_bridgeObjectRelease();
      Class v10 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v7 removePropertiesForKeys:v10];
    }
  }
  else
  {

    sub_10002CC0C((uint64_t)&v13, &qword_10022F490);
  }
  return v7;
}

void sub_1000F62EC()
{
}

id sub_1000F632C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSMetrics();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000F63B0()
{
  sub_100043CB0();
  return sub_1000F4760(v1, v2, v3, v4, v5, v6, v7, v8, *(void *)(v0 + 72));
}

uint64_t sub_1000F63DC()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F6414()
{
  return sub_100009B7C(88);
}

void sub_1000F641C()
{
  sub_10004DD9C();
  sub_1000F4C78(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, *(void *)(v0 + 80));
}

uint64_t sub_1000F6454(uint64_t a1)
{
  return sub_1000F6700(a1, &unk_1002125A8, sub_1000F6674);
}

uint64_t sub_1000F6474()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  sub_10004CEB8();
  swift_bridgeObjectRelease();
  swift_release();

  uint64_t v1 = sub_1000210B4();
  v2(v1);
  uint64_t v3 = sub_100048170();
  return _swift_deallocObject(v3, v4, v5);
}

void sub_1000F650C(void *a1)
{
  uint64_t v3 = type metadata accessor for JSCallable();
  sub_100044798(v3);
  sub_100021210();
  sub_10004BF70();
  uint64_t v11 = *(void *)(v1 + v10);
  sub_1000F58C0(a1, v4, v5, v6, v7, v8, v9, v11);
}

uint64_t sub_1000F657C()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  sub_10004CEB8();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_1000210B4();
  v1(v0);
  uint64_t v2 = sub_100048170();
  return _swift_deallocObject(v2, v3, v4);
}

uint64_t sub_1000F660C()
{
  uint64_t v1 = type metadata accessor for JSCallable();
  sub_100044798(v1);
  sub_100021210();
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + v5);
  return sub_1000F5B54(v3, v4, v0 + v2, v6);
}

uint64_t sub_1000F6674()
{
  return sub_1000F69CC((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1000F54B0);
}

char *sub_1000F668C()
{
  sub_100043CB0();
  return sub_1000F30D0(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1000F66A8()
{
  return sub_100009B7C(73);
}

void sub_1000F66B0()
{
  sub_10004DD9C();
  sub_1000F35FC(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1000F66E0(uint64_t a1)
{
  return sub_1000F6700(a1, &unk_1002126C0, sub_1000F69B4);
}

#error "1000F6740: call analysis failed (funcsize=21)"

uint64_t sub_1000F6754()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  swift_bridgeObjectRelease();
  swift_release();

  uint64_t v1 = sub_1000210B4();
  v2(v1);
  uint64_t v3 = sub_100048198();
  return _swift_deallocObject(v3, v4, v5);
}

void sub_1000F67F0(void *a1)
{
  uint64_t v2 = type metadata accessor for JSCallable();
  sub_100044E90(v2);
  sub_10004BF70();
  sub_1000F40F8(a1, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1000F6840()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();

  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1000210B4();
  v2(v1);
  uint64_t v3 = sub_100048198();
  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_1000F68D4()
{
  uint64_t v1 = type metadata accessor for JSCallable();
  sub_100044E90(v1);
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  return sub_1000F42CC(v2, v3, v4);
}

uint64_t sub_1000F6920()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();

  swift_errorRelease();
  uint64_t v1 = sub_1000210B4();
  v2(v1);
  uint64_t v3 = sub_100048198();
  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_1000F69B4()
{
  return sub_1000F69CC((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1000F3CE4);
}

uint64_t sub_1000F69CC(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = type metadata accessor for JSCallable();
  sub_100044E90(v2);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a1(v4, v5, v6);
}

uint64_t sub_1000F6A24(void *a1)
{
  return sub_1000F1B38(a1, *(void **)(v1 + 16));
}

uint64_t sub_1000F6A40()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000F6A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000F1F70(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1000F6AA0(uint64_t a1)
{
  return sub_1000F6AB8(a1, (uint64_t (*)(uint64_t))sub_1000F2638);
}

uint64_t sub_1000F6AB8(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = type metadata accessor for JSCallable();
  sub_100044E90(v3);
  sub_10004724C();
  return a2(a1);
}

uint64_t sub_1000F6B18(uint64_t a1)
{
  return sub_1000F6AB8(a1, (uint64_t (*)(uint64_t))sub_1000F2B2C);
}

uint64_t sub_1000F6B30()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  sub_10004520C();
  uint64_t v2 = sub_1000210B4();
  v3(v2);

  uint64_t v4 = sub_100048170();
  return _swift_deallocObject(v4, v5, v6);
}

uint64_t sub_1000F6BC0()
{
  return sub_1000F6C80((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1000F2C94);
}

uint64_t sub_1000F6BD8()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  sub_10004520C();
  uint64_t v0 = sub_1000210B4();
  v1(v0);
  swift_errorRelease();
  uint64_t v2 = sub_100048170();
  return _swift_deallocObject(v2, v3, v4);
}

uint64_t sub_1000F6C68()
{
  return sub_1000F6C80((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1000F27A4);
}

uint64_t sub_1000F6C80(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = type metadata accessor for JSCallable();
  sub_100044798(v2);
  sub_100021210();
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + v5);
  return a1(v4, v1 + v3, v6);
}

id sub_1000F6D18()
{
  swift_retain();
  NWPathMonitor.cancel()();
  swift_release();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSNetwork();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000F6DB0()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F6DE8()
{
  sub_100010084();
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_1000F6E70(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v36 = a3;
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v9 - 8);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v10 = static RunLoopWorkerThread.current.getter();
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v30 = a5;
    uint64_t v31 = a1;
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    uint64_t v35 = (void *)type metadata accessor for JSPrivacy();
    v34[0] = a2;
    id v12 = a2;
    id v13 = (id)AMSLogKey();
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      sub_100049788(v34, (uint64_t)v35);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v32[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v32);
      v20._uint64_t countAndFlagsBits = 5972026;
      v20._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      uint64_t MetatypeMetadata = &type metadata for String;
      v32[0] = v15;
      v32[1] = v17;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v32);
      v21._uint64_t countAndFlagsBits = 93;
      v21._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v23._uint64_t countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      sub_100049788(v34, (uint64_t)v35);
      uint64_t v24 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v32[0] = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v32);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v34);
    LogMessage.init(stringLiteral:)();
    uint64_t v35 = &type metadata for String;
    uint64_t v26 = v36;
    v34[0] = v36;
    v34[1] = a4;
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)v34);
    uint64_t v27 = static os_log_type_t.default.getter();
    sub_10004841C(v27);
    swift_bridgeObjectRelease();
    sub_100010084();
    long long v28 = (void *)swift_allocObject();
    void v28[2] = v30;
    void v28[3] = v26;
    v28[4] = a4;
    v28[5] = v11;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_100010358(v31, (uint64_t)sub_1000F7734, (uint64_t)v28);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v22 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000002CLL, 0x80000001001D0CC0, 0, 0);
    swift_willThrow();
  }
  return v22;
}

uint64_t sub_1000F72B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for JSCallable();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  unsigned __int8 v9 = sub_1000F7428(a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *(unsigned char *)(v11 + v10 + v8) = v9 & 1;
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  return swift_release();
}

id sub_1000F7428(uint64_t a1)
{
  if (!a1)
  {
    long long v9 = 0u;
    long long v10 = 0u;
    goto LABEL_6;
  }
  sub_10004D120(0x746E756F636361, 0xE700000000000000, a1, &v9);
  if (!*((void *)&v10 + 1))
  {
LABEL_6:
    sub_1000423CC((uint64_t)&v9);
    goto LABEL_7;
  }
  type metadata accessor for JSAccount();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    uint64_t v6 = self;
    NSString v1 = String._bridgeToObjectiveC()();
    id v5 = [v6 acknowledgementNeededForPrivacyIdentifier:v1];
    goto LABEL_8;
  }
  NSString v1 = v8;
  objc_super v2 = self;
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = *(id *)&v8[OBJC_IVAR____TtC14amsengagementd9JSAccount_account];
  id v5 = [v2 acknowledgementNeededForPrivacyIdentifier:v3 account:v4];

LABEL_8:
  return v5;
}

uint64_t sub_1000F7570(uint64_t a1, char a2)
{
  sub_100043478(&qword_10022D808);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1001C3110;
  *(void *)(v3 + 56) = &type metadata for Bool;
  *(unsigned char *)(v3 + 32) = a2;
  sub_10001147C(v3);
  return swift_bridgeObjectRelease();
}

id sub_1000F7698()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSPrivacy();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000F76CC(void *a1)
{
  return sub_1000F6E70(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1000F76EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000F7734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000F72B0(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1000F7754()
{
  uint64_t v1 = type metadata accessor for JSCallable();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1000F77E8()
{
  uint64_t v1 = *(void *)(type metadata accessor for JSCallable() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  char v3 = *(unsigned char *)(v0 + v2 + *(void *)(v1 + 64));
  return sub_1000F7570(v0 + v2, v3);
}

id sub_1000F786C(uint64_t a1)
{
  v1[OBJC_IVAR____TtC14amsengagementd18JSScheduleDatabase_app] = *(unsigned char *)(a1 + 1);
  char v3 = v1;
  *(void *)&v3[OBJC_IVAR____TtC14amsengagementd18JSScheduleDatabase_schedules] = sub_10007E6A0();

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for JSScheduleDatabase();
  id v4 = objc_msgSendSuper2(&v6, "init");
  swift_release();
  sub_100024DF0(a1);
  return v4;
}

void sub_1000F7900()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = sub_100043478(&qword_10022E6E0);
  uint64_t v8 = sub_1000208F0(v7);
  __chkstk_darwin(v8);
  sub_100020658();
  sub_100085C64(v4, v2, v0);
  uint64_t v9 = type metadata accessor for ScheduleInfo(0);
  if (sub_10004FD40(v0, 1, v9) == 1)
  {
    sub_10002CC0C(v0, &qword_10022E6E0);
  }
  else
  {
    sub_100166A28();
    uint64_t v11 = v10;
    sub_1000800C0(v0);
    sub_1000B0A1C(v11);
    swift_bridgeObjectRelease();
  }
  sub_100020FDC();
}

void sub_1000F7CD4()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_10002D300();
  uint64_t v4 = sub_1000864D4(v1);
  sub_1000F86A4(v4);
  swift_bridgeObjectRelease();
  sub_100020FDC();
}

void sub_1000F7FF0()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_10002D300();
  sub_100087024(v3, v1);
  sub_100020FDC();
}

void sub_1000F82C4()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100020658();
  uint64_t v5 = *(void *)(v2 + 16);
  if (v5)
  {
    char v6 = *(unsigned char *)(v0 + OBJC_IVAR____TtC14amsengagementd18JSScheduleDatabase_app);
    swift_bridgeObjectRetain();
    uint64_t v7 = (void **)(v2 + 40);
    do
    {
      uint64_t v8 = (uint64_t)*(v7 - 1);
      uint64_t v9 = *v7;
      swift_bridgeObjectRetain();
      sub_100167AE4(v6, v8, v9);
      sub_1001ADE08();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  sub_100087700(v2);
  sub_100020FDC();
}

void sub_1000F85FC()
{
}

id sub_1000F863C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSScheduleDatabase();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for JSScheduleDatabase()
{
  return self;
}

uint64_t sub_1000F86A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScheduleInfo(0);
  uint64_t v33 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100043478((uint64_t *)&unk_1002322D0);
  uint64_t result = static _DictionaryStorage.copy(original:)();
  char v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v34 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v9 = a1 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  uint64_t v30 = v9;
  int64_t v31 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v32 = result + 64;
  if ((v12 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v14 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    Swift::String v19 = (uint64_t *)(*(void *)(v34 + 48) + 16 * i);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    sub_100087CD0(*(void *)(v34 + 56) + *(void *)(v33 + 72) * i, (uint64_t)v4);
    swift_bridgeObjectRetain();
    sub_100166A28();
    sub_1000B0A1C(v22);
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t result = sub_1000800C0((uint64_t)v4);
    *(void *)(v32 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    Swift::String v25 = (void *)(v6[6] + 16 * i);
    *Swift::String v25 = v21;
    v25[1] = v20;
    *(void *)(v6[7] + 8 * i) = v24;
    uint64_t v26 = v6[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v6[2] = v28;
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v16 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_24;
    }
    if (v16 >= v31) {
      return (uint64_t)v6;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v16);
    ++v7;
    if (!v17)
    {
      int64_t v7 = v16 + 1;
      if (v16 + 1 >= v31) {
        return (uint64_t)v6;
      }
      unint64_t v17 = *(void *)(v30 + 8 * v7);
      if (!v17)
      {
        int64_t v7 = v16 + 2;
        if (v16 + 2 >= v31) {
          return (uint64_t)v6;
        }
        unint64_t v17 = *(void *)(v30 + 8 * v7);
        if (!v17) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v13 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v31) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v30 + 8 * v18);
  if (v17)
  {
    int64_t v7 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v7 >= v31) {
      return (uint64_t)v6;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1000F8940()
{
  return sub_10000CCA4();
}

uint64_t sub_1000F8970()
{
  sub_10004DDB4();
  swift_getObjectType();
  sub_100010084();
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_1000F89FC(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  type metadata accessor for RunLoopWorkerThread();
  uint64_t result = static RunLoopWorkerThread.current.getter();
  if (!result)
  {
    type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000002CLL, 0x80000001001D0CC0, 0, 0);
    swift_willThrow();
    return v7;
  }
  uint64_t v15 = result;
  uint64_t v16 = HIBYTE(a3) & 0xF;
  uint64_t v17 = a2 & 0xFFFFFFFFFFFFLL;
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v18 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v18 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v18)
  {
LABEL_48:
    type metadata accessor for JSError();
    sub_1000DE184(2, 0x2073692044495344, 0xEF64696C61766E69, 0, 0);
    swift_willThrow();
    swift_release();
    return v7;
  }
  if ((a3 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = (uint64_t)sub_1000C67BC(a2, a3, 10);
    LOBYTE(a2) = v37;
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  if ((a3 & 0x2000000000000000) == 0)
  {
    if ((a2 & 0x1000000000000000) != 0) {
      Swift::String v19 = (unsigned __int8 *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      Swift::String v19 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    uint64_t v20 = (uint64_t)sub_1000100C4(v19, v17, 10);
    LOBYTE(a2) = v21 & 1;
LABEL_46:
    if ((a2 & 1) == 0)
    {
      id v31 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v20];
      sub_100010084();
      uint64_t v32 = (void *)swift_allocObject();
      _OWORD v32[2] = a4;
      void v32[3] = v31;
      void v32[4] = a5;
      v32[5] = v15;
      v32[6] = a6;
      swift_bridgeObjectRetain();
      id v33 = v31;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v7 = sub_100010358(a1, (uint64_t)sub_1000F96D4, (uint64_t)v32);
      swift_release();

      swift_release();
      return v7;
    }
    goto LABEL_48;
  }
  v38[0] = a2;
  v38[1] = a3 & 0xFFFFFFFFFFFFFFLL;
  if (a2 == 43)
  {
    if (!v16) {
      goto LABEL_59;
    }
    if (v16 == 1 || (BYTE1(a2) - 48) > 9u) {
      goto LABEL_33;
    }
    uint64_t v20 = (BYTE1(a2) - 48);
    if (v16 != 2)
    {
      if ((BYTE2(a2) - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v20 = 10 * (BYTE1(a2) - 48) + (BYTE2(a2) - 48);
      uint64_t v22 = v16 - 3;
      if (v22)
      {
        uint64_t v23 = (unsigned __int8 *)v38 + 3;
        while (1)
        {
          unsigned int v24 = *v23 - 48;
          if (v24 > 9) {
            goto LABEL_33;
          }
          uint64_t v25 = 10 * v20;
          if ((unsigned __int128)(v20 * (__int128)10) >> 64 != (10 * v20) >> 63) {
            goto LABEL_33;
          }
          uint64_t v20 = v25 + v24;
          if (__OFADD__(v25, v24)) {
            goto LABEL_33;
          }
          LOBYTE(a2) = 0;
          ++v23;
          if (!--v22) {
            goto LABEL_46;
          }
        }
      }
    }
LABEL_45:
    LOBYTE(a2) = 0;
    goto LABEL_46;
  }
  if (a2 != 45)
  {
    if (!v16 || (a2 - 48) > 9u) {
      goto LABEL_33;
    }
    uint64_t v20 = (a2 - 48);
    if (v16 != 1)
    {
      if ((BYTE1(a2) - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v20 = 10 * (a2 - 48) + (BYTE1(a2) - 48);
      uint64_t v26 = v16 - 2;
      if (v26)
      {
        BOOL v27 = (unsigned __int8 *)v38 + 2;
        while (1)
        {
          unsigned int v28 = *v27 - 48;
          if (v28 > 9) {
            goto LABEL_33;
          }
          uint64_t v29 = 10 * v20;
          if ((unsigned __int128)(v20 * (__int128)10) >> 64 != (10 * v20) >> 63) {
            goto LABEL_33;
          }
          uint64_t v20 = v29 + v28;
          if (__OFADD__(v29, v28)) {
            goto LABEL_33;
          }
          LOBYTE(a2) = 0;
          ++v27;
          if (!--v26) {
            goto LABEL_46;
          }
        }
      }
    }
    goto LABEL_45;
  }
  if (v16)
  {
    if (v16 != 1 && (BYTE1(a2) - 48) <= 9u)
    {
      if (v16 == 2)
      {
        LOBYTE(a2) = 0;
        uint64_t v20 = -(uint64_t)(BYTE1(a2) - 48);
        goto LABEL_46;
      }
      if ((BYTE2(a2) - 48) <= 9u)
      {
        uint64_t v20 = -10 * (BYTE1(a2) - 48) - (BYTE2(a2) - 48);
        uint64_t v30 = v16 - 3;
        if (!v30) {
          goto LABEL_45;
        }
        uint64_t v34 = (unsigned __int8 *)v38 + 3;
        while (1)
        {
          unsigned int v35 = *v34 - 48;
          if (v35 > 9) {
            break;
          }
          uint64_t v36 = 10 * v20;
          if ((unsigned __int128)(v20 * (__int128)10) >> 64 != (10 * v20) >> 63) {
            break;
          }
          uint64_t v20 = v36 - v35;
          if (__OFSUB__(v36, v35)) {
            break;
          }
          LOBYTE(a2) = 0;
          ++v34;
          if (!--v30) {
            goto LABEL_46;
          }
        }
      }
    }
LABEL_33:
    uint64_t v20 = 0;
    LOBYTE(a2) = 1;
    goto LABEL_46;
  }
  __break(1u);
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_1000F8E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v33 = a7;
  uint64_t v34 = a5;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v8 = type metadata accessor for JSCallable();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = sub_10001348C(a4);
  char v17 = v16;
  if (qword_10022C3F0 != -1) {
    swift_once();
  }
  if (v17) {
    unint64_t v18 = 0;
  }
  else {
    unint64_t v18 = v15;
  }
  unint64_t v30 = v18;
  id v29 = *(id *)(qword_100244080 + 16);
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_10002318C(v19);
  char v21 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v21(v14, v31, v8);
  v21(v12, v32, v8);
  uint64_t v22 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v23 = (v22 + 24) & ~v22;
  uint64_t v24 = (v10 + v22 + v23) & ~v22;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v33;
  uint64_t v26 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v26(v25 + v23, v14, v8);
  v26(v25 + v24, v12, v8);
  swift_retain();
  BOOL v27 = v29;
  sub_10016D82C(v34, v20, v30, (uint64_t)sub_1000F96FC, v25);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1000F90B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    uint64_t v4 = qword_10022C490;
    swift_bridgeObjectRetain();
    if (v4 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    LogMessage.init(stringLiteral:)();
    _StringGuts.grow(_:)(26);
    swift_bridgeObjectRelease();
    v21[0] = 0xD000000000000018;
    v21[1] = 0x80000001001D2210;
    v5._uint64_t countAndFlagsBits = Dictionary.description.getter();
    String.append(_:)(v5);
    swift_bridgeObjectRelease();
    uint64_t v22 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)v21);
    uint64_t v6 = static os_log_type_t.debug.getter();
    sub_10004841C(v6);
    swift_bridgeObjectRelease();
    sub_100043478(&qword_10022D808);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1001C3110;
    *(void *)(v7 + 56) = sub_100043478(&qword_10022D6F0);
    *(void *)(v7 + 32) = a1;
    sub_10001147C(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = (objc_class *)type metadata accessor for JSError();
    if (a3)
    {
      objc_allocWithZone(v9);
      swift_errorRetain();
      uint64_t v10 = (uint64_t)sub_100027FB8(a3);
    }
    else
    {
      uint64_t v10 = sub_1000DE184(0, 0x206E776F6E6B6E55, 0xED0000726F727265, 0, 0);
    }
    uint64_t v11 = (void *)v10;
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    LogMessage.init(stringLiteral:)();
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease();
    id v12 = v11;
    id v13 = objc_msgSend(v12, "description", 0xD00000000000001ELL, 0x80000001001D21F0);
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    char v16 = v15;

    v17._uint64_t countAndFlagsBits = v14;
    v17._object = v16;
    String.append(_:)(v17);

    swift_bridgeObjectRelease();
    uint64_t v22 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)v21);
    uint64_t v18 = static os_log_type_t.error.getter();
    sub_10004841C(v18);
    swift_bridgeObjectRelease();
    sub_100043478(&qword_10022D808);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1001C3110;
    *(void *)(v19 + 56) = type metadata accessor for JSError();
    *(void *)(v19 + 32) = v12;
    id v20 = v12;
    sub_10001147C(v19);
    swift_bridgeObjectRelease();
  }
}

id sub_1000F962C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSServerDataCache();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000F9660(void *a1)
{
  return sub_1000F89FC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1000F9684()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000F96D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000F8E64(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_1000F96FC()
{
  return sub_1000191C4();
}

void sub_1000F9720()
{
  uint64_t v1 = type metadata accessor for JSCallable();
  sub_100044798(v1);
  uint64_t v2 = sub_100046890();
  uint64_t v5 = *(void *)(v0 + v4);
  sub_1000F90B0(v2, v0 + v3, v5);
}

uint64_t sub_1000F9784(void *a1)
{
  return sub_10000FC60(a1, (uint64_t)&unk_1002128F0, (uint64_t)sub_1000F97BC);
}

void sub_1000F97BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1000F9804()
{
  return sub_1000191C4();
}

void sub_1000F9828()
{
}

uint64_t sub_1000F984C()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = ((v5 + ((*(void *)(v4 + 64) + ((v5 + 24) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v5) + *(void *)(v4 + 64);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void (**)(void))(v2 + 8);
  sub_10004874C();
  v8();
  swift_errorRelease();
  sub_10004874C();
  v8();
  return _swift_deallocObject(v0, v7, v6);
}

char *sub_1000F991C(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    if (sub_10004FD40((uint64_t)&a2[v9], 1, v7))
    {
      uint64_t v12 = sub_100043478(&qword_10022FB40);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      sub_100021AC0((uint64_t)v10, 0, 1, v7);
    }
    v8(&a1[a3[6]], &a2[a3[6]], v7);
    v8(&a1[a3[7]], &a2[a3[7]], v7);
    uint64_t v14 = a3[8];
    uint64_t v15 = &a1[v14];
    char v16 = &a2[v14];
    if (sub_10004FD40((uint64_t)&a2[v14], 1, v7))
    {
      uint64_t v17 = sub_100043478(&qword_10022FB40);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v8(v15, v16, v7);
      sub_100021AC0((uint64_t)v15, 0, 1, v7);
    }
    v8(&a1[a3[9]], &a2[a3[9]], v7);
    v8(&a1[a3[10]], &a2[a3[10]], v7);
    uint64_t v18 = a3[12];
    a1[a3[11]] = a2[a3[11]];
    uint64_t v19 = *(void **)&a2[v18];
    *(void *)&a1[v18] = v19;
    id v20 = v19;
  }
  return a1;
}

char *sub_1000F9B70(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = sub_10004FD40((uint64_t)&a1[v9], 1, v6);
  int v13 = sub_10004FD40((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
      sub_100021AC0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v14 = sub_100043478(&qword_10022FB40);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  v8(&a1[a3[6]], &a2[a3[6]], v6);
  v8(&a1[a3[7]], &a2[a3[7]], v6);
  uint64_t v15 = a3[8];
  char v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = sub_10004FD40((uint64_t)&a1[v15], 1, v6);
  int v19 = sub_10004FD40((uint64_t)v17, 1, v6);
  if (!v18)
  {
    if (!v19)
    {
      v8(v16, v17, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_100043478(&qword_10022FB40);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v17, v6);
  sub_100021AC0((uint64_t)v16, 0, 1, v6);
LABEL_13:
  v8(&a1[a3[9]], &a2[a3[9]], v6);
  v8(&a1[a3[10]], &a2[a3[10]], v6);
  a1[a3[11]] = a2[a3[11]];
  uint64_t v21 = a3[12];
  uint64_t v22 = *(void **)&a2[v21];
  uint64_t v23 = *(void **)&a1[v21];
  *(void *)&a1[v21] = v22;
  id v24 = v22;

  return a1;
}

char *sub_1000F9E64(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (sub_10004FD40((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_100043478(&qword_10022FB40);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    sub_100021AC0((uint64_t)v9, 0, 1, v6);
  }
  v7(&a1[a3[6]], &a2[a3[6]], v6);
  v7(&a1[a3[7]], &a2[a3[7]], v6);
  uint64_t v12 = a3[8];
  int v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  if (sub_10004FD40((uint64_t)&a2[v12], 1, v6))
  {
    uint64_t v15 = sub_100043478(&qword_10022FB40);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v7(v13, v14, v6);
    sub_100021AC0((uint64_t)v13, 0, 1, v6);
  }
  v7(&a1[a3[9]], &a2[a3[9]], v6);
  v7(&a1[a3[10]], &a2[a3[10]], v6);
  uint64_t v16 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  return a1;
}

char *sub_1000FA064(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = sub_10004FD40((uint64_t)&a1[v9], 1, v6);
  int v13 = sub_10004FD40((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
      sub_100021AC0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v14 = sub_100043478(&qword_10022FB40);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  v8(&a1[a3[6]], &a2[a3[6]], v6);
  v8(&a1[a3[7]], &a2[a3[7]], v6);
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = sub_10004FD40((uint64_t)&a1[v15], 1, v6);
  int v19 = sub_10004FD40((uint64_t)v17, 1, v6);
  if (!v18)
  {
    if (!v19)
    {
      v8(v16, v17, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_100043478(&qword_10022FB40);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v16, v17, v6);
  sub_100021AC0((uint64_t)v16, 0, 1, v6);
LABEL_13:
  v8(&a1[a3[9]], &a2[a3[9]], v6);
  v8(&a1[a3[10]], &a2[a3[10]], v6);
  uint64_t v21 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  uint64_t v22 = *(void **)&a1[v21];
  *(void *)&a1[v21] = *(void *)&a2[v21];

  return a1;
}

uint64_t sub_1000FA350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FA364);
}

uint64_t sub_1000FA364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for URL();
  sub_100044124();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return sub_10004FD40(v9, a2, v8);
  }
  sub_100043478(&qword_10022FB40);
  sub_100044124();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + *(int *)(a3 + 48));
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_1000FA41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FA430);
}

void sub_1000FA430(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for URL();
  sub_100044124();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_100043478(&qword_10022FB40);
    sub_100044124();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 48)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }
  sub_100021AC0(v11, a2, a2, v10);
}

void sub_1000FA4E4()
{
  type metadata accessor for URL();
  if (v0 <= 0x3F)
  {
    sub_10008317C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000FA5CC(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020C430, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000FA620(char a1)
{
  if (a1) {
    return 0x566B63617074656ALL;
  }
  else {
    return 0x6B63617074656ALL;
  }
}

uint64_t sub_1000FA65C(char *a1, char *a2)
{
  return sub_10007DFE0(*a1, *a2);
}

Swift::Int sub_1000FA668()
{
  return sub_100059FE8();
}

uint64_t sub_1000FA670()
{
  return sub_10005AC38();
}

Swift::Int sub_1000FA678()
{
  return sub_10005ACD8();
}

uint64_t sub_1000FA680@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000FA5CC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000FA6B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000FA620(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unsigned char *storeEnumTagSinglePayload for SourceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FA7A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SourceType()
{
  return &type metadata for SourceType;
}

unint64_t sub_1000FA7E4()
{
  unint64_t result = qword_100230630;
  if (!qword_100230630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230630);
  }
  return result;
}

uint64_t sub_1000FA840(char a1)
{
  if (a1) {
    return 0x656372756F73;
  }
  else {
    return 0x74757074756FLL;
  }
}

void sub_1000FA888()
{
  unint64_t v0 = self;
  id v1 = [v0 defaultManager];
  URL.path.getter();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v3 = [v1 fileExistsAtPath:v2];

  if (v3)
  {
    id v4 = [v0 defaultManager];
    URL.path.getter();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v9 = 0;
    unsigned int v6 = [v4 removeItemAtPath:v5 error:&v9];

    if (v6)
    {
      id v7 = v9;
    }
    else
    {
      id v8 = v9;
      _convertNSErrorToError(_:)();

      swift_willThrow();
    }
  }
}

uint64_t sub_1000FA9E8(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020C480, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000FAA3C(char *a1, char *a2)
{
  return sub_10007DB5C(*a1, *a2);
}

Swift::Int sub_1000FAA48()
{
  return sub_100059FF4();
}

uint64_t sub_1000FAA50()
{
  return sub_10005A9A0();
}

Swift::Int sub_1000FAA58()
{
  return sub_10005AE34();
}

uint64_t sub_1000FAA60@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000FA9E8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000FAA90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000FA840(*v1);
  *a1 = result;
  a1[1] = 0xE600000000000000;
  return result;
}

unsigned char *storeEnumTagSinglePayload for JSStackLocations(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FAB8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSStackLocations()
{
  return &type metadata for JSStackLocations;
}

unint64_t sub_1000FABC8()
{
  unint64_t result = qword_100230640;
  if (!qword_100230640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230640);
  }
  return result;
}

uint64_t sub_1000FAC14(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = a2 & 1;
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a3, v6);
  sub_100021AC0(a1, 0, 1, v6);
  return v5;
}

uint64_t sub_1000FAC9C@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  char v3 = *a1;
  uint64_t v4 = (uint64_t)&a1[*(int *)(sub_100043478(&qword_10022FAC8) + 48)];
  uint64_t v5 = sub_100043478(&qword_1002306F8);
  uint64_t result = sub_1000FAC14((uint64_t)&a2[*(int *)(v5 + 48)], v3, v4);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000FAD10()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 104, 7);
}

unint64_t sub_1000FAD60()
{
  unint64_t result = qword_100230718;
  if (!qword_100230718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230718);
  }
  return result;
}

uint64_t sub_1000FADAC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1000FADFC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_1000FAE54()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

unsigned char *storeEnumTagSinglePayload for JSStackProviderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FAF58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSStackProviderError()
{
  return &type metadata for JSStackProviderError;
}

unint64_t sub_1000FAF94()
{
  unint64_t result = qword_100230738;
  if (!qword_100230738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230738);
  }
  return result;
}

uint64_t sub_1000FAFE4()
{
  swift_getObjectType();
  sub_100010084();
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_1000FB068(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a4;
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = v8 + 16;
  type metadata accessor for RunLoopWorkerThread();
  static RunLoopWorkerThread.current.getter();
  swift_weakInit();
  swift_release();
  uint64_t Strong = swift_weakLoadStrong();
  swift_release();
  if (Strong)
  {
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    uint64_t v34 = type metadata accessor for JSSubscriptionStatus();
    v33[0] = a2;
    a2;
    id v11 = (id)AMSLogKey();
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v30 = a3;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v16._uint64_t countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v16);
      sub_100049788(v33, v34);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v31[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v31);
      v18._uint64_t countAndFlagsBits = 5972026;
      v18._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t MetatypeMetadata = &type metadata for String;
      v31[0] = v13;
      v31[1] = v15;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v31);
      v19._uint64_t countAndFlagsBits = 93;
      v19._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      LogMessage.init(stringInterpolation:)();
      a3 = v30;
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v20._uint64_t countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      sub_100049788(v33, v34);
      uint64_t v21 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v31[0] = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v31);
      v22._uint64_t countAndFlagsBits = 58;
      v22._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v33);
    LogMessage.init(stringLiteral:)();
    uint64_t v34 = sub_100043478(&qword_10022D7B0);
    v33[0] = a3;
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)v33);
    uint64_t v23 = static os_log_type_t.default.getter();
    sub_10004841C(v23);
    swift_bridgeObjectRelease();
    sub_100010084();
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v25 = (void *)swift_allocObject();
    uint64_t v26 = a3;
    uint64_t v27 = (uint64_t)v25;
    _OWORD v25[2] = v24;
    void v25[3] = v26;
    uint64_t v28 = v35;
    v25[4] = v8;
    v25[5] = v28;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v9 = sub_100010358(a1, (uint64_t)sub_1000FCE58, v27);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000002CLL, 0x80000001001D0CC0, 0, 0);
    swift_willThrow();
    swift_release();
  }
  return v9;
}

void sub_1000FB52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v52 = a3;
  uint64_t v51 = a2;
  uint64_t v10 = type metadata accessor for JSCallable();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v14 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v16 = (void *)Strong;
    sub_10004D120(1701869940, 0xE400000000000000, a5, &aBlock);
    if (MetatypeMetadata)
    {
      if (swift_dynamicCast())
      {
        uint64_t v50 = a6;
        if (qword_10022C5C0 != -1) {
          swift_once();
        }
        sub_10018137C();
        uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
        id v48 = v18;
        uint64_t v49 = v17;
        v17((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v52, v10);
        uint64_t v19 = *(unsigned __int8 *)(v11 + 80);
        uint64_t v20 = (v19 + 32) & ~v19;
        uint64_t v52 = v20;
        uint64_t v46 = v20 + v12;
        uint64_t v47 = v19 | 7;
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = v50;
        *(void *)(v21 + 24) = v16;
        uint64_t v45 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
        v45(v21 + v20, (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
        uint64_t v57 = sub_1000FCE7C;
        uint64_t v58 = v21;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        uint64_t v44 = &v55;
        int v55 = sub_100181204;
        uint64_t MetatypeMetadata = &unk_100212D38;
        Swift::String v22 = _Block_copy(&aBlock);
        swift_retain();
        id v23 = v16;
        swift_release();
        id v24 = v48;
        [v48 addErrorBlock:v22];
        _Block_release(v22);
        v49(v13, v51, v10);
        uint64_t v25 = swift_allocObject();
        *(void *)(v25 + 16) = v50;
        *(void *)(v25 + 24) = v23;
        v45(v25 + v52, v13, v10);
        uint64_t v57 = sub_1000FCE98;
        uint64_t v58 = v25;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        int v55 = sub_10018120C;
        uint64_t MetatypeMetadata = &unk_100212D88;
        uint64_t v26 = _Block_copy(&aBlock);
        swift_retain();
        id v27 = v23;
        swift_release();
        [v24 addSuccessBlock:v26];
        _Block_release(v26);

        return;
      }
    }
    else
    {
      sub_1000423CC((uint64_t)&aBlock);
    }
    sub_100043478(&qword_10022D808);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1001C3110;
    *(void *)(v37 + 56) = &type metadata for String;
    strcpy((char *)(v37 + 32), "Invalid type");
    *(unsigned char *)(v37 + 45) = 0;
    *(_WORD *)(v37 + 46) = -5120;
    uint64_t v38 = v53;
    uint64_t v39 = (void *)JSCallable.call(_:)();

    swift_bridgeObjectRelease();
    if (!v38) {
  }
    }
  else
  {
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long aBlock = a7;
    id v28 = (id)AMSLogKey();
    if (v28)
    {
      id v29 = v28;
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v32 = v31;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v33._uint64_t countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      sub_100049788(&aBlock, (uint64_t)MetatypeMetadata);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t v60 = (void *)swift_getMetatypeMetadata();
      v59[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v59);
      v35._uint64_t countAndFlagsBits = 5972026;
      v35._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      uint64_t v60 = &type metadata for String;
      v59[0] = v30;
      v59[1] = v32;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v59);
      v36._uint64_t countAndFlagsBits = 93;
      v36._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v40._uint64_t countAndFlagsBits = 0;
      v40._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      sub_100049788(&aBlock, (uint64_t)MetatypeMetadata);
      uint64_t v41 = swift_getDynamicType();
      uint64_t v60 = (void *)swift_getMetatypeMetadata();
      v59[0] = v41;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v59);
      v42._uint64_t countAndFlagsBits = 58;
      v42._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&aBlock);
    LogMessage.init(stringLiteral:)();
    uint64_t v43 = static os_log_type_t.error.getter();
    sub_10004841C(v43);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000FBC3C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for JSCallable();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v10 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  swift_release();
  if (!Strong)
  {
    uint64_t v36 = a4;
    uint64_t v37 = a1;
    if (qword_10022C490 != -1) {
      swift_once();
    }
    uint64_t v35 = qword_1002440F8;
    sub_100043478(&qword_10022E560);
    uint64_t v12 = *(void *)(type metadata accessor for LogMessage() - 8);
    unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v34 = *(void *)(v12 + 72);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1001C3120;
    unint64_t v38 = v14 + v13;
    uint64_t v42 = type metadata accessor for JSSubscriptionStatus();
    v41[0] = a3;
    id v15 = a3;
    id v16 = (id)AMSLogKey();
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v20._uint64_t countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      sub_100049788(v41, v42);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v39[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v39);
      v22._uint64_t countAndFlagsBits = 5972026;
      v22._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      uint64_t MetatypeMetadata = &type metadata for String;
      v39[0] = v33;
      v39[1] = v19;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v39);
      v23._uint64_t countAndFlagsBits = 93;
      v23._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v24._uint64_t countAndFlagsBits = 0;
      v24._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      sub_100049788(v41, v42);
      uint64_t v25 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v39[0] = v25;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v39);
      v26._uint64_t countAndFlagsBits = 58;
      v26._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      LogMessage.init(stringInterpolation:)();
    }
    a1 = v37;
    sub_10004377C((uint64_t)v41);
    LogMessage.init(stringLiteral:)();
    uint64_t v27 = static os_log_type_t.fault.getter();
    sub_10004841C(v27);
    swift_bridgeObjectRelease();
    a4 = v36;
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v7);
    unint64_t v29 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = a3;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v30 + v29, (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    *(void *)(v30 + ((v9 + v29 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
    id v31 = a3;
    swift_errorRetain();
    dispatch thunk of RunLoopWorkerThread.schedule(task:)();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000FC0C4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v28 = type metadata accessor for JSSubscriptionStatus();
  v27[0] = a1;
  id v6 = a1;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v27, v28);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v25[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v25);
    v14._uint64_t countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v25[0] = v9;
    v25[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v25);
    v15._uint64_t countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(v27, v28);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v25[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v25);
    v18._uint64_t countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v27);
  LogMessage.init(stringLiteral:)();
  uint64_t v19 = static os_log_type_t.error.getter();
  sub_10004841C(v19);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1001C3110;
  id v21 = objc_allocWithZone((Class)type metadata accessor for JSError());
  swift_errorRetain();
  id v22 = sub_100027FB8(a3);
  uint64_t v23 = sub_100028288();

  *(void *)(v20 + 56) = sub_100043478(&qword_10022D7B0);
  *(void *)(v20 + 32) = v23;
  sub_1000D4C74(v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000FC430(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for JSCallable();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v10 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  swift_release();
  if (!Strong)
  {
    uint64_t v37 = a4;
    unint64_t v38 = a1;
    if (qword_10022C490 != -1) {
      swift_once();
    }
    uint64_t v36 = qword_1002440F8;
    sub_100043478(&qword_10022E560);
    uint64_t v12 = *(void *)(type metadata accessor for LogMessage() - 8);
    unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v35 = *(void *)(v12 + 72);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1001C3120;
    unint64_t v39 = v14 + v13;
    uint64_t v43 = type metadata accessor for JSSubscriptionStatus();
    v42[0] = a3;
    id v15 = a3;
    id v16 = (id)AMSLogKey();
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v20._uint64_t countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      sub_100049788(v42, v43);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v40[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v40);
      v22._uint64_t countAndFlagsBits = 5972026;
      v22._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      uint64_t MetatypeMetadata = &type metadata for String;
      v40[0] = v34;
      v40[1] = v19;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v40);
      v23._uint64_t countAndFlagsBits = 93;
      v23._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v24._uint64_t countAndFlagsBits = 0;
      v24._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      sub_100049788(v42, v43);
      uint64_t v25 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v40[0] = v25;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v40);
      v26._uint64_t countAndFlagsBits = 58;
      v26._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      LogMessage.init(stringInterpolation:)();
    }
    a1 = v38;
    sub_10004377C((uint64_t)v42);
    LogMessage.init(stringLiteral:)();
    uint64_t v27 = static os_log_type_t.fault.getter();
    sub_10004841C(v27);
    swift_bridgeObjectRelease();
    a4 = v37;
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v7);
    unint64_t v29 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = a3;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v30 + v29, (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    *(void *)(v30 + ((v9 + v29 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
    id v31 = a3;
    id v32 = a1;
    dispatch thunk of RunLoopWorkerThread.schedule(task:)();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000FC8B4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v27 = type metadata accessor for JSSubscriptionStatus();
  v26[0] = a1;
  id v6 = a1;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v26, v27);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v24[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v24);
    v14._uint64_t countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v24[0] = v9;
    v24[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v24);
    v15._uint64_t countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(v26, v27);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v24[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v24);
    v18._uint64_t countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v26);
  LogMessage.init(stringLiteral:)();
  uint64_t v19 = static os_log_type_t.default.getter();
  sub_10004841C(v19);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1001C3110;
  id v21 = [a3 exportObject];
  uint64_t v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)(v20 + 56) = sub_100043478(&qword_10022D6F0);
  *(void *)(v20 + 32) = v22;
  sub_1000D4C74(v20);
  return swift_bridgeObjectRelease();
}

void sub_1000FCCBC()
{
}

id sub_1000FCCFC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSSubscriptionStatus();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000FCD80(void *a1)
{
  return sub_1000FB068(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1000FCDA0()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000FCDD8()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000FCE10()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

void sub_1000FCE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000FB52C(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1000FCE7C(uint64_t a1)
{
  return sub_1000FCEB0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000FBC3C);
}

uint64_t sub_1000FCE98(uint64_t a1)
{
  return sub_1000FCEB0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000FC430);
}

uint64_t sub_1000FCEB0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for JSCallable() - 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a2(a1, v5, v6, v7);
}

uint64_t sub_1000FCF38()
{
  type metadata accessor for JSCallable();
  sub_100044830();
  sub_10004520C();
  uint64_t v4 = sub_1000210B4();
  v5(v4);

  return _swift_deallocObject(v0, v2, v1);
}

uint64_t sub_1000FCFCC()
{
  return sub_1000FD090((uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1000FC8B4);
}

uint64_t sub_1000FCFE4()
{
  type metadata accessor for JSCallable();
  sub_100044830();
  sub_10004520C();
  uint64_t v3 = sub_1000210B4();
  v4(v3);
  swift_errorRelease();
  return _swift_deallocObject(v0, v2, v1);
}

uint64_t sub_1000FD078()
{
  return sub_1000FD090((uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1000FC0C4);
}

uint64_t sub_1000FD090(uint64_t (*a1)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for JSCallable() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a1(v4, v1 + v3, v5);
}

uint64_t sub_1000FD154()
{
  sub_10002064C();
  return sub_1000FD244((SEL *)&selRef_copyMobileSubscriberCountryCode_error_);
}

uint64_t sub_1000FD1D8()
{
  sub_10002064C();
  return sub_1000FD244((SEL *)&selRef_copyMobileSubscriberNetworkCode_error_);
}

uint64_t sub_1000FD244(SEL *a1)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyContext];
  if (!v5) {
    return 0;
  }
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyClient];
  v24[0] = 0;
  id v7 = v5;
  id v8 = objc_msgSend(v6, *a1, v7, v24);
  id v9 = v24[0];
  if (!v8)
  {
    id v13 = v24[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100043478(&qword_10022E560);
    uint64_t v14 = type metadata accessor for LogMessage();
    sub_100044798(v14);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v25 = type metadata accessor for JSTelephony();
    v24[0] = v1;
    Swift::String v15 = v1;
    id v16 = (id)AMSLogKey();
    if (v16)
    {
      uint64_t v17 = v16;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100049788(v24, v25);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      v22[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100048DBC();
      sub_100020E44();
      sub_100043B98((uint64_t)&type metadata for String);
      sub_100048DBC();
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100049788(v24, v25);
      uint64_t v19 = swift_getDynamicType();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      v22[0] = v19;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v22, &qword_10022F490);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004377C((uint64_t)v24);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v20 = static os_log_type_t.default.getter();
    sub_10004841C(v20);
    swift_bridgeObjectRelease();
    swift_errorRelease();

    return 0;
  }
  uint64_t v10 = v8;
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = v9;

  return v11;
}

uint64_t sub_1000FD574()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  sub_100011D4C();
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyContext];
  if (!v3) {
    return 0;
  }
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyClient];
  v25[0] = 0;
  id v5 = v3;
  id v6 = [v4 getPhoneNumber:v5 error:v25];
  if (!v6)
  {
    id v11 = v25[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100043478(&qword_10022E560);
    uint64_t v12 = type metadata accessor for LogMessage();
    sub_100044798(v12);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v26 = type metadata accessor for JSTelephony();
    v25[0] = v0;
    id v13 = v0;
    id v14 = (id)AMSLogKey();
    if (v14)
    {
      Swift::String v15 = v14;
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v18 = v17;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100049788(v25, v26);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v23[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v23, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      v23[0] = v16;
      v23[1] = v18;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v23, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100049788(v25, v26);
      uint64_t v20 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v23[0] = v20;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v23, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v25);
    sub_100020924();
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v21 = static os_log_type_t.default.getter();
    sub_10004841C(v21);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    return 0;
  }
  id v7 = v6;
  id v8 = v25[0];
  id v9 = [v7 number];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v10;
}

id sub_1000FD8F4(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  return v7;
}

id sub_1000FD974()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  sub_100011D4C();
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyContext];
  if (!v3) {
    return 0;
  }
  id v4 = objc_allocWithZone((Class)CTBundle);
  id v5 = v3;
  id v6 = [v4 initWithBundleType:1];
  id v7 = *(id *)&v0[OBJC_IVAR____TtC14amsengagementd11JSTelephony_telephonyClient];
  NSString v8 = String._bridgeToObjectiveC()();
  id v27 = 0;
  id v9 = [v7 copyCarrierBundleValueWithDefault:v5 key:v8 bundleType:v6 error:&v27];

  id v10 = v27;
  if (!v9)
  {
    id v13 = v27;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100043478(&qword_10022E560);
    uint64_t v14 = type metadata accessor for LogMessage();
    sub_100044798(v14);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v29 = type metadata accessor for JSTelephony();
    id v27 = v0;
    Swift::String v15 = v0;
    id v16 = (id)AMSLogKey();
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100049788(&v27, v29);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v25[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v25, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      v25[0] = v18;
      v25[1] = v20;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v25, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100049788(&v27, v29);
      uint64_t v23 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v25[0] = v23;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v25, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v27);
    sub_100020924();
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v24 = static os_log_type_t.default.getter();
    sub_10004841C(v24);
    swift_bridgeObjectRelease();
    swift_errorRelease();

    return 0;
  }
  self;
  if (!swift_dynamicCastObjCClass())
  {
    id v22 = v10;

    return 0;
  }
  id v27 = 0;
  uint64_t v28 = 0;
  id v11 = v10;
  static String._conditionallyBridgeFromObjectiveC(_:result:)();

  if (v28) {
    return v27;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000FDD7C()
{
  return sub_1000FDE28();
}

id sub_1000FDDA0(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  return v7;
}

uint64_t sub_1000FDE1C()
{
  return sub_1000FDE28();
}

uint64_t sub_1000FDE28()
{
  uint64_t v0 = self;
  uint64_t result = sub_1000FE114(v0);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_10004D120(v3, v4, v2, &v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v7)
    {
      if (swift_dynamicCast()) {
        return v5;
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_10002CC0C((uint64_t)&v6, &qword_10022F490);
      return 0;
    }
  }
  return result;
}

void sub_1000FDF50()
{
  NSString v0 = String._bridgeToObjectiveC()();
  uint64_t v1 = (void *)MGGetStringAnswer();

  if (v1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000FDFF8()
{
  NSString v0 = sub_10004DDDC();
  uint64_t v1 = MGGetBoolAnswer();

  return v1;
}

id sub_1000FE060()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSTelephony();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000FE114(void *a1)
{
  id v1 = [a1 lastConnectionReport];
  if (!v1) {
    return 0;
  }
  objc_super v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_1000FE180(uint64_t a1, void *a2)
{
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = __CocoaSet.count.getter();
    if (v3) {
      goto LABEL_3;
    }
LABEL_6:

    return;
  }
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_1000732A8();
  if (v23)
  {
    uint64_t v4 = __CocoaSet.startIndex.getter();
    unsigned __int8 v6 = 1;
  }
  else
  {
    uint64_t v4 = sub_10019C9DC(a1);
    unsigned __int8 v6 = v7 & 1;
  }
  uint64_t v26 = v4;
  uint64_t v27 = v5;
  unsigned __int8 v28 = v6;
  if (v3 < 0)
  {
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
    do
    {
      uint64_t v9 = v26;
      uint64_t v8 = v27;
      uint64_t v10 = v28;
      sub_10010520C(v26, v27, v28, a1);
      uint64_t v12 = v11;
      sub_10010083C();
      uint64_t v14 = v13;

      Swift::String v15 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000732A8();
        Swift::String v15 = v29;
      }
      unint64_t v16 = v15[2];
      if (v16 >= v15[3] >> 1)
      {
        sub_1000732A8();
        Swift::String v15 = v29;
      }
      v15[2] = v16 + 1;
      v15[v16 + 4] = v14;
      if (v23)
      {
        if ((v10 & 1) == 0) {
          goto LABEL_22;
        }
        if (__CocoaSet.Index.handleBitPattern.getter()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_100043478(&qword_100230808);
        id v22 = (void (*)(unsigned char *, void))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v22(v25, 0);
      }
      else
      {
        uint64_t v17 = sub_10019C8F4(v9, v8, v10, a1);
        uint64_t v19 = v18;
        char v21 = v20;
        sub_100105484(v9, v8, v10);
        uint64_t v26 = v17;
        uint64_t v27 = v19;
        unsigned __int8 v28 = v21 & 1;
      }
      --v3;
    }
    while (v3);
    sub_100105484(v26, v27, v28);
  }
}

id sub_1000FE3FC()
{
  uint64_t v1 = OBJC_IVAR____TtC14amsengagementd16JSTreatmentStore____lazy_storage___dateFormatter;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC14amsengagementd16JSTreatmentStore____lazy_storage___dateFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC14amsengagementd16JSTreatmentStore____lazy_storage___dateFormatter);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)NSISO8601DateFormatter) init];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1000FE470(void *a1, void *a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v9 = static RunLoopWorkerThread.current.getter();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_100104D4C(a2);
    if (v11 && (uint64_t v12 = sub_1000FE910(v11), swift_bridgeObjectRelease(), v12))
    {
      uint64_t v33 = v12;
      uint64_t v38 = v3;
      if (qword_10022C490 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v37 = ObjectType;
      v36[0] = a3;
      id v13 = a3;
      id v14 = (id)AMSLogKey();
      if (v14)
      {
        Swift::String v15 = v14;
        id v32 = a1;
        id v16 = v13;
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = v18;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v20._uint64_t countAndFlagsBits = 0;
        v20._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v20);
        sub_100049788(v36, v37);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v34[0] = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v34, &qword_10022F490);
        v22._uint64_t countAndFlagsBits = 5972026;
        v22._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v22);
        uint64_t MetatypeMetadata = &type metadata for String;
        v34[0] = v17;
        v34[1] = v19;
        id v13 = v16;
        a1 = v32;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v34, &qword_10022F490);
        v23._uint64_t countAndFlagsBits = 93;
        v23._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v23);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v25._uint64_t countAndFlagsBits = 0;
        v25._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v25);
        sub_100049788(v36, v37);
        uint64_t v26 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v34[0] = v26;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v34, &qword_10022F490);
        v27._uint64_t countAndFlagsBits = 58;
        v27._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v27);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v36);
      LogMessage.init(stringLiteral:)();
      uint64_t v28 = static os_log_type_t.default.getter();
      sub_10004841C(v28);
      swift_bridgeObjectRelease();
      sub_10004D510(0, (unint64_t *)&qword_10022FE70);
      uint64_t v29 = (void *)swift_allocObject();
      _OWORD v29[2] = v33;
      void v29[3] = v10;
      v29[4] = v13;
      id v30 = v13;
      swift_retain();
      uint64_t v24 = sub_100010358(a1, (uint64_t)sub_1001057FC, (uint64_t)v29);
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v24 = type metadata accessor for JSError();
      sub_1000DE184(2, 0xD000000000000034, 0x80000001001D2EC0, 0, 0);
      swift_willThrow();
      swift_release();
    }
  }
  else
  {
    uint64_t v24 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000003CLL, 0x80000001001D2E80, 0, 0);
    swift_willThrow();
  }
  return v24;
}

void *sub_1000FE910(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = _swiftEmptyArrayStorage;
  sub_100027304(0, v2, 0);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_100043520(i, (uint64_t)v11);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100027304(0, v3[2] + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1)
      {
        sub_100027304(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v12;
      }
      v3[2] = v6 + 1;
      char v7 = &v3[2 * v6];
      v7[4] = v9;
      v7[5] = v10;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

void sub_1000FEA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v37 = a2;
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v7 = type metadata accessor for JSCallable();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self defaultTreatmentStore];
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_10002318C(v12);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v34 = [v11 areasForNamespaces:isa];

  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  Swift::String v27 = v10;
  uint64_t v28 = v7;
  v33(v10, a3, v7);
  uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v31 = v14 | 7;
  uint64_t v32 = v15 + v9;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v35;
  uint64_t v18 = v36;
  *(void *)(v16 + 16) = v35;
  *(void *)(v16 + 24) = v18;
  id v30 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v30(v16 + v15, v10, v7);
  uint64_t v42 = sub_10010581C;
  uint64_t v43 = v16;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  uint64_t v29 = &v40;
  Swift::String v40 = sub_100181204;
  uint64_t v41 = &unk_1002134E0;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  id v20 = v18;
  swift_release();
  id v21 = v34;
  [v34 addErrorBlock:v19];
  _Block_release(v19);
  Swift::String v22 = v27;
  uint64_t v23 = v28;
  v33(v27, v37, v28);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v17;
  *(void *)(v24 + 24) = v20;
  v30(v24 + v15, v22, v23);
  uint64_t v42 = sub_100105854;
  uint64_t v43 = v24;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  Swift::String v40 = (void (*)(uint64_t, void *))sub_1000FE3F8;
  uint64_t v41 = &unk_100213530;
  Swift::String v25 = _Block_copy(&aBlock);
  swift_retain();
  id v26 = v20;
  swift_release();
  [v21 addSuccessBlock:v25];
  _Block_release(v25);
}

uint64_t sub_1000FEE28()
{
  sub_10004D510(0, (unint64_t *)&qword_10022FE70);
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_1000FEEA0(void *a1, void *a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v9 = static RunLoopWorkerThread.current.getter();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_100104D4C(a2);
    if (v11 && (uint64_t v12 = sub_1000FE910(v11), swift_bridgeObjectRelease(), v12))
    {
      uint64_t v33 = v12;
      uint64_t v38 = v3;
      if (qword_10022C490 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v37 = ObjectType;
      v36[0] = a3;
      id v13 = a3;
      id v14 = (id)AMSLogKey();
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v32 = a1;
        id v16 = v13;
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = v18;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v20._uint64_t countAndFlagsBits = 0;
        v20._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v20);
        sub_100049788(v36, v37);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v34[0] = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v34, &qword_10022F490);
        v22._uint64_t countAndFlagsBits = 5972026;
        v22._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v22);
        uint64_t MetatypeMetadata = &type metadata for String;
        v34[0] = v17;
        v34[1] = v19;
        id v13 = v16;
        a1 = v32;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v34, &qword_10022F490);
        v23._uint64_t countAndFlagsBits = 93;
        v23._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v23);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v25._uint64_t countAndFlagsBits = 0;
        v25._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v25);
        sub_100049788(v36, v37);
        uint64_t v26 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v34[0] = v26;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v34, &qword_10022F490);
        v27._uint64_t countAndFlagsBits = 58;
        v27._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v27);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v36);
      LogMessage.init(stringLiteral:)();
      uint64_t v28 = static os_log_type_t.default.getter();
      sub_10004841C(v28);
      swift_bridgeObjectRelease();
      sub_10004D510(0, (unint64_t *)&qword_10022FE70);
      uint64_t v29 = (void *)swift_allocObject();
      _OWORD v29[2] = v33;
      void v29[3] = v10;
      v29[4] = v13;
      id v30 = v13;
      swift_retain();
      uint64_t v24 = sub_100010358(a1, (uint64_t)sub_100105698, (uint64_t)v29);
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v24 = type metadata accessor for JSError();
      sub_1000DE184(2, 0xD00000000000002CLL, 0x80000001001D2DF0, 0, 0);
      swift_willThrow();
      swift_release();
    }
  }
  else
  {
    uint64_t v24 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD000000000000038, 0x80000001001D2DB0, 0, 0);
    swift_willThrow();
  }
  return v24;
}

void sub_1000FF340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v37 = a2;
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v7 = type metadata accessor for JSCallable();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self defaultTreatmentStore];
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_10002318C(v12);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v34 = [v11 areasForTopics:isa];

  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  Swift::String v27 = v10;
  uint64_t v28 = v7;
  v33(v10, a3, v7);
  uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v31 = v14 | 7;
  uint64_t v32 = v15 + v9;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v35;
  uint64_t v18 = v36;
  *(void *)(v16 + 16) = v35;
  *(void *)(v16 + 24) = v18;
  id v30 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v30(v16 + v15, v10, v7);
  uint64_t v42 = sub_1001056B8;
  uint64_t v43 = v16;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  uint64_t v29 = &v40;
  Swift::String v40 = sub_100181204;
  uint64_t v41 = &unk_1002133C8;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  id v20 = v18;
  swift_release();
  id v21 = v34;
  [v34 addErrorBlock:v19];
  _Block_release(v19);
  Swift::String v22 = v27;
  uint64_t v23 = v28;
  v33(v27, v37, v28);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v17;
  *(void *)(v24 + 24) = v20;
  v30(v24 + v15, v22, v23);
  uint64_t v42 = sub_1001056F0;
  uint64_t v43 = v24;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  Swift::String v40 = (void (*)(uint64_t, void *))sub_1000FE3F8;
  uint64_t v41 = &unk_100213418;
  Swift::String v25 = _Block_copy(&aBlock);
  swift_retain();
  id v26 = v20;
  swift_release();
  [v21 addSuccessBlock:v25];
  _Block_release(v25);
}

void sub_1000FF69C()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  sub_100011D4C();
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v22[3] = type metadata accessor for JSTreatmentStore();
  v22[0] = v3;
  id v6 = v3;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100046824();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100045F54(MetatypeMetadata);
    sub_10002CC0C((uint64_t)v21, &qword_10022F490);
    sub_100020E44();
    void v21[3] = &type metadata for String;
    v21[0] = v9;
    v21[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v21, &qword_10022F490);
    v13._uint64_t countAndFlagsBits = 93;
    v13._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100046824();
    uint64_t v14 = swift_getMetatypeMetadata();
    sub_100045F54(v14);
    sub_10002CC0C((uint64_t)v21, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v22);
  LogMessage.init(stringLiteral:)();
  uint64_t v16 = static os_log_type_t.error.getter();
  sub_10004841C(v16);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1001C3110;
  id v18 = objc_allocWithZone((Class)type metadata accessor for JSError());
  swift_errorRetain();
  id v19 = sub_100027FB8(v1);
  uint64_t v20 = sub_100028288();

  *(void *)(v17 + 56) = sub_100043478(&qword_10022D7B0);
  *(void *)(v17 + 32) = v20;
  sub_1000D4C74(v17);
  swift_bridgeObjectRelease();
  sub_100020FDC();
}

void sub_1000FF988()
{
  sub_1000209F4();
  type metadata accessor for JSCallable();
  sub_100020DEC();
  __chkstk_darwin(v0);
  sub_100043478(&qword_100230818);
  static Dictionary._forceBridgeFromObjectiveC(_:result:)();
  __break(1u);
}

void sub_1000FFAF0()
{
  sub_1000209F4();
  uint64_t v20 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  sub_100011D4C();
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v6 = type metadata accessor for LogMessage();
  sub_100044798(v6);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v24 = type metadata accessor for JSTreatmentStore();
  v23[0] = v4;
  id v7 = v4;
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v23, v24);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v21[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v21, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v21[0] = v10;
    v21[1] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v21, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 93;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100046824();
    uint64_t v15 = swift_getMetatypeMetadata();
    sub_100045F54(v15);
    sub_10002CC0C((uint64_t)v21, &qword_10022F490);
    v16._uint64_t countAndFlagsBits = 58;
    v16._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v23);
  LogMessage.init(stringLiteral:)();
  uint64_t v17 = sub_100043478(v20);
  uint64_t v24 = v17;
  v23[0] = v2;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_10002CC0C((uint64_t)v23, &qword_10022F490);
  uint64_t v18 = static os_log_type_t.default.getter();
  sub_10004841C(v18);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1001C3110;
  *(void *)(v19 + 56) = v17;
  *(void *)(v19 + 32) = v2;
  swift_bridgeObjectRetain();
  sub_1000D4C74(v19);
  swift_bridgeObjectRelease();
  sub_100020FDC();
}

uint64_t sub_1000FFE50(void *a1, void *a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v9 = static RunLoopWorkerThread.current.getter();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_100104D4C(a2);
    if (v11 && (uint64_t v12 = sub_1000FE910(v11), swift_bridgeObjectRelease(), v12))
    {
      uint64_t v33 = v12;
      uint64_t v38 = v3;
      if (qword_10022C490 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v37 = ObjectType;
      v36[0] = a3;
      id v13 = a3;
      id v14 = (id)AMSLogKey();
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v32 = a1;
        id v16 = v13;
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = v18;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v20._uint64_t countAndFlagsBits = 0;
        v20._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v20);
        sub_100049788(v36, v37);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v34[0] = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v34, &qword_10022F490);
        v22._uint64_t countAndFlagsBits = 5972026;
        v22._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v22);
        uint64_t MetatypeMetadata = &type metadata for String;
        v34[0] = v17;
        v34[1] = v19;
        id v13 = v16;
        a1 = v32;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v34, &qword_10022F490);
        v23._uint64_t countAndFlagsBits = 93;
        v23._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v23);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v25._uint64_t countAndFlagsBits = 0;
        v25._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v25);
        sub_100049788(v36, v37);
        uint64_t v26 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v34[0] = v26;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v34, &qword_10022F490);
        v27._uint64_t countAndFlagsBits = 58;
        v27._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v27);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v36);
      LogMessage.init(stringLiteral:)();
      uint64_t v28 = static os_log_type_t.default.getter();
      sub_10004841C(v28);
      swift_bridgeObjectRelease();
      sub_10004D510(0, (unint64_t *)&qword_10022FE70);
      uint64_t v29 = (void *)swift_allocObject();
      _OWORD v29[2] = v33;
      void v29[3] = v10;
      v29[4] = v13;
      id v30 = v13;
      swift_retain();
      uint64_t v24 = sub_100010358(a1, (uint64_t)sub_1001054CC, (uint64_t)v29);
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v24 = type metadata accessor for JSError();
      sub_1000DE184(2, 0xD000000000000031, 0x80000001001D2D00, 0, 0);
      swift_willThrow();
      swift_release();
    }
  }
  else
  {
    uint64_t v24 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000003ELL, 0x80000001001D2CC0, 0, 0);
    swift_willThrow();
  }
  return v24;
}

void sub_1001002F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v37 = a2;
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v7 = type metadata accessor for JSCallable();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v33 = v9;
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self defaultTreatmentStore];
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_10002318C(v12);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v38 = [v11 activeTreatmentsForAreas:isa];

  id v34 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v14 = v7;
  uint64_t v29 = v7;
  v34(v10, a3, v7);
  uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v32 = v15 | 7;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v35;
  uint64_t v18 = v36;
  *(void *)(v16 + 16) = v35;
  *(void *)(v16 + 24) = v18;
  uint64_t v31 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v31(v16 + ((v15 + 32) & ~v15), v10, v14);
  uint64_t v43 = sub_1001054EC;
  uint64_t v44 = (void *)v16;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v40 = 1107296256;
  id v30 = &v41;
  uint64_t v41 = sub_100181204;
  uint64_t v42 = &unk_1002132B0;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  id v20 = v18;
  swift_release();
  [v38 addErrorBlock:v19];
  _Block_release(v19);
  id v21 = sub_1000FE3FC();
  uint64_t v22 = v29;
  v34(v10, v37, v29);
  Swift::String v23 = (void *)swift_allocObject();
  void v23[2] = v21;
  void v23[3] = v17;
  v23[4] = v20;
  v31((uint64_t)v23 + ((v15 + 40) & ~v15), v10, v22);
  uint64_t v43 = sub_1001055B4;
  uint64_t v44 = v23;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v40 = 1107296256;
  uint64_t v41 = (void (*)(uint64_t, void *))sub_1000FE3F8;
  uint64_t v42 = &unk_100213300;
  uint64_t v24 = _Block_copy(&aBlock);
  swift_retain();
  id v25 = v20;
  id v26 = v21;
  swift_release();
  id v27 = v38;
  [v38 addSuccessBlock:v24];
  _Block_release(v24);
}

uint64_t sub_100100678()
{
  uint64_t v0 = type metadata accessor for JSCallable();
  __chkstk_darwin(v0);
  sub_10004D510(0, &qword_100234570);
  uint64_t result = static Dictionary._forceBridgeFromObjectiveC(_:result:)();
  __break(1u);
  return result;
}

void sub_10010083C()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  id v26 = v1;
  type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_100011D4C();
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3130;
  *(void *)(inited + 32) = 0x65746144646E65;
  *(void *)(inited + 40) = 0xE700000000000000;
  id v7 = [v0 endDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  Class isa = Date._bridgeToObjectiveC()().super.isa;
  uint64_t v9 = *(void (**)(uint64_t))(v4 + 8);
  uint64_t v10 = sub_10002D408();
  v9(v10);
  id v11 = [v2 stringFromDate:isa];

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  *(void *)(inited + 48) = v12;
  *(void *)(inited + 56) = v14;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x696669746E656469;
  *(void *)(inited + 88) = 0xEA00000000007265;
  id v15 = [v0 identifier];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  *(void *)(inited + 96) = v16;
  *(void *)(inited + 104) = v18;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0x7461447472617473;
  *(void *)(inited + 136) = 0xE900000000000065;
  id v19 = [v0 startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  Class v20 = Date._bridgeToObjectiveC()().super.isa;
  uint64_t v21 = sub_10002D408();
  v9(v21);
  id v22 = [v26 stringFromDate:v20];

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 144) = v23;
  *(void *)(inited + 152) = v25;
  Dictionary.init(dictionaryLiteral:)();
  sub_100020FDC();
}

uint64_t sub_100100AFC()
{
  sub_10004D510(0, (unint64_t *)&qword_10022FE70);
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

void *sub_100100B88(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v9 - 8);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v10 = static RunLoopWorkerThread.current.getter();
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = sub_100104D4C(a2);
    if (v12 && (a2 = sub_1000FE910(v12), swift_bridgeObjectRelease(), a2))
    {
      id v30 = a2;
      uint64_t v35 = v4;
      if (qword_10022C490 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v34 = type metadata accessor for JSTreatmentStore();
      v33[0] = a3;
      id v13 = a3;
      id v14 = (id)AMSLogKey();
      if (v14)
      {
        id v15 = v14;
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v18._uint64_t countAndFlagsBits = 0;
        v18._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v18);
        sub_100049788(v33, v34);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v31[0] = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v31, &qword_10022F490);
        v20._uint64_t countAndFlagsBits = 5972026;
        v20._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v20);
        uint64_t MetatypeMetadata = &type metadata for String;
        v31[0] = v29;
        v31[1] = v17;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v31, &qword_10022F490);
        v21._uint64_t countAndFlagsBits = 93;
        v21._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v21);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v22._uint64_t countAndFlagsBits = 0;
        v22._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v22);
        sub_100049788(v33, v34);
        uint64_t v23 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v31[0] = v23;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v31, &qword_10022F490);
        v24._uint64_t countAndFlagsBits = 58;
        v24._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v24);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v33);
      LogMessage.init(stringLiteral:)();
      uint64_t v25 = static os_log_type_t.default.getter();
      sub_10004841C(v25);
      swift_bridgeObjectRelease();
      sub_10004D510(0, (unint64_t *)&qword_10022FE70);
      id v26 = (void *)swift_allocObject();
      void v26[2] = v13;
      void v26[3] = a4;
      v26[4] = v30;
      v26[5] = v11;
      swift_bridgeObjectRetain();
      swift_retain();
      id v27 = v13;
      a2 = (void *)sub_100010358(a1, (uint64_t)sub_10010510C, (uint64_t)v26);
      swift_release();
      swift_release();
    }
    else
    {
      type metadata accessor for JSError();
      sub_1000DE184(2, 0xD00000000000002ELL, 0x80000001001D2BD0, 0, 0);
      swift_willThrow();
      swift_release();
    }
  }
  else
  {
    type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000003BLL, 0x80000001001D2B90, 0, 0);
    swift_willThrow();
  }
  return a2;
}

uint64_t sub_100101024(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v127 = a7;
  id v125 = a6;
  uint64_t v115 = a3;
  uint64_t v117 = a2;
  uint64_t v9 = type metadata accessor for JSCallable();
  uint64_t v119 = *(void *)(v9 - 8);
  uint64_t v120 = v9;
  __chkstk_darwin(v9);
  uint64_t v126 = v10;
  uint64_t v118 = (char *)v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v11 - 8);
  uint64_t v114 = (char *)v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100043478(&qword_1002344F0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v116 = (void *)((char *)v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v14);
  Swift::String v18 = (char *)v110 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v113 = (uint64_t)v110 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  *((void *)&v112 + 1) = (char *)v110 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)v110 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)v110 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v31 = (char *)v110 - v30;
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)v110 - v32;
  id v121 = a4;
  id v124 = sub_1000FE3FC();
  uint64_t v34 = type metadata accessor for Date();
  sub_100021AC0((uint64_t)v33, 1, 1, v34);
  uint64_t v35 = (_OWORD *)&unk_1001C3000;
  unint64_t v122 = v25;
  BOOL v123 = v33;
  if (!a5)
  {
    long long aBlock = 0u;
    long long v132 = 0u;
    goto LABEL_7;
  }
  sub_10004D120(0x7461447472617473, 0xE900000000000065, a5, &aBlock);
  if (!*((void *)&v132 + 1))
  {
LABEL_7:
    sub_10002CC0C((uint64_t)&aBlock, &qword_10022F490);
    goto LABEL_18;
  }
  if (swift_dynamicCast())
  {
    uint64_t v36 = v129;
    *(void *)&long long v112 = v128;
    NSString v37 = String._bridgeToObjectiveC()();
    id v38 = [v124 dateFromString:v37];

    if (v38)
    {
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v39 = 0;
    }
    else
    {
      uint64_t v39 = 1;
    }
    uint64_t v33 = v123;
    sub_10002CC0C((uint64_t)v123, &qword_1002344F0);
    sub_100021AC0((uint64_t)v31, v39, 1, v34);
    sub_100105180((uint64_t)v31, (uint64_t)v33);
    sub_100076900((uint64_t)v33, (uint64_t)v28);
    if (sub_10004FD40((uint64_t)v28, 1, v34) == 1)
    {
      sub_10002CC0C((uint64_t)v28, &qword_1002344F0);
      if (qword_10022C490 != -1) {
        swift_once();
      }
      uint64_t v111 = v36;
      v110[4] = qword_1002440F8;
      sub_100043478(&qword_10022E560);
      uint64_t v40 = *(void *)(type metadata accessor for LogMessage() - 8);
      uint64_t v41 = *(void *)(v40 + 72);
      unint64_t v42 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_1001C3120;
      v110[3] = v43;
      v110[2] = v43 + v42;
      *((void *)&v132 + 1) = type metadata accessor for JSTreatmentStore();
      *(void *)&long long aBlock = v121;
      id v44 = v121;
      id v45 = (id)AMSLogKey();
      if (v45)
      {
        uint64_t v46 = v45;
        uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v110[1] = v41;
        uint64_t v49 = v48;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v50._uint64_t countAndFlagsBits = 0;
        v50._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v50);
        sub_100049788(&aBlock, *((uint64_t *)&v132 + 1));
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v128 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v128, &qword_10022F490);
        v52._uint64_t countAndFlagsBits = 5972026;
        v52._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v52);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v128 = v47;
        uint64_t v129 = v49;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        uint64_t v33 = v123;
        sub_10002CC0C((uint64_t)&v128, &qword_10022F490);
        v53._uint64_t countAndFlagsBits = 93;
        v53._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v53);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v54._uint64_t countAndFlagsBits = 0;
        v54._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v54);
        sub_100049788(&aBlock, *((uint64_t *)&v132 + 1));
        uint64_t v55 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v128 = v55;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v128, &qword_10022F490);
        v56._uint64_t countAndFlagsBits = 58;
        v56._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v56);
        LogMessage.init(stringInterpolation:)();
      }
      uint64_t v25 = v122;
      sub_10004377C((uint64_t)&aBlock);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v57._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v57._object = (void *)0x80000001001D2C60;
      LogMessage.StringInterpolation.appendLiteral(_:)(v57);
      *((void *)&v132 + 1) = &type metadata for String;
      *(void *)&long long aBlock = v112;
      *((void *)&aBlock + 1) = v111;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&aBlock, &qword_10022F490);
      v58._uint64_t countAndFlagsBits = 10530;
      v58._object = (void *)0xE200000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v58);
      LogMessage.init(stringInterpolation:)();
      uint64_t v59 = static os_log_type_t.error.getter();
      sub_10004841C(v59);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_10002CC0C((uint64_t)v28, &qword_1002344F0);
    }
    uint64_t v35 = &unk_1001C3000;
  }
LABEL_18:
  sub_100021AC0((uint64_t)v25, 1, 1, v34);
  if (!a5)
  {
    long long aBlock = 0u;
    long long v132 = 0u;
    goto LABEL_24;
  }
  sub_10004D120(0x65746144646E65, 0xE700000000000000, a5, &aBlock);
  if (!*((void *)&v132 + 1))
  {
LABEL_24:
    uint64_t v66 = &qword_10022F490;
    p_long long aBlock = &aBlock;
LABEL_25:
    sub_10002CC0C((uint64_t)p_aBlock, v66);
    goto LABEL_26;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_26;
  }
  uint64_t v60 = v35;
  uint64_t v61 = v129;
  *(void *)&long long v112 = v128;
  NSString v62 = String._bridgeToObjectiveC()();
  id v63 = [v124 dateFromString:v62];

  if (v63)
  {
    uint64_t v64 = *((void *)&v112 + 1);
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v65 = 0;
  }
  else
  {
    uint64_t v65 = 1;
    uint64_t v64 = *((void *)&v112 + 1);
  }
  sub_10002CC0C((uint64_t)v25, &qword_1002344F0);
  sub_100021AC0(v64, v65, 1, v34);
  sub_100105180(v64, (uint64_t)v25);
  uint64_t v92 = v113;
  sub_100076900((uint64_t)v33, v113);
  if (sub_10004FD40(v92, 1, v34) != 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v66 = &qword_1002344F0;
    p_long long aBlock = (long long *)v92;
    goto LABEL_25;
  }
  *((void *)&v112 + 1) = v61;
  sub_10002CC0C(v92, &qword_1002344F0);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  uint64_t v113 = qword_1002440F8;
  sub_100043478(&qword_10022E560);
  uint64_t v93 = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
  *(_OWORD *)(swift_allocObject() + 16) = v60[18];
  *((void *)&v132 + 1) = type metadata accessor for JSTreatmentStore();
  *(void *)&long long aBlock = v121;
  id v94 = v121;
  id v95 = (id)AMSLogKey();
  if (v95)
  {
    uint64_t v96 = v95;
    uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v111 = v93;
    uint64_t v99 = v98;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v100._uint64_t countAndFlagsBits = 0;
    v100._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v100);
    sub_100049788(&aBlock, *((uint64_t *)&v132 + 1));
    uint64_t v101 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v128 = v101;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v128, &qword_10022F490);
    v102._uint64_t countAndFlagsBits = 5972026;
    v102._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v102);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v128 = v97;
    uint64_t v129 = v99;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    uint64_t v33 = v123;
    sub_10002CC0C((uint64_t)&v128, &qword_10022F490);
    v103._uint64_t countAndFlagsBits = 93;
    v103._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v103);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v104._uint64_t countAndFlagsBits = 0;
    v104._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v104);
    sub_100049788(&aBlock, *((uint64_t *)&v132 + 1));
    uint64_t v105 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v128 = v105;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v128, &qword_10022F490);
    v106._uint64_t countAndFlagsBits = 58;
    v106._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v106);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&aBlock);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v107._object = (void *)0x80000001001D2C40;
  v107._uint64_t countAndFlagsBits = 0xD000000000000019;
  LogMessage.StringInterpolation.appendLiteral(_:)(v107);
  *((void *)&v132 + 1) = &type metadata for String;
  long long aBlock = v112;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)&aBlock, &qword_10022F490);
  v108._uint64_t countAndFlagsBits = 10530;
  v108._object = (void *)0xE200000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v108);
  LogMessage.init(stringInterpolation:)();
  uint64_t v109 = static os_log_type_t.error.getter();
  sub_10004841C(v109);
  swift_bridgeObjectRelease();
  uint64_t v25 = v122;
LABEL_26:
  id v68 = [self defaultTreatmentStore];
  uint64_t v69 = swift_bridgeObjectRetain();
  sub_10002318C(v69);
  v70.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_100076900((uint64_t)v33, (uint64_t)v18);
  if (sub_10004FD40((uint64_t)v18, 1, v34) == 1)
  {
    Class isa = 0;
  }
  else
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v18, v34);
  }
  uint64_t v72 = v115;
  uint64_t v73 = (void (*)(void, void, void))v116;
  sub_100076900((uint64_t)v25, (uint64_t)v116);
  if (sub_10004FD40((uint64_t)v73, 1, v34) == 1)
  {
    Class v74 = 0;
  }
  else
  {
    Class v74 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(void (*)(void, void, void), uint64_t))(*(void *)(v34 - 8) + 8))(v73, v34);
  }
  id v125 = [v68 treatmentsForAreas:v70.super.isa startDate:isa endDate:v74];

  uint64_t v75 = v119;
  uint64_t v116 = *(void **)(v119 + 16);
  id v76 = v118;
  uint64_t v77 = v120;
  ((void (*)(char *, uint64_t, uint64_t))v116)(v118, v72, v120);
  uint64_t v78 = *(unsigned __int8 *)(v75 + 80);
  uint64_t v115 = v78 | 7;
  uint64_t v79 = swift_allocObject();
  id v80 = v121;
  *(void *)(v79 + 16) = v127;
  *(void *)(v79 + 24) = v80;
  uint64_t v81 = v77;
  uint64_t v119 = *(void *)(v75 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v119)(v79 + ((v78 + 32) & ~v78), v76, v77);
  uint64_t v133 = sub_100105130;
  uint64_t v134 = (void *)v79;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v114 = (char *)&v132;
  *(void *)&long long v132 = sub_100181204;
  *((void *)&v132 + 1) = &unk_100213198;
  uint64_t v82 = _Block_copy(&aBlock);
  id v121 = v80;
  uint64_t v83 = v127;
  swift_retain();
  swift_release();
  [v125 addErrorBlock:v82];
  _Block_release(v82);
  ((void (*)(char *, uint64_t, uint64_t))v116)(v76, v117, v81);
  uint64_t v84 = (void *)swift_allocObject();
  id v85 = v124;
  v84[2] = v124;
  v84[3] = v83;
  id v86 = v121;
  v84[4] = v121;
  ((void (*)(char *, char *, uint64_t))v119)((char *)v84 + ((v78 + 40) & ~v78), v76, v81);
  uint64_t v133 = sub_100105168;
  uint64_t v134 = v84;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v132 = sub_1000FE3F8;
  *((void *)&v132 + 1) = &unk_1002131E8;
  uint64_t v87 = _Block_copy(&aBlock);
  id v88 = v86;
  swift_retain();
  id v89 = v85;
  swift_release();
  id v90 = v125;
  [v125 addSuccessBlock:v87];
  _Block_release(v87);

  sub_10002CC0C((uint64_t)v122, &qword_1002344F0);
  return sub_10002CC0C((uint64_t)v123, &qword_1002344F0);
}

uint64_t sub_100102000()
{
  uint64_t v0 = type metadata accessor for JSCallable();
  __chkstk_darwin(v0);
  sub_100043478((uint64_t *)&unk_100234500);
  uint64_t result = static Dictionary._forceBridgeFromObjectiveC(_:result:)();
  __break(1u);
  return result;
}

uint64_t sub_100102260(void *a1, void *a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v9 = static RunLoopWorkerThread.current.getter();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_100104D4C(a2);
    if (v11 && (uint64_t v12 = sub_1000FE910(v11), swift_bridgeObjectRelease(), v12))
    {
      uint64_t v33 = v12;
      uint64_t v38 = v3;
      if (qword_10022C490 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v37 = ObjectType;
      v36[0] = a3;
      id v13 = a3;
      id v14 = (id)AMSLogKey();
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v32 = a1;
        id v16 = v13;
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = v18;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v20._uint64_t countAndFlagsBits = 0;
        v20._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v20);
        sub_100049788(v36, v37);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v34[0] = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v34, &qword_10022F490);
        v22._uint64_t countAndFlagsBits = 5972026;
        v22._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v22);
        uint64_t MetatypeMetadata = &type metadata for String;
        v34[0] = v17;
        v34[1] = v19;
        id v13 = v16;
        a1 = v32;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v34, &qword_10022F490);
        v23._uint64_t countAndFlagsBits = 93;
        v23._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v23);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v25._uint64_t countAndFlagsBits = 0;
        v25._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v25);
        sub_100049788(v36, v37);
        uint64_t v26 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v34[0] = v26;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v34, &qword_10022F490);
        v27._uint64_t countAndFlagsBits = 58;
        v27._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v27);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v36);
      LogMessage.init(stringLiteral:)();
      uint64_t v28 = static os_log_type_t.default.getter();
      sub_10004841C(v28);
      swift_bridgeObjectRelease();
      sub_10004D510(0, (unint64_t *)&qword_10022FE70);
      uint64_t v29 = (void *)swift_allocObject();
      _OWORD v29[2] = v33;
      void v29[3] = v10;
      v29[4] = v13;
      id v30 = v13;
      swift_retain();
      uint64_t v24 = sub_100010358(a1, (uint64_t)sub_100104EF0, (uint64_t)v29);
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v24 = type metadata accessor for JSError();
      sub_1000DE184(2, 0xD000000000000032, 0x80000001001D2AE0, 0, 0);
      swift_willThrow();
      swift_release();
    }
  }
  else
  {
    uint64_t v24 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000003FLL, 0x80000001001D2AA0, 0, 0);
    swift_willThrow();
  }
  return v24;
}

void sub_100102700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v37 = a2;
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v7 = type metadata accessor for JSCallable();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self defaultTreatmentStore];
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_10002318C(v12);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v34 = [v11 experimentDataForAreas:isa];

  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  Swift::String v27 = v10;
  uint64_t v28 = v7;
  v33(v10, a3, v7);
  uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v31 = v14 | 7;
  uint64_t v32 = v15 + v9;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v35;
  uint64_t v18 = v36;
  *(void *)(v16 + 16) = v35;
  *(void *)(v16 + 24) = v18;
  id v30 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v30(v16 + v15, v10, v7);
  unint64_t v42 = sub_100104F10;
  uint64_t v43 = v16;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  uint64_t v29 = &v40;
  uint64_t v40 = sub_100181204;
  uint64_t v41 = &unk_100213080;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  id v20 = v18;
  swift_release();
  id v21 = v34;
  [v34 addErrorBlock:v19];
  _Block_release(v19);
  Swift::String v22 = v27;
  uint64_t v23 = v28;
  v33(v27, v37, v28);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v17;
  *(void *)(v24 + 24) = v20;
  v30(v24 + v15, v22, v23);
  unint64_t v42 = sub_100104F48;
  uint64_t v43 = v24;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  uint64_t v40 = (void (*)(uint64_t, void *))sub_1000FE3F8;
  uint64_t v41 = &unk_1002130D0;
  Swift::String v25 = _Block_copy(&aBlock);
  swift_retain();
  id v26 = v20;
  swift_release();
  [v21 addSuccessBlock:v25];
  _Block_release(v25);
}

uint64_t sub_100102AD0(void *a1, void *a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v9 = static RunLoopWorkerThread.current.getter();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_100104D4C(a2);
    if (v11 && (uint64_t v12 = sub_1000FE910(v11), swift_bridgeObjectRelease(), v12))
    {
      uint64_t v33 = v12;
      uint64_t v38 = v3;
      if (qword_10022C490 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v37 = ObjectType;
      v36[0] = a3;
      id v13 = a3;
      id v14 = (id)AMSLogKey();
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v32 = a1;
        id v16 = v13;
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = v18;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v20._uint64_t countAndFlagsBits = 0;
        v20._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v20);
        sub_100049788(v36, v37);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v34[0] = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v34, &qword_10022F490);
        v22._uint64_t countAndFlagsBits = 5972026;
        v22._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v22);
        uint64_t MetatypeMetadata = &type metadata for String;
        v34[0] = v17;
        v34[1] = v19;
        id v13 = v16;
        a1 = v32;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v34, &qword_10022F490);
        v23._uint64_t countAndFlagsBits = 93;
        v23._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v23);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v25._uint64_t countAndFlagsBits = 0;
        v25._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v25);
        sub_100049788(v36, v37);
        uint64_t v26 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v34[0] = v26;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v34, &qword_10022F490);
        v27._uint64_t countAndFlagsBits = 58;
        v27._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v27);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v36);
      LogMessage.init(stringLiteral:)();
      uint64_t v28 = static os_log_type_t.default.getter();
      sub_10004841C(v28);
      swift_bridgeObjectRelease();
      sub_10004D510(0, (unint64_t *)&qword_10022FE70);
      uint64_t v29 = (void *)swift_allocObject();
      _OWORD v29[2] = v33;
      void v29[3] = v10;
      v29[4] = v13;
      id v30 = v13;
      swift_retain();
      uint64_t v24 = sub_100010358(a1, (uint64_t)sub_100104DAC, (uint64_t)v29);
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v24 = type metadata accessor for JSError();
      sub_1000DE184(2, 0xD00000000000002ALL, 0x80000001001D2A10, 0, 0);
      swift_willThrow();
      swift_release();
    }
  }
  else
  {
    uint64_t v24 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD000000000000037, 0x80000001001D29D0, 0, 0);
    swift_willThrow();
  }
  return v24;
}

void sub_100102F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v37 = a2;
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v7 = type metadata accessor for JSCallable();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self defaultTreatmentStore];
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_10002318C(v12);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v34 = [v11 treatmentsPayloadForAreas:isa];

  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  Swift::String v27 = v10;
  uint64_t v28 = v7;
  v33(v10, a3, v7);
  uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v31 = v14 | 7;
  uint64_t v32 = v15 + v9;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v35;
  uint64_t v18 = v36;
  *(void *)(v16 + 16) = v35;
  *(void *)(v16 + 24) = v18;
  id v30 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v30(v16 + v15, v10, v7);
  unint64_t v42 = sub_100104DCC;
  uint64_t v43 = v16;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  uint64_t v29 = &v40;
  uint64_t v40 = sub_100181204;
  uint64_t v41 = &unk_100212F68;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  id v20 = v18;
  swift_release();
  id v21 = v34;
  [v34 addErrorBlock:v19];
  _Block_release(v19);
  Swift::String v22 = v27;
  uint64_t v23 = v28;
  v33(v27, v37, v28);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v17;
  *(void *)(v24 + 24) = v20;
  v30(v24 + v15, v22, v23);
  unint64_t v42 = sub_100104E54;
  uint64_t v43 = v24;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  uint64_t v40 = (void (*)(uint64_t, void *))sub_1000FE3F8;
  uint64_t v41 = &unk_100212FB8;
  Swift::String v25 = _Block_copy(&aBlock);
  swift_retain();
  id v26 = v20;
  swift_release();
  [v21 addSuccessBlock:v25];
  _Block_release(v25);
}

#error "10010331C: call analysis failed (funcsize=45)"

void sub_100103384()
{
  sub_1000209F4();
  Swift::String v22 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  sub_100011D4C();
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v6 = type metadata accessor for LogMessage();
  sub_100044798(v6);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v26 = type metadata accessor for JSTreatmentStore();
  v25[0] = v4;
  id v7 = v4;
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v25, v26);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v23, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v10;
    v23[1] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v23, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 93;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100046824();
    uint64_t v15 = swift_getMetatypeMetadata();
    sub_100045F54(v15);
    sub_10002CC0C((uint64_t)v23, &qword_10022F490);
    v16._uint64_t countAndFlagsBits = 58;
    v16._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v25);
  LogMessage.init(stringLiteral:)();
  uint64_t v17 = sub_10004D510(0, v22);
  uint64_t v26 = v17;
  v25[0] = v2;
  id v18 = v2;
  static LogMessage.safe(_:)();
  sub_10002CC0C((uint64_t)v25, &qword_10022F490);
  uint64_t v19 = static os_log_type_t.default.getter();
  sub_10004841C(v19);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1001C3110;
  *(void *)(v20 + 56) = v17;
  *(void *)(v20 + 32) = v18;
  id v21 = v18;
  sub_1000D4C74(v20);
  swift_bridgeObjectRelease();
  sub_100020FDC();
}

uint64_t sub_1001036E8()
{
  sub_10004D510(0, (unint64_t *)&qword_10022FE70);
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_100103760(void *a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v6 = static RunLoopWorkerThread.current.getter();
  if (v6)
  {
    uint64_t v7 = v6;
    id v30 = a1;
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v29 = ObjectType;
    v28[0] = a2;
    id v8 = a2;
    id v9 = (id)AMSLogKey();
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v13._uint64_t countAndFlagsBits = 0;
      v13._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v13);
      sub_100049788(v28, v29);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v26[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v26, &qword_10022F490);
      v15._uint64_t countAndFlagsBits = 5972026;
      v15._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      uint64_t MetatypeMetadata = &type metadata for String;
      v26[0] = v25;
      v26[1] = v12;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v26, &qword_10022F490);
      v16._uint64_t countAndFlagsBits = 93;
      v16._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v16);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      sub_100049788(v28, v29);
      uint64_t v19 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v26[0] = v19;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v26, &qword_10022F490);
      v20._uint64_t countAndFlagsBits = 58;
      v20._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v28);
    LogMessage.init(stringLiteral:)();
    uint64_t v21 = static os_log_type_t.default.getter();
    sub_10004841C(v21);
    swift_bridgeObjectRelease();
    sub_10004D510(0, (unint64_t *)&qword_10022FE70);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v7;
    *(void *)(v22 + 24) = v8;
    id v23 = v8;
    swift_retain();
    uint64_t v17 = sub_100010358(v30, (uint64_t)sub_100104494, v22);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v17 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD000000000000032, 0x80000001001D2920, 0, 0);
    swift_willThrow();
  }
  return v17;
}

void sub_100103B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v28 = a2;
  uint64_t v8 = type metadata accessor for JSCallable();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [self defaultTreatmentStore];
  id v26 = [v12 synchronizeTreatments];

  Swift::String v27 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v27(v11, a3, v8);
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v24 = v13 | 7;
  uint64_t v25 = v14 + v10;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a4;
  *(void *)(v15 + 24) = a5;
  id v23 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v23(v15 + v14, v11, v8);
  uint64_t v33 = sub_1001044B4;
  uint64_t v34 = v15;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v30 = 1107296256;
  uint64_t v22 = &v31;
  uint64_t v31 = sub_100181204;
  uint64_t v32 = &unk_100212E50;
  Swift::String v16 = _Block_copy(&aBlock);
  swift_retain();
  id v17 = a5;
  swift_release();
  id v18 = v26;
  [v26 addErrorBlock:v16];
  _Block_release(v16);
  v27(v11, v28, v8);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a4;
  *(void *)(v19 + 24) = v17;
  v23(v19 + v14, v11, v8);
  uint64_t v33 = sub_1001044EC;
  uint64_t v34 = v19;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v30 = 1107296256;
  uint64_t v31 = sub_10002CD0C;
  uint64_t v32 = &unk_100212EA0;
  Swift::String v20 = _Block_copy(&aBlock);
  swift_retain();
  id v21 = v17;
  swift_release();
  [v18 addSuccessBlock:v20];
  _Block_release(v20);
}

#error "100103ED4: call analysis failed (funcsize=50)"

uint64_t sub_100103F50(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for JSCallable();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  id v10 = a2;
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  return swift_release();
}

uint64_t sub_100104098(void *a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v22 = type metadata accessor for JSTreatmentStore();
  v21[0] = a1;
  id v3 = a1;
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v9._uint64_t countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    sub_100049788(v21, v22);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v19[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v19, &qword_10022F490);
    v11._uint64_t countAndFlagsBits = 5972026;
    v11._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t MetatypeMetadata = &type metadata for String;
    v19[0] = v6;
    v19[1] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v19, &qword_10022F490);
    v12._uint64_t countAndFlagsBits = 93;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._uint64_t countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(v21, v22);
    uint64_t v14 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v19[0] = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v19, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v21);
  LogMessage.init(stringLiteral:)();
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_10004841C(v16);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1001C3110;
  *(void *)(v17 + 56) = &type metadata for Bool;
  *(unsigned char *)(v17 + 32) = 1;
  sub_1000D4C74(v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100104438(void *a1)
{
  return sub_100103760(a1, *(void **)(v1 + 16));
}

uint64_t sub_100104454()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100104494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100103B78(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_1001044B4()
{
  return sub_100104E00();
}

uint64_t sub_1001044EC()
{
  uint64_t v0 = type metadata accessor for JSCallable();
  sub_100044E90(v0);
  uint64_t v1 = sub_10004CF10();
  return sub_100103F50(v1, v2, v3);
}

uint64_t sub_100104524()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  sub_100021220();
  uint64_t v0 = sub_1000210B4();
  v1(v0);
  uint64_t v2 = sub_100048198();
  return _swift_deallocObject(v2, v3, v4);
}

uint64_t sub_1001045A4()
{
  uint64_t v1 = type metadata accessor for JSCallable();
  sub_100044E90(v1);
  uint64_t v2 = *(void **)(v0 + 16);
  return sub_100104098(v2);
}

void sub_1001045EC()
{
}

uint64_t sub_100104604(void *a1)
{
  return sub_100102AD0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100104620(uint64_t a1)
{
  sub_100043478(&qword_100230828);
  uint64_t result = static _DictionaryStorage.copy(original:)();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v29 = a1;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v25 = (void *)result;
  uint64_t v26 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v28 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v9 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v29 + 48) + 16 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = *(void *)(*(void *)(v29 + 56) + 8 * i);
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v30 = *v14;
      sub_100043478(&qword_10022D738);
      uint64_t v19 = (void *)swift_allocObject();
      size_t v20 = j__malloc_size(v19);
      _OWORD v19[2] = v18;
      void v19[3] = 2 * ((uint64_t)(v20 - 32) / 16);
      uint64_t v32 = sub_10015B884((uint64_t)&v31, v19 + 4, v18, v17);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t result = sub_100011E28();
      if (v32 != v18) {
        goto LABEL_28;
      }
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v3 = v25;
      uint64_t v15 = v30;
    }
    else
    {
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v19 = _swiftEmptyArrayStorage;
    }
    *(void *)(v28 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    id v21 = (void *)(v3[6] + 16 * i);
    *id v21 = v15;
    v21[1] = v16;
    *(void *)(v3[7] + 8 * i) = v19;
    uint64_t v22 = v3[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v3[2] = v24;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_29;
    }
    if (v11 >= v27) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v26 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return (uint64_t)v3;
      }
      unint64_t v12 = *(void *)(v26 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return (uint64_t)v3;
        }
        unint64_t v12 = *(void *)(v26 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v27) {
    return (uint64_t)v3;
  }
  unint64_t v12 = *(void *)(v26 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v26 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_18;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1001048E8(uint64_t a1, void *a2)
{
  sub_100043478((uint64_t *)&unk_1002322D0);
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  int64_t v4 = (void *)v3;
  int64_t v5 = 0;
  uint64_t v29 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v27 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = v3 + 64;
  if ((v8 & v6) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v11 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v5 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v29 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = *(void **)(*(void *)(v29 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    id v20 = v19;
    sub_10010083C();
    uint64_t v22 = v21;

    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    BOOL v23 = (void *)(v4[6] + 16 * i);
    void *v23 = v17;
    v23[1] = v18;
    *(void *)(v4[7] + 8 * i) = v22;
    uint64_t v24 = v4[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v4[2] = v26;
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v28) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v28) {
        goto LABEL_22;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v28) {
          goto LABEL_22;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v5);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v9 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v28)
  {
LABEL_22:

    return;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_100104AFC(uint64_t a1, void *a2)
{
  sub_100043478((uint64_t *)&unk_100234670);
  uint64_t result = static _DictionaryStorage.copy(original:)();
  int64_t v4 = (void *)result;
  int64_t v5 = 0;
  uint64_t v27 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  int64_t v25 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v26 = result + 64;
  if ((v8 & v6) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v10 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v5 << 6))
  {
    int64_t v15 = (uint64_t *)(*(void *)(v27 + 48) + 16 * i);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = *(void *)(*(void *)(v27 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000FE180(v18, a2);
    uint64_t v20 = v19;
    uint64_t v30 = sub_100043478(&qword_10022FE80);
    swift_bridgeObjectRelease();
    *(void *)&long long v29 = v20;
    *(void *)(v26 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v21 = (void *)(v4[6] + 16 * i);
    *uint64_t v21 = v17;
    v21[1] = v16;
    uint64_t result = (uint64_t)sub_100043510(&v29, (_OWORD *)(v4[7] + 32 * i));
    uint64_t v22 = v4[2];
    BOOL v12 = __OFADD__(v22, 1);
    uint64_t v23 = v22 + 1;
    if (v12)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v4[2] = v23;
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v12 = __OFADD__(v5++, 1);
    if (v12) {
      goto LABEL_25;
    }
    if (v5 >= v25) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v24 + 8 * v5);
    if (!v13) {
      break;
    }
LABEL_15:
    unint64_t v9 = (v13 - 1) & v13;
  }
  int64_t v14 = v5 + 1;
  if (v5 + 1 >= v25) {
    goto LABEL_23;
  }
  unint64_t v13 = *(void *)(v24 + 8 * v14);
  if (v13) {
    goto LABEL_14;
  }
  int64_t v14 = v5 + 2;
  if (v5 + 2 >= v25) {
    goto LABEL_23;
  }
  unint64_t v13 = *(void *)(v24 + 8 * v14);
  if (v13) {
    goto LABEL_14;
  }
  int64_t v14 = v5 + 3;
  if (v5 + 3 >= v25)
  {
LABEL_23:

    return (uint64_t)v4;
  }
  unint64_t v13 = *(void *)(v24 + 8 * v14);
  if (v13)
  {
LABEL_14:
    int64_t v5 = v14;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v5 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v5 >= v25) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v24 + 8 * v5);
    ++v14;
    if (v13) {
      goto LABEL_15;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100104D4C(void *a1)
{
  id v1 = [a1 toArray];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_100104DAC()
{
  sub_100044154();
  sub_100102F70(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100104DCC()
{
  return sub_100104E00();
}

uint64_t sub_100104E00()
{
  uint64_t v2 = sub_100049E0C();
  sub_100044E90(v2);
  sub_10004724C();
  return v0(v1);
}

uint64_t sub_100104E54()
{
  return sub_100104E00();
}

void sub_100104E8C()
{
}

void sub_100104EB8()
{
}

uint64_t sub_100104ED0(void *a1)
{
  return sub_100102260(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_100104EF0()
{
  sub_100044154();
  sub_100102700(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100104F10()
{
  return sub_100104E00();
}

uint64_t sub_100104F48()
{
  return sub_100104E00();
}

uint64_t sub_100104F80()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  sub_100021220();

  uint64_t v1 = sub_1000210B4();
  v2(v1);
  uint64_t v3 = sub_100048198();
  return _swift_deallocObject(v3, v4, v5);
}

void sub_100105008()
{
}

void sub_100105030()
{
  uint64_t v0 = sub_100049E0C();
  sub_100044E90(v0);
  sub_10004CF10();
  sub_100103384();
}

void sub_100105084()
{
}

void *sub_10010509C(void *a1)
{
  return sub_100100B88(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1001050BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10010510C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100101024(a1, a2, a3, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_100105130()
{
  return sub_100104E00();
}

uint64_t sub_100105168(uint64_t a1)
{
  return sub_1001055CC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_100102000);
}

uint64_t sub_100105180(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_1002344F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1001051EC()
{
}

void sub_10010520C(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      sub_10004D510(0, &qword_100234570);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  sub_10004D510(0, &qword_100234570);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v4 = v16;
  swift_unknownObjectRelease();
  Swift::Int v7 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v7 & ~v8;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v9 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v10 = static NSObject.== infix(_:_:)();

  if ((v10 & 1) == 0)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v6 = (v6 + 1) & v11;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_23;
      }
      id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v13 = static NSObject.== infix(_:_:)();
    }
    while ((v13 & 1) == 0);
  }

LABEL_17:
  int64_t v14 = *(void **)(*(void *)(a4 + 48) + 8 * v6);
  id v15 = v14;
}

uint64_t sub_100105484(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100105494()
{
}

uint64_t sub_1001054AC(void *a1)
{
  return sub_1000FFE50(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1001054CC()
{
  sub_100044154();
  sub_1001002F0(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_1001054EC()
{
  return sub_100104E00();
}

uint64_t sub_100105524()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  sub_100021220();
  swift_release();

  uint64_t v1 = sub_1000210B4();
  v2(v1);
  uint64_t v3 = sub_100048198();
  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_1001055B4(uint64_t a1)
{
  return sub_1001055CC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_100100678);
}

uint64_t sub_1001055CC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, char *))
{
  uint64_t v4 = type metadata accessor for JSCallable();
  sub_100044E90(v4);
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  id v9 = (char *)v2 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a2(a1, v6, v7, v8, v9);
}

void sub_10010563C()
{
}

void sub_100105660()
{
}

uint64_t sub_100105678(void *a1)
{
  return sub_1000FEEA0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_100105698()
{
  sub_100044154();
  sub_1000FF340(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_1001056B8()
{
  return sub_100104E00();
}

void sub_1001056F0()
{
}

void sub_100105710()
{
  uint64_t v0 = sub_100046DF8();
  sub_100044E90(v0);
  sub_10004724C();
  sub_1000FF988();
}

void sub_100105758()
{
}

void sub_10010577C()
{
}

uint64_t sub_100105794(void *a1)
{
  return sub_1000FE470(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1001057B4()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1001057FC()
{
  sub_100044154();
  sub_1000FEA58(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_10010581C()
{
  return sub_100104E00();
}

void sub_100105854()
{
}

uint64_t sub_100105878()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  sub_100021220();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_1000210B4();
  v1(v0);
  uint64_t v2 = sub_100048198();
  return _swift_deallocObject(v2, v3, v4);
}

void sub_100105900()
{
}

void sub_100105920()
{
  uint64_t v0 = sub_100046DF8();
  sub_100044E90(v0);
  sub_10004CF10();
  sub_1000FFAF0();
}

uint64_t sub_100105968()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = (*(void *)(v4 + 64) + ((v5 + 24) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8;

  uint64_t v8 = sub_1000210B4();
  v9(v8);
  swift_errorRelease();
  return _swift_deallocObject(v0, v7 + 8, v6);
}

void sub_100105A18()
{
}

void sub_100105A30()
{
  uint64_t v0 = type metadata accessor for JSCallable();
  sub_100044798(v0);
  sub_1000FF69C();
}

uint64_t sub_100105B10()
{
  return sub_1001061A0();
}

void sub_100105B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v34 = a2;
  uint64_t v35 = a7;
  uint64_t v9 = type metadata accessor for JSCallable();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v12 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int64_t v14 = (void *)Strong;
    sub_10004D510(0, &qword_100232340);
    swift_bridgeObjectRetain();
    id v15 = sub_100150E5C();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v9);
    unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v35;
    *(void *)(v17 + 24) = v14;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v16, (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    uint64_t v38 = sub_100108754;
    uint64_t v39 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000FE3F8;
    uint64_t MetatypeMetadata = &unk_100213760;
    uint64_t v18 = _Block_copy(aBlock);
    swift_retain();
    id v19 = v14;
    swift_release();
    [v15 getNotificationSettingsWithCompletionHandler:v18];
    _Block_release(v18);
  }
  else
  {
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    aBlock[0] = a8;
    id v20 = (id)AMSLogKey();
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v25._uint64_t countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      sub_100049788(aBlock, (uint64_t)MetatypeMetadata);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t v41 = (void *)swift_getMetatypeMetadata();
      v40[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v40);
      v27._uint64_t countAndFlagsBits = 5972026;
      v27._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      uint64_t v41 = &type metadata for String;
      v40[0] = v22;
      v40[1] = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v40);
      v28._uint64_t countAndFlagsBits = 93;
      v28._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v29._uint64_t countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      sub_100049788(aBlock, (uint64_t)MetatypeMetadata);
      uint64_t v30 = swift_getDynamicType();
      uint64_t v41 = (void *)swift_getMetatypeMetadata();
      v40[0] = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v40);
      v31._uint64_t countAndFlagsBits = 58;
      v31._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)aBlock);
    LogMessage.init(stringLiteral:)();
    uint64_t v32 = static os_log_type_t.error.getter();
    sub_10004841C(v32);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100106018(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for JSCallable();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  id v12 = a1;
  id v13 = a3;
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  return swift_release();
}

uint64_t sub_100106188()
{
  return sub_1001061A0();
}

uint64_t sub_1001061A0()
{
  swift_getObjectType();
  sub_10004D510(0, (unint64_t *)&qword_10022FE70);
  uint64_t v0 = (void *)static JSContext.requiredCurrent.getter();
  uint64_t v1 = JSContext.propagateErrorsToExceptions(_:)();

  return v1;
}

uint64_t sub_100106234(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v39 = a8;
  uint64_t v14 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v14 - 8);
  type metadata accessor for RunLoopWorkerThread();
  uint64_t v15 = static RunLoopWorkerThread.current.getter();
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v34 = a1;
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    uint64_t v38 = (void *)type metadata accessor for JSUserNotifications();
    v37[0] = a2;
    a2;
    id v17 = (id)AMSLogKey();
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v22._uint64_t countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      sub_100049788(v37, (uint64_t)v38);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v35[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v35);
      v24._uint64_t countAndFlagsBits = 5972026;
      v24._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      uint64_t MetatypeMetadata = &type metadata for String;
      v35[0] = v19;
      v35[1] = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v35);
      v25._uint64_t countAndFlagsBits = 93;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v27._uint64_t countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      sub_100049788(v37, (uint64_t)v38);
      uint64_t v28 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v35[0] = v28;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v35);
      v29._uint64_t countAndFlagsBits = 58;
      v29._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v37);
    LogMessage.init(stringLiteral:)();
    uint64_t v38 = &type metadata for String;
    v37[0] = a3;
    v37[1] = a4;
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)v37);
    uint64_t v30 = static os_log_type_t.default.getter();
    sub_10004841C(v30);
    swift_bridgeObjectRelease();
    sub_10004D510(0, (unint64_t *)&qword_10022FE70);
    uint64_t v31 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v32 = (void *)swift_allocObject();
    _OWORD v32[2] = v31;
    void v32[3] = a3;
    void v32[4] = a4;
    v32[5] = v16;
    v32[6] = a5;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v26 = sub_100010358(v34, a9, (uint64_t)v32);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v26 = type metadata accessor for JSError();
    sub_1000DE184(12, 0xD00000000000002CLL, 0x80000001001D0CC0, 0, 0);
    swift_willThrow();
  }
  return v26;
}

void sub_100106694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v36 = a2;
  uint64_t v37 = a7;
  uint64_t v11 = type metadata accessor for JSCallable();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v14 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (void *)Strong;
    sub_10004D510(0, &qword_100232340);
    swift_bridgeObjectRetain();
    id v35 = sub_100150E5C();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v11);
    unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v18 = (char *)swift_allocObject();
    *((void *)v18 + 2) = v37;
    *((void *)v18 + 3) = a5;
    *((void *)v18 + 4) = a6;
    *((void *)v18 + 5) = v16;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v18[v17], (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
    uint64_t v40 = sub_100108494;
    uint64_t v41 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000FE3F8;
    uint64_t MetatypeMetadata = &unk_1002136C0;
    uint64_t v19 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    id v20 = v16;
    swift_release();
    id v21 = v35;
    [v35 getNotificationSettingsWithCompletionHandler:v19];
    _Block_release(v19);
  }
  else
  {
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    aBlock[0] = a8;
    id v22 = (id)AMSLogKey();
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v27._uint64_t countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      sub_100049788(aBlock, (uint64_t)MetatypeMetadata);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t v43 = (void *)swift_getMetatypeMetadata();
      v42[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v42);
      v29._uint64_t countAndFlagsBits = 5972026;
      v29._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      uint64_t v43 = &type metadata for String;
      v42[0] = v24;
      v42[1] = v26;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v42);
      v30._uint64_t countAndFlagsBits = 93;
      v30._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v31._uint64_t countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      sub_100049788(aBlock, (uint64_t)MetatypeMetadata);
      uint64_t v32 = swift_getDynamicType();
      uint64_t v43 = (void *)swift_getMetatypeMetadata();
      v42[0] = v32;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v42);
      v33._uint64_t countAndFlagsBits = 58;
      v33._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)aBlock);
    LogMessage.init(stringLiteral:)();
    uint64_t v34 = static os_log_type_t.error.getter();
    sub_10004841C(v34);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100106B94(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  v19[1] = a2;
  uint64_t v11 = type metadata accessor for JSCallable();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a3;
  *((void *)v15 + 3) = a4;
  *((void *)v15 + 4) = a1;
  *((void *)v15 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v15[v14], (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  swift_bridgeObjectRetain();
  id v16 = a1;
  id v17 = a5;
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  return swift_release();
}

uint64_t sub_100106D08(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3120;
  *(void *)(inited + 32) = 0xD000000000000016;
  *(void *)(inited + 40) = 0x80000001001D3240;
  uint64_t v7 = self;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 explicitContentSettingForBundleID:v8];

  *(void *)(inited + 48) = v9;
  *(void *)(inited + 72) = &type metadata for Int;
  *(void *)(inited + 80) = 0xD000000000000014;
  *(void *)(inited + 88) = 0x80000001001D3060;
  uint64_t v10 = sub_100107188();
  uint64_t v11 = sub_100043478(&qword_10022D7B0);
  *(void *)(inited + 120) = v11;
  *(void *)(inited + 96) = v10;
  uint64_t v12 = Dictionary.init(dictionaryLiteral:)();
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v32 = type metadata accessor for JSUserNotifications();
  v31[0] = a4;
  id v13 = a4;
  id v14 = (id)AMSLogKey();
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v19._uint64_t countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    sub_100049788(v31, v32);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v29[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v29);
    v21._uint64_t countAndFlagsBits = 5972026;
    v21._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    uint64_t MetatypeMetadata = &type metadata for String;
    v29[0] = v16;
    v29[1] = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v29);
    v22._uint64_t countAndFlagsBits = 93;
    v22._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v23._uint64_t countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    sub_100049788(v31, v32);
    uint64_t v24 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v29[0] = v24;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v29);
    v25._uint64_t countAndFlagsBits = 58;
    v25._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v31);
  LogMessage.init(stringLiteral:)();
  uint64_t v32 = v11;
  v31[0] = v12;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)v31);
  uint64_t v26 = static os_log_type_t.default.getter();
  sub_10004841C(v26);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1001C3110;
  *(void *)(v27 + 56) = v11;
  *(void *)(v27 + 32) = v12;
  sub_10001147C(v27);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100107188()
{
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C64A0;
  strcpy((char *)(inited + 32), "alertSetting");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 48) = [v0 alertSetting];
  *(void *)(inited + 72) = &type metadata for Int;
  *(void *)(inited + 80) = 0x7974537472656C61;
  *(void *)(inited + 88) = 0xEA0000000000656CLL;
  *(void *)(inited + 96) = [v0 alertStyle];
  *(void *)(inited + 120) = &type metadata for Int;
  *(void *)(inited + 128) = 0xD000000000000013;
  sub_100020640();
  *(void *)(inited + 136) = v2;
  *(void *)(inited + 144) = [v0 announcementSetting];
  *(void *)(inited + 168) = &type metadata for Int;
  *(void *)(inited + 176) = 0xD000000000000013;
  sub_100020640();
  *(void *)(inited + 184) = v3;
  *(void *)(inited + 192) = [v0 authorizationStatus];
  *(void *)(inited + 216) = &type metadata for Int;
  strcpy((char *)(inited + 224), "badgeSetting");
  *(unsigned char *)(inited + 237) = 0;
  *(_WORD *)(inited + 238) = -5120;
  *(void *)(inited + 240) = [v0 badgeSetting];
  *(void *)(inited + 264) = &type metadata for Int;
  strcpy((char *)(inited + 272), "carPlaySetting");
  *(unsigned char *)(inited + 287) = -18;
  *(void *)(inited + 288) = [v0 carPlaySetting];
  *(void *)(inited + 312) = &type metadata for Int;
  *(void *)(inited + 320) = 0xD000000000000014;
  sub_100020640();
  *(void *)(inited + 328) = v4;
  *(void *)(inited + 336) = [v0 criticalAlertSetting];
  *(void *)(inited + 360) = &type metadata for Int;
  *(void *)(inited + 368) = 0xD000000000000015;
  sub_100045298();
  *(void *)(inited + 376) = v5;
  *(void *)(inited + 384) = [v0 directMessagesSetting];
  *(void *)(inited + 408) = &type metadata for Int;
  *(void *)(inited + 416) = 0x676E6970756F7267;
  *(void *)(inited + 424) = 0xEF676E6974746553;
  *(void *)(inited + 432) = [v0 groupingSetting];
  *(void *)(inited + 456) = &type metadata for Int;
  *(void *)(inited + 464) = 0xD000000000000011;
  sub_100045298();
  *(void *)(inited + 472) = v6;
  *(void *)(inited + 480) = [v0 lockScreenSetting];
  *(void *)(inited + 504) = &type metadata for Int;
  *(void *)(inited + 512) = 0xD000000000000019;
  sub_100045298();
  *(void *)(inited + 520) = v7;
  id v8 = [v0 notificationCenterSetting];
  *(void *)(inited + 552) = &type metadata for Int;
  *(void *)(inited + 528) = v8;
  *(void *)(inited + 560) = 0xD00000000000001FLL;
  sub_100045298();
  *(void *)(inited + 568) = v9;
  unsigned __int8 v10 = [v0 providesAppNotificationSettings];
  *(void *)(inited + 600) = &type metadata for Bool;
  *(unsigned char *)(inited + 576) = v10;
  *(void *)(inited + 608) = 0xD000000000000013;
  sub_100020640();
  *(void *)(inited + 616) = v11;
  id v12 = [v0 showPreviewsSetting];
  *(void *)(inited + 648) = &type metadata for Int;
  *(void *)(inited + 624) = v12;
  strcpy((char *)(inited + 656), "soundSetting");
  *(unsigned char *)(inited + 669) = 0;
  *(_WORD *)(inited + 670) = -5120;
  id v13 = [v0 soundSetting];
  *(void *)(inited + 696) = &type metadata for Int;
  *(void *)(inited + 672) = v13;
  *(void *)(inited + 704) = 0xD000000000000018;
  sub_100045298();
  *(void *)(inited + 712) = v14;
  id v15 = [v0 scheduledDeliverySetting];
  *(void *)(inited + 744) = &type metadata for Int;
  *(void *)(inited + 720) = v15;
  *(void *)(inited + 752) = 0xD000000000000014;
  sub_100020640();
  *(void *)(inited + 760) = v16;
  id v17 = [v0 timeSensitiveSetting];
  *(void *)(inited + 792) = &type metadata for Int;
  *(void *)(inited + 768) = v17;
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_10010752C()
{
  return sub_1001061A0();
}

void sub_100107544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v34 = a2;
  uint64_t v35 = a7;
  uint64_t v9 = type metadata accessor for JSCallable();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v12 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = (void *)Strong;
    sub_10004D510(0, &qword_100232340);
    swift_bridgeObjectRetain();
    id v15 = sub_100150E5C();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v9);
    unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v35;
    *(void *)(v17 + 24) = v14;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v16, (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    uint64_t v38 = sub_100108124;
    uint64_t v39 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100150ECC;
    uint64_t MetatypeMetadata = &unk_100213620;
    uint64_t v18 = _Block_copy(aBlock);
    swift_retain();
    id v19 = v14;
    swift_release();
    [v15 getNotificationSettingsForTopicsWithCompletionHandler:v18];
    _Block_release(v18);
  }
  else
  {
    if (qword_10022C490 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    aBlock[0] = a8;
    id v20 = (id)AMSLogKey();
    if (v20)
    {
      Swift::String v21 = v20;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v25._uint64_t countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      sub_100049788(aBlock, (uint64_t)MetatypeMetadata);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t v41 = (void *)swift_getMetatypeMetadata();
      v40[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v40);
      v27._uint64_t countAndFlagsBits = 5972026;
      v27._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      uint64_t v41 = &type metadata for String;
      v40[0] = v22;
      v40[1] = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v40);
      v28._uint64_t countAndFlagsBits = 93;
      v28._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v29._uint64_t countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      sub_100049788(aBlock, (uint64_t)MetatypeMetadata);
      uint64_t v30 = swift_getDynamicType();
      uint64_t v41 = (void *)swift_getMetatypeMetadata();
      v40[0] = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v40);
      v31._uint64_t countAndFlagsBits = 58;
      v31._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)aBlock);
    LogMessage.init(stringLiteral:)();
    uint64_t v32 = static os_log_type_t.error.getter();
    sub_10004841C(v32);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100107A34(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for JSCallable();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_bridgeObjectRetain();
  id v12 = a3;
  dispatch thunk of RunLoopWorkerThread.schedule(task:)();
  return swift_release();
}

uint64_t sub_100107B90(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  sub_100043478(&qword_100230858);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = 0xD000000000000014;
  *(void *)(inited + 40) = 0x80000001001D3060;
  sub_10010816C(a1);
  *(void *)(inited + 48) = v6;
  sub_100043478(&qword_100230810);
  uint64_t v7 = Dictionary.init(dictionaryLiteral:)();
  if (qword_10022C490 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v28 = type metadata accessor for JSUserNotifications();
  v27[0] = a2;
  id v8 = a2;
  id v9 = (id)AMSLogKey();
  if (v9)
  {
    unint64_t v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v14._uint64_t countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    sub_100049788(v27, v28);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v25[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v25);
    v16._uint64_t countAndFlagsBits = 5972026;
    v16._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    uint64_t MetatypeMetadata = &type metadata for String;
    v25[0] = v11;
    v25[1] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v25);
    v17._uint64_t countAndFlagsBits = 93;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v18._uint64_t countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    sub_100049788(v27, v28);
    uint64_t v19 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v25[0] = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v25);
    v20._uint64_t countAndFlagsBits = 58;
    v20._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v27);
  LogMessage.init(stringLiteral:)();
  uint64_t v21 = sub_100043478(&qword_100230860);
  uint64_t v28 = v21;
  v27[0] = v7;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)v27);
  uint64_t v22 = static os_log_type_t.default.getter();
  sub_10004841C(v22);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D808);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1001C3110;
  *(void *)(v23 + 56) = v21;
  *(void *)(v23 + 32) = v7;
  sub_10001147C(v23);
  return swift_bridgeObjectRelease();
}

id sub_100107FA0(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  id v9 = a1;
  unint64_t v10 = (void *)a4(v6, v8);

  swift_bridgeObjectRelease();
  return v10;
}

id sub_100108018()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSUserNotifications();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10010804C()
{
  sub_1000481F4();
  return sub_100106234(v0, v1, v2, v3, v4, 0xD000000000000034, 0x80000001001D3020, (uint64_t)&unk_1002135E0, (uint64_t)sub_1001080E0);
}

uint64_t sub_1001080A4()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001080E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100108654(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void))sub_100107544);
}

uint64_t sub_10010810C()
{
  return sub_100108698((void (*)(void))&_swift_release);
}

uint64_t sub_100108124(uint64_t a1)
{
  return sub_10010876C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100107A34);
}

uint64_t sub_10010813C()
{
  return sub_100108698((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100108154()
{
  return sub_100108880((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100107B90);
}

void sub_10010816C(uint64_t a1)
{
  sub_100043478((uint64_t *)&unk_1002322D0);
  uint64_t v2 = static _DictionaryStorage.copy(original:)();
  uint64_t v3 = (void *)v2;
  int64_t v4 = 0;
  uint64_t v29 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v27 = v6;
  int64_t v28 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v2 + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    Swift::String v17 = (uint64_t *)(*(void *)(v29 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    Swift::String v20 = *(void **)(*(void *)(v29 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    id v21 = v20;
    uint64_t v22 = sub_100107188();

    *(void *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v23 = (void *)(v3[6] + 16 * i);
    void *v23 = v18;
    v23[1] = v19;
    *(void *)(v3[7] + 8 * i) = v22;
    uint64_t v24 = v3[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v26;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v14 >= v28) {
      return;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v14);
    ++v4;
    if (!v15)
    {
      int64_t v4 = v14 + 1;
      if (v14 + 1 >= v28) {
        return;
      }
      unint64_t v15 = *(void *)(v27 + 8 * v4);
      if (!v15)
      {
        int64_t v4 = v14 + 2;
        if (v14 + 2 >= v28) {
          return;
        }
        unint64_t v15 = *(void *)(v27 + 8 * v4);
        if (!v15) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v28) {
    return;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v28) {
      return;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_100108370()
{
  sub_1000481F4();
  return sub_100106234(v0, v1, v2, v3, v4, 0xD000000000000029, 0x80000001001D31E0, (uint64_t)&unk_100213680, (uint64_t)sub_1001083CC);
}

uint64_t sub_1001083CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100108654(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void))sub_100106694);
}

uint64_t sub_1001083F8()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v1 = sub_1000210B4();
  v2(v1);
  uint64_t v3 = sub_100048198();
  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_100108494(void *a1)
{
  uint64_t v3 = type metadata accessor for JSCallable();
  sub_100044E90(v3);
  sub_1000481F4();
  return sub_100106B94(a1, v4, v5, v6, v7, v1 + v8);
}

uint64_t sub_1001084E8()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();
  swift_bridgeObjectRelease();

  uint64_t v1 = sub_1000210B4();
  v2(v1);
  uint64_t v3 = sub_100048198();
  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_100108584()
{
  uint64_t v1 = type metadata accessor for JSCallable();
  sub_100044E90(v1);
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  return sub_100106D08(v2, v3, v4, v5);
}

uint64_t sub_1001085CC()
{
  sub_1000481F4();
  return sub_100106234(v0, v1, v2, v3, v4, 0xD000000000000028, 0x80000001001D32A0, (uint64_t)&unk_100213720, (uint64_t)sub_100108628);
}

uint64_t sub_100108628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100108654(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void))sub_100105B28);
}

uint64_t sub_100108654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void, void, void, void, void))
{
  return a4(a1, a2, a3, v4[2], v4[3], v4[4], v4[5], v4[6]);
}

uint64_t sub_100108680()
{
  return sub_100108698((void (*)(void))&_swift_release);
}

uint64_t sub_100108698(void (*a1)(void))
{
  uint64_t v3 = type metadata accessor for JSCallable();
  sub_100020DEC();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = (v8 + 32) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v8 | 7;
  a1(*(void *)(v1 + 16));

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1 + v9, v3);
  return _swift_deallocObject(v1, v10, v11);
}

uint64_t sub_100108754(uint64_t a1)
{
  return sub_10010876C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100106018);
}

uint64_t sub_10010876C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = type metadata accessor for JSCallable();
  sub_100044E90(v4);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a2(a1, v6, v7, v8);
}

uint64_t sub_1001087D4()
{
  type metadata accessor for JSCallable();
  sub_100020DEC();

  uint64_t v1 = sub_1000210B4();
  v2(v1);
  uint64_t v3 = sub_100048198();
  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_100108868()
{
  return sub_100108880((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100005258);
}

uint64_t sub_100108880(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = type metadata accessor for JSCallable();
  sub_100044E90(v2);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a1(v4, v5, v6);
}

id sub_1001088E0(void *a1)
{
  sub_100049788(a1, a1[3]);
  uint64_t v2 = _bridgeAnythingToObjectiveC<A>(_:)();
  NSString v3 = String._bridgeToObjectiveC()();
  id v7 = 0;
  unsigned int v4 = [v1 setValue:v2 forKey:v3 error:&v7];
  swift_unknownObjectRelease();

  if (v4) {
    return v7;
  }
  id v6 = v7;
  _convertNSErrorToError(_:)();

  return (id)swift_willThrow();
}

uint64_t sub_1001089D8()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v6 = 0;
  id v2 = [v0 valueForKey:v1 error:&v6];

  id v3 = v6;
  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v5 = v3;
    _convertNSErrorToError(_:)();

    return swift_willThrow();
  }
}

id sub_100108AB0(void *a1)
{
  return sub_1001088E0(a1);
}

uint64_t sub_100108AD4()
{
  return sub_1001089D8();
}

uint64_t sub_100108AF8()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_100047524();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  *(void *)(v0 + 16) = result;
  qword_1002440C8 = v0;
  return result;
}

void sub_100108B54()
{
  sub_1000209F4();
  uint64_t v0 = sub_1000463B8();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  os_log_type_t v2 = sub_1000468CC();
  if (sub_10004A208(v2))
  {
    static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v3 = sub_100046E18();
    sub_100044798(v3);
    unsigned int v4 = (__n128 *)sub_100048808();
    uint64_t v5 = sub_10004A3D0(v4, (__n128)xmmword_1001C3FC0);
    sub_10002123C(v5);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100043CE0();
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100048E08();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000458E0(MetatypeMetadata);
      sub_1000423CC((uint64_t)v11);
      sub_100020E44();
      sub_100049A34();
      sub_1000423CC((uint64_t)v11);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100043C78();
      uint64_t v8 = swift_getMetatypeMetadata();
      sub_1000472AC(v8);
      sub_1000423CC((uint64_t)v11);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_100050160();
    sub_100020924();
    LogMessage.init(stringLiteral:)();
    uint64_t v9 = sub_10004786C();
    sub_10004AC44(v9, v10);
    sub_1000423CC((uint64_t)&v12);
    sub_100049E30();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10004770C();
    sub_100020FDC();
    swift_release();
  }
}

void sub_100108D18()
{
  sub_1000209F4();
  uint64_t v0 = sub_1000463B8();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  os_log_type_t v2 = sub_1000468CC();
  if (sub_10004A208(v2))
  {
    static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v3 = sub_100046E18();
    sub_100044798(v3);
    unsigned int v4 = (__n128 *)sub_100048808();
    uint64_t v5 = sub_10004A3D0(v4, (__n128)xmmword_1001C3FC0);
    sub_10002123C(v5);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100043CE0();
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100048E08();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000458E0(MetatypeMetadata);
      sub_1000423CC((uint64_t)v11);
      sub_100020E44();
      sub_100049A34();
      sub_1000423CC((uint64_t)v11);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100043C78();
      uint64_t v8 = swift_getMetatypeMetadata();
      sub_1000472AC(v8);
      sub_1000423CC((uint64_t)v11);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_100050160();
    sub_100041028();
    uint64_t v9 = sub_10004786C();
    sub_10004AC44(v9, v10);
    sub_1000423CC((uint64_t)&v12);
    sub_100049E30();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10004770C();
    sub_100020FDC();
    swift_release();
  }
}

void sub_100108EC4()
{
  sub_1000209F4();
  uint64_t v0 = sub_1000463B8();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  os_log_type_t v2 = sub_1000468CC();
  if (sub_10004A208(v2))
  {
    uint64_t v3 = static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v4 = sub_100046E18();
    sub_100044798(v4);
    sub_100109CB8();
    uint64_t v5 = (__n128 *)sub_10004211C();
    uint64_t v6 = sub_10004A3D0(v5, (__n128)xmmword_1001C3130);
    sub_10002123C(v6);
    id v7 = (id)AMSLogKey();
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100048E08();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000458E0(MetatypeMetadata);
      sub_1000423CC((uint64_t)v15);
      sub_100020E44();
      void v15[3] = &type metadata for String;
      v15[0] = v9;
      v15[1] = v11;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v15);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100043C78();
      uint64_t v14 = swift_getMetatypeMetadata();
      sub_1000472AC(v14);
      sub_1000423CC((uint64_t)v15);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004A588();
    sub_100020924();
    LogMessage.init(stringLiteral:)();
    sub_100043B80();
    sub_10004841C(v3);
    swift_release();
    swift_bridgeObjectRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10004770C();
    sub_100020FDC();
    swift_release();
  }
}

void sub_1001090B0()
{
  sub_1000209F4();
  uint64_t v0 = sub_100035CD0();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  os_log_type_t v2 = sub_100040CB8();
  if (sub_10004FC30(v2))
  {
    uint64_t v3 = static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v4 = type metadata accessor for LogMessage();
    sub_100044798(v4);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    uint64_t v5 = type metadata accessor for PriorityQueue();
    sub_1000227E8(v5);
    id v6 = (id)AMSLogKey();
    if (v6)
    {
      id v7 = v6;
      unsigned int v15 = v3;
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      uint64_t v11 = sub_100042B84();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v16[0] = v11;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v16);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      v16[0] = v8;
      v16[1] = v10;
      uint64_t v3 = v15;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v16);
      sub_1000208D8();
      sub_100011DB4();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      uint64_t v12 = sub_100022668();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v16[0] = v12;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v16);
      sub_100020E94();
      sub_100011DB4();
    }
    sub_10004377C((uint64_t)v18);
    sub_100043B80();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_10002064C();
    v13._uint64_t countAndFlagsBits = 0xD000000000000013;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    uint64_t v14 = type metadata accessor for Worker();
    sub_10002123C(v14);
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v18);
    sub_100020E60();
    sub_100011DB4();
    sub_10004841C(v3);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  swift_release();
  sub_100020FDC();
}

void sub_100109308()
{
  sub_1000209F4();
  uint64_t v0 = sub_1000463B8();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  os_log_type_t v2 = sub_1000468CC();
  if (sub_10004A208(v2))
  {
    static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v3 = sub_100046E18();
    sub_100044798(v3);
    uint64_t v4 = (__n128 *)sub_100048808();
    uint64_t v5 = sub_100043A2C(v4, (__n128)xmmword_1001C3FC0);
    sub_10002123C(v5);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100043CE0();
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100048E08();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000458E0(MetatypeMetadata);
      sub_1000423CC((uint64_t)v11);
      sub_100020E44();
      sub_100049A34();
      sub_1000423CC((uint64_t)v11);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100043C78();
      uint64_t v8 = swift_getMetatypeMetadata();
      sub_1000472AC(v8);
      sub_1000423CC((uint64_t)v11);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004A588();
    sub_100043B80();
    sub_100020924();
    LogMessage.init(stringLiteral:)();
    uint64_t v9 = sub_10004A724();
    sub_10004AC44(v9, v10);
    sub_1000423CC((uint64_t)&v12);
    sub_100049E30();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10004770C();
    sub_100020FDC();
    swift_release();
  }
}

void sub_1001094E4()
{
  sub_1000209F4();
  uint64_t v0 = sub_1000463B8();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  os_log_type_t v2 = sub_1000468CC();
  if (sub_10004A208(v2))
  {
    static os_log_type_t.default.getter();
    sub_100043478(&qword_10022E560);
    uint64_t v3 = sub_100046E18();
    sub_100044798(v3);
    uint64_t v4 = (__n128 *)sub_100048808();
    uint64_t v5 = sub_10004A3D0(v4, (__n128)xmmword_1001C3FC0);
    sub_10002123C(v5);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100043CE0();
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100048E08();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000458E0(MetatypeMetadata);
      sub_1000423CC((uint64_t)v11);
      sub_100020E44();
      sub_100049A34();
      sub_1000423CC((uint64_t)v11);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100043C78();
      uint64_t v8 = swift_getMetatypeMetadata();
      sub_1000472AC(v8);
      sub_1000423CC((uint64_t)v11);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004A588();
    sub_100050DB0();
    sub_1000524E4();
    LogMessage.init(stringLiteral:)();
    uint64_t v9 = sub_10004786C();
    sub_10004AC44(v9, v10);
    sub_1000423CC((uint64_t)&v12);
    sub_100049E30();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100020FDC();
  }
  else
  {
    sub_10004770C();
    sub_100020FDC();
    swift_release();
  }
}

uint64_t sub_1001096B0()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1001096E8()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_100046C90();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  *(void *)(v0 + 16) = result;
  qword_1002440D0 = v0;
  return result;
}

uint64_t sub_100109744()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_100046C90();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  *(void *)(v0 + 16) = result;
  qword_1002440D8 = v0;
  return result;
}

uint64_t sub_10010979C()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_100046C90();
  uint64_t result = sub_100043EB4();
  *(void *)(v0 + 16) = result;
  qword_1002440E0 = v0;
  return result;
}

uint64_t sub_1001097E4()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_10002064C();
  sub_10004A8CC();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  *(void *)(v0 + 16) = result;
  qword_1002440E8 = v0;
  return result;
}

uint64_t sub_10010984C()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_10002064C();
  sub_10004A8CC();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  *(void *)(v0 + 16) = result;
  qword_1002440F0 = v0;
  return result;
}

uint64_t sub_1001098B4()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_10002064C();
  sub_10004A8CC();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  *(void *)(v0 + 16) = result;
  qword_1002440F8 = v0;
  return result;
}

uint64_t sub_10010991C()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_10002064C();
  sub_10004A8CC();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  *(void *)(v0 + 16) = result;
  qword_100244100 = v0;
  return result;
}

uint64_t sub_100109984()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_10004D6B4();
  sub_10002064C();
  uint64_t result = sub_10002CB20();
  *(void *)(v0 + 16) = result;
  qword_100244108 = v0;
  return result;
}

uint64_t sub_1001099D4()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_100047524();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  *(void *)(v0 + 16) = result;
  qword_100244110 = v0;
  return result;
}

uint64_t sub_100109A30()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_100047524();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  *(void *)(v0 + 16) = result;
  qword_100244118 = v0;
  return result;
}

uint64_t sub_100109A98()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_100047524();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  *(void *)(v0 + 16) = result;
  qword_100244120 = v0;
  return result;
}

uint64_t sub_100109AF8()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_10004D6B4();
  sub_10002064C();
  uint64_t result = sub_10002CB20();
  *(void *)(v0 + 16) = result;
  qword_100244128 = v0;
  return result;
}

uint64_t sub_100109B48()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_100047524();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  *(void *)(v0 + 16) = result;
  qword_100244130 = v0;
  return result;
}

uint64_t sub_100109BAC()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_100052128();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  *(void *)(v0 + 16) = result;
  qword_100244138 = v0;
  return result;
}

uint64_t sub_100109C0C()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_100052128();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  *(void *)(v0 + 16) = result;
  qword_100244140 = v0;
  return result;
}

uint64_t sub_100109C68()
{
  type metadata accessor for Log();
  sub_100021AF4();
  sub_10004C85C();
  sub_100047524();
  uint64_t result = sub_100043EB4();
  *(void *)(v0 + 16) = result;
  qword_100244148 = v0;
  return result;
}

void sub_100109CC8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100043478(&qword_100230960);
    os_log_type_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    os_log_type_t v2 = _swiftEmptyDictionarySingleton;
  }
  sub_100010AF8(a1, v38);
  uint64_t v3 = v38[0];
  uint64_t v4 = v38[3];
  unint64_t v5 = v38[4];
  int64_t v31 = (unint64_t)(v38[2] + 64) >> 6;
  uint64_t v32 = v38[1];
  id v6 = &v37;
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v7 = (v5 - 1) & v5;
  unint64_t v8 = __clz(__rbit64(v5)) | (v4 << 6);
  for (i = v4; ; unint64_t v8 = __clz(__rbit64(v13)) + (i << 6))
  {
    int64_t v16 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    sub_100043520(*(void *)(v3 + 56) + 32 * v8, (uint64_t)v6);
    v36[0] = v18;
    v36[1] = v17;
    sub_100043520((uint64_t)v6, (uint64_t)v35);
    swift_bridgeObjectRetain_n();
    sub_10002CC0C((uint64_t)v36, &qword_10022E208);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000452A4();
      sub_100011E28();
      swift_release();
      return;
    }
    unint64_t v19 = sub_100042ADC(v18, v17);
    unint64_t v20 = v19;
    if (v21)
    {
      uint64_t v22 = v6;
      uint64_t v23 = v3;
      uint64_t v24 = (uint64_t *)(v2[6] + 16 * v19);
      swift_bridgeObjectRelease();
      *uint64_t v24 = v18;
      v24[1] = v17;
      BOOL v25 = (void *)(v2[7] + 16 * v20);
      swift_bridgeObjectRelease();
      *BOOL v25 = v33;
      v25[1] = v34;
      uint64_t v3 = v23;
      id v6 = v22;
      goto LABEL_29;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    sub_100048200((v19 >> 3) & 0x1FFFFFFFFFFFFFF8);
    uint64_t v27 = (uint64_t *)(v26 + 16 * v20);
    *uint64_t v27 = v18;
    v27[1] = v17;
    int64_t v28 = (void *)(v2[7] + 16 * v20);
    *int64_t v28 = v33;
    v28[1] = v34;
    uint64_t v29 = v2[2];
    BOOL v12 = __OFADD__(v29, 1);
    uint64_t v30 = v29 + 1;
    if (v12) {
      goto LABEL_34;
    }
    v2[2] = v30;
LABEL_29:
    uint64_t v4 = i;
    unint64_t v5 = v7;
    if (v7) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v4, 1)) {
      goto LABEL_35;
    }
    sub_100048830();
    if (v11 == v12) {
      goto LABEL_32;
    }
    unint64_t v13 = *(void *)(v32 + 8 * v10);
    uint64_t i = v10;
    if (!v13)
    {
      uint64_t i = v10 + 1;
      if (v10 + 1 >= v31) {
        goto LABEL_32;
      }
      unint64_t v13 = *(void *)(v32 + 8 * i);
      if (!v13)
      {
        uint64_t i = v10 + 2;
        if (v10 + 2 >= v31) {
          goto LABEL_32;
        }
        unint64_t v13 = *(void *)(v32 + 8 * i);
        if (!v13)
        {
          uint64_t i = v10 + 3;
          if (v10 + 3 >= v31) {
            goto LABEL_32;
          }
          unint64_t v13 = *(void *)(v32 + 8 * i);
          if (!v13)
          {
            uint64_t i = v10 + 4;
            if (v10 + 4 >= v31) {
              goto LABEL_32;
            }
            unint64_t v13 = *(void *)(v32 + 8 * i);
            if (!v13)
            {
              while (1)
              {
                sub_100048830();
                if (v11 == v12) {
                  break;
                }
                unint64_t v13 = *(void *)(v32 + 8 * v14);
                uint64_t v15 = v14 + 1;
                if (v13)
                {
                  uint64_t i = v15 - 1;
                  goto LABEL_22;
                }
              }
LABEL_32:
              sub_1000452A4();
              sub_100011E28();
              return;
            }
          }
        }
      }
    }
LABEL_22:
    uint64_t v7 = (v13 - 1) & v13;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

unint64_t sub_100109FDC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100043478(&qword_100230960);
    os_log_type_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    os_log_type_t v2 = _swiftEmptyDictionarySingleton;
  }
  sub_100010AF8(a1, v29);
  int64_t v3 = v29[3];
  unint64_t v4 = v29[4];
  int64_t v21 = (unint64_t)(v29[2] + 64) >> 6;
  uint64_t v22 = v29[1];
  uint64_t v23 = v29[0];
  unint64_t result = swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v6 = (v4 - 1) & v4;
  unint64_t v7 = __clz(__rbit64(v4)) | (v3 << 6);
  for (i = v3; ; unint64_t v7 = __clz(__rbit64(v10)) + (i << 6))
  {
    sub_1000433B4(*(void *)(v23 + 48) + 40 * v7, (uint64_t)__src);
    sub_100043520(*(void *)(v23 + 56) + 32 * v7, (uint64_t)&__src[40]);
    memcpy(__dst, __src, sizeof(__dst));
    sub_1000433B4((uint64_t)__dst, (uint64_t)v26);
    if (!swift_dynamicCast())
    {
      sub_10002CC0C((uint64_t)__dst, &qword_100230968);
LABEL_33:
      swift_bridgeObjectRelease();
      sub_100011E28();
      swift_release();
      return 0;
    }
    sub_100043520((uint64_t)&__dst[40], (uint64_t)v26);
    sub_10002CC0C((uint64_t)__dst, &qword_100230968);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    unint64_t result = sub_100042ADC(v24, v25);
    unint64_t v12 = result;
    if (v13)
    {
      uint64_t v14 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v14 = v24;
      v14[1] = v25;
      uint64_t v15 = (uint64_t *)(v2[7] + 16 * v12);
      unint64_t result = swift_bridgeObjectRelease();
      *uint64_t v15 = v24;
      v15[1] = v25;
      goto LABEL_29;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int64_t v16 = (uint64_t *)(v2[6] + 16 * result);
    *int64_t v16 = v24;
    v16[1] = v25;
    uint64_t v17 = (uint64_t *)(v2[7] + 16 * result);
    *uint64_t v17 = v24;
    v17[1] = v25;
    uint64_t v18 = v2[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_37;
    }
    v2[2] = v20;
LABEL_29:
    int64_t v3 = i;
    unint64_t v4 = v6;
    if (v6) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v9 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_38;
    }
    if (v9 >= v21) {
      goto LABEL_34;
    }
    unint64_t v10 = *(void *)(v22 + 8 * v9);
    int64_t i = v3 + 1;
    if (!v10)
    {
      int64_t i = v3 + 2;
      if (v3 + 2 >= v21) {
        goto LABEL_34;
      }
      unint64_t v10 = *(void *)(v22 + 8 * i);
      if (!v10)
      {
        int64_t i = v3 + 3;
        if (v3 + 3 >= v21) {
          goto LABEL_34;
        }
        unint64_t v10 = *(void *)(v22 + 8 * i);
        if (!v10)
        {
          int64_t i = v3 + 4;
          if (v3 + 4 >= v21) {
            goto LABEL_34;
          }
          unint64_t v10 = *(void *)(v22 + 8 * i);
          if (!v10)
          {
            int64_t i = v3 + 5;
            if (v3 + 5 >= v21) {
              goto LABEL_34;
            }
            unint64_t v10 = *(void *)(v22 + 8 * i);
            if (!v10)
            {
              int64_t v11 = v3 + 6;
              while (v11 < v21)
              {
                unint64_t v10 = *(void *)(v22 + 8 * v11++);
                if (v10)
                {
                  int64_t i = v11 - 1;
                  goto LABEL_21;
                }
              }
LABEL_34:
              sub_100011E28();
              return (unint64_t)v2;
            }
          }
        }
      }
    }
LABEL_21:
    uint64_t v6 = (v10 - 1) & v10;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

void sub_10010A380(void *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v4 = (void *)JSValue.subscript.getter();
  uint64_t v5 = sub_10010A5F0(v4);
  if (v5)
  {
    unint64_t v6 = sub_100109FDC(v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v6 = 0;
  }
  unint64_t v7 = (void *)JSValue.subscript.getter();
  uint64_t v8 = JSValue.string.getter();
  unint64_t v10 = v9;

  sub_100049550();
  int64_t v11 = (void *)JSValue.subscript.getter();
  uint64_t v12 = JSValue.string.getter();
  unint64_t v14 = v13;

  if (v14)
  {
    uint64_t v24 = v8;
    sub_100044BBC();
    uint64_t v15 = (void *)JSValue.subscript.getter();
    uint64_t v23 = JSValue.string.getter();
    unint64_t v17 = v16;

    if (v17)
    {
      unint64_t v22 = v6;
      sub_1000467C4();
      uint64_t v18 = (void *)JSValue.subscript.getter();
      uint64_t v21 = JSValue.string.getter();
      unint64_t v20 = v19;

      if (v20)
      {

        *a2 = v22;
        a2[1] = v12;
        a2[2] = v14;
        a2[3] = v24;
        a2[4] = v10;
        a2[5] = v23;
        a2[6] = v17;
        a2[7] = v21;
        a2[8] = v20;
        return;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000467C4();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100044BBC();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100049550();
  }
  JSValue.subscript.getter();
  type metadata accessor for JSError();
  sub_10010A668();
  swift_allocError();
  JSError.init(badValue:expected:)();
  swift_willThrow();
}

void sub_10010A5A4(void *a1@<X0>, void *a2@<X8>)
{
  sub_10010A380(a1, __src);
  if (!v2) {
    memcpy(a2, __src, 0x48uLL);
  }
}

uint64_t sub_10010A5F0(void *a1)
{
  id v2 = [a1 toDictionary];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

unint64_t sub_10010A668()
{
  unint64_t result = qword_100230958;
  if (!qword_100230958)
  {
    type metadata accessor for JSError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230958);
  }
  return result;
}

uint64_t destroy for MarketingItemRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MarketingItemRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MarketingItemRequest(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for MarketingItemRequest(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

void *assignWithTake for MarketingItemRequest(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[8];
  a1[7] = a2[7];
  a1[8] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MarketingItemRequest(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MarketingItemRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MarketingItemRequest()
{
  return &type metadata for MarketingItemRequest;
}

ValueMetadata *type metadata accessor for MediaClient()
{
  return &type metadata for MediaClient;
}

uint64_t sub_10010A984(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_10010AA18()
{
  return 0x696669746E656469;
}

uint64_t sub_10010AA38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10010A984(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_10010AA64(uint64_t a1)
{
  unint64_t v2 = sub_10010AE50();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10010AAA0(uint64_t a1)
{
  unint64_t v2 = sub_10010AE50();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10010AADC(void *a1)
{
  uint64_t v3 = sub_100043478(&qword_100230970);
  sub_100020DEC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)sub_100049788(a1, a1[3]);
  sub_10010AE50();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  }
  sub_10004377C((uint64_t)a1);
  return v9;
}

uint64_t sub_10010AC0C(void *a1)
{
  uint64_t v2 = sub_100043478(&qword_100230980);
  sub_100020DEC();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100049788(a1, a1[3]);
  sub_10010AE50();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

uint64_t sub_10010AD20@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10010AADC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_10010AD4C(void *a1)
{
  return sub_10010AC0C(a1);
}

uint64_t sub_10010AD68(uint64_t a1, void *a2)
{
  _StringGuts.grow(_:)(27);
  sub_100043478(&qword_100230988);
  uint64_t v4 = String.init<A>(describing:)();
  swift_bridgeObjectRelease();
  v5._object = (void *)0x80000001001D35A0;
  v5._uint64_t countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v5);
  swift_bridgeObjectRetain();
  v6._uint64_t countAndFlagsBits = a1;
  v6._object = a2;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 32010;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  return v4;
}

uint64_t sub_10010AE48()
{
  return sub_10010AD68(*(void *)v0, *(void **)(v0 + 8));
}

unint64_t sub_10010AE50()
{
  unint64_t result = qword_100230978;
  if (!qword_100230978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230978);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MediaClient.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10010AF38);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaClient.CodingKeys()
{
  return &type metadata for MediaClient.CodingKeys;
}

unint64_t sub_10010AF74()
{
  unint64_t result = qword_100230990;
  if (!qword_100230990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230990);
  }
  return result;
}

unint64_t sub_10010AFC4()
{
  unint64_t result = qword_100230998;
  if (!qword_100230998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230998);
  }
  return result;
}

unint64_t sub_10010B014()
{
  unint64_t result = qword_1002309A0;
  if (!qword_1002309A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002309A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MercuryCacheBagAccess()
{
  return &type metadata for MercuryCacheBagAccess;
}

void *sub_10010B070(void *a1)
{
  uint64_t v2 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v16 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned int v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = a1;
  NSArray.makeIterator()();

  sub_10010C244();
  dispatch thunk of IteratorProtocol.next()();
  if (v22)
  {
    Swift::String v6 = _swiftEmptyArrayStorage;
    do
    {
      sub_100043510(&v21, v20);
      sub_100043520((uint64_t)v20, (uint64_t)v17);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v18 = 0;
        uint64_t v19 = 0;
      }
      sub_10004377C((uint64_t)v20);
      uint64_t v7 = v19;
      if (v19)
      {
        uint64_t v8 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000502C4(0, v6[2] + 1, 1, (uint64_t)v6);
          Swift::String v6 = v12;
        }
        unint64_t v10 = v6[2];
        unint64_t v9 = v6[3];
        if (v10 >= v9 >> 1)
        {
          sub_1000502C4(v9 > 1, v10 + 1, 1, (uint64_t)v6);
          Swift::String v6 = v13;
        }
        v6[2] = v10 + 1;
        uint64_t v11 = &v6[2 * v10];
        v11[4] = v8;
        void v11[5] = v7;
      }
      dispatch thunk of IteratorProtocol.next()();
    }
    while (v22);
  }
  else
  {
    Swift::String v6 = _swiftEmptyArrayStorage;
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v2);
  return v6;
}

uint64_t sub_10010B284()
{
  if (qword_10022C4C0 != -1) {
    swift_once();
  }
  qword_1002309B0 = qword_100244128;
  return swift_retain();
}

uint64_t sub_10010B2E8(void *a1)
{
  sub_100043478(&qword_1002309E0);
  uint64_t v2 = Promise.__allocating_init()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [a1 arrayForKey:v3];

  id v5 = [v4 valuePromise];
  unint64_t v13 = sub_10010C0B4;
  uint64_t v14 = v2;
  unint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  uint64_t v11 = (void (*)(uint64_t, void *))sub_1000FE3F8;
  uint64_t v12 = &unk_100213A80;
  Swift::String v6 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  [v5 addSuccessBlock:v6];
  _Block_release(v6);
  unint64_t v13 = sub_10010BFBC;
  uint64_t v14 = v2;
  unint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_100181204;
  uint64_t v12 = &unk_100213AA8;
  uint64_t v7 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  [v5 addErrorBlock:v7];
  _Block_release(v7);

  return v2;
}

uint64_t sub_10010B4C4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return sub_100044BDC((uint64_t)sub_10010B4DC);
}

uint64_t sub_10010B4DC()
{
  *(void *)(v0 + 24) = sub_10010B6A8(*(void **)(v0 + 16));
  uint64_t v1 = (void *)sub_1000468F4();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_10010B57C;
  return v3();
}

uint64_t sub_10010B57C(uint64_t a1)
{
  uint64_t v4 = *v2;
  sub_100020EBC();
  *id v5 = v4;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    a1 = 10;
  }
  swift_release();
  Swift::String v6 = *(uint64_t (**)(uint64_t))(v4 + 8);
  return v6(a1);
}

uint64_t sub_10010B6A8(void *a1)
{
  sub_100043478(&qword_1002309D8);
  uint64_t v2 = Promise.__allocating_init()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [a1 integerForKey:v3];

  id v5 = [v4 valuePromise];
  unint64_t v13 = sub_10010C058;
  uint64_t v14 = v2;
  unint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  uint64_t v11 = (void (*)(uint64_t, void *))sub_1000FE3F8;
  uint64_t v12 = &unk_100213A30;
  Swift::String v6 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  [v5 addSuccessBlock:v6];
  _Block_release(v6);
  unint64_t v13 = sub_10010BFBC;
  uint64_t v14 = v2;
  unint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_100181204;
  uint64_t v12 = &unk_100213A58;
  uint64_t v7 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  [v5 addErrorBlock:v7];
  _Block_release(v7);

  return v2;
}

uint64_t sub_10010B884(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return sub_100044BDC((uint64_t)sub_10010B89C);
}

uint64_t sub_10010B89C()
{
  *(void *)(v0 + 24) = sub_10010BA34(*(void **)(v0 + 16));
  uint64_t v1 = (void *)sub_1000468F4();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_10010B93C;
  return v3();
}

uint64_t sub_10010B93C()
{
  sub_10004956C();
  uint64_t v2 = *v1;
  sub_100020EBC();
  *NSString v3 = v2;
  swift_task_dealloc();
  if (v0) {
    swift_errorRelease();
  }
  swift_release();
  v5.n128_f64[0] = sub_100048E54();
  return v4(v5);
}

uint64_t sub_10010BA34(void *a1)
{
  sub_100043478(&qword_1002309C0);
  uint64_t v2 = Promise.__allocating_init()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [a1 doubleForKey:v3];

  id v5 = [v4 valuePromise];
  unint64_t v13 = sub_10010BFA0;
  uint64_t v14 = v2;
  unint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  uint64_t v11 = (void (*)(uint64_t, void *))sub_1000FE3F8;
  uint64_t v12 = &unk_1002139E0;
  Swift::String v6 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  [v5 addSuccessBlock:v6];
  _Block_release(v6);
  unint64_t v13 = sub_10010BFBC;
  uint64_t v14 = v2;
  unint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_100181204;
  uint64_t v12 = &unk_100213A08;
  uint64_t v7 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  [v5 addErrorBlock:v7];
  _Block_release(v7);

  return v2;
}

uint64_t sub_10010BC10(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return sub_100044BDC((uint64_t)sub_10010BC28);
}

uint64_t sub_10010BC28()
{
  *(void *)(v0 + 24) = sub_10010BDC4(*(void **)(v0 + 16));
  uint64_t v1 = (void *)sub_1000468F4();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_10010BCC8;
  return v3();
}

uint64_t sub_10010BCC8()
{
  sub_10004956C();
  uint64_t v2 = *v1;
  sub_100020EBC();
  *NSString v3 = v2;
  swift_task_dealloc();
  if (v0) {
    swift_errorRelease();
  }
  swift_release();
  v5.n128_f64[0] = sub_100048E54();
  return v4(v5);
}

uint64_t sub_10010BDC4(void *a1)
{
  sub_100043478(&qword_1002309C0);
  uint64_t v2 = Promise.__allocating_init()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [a1 integerForKey:v3];

  id v5 = [v4 valuePromise];
  unint64_t v13 = sub_10010BFA0;
  uint64_t v14 = v2;
  unint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  uint64_t v11 = (void (*)(uint64_t, void *))sub_1000FE3F8;
  uint64_t v12 = &unk_100213990;
  Swift::String v6 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  [v5 addSuccessBlock:v6];
  _Block_release(v6);
  unint64_t v13 = sub_10010BFBC;
  uint64_t v14 = v2;
  unint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_100181204;
  uint64_t v12 = &unk_1002139B8;
  uint64_t v7 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  [v5 addErrorBlock:v7];
  _Block_release(v7);

  return v2;
}

uint64_t sub_10010BFA0(void *a1)
{
  return sub_10010BFD8(a1);
}

uint64_t sub_10010BFBC()
{
  return sub_10010C0BC();
}

uint64_t sub_10010BFD8(void *a1)
{
  return Promise.resolve(_:)();
}

uint64_t sub_10010C018(void *a1)
{
  return Promise.resolve(_:)();
}

uint64_t sub_10010C058(void *a1)
{
  return sub_10010C018(a1);
}

uint64_t sub_10010C060(void *a1)
{
  uint64_t v1 = sub_10010B070(a1);
  sub_10002318C((uint64_t)v1);
  Promise.resolve(_:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10010C0B4(void *a1)
{
  return sub_10010C060(a1);
}

uint64_t sub_10010C0BC()
{
  if (qword_10022C4E8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3110;
  swift_getErrorValue();
  v4[3] = v3;
  uint64_t v0 = sub_10003BAA4(v4);
  (*(void (**)(uint64_t *))(*(void *)(v3 - 8) + 16))(v0);
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)v4);
  uint64_t v1 = static os_log_type_t.error.getter();
  sub_10004841C(v1);
  swift_bridgeObjectRelease();
  return Promise.reject(_:)();
}

unint64_t sub_10010C244()
{
  unint64_t result = qword_10022D3E8;
  if (!qword_10022D3E8)
  {
    type metadata accessor for NSFastEnumerationIterator();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D3E8);
  }
  return result;
}

uint64_t sub_10010C2C4(uint64_t a1, uint64_t (*a2)(unsigned char *, unsigned char *), uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  v35[7] = a4;
  sub_10005370C(a1, v35);
  uint64_t v5 = v35[0];
  int64_t v6 = v35[3];
  unint64_t v7 = v35[4];
  uint64_t v30 = v35[1];
  int64_t v31 = (unint64_t)(v35[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v29 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v6 << 6);
      goto LABEL_20;
    }
    int64_t v11 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_26;
    }
    unint64_t v12 = *(void *)(v30 + 8 * v11);
    int64_t v13 = v6 + 1;
    if (!v12)
    {
      int64_t v13 = v6 + 2;
      if (v6 + 2 >= v31) {
        goto LABEL_26;
      }
      unint64_t v12 = *(void *)(v30 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v6 + 3;
        if (v6 + 3 >= v31) {
          goto LABEL_26;
        }
        unint64_t v12 = *(void *)(v30 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v6 + 4;
          if (v6 + 4 >= v31) {
            goto LABEL_26;
          }
          unint64_t v12 = *(void *)(v30 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v6 + 5;
            if (v6 + 5 >= v31) {
              goto LABEL_26;
            }
            unint64_t v12 = *(void *)(v30 + 8 * v13);
            if (!v12)
            {
              int64_t v14 = v6 + 6;
              while (v14 < v31)
              {
                unint64_t v12 = *(void *)(v30 + 8 * v14++);
                if (v12)
                {
                  int64_t v13 = v14 - 1;
                  goto LABEL_19;
                }
              }
LABEL_26:
              swift_release();
              return (uint64_t)v29;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v6 = v13;
LABEL_20:
    sub_1000433B4(*(void *)(v5 + 48) + 40 * v10, (uint64_t)v33);
    sub_100043520(*(void *)(v5 + 56) + 32 * v10, (uint64_t)v34);
    uint64_t v15 = a2(v33, v34);
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    uint64_t result = sub_10002CBB4((uint64_t)v33, &qword_100230968);
    if (v21)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = a5(0, v29[2] + 1, 1);
        uint64_t v29 = (void *)result;
      }
      unint64_t v23 = v29[2];
      unint64_t v22 = v29[3];
      unint64_t v24 = v23 + 1;
      if (v23 >= v22 >> 1)
      {
        unint64_t v26 = v29[2];
        unint64_t v27 = v23 + 1;
        uint64_t result = ((uint64_t (*)(BOOL, unint64_t, uint64_t, void *))a5)(v22 > 1, v23 + 1, 1, v29);
        unint64_t v23 = v26;
        unint64_t v24 = v27;
        uint64_t v29 = (void *)result;
      }
      _OWORD v29[2] = v24;
      uint64_t v25 = &v29[4 * v23];
      v25[4] = v15;
      v25[5] = v17;
      v25[6] = v19;
      void v25[7] = v21;
    }
  }
  __break(1u);
  return result;
}

void sub_10010C544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    goto LABEL_27;
  }
  unint64_t v6 = 0;
  uint64_t v17 = _swiftEmptyArrayStorage;
  do
  {
    unint64_t v7 = v6;
    while (1)
    {
      if (v7 >= *(void *)(a1 + 16))
      {
        __break(1u);
        return;
      }
      uint64_t v8 = *(void *)(a1 + 32 + 8 * v7);
      swift_bridgeObjectRetain();
      AnyHashable.init<A>(_:)();
      if (*(void *)(v8 + 16) && (unint64_t v9 = sub_100043670((uint64_t)v20), (v10 & 1) != 0))
      {
        sub_100043520(*(void *)(v8 + 56) + 32 * v9, (uint64_t)&v21);
      }
      else
      {
        long long v21 = 0u;
        long long v22 = 0u;
      }
      sub_1000434BC((uint64_t)v20);
      if (!*((void *)&v22 + 1))
      {
        sub_10002CBB4((uint64_t)&v21, &qword_10022F490);
LABEL_18:
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_18;
      }
      if (a2 == 1701869940 && v3 == 0xE400000000000000) {
        break;
      }
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_22;
      }
      swift_bridgeObjectRelease();
      uint64_t v3 = a3;
LABEL_19:
      if (v5 == ++v7) {
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
LABEL_22:
    int64_t v13 = v17;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v23 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1000734F4();
      int64_t v13 = v23;
    }
    unint64_t v15 = v13[2];
    unint64_t v16 = v15 + 1;
    if (v15 >= v13[3] >> 1)
    {
      sub_1000734F4();
      unint64_t v16 = v15 + 1;
      int64_t v13 = v23;
    }
    unint64_t v6 = v7 + 1;
    uint64_t v13[2] = v16;
    uint64_t v17 = v13;
    v13[v15 + 4] = v8;
    uint64_t v3 = a3;
  }
  while (v5 - 1 != v7);
LABEL_27:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_10010C7B4(uint64_t a1, void *a2)
{
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = a1;
  v4._object = a2;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = 15200;
  v5._object = (void *)0xE200000000000000;
  String.append(_:)(v5);
  v6._uint64_t countAndFlagsBits = 0xD000000000000016;
  v6._object = (void *)0x80000001001D3A90;
  SQLDatabase.execute(sql:parameters:)(v6, (Swift::OpaquePointer)_swiftEmptyArrayStorage);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10010C87C(uint64_t a1, void *a2, uint64_t a3)
{
  sub_100043478(&qword_10022D738);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1001C3110;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  HIBYTE(v45[1]) = -18;
  v7._uint64_t countAndFlagsBits = a1;
  v7._object = a2;
  String.append(_:)(v7);
  v8._uint64_t countAndFlagsBits = 96;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  uint64_t v9 = v45[1];
  *(void *)(v6 + 32) = v45[0];
  *(void *)(v6 + 40) = v9;
  uint64_t v10 = *(void *)(a3 + 16);
  if (v10)
  {
    uint64_t v46 = _swiftEmptyArrayStorage;
    sub_100027304(0, v10, 0);
    int64_t v11 = _swiftEmptyArrayStorage;
    char v12 = (unsigned __int8 *)(a3 + 48);
    while (2)
    {
      uint64_t v14 = *((void *)v12 - 2);
      int64_t v13 = (void *)*((void *)v12 - 1);
      int v16 = *v12;
      v12 += 24;
      int v15 = v16;
      switch(v16)
      {
        case 4:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v19 = 0x205952414D495250;
          unint64_t v18 = 0xEB0000000059454BLL;
          goto LABEL_12;
        default:
          char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (v17)
          {
            unint64_t v18 = 0xE400000000000000;
            uint64_t v19 = 1415071060;
            switch(v15)
            {
              case 1:
                unint64_t v18 = 0xE700000000000000;
                uint64_t v19 = 0x52454745544E49;
                break;
              case 2:
                uint64_t v19 = 1112493122;
                break;
              case 3:
                uint64_t v19 = 1279346002;
                break;
              default:
                break;
            }
LABEL_12:
            v45[0] = v19;
            v45[1] = v18;
            v23._uint64_t countAndFlagsBits = 32;
            v23._object = (void *)0xE100000000000000;
            String.append(_:)(v23);
            swift_bridgeObjectRetain();
            v24._uint64_t countAndFlagsBits = v14;
            v24._object = v13;
            String.append(_:)(v24);
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v45[0] = v14;
            v45[1] = v13;
            swift_bridgeObjectRetain();
            v20._uint64_t countAndFlagsBits = 32;
            v20._object = (void *)0xE100000000000000;
            String.append(_:)(v20);
            unint64_t v21 = 0xE400000000000000;
            uint64_t v22 = 1415071060;
            switch(v15)
            {
              case 1:
                unint64_t v21 = 0xE700000000000000;
                uint64_t v22 = 0x52454745544E49;
                break;
              case 2:
                uint64_t v22 = 1112493122;
                break;
              case 3:
                uint64_t v22 = 1279346002;
                break;
              default:
                break;
            }
            unint64_t v25 = v21;
            String.append(_:)(*(Swift::String *)&v22);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v26 = v45[0];
          uint64_t v27 = v45[1];
          uint64_t v46 = v11;
          unint64_t v29 = v11[2];
          unint64_t v28 = v11[3];
          if (v29 >= v28 >> 1)
          {
            sub_100027304(v28 > 1, v29 + 1, 1);
            int64_t v11 = v46;
          }
          v11[2] = v29 + 1;
          uint64_t v30 = &v11[2 * v29];
          v30[4] = v26;
          v30[5] = v27;
          if (--v10) {
            continue;
          }
          sub_100043478(&qword_100232940);
          sub_10002B6DC((unint64_t *)&qword_10022D988, &qword_100232940);
          uint64_t v31 = BidirectionalCollection<>.joined(separator:)();
          uint64_t v33 = v32;
          swift_release();
          v45[0] = 40;
          v45[1] = 0xE100000000000000;
          v34._uint64_t countAndFlagsBits = v31;
          v34._object = v33;
          String.append(_:)(v34);
          swift_bridgeObjectRelease();
          v35._uint64_t countAndFlagsBits = 41;
          v35._object = (void *)0xE100000000000000;
          String.append(_:)(v35);
          unint64_t v37 = *(void *)(v6 + 16);
          unint64_t v36 = *(void *)(v6 + 24);
          if (v37 >= v36 >> 1)
          {
            sub_1000502C4(v36 > 1, v37 + 1, 1, v6);
            uint64_t v6 = v44;
          }
          *(void *)(v6 + 16) = v37 + 1;
          uint64_t v38 = v6 + 16 * v37;
          *(void *)(v38 + 32) = 40;
          *(void *)(v38 + 40) = 0xE100000000000000;
          break;
      }
      break;
    }
  }
  sub_100043478(&qword_100232940);
  sub_10002B6DC((unint64_t *)&qword_10022D988, &qword_100232940);
  uint64_t v39 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v41 = v40;
  swift_bridgeObjectRelease();
  v42._uint64_t countAndFlagsBits = v39;
  v42._object = v41;
  SQLDatabase.execute(sql:parameters:)(v42, (Swift::OpaquePointer)_swiftEmptyArrayStorage);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10010CD94(uint64_t a1, void *a2, uint64_t a3)
{
  v37._object = a2;
  uint64_t v3 = a3;
  v37._uint64_t countAndFlagsBits = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    v40[0] = _swiftEmptyArrayStorage;
    sub_100027304(0, v4, 0);
    Swift::String v5 = _swiftEmptyArrayStorage;
    uint64_t v36 = v3;
    uint64_t v6 = (uint64_t *)(v3 + 40);
    uint64_t v7 = v4;
    do
    {
      uint64_t v9 = *(v6 - 1);
      uint64_t v8 = *v6;
      v40[0] = v5;
      unint64_t v11 = v5[2];
      unint64_t v10 = v5[3];
      swift_bridgeObjectRetain();
      if (v11 >= v10 >> 1)
      {
        sub_100027304(v10 > 1, v11 + 1, 1);
        Swift::String v5 = (void *)v40[0];
      }
      v6 += 5;
      _OWORD v5[2] = v11 + 1;
      char v12 = &v5[2 * v11];
      v12[4] = v9;
      v12[5] = v8;
      --v7;
    }
    while (v7);
    uint64_t v3 = v36;
  }
  sub_100043478(&qword_100232940);
  sub_10002B6DC((unint64_t *)&qword_10022D988, &qword_100232940);
  uint64_t v13 = BidirectionalCollection<>.joined(separator:)();
  int v15 = v14;
  swift_bridgeObjectRelease();
  sub_10010D0BC(63, 0xE100000000000000, v4);
  uint64_t v16 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease();
  HIWORD(v40[1]) = -4864;
  String.append(_:)(v37);
  v19._uint64_t countAndFlagsBits = 2629728;
  v19._object = (void *)0xE300000000000000;
  String.append(_:)(v19);
  v20._uint64_t countAndFlagsBits = v13;
  v20._object = v15;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21._uint64_t countAndFlagsBits = 0x5345554C41562029;
  v21._object = (void *)0xEA00000000002820;
  String.append(_:)(v21);
  v22._uint64_t countAndFlagsBits = v16;
  v22._object = v18;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = 41;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  uint64_t v24 = v40[0];
  uint64_t v25 = v40[1];
  uint64_t v26 = _swiftEmptyArrayStorage;
  if (v4)
  {
    uint64_t v38 = v40[0];
    uint64_t v39 = v40[1];
    v40[0] = _swiftEmptyArrayStorage;
    sub_1000732D8(0, v4, 0);
    uint64_t v26 = _swiftEmptyArrayStorage;
    uint64_t v27 = (char *)(v3 + 64);
    do
    {
      uint64_t v28 = *((void *)v27 - 2);
      unint64_t v29 = *((void *)v27 - 1);
      char v30 = *v27;
      sub_1000A2E28(v28, v29, *v27);
      v40[0] = v26;
      unint64_t v32 = v26[2];
      unint64_t v31 = v26[3];
      if (v32 >= v31 >> 1)
      {
        sub_1000732D8(v31 > 1, v32 + 1, 1);
        uint64_t v26 = (void *)v40[0];
      }
      v27 += 40;
      void v26[2] = v32 + 1;
      uint64_t v33 = &v26[3 * v32];
      v33[4] = v28;
      v33[5] = v29;
      *((unsigned char *)v33 + 48) = v30;
      --v4;
    }
    while (v4);
    uint64_t v24 = v38;
    uint64_t v25 = v39;
  }
  uint64_t v34 = v25;
  SQLDatabase.execute(sql:parameters:)(*(Swift::String *)&v24, (Swift::OpaquePointer)v26);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_10010D0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (a3)
    {
      uint64_t v6 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      uint64_t v7 = v6;
      v6[2] = a3;
      v6[4] = a1;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = a1;
        v6[7] = a2;
        uint64_t v8 = a3 - 2;
        if (v8)
        {
          uint64_t v9 = v6 + 9;
          do
          {
            *(v9 - 1) = a1;
            *uint64_t v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return &_swiftEmptyArrayStorage;
    }
    return v7;
  }
  return result;
}

uint64_t sub_10010D1B8()
{
  if (qword_10022C4C0 != -1) {
    swift_once();
  }
  qword_1002309E8 = qword_100244128;
  return swift_retain();
}

uint64_t sub_10010D21C()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v0);
  uint64_t v1 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::String v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v2);
  if (qword_10022C590 != -1) {
    swift_once();
  }
  id v6 = (id)qword_100244188;
  static DispatchQoS.unspecified.getter();
  v8[1] = &_swiftEmptyArrayStorage;
  sub_100050588((unint64_t *)&qword_10022F470, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100043478((uint64_t *)&unk_100231D60);
  sub_10002B6DC((unint64_t *)&qword_10022F480, (uint64_t *)&unk_100231D60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  qword_1002309F0 = result;
  return result;
}

void sub_10010D4BC()
{
  sub_100043FBC();
  sub_10004D580();
  sub_100017E5C();
  sub_10002DA94();
  swift_bridgeObjectRelease();
  sub_100047538((void *)(v2 + 16), *(void *)(v2 + 40));
  char v4 = sub_1000526FC((uint64_t)"notification-preferences");
  if (!v0)
  {
    if (v4)
    {
      uint64_t v5 = sub_100030788();
      *(unsigned char *)(v5 + 16) = 0;
      uint64_t v6 = sub_100021AF4();
      sub_1000307B8(v6);
      uint64_t v7 = sub_100035CB8();
      *(void *)(v7 + 16) = v5;
      *(void *)(v7 + 24) = v1;
      sub_100030960(v3 + 40, 0x80000001001D38E0, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)sub_100113A18, v7);
      swift_retain();
      swift_retain();
      swift_release();
      sub_10002CAAC();
      if (*(void *)(v1 + 16))
      {
        sub_10002CAAC();
        swift_bridgeObjectRetain();
        swift_release();
        swift_release();
        goto LABEL_7;
      }
      sub_1001138EC();
      sub_100021180();
      sub_10004BF9C(v10, 1);
      swift_release();
      swift_release();
    }
    else
    {
      sub_1001138EC();
      uint64_t v8 = sub_100021180();
      sub_100021258(v8, v9);
    }
  }
  swift_willThrow();
LABEL_7:
  sub_10004FC48();
}

void sub_10010D668()
{
  sub_100043FBC();
  sub_10004D580();
  sub_10004A740();
  sub_10002DA94();
  swift_bridgeObjectRelease();
  sub_100047538((void *)(v2 + 16), *(void *)(v2 + 40));
  char v4 = sub_100036328((uint64_t)"events-reminders");
  if (!v0)
  {
    if (v4)
    {
      uint64_t v5 = sub_100030788();
      *(unsigned char *)(v5 + 16) = 0;
      uint64_t v6 = sub_100021AF4();
      sub_1000307B8(v6);
      uint64_t v7 = sub_100035CB8();
      *(void *)(v7 + 16) = v5;
      *(void *)(v7 + 24) = v1;
      sub_100030960(v3 + 39, 0x80000001001D3930, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)sub_100113A3C, v7);
      swift_retain();
      swift_retain();
      swift_release();
      sub_10002CAAC();
      if (*(void *)(v1 + 16))
      {
        sub_10002CAAC();
        swift_bridgeObjectRetain();
        swift_release();
        swift_release();
        goto LABEL_7;
      }
      sub_1001138EC();
      sub_100021180();
      sub_10004BF9C(v10, 1);
      swift_release();
      swift_release();
    }
    else
    {
      sub_1001138EC();
      uint64_t v8 = sub_100021180();
      sub_100021258(v8, v9);
    }
  }
  swift_willThrow();
LABEL_7:
  sub_10004FC48();
}

uint64_t sub_10010D814(unint64_t a1)
{
  unint64_t v2 = v1;
  unint64_t v3 = a1;
  uint64_t v4 = 0xD00000000000003ALL;
  if (!a1)
  {
    uint64_t v6 = 0;
LABEL_15:
    unint64_t v57 = (unint64_t)&_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
    uint64_t v6 = 0;
    unint64_t v3 = 0;
    goto LABEL_15;
  }
  uint64_t v6 = sub_10010D0BC(63, 0xE100000000000000, v5);
  v56[0] = v6;
  sub_100043478(&qword_100232940);
  sub_10002B6DC((unint64_t *)&qword_10022D988, &qword_100232940);
  uint64_t v7 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v3 + 16);
  if (!v10)
  {
    unint64_t v57 = (unint64_t)&_swiftEmptyArrayStorage;
LABEL_17:
    _StringGuts.grow(_:)(16);
    swift_bridgeObjectRelease();
    v25._uint64_t countAndFlagsBits = v7;
    v25._object = (void *)v9;
    String.append(_:)(v25);
    swift_bridgeObjectRelease();
    v26._uint64_t countAndFlagsBits = 41;
    v26._object = (void *)0xE100000000000000;
    String.append(_:)(v26);
    uint64_t v6 = (void *)0xD000000000000012;
    unint64_t v3 = 0x80000001001D39B0;
LABEL_18:
    sub_100043478(&qword_100230AC0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001C3120;
    v56[0] = 0;
    v56[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease();
    unint64_t v2 = 0x80000001001D3970;
    *(void *)(inited + 32) = 0xD00000000000003ALL;
    *(void *)(inited + 40) = 0x80000001001D3970;
    *(void *)(inited + 48) = v6;
    *(void *)(inited + 56) = v3;
    sub_1000502C4(0, 1, 1, (uint64_t)&_swiftEmptyArrayStorage);
    uint64_t v13 = v28;
    unint64_t v9 = *(void *)(v28 + 16);
    unint64_t v16 = *(void *)(v28 + 24);
    unint64_t v11 = v9 + 1;
    if (v9 < v16 >> 1) {
      goto LABEL_19;
    }
    goto LABEL_37;
  }
  uint64_t v51 = v7;
  unint64_t v52 = v9;
  v56[0] = &_swiftEmptyArrayStorage;
  sub_1000732D8(0, v10, 0);
  unint64_t v11 = (unint64_t)&_swiftEmptyArrayStorage;
  uint64_t v4 = sub_10019C9DC(v3);
  uint64_t v13 = v12;
  int v15 = v14 & 1;
  unint64_t v16 = v3 + 56;
  unint64_t v55 = v3 + 56;
  while ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v16 = 1 << *(unsigned char *)(v3 + 32);
    if (v4 >= (uint64_t)v16) {
      break;
    }
    unint64_t v16 = *(void *)(v55 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4;
    if ((v16 & 1) == 0) {
      goto LABEL_35;
    }
    unint64_t v16 = *(unsigned int *)(v3 + 36);
    if (v16 != v13) {
      goto LABEL_36;
    }
    LODWORD(v57) = v15;
    uint64_t v17 = *(void *)(v3 + 48) + 16 * v4;
    unint64_t v2 = v3;
    unint64_t v9 = *(void *)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    v56[0] = v11;
    unint64_t v20 = *(void *)(v11 + 16);
    unint64_t v19 = *(void *)(v11 + 24);
    uint64_t v6 = (void *)(v20 + 1);
    swift_bridgeObjectRetain();
    if (v20 >= v19 >> 1)
    {
      sub_1000732D8(v19 > 1, v20 + 1, 1);
      unint64_t v11 = v56[0];
    }
    *(void *)(v11 + 16) = v6;
    unint64_t v21 = v11 + 24 * v20;
    *(void *)(v21 + 32) = v9;
    *(void *)(v21 + 40) = v18;
    *(unsigned char *)(v21 + 48) = 3;
    uint64_t v22 = sub_10019C8F4(v4, v13, v57 & 1, v2);
    uint64_t v4 = v22;
    uint64_t v13 = v23;
    int v15 = v24 & 1;
    --v10;
    unint64_t v3 = v2;
    if (!v10)
    {
      unint64_t v57 = v11;
      sub_100105484(v22, v23, v15);
      uint64_t v4 = 0xD00000000000003ALL;
      uint64_t v7 = v51;
      unint64_t v9 = v52;
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  sub_1000502C4(v16 > 1, v11, 1, v13);
  uint64_t v13 = v49;
LABEL_19:
  *(void *)(v13 + 16) = v11;
  uint64_t v29 = v13 + 16 * v9;
  *(void *)(v29 + 32) = v4;
  *(void *)(v29 + 40) = v2;
  if (v3)
  {
    unint64_t v30 = *(void *)(v13 + 24);
    unint64_t v31 = (char *)(v9 + 2);
    swift_bridgeObjectRetain();
    if (v11 >= v30 >> 1)
    {
      sub_1000502C4(v30 > 1, v9 + 2, 1, v13);
      uint64_t v13 = v50;
    }
    uint64_t v32 = v54;
    *(void *)(v13 + 16) = v31;
    unint64_t v33 = v13 + 16 * v11;
    *(void *)(v33 + 32) = v6;
    *(void *)(v33 + 40) = v3;
  }
  else
  {
    uint64_t v32 = v54;
  }
  swift_release();
  v56[0] = v13;
  sub_100043478(&qword_100232940);
  sub_10002B6DC((unint64_t *)&qword_10022D988, &qword_100232940);
  uint64_t v34 = v56;
  uint64_t v35 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  sub_100047538((void *)(v32 + 16), *(void *)(v32 + 40));
  char v38 = sub_10003081C(v4 - 39, (void *)0x80000001001CA700);
  if (v53)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (v38)
  {
    uint64_t v39 = sub_100030788();
    *(unsigned char *)(v39 + 16) = 0;
    uint64_t v40 = sub_100021AF4();
    *(void *)(v40 + 16) = 0;
    uint64_t v41 = *(void *)(v32 + 40);
    Swift::String v42 = (void *)(v32 + 16);
    uint64_t v43 = v39;
    uint64_t v44 = sub_100049788(v42, v41);
    uint64_t v45 = sub_100035CB8();
    *(void *)(v45 + 16) = v43;
    *(void *)(v45 + 24) = v40;
    uint64_t v34 = (void *)*v44;
    sub_100030960(v35, v37, v57, (uint64_t)sub_100114650, v45);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_10002CAAC();
    if (*(void *)(v40 + 16))
    {
      sub_10002CAAC();
      LOBYTE(v34) = *(unsigned char *)(v43 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      swift_release();
      return v34 & 1;
    }
    sub_1001138EC();
    sub_100021180();
    sub_10004BF9C(v48, 1);
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001138EC();
    sub_100021180();
    sub_10004BF9C(v46, 2);
  }
  swift_willThrow();
  return v34 & 1;
}

void sub_10010DE18()
{
}

uint64_t sub_10010DE40()
{
  uint64_t v0 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v0 - 8);
  sub_10010E2A0();
  Promise.resolve(_:)();
  return swift_bridgeObjectRelease();
}

void sub_10010E2A0()
{
  sub_100044DC4();
  sub_1001146F8();
  sub_100017E5C();
  sub_100045024();
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = sub_1000525D4();
  uint64_t v8 = v0;
  sub_10002D18C(v7, v1);
  if (!v0)
  {
    uint64_t v8 = 0;
    sub_10002D520();
    sub_100047538(v3, *(void *)(v2 + 40));
    if (sub_1000526FC((uint64_t)"notification-preferences"))
    {
      sub_100021A74();
      swift_bridgeObjectRelease();
      sub_100043478(&qword_10022D780);
      uint64_t inited = (__n128 *)swift_initStackObject();
      sub_1000226A0(inited, (__n128)xmmword_1001C3110);
      swift_setDeallocating();
      sub_1000500CC();
      uint64_t v9 = sub_10004AC64();
      sub_1000206BC(v9);
      swift_errorRelease();
      sub_100017E5C();
      goto LABEL_7;
    }
    sub_1001138EC();
    uint64_t v10 = sub_100021180();
    sub_100021258(v10, v11);
  }
  uint64_t v12 = sub_10004AC64();
  sub_1000206BC(v12);
  if (v8) {
    swift_errorRelease();
  }
LABEL_7:
  if (qword_10022C4F0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v13 = sub_10002D318();
  sub_100044798(v13);
  char v14 = (__n128 *)sub_100050DD0();
  sub_10004A088(v14, (__n128)xmmword_1001C3120);
  id v15 = (id)AMSLogKey();
  if (v15)
  {
    unint64_t v16 = v15;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_1000448B8();
    sub_100041F7C();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_10002069C(MetatypeMetadata);
    uint64_t inited = (__n128 *)&qword_10022F490;
    sub_1000533BC();
    sub_100020E44();
    void v26[3] = &type metadata for String;
    v26[0] = v17;
    v26[1] = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100017E5C();
    sub_10002CBB4(v21, v22);
    sub_1000208D8();
    sub_100041050();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_1000448B8();
    sub_100041F7C();
    uint64_t v23 = swift_getMetatypeMetadata();
    sub_10002069C(v23);
    sub_10002CBB4((uint64_t)v26, &qword_10022F490);
    sub_100020E94();
    sub_100041050();
  }
  sub_10004377C((uint64_t)v27);
  sub_1000524FC();
  sub_1000448B8();
  void v27[3] = &type metadata for String;
  sub_100040CE0((uint64_t)&inited->n128_i64[1] + 7);
  sub_1001146C8();
  sub_1000472C8();
  sub_1001146AC();
  sub_100114690();
  sub_1000456E0();
  sub_10004C874();
  v24();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1001146C8();
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v25 = static os_log_type_t.error.getter();
  sub_10004841C(v25);
  swift_bridgeObjectRelease();
  swift_willThrow();
  sub_1001146E0();
  sub_100020E2C();
}

void sub_10010E658()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  type metadata accessor for DispatchWorkItemFlags();
  sub_1000448FC();
  __chkstk_darwin(v3);
  sub_10004DE0C();
  sub_1000448FC();
  __chkstk_darwin(v4);
  sub_10002D300();
  sub_100043478(&qword_100230AB8);
  uint64_t v5 = Promise.__allocating_init()();
  if (qword_10022C4F8 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v0;
  v6[3] = v2;
  v6[4] = v5;
  v11[4] = sub_100113C84;
  void v11[5] = v6;
  v11[0] = _NSConcreteStackBlock;
  sub_100022644(COERCE_DOUBLE(1107296256));
  v11[2] = sub_10002CD0C;
  v11[3] = &unk_100213E48;
  uint64_t v7 = _Block_copy(v11);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B6DC((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  sub_10004883C();
  sub_10004D6C8();
  _Block_release(v7);
  uint64_t v8 = sub_10004FCFC();
  v9(v8);
  sub_100020B78();
  v10();
  swift_release();
  sub_100036B08();
  sub_100020FDC();
}

uint64_t sub_10010E8B4()
{
  uint64_t v0 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v0 - 8);
  sub_10010ED0C();
  Promise.resolve(_:)();
  return swift_bridgeObjectRelease();
}

void sub_10010ED0C()
{
  sub_100044DC4();
  sub_10004D580();
  unint64_t v4 = v3;
  sub_100045024();
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v8 = sub_1000208F0(v7);
  __chkstk_darwin(v8);
  sub_100022558();
  uint64_t v9 = (void *)(v1 + 16);
  uint64_t v10 = *sub_100049788((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t v11 = swift_retain();
  sub_10002D18C(v11, v10);
  if (v0)
  {
    sub_100049788(v9, *(void *)(v2 + 40));
    uint64_t v12 = swift_retain();
    sub_1000206BC(v12);
    swift_errorRelease();
    if (qword_10022C4F0 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v13 = sub_10002D318();
    sub_100044798(v13);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    Swift::String v26 = v6;
    v25[0] = v2;
    swift_retain();
    id v14 = (id)AMSLogKey();
    if (v14)
    {
      id v15 = v14;
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_1000448B8();
      sub_100041F7C();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_10002069C(MetatypeMetadata);
      sub_10002CBB4((uint64_t)v24, &qword_10022F490);
      sub_100020E44();
      id v24[3] = &type metadata for String;
      v24[0] = v23;
      v24[1] = v17;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v24, &qword_10022F490);
      sub_1000208D8();
      sub_100041050();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_1000448B8();
      sub_100041F7C();
      uint64_t v19 = swift_getMetatypeMetadata();
      sub_10002069C(v19);
      sub_10002CBB4((uint64_t)v24, &qword_10022F490);
      sub_100020E94();
      sub_100041050();
    }
    sub_10004377C((uint64_t)v25);
    sub_1000524FC();
    sub_1000448B8();
    Swift::String v26 = &type metadata for String;
    sub_100040CE0(0xD000000000000021);
    sub_10002CBB4((uint64_t)v25, &qword_10022F490);
    sub_1000472C8();
    sub_1001146AC();
    sub_100114690();
    sub_1000456E0();
    sub_10004C874();
    v20();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v25, &qword_10022F490);
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    uint64_t v21 = static os_log_type_t.error.getter();
    sub_10004841C(v21);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    sub_10002D520();
    sub_10010D814(v4);
    sub_100049788(v9, *(void *)(v2 + 40));
    uint64_t v22 = swift_retain();
    sub_10002D078(v22, v22);
  }
  sub_1001146E0();
  sub_100020E2C();
}

void sub_10010F07C()
{
  sub_1000209F4();
  uint64_t v4 = v3;
  uint64_t v19 = v5;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  sub_1000448FC();
  uint64_t v21 = v11;
  __chkstk_darwin(v12);
  uint64_t v20 = sub_10004DE0C();
  sub_1000448FC();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_10002D300();
  sub_100043478(&qword_100230AB0);
  uint64_t v16 = Promise.__allocating_init()();
  if (qword_10022C4F8 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v0;
  void v17[3] = v9;
  v17[4] = v7;
  v17[5] = v16;
  void v17[6] = v19;
  v17[7] = v4;
  void v22[4] = sub_100113988;
  v22[5] = v17;
  v22[0] = _NSConcreteStackBlock;
  sub_100022644(COERCE_DOUBLE(1107296256));
  _OWORD v22[2] = sub_10002CD0C;
  uint64_t v22[3] = &unk_100213B50;
  uint64_t v18 = _Block_copy(v22);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B6DC((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  sub_10004883C();
  sub_100036A94();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v1, v10);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v20);
  swift_release();
  sub_100036B08();
  sub_100020FDC();
}

uint64_t sub_10010F314(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  sub_10010FB74();
  char v10 = v9;
  uint64_t v12 = v11;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v33, v12, &v36);
  swift_bridgeObjectRelease();
  sub_1000434BC((uint64_t)&v33);
  if (MetatypeMetadata)
  {
    sub_100043478(&qword_10022F258);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRetain();
      sub_10010C544(0x73746E65746E6F63, a5, a6);
      unint64_t v14 = v13;
      swift_bridgeObjectRelease();
      LOBYTE(v33) = v10 & 1;
      unint64_t v34 = v14;
      Promise.resolve(_:)();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_10002CBB4((uint64_t)&v36, &qword_10022F490);
  }
  if (qword_10022C4F0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v35 = (void *)type metadata accessor for MercuryCacheDatabase();
  unint64_t v33 = a1;
  swift_retain();
  id v16 = (id)AMSLogKey();
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v21._uint64_t countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    sub_100049788(&v33, (uint64_t)v35);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v36 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)&v36, &qword_10022F490);
    v23._uint64_t countAndFlagsBits = 5972026;
    v23._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    uint64_t MetatypeMetadata = &type metadata for String;
    *(void *)&long long v36 = v18;
    *((void *)&v36 + 1) = v20;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)&v36, &qword_10022F490);
    v24._uint64_t countAndFlagsBits = 93;
    v24._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v25._uint64_t countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    sub_100049788(&v33, (uint64_t)v35);
    uint64_t v26 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v36 = v26;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)&v36, &qword_10022F490);
    v27._uint64_t countAndFlagsBits = 58;
    v27._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v33);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v28._uint64_t countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  uint64_t v35 = &type metadata for String;
  unint64_t v33 = 0xD000000000000022;
  unint64_t v34 = 0x80000001001D36B0;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CBB4((uint64_t)&v33, &qword_10022F490);
  v29._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  v29._object = (void *)0x80000001001D3700;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  LogMessage.init(stringInterpolation:)();
  uint64_t v30 = static os_log_type_t.error.getter();
  sub_10004841C(v30);
  swift_bridgeObjectRelease();
  sub_1001138EC();
  swift_allocError();
  *unint64_t v31 = 2;
  Promise.reject(_:)();
  return swift_errorRelease();
}

void sub_10010FB74()
{
  sub_100044DC4();
  sub_1001146F8();
  sub_10004A740();
  sub_100045024();
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = sub_1000525D4();
  uint64_t v8 = v0;
  sub_10002D18C(v7, v1);
  if (!v0)
  {
    uint64_t v8 = 0;
    sub_10002D520();
    sub_100047538(v3, *(void *)(v2 + 40));
    if (sub_100036328((uint64_t)"events-reminders"))
    {
      sub_100021A74();
      swift_bridgeObjectRelease();
      sub_100043478(&qword_10022D780);
      uint64_t inited = (__n128 *)swift_initStackObject();
      sub_1000226A0(inited, (__n128)xmmword_1001C3110);
      swift_setDeallocating();
      sub_1000500CC();
      uint64_t v9 = sub_10004AC64();
      sub_1000206BC(v9);
      swift_errorRelease();
      sub_10004A740();
      goto LABEL_7;
    }
    sub_1001138EC();
    uint64_t v10 = sub_100021180();
    sub_100021258(v10, v11);
  }
  uint64_t v12 = sub_10004AC64();
  sub_1000206BC(v12);
  if (v8) {
    swift_errorRelease();
  }
LABEL_7:
  if (qword_10022C4F0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v13 = sub_10002D318();
  sub_100044798(v13);
  unint64_t v14 = (__n128 *)sub_100050DD0();
  sub_10004A088(v14, (__n128)xmmword_1001C3120);
  id v15 = (id)AMSLogKey();
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_1000448B8();
    sub_100041F7C();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_10002069C(MetatypeMetadata);
    uint64_t inited = (__n128 *)&qword_10022F490;
    sub_1000533BC();
    sub_100020E44();
    void v26[3] = &type metadata for String;
    v26[0] = v17;
    v26[1] = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004A740();
    sub_10002CBB4(v21, v22);
    sub_1000208D8();
    sub_100041050();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_1000448B8();
    sub_100041F7C();
    uint64_t v23 = swift_getMetatypeMetadata();
    sub_10002069C(v23);
    sub_10002CBB4((uint64_t)v26, &qword_10022F490);
    sub_100020E94();
    sub_100041050();
  }
  sub_10004377C((uint64_t)v27);
  sub_1000524FC();
  sub_1000448B8();
  void v27[3] = &type metadata for String;
  sub_100040CE0((uint64_t)&inited->n128_i64[1] + 5);
  sub_1001146C8();
  sub_1000472C8();
  sub_1001146AC();
  sub_100114690();
  sub_1000456E0();
  sub_10004C874();
  v24();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1001146C8();
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v25 = static os_log_type_t.error.getter();
  sub_10004841C(v25);
  swift_bridgeObjectRelease();
  swift_willThrow();
  sub_1001146E0();
  sub_100020E2C();
}

void sub_10010FF2C()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  type metadata accessor for DispatchWorkItemFlags();
  sub_1000448FC();
  __chkstk_darwin(v3);
  sub_10004DE0C();
  sub_1000448FC();
  __chkstk_darwin(v4);
  sub_10002D300();
  sub_100043478(&qword_10022F198);
  uint64_t v5 = Promise.__allocating_init()();
  if (qword_10022C4F8 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v2;
  v6[3] = v0;
  v6[4] = v5;
  v11[4] = sub_100113A90;
  void v11[5] = v6;
  v11[0] = _NSConcreteStackBlock;
  sub_100022644(COERCE_DOUBLE(1107296256));
  v11[2] = sub_10002CD0C;
  v11[3] = &unk_100213D58;
  uint64_t v7 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B6DC((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  sub_10004883C();
  sub_10004D6C8();
  _Block_release(v7);
  uint64_t v8 = sub_10004FCFC();
  v9(v8);
  sub_100020B78();
  v10();
  swift_release();
  sub_100036B08();
  sub_100020FDC();
}

void sub_100110188(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  if (*(void *)(a1 + 16))
  {
    uint64_t v5 = *sub_100049788((void *)(a2 + 16), *(void *)(a2 + 40));
    uint64_t v6 = swift_retain();
    sub_10002D18C(v6, v5);
    sub_10002D520();
    sub_1001109B4();
    Promise.resolve(_:)();
    sub_100049788((void *)(a2 + 16), *(void *)(a2 + 40));
    uint64_t v23 = swift_retain();
    sub_10002D078(v23, v23);
  }
  else
  {
    if (qword_10022C4F0 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    Swift::String v27 = (void *)type metadata accessor for MercuryCacheDatabase();
    v26[0] = a2;
    swift_retain();
    id v7 = (id)AMSLogKey();
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v12._uint64_t countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v12);
      sub_100049788(v26, (uint64_t)v27);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v24[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v24, &qword_10022F490);
      v14._uint64_t countAndFlagsBits = 5972026;
      v14._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v14);
      uint64_t MetatypeMetadata = &type metadata for String;
      v24[0] = v9;
      v24[1] = v11;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v24, &qword_10022F490);
      v15._uint64_t countAndFlagsBits = 93;
      v15._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v16._uint64_t countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v16);
      sub_100049788(v26, (uint64_t)v27);
      uint64_t v17 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v24[0] = v17;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v24, &qword_10022F490);
      v18._uint64_t countAndFlagsBits = 58;
      v18._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v26);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v19._uint64_t countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    Swift::String v27 = &type metadata for String;
    strcpy((char *)v26, "update(with:)");
    HIWORD(v26[1]) = -4864;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v26, &qword_10022F490);
    v20._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v20._object = (void *)0x80000001001D3A10;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    LogMessage.init(stringInterpolation:)();
    uint64_t v21 = static os_log_type_t.error.getter();
    sub_10004841C(v21);
    swift_bridgeObjectRelease();
    sub_1001138EC();
    swift_allocError();
    *uint64_t v22 = 3;
    Promise.reject(_:)();
    swift_errorRelease();
  }
}

void sub_1001109B4()
{
  sub_1000209F4();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  sub_100045024();
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = *(void *)(v4 + 16);
  if (v7)
  {
    sub_10004A740();
    uint64_t v8 = v4 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_10005416C(v8, (uint64_t)v19);
      uint64_t v9 = sub_100049788(v19, v19[3]);
      uint64_t v11 = *v9;
      uint64_t v10 = v9[1];
      if (*v9 == v1 + 8 && v10 == 0x80000001001CA6E0) {
        break;
      }
      if (sub_100043ED8()) {
        break;
      }
      if ((v11 != v1 || v10 != 0x80000001001CA6C0) && (sub_100043ED8() & 1) == 0)
      {
        if ((v11 != v1 + 3 || v10 != 0x80000001001CA700) && (sub_100043ED8() & 1) == 0)
        {
          sub_1001146EC();
          sub_1001131D8();
          goto LABEL_11;
        }
        sub_10010D814(0);
        uint64_t v17 = v16;
        Swift::String v18 = (void *)sub_1001146EC();
        sub_1001130D8(v18);
        sub_10010D814(0);
        (*(void (**)(uint64_t))(*(void *)(v2 + 104) + 24))(v17);
        goto LABEL_13;
      }
      Swift::String v15 = (void *)sub_1001146EC();
      sub_10011256C(v15);
      (*(void (**)(void))(*(void *)(v2 + 104) + 16))();
LABEL_11:
      sub_10004377C((uint64_t)v19);
      v8 += 40;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
    sub_10010D4BC();
    uint64_t v13 = v12;
    Swift::String v14 = (void *)sub_1001146EC();
    sub_100112464(v14);
    sub_10010D4BC();
    (*(void (**)(uint64_t))(*(void *)(v2 + 104) + 8))(v13);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
LABEL_19:
  sub_100020FDC();
}

void sub_100111050()
{
  sub_100044DC4();
  sub_100045024();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  if (qword_10022C4F0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  sub_10003BDEC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v16 = v2;
  v15[0] = v0;
  swift_retain();
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    sub_100049788(v15, v16);
    swift_getDynamicType();
    swift_getMetatypeMetadata();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000533BC();
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v13[0] = v8;
    v13[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000533BC();
    sub_1000208D8();
    sub_100011DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    sub_100049788(v15, v16);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v13[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v13, &qword_10022F490);
    sub_100020E94();
    sub_100011DB4();
  }
  sub_10004377C((uint64_t)v15);
  LogMessage.init(stringLiteral:)();
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_10004841C(v12);
  swift_bridgeObjectRelease();
  sub_100049788(v0 + 7, v0[10]);
  sub_100049788(v0 + 2, v0[5]);
  swift_bridgeObjectRetain();
  sub_1000C5920();
  swift_bridgeObjectRelease();
  sub_1001146E0();
  sub_100020E2C();
}

uint64_t sub_10011131C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  sub_100049788(a1, a1[3]);
  sub_10003F764();
  if (v3)
  {
    swift_errorRelease();
  }
  else if ((v11 & 1) == 0)
  {
    Date.init(timeIntervalSinceReferenceDate:)();
    Date.timeIntervalSinceNow.getter();
    BOOL v13 = v12 < 0.0;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_beginAccess();
    *(unsigned char *)(a2 + 16) = v13;
  }
  sub_100049788(a1, a1[3]);
  sub_10004B6C0(v34);
  unint64_t v14 = *((void *)&v34[0] + 1);
  if (*((void *)&v34[0] + 1) >> 60 == 15) {
    goto LABEL_11;
  }
  uint64_t v15 = *(void *)&v34[0];
  uint64_t v16 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  *(void *)&v34[0] = 0;
  id v18 = [v16 JSONObjectWithData:isa options:0 error:v34];

  if (!v18)
  {
    id v24 = *(id *)&v34[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_10004B6AC(v15, v14);
    swift_errorRelease();
LABEL_11:
    sub_1001138EC();
    swift_allocError();
    *uint64_t v25 = 4;
    swift_willThrow();
    return 1;
  }
  id v19 = *(id *)&v34[0];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  uint64_t v20 = sub_100043478(&qword_10022D6F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_10004B6AC(v15, v14);
    goto LABEL_11;
  }
  uint64_t v21 = v33[0];
  sub_100049788(a1, a1[3]);
  uint64_t v22 = sub_10003F9D0();
  uint64_t v27 = v23;
  uint64_t v32 = v21;
  if (!v23)
  {
    sub_10004B6AC(v15, v14);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v28 = v22;
  Swift::String v29 = (uint64_t *)(a3 + 16);
  swift_beginAccess();
  if (!*(void *)(a3 + 16))
  {
    uint64_t v30 = Dictionary.init(dictionaryLiteral:)();
    swift_beginAccess();
    *Swift::String v29 = v30;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v31 = v32;
  if (*v29)
  {
    v33[0] = v28;
    v33[1] = v27;
    swift_bridgeObjectRetain_n();
    AnyHashable.init<A>(_:)();
    void v33[3] = v20;
    v33[0] = v31;
    swift_bridgeObjectRetain();
    sub_100088240((uint64_t)v33, (uint64_t)v34);
    swift_endAccess();
    sub_10004B6AC(v15, v14);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_endAccess();
    sub_10004B6AC(v15, v14);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return 1;
}

void sub_1001117BC()
{
  sub_100044DC4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  id v6 = v5;
  type metadata accessor for Date();
  sub_1000448FC();
  __chkstk_darwin(v7);
  sub_10002D2D4();
  sub_100047538(v6, v6[3]);
  sub_10003F764();
  if (v0)
  {
    swift_errorRelease();
  }
  else if ((v8 & 1) == 0)
  {
    Date.init(timeIntervalSinceReferenceDate:)();
    Date.timeIntervalSinceNow.getter();
    BOOL v10 = v9 < 0.0;
    sub_100020B78();
    v11();
    swift_beginAccess();
    *(unsigned char *)(v4 + 16) = v10;
  }
  sub_100047538(v6, v6[3]);
  sub_10004B6C0(v27);
  unint64_t v12 = *((void *)&v27[0] + 1);
  if (*((void *)&v27[0] + 1) >> 60 == 15) {
    goto LABEL_11;
  }
  uint64_t v13 = *(void *)&v27[0];
  unint64_t v14 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  *(void *)&v27[0] = 0;
  id v16 = [v14 JSONObjectWithData:isa options:0 error:v27];

  if (!v16)
  {
    id v20 = *(id *)&v27[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100022598();
    swift_errorRelease();
LABEL_11:
    sub_1001138EC();
    sub_100021180();
    sub_10004BF9C(v21, 4);
    goto LABEL_12;
  }
  id v17 = *(id *)&v27[0];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  uint64_t v18 = sub_100043478(&qword_10022D6F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_100022598();
    goto LABEL_11;
  }
  sub_100047538(v6, v6[3]);
  sub_10003F9D0();
  uint64_t v22 = v19;
  uint64_t v25 = v26[0];
  if (!v19)
  {
    sub_100022598();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v23 = (uint64_t *)(v2 + 16);
  sub_10002CAAC();
  if (!*(void *)(v2 + 16))
  {
    uint64_t v24 = Dictionary.init(dictionaryLiteral:)();
    swift_beginAccess();
    uint64_t *v23 = v24;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*v23)
  {
    v26[1] = v22;
    swift_bridgeObjectRetain_n();
    AnyHashable.init<A>(_:)();
    void v26[3] = v18;
    v26[0] = v25;
    swift_bridgeObjectRetain();
    sub_100088240((uint64_t)v26, (uint64_t)v27);
    swift_endAccess();
    sub_10004B6AC(v13, v12);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_endAccess();
    sub_10004B6AC(v13, v12);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_12:
  sub_100020E2C();
}

uint64_t sub_100111BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = (void *)*v3;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = 0;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  sub_100049788(v3 + 2, v3[5]);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  *(void *)(v7 + 24) = v6;
  sub_100030960(a1, a2, a3, (uint64_t)sub_1001139E0, v7);
  if (v33)
  {
    swift_retain();
    swift_retain();
    swift_release();
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_release();
    swift_beginAccess();
    if (*(void *)(v6 + 16))
    {
      swift_beginAccess();
      char v17 = *(unsigned char *)(v5 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      swift_release();
      return v17 & 1;
    }
    sub_1001138EC();
    swift_allocError();
    *uint64_t v27 = 2;
    swift_willThrow();
  }
  if (qword_10022C4F0 != -1) {
    swift_once();
  }
  char v32 = qword_1002309E8;
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  char v38 = v28;
  v37[0] = (uint64_t)v3;
  swift_retain();
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    double v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._uint64_t countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(v37, (uint64_t)v38);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v35[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v35, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 5972026;
    v15._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    uint64_t MetatypeMetadata = &type metadata for String;
    v35[0] = v10;
    v35[1] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v35, &qword_10022F490);
    v16._uint64_t countAndFlagsBits = 93;
    v16._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v18._uint64_t countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    sub_100049788(v37, (uint64_t)v38);
    uint64_t v19 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v35[0] = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v35, &qword_10022F490);
    v20._uint64_t countAndFlagsBits = 58;
    v20._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v37);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  char v38 = &type metadata for String;
  v37[0] = 0xD000000000000024;
  v37[1] = 0x80000001001D37A0;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CBB4((uint64_t)v37, &qword_10022F490);
  v22._uint64_t countAndFlagsBits = 0x3A64656C69616620;
  v22._object = (void *)0xE900000000000020;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  swift_getErrorValue();
  char v38 = v34;
  uint64_t v23 = sub_10003BAA4(v37);
  (*(void (**)(uint64_t *))(*(v34 - 1) + 16))(v23);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CBB4((uint64_t)v37, &qword_10022F490);
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  LogMessage.init(stringInterpolation:)();
  uint64_t v25 = static os_log_type_t.error.getter();
  char v17 = v32;
  sub_10004841C(v25);
  swift_bridgeObjectRelease();
  swift_willThrow();
  swift_release();
  swift_release();
  return v17 & 1;
}

uint64_t sub_100112188(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100049788(a1, a1[3]);
  sub_10003F764();
  if (v3)
  {
    swift_errorRelease();
  }
  else if ((v11 & 1) == 0)
  {
    Date.init(timeIntervalSinceReferenceDate:)();
    Date.timeIntervalSinceNow.getter();
    BOOL v13 = v12 < 0.0;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_beginAccess();
    *(unsigned char *)(a2 + 16) = v13;
  }
  sub_100049788(a1, a1[3]);
  sub_10004B6C0(v24);
  unint64_t v14 = *((void *)&v24[0] + 1);
  if (*((void *)&v24[0] + 1) >> 60 != 15)
  {
    uint64_t v15 = *(void *)&v24[0];
    Swift::String v16 = self;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    *(void *)&v24[0] = 0;
    id v18 = [v16 JSONObjectWithData:isa options:0 error:v24];

    if (v18)
    {
      id v19 = *(id *)&v24[0];
      _bridgeAnyObjectToAny(_:)();
      sub_10004B6AC(v15, v14);
      swift_unknownObjectRelease();
      sub_100043478(&qword_10022D6F0);
      if (swift_dynamicCast())
      {
        uint64_t v20 = v23[1];
        swift_beginAccess();
        *(void *)(a3 + 16) = v20;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      id v21 = *(id *)&v24[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      sub_10004B6AC(v15, v14);
    }
  }
  return 0;
}

uint64_t sub_100112464(void *a1)
{
  sub_100045F70(a1);
  uint64_t v3 = sub_100046E30();
  sub_10010C2C4(v3, (uint64_t (*)(unsigned char *, unsigned char *))sub_100113A9C, v1, 19159, (uint64_t (*)(void, uint64_t, uint64_t))sub_1000710A0);
  sub_100042BBC();
  sub_10002D41C();
  sub_10004A3EC();
  sub_100036284();
  sub_100112A70(v4, v5, v6, v7);
  if (!v2)
  {
    uint64_t v9 = sub_100049788((void *)(v1 + 16), *(void *)(v1 + 40));
    __chkstk_darwin(v9);
    uint64_t v10 = sub_100048E68();
    sub_1000409D8(v10, v11, (void (*)(void))sub_100113AB8);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_10011256C(void *a1)
{
  sub_100045F70(a1);
  uint64_t v3 = sub_100046E30();
  sub_10010C2C4(v3, (uint64_t (*)(unsigned char *, unsigned char *))sub_100113A9C, v1, 17279, (uint64_t (*)(void, uint64_t, uint64_t))sub_100071168);
  sub_100042BBC();
  sub_10002D41C();
  sub_10004A3EC();
  sub_1000501AC(16, v4);
  if (!v2)
  {
    uint64_t v6 = sub_100049788((void *)(v1 + 16), *(void *)(v1 + 40));
    __chkstk_darwin(v6);
    uint64_t v7 = sub_100048E68();
    sub_1000409D8(v7, v8, (void (*)(void))sub_100113B20);
  }
  return swift_bridgeObjectRelease();
}

void sub_10011266C()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = (void *)*v0;
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v8 = sub_1000208F0(v7);
  __chkstk_darwin(v8);
  sub_100011D4C();
  sub_1000433B4(v5, (uint64_t)v27);
  if (swift_dynamicCast())
  {
    uint64_t v9 = self;
    sub_100049788(v3, v3[3]);
    uint64_t v10 = _bridgeAnythingToObjectiveC<A>(_:)();
    v27[0] = 0;
    id v11 = [v9 dataWithJSONObject:v10 options:0 error:v27];
    swift_unknownObjectRelease();
    id v12 = v27[0];
    if (v11)
    {
      static Data._unconditionallyBridgeFromObjectiveC(_:)();

      goto LABEL_11;
    }
    BOOL v13 = v12;
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  if (qword_10022C4F0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v14 = type metadata accessor for LogMessage();
  sub_100044798(v14);
  sub_10003BDEC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v28 = v6;
  v27[0] = v1;
  swift_retain();
  id v15 = (id)AMSLogKey();
  if (v15)
  {
    Swift::String v16 = v15;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    uint64_t v20 = sub_10011470C();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v25[0] = v20;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v25, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v25[0] = v17;
    v25[1] = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v25, &qword_10022F490);
    v21._uint64_t countAndFlagsBits = 93;
    v21._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    sub_100011DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    uint64_t v22 = sub_10011470C();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v25[0] = v22;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v25, &qword_10022F490);
    v23._uint64_t countAndFlagsBits = 58;
    v23._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    sub_100011DB4();
  }
  sub_10004377C((uint64_t)v27);
  LogMessage.init(stringLiteral:)();
  uint64_t v28 = &type metadata for AnyHashable;
  v27[0] = (id)swift_allocObject();
  sub_1000433B4(v5, (uint64_t)v27[0] + 16);
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)v27, &qword_10022F490);
  uint64_t v24 = static os_log_type_t.error.getter();
  sub_10004841C(v24);
  swift_bridgeObjectRelease();
LABEL_11:
  sub_100020FDC();
}

uint64_t sub_100112A70(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_100047538((void *)(v4 + 16), *(void *)(v4 + 40));
  uint64_t result = sub_10010C7B4(a1, a2);
  if (!v5)
  {
    sub_100049788((void *)(v4 + 16), *(void *)(v4 + 40));
    sub_100043478(qword_100230AD0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001C3FC0;
    *(void *)(inited + 32) = 0x7079546568636163;
    *(void *)(inited + 40) = 0xEB00000000444965;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(inited + 56) = a3;
    *(void *)(inited + 64) = a4;
    *(unsigned char *)(inited + 72) = 0;
    sub_10004A5A4();
    *(void *)(v12 + 80) = v13;
    *(void *)(v12 + 88) = 0xE700000000000000;
    *(unsigned char *)(v12 + 96) = 2;
    sub_1000206D4();
    *(void *)(v14 + 104) = v15;
    *(void *)(v14 + 112) = v16;
    *(unsigned char *)(v14 + 120) = 3;
    sub_10010C87C(a1, a2, inited);
    swift_setDeallocating();
    return sub_10017FBFC();
  }
  return result;
}

void sub_100112BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_100044DC4();
  uint64_t v79 = v23;
  uint64_t v80 = v24;
  uint64_t v25 = v22;
  int v78 = v26;
  uint64_t v76 = v27;
  unint64_t v77 = v28;
  uint64_t v75 = v29;
  uint64_t v87 = v30;
  uint64_t v32 = v31;
  uint64_t v33 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v34 = sub_1000208F0(v33);
  __chkstk_darwin(v34);
  Class v74 = (char *)v68 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = *(void *)(v32 + 16);
  if (v36)
  {
    uint64_t v73 = a22;
    uint64_t v71 = (void *)(v87 + 16);
    uint64_t v72 = a21;
    swift_bridgeObjectRetain();
    v68[1] = v32;
    uint64_t v37 = (void *)(v32 + 56);
    long long v70 = xmmword_1001C3130;
    long long v69 = xmmword_1001C3FC0;
    while (1)
    {
      uint64_t v82 = v36;
      uint64_t v86 = v25;
      uint64_t v38 = *(v37 - 3);
      unint64_t v39 = *(v37 - 2);
      uint64_t v40 = *v37;
      uint64_t v88 = *(v37 - 1);
      uint64_t v89 = v38;
      unint64_t v94 = v39;
      sub_10004EA44(v38, v39);
      uint64_t v41 = qword_10022C4F0;
      uint64_t v85 = v40;
      swift_bridgeObjectRetain();
      if (v41 != -1) {
        swift_once();
      }
      uint64_t v81 = v37;
      sub_100043478(&qword_10022E560);
      uint64_t v42 = sub_10002D318();
      sub_100044798(v42);
      *(_OWORD *)(swift_allocObject() + 16) = v70;
      uint64_t v93 = type metadata accessor for MercuryCacheDatabase();
      v92[0] = v87;
      swift_retain();
      id v43 = (id)AMSLogKey();
      if (v43)
      {
        uint64_t v44 = v43;
        uint64_t v84 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v46 = v45;

        swift_bridgeObjectRetain();
        sub_100020F60();
        sub_100020E60();
        sub_100049788(v92, v93);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v90[0] = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CBB4((uint64_t)v90, &qword_10022F490);
        sub_100020E44();
        uint64_t MetatypeMetadata = &type metadata for String;
        v90[0] = v84;
        v90[1] = v46;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CBB4((uint64_t)v90, &qword_10022F490);
        sub_1000208D8();
        sub_100011DB4();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020980();
        sub_100020E60();
        sub_100049788(v92, v93);
        uint64_t v48 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v90[0] = v48;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CBB4((uint64_t)v90, &qword_10022F490);
        sub_100020E94();
        sub_100011DB4();
      }
      sub_10004377C((uint64_t)v92);
      LogMessage.init(stringLiteral:)();
      uint64_t v93 = v79;
      sub_10004D254();
      uint64_t v49 = (void *)swift_allocObject();
      v92[0] = v49;
      uint64_t v51 = v88;
      uint64_t v50 = v89;
      v49[2] = v89;
      v49[3] = v94;
      uint64_t v52 = v85;
      v49[4] = v51;
      v49[5] = v52;
      sub_10004EA44(v50, v94);
      uint64_t v53 = v52;
      swift_bridgeObjectRetain();
      static LogMessage.safe(_:)();
      sub_10002CBB4((uint64_t)v92, &qword_10022F490);
      uint64_t v54 = static os_log_type_t.info.getter();
      sub_10004841C(v54);
      swift_bridgeObjectRelease();
      uint64_t v83 = sub_100049788(v71, *(void *)(v87 + 40));
      unint64_t v55 = v75;
      Swift::String v56 = sub_100049788(v75, v75[3]);
      unint64_t v57 = (void *)v56[1];
      uint64_t v84 = *v56;
      sub_100043478(&qword_100230AC8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v69;
      sub_100049788(v55, v55[3]);
      sub_100036198();
      *(void *)(inited + 32) = v59;
      *(void *)(inited + 40) = 0xEB00000000444965;
      *(void *)(inited + 48) = v60;
      *(void *)(inited + 56) = v41;
      *(unsigned char *)(inited + 64) = 3;
      *(void *)(inited + 72) = 0x797269707865;
      uint64_t v62 = v76;
      unint64_t v61 = v77;
      *(void *)(inited + 80) = 0xE600000000000000;
      *(void *)(inited + 88) = v62;
      *(void *)(inited + 96) = v61;
      char v63 = v78;
      *(unsigned char *)(inited + 104) = v78;
      uint64_t v64 = v73;
      *(void *)(inited + 112) = v72;
      *(void *)(inited + 120) = v64;
      uint64_t v65 = v89;
      *(void *)(inited + 128) = v88;
      *(void *)(inited + 136) = v53;
      *(unsigned char *)(inited + 144) = 3;
      sub_10004A5A4();
      *(void *)(inited + 152) = v66;
      *(void *)(inited + 160) = 0xE700000000000000;
      *(void *)(inited + 168) = v65;
      *(void *)(inited + 176) = v94;
      *(unsigned char *)(inited + 184) = 0;
      uint64_t v88 = *v83;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1000A2E28(v62, v61, v63);
      swift_bridgeObjectRetain();
      sub_10004EA44(v65, v94);
      uint64_t v67 = v86;
      sub_10010CD94(v84, v57, inited);
      uint64_t v25 = v67;
      if (v67) {
        break;
      }
      uint64_t v37 = v81 + 4;
      swift_setDeallocating();
      sub_10017FC38();
      swift_bridgeObjectRelease();
      sub_10004B278(v65, v94);
      swift_bridgeObjectRelease();
      uint64_t v36 = v82 - 1;
      if (v82 == 1) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_10017FC38();
    swift_bridgeObjectRelease();
    sub_10004B278(v65, v94);
LABEL_12:
    swift_bridgeObjectRelease();
  }
  sub_100020E2C();
}

uint64_t sub_1001130D8(void *a1)
{
  sub_100045F70(a1);
  uint64_t v3 = sub_100046E30();
  sub_10010C2C4(v3, (uint64_t (*)(unsigned char *, unsigned char *))sub_100113A9C, v1, 65171, (uint64_t (*)(void, uint64_t, uint64_t))sub_10007117C);
  sub_100042BBC();
  sub_10002D41C();
  sub_10004A3EC();
  sub_1000501AC(19, v4);
  if (!v2)
  {
    uint64_t v6 = sub_100049788((void *)(v1 + 16), *(void *)(v1 + 40));
    __chkstk_darwin(v6);
    uint64_t v7 = sub_100048E68();
    sub_1000409D8(v7, v8, (void (*)(void))sub_100113B4C);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001131D8()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  sub_100045024();
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  sub_10002D2D4();
  uint64_t v8 = self;
  sub_100035CF0();
  type metadata accessor for MercuryCacheUpdateData.Success(0);
  swift_bridgeObjectRetain();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v51 = 0;
  id v10 = [v8 dataWithJSONObject:isa options:0 error:&v51];

  id v11 = (id)v51;
  if (v10)
  {
    uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v14 = v13;

    sub_100035CF0();
    Date.timeIntervalSinceReferenceDate.getter();
    uint64_t v16 = v15;
    uint64_t v17 = sub_100035CF0();
    uint64_t v18 = *v17;
    uint64_t v19 = (void *)v17[1];
    swift_bridgeObjectRetain();
    sub_1001137AC(v18, v19);
    swift_bridgeObjectRelease();
    if (v2)
    {
      uint64_t v20 = v12;
      unint64_t v21 = v14;
    }
    else
    {
      unint64_t v49 = v14;
      if (qword_10022C4F0 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      uint64_t v24 = sub_10002D318();
      sub_100044798(v24);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
      uint64_t v53 = v5;
      uint64_t v51 = v0;
      swift_retain();
      id v25 = (id)AMSLogKey();
      if (v25)
      {
        int v26 = v25;
        uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v28 = v27;

        swift_bridgeObjectRetain();
        sub_100020F60();
        v29._uint64_t countAndFlagsBits = 0;
        v29._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v29);
        sub_100045108();
        uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
        sub_100018FC8(MetatypeMetadata);
        sub_10002CBB4((uint64_t)v50, &qword_10022F490);
        sub_100020E44();
        v50[3] = &type metadata for String;
        v50[0] = v48;
        v50[1] = v28;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CBB4((uint64_t)v50, &qword_10022F490);
        sub_1000208D8();
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020980();
        v31._uint64_t countAndFlagsBits = 0;
        v31._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v31);
        sub_100045108();
        uint64_t v32 = swift_getMetatypeMetadata();
        sub_100018FC8(v32);
        sub_10002CBB4((uint64_t)v50, &qword_10022F490);
        sub_100020E94();
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v51);
      uint64_t v51 = 0x203A656C626154;
      unint64_t v52 = 0xE700000000000000;
      uint64_t v33 = sub_100035CF0();
      uint64_t v34 = *v33;
      uint64_t v35 = (void *)v33[1];
      swift_bridgeObjectRetain();
      v36._uint64_t countAndFlagsBits = v34;
      v36._object = v35;
      String.append(_:)(v36);
      swift_bridgeObjectRelease();
      uint64_t v53 = &type metadata for String;
      static LogMessage.safe(_:)();
      sub_10002CBB4((uint64_t)&v51, &qword_10022F490);
      uint64_t v51 = 0;
      unint64_t v52 = 0xE000000000000000;
      v37._uint64_t countAndFlagsBits = 0x6E69747265736E49;
      v37._object = (void *)0xEA00000000002067;
      String.append(_:)(v37);
      sub_100043478(&qword_10022D7E8);
      _print_unlocked<A, B>(_:_:)();
      uint64_t v53 = &type metadata for String;
      static LogMessage.safe(_:)();
      sub_10002CBB4((uint64_t)&v51, &qword_10022F490);
      uint64_t v38 = static os_log_type_t.debug.getter();
      sub_10004841C(v38);
      swift_bridgeObjectRelease();
      sub_100049788((void *)(v3 + 16), *(void *)(v3 + 40));
      unint64_t v39 = sub_100035CF0();
      uint64_t v41 = *v39;
      uint64_t v40 = (void *)v39[1];
      sub_100043478(&qword_100230AC8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1001C3130;
      sub_100035CF0();
      sub_100036198();
      *(void *)(inited + 32) = v43;
      *(void *)(inited + 40) = 0xEB00000000444965;
      *(void *)(inited + 48) = v44;
      *(void *)(inited + 56) = v34;
      *(unsigned char *)(inited + 64) = 3;
      sub_1000206D4();
      *(void *)(inited + 72) = v45;
      *(void *)(inited + 80) = v46;
      *(void *)(inited + 88) = v16;
      *(void *)(inited + 96) = 0;
      *(unsigned char *)(inited + 104) = 2;
      sub_10004A5A4();
      *(void *)(inited + 112) = v47;
      *(void *)(inited + 120) = 0xE700000000000000;
      *(void *)(inited + 128) = v12;
      *(void *)(inited + 136) = v49;
      *(unsigned char *)(inited + 144) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10004EA44(v12, v49);
      sub_10010CD94(v41, v40, inited);
      swift_setDeallocating();
      sub_10017FC38();
      swift_bridgeObjectRelease();
      uint64_t v20 = v12;
      unint64_t v21 = v49;
    }
    return sub_10004B278(v20, v21);
  }
  else
  {
    uint64_t v22 = v11;
    _convertNSErrorToError(_:)();

    return swift_willThrow();
  }
}

uint64_t sub_1001137AC(uint64_t a1, void *a2)
{
  sub_100049788((void *)(v2 + 16), *(void *)(v2 + 40));
  uint64_t result = sub_10010C7B4(a1, a2);
  if (!v3)
  {
    sub_100049788((void *)(v2 + 16), *(void *)(v2 + 40));
    sub_100043478(qword_100230AD0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001C3130;
    *(void *)(inited + 32) = 0x7079546568636163;
    *(void *)(inited + 40) = 0xEB00000000444965;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0x64616F6C796170;
    *(void *)(inited + 64) = 0xE700000000000000;
    *(unsigned char *)(inited + 72) = 2;
    *(void *)(inited + 80) = 0x797269707865;
    *(void *)(inited + 88) = 0xE600000000000000;
    *(unsigned char *)(inited + 96) = 3;
    sub_10010C87C(a1, a2, inited);
    swift_setDeallocating();
    return sub_10017FBFC();
  }
  return result;
}

uint64_t sub_1001138E0()
{
  return sub_100021278(v0, 24);
}

unint64_t sub_1001138EC()
{
  unint64_t result = qword_100230AA8;
  if (!qword_100230AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230AA8);
  }
  return result;
}

uint64_t sub_100113938()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100113988()
{
  return sub_10010F314(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_100113998()
{
  return sub_100021278(v0, 17);
}

uint64_t sub_1001139A4()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001139E0(void *a1)
{
  return sub_100112188(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_100113A04()
{
  return sub_10010DE40();
}

uint64_t sub_100113A18(void *a1)
{
  return sub_10011131C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_100113A3C()
{
  sub_1001117BC();
  return v0 & 1;
}

uint64_t sub_100113A64()
{
  return sub_100113C24((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

void sub_100113A90()
{
  sub_100110188(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100113A9C()
{
}

uint64_t sub_100113AB8()
{
  return sub_100113B74();
}

uint64_t sub_100113AE8()
{
  sub_10004377C(v0 + 16);
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100113B20()
{
  return sub_10004D1DC((uint64_t)&type metadata for MercuryCacheDatabase.RawEventsData, (uint64_t)&unk_100213DE0);
}

uint64_t sub_100113B4C()
{
  return sub_10004D1DC((uint64_t)&type metadata for MercuryCacheDatabase.RawRankingData, (uint64_t)&unk_100213E08);
}

#error "100113BA8: call analysis failed (funcsize=17)"

uint64_t sub_100113BBC()
{
  sub_10004B278(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  sub_10004D254();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_100113BF8()
{
  return sub_100113C24((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100113C24(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 24));
  swift_release();
  return _swift_deallocObject(v2, 40, 7);
}

uint64_t sub_100113C84()
{
  return sub_10010E8B4();
}

ValueMetadata *type metadata accessor for MercuryCacheDatabase.RawRankingData()
{
  return &type metadata for MercuryCacheDatabase.RawRankingData;
}

ValueMetadata *type metadata accessor for MercuryCacheDatabase.RawEventsData()
{
  return &type metadata for MercuryCacheDatabase.RawEventsData;
}

uint64_t _s14amsengagementd20MercuryCacheDatabaseC14RawRankingDataVwxx_0(uint64_t a1)
{
  sub_10004B278(*(void *)a1, *(void *)(a1 + 8));
  return swift_bridgeObjectRelease();
}

void *_s14amsengagementd20MercuryCacheDatabaseC14RawRankingDataVwcp_0(uint64_t a1, uint64_t *a2)
{
  sub_100052140(a1, a2);
  *uint64_t v3 = v4;
  v3[1] = v5;
  uint64_t v6 = *(void *)(v2 + 24);
  v3[2] = *(void *)(v2 + 16);
  v3[3] = v6;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t *_s14amsengagementd20MercuryCacheDatabaseC14RawRankingDataVwca_0(uint64_t a1, uint64_t *a2)
{
  sub_100052140(a1, a2);
  uint64_t v6 = *v3;
  unint64_t v7 = v3[1];
  *uint64_t v3 = v4;
  v3[1] = v5;
  sub_10004B278(v6, v7);
  v3[2] = *(void *)(v2 + 16);
  v3[3] = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t *_s14amsengagementd20MercuryCacheDatabaseC14RawRankingDataVwta_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10004B278(v4, v5);
  uint64_t v6 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MercuryCacheDatabase.RawPreference()
{
  return &type metadata for MercuryCacheDatabase.RawPreference;
}

uint64_t sub_100113DF8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100113E94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = ~v5;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 1) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v5 + 16) & v6));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 1) & v6, ((unint64_t)a2 + v5 + 1) & v6);
  }
  return v3;
}

unsigned char *sub_100113F78(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

unsigned char *sub_100113FE8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

unsigned char *sub_100114058(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1001140C8(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v7 + 1) & ~v7) + *(void *)(*(void *)(v4 - 8) + 64);
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)&a1[v10];
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)&a1[v10];
      if (!*(_WORD *)&a1[v10]) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if (v6 > 0xFE) {
        return sub_10004FD40((unint64_t)&a1[v7 + 1] & ~v7, v6, v4);
      }
      unsigned int v16 = *a1;
      BOOL v17 = v16 >= 2;
      int v18 = (v16 + 2147483646) & 0x7FFFFFFF;
      if (v17) {
        return (v18 + 1);
      }
      else {
        return 0;
      }
    }
  }
  int v12 = a1[v10];
  if (!a1[v10]) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *(unsigned __int16 *)a1;
        break;
      case 3:
        LODWORD(v10) = *(unsigned __int16 *)a1 | (a1[2] << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_100114260(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0xFE) {
    unsigned int v9 = 254;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((v10 + 1) & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v9;
  unsigned int v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v16 = ~v9 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v19 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1001144A4);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 > 0xFE)
        {
          unint64_t v20 = (unint64_t)&a1[v10 + 1] & ~v10;
          sub_100021AC0(v20, a2, v8, v6);
        }
        else
        {
          *a1 = a2 + 1;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ExpirableValue()
{
  return sub_10008034C();
}

unsigned char *storeEnumTagSinglePayload for MercuryCacheError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001145B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MercuryCacheError()
{
  return &type metadata for MercuryCacheError;
}

unint64_t sub_1001145EC()
{
  unint64_t result = qword_100230B58;
  if (!qword_100230B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230B58);
  }
  return result;
}

uint64_t sub_100114650()
{
  return sub_100113A3C() & 1;
}

uint64_t sub_10011466C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100111BD0(a1, (a2 - 32) | 0x8000000000000000, v2);
}

uint64_t *sub_100114690()
{
  *(void *)(v0 - 88) = *(void *)(v0 - 160);
  return sub_10003BAA4((uint64_t *)(v0 - 112));
}

uint64_t sub_1001146AC()
{
  return swift_getErrorValue();
}

uint64_t sub_1001146C8()
{
  return sub_10002CBB4(v1 - 112, v0);
}

uint64_t sub_1001146EC()
{
  return v0 - 128;
}

uint64_t sub_10011470C()
{
  sub_100049788((void *)(v0 - 128), *(void *)(v0 - 104));
  return swift_getDynamicType();
}

ValueMetadata *type metadata accessor for MercuryCacheDataFetcher()
{
  return &type metadata for MercuryCacheDataFetcher;
}

uint64_t sub_100114754()
{
  if (qword_10022C4C0 != -1) {
    swift_once();
  }
  qword_100230B60 = qword_100244128;
  return swift_retain();
}

uint64_t sub_1001147B8()
{
  sub_100020958();
  *(unsigned char *)(v0 + 233) = v1;
  *(void *)(v0 + 256) = v2;
  *(void *)(v0 + 264) = v3;
  *(void *)(v0 + 240) = v4;
  *(void *)(v0 + 248) = v5;
  type metadata accessor for LogMessage.StringInterpolation();
  *(void *)(v0 + 272) = swift_task_alloc();
  sub_100043E7C();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_100114848()
{
  uint64_t v47 = (void *)(v0 + 16);
  if (qword_10022C500 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v2 = type metadata accessor for LogMessage();
  sub_100044798(v2);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  *(void *)(v0 + 40) = sub_100043478(&qword_100230B78);
  *(void *)(v0 + 16) = &type metadata for MercuryCacheDataFetcher;
  id v3 = (id)AMSLogKey();
  if (v3)
  {
    char v1 = v3;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    uint64_t v15 = sub_10004B4EC(v7, v8, v9, v10, v11, v12, v13, v14, v46, v47);
    *(void *)(v0 + 200) = swift_getMetatypeMetadata();
    *(void *)(v0 + 176) = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 176);
    v16._uint64_t countAndFlagsBits = 5972026;
    v16._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    *(void *)(v0 + 168) = &type metadata for String;
    *(void *)(v0 + 144) = v4;
    *(void *)(v0 + 152) = v6;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 144);
    v17._uint64_t countAndFlagsBits = 93;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    sub_100020B40();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    uint64_t v26 = sub_10004B4EC(v18, v19, v20, v21, v22, v23, v24, v25, v46, v47);
    *(void *)(v0 + 72) = swift_getMetatypeMetadata();
    *(void *)(v0 + 48) = v26;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 48);
    v27._uint64_t countAndFlagsBits = 58;
    v27._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    sub_100020B40();
  }
  uint64_t v28 = *(void **)(v0 + 240);
  sub_10004377C((uint64_t)v1);
  id v29 = objc_msgSend(v28, "ams_DSID");
  if (v29)
  {
    id v30 = v29;
    *(void *)(v0 + 104) = sub_10004D510(0, (unint64_t *)&qword_100231E00);
    *(void *)(v0 + 80) = v30;
  }
  else
  {
    *(_OWORD *)(v0 + 80) = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
  }
  int v31 = *(unsigned __int8 *)(v0 + 233);
  uint64_t v32 = *(void *)(v0 + 264);
  static LogMessage.sensitive(_:)();
  sub_1000423CC(v0 + 80);
  _StringGuts.grow(_:)(33);
  *(void *)(v0 + 208) = 0;
  *(void *)(v0 + 216) = 0xE000000000000000;
  v33._object = (void *)0x80000001001D3B20;
  v33._uint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v33);
  v34._uint64_t countAndFlagsBits = Set.description.getter();
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  v35._uint64_t countAndFlagsBits = 0x646F6D20726F6620;
  v35._object = (void *)0xEB00000000203A65;
  String.append(_:)(v35);
  *(void *)(v0 + 224) = v32;
  *(unsigned char *)(v0 + 232) = v31;
  _print_unlocked<A, B>(_:_:)();
  uint64_t v36 = *(void *)(v0 + 208);
  uint64_t v37 = *(void *)(v0 + 216);
  *(void *)(v0 + 136) = &type metadata for String;
  *(void *)(v0 + 112) = v36;
  *(void *)(v0 + 120) = v37;
  static LogMessage.safe(_:)();
  sub_1000423CC(v0 + 112);
  uint64_t v38 = static os_log_type_t.info.getter();
  sub_10004841C(v38);
  swift_bridgeObjectRelease();
  if (v31)
  {
    uint64_t v39 = *(void *)(v0 + 248);
    uint64_t v40 = *(void **)(v0 + 240);
    objc_allocWithZone((Class)AMSMercuryCacheFetchTask);
    id v41 = v40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    *(void *)(v0 + 280) = sub_1001157C4(v41, v39);
    uint64_t v42 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v42;
    void *v42 = v0;
    v42[1] = sub_100114D14;
    return sub_100114ED8();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_task_dealloc();
    uint64_t v44 = sub_1000462C8();
    return v45(v44);
  }
}

uint64_t sub_100114D14(uint64_t a1)
{
  sub_1000447B0();
  uint64_t v5 = v4;
  sub_100044DDC();
  void *v6 = v5;
  uint64_t v7 = *v2;
  sub_100044DDC();
  *uint64_t v8 = v7;
  *(void *)(v5 + 296) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v5 + 304) = a1;
  }
  sub_100043E7C();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_100114E0C()
{
  sub_100020958();

  swift_task_dealloc();
  uint64_t v1 = sub_1000462C8();
  return v2(v1);
}

uint64_t sub_100114E70()
{
  sub_100020958();

  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100114ED8()
{
  sub_100020958();
  *(void *)(v1 + 256) = v0;
  type metadata accessor for LogMessage.StringInterpolation();
  *(void *)(v1 + 264) = swift_task_alloc();
  sub_100043E7C();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_100114F60()
{
  id v1 = [*(id *)(v0 + 256) perform];
  *(void *)(v0 + 272) = v1;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 248;
  *(void *)(v0 + 24) = sub_10011507C;
  uint64_t v2 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_100115754;
  *(void *)(v0 + 104) = &unk_100214108;
  *(void *)(v0 + 112) = v2;
  [v1 resultWithCompletion:v0 + 80];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_10011507C()
{
  sub_100020958();
  sub_1000447B0();
  sub_100044DDC();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 280) = *(void *)(v3 + 48);
  sub_100043E7C();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_10011515C()
{
  uint64_t v1 = *(void **)(v0 + 248);

  static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
  uint64_t v2 = v0 + 120;
  if (qword_10022C500 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void **)(v0 + 256);
  sub_100043478(&qword_10022E560);
  uint64_t v4 = type metadata accessor for LogMessage();
  sub_100044798(v4);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  *(void *)(v0 + 144) = sub_10004D510(0, &qword_100230B88);
  *(void *)(v0 + 120) = v3;
  id v5 = v3;
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788((void *)(v0 + 120), *(void *)(v0 + 144));
    uint64_t DynamicType = swift_getDynamicType();
    *(void *)(v0 + 240) = swift_getMetatypeMetadata();
    *(void *)(v0 + 216) = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 216);
    v12._uint64_t countAndFlagsBits = 5972026;
    v12._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    *(void *)(v0 + 176) = &type metadata for String;
    *(void *)(v0 + 152) = v8;
    *(void *)(v0 + 160) = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    uint64_t v2 = v0 + 120;
    sub_1000423CC(v0 + 152);
    v13._uint64_t countAndFlagsBits = 93;
    v13._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100020B40();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788((void *)(v0 + 120), *(void *)(v0 + 144));
    uint64_t v14 = swift_getDynamicType();
    *(void *)(v0 + 208) = swift_getMetatypeMetadata();
    *(void *)(v0 + 184) = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 184);
    v15._uint64_t countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    sub_100020B40();
  }
  sub_10004377C(v2);
  LogMessage.init(stringLiteral:)();
  uint64_t v16 = static os_log_type_t.error.getter();
  sub_10004841C(v16);
  swift_bridgeObjectRelease();
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  (id)AMSError();

  swift_willThrow();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_100115544()
{
  uint64_t v1 = *(void **)(v0 + 272);
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001155BC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100115680;
  return sub_1001147B8();
}

uint64_t sub_100115680()
{
  sub_100020958();
  uint64_t v3 = v2;
  sub_1000447B0();
  uint64_t v4 = *v1;
  sub_100044DDC();
  *id v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_100115754(uint64_t result, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 32);
  if (a3)
  {
    id v4 = a3;
    return sub_1000EB8AC(v3, v4);
  }
  else if (a2)
  {
    id v5 = a2;
    return sub_1000EB92C(v3, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1001157C4(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [v3 initWithAccount:a1 bag:a2 cacheTypeIDs:isa clientIdentifier:v7 clientVersion:v8];

  swift_unknownObjectRelease();
  return v9;
}

void *sub_1001158B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022E670);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for MercuryCacheUpdateData.DataKind(0);
  uint64_t v41 = *(void *)(updated - 8);
  uint64_t v8 = __chkstk_darwin(updated);
  uint64_t v39 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v38 = (uint64_t)&v36 - v10;
  uint64_t v11 = a1 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(a1 + 56);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  unint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v17 = 0;
  uint64_t v40 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v14)
    {
      unint64_t v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v19 = v18 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v20 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v20 >= v15) {
      goto LABEL_34;
    }
    unint64_t v21 = *(void *)(v11 + 8 * v20);
    ++v17;
    if (!v21)
    {
      int64_t v17 = v20 + 1;
      if (v20 + 1 >= v15) {
        goto LABEL_34;
      }
      unint64_t v21 = *(void *)(v11 + 8 * v17);
      if (!v21)
      {
        int64_t v17 = v20 + 2;
        if (v20 + 2 >= v15) {
          goto LABEL_34;
        }
        unint64_t v21 = *(void *)(v11 + 8 * v17);
        if (!v21)
        {
          int64_t v17 = v20 + 3;
          if (v20 + 3 >= v15) {
            goto LABEL_34;
          }
          unint64_t v21 = *(void *)(v11 + 8 * v17);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_22:
    if (!*(void *)(a2 + 16))
    {
      sub_100021AC0((uint64_t)v6, 1, 1, updated);
      goto LABEL_28;
    }
    uint64_t v23 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v19);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_100042ADC(v24, v25);
    if (v27)
    {
      sub_1001197E0(*(void *)(a2 + 56) + *(void *)(v41 + 72) * v26, (uint64_t)v6, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
      uint64_t v28 = 0;
    }
    else
    {
      uint64_t v28 = 1;
    }
    sub_100021AC0((uint64_t)v6, v28, 1, updated);
    swift_bridgeObjectRelease();
    if (sub_10004FD40((uint64_t)v6, 1, updated) == 1)
    {
LABEL_28:
      unint64_t result = (void *)sub_10002CC68((uint64_t)v6, &qword_10022E670);
    }
    else
    {
      uint64_t v37 = type metadata accessor for MercuryCacheUpdateData.DataKind;
      uint64_t v29 = v38;
      sub_10011978C((uint64_t)v6, v38, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
      sub_10011978C(v29, v39, (void (*)(void))v37);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v40 = (void *)sub_100070BA8(0, v40[2] + 1, 1, (uint64_t)v40);
      }
      unint64_t v31 = v40[2];
      unint64_t v30 = v40[3];
      uint64_t v32 = (uint64_t (*)(uint64_t))(v31 + 1);
      if (v31 >= v30 >> 1)
      {
        uint64_t v37 = (uint64_t (*)(uint64_t))(v31 + 1);
        Swift::String v35 = (void *)sub_100070BA8(v30 > 1, v31 + 1, 1, (uint64_t)v40);
        uint64_t v32 = v37;
        uint64_t v40 = v35;
      }
      uint64_t v33 = v39;
      Swift::String v34 = v40;
      void v40[2] = v32;
      unint64_t result = (void *)sub_10011978C(v33, (uint64_t)v34+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v31, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    }
  }
  int64_t v22 = v20 + 4;
  if (v22 >= v15)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    swift_release();
    return v40;
  }
  unint64_t v21 = *(void *)(v11 + 8 * v22);
  if (v21)
  {
    int64_t v17 = v22;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v17 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v17 >= v15) {
      goto LABEL_34;
    }
    unint64_t v21 = *(void *)(v11 + 8 * v17);
    ++v22;
    if (v21) {
      goto LABEL_21;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100115CB8(uint64_t a1)
{
  uint64_t updated = type metadata accessor for MercuryCacheUpdateData.DataKind(0);
  uint64_t v36 = *(void *)(updated - 8);
  uint64_t v2 = __chkstk_darwin(updated);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  NSString v7 = (char *)&v31 - v6;
  __chkstk_darwin(v5);
  uint64_t v35 = (uint64_t)&v31 - v8;
  sub_10005370C(a1, v45);
  uint64_t v46 = v45[0];
  uint64_t v32 = v45[1];
  int64_t v9 = v45[3];
  unint64_t v10 = v45[4];
  int64_t v34 = (unint64_t)(v45[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v12 = _swiftEmptyArrayStorage;
  uint64_t v33 = v7;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v9 << 6);
      goto LABEL_20;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v15 >= v34) {
      goto LABEL_30;
    }
    unint64_t v16 = *(void *)(v32 + 8 * v15);
    int64_t v17 = v9 + 1;
    if (!v16)
    {
      int64_t v17 = v9 + 2;
      if (v9 + 2 >= v34) {
        goto LABEL_30;
      }
      unint64_t v16 = *(void *)(v32 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v9 + 3;
        if (v9 + 3 >= v34) {
          goto LABEL_30;
        }
        unint64_t v16 = *(void *)(v32 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v9 + 4;
          if (v9 + 4 >= v34) {
            goto LABEL_30;
          }
          unint64_t v16 = *(void *)(v32 + 8 * v17);
          if (!v16)
          {
            int64_t v17 = v9 + 5;
            if (v9 + 5 >= v34) {
              goto LABEL_30;
            }
            unint64_t v16 = *(void *)(v32 + 8 * v17);
            if (!v16)
            {
              int64_t v18 = v9 + 6;
              while (v18 < v34)
              {
                unint64_t v16 = *(void *)(v32 + 8 * v18++);
                if (v16)
                {
                  int64_t v17 = v18 - 1;
                  goto LABEL_19;
                }
              }
LABEL_30:
              swift_release();
              return (uint64_t)v12;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    int64_t v9 = v17;
LABEL_20:
    uint64_t v19 = v35;
    sub_1001197E0(*(void *)(v46 + 56) + *(void *)(v36 + 72) * v14, v35, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    sub_10011978C(v19, (uint64_t)v7, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    sub_1001197E0((uint64_t)v7, (uint64_t)v4, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v43 = 0;
      long long v41 = 0u;
      long long v42 = 0u;
      sub_100119840((uint64_t)v4, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    }
    else
    {
      *((void *)&v42 + 1) = type metadata accessor for MercuryCacheUpdateData.Success(0);
      uint64_t v43 = &off_100214498;
      int64_t v20 = sub_10003BAA4((uint64_t *)&v41);
      sub_10011978C((uint64_t)v4, (uint64_t)v20, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Success);
    }
    sub_100119840((uint64_t)v7, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    if (*((void *)&v42 + 1))
    {
      sub_100028270(&v41, (uint64_t)v44);
      sub_100028270(v44, (uint64_t)&v41);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100070BF0();
        uint64_t v12 = v29;
      }
      unint64_t v21 = v4;
      unint64_t v22 = v12[2];
      uint64_t v23 = v9;
      if (v22 >= v12[3] >> 1)
      {
        sub_100070BF0();
        uint64_t v12 = v30;
      }
      uint64_t v24 = sub_10003660C((uint64_t)&v41, *((uint64_t *)&v42 + 1));
      __chkstk_darwin(v24);
      unint64_t v26 = (char *)&v31 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v27 + 16))(v26);
      uint64_t v39 = type metadata accessor for MercuryCacheUpdateData.Success(0);
      uint64_t v40 = &off_100214498;
      uint64_t v28 = sub_10003BAA4((uint64_t *)&v38);
      sub_10011978C((uint64_t)v26, (uint64_t)v28, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Success);
      v12[2] = v22 + 1;
      sub_100028270(&v38, (uint64_t)&v12[5 * v22 + 4]);
      uint64_t result = sub_10004377C((uint64_t)&v41);
      int64_t v9 = v23;
      uint64_t v4 = v21;
      NSString v7 = v33;
    }
    else
    {
      uint64_t result = sub_10002CC68((uint64_t)&v41, &qword_100230BA8);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100116208()
{
  sub_100020958();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = sub_100043478(&qword_100230B98);
  sub_1000208F0(v3);
  v1[4] = sub_10003634C();
  uint64_t updated = type metadata accessor for MercuryCacheUpdateResponse();
  v1[5] = updated;
  sub_1000208F0(updated);
  v1[6] = sub_10003634C();
  sub_100043E7C();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_1001162AC()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  sub_100117260(v0[2], v2);
  if (sub_10004FD40(v2, 1, v1) == 1)
  {
    sub_10002CC68(v0[4], &qword_100230B98);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[13] = (uint64_t)v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100116848;
    return sub_100116968();
  }
  else
  {
    uint64_t v5 = (uint64_t *)v0[6];
    uint64_t v6 = (uint64_t *)v0[3];
    sub_10011978C(v0[4], (uint64_t)v5, (void (*)(void))type metadata accessor for MercuryCacheUpdateResponse);
    uint64_t v7 = sub_100117484(v5);
    v0[7] = v7;
    uint64_t updated = type metadata accessor for MercuryCacheDataUpdateHandler();
    v0[8] = updated;
    uint64_t v9 = (char *)v6 + *(int *)(updated + 24);
    uint64_t v10 = *v5;
    uint64_t v11 = swift_task_alloc();
    *(void *)(v11 + 16) = v9;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_100118CE4((uint64_t)sub_100118CC4, v11, v10);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    v0[9] = sub_100115CB8(v12);
    swift_release();
    uint64_t v13 = *v6;
    unint64_t v14 = (void *)swift_task_alloc();
    v0[10] = (uint64_t)v14;
    *unint64_t v14 = v0;
    v14[1] = sub_1001164CC;
    return sub_10011F3AC(v7, v13);
  }
}

uint64_t sub_1001164CC()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v1 = *v0;
  sub_100020EBC();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_100043E7C();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_1001165B0()
{
  uint64_t v1 = (void *)(v0[3] + *(int *)(v0[8] + 44));
  sub_100049788(v1, v1[3]);
  sub_10010FF2C();
  v0[11] = v2;
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))((char *)&dword_100234510 + dword_100234510);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[12] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100116688;
  return v5();
}

uint64_t sub_100116688()
{
  uint64_t v2 = *v1;
  sub_100020EBC();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (v0) {
    swift_errorRelease();
  }
  swift_release();
  sub_100043E7C();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1001167C4()
{
  sub_100020958();
  sub_100119840(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for MercuryCacheUpdateResponse);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100116848()
{
  sub_100020958();
  uint64_t v1 = *v0;
  sub_100020EBC();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_100116968()
{
  sub_100020958();
  *(void *)(v1 + 16) = v0;
  *(unsigned char *)(v1 + 152) = v2;
  uint64_t updated = type metadata accessor for MercuryCacheUpdateData.DataKind(0);
  *(void *)(v1 + 24) = updated;
  sub_1000208F0(updated);
  *(void *)(v1 + 32) = sub_10003634C();
  uint64_t v4 = type metadata accessor for Date();
  *(void *)(v1 + 40) = v4;
  sub_100044798(v4);
  *(void *)(v1 + 48) = v5;
  *(void *)(v1 + 56) = sub_10003634C();
  uint64_t v6 = sub_100043478(&qword_100230BD8);
  sub_1000208F0(v6);
  *(void *)(v1 + 64) = sub_10003634C();
  uint64_t v7 = type metadata accessor for MercuryCacheMetadata(0);
  *(void *)(v1 + 72) = v7;
  sub_100044798(v7);
  *(void *)(v1 + 80) = v8;
  *(void *)(v1 + 88) = swift_task_alloc();
  *(void *)(v1 + 96) = swift_task_alloc();
  *(void *)(v1 + 104) = swift_task_alloc();
  *(void *)(v1 + 112) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for MercuryCacheUpdateData.Failure(0);
  *(void *)(v1 + 120) = v9;
  sub_1000208F0(v9);
  *(void *)(v1 + 128) = sub_10003634C();
  sub_100043E7C();
  return _swift_task_switch(v10, v11, v12);
}

void sub_100116AC4()
{
  uint64_t v64 = *(void *)(v0 + 120);
  uint64_t v65 = *(void *)(v0 + 128);
  uint64_t v68 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t updated = (int *)type metadata accessor for MercuryCacheDataUpdateHandler();
  uint64_t v63 = v2;
  Swift::Int v3 = *(void *)(v2 + updated[6]);
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v4, v3);
  Swift::Int v6 = v5;
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v7, v6);
  int64_t v9 = 0;
  uint64_t v60 = v8 + 56;
  uint64_t v66 = v8;
  uint64_t v10 = -1;
  uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
  if (-v11 < 64) {
    uint64_t v10 = ~(-1 << -(char)v11);
  }
  uint64_t v12 = v10 & *(void *)(v8 + 56);
  int64_t v61 = (unint64_t)(63 - v11) >> 6;
  uint64_t v62 = (void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  uint64_t v59 = (void (**)(uint64_t, uint64_t))(v1 + 8);
  uint64_t v13 = _swiftEmptyArrayStorage;
  while (1)
  {
    *(void *)(v0 + 136) = v13;
    uint64_t v71 = v13;
    if (!v12) {
      break;
    }
    sub_100049A54();
    uint64_t v69 = v12;
    int64_t v70 = v9;
    unint64_t v15 = v14 | (v9 << 6);
LABEL_20:
    int64_t v20 = *(uint64_t **)(v0 + 128);
    uint64_t v21 = *(void *)(v0 + 40);
    uint64_t v22 = *(void *)(v0 + 16);
    uint64_t v23 = *(void *)(v22 + updated[8]);
    uint64_t v24 = (uint64_t *)(*(void *)(v66 + 48) + 16 * v15);
    uint64_t v25 = *(void *)(v22 + updated[10]);
    uint64_t v27 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v28 = v22 + updated[9];
    swift_bridgeObjectRetain_n();
    Date.addingTimeInterval(_:)();
    (*v62)((char *)v20 + *(int *)(v64 + 28), v28, v21);
    *int64_t v20 = v27;
    *(void *)(v65 + 8) = v26;
    uint64_t v29 = (char *)v20 + *(int *)(v64 + 24);
    *(_OWORD *)uint64_t v29 = xmmword_1001C6950;
    *((void *)v29 + 2) = v23;
    *((void *)v29 + 3) = v25;
    v29[32] = 0;
    uint64_t v30 = *(void *)(v63 + 8);
    if (*(void *)(v30 + 16) && (unint64_t v31 = sub_100042ADC(v27, v26), (v32 & 1) != 0))
    {
      sub_1001197E0(*(void *)(v30 + 56) + *(void *)(v68 + 72) * v31, *(void *)(v0 + 64), (void (*)(void))type metadata accessor for MercuryCacheMetadata);
      uint64_t v33 = 0;
    }
    else
    {
      uint64_t v33 = 1;
    }
    int64_t v9 = v70;
    uint64_t v13 = v71;
    uint64_t v12 = v69;
    uint64_t v35 = *(void *)(v0 + 64);
    uint64_t v34 = *(void *)(v0 + 72);
    sub_100021AC0(v35, v33, 1, v34);
    swift_bridgeObjectRelease();
    int v36 = sub_10004FD40(v35, 1, v34);
    uint64_t v37 = *(void *)(v0 + 128);
    uint64_t v38 = *(void *)(v0 + 64);
    if (v36 == 1)
    {
      uint64_t v40 = *(void *)(v0 + 88);
      uint64_t v39 = *(void **)(v0 + 96);
      uint64_t v41 = *(void *)(v0 + 32);
      sub_10002CC68(v38, &qword_100230BD8);
      sub_1001197E0(v37, v41, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Failure);
      swift_storeEnumTagMultiPayload();
      sub_10011B404(v41, v39);
      sub_1001197E0((uint64_t)v39, v40, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = (void *)sub_10004B524();
      }
      unint64_t v43 = v13[2];
      unint64_t v42 = v13[3];
      unint64_t v44 = v43 + 1;
      if (v43 >= v42 >> 1) {
        uint64_t v13 = (void *)sub_1000463D4(v42);
      }
      uint64_t v45 = (uint64_t *)(v0 + 88);
      uint64_t v46 = (uint64_t *)(v0 + 96);
    }
    else
    {
      uint64_t v48 = *(void *)(v0 + 104);
      uint64_t v47 = *(void *)(v0 + 112);
      uint64_t v49 = *(void *)(v0 + 56);
      uint64_t v50 = *(void *)(v0 + 40);
      int v51 = *(unsigned __int8 *)(v0 + 152);
      sub_10011978C(v38, v47, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
      static Date.now.getter();
      sub_10011A77C(v37, v51, v49);
      (*v59)(v49, v50);
      sub_1001197E0(v47, v48, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = (void *)sub_10004B524();
      }
      unint64_t v43 = v13[2];
      unint64_t v52 = v13[3];
      unint64_t v44 = v43 + 1;
      if (v43 >= v52 >> 1) {
        uint64_t v13 = (void *)sub_1000463D4(v52);
      }
      uint64_t v45 = (uint64_t *)(v0 + 104);
      uint64_t v46 = (uint64_t *)(v0 + 112);
    }
    uint64_t v53 = *v46;
    uint64_t v54 = *v45;
    uint64_t v55 = *(void *)(v0 + 128);
    uint64_t v13[2] = v44;
    sub_10011978C(v54, (uint64_t)v13+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v43, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
    sub_100119840(v53, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
    sub_100119840(v55, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Failure);
  }
  int64_t v16 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
LABEL_40:
    __break(1u);
    return;
  }
  if (v16 >= v61) {
    goto LABEL_36;
  }
  unint64_t v17 = *(void *)(v60 + 8 * v16);
  int64_t v18 = v9 + 1;
  if (v17) {
    goto LABEL_19;
  }
  int64_t v18 = v9 + 2;
  if (v9 + 2 >= v61) {
    goto LABEL_36;
  }
  unint64_t v17 = *(void *)(v60 + 8 * v18);
  if (v17) {
    goto LABEL_19;
  }
  int64_t v18 = v9 + 3;
  if (v9 + 3 >= v61) {
    goto LABEL_36;
  }
  unint64_t v17 = *(void *)(v60 + 8 * v18);
  if (v17)
  {
LABEL_19:
    uint64_t v69 = (v17 - 1) & v17;
    int64_t v70 = v18;
    unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
    goto LABEL_20;
  }
  uint64_t v19 = v9 + 4;
  if (v9 + 4 < v61)
  {
    unint64_t v17 = *(void *)(v60 + 8 * v19);
    if (!v17)
    {
      while (1)
      {
        int64_t v18 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_40;
        }
        if (v18 >= v61) {
          goto LABEL_36;
        }
        unint64_t v17 = *(void *)(v60 + 8 * v18);
        ++v19;
        if (v17) {
          goto LABEL_19;
        }
      }
    }
    int64_t v18 = v9 + 4;
    goto LABEL_19;
  }
LABEL_36:
  Swift::String v56 = *(uint64_t **)(v0 + 16);
  swift_release();
  uint64_t v57 = *v56;
  Swift::String v58 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v58;
  void *v58 = v0;
  v58[1] = sub_10011707C;
  sub_10011F3AC((uint64_t)v13, v57);
}

uint64_t sub_10011707C()
{
  sub_1000447B0();
  uint64_t v1 = *v0;
  sub_100020EBC();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::Int v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_100117260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100043478(&qword_100230B98);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t updated = (int *)type metadata accessor for MercuryCacheDataUpdateHandler();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + updated[9], v5);
    double v13 = *(double *)(v2 + updated[7]);
    uint64_t v14 = *(void *)(v2 + updated[8]);
    double v15 = *(double *)(v2 + updated[10]);
    uint64_t v16 = swift_bridgeObjectRetain();
    sub_10012E354(v16, (uint64_t)v8, v14, (uint64_t)v11, v13, v15);
    uint64_t v17 = type metadata accessor for MercuryCacheUpdateResponse();
    if (sub_10004FD40((uint64_t)v11, 1, v17) == 1)
    {
      sub_10002CC68((uint64_t)v11, &qword_100230B98);
      uint64_t v18 = a2;
      uint64_t v19 = 1;
    }
    else
    {
      sub_10011978C((uint64_t)v11, a2, (void (*)(void))type metadata accessor for MercuryCacheUpdateResponse);
      uint64_t v18 = a2;
      uint64_t v19 = 0;
    }
    return sub_100021AC0(v18, v19, 1, v17);
  }
  else
  {
    uint64_t v20 = type metadata accessor for MercuryCacheUpdateResponse();
    return sub_100021AC0(a2, 1, 1, v20);
  }
}

uint64_t sub_100117484(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t updated = type metadata accessor for MercuryCacheUpdateData.Success(0);
  __chkstk_darwin(updated);
  uint64_t v149 = (uint64_t *)((char *)&v139 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100043478(&qword_100230BC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v148 = (char *)&v139 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = type metadata accessor for MercuryCacheUpdateData.Failure(0);
  uint64_t v7 = __chkstk_darwin(v147);
  uint64_t v153 = (uint64_t)&v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v158 = (uint64_t *)((char *)&v139 - v9);
  uint64_t v169 = type metadata accessor for MercuryCacheUpdateData.DataKind(0);
  uint64_t v151 = *(void *)(v169 - 8);
  uint64_t v10 = __chkstk_darwin(v169);
  uint64_t v159 = (uint64_t)&v139 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v161 = (uint64_t)&v139 - v12;
  uint64_t v13 = sub_100043478(&qword_10022E670);
  __chkstk_darwin(v13 - 8);
  uint64_t v167 = (uint64_t *)((char *)&v139 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v173 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v173 - 8);
  uint64_t v16 = __chkstk_darwin(v173);
  uint64_t v143 = (char *)&v139 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v146 = (char *)&v139 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v145 = (char *)&v139 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  id v157 = (char *)&v139 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  id v156 = (char *)&v139 - v25;
  __chkstk_darwin(v24);
  uint64_t v171 = (char *)&v139 - v26;
  uint64_t v155 = type metadata accessor for MercuryCacheMetadata(0);
  uint64_t v172 = *(void *)(v155 - 8);
  uint64_t v27 = __chkstk_darwin(v155);
  id v154 = (char *)&v139 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v174 = (uint64_t *)((char *)&v139 - v30);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v139 - v32;
  uint64_t v34 = __chkstk_darwin(v31);
  int v36 = (char *)&v139 - v35;
  __chkstk_darwin(v34);
  uint64_t v175 = (uint64_t *)((char *)&v139 - v37);
  uint64_t v38 = sub_100043478(&qword_100230BC8);
  uint64_t v39 = __chkstk_darwin(v38 - 8);
  uint64_t v41 = (uint64_t *)((char *)&v139 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v39);
  uint64_t v165 = (uint64_t *)((char *)&v139 - v42);
  uint64_t v43 = *a1;
  uint64_t v178 = v2;
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_100118CE4((uint64_t)sub_10011976C, (uint64_t)v177, v43);
  uint64_t v142 = 0;
  swift_bridgeObjectRelease();
  uint64_t v164 = v2;
  uint64_t v45 = *(void *)(v2 + 8);
  uint64_t v46 = *(void *)(v45 + 64);
  uint64_t v144 = v45 + 64;
  uint64_t v47 = 1 << *(unsigned char *)(v45 + 32);
  uint64_t v48 = -1;
  if (v47 < 64) {
    uint64_t v48 = ~(-1 << v47);
  }
  unint64_t v49 = v48 & v46;
  uint64_t v168 = (void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v141 = v15;
  uint64_t v162 = (void (**)(char *, uint64_t))(v15 + 8);
  int64_t v152 = (unint64_t)(v47 + 63) >> 6;
  int64_t v140 = v152 - 1;
  uint64_t v160 = v45;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v166 = 0;
  int v51 = _swiftEmptyArrayStorage;
  unint64_t v52 = &qword_100230BD0;
  uint64_t v163 = v41;
  if (!v49) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v170 = (v49 - 1) & v49;
  uint64_t v53 = v165;
  unint64_t v54 = __clz(__rbit64(v49)) | (v166 << 6);
  while (2)
  {
    uint64_t v55 = *(void *)(v160 + 56);
    Swift::String v56 = (void *)(*(void *)(v160 + 48) + 16 * v54);
    uint64_t v57 = v56[1];
    void *v41 = *v56;
    v41[1] = v57;
    uint64_t v58 = v55 + *(void *)(v172 + 72) * v54;
    uint64_t v59 = sub_100043478(v52);
    sub_1001197E0(v58, (uint64_t)v41 + *(int *)(v59 + 48), (void (*)(void))type metadata accessor for MercuryCacheMetadata);
    sub_100021AC0((uint64_t)v41, 0, 1, v59);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100119898((uint64_t)v41, (uint64_t)v53, &qword_100230BC8);
      uint64_t v64 = sub_100043478(v52);
      if (sub_10004FD40((uint64_t)v53, 1, v64) == 1)
      {
        swift_release();
        uint64_t v88 = swift_retain();
        uint64_t v89 = sub_100192D7C(v88);
        uint64_t v90 = swift_bridgeObjectRetain();
        uint64_t v91 = sub_10012FE70(v90, (uint64_t)v89);
        swift_bridgeObjectRelease();
        swift_retain();
        uint64_t v92 = sub_1001158B8((uint64_t)v91, v44);
        swift_release();
        swift_release();
        uint64_t v93 = v92[2];
        if (v93)
        {
          uint64_t v94 = *(unsigned __int8 *)(v151 + 80);
          uint64_t v167 = v92;
          uint64_t v95 = (uint64_t)v92 + ((v94 + 32) & ~v94);
          uint64_t v175 = *(uint64_t **)(v151 + 72);
          uint64_t v171 = (char *)(v141 + 32);
          uint64_t v96 = (uint64_t)v154;
          uint64_t v97 = v174;
          do
          {
            uint64_t v176 = v51;
            uint64_t v98 = v161;
            sub_1001197E0(v95, v161, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
            uint64_t v99 = v159;
            sub_1001197E0(v98, v159, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              Swift::String v100 = v158;
              sub_10011978C(v99, (uint64_t)v158, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Failure);
              uint64_t v101 = v100[1];
              uint64_t v170 = *v100;
              uint64_t v102 = v147;
              Swift::String v103 = *v168;
              uint64_t v104 = v173;
              (*v168)(v156, (char *)v100 + *(int *)(v147 + 20), v173);
              v103(v157, (char *)v100 + *(int *)(v102 + 28), v104);
              uint64_t v105 = (uint64_t)v100;
              uint64_t v106 = v153;
              sub_1001197E0(v105, v153, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Failure);
              uint64_t v107 = v106 + *(int *)(v102 + 24);
              if (*(unsigned char *)(v107 + 32))
              {
                swift_bridgeObjectRetain();
                sub_100119840(v106, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Failure);
                uint64_t v108 = type metadata accessor for RetryConfiguration(0);
                uint64_t v109 = v148;
                sub_100021AC0((uint64_t)v148, 1, 1, v108);
                int v51 = v176;
                uint64_t v110 = v171;
              }
              else
              {
                uint64_t v126 = v102;
                uint64_t v127 = *(void *)(v107 + 16);
                if (*(void *)(v107 + 8)) {
                  v107 += 24;
                }
                uint64_t v128 = *(void *)v107;
                uint64_t v129 = v143;
                v103(v143, (char *)(v106 + *(int *)(v126 + 28)), v104);
                uint64_t v130 = v148;
                *(void *)uint64_t v148 = 0;
                *((void *)v130 + 1) = v127;
                *((void *)v130 + 2) = v128;
                uint64_t v131 = type metadata accessor for RetryConfiguration(0);
                uint64_t v110 = v171;
                long long v132 = v129;
                uint64_t v96 = (uint64_t)v154;
                (*(void (**)(char *, char *, uint64_t))v171)(&v130[*(int *)(v131 + 28)], v132, v104);
                swift_bridgeObjectRetain();
                sub_100119840(v153, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Failure);
                uint64_t v133 = v131;
                uint64_t v109 = v130;
                sub_100021AC0((uint64_t)v130, 0, 1, v133);
                int v51 = v176;
              }
              sub_100119840(v161, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
              sub_100119840((uint64_t)v158, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Failure);
              *uint64_t v97 = v170;
              v97[1] = v101;
              uint64_t v134 = v155;
              uint64_t v135 = *(void (**)(char *, char *, uint64_t))v110;
              (*(void (**)(char *, char *, uint64_t))v110)((char *)v174 + *(int *)(v155 + 20), v156, v104);
              v135((char *)v174 + *(int *)(v134 + 24), v157, v104);
              uint64_t v136 = *(int *)(v134 + 28);
              uint64_t v97 = v174;
              sub_100119898((uint64_t)v109, (uint64_t)v174 + v136, &qword_100230BC0);
            }
            else
            {
              sub_100119840(v98, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
              uint64_t v111 = v149;
              sub_10011978C(v99, (uint64_t)v149, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Success);
              uint64_t v112 = v111[1];
              uint64_t v170 = *v111;
              uint64_t v113 = updated;
              uint64_t v114 = *v168;
              uint64_t v115 = v145;
              uint64_t v116 = v173;
              (*v168)(v145, (char *)v111 + *(int *)(updated + 20), v173);
              uint64_t v117 = (char *)v111 + *(int *)(v113 + 28);
              uint64_t v118 = v146;
              v114(v146, v117, v116);
              swift_bridgeObjectRetain();
              sub_100119840((uint64_t)v111, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Success);
              uint64_t v119 = v155;
              uint64_t v120 = (uint64_t)v174 + *(int *)(v155 + 28);
              uint64_t v121 = type metadata accessor for RetryConfiguration(0);
              sub_100021AC0(v120, 1, 1, v121);
              unint64_t v122 = v171;
              uint64_t *v174 = v170;
              v174[1] = v112;
              BOOL v123 = *(void (**)(char *, char *, uint64_t))v122;
              (*(void (**)(char *, char *, uint64_t))v122)((char *)v174 + *(int *)(v119 + 20), v115, v116);
              id v124 = v118;
              uint64_t v97 = v174;
              uint64_t v125 = v116;
              uint64_t v96 = (uint64_t)v154;
              v123((char *)v174 + *(int *)(v119 + 24), v124, v125);
              int v51 = v176;
            }
            sub_1001197E0((uint64_t)v97, v96, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              int v51 = (void *)sub_100070B18(0, v51[2] + 1, 1, (uint64_t)v51);
            }
            unint64_t v138 = v51[2];
            unint64_t v137 = v51[3];
            if (v138 >= v137 >> 1) {
              int v51 = (void *)sub_100070B18(v137 > 1, v138 + 1, 1, (uint64_t)v51);
            }
            v51[2] = v138 + 1;
            sub_10011978C(v96, (uint64_t)v51+ ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80))+ *(void *)(v172 + 72) * v138, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
            sub_100119840((uint64_t)v97, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
            v95 += (uint64_t)v175;
            --v93;
          }
          while (v93);
        }
        swift_bridgeObjectRelease();
        return (uint64_t)v51;
      }
      uint64_t v176 = v51;
      uint64_t v65 = v52;
      uint64_t v66 = (uint64_t)v36;
      uint64_t v67 = v33;
      uint64_t v69 = *v53;
      uint64_t v68 = v53[1];
      sub_10011978C((uint64_t)v53 + *(int *)(v64 + 48), (uint64_t)v175, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
      int64_t v70 = (int *)type metadata accessor for MercuryCacheDataUpdateHandler();
      uint64_t v71 = v164;
      Swift::Int v72 = *(void *)(v164 + v70[6] + 8);
      swift_bridgeObjectRetain();
      uint64_t v73 = swift_bridgeObjectRetain();
      sub_1001A0DD0(v73, v72);
      sub_100148B90(v69, v68, v74);
      char v76 = v75;
      swift_bridgeObjectRelease();
      uint64_t v77 = *(void *)(v71 + v70[8]);
      (*v168)(v171, (char *)(v71 + v70[9]), v173);
      double v78 = *(double *)(v71 + v70[10]);
      if (*(void *)(v44 + 16))
      {
        unint64_t v79 = sub_100042ADC(v69, v68);
        uint64_t v33 = v67;
        if (v80)
        {
          sub_1001197E0(*(void *)(v44 + 56) + *(void *)(v151 + 72) * v79, (uint64_t)v167, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
          uint64_t v81 = 0;
        }
        else
        {
          uint64_t v81 = 1;
        }
      }
      else
      {
        uint64_t v81 = 1;
        uint64_t v33 = v67;
      }
      int v36 = (char *)v66;
      unint64_t v52 = v65;
      uint64_t v82 = (uint64_t)v167;
      sub_100021AC0((uint64_t)v167, v81, 1, v169);
      swift_bridgeObjectRelease();
      int v83 = v76 & 1;
      uint64_t v84 = v171;
      sub_100118688(v175, v83, v77, v171, v82, v66, v78);
      sub_10002CC68(v82, &qword_10022E670);
      (*v162)(v84, v173);
      sub_1001197E0(v66, (uint64_t)v33, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
      int v51 = v176;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v41 = v163;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        int v51 = (void *)sub_100070B18(0, v51[2] + 1, 1, (uint64_t)v51);
      }
      unint64_t v87 = v51[2];
      unint64_t v86 = v51[3];
      if (v87 >= v86 >> 1) {
        int v51 = (void *)sub_100070B18(v86 > 1, v87 + 1, 1, (uint64_t)v51);
      }
      v51[2] = v87 + 1;
      sub_10011978C((uint64_t)v33, (uint64_t)v51+ ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80))+ *(void *)(v172 + 72) * v87, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
      sub_100119840((uint64_t)v36, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
      uint64_t result = sub_100119840((uint64_t)v175, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
      unint64_t v49 = v170;
      if (v170) {
        goto LABEL_4;
      }
LABEL_6:
      uint64_t v53 = v165;
      int64_t v60 = v166 + 1;
      if (__OFADD__(v166, 1))
      {
        __break(1u);
        goto LABEL_53;
      }
      if (v60 < v152)
      {
        unint64_t v61 = *(void *)(v144 + 8 * v60);
        if (v61) {
          goto LABEL_9;
        }
        int64_t v62 = v166 + 2;
        ++v166;
        if (v60 + 1 < v152)
        {
          unint64_t v61 = *(void *)(v144 + 8 * v62);
          if (v61) {
            goto LABEL_12;
          }
          int64_t v166 = v60 + 1;
          if (v60 + 2 < v152)
          {
            unint64_t v61 = *(void *)(v144 + 8 * (v60 + 2));
            if (v61)
            {
              v60 += 2;
              goto LABEL_9;
            }
            int64_t v62 = v60 + 3;
            int64_t v166 = v60 + 2;
            if (v60 + 3 < v152) {
              break;
            }
          }
        }
      }
LABEL_23:
      uint64_t v63 = sub_100043478(v52);
      sub_100021AC0((uint64_t)v41, 1, 1, v63);
      uint64_t v170 = 0;
    }
    unint64_t v61 = *(void *)(v144 + 8 * v62);
    if (v61)
    {
LABEL_12:
      int64_t v60 = v62;
LABEL_9:
      uint64_t v170 = (v61 - 1) & v61;
      unint64_t v54 = __clz(__rbit64(v61)) + (v60 << 6);
      int64_t v166 = v60;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v60 = v62 + 1;
    if (__OFADD__(v62, 1)) {
      break;
    }
    if (v60 >= v152)
    {
      int64_t v166 = v140;
      goto LABEL_23;
    }
    unint64_t v61 = *(void *)(v144 + 8 * v60);
    ++v62;
    if (v61) {
      goto LABEL_9;
    }
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MercuryCacheDataUpdateHandler()
{
  uint64_t result = qword_100230C38;
  if (!qword_100230C38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10011854C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100043478(&qword_100230BB8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  *uint64_t v9 = v11;
  v9[1] = v10;
  sub_1001197E0(a2, (uint64_t)v9 + *(int *)(v7 + 56), (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
  Swift::Int v12 = *(void *)(a3 + *(int *)(type metadata accessor for MercuryCacheDataUpdateHandler() + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v13, v12);
  Swift::Int v15 = v14;
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v16, v15);
  sub_100148B90(v11, v10, v17);
  LOBYTE(a2) = v18;
  swift_bridgeObjectRelease();
  sub_10002CC68((uint64_t)v9, &qword_100230BB8);
  return a2 & 1;
}

uint64_t sub_100118688@<X0>(uint64_t *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v62 = a3;
  uint64_t v63 = a5;
  unint64_t v61 = a4;
  int v66 = a2;
  uint64_t v68 = a6;
  uint64_t v67 = type metadata accessor for Date();
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  sub_100040A70();
  uint64_t v64 = v9;
  uint64_t updated = type metadata accessor for MercuryCacheUpdateData.Failure(0);
  sub_100043B1C();
  __chkstk_darwin(v10);
  sub_100020EAC();
  uint64_t v13 = (char *)(v12 - v11);
  uint64_t v58 = type metadata accessor for MercuryCacheUpdateData.Success(0);
  sub_100043B1C();
  __chkstk_darwin(v14);
  sub_100040A70();
  uint64_t v59 = v15;
  uint64_t v16 = sub_100043478(&qword_10022E670);
  uint64_t v17 = sub_1000208F0(v16);
  __chkstk_darwin(v17);
  sub_100020EAC();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = type metadata accessor for MercuryCacheUpdateData.DataKind(0);
  sub_100043B1C();
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v57 - v26;
  uint64_t v28 = (int *)type metadata accessor for MercuryCacheMetadata(0);
  sub_100043B1C();
  __chkstk_darwin(v29);
  sub_100020EAC();
  uint64_t v32 = v31 - v30;
  sub_1001197E0((uint64_t)a1, v31 - v30, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
  uint64_t v34 = *a1;
  uint64_t v33 = a1[1];
  sub_1001198E8(v63, v20);
  if (sub_10004FD40(v20, 1, v21) == 1)
  {
    swift_bridgeObjectRetain();
    sub_10002CC68(v20, &qword_10022E670);
    uint64_t v35 = (char *)a1 + v28[5];
    uint64_t v36 = updated;
    uint64_t v37 = v65;
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
    uint64_t v39 = v67;
    v38(&v13[*(int *)(updated + 20)], v35, v67);
    v38(&v13[*(int *)(v36 + 28)], v61, v39);
    *(void *)uint64_t v13 = v34;
    *((void *)v13 + 1) = v33;
    uint64_t v40 = &v13[*(int *)(v36 + 24)];
    *(_OWORD *)uint64_t v40 = xmmword_1001C6950;
    *((void *)v40 + 2) = v62;
    *((double *)v40 + 3) = a7;
    v40[32] = 0;
    uint64_t v41 = v64;
    static Date.now.getter();
    sub_10011A77C((uint64_t)v13, v66 & 1, v41);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v41, v39);
    uint64_t v42 = type metadata accessor for MercuryCacheUpdateData.Failure;
    uint64_t v43 = (uint64_t)v13;
  }
  else
  {
    uint64_t v44 = v64;
    char v45 = v66;
    sub_10011978C(v20, (uint64_t)v27, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    sub_1001197E0((uint64_t)v27, (uint64_t)v25, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    uint64_t v46 = v27;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v47 = type metadata accessor for MercuryCacheUpdateData.Failure;
      sub_10011978C((uint64_t)v25, (uint64_t)v13, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Failure);
      static Date.now.getter();
      sub_10011A77C((uint64_t)v13, v45 & 1, v44);
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v44, v67);
      uint64_t v48 = (uint64_t)v13;
    }
    else
    {
      uint64_t v47 = type metadata accessor for MercuryCacheUpdateData.Success;
      uint64_t v49 = (uint64_t)v25;
      uint64_t v50 = v59;
      sub_10011978C(v49, v59, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Success);
      uint64_t v51 = v58;
      unint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 24);
      uint64_t v53 = v67;
      v52(v32 + v28[5], v50 + *(int *)(v58 + 20), v67);
      v52(v32 + v28[6], v50 + *(int *)(v51 + 28), v53);
      uint64_t v54 = v32 + v28[7];
      sub_10002CC68(v54, &qword_100230BC0);
      uint64_t v55 = type metadata accessor for RetryConfiguration(0);
      sub_100021AC0(v54, 1, 1, v55);
      uint64_t v48 = v50;
    }
    sub_100119840(v48, (void (*)(void))v47);
    uint64_t v42 = type metadata accessor for MercuryCacheUpdateData.DataKind;
    uint64_t v43 = (uint64_t)v46;
  }
  sub_100119840(v43, (void (*)(void))v42);
  return sub_10011978C(v32, v68, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
}

uint64_t sub_100118B98(uint64_t *a1, uint64_t a2, Swift::Int *a3)
{
  uint64_t v6 = sub_100043478(&qword_100230BB8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  *uint64_t v9 = v11;
  v9[1] = v10;
  sub_1001197E0(a2, (uint64_t)v9 + *(int *)(v7 + 56), (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
  Swift::Int v12 = *a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v13, v12);
  Swift::Int v15 = v14;
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v16, v15);
  sub_100148B90(v11, v10, v17);
  LOBYTE(a2) = v18;
  swift_bridgeObjectRelease();
  sub_10002CC68((uint64_t)v9, &qword_100230BB8);
  return a2 & 1;
}

uint64_t sub_100118CC4(uint64_t *a1, uint64_t a2)
{
  return sub_100118B98(a1, a2, *(Swift::Int **)(v2 + 16)) & 1;
}

uint64_t sub_100118CE4(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t (*)(void *, char *))isStackAllocationSafe;
  char v7 = *(unsigned char *)(a3 + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  if ((v7 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    uint64_t v9 = (unint64_t *)((char *)&v13 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1001A638C(0, v8, v9);
    uint64_t v10 = sub_100118E68(v9, v8, a3, v6);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (unint64_t *)swift_slowAlloc();
    sub_1001A638C(0, v8, v11);
    a2 = sub_100118E68(v11, v8, a3, v6);
    swift_slowDealloc();
  }
  return a2;
}

uint64_t sub_100118E68(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, char *))
{
  uint64_t v32 = a4;
  uint64_t v26 = a2;
  uint64_t v27 = a1;
  uint64_t updated = type metadata accessor for MercuryCacheUpdateData.DataKind(0);
  uint64_t v7 = *(void *)(updated - 8);
  uint64_t result = __chkstk_darwin(updated - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = 0;
  uint64_t v12 = *(void *)(a3 + 64);
  uint64_t v28 = 0;
  uint64_t v29 = a3 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v30 = (unint64_t)(v13 + 63) >> 6;
  while (v15)
  {
    unint64_t v16 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v17 = v16 | (v11 << 6);
LABEL_17:
    uint64_t v21 = *(void *)(a3 + 56);
    uint64_t v22 = (void *)(*(void *)(a3 + 48) + 16 * v17);
    uint64_t v23 = v22[1];
    v31[0] = *v22;
    v31[1] = v23;
    sub_1001197E0(v21 + *(void *)(v7 + 72) * v17, (uint64_t)v10, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    swift_bridgeObjectRetain();
    char v24 = v32(v31, v10);
    sub_100119840((uint64_t)v10, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    uint64_t result = swift_bridgeObjectRelease();
    if (v4) {
      return result;
    }
    if (v24)
    {
      *(unint64_t *)((char *)v27 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      BOOL v18 = __OFADD__(v28++, 1);
      if (v18) {
        goto LABEL_30;
      }
    }
  }
  BOOL v18 = __OFADD__(v11++, 1);
  if (v18)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v11 >= v30) {
    return sub_10011911C(v27, v26, v28, (void *)a3);
  }
  unint64_t v19 = *(void *)(v29 + 8 * v11);
  if (v19)
  {
LABEL_16:
    unint64_t v15 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v11 << 6);
    goto LABEL_17;
  }
  int64_t v20 = v11 + 1;
  if (v11 + 1 >= v30) {
    return sub_10011911C(v27, v26, v28, (void *)a3);
  }
  unint64_t v19 = *(void *)(v29 + 8 * v20);
  if (v19) {
    goto LABEL_15;
  }
  int64_t v20 = v11 + 2;
  if (v11 + 2 >= v30) {
    return sub_10011911C(v27, v26, v28, (void *)a3);
  }
  unint64_t v19 = *(void *)(v29 + 8 * v20);
  if (v19) {
    goto LABEL_15;
  }
  int64_t v20 = v11 + 3;
  if (v11 + 3 >= v30) {
    return sub_10011911C(v27, v26, v28, (void *)a3);
  }
  unint64_t v19 = *(void *)(v29 + 8 * v20);
  if (v19)
  {
LABEL_15:
    int64_t v11 = v20;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v30) {
      return sub_10011911C(v27, v26, v28, (void *)a3);
    }
    unint64_t v19 = *(void *)(v29 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10011911C(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v40 = a1;
  uint64_t updated = type metadata accessor for MercuryCacheUpdateData.DataKind(0);
  uint64_t v44 = *(void *)(updated - 8);
  uint64_t v8 = __chkstk_darwin(updated - 8);
  __chkstk_darwin(v8);
  uint64_t v43 = (char *)&v38 - v10;
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  uint64_t v42 = v9;
  sub_100043478(&qword_100230BB0);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v12 = result;
  uint64_t v39 = a2;
  if (a2 < 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = *v40;
  }
  uint64_t v14 = 0;
  uint64_t v15 = result + 64;
  uint64_t v16 = v42;
  uint64_t v17 = (uint64_t)v43;
  uint64_t v41 = a4;
  while (1)
  {
    if (v13)
    {
      unint64_t v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v19 = v18 | (v14 << 6);
    }
    else
    {
      uint64_t v20 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_40;
      }
      if (v20 >= v39) {
        return v12;
      }
      unint64_t v21 = v40[v20];
      ++v14;
      if (!v21)
      {
        uint64_t v14 = v20 + 1;
        if (v20 + 1 >= v39) {
          return v12;
        }
        unint64_t v21 = v40[v14];
        if (!v21)
        {
          uint64_t v14 = v20 + 2;
          if (v20 + 2 >= v39) {
            return v12;
          }
          unint64_t v21 = v40[v14];
          if (!v21)
          {
            uint64_t v22 = v20 + 3;
            if (v22 >= v39) {
              return v12;
            }
            unint64_t v21 = v40[v22];
            if (!v21)
            {
              while (1)
              {
                uint64_t v14 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v14 >= v39) {
                  return v12;
                }
                unint64_t v21 = v40[v14];
                ++v22;
                if (v21) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v14 = v22;
          }
        }
      }
LABEL_24:
      unint64_t v13 = (v21 - 1) & v21;
      unint64_t v19 = __clz(__rbit64(v21)) + (v14 << 6);
    }
    uint64_t v23 = a4[7];
    char v24 = (uint64_t *)(a4[6] + 16 * v19);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = *(void *)(v44 + 72);
    sub_1001197E0(v23 + v27 * v19, v17, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    sub_10011978C(v17, v16, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v28 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) == 0) {
      break;
    }
    unint64_t v31 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    uint64_t v16 = v42;
LABEL_34:
    *(void *)(v15 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    uint64_t v36 = (void *)(*(void *)(v12 + 48) + 16 * v31);
    *uint64_t v36 = v25;
    v36[1] = v26;
    uint64_t result = sub_10011978C(v16, *(void *)(v12 + 56) + v31 * v27, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      goto LABEL_39;
    }
    a4 = v41;
    if (!a3) {
      return v12;
    }
  }
  char v32 = 0;
  unint64_t v33 = (unint64_t)(63 - v28) >> 6;
  uint64_t v16 = v42;
  while (++v30 != v33 || (v32 & 1) == 0)
  {
    BOOL v34 = v30 == v33;
    if (v30 == v33) {
      unint64_t v30 = 0;
    }
    v32 |= v34;
    uint64_t v35 = *(void *)(v15 + 8 * v30);
    if (v35 != -1)
    {
      unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1001194C8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_100043478(&qword_100230960);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v9 = result;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  if (a2 < 1) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      sub_100049A54();
      uint64_t v40 = v13;
      unint64_t v15 = v14 | (v13 << 6);
    }
    else
    {
      uint64_t v16 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v16 >= v39) {
        return v9;
      }
      unint64_t v17 = v38[v16];
      uint64_t v18 = v11 + 1;
      if (!v17)
      {
        uint64_t v18 = v11 + 2;
        if (v11 + 2 >= v39) {
          return v9;
        }
        unint64_t v17 = v38[v18];
        if (!v17)
        {
          uint64_t v18 = v11 + 3;
          if (v11 + 3 >= v39) {
            return v9;
          }
          unint64_t v17 = v38[v18];
          if (!v17)
          {
            uint64_t v19 = v11 + 4;
            if (v11 + 4 >= v39) {
              return v9;
            }
            unint64_t v17 = v38[v19];
            if (!v17)
            {
              while (1)
              {
                uint64_t v18 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v39) {
                  return v9;
                }
                unint64_t v17 = v38[v18];
                ++v19;
                if (v17) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v18 = v11 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v10 = (v17 - 1) & v17;
      uint64_t v40 = v18;
      unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
    }
    uint64_t v20 = v4;
    unint64_t v21 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v15);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    char v24 = (uint64_t *)(*(void *)(v4 + 56) + 16 * v15);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v27 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6))) == 0) {
      break;
    }
    unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v12 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    uint64_t v35 = (void *)(*(void *)(v9 + 48) + 16 * v30);
    void *v35 = v23;
    v35[1] = v22;
    uint64_t v36 = (void *)(*(void *)(v9 + 56) + 16 * v30);
    *uint64_t v36 = v25;
    v36[1] = v26;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_39;
    }
    uint64_t v4 = v20;
    uint64_t v11 = v40;
    if (!v5) {
      return v9;
    }
  }
  char v31 = 0;
  unint64_t v32 = (unint64_t)(63 - v27) >> 6;
  while (++v29 != v32 || (v31 & 1) == 0)
  {
    BOOL v33 = v29 == v32;
    if (v29 == v32) {
      unint64_t v29 = 0;
    }
    v31 |= v33;
    uint64_t v34 = *(void *)(v12 + 8 * v29);
    if (v34 != -1)
    {
      unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10011976C(uint64_t *a1, uint64_t a2)
{
  return sub_10011854C(a1, a2, *(void *)(v2 + 16)) & 1;
}

uint64_t sub_10011978C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100043B1C();
  uint64_t v4 = sub_100021280();
  v5(v4);
  return a2;
}

uint64_t sub_1001197E0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100043B1C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100119840(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100043B1C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100119898(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100043478(a3);
  sub_100043B1C();
  uint64_t v4 = sub_100021280();
  v5(v4);
  return a2;
}

uint64_t sub_1001198E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022E670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *sub_100119950(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = a3[6];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *(void *)uint64_t v9 = *(char **)((char *)a2 + v8);
    *((void *)v9 + 1) = v11;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v8 + 24);
    *((void *)v9 + 2) = *(char **)((char *)a2 + v8 + 16);
    *((void *)v9 + 3) = v22;
    uint64_t v12 = *(int *)(type metadata accessor for MercuryCacheUpdateInput() + 32);
    uint64_t v20 = v10 + v12;
    unint64_t v21 = &v9[v12];
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v14 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(v21, v20, v13);
    uint64_t v15 = a3[8];
    *(void *)&v7[a3[7]] = *(char **)((char *)a2 + a3[7]);
    *(void *)&v7[v15] = *(char **)((char *)a2 + v15);
    v19(&v7[a3[9]], (uint64_t)a2 + a3[9], v13);
    uint64_t v16 = a3[11];
    *(void *)&v7[a3[10]] = *(char **)((char *)a2 + a3[10]);
    long long v17 = *(_OWORD *)((char *)a2 + v16 + 24);
    *(_OWORD *)&v7[v16 + 24] = v17;
    (**(void (***)(void))(v17 - 8))();
    *(_OWORD *)&v7[a3[12]] = *(_OWORD *)((char *)a2 + a3[12]);
    swift_unknownObjectRetain();
  }
  return v7;
}

uint64_t sub_100119B48(id *a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + a2[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = &v4[*(int *)(type metadata accessor for MercuryCacheUpdateInput() + 32)];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7((char *)a1 + a2[9], v6);
  sub_10004377C((uint64_t)a1 + a2[11]);
  return swift_unknownObjectRelease();
}

char *sub_100119C3C(char *a1, uint64_t a2, int *a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v8 = a3[6];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(a2 + v8 + 8);
  *(void *)uint64_t v9 = *(void *)(a2 + v8);
  *((void *)v9 + 1) = v11;
  uint64_t v22 = *(void *)(a2 + v8 + 24);
  *((void *)v9 + 2) = *(void *)(a2 + v8 + 16);
  *((void *)v9 + 3) = v22;
  uint64_t v12 = *(int *)(type metadata accessor for MercuryCacheUpdateInput() + 32);
  uint64_t v20 = v10 + v12;
  unint64_t v21 = &v9[v12];
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  id v14 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19(v21, v20, v13);
  uint64_t v15 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)(a2 + a3[7]);
  *(void *)&a1[v15] = *(void *)(a2 + v15);
  v19(&a1[a3[9]], a2 + a3[9], v13);
  uint64_t v16 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)(a2 + a3[10]);
  long long v17 = *(_OWORD *)(a2 + v16 + 24);
  *(_OWORD *)&a1[v16 + 24] = v17;
  (**(void (***)(void))(v17 - 8))();
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)(a2 + a3[12]);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_100119DE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[2] = v11[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[3] = v11[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(type metadata accessor for MercuryCacheUpdateInput() + 32);
  uint64_t v13 = (char *)v10 + v12;
  id v14 = (char *)v11 + v12;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  v16((char *)(a1 + a3[9]), (char *)(a2 + a3[9]), v15);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  sub_100119F88((uint64_t *)(a1 + a3[11]), (uint64_t *)(a2 + a3[11]));
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v18[1] = v20;
  return a1;
}

uint64_t *sub_100119F88(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    int v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *int v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *int v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

char *sub_10011A1B8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = &a1[v7];
  int v9 = &a2[v7];
  long long v10 = *(_OWORD *)&a2[v7 + 16];
  *(_OWORD *)uint64_t v8 = *(_OWORD *)&a2[v7];
  *((_OWORD *)v8 + 1) = v10;
  uint64_t v11 = *(int *)(type metadata accessor for MercuryCacheUpdateInput() + 32);
  uint64_t v12 = &v8[v11];
  uint64_t v13 = &v9[v11];
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  uint64_t v16 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  v15(&a1[a3[9]], &a2[a3[9]], v14);
  uint64_t v17 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *((void *)v18 + 4) = *((void *)v19 + 4);
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  return a1;
}

uint64_t sub_10011A2CC(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  int v9 = &a2[v7];
  *(void *)(a1 + v7) = *(void *)&a2[v7];
  swift_bridgeObjectRelease();
  v8[1] = *((void *)v9 + 1);
  swift_bridgeObjectRelease();
  void v8[2] = *((void *)v9 + 2);
  swift_bridgeObjectRelease();
  v8[3] = *((void *)v9 + 3);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(type metadata accessor for MercuryCacheUpdateInput() + 32);
  uint64_t v11 = (char *)v8 + v10;
  uint64_t v12 = &v9[v10];
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40);
  v14(v11, v12, v13);
  uint64_t v15 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)&a2[a3[7]];
  *(void *)(a1 + v15) = *(void *)&a2[v15];
  v14((char *)(a1 + a3[9]), &a2[a3[9]], v13);
  uint64_t v16 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)&a2[a3[10]];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = &a2[v16];
  sub_10004377C(a1 + v16);
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *((void *)v18 + 4);
  uint64_t v20 = a3[12];
  unint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = &a2[v20];
  uint64_t v23 = *((void *)v22 + 1);
  *unint64_t v21 = *(void *)v22;
  swift_unknownObjectRelease();
  v21[1] = v23;
  return a1;
}

uint64_t sub_10011A44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10011A460);
}

uint64_t sub_10011A460(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for MercuryCacheUpdateInput();
    sub_100044124();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 24);
    }
    else
    {
      uint64_t v10 = type metadata accessor for Date();
      uint64_t v11 = *(int *)(a3 + 36);
    }
    return sub_10004FD40((uint64_t)a1 + v11, a2, v10);
  }
}

uint64_t sub_10011A50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10011A520);
}

void *sub_10011A520(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    type metadata accessor for MercuryCacheUpdateInput();
    sub_100044124();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 24);
    }
    else
    {
      uint64_t v10 = type metadata accessor for Date();
      uint64_t v11 = *(int *)(a4 + 36);
    }
    return (void *)sub_100021AC0((uint64_t)v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_10011A5C8()
{
  uint64_t result = type metadata accessor for MercuryCacheUpdateInput();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10011A6D4(uint64_t a1, char a2)
{
  sub_10011D5E8(a1, (uint64_t)&v6, &qword_10022F490);
  if (!v7) {
    return sub_10002CC68((uint64_t)&v6, &qword_10022F490);
  }
  sub_100043510(&v6, v8);
  v5[0] = sub_10011BA64(a2);
  v5[1] = v3;
  AnyHashable.init<A>(_:)();
  sub_100043520((uint64_t)v8, (uint64_t)v5);
  sub_100088240((uint64_t)v5, (uint64_t)&v6);
  return sub_10004377C((uint64_t)v8);
}

uint64_t sub_10011A77C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v121 = a3;
  LODWORD(v131) = a2;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  sub_100040A70();
  uint64_t v134 = v8;
  uint64_t v9 = sub_100043478(&qword_1002344F0);
  uint64_t v10 = sub_1000208F0(v9);
  __chkstk_darwin(v10);
  sub_100020658();
  uint64_t v11 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_100035C70();
  uint64_t v124 = v15;
  sub_100020974();
  __chkstk_darwin(v16);
  BOOL v123 = (char *)&v121 - v17;
  sub_100020974();
  __chkstk_darwin(v18);
  unint64_t v122 = (char *)&v121 - v19;
  uint64_t v20 = sub_100043478(&qword_100230BC0);
  uint64_t v21 = sub_1000208F0(v20);
  __chkstk_darwin(v21);
  sub_100035C70();
  uint64_t v128 = v22;
  sub_100020974();
  __chkstk_darwin(v23);
  uint64_t v24 = sub_100050DF8();
  uint64_t v25 = type metadata accessor for RetryConfiguration(v24);
  sub_100043B1C();
  __chkstk_darwin(v26);
  sub_100035C70();
  uint64_t v126 = (void *)v27;
  sub_100020974();
  __chkstk_darwin(v28);
  uint64_t v127 = (uint64_t *)((char *)&v121 - v29);
  sub_100020974();
  __chkstk_darwin(v30);
  uint64_t v129 = (uint64_t *)((char *)&v121 - v31);
  uint64_t updated = type metadata accessor for MercuryCacheUpdateData.Failure(0);
  uint64_t v33 = a1 + *(int *)(updated + 28);
  uint64_t v34 = type metadata accessor for MercuryCacheMetadata(0);
  uint64_t v35 = v4 + *(int *)(v34 + 24);
  uint64_t v130 = v13;
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24);
  uint64_t v125 = v33;
  uint64_t v133 = v11;
  v36(v35, v33, v11);
  uint64_t v37 = *(int *)(updated + 24);
  uint64_t v132 = a1;
  uint64_t v38 = a1 + v37;
  char v39 = *(unsigned char *)(v38 + 32);
  uint64_t v135 = v4;
  if (v39)
  {
    uint64_t v40 = v34;
    uint64_t v133 = v25;
    if (qword_10022C508 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v41 = type metadata accessor for LogMessage();
    sub_100044798(v41);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    uint64_t v140 = v34;
    uint64_t v42 = sub_10003BAA4(v139);
    uint64_t v43 = v135;
    sub_10011D52C(v135, (uint64_t)v42, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
    id v44 = (id)AMSLogKey();
    if (v44)
    {
      char v45 = v44;
      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v131 = v34;
      uint64_t v47 = v46;
      uint64_t v49 = v48;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v50._uint64_t countAndFlagsBits = 0;
      v50._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v50);
      sub_100049788(v139, v140);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v136 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v136, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v136 = v47;
      uint64_t v137 = v49;
      uint64_t v40 = v131;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v136, &qword_10022F490);
      v52._uint64_t countAndFlagsBits = 93;
      v52._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v52);
      LogMessage.init(stringInterpolation:)();
      uint64_t v43 = v135;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000458FC();
      sub_100020E60();
      sub_100049788(v139, v140);
      uint64_t v76 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v136 = v76;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC68((uint64_t)&v136, &qword_10022F490);
      v77._uint64_t countAndFlagsBits = 58;
      v77._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v77);
      sub_100047550();
    }
    sub_10004377C((uint64_t)v139);
    LogMessage.init(stringLiteral:)();
    uint64_t v140 = updated;
    double v78 = sub_10003BAA4(v139);
    sub_10011D52C(v132, (uint64_t)v78, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Failure);
    static LogMessage.safe(_:)();
    sub_10002CC68((uint64_t)v139, &qword_10022F490);
    uint64_t v79 = static os_log_type_t.info.getter();
    sub_10004841C(v79);
    swift_bridgeObjectRelease();
    sub_10002CC68(v43 + *(int *)(v40 + 28), &qword_100230BC0);
    sub_100049A68();
    uint64_t v83 = v133;
    return sub_100021AC0(v80, v81, v82, v83);
  }
  uint64_t v54 = *(void *)(v38 + 8);
  uint64_t v53 = *(void **)(v38 + 16);
  double v55 = *(double *)(v38 + 24);
  double v56 = *(double *)v38;
  uint64_t v57 = v4 + *(int *)(v34 + 28);
  sub_10011D5E8(v57, v4, &qword_100230BC0);
  sub_1000463F8(v4, 1, v25);
  if (v58)
  {
    sub_10002CC68(v4, &qword_100230BC0);
    uint64_t v59 = v133;
    goto LABEL_20;
  }
  int64_t v60 = v53;
  uint64_t v53 = v129;
  sub_10011D474(v4, (uint64_t)v129, (void (*)(void))type metadata accessor for RetryConfiguration);
  if (*v53 >= v53[1])
  {
    sub_100049A68();
    uint64_t v59 = v133;
    sub_100021AC0(v84, v85, v86, v133);
  }
  else
  {
    Date.addingTimeInterval(_:)();
    sub_1000515AC();
    uint64_t v59 = v133;
    sub_100021AC0(v61, v62, v63, v133);
    sub_1000463F8(v3, 1, v59);
    if (!v58)
    {
      uint64_t v64 = v130;
      uint64_t v65 = v122;
      (*(void (**)(char *))(v130 + 32))(v122);
      if (static Date.> infix(_:_:)())
      {
        uint64_t v25 = (uint64_t)v65;
        if (qword_10022C508 == -1)
        {
LABEL_13:
          sub_100043478(&qword_10022E560);
          uint64_t v66 = type metadata accessor for LogMessage();
          sub_100044798(v66);
          uint64_t v67 = (__n128 *)sub_100020930();
          uint64_t v68 = sub_100047888(v67, (__n128)xmmword_1001C3120);
          sub_10011D52C(v135, (uint64_t)v68, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
          id v69 = (id)AMSLogKey();
          if (v69)
          {
            int64_t v70 = v69;
            uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v73 = v72;

            swift_bridgeObjectRetain();
            sub_100046CAC();
            sub_100020E60();
            uint64_t v74 = sub_100041068();
            uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
            uint64_t v136 = v74;
            LogMessage.StringInterpolation.appendInterpolation(safe:)();
            sub_10002CC68((uint64_t)&v136, &qword_10022F490);
            sub_100020E44();
            uint64_t MetatypeMetadata = &type metadata for String;
            uint64_t v136 = v71;
            uint64_t v137 = v73;
            LogMessage.StringInterpolation.appendInterpolation(safe:)();
            uint64_t v53 = v129;
            sub_10002CC68((uint64_t)&v136, &qword_10022F490);
            v75._uint64_t countAndFlagsBits = 93;
            v75._object = (void *)0xE100000000000000;
            LogMessage.StringInterpolation.appendLiteral(_:)(v75);
            sub_100047550();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1000458FC();
            sub_100020E60();
            uint64_t v118 = sub_1000501D4();
            uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
            uint64_t v136 = v118;
            LogMessage.StringInterpolation.appendInterpolation(safe:)();
            sub_10002CC68((uint64_t)&v136, &qword_10022F490);
            v119._uint64_t countAndFlagsBits = 58;
            v119._object = (void *)0xE100000000000000;
            LogMessage.StringInterpolation.appendLiteral(_:)(v119);
            sub_100047550();
          }
          sub_10004377C((uint64_t)v139);
          LogMessage.init(stringLiteral:)();
          uint64_t v120 = static os_log_type_t.info.getter();
          sub_10004841C(v120);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v25, v133);
          return sub_10011D4D4((uint64_t)v53, (void (*)(void))type metadata accessor for RetryConfiguration);
        }
LABEL_43:
        swift_once();
        goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v59);
      sub_10011D4D4((uint64_t)v53, (void (*)(void))type metadata accessor for RetryConfiguration);
      goto LABEL_19;
    }
  }
  sub_10011D4D4((uint64_t)v53, (void (*)(void))type metadata accessor for RetryConfiguration);
  sub_10002CC68(v3, &qword_1002344F0);
LABEL_19:
  uint64_t v53 = v60;
LABEL_20:
  if (v131)
  {
    uint64_t v87 = v128;
    sub_10011D5E8(v57, v128, &qword_100230BC0);
    sub_1000463F8(v87, 1, v25);
    if (v58)
    {
      sub_10002CC68(v87, &qword_100230BC0);
      uint64_t v88 = v130;
      uint64_t v89 = v124;
      sub_100035D08();
      v91(v90);
      double v92 = v56;
      if (v54) {
        double v92 = v55;
      }
      uint64_t v93 = (uint64_t)v127;
      *uint64_t v127 = 0;
      *(void *)(v93 + 8) = v53;
      *(double *)(v93 + 16) = v92;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32))(v93 + *(int *)(v25 + 28), v89, v59);
    }
    else
    {
      double v104 = v56;
      uint64_t v105 = v87;
      uint64_t v106 = v126;
      sub_10011D474(v105, (uint64_t)v126, (void (*)(void))type metadata accessor for RetryConfiguration);
      BOOL v107 = __OFADD__(*v106, 1);
      uint64_t v108 = *v106 + 1;
      if (v107)
      {
        __break(1u);
        goto LABEL_43;
      }
      uint64_t v109 = v130;
      uint64_t v110 = v123;
      sub_100035D08();
      v112(v111);
      uint64_t v93 = (uint64_t)v127;
      if (v54) {
        double v113 = v55 * exp2((double)v108);
      }
      else {
        double v113 = v104;
      }
      *(void *)uint64_t v93 = v108;
      *(void *)(v93 + 8) = v53;
      *(double *)(v93 + 16) = v113;
      (*(void (**)(uint64_t, char *, uint64_t))(v109 + 32))(v93 + *(int *)(v25 + 28), v110, v59);
      sub_10011D4D4((uint64_t)v126, (void (*)(void))type metadata accessor for RetryConfiguration);
    }
    sub_10002CC68(v57, &qword_100230BC0);
    sub_10011D474(v93, v57, (void (*)(void))type metadata accessor for RetryConfiguration);
    sub_1000515AC();
    uint64_t v83 = v25;
    return sub_100021AC0(v80, v81, v82, v83);
  }
  if (qword_10022C508 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v94 = type metadata accessor for LogMessage();
  sub_100044798(v94);
  uint64_t v95 = (__n128 *)sub_100020930();
  uint64_t v96 = sub_100047888(v95, (__n128)xmmword_1001C3120);
  sub_10011D52C(v135, (uint64_t)v96, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
  id v97 = (id)AMSLogKey();
  if (v97)
  {
    uint64_t v98 = v97;
    uint64_t v99 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v101 = v100;

    swift_bridgeObjectRetain();
    sub_100046CAC();
    sub_100020E60();
    uint64_t v102 = sub_100041068();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v136 = v102;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v136, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v136 = v99;
    uint64_t v137 = v101;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v136, &qword_10022F490);
    v103._uint64_t countAndFlagsBits = 93;
    v103._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v103);
    sub_100047550();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000458FC();
    sub_100020E60();
    uint64_t v114 = sub_1000501D4();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v136 = v114;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v136, &qword_10022F490);
    v115._uint64_t countAndFlagsBits = 58;
    v115._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v115);
    sub_100047550();
  }
  sub_10004377C((uint64_t)v139);
  LogMessage.init(stringLiteral:)();
  uint64_t v116 = static os_log_type_t.info.getter();
  sub_10004841C(v116);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10011B404@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t updated = type metadata accessor for MercuryCacheUpdateData.Success(0);
  sub_100043B1C();
  __chkstk_darwin(v5);
  sub_100020EAC();
  uint64_t v8 = (uint64_t *)(v7 - v6);
  uint64_t v9 = sub_100043478(&qword_100230BC0);
  uint64_t v10 = sub_1000208F0(v9);
  __chkstk_darwin(v10);
  sub_100040A70();
  uint64_t v65 = v11;
  type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v66 = v13;
  uint64_t v67 = v12;
  __chkstk_darwin(v12);
  sub_100035C70();
  uint64_t v64 = (char *)v14;
  sub_100020974();
  __chkstk_darwin(v15);
  uint64_t v62 = (char *)&v61 - v16;
  sub_100020974();
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v61 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  __chkstk_darwin(v21);
  uint64_t v22 = sub_100050DF8();
  uint64_t v23 = type metadata accessor for MercuryCacheUpdateData.Failure(v22);
  sub_100043B1C();
  __chkstk_darwin(v24);
  sub_100011EC0();
  uint64_t v27 = v25 - v26;
  __chkstk_darwin(v28);
  uint64_t v30 = (uint64_t *)((char *)&v61 - v29);
  type metadata accessor for MercuryCacheUpdateData.DataKind(0);
  sub_100043B1C();
  __chkstk_darwin(v31);
  sub_100020658();
  sub_10011D52C(a1, v2, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v64 = (char *)a1;
    sub_10011D474(v2, (uint64_t)v30, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Failure);
    uint64_t v61 = *v30;
    uint64_t v62 = v3;
    uint64_t updated = v30[1];
    uint64_t v32 = v66;
    uint64_t v33 = *(void (**)(void))(v66 + 16);
    uint64_t v34 = v67;
    sub_10004A5B8();
    v33();
    sub_10004A5B8();
    v33();
    sub_10011D52C((uint64_t)v30, v27, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Failure);
    uint64_t v35 = v27 + *(int *)(v23 + 24);
    if (*(unsigned char *)(v35 + 32))
    {
      uint64_t v36 = updated;
      swift_bridgeObjectRetain();
      sub_10011D4D4(v27, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Failure);
      type metadata accessor for RetryConfiguration(0);
      uint64_t v37 = (uint64_t)v65;
      sub_100049A68();
    }
    else
    {
      uint64_t v55 = *(void *)(v35 + 16);
      if (*(void *)(v35 + 8)) {
        v35 += 24;
      }
      uint64_t v56 = *(void *)v35;
      sub_10004A5B8();
      v33();
      uint64_t v37 = (uint64_t)v65;
      void *v65 = 0;
      *(void *)(v37 + 8) = v55;
      *(void *)(v37 + 16) = v56;
      uint64_t v57 = type metadata accessor for RetryConfiguration(0);
      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v37 + *(int *)(v57 + 28), v20, v34);
      uint64_t v36 = updated;
      swift_bridgeObjectRetain();
      sub_10011D4D4(v27, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Failure);
      sub_1000515AC();
      uint64_t v41 = v57;
    }
    sub_100021AC0(v38, v39, v40, v41);
    char v58 = v68;
    sub_10011D4D4((uint64_t)v64, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    sub_10011D4D4((uint64_t)v30, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Failure);
    void *v58 = v61;
    v58[1] = v36;
    uint64_t v59 = type metadata accessor for MercuryCacheMetadata(0);
    int64_t v60 = *(void (**)(void))(v32 + 32);
    sub_10004B548();
    v60();
    sub_10004B548();
    v60();
    return sub_10011D580(v37, (uint64_t)v58 + *(int *)(v59 + 28));
  }
  else
  {
    sub_10011D4D4(a1, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    sub_10011D474(v2, (uint64_t)v8, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Success);
    uint64_t v43 = *v8;
    uint64_t v42 = v8[1];
    uint64_t v44 = updated;
    uint64_t v46 = v66;
    uint64_t v45 = v67;
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
    v47(v62, (char *)v8 + *(int *)(updated + 20), v67);
    v47(v64, (char *)v8 + *(int *)(v44 + 28), v45);
    swift_bridgeObjectRetain();
    sub_10011D4D4((uint64_t)v8, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.Success);
    type metadata accessor for MercuryCacheMetadata(0);
    uint64_t v48 = v68;
    type metadata accessor for RetryConfiguration(0);
    sub_100049A68();
    sub_100021AC0(v49, v50, v51, v52);
    *uint64_t v48 = v43;
    v48[1] = v42;
    uint64_t v53 = *(void (**)(void))(v46 + 32);
    sub_10004B548();
    v53();
    sub_10004B548();
    return ((uint64_t (*)(void))v53)();
  }
}

uint64_t sub_10011B964()
{
  if (qword_10022C4C0 != -1) {
    swift_once();
  }
  qword_100230C90 = qword_100244128;
  return swift_retain();
}

uint64_t sub_10011B9C8(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), v6 = 0, (v5 & 1) != 0))
  {
    uint64_t updated = type metadata accessor for CacheUpdateRun(0);
    if (static Date.== infix(_:_:)()) {
      char v6 = *((unsigned char *)a1 + *(int *)(updated + 24)) ^ *((unsigned char *)a2 + *(int *)(updated + 24)) ^ 1;
    }
    else {
      char v6 = 0;
    }
  }
  return v6 & 1;
}

uint64_t sub_10011BA64(char a1)
{
  uint64_t result = 0x756F437972746572;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x797274655278616DLL;
      break;
    case 2:
      uint64_t result = 0x6C65447972746572;
      break;
    case 3:
      uint64_t result = 0x74616E696769726FLL;
      break;
    case 4:
      uint64_t result = 0x727465527478656ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10011BB40@<X0>(uint64_t a1@<X8>)
{
  if (*v1 >= v1[1])
  {
    uint64_t v3 = 1;
  }
  else
  {
    type metadata accessor for RetryConfiguration(0);
    Date.addingTimeInterval(_:)();
    uint64_t v3 = 0;
  }
  uint64_t v4 = type metadata accessor for Date();
  return sub_100021AC0(a1, v3, 1, v4);
}

uint64_t sub_10011BBC0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2
    || *(void *)(a1 + 8) != *(void *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16))
  {
    return 0;
  }
  type metadata accessor for RetryConfiguration(0);
  return static Date.== infix(_:_:)();
}

void sub_10011BC4C()
{
  sub_1000209F4();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_100043478(&qword_1002344F0);
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = sub_100042134();
  sub_100020DEC();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_100045B24();
  uint64_t v12 = type metadata accessor for RetryConfiguration(0);
  sub_100043B1C();
  __chkstk_darwin(v13);
  sub_100018FA0();
  uint64_t v14 = sub_10012E1E4(0, v3);
  if ((v15 & 1) == 0)
  {
    uint64_t v16 = v14;
    uint64_t v17 = sub_10012E1E4(1, v3);
    if ((v18 & 1) == 0)
    {
      uint64_t v19 = v17;
      uint64_t v20 = sub_10012E1F0(2, v3);
      if ((v21 & 1) == 0)
      {
        uint64_t v28 = v20;
        sub_10012E29C(3, v3, v0);
        sub_1000463F8(v0, 1, v8);
        if (!v22)
        {
          swift_bridgeObjectRelease();
          uint64_t v26 = *(void (**)(void))(v10 + 32);
          sub_10004B548();
          v26();
          uint64_t *v1 = v16;
          v1[1] = v19;
          v1[2] = v28;
          sub_10004B548();
          v26();
          sub_10011D474((uint64_t)v1, v5, (void (*)(void))type metadata accessor for RetryConfiguration);
          uint64_t v27 = 0;
          goto LABEL_10;
        }
        sub_10002CC68(v0, &qword_1002344F0);
      }
    }
  }
  if (qword_10022C508 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v23 = type metadata accessor for LogMessage();
  sub_100044798(v23);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  LogMessage.init(stringLiteral:)();
  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease();
  v29[0] = 0xD000000000000025;
  v29[1] = 0x80000001001D3C30;
  v24._uint64_t countAndFlagsBits = Dictionary.description.getter();
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  void v29[3] = &type metadata for String;
  static LogMessage.safe(_:)();
  sub_10002CC68((uint64_t)v29, &qword_10022F490);
  uint64_t v25 = static os_log_type_t.info.getter();
  sub_10004841C(v25);
  swift_bridgeObjectRelease();
  uint64_t v27 = 1;
LABEL_10:
  sub_100021AC0(v5, v27, 1, v12);
  sub_100020FDC();
}

void sub_10011BF94()
{
  sub_1000209F4();
  uint64_t v1 = sub_100043478(&qword_1002344F0);
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  sub_100020EAC();
  uint64_t v5 = v4 - v3;
  sub_100043478((uint64_t *)&unk_10022E570);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3FC0;
  *(void *)&long long v16 = 0x756F437972746572;
  *((void *)&v16 + 1) = 0xEA0000000000746ELL;
  AnyHashable.init<A>(_:)();
  uint64_t v7 = *v0;
  *(void *)(inited + 96) = &type metadata for Int;
  *(void *)(inited + 72) = v7;
  sub_100045FAC();
  uint64_t v8 = v0[1];
  *(void *)(inited + 168) = &type metadata for Int;
  *(void *)(inited + 144) = v8;
  sub_100045FAC();
  uint64_t v9 = v0[2];
  *(void *)(inited + 240) = &type metadata for Double;
  *(void *)(inited + 216) = v9;
  sub_100045FAC();
  type metadata accessor for RetryConfiguration(0);
  uint64_t v10 = type metadata accessor for Date();
  *(void *)(inited + 312) = v10;
  sub_10003BAA4((uint64_t *)(inited + 288));
  sub_1000452B8();
  uint64_t v12 = v11;
  sub_100035D08();
  v13();
  uint64_t v18 = Dictionary.init(dictionaryLiteral:)();
  sub_10011BB40(v5);
  sub_1000463F8(v5, 1, v10);
  if (v14)
  {
    sub_10002CC68(v5, &qword_1002344F0);
    long long v16 = 0u;
    long long v17 = 0u;
  }
  else
  {
    *((void *)&v17 + 1) = v10;
    char v15 = sub_10003BAA4((uint64_t *)&v16);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 32))(v15, v5, v10);
  }
  sub_10011A6D4((uint64_t)&v16, 4);
  sub_10002CC68((uint64_t)&v16, &qword_10022F490);
  sub_100020FDC();
}

void sub_10011C204()
{
  sub_1000209F4();
  uint64_t v4 = v0;
  uint64_t v6 = v5;
  uint64_t v7 = sub_100043478(&qword_1002344F0);
  uint64_t v8 = sub_1000208F0(v7);
  __chkstk_darwin(v8);
  uint64_t v9 = sub_100042134();
  sub_100020DEC();
  uint64_t v43 = v10;
  __chkstk_darwin(v11);
  sub_100045B24();
  uint64_t v12 = sub_100043478(&qword_100230BC0);
  uint64_t v13 = sub_1000208F0(v12);
  __chkstk_darwin(v13);
  sub_100020EAC();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = type metadata accessor for RetryConfiguration(0);
  sub_100043B1C();
  __chkstk_darwin(v18);
  uint64_t v19 = sub_100044160();
  uint64_t v20 = type metadata accessor for MercuryCacheMetadata(v19);
  sub_10011D5E8((uint64_t)v4 + *(int *)(v20 + 28), v16, &qword_100230BC0);
  sub_1000463F8(v16, 1, v17);
  if (v21)
  {
    sub_10002CC68(v16, &qword_100230BC0);
    char v22 = (char *)v4 + *(int *)(v20 + 20);
    sub_10011D424();
    if ((sub_10004C888() & 1) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    sub_10011D474(v16, (uint64_t)v3, (void (*)(void))type metadata accessor for RetryConfiguration);
    if (*v3 >= v3[1])
    {
      sub_100021AC0(v1, 1, 1, v9);
    }
    else
    {
      Date.addingTimeInterval(_:)();
      sub_1000515AC();
      sub_100021AC0(v27, v28, v29, v9);
      sub_1000463F8(v1, 1, v9);
      if (!v21)
      {
        sub_10011D4D4((uint64_t)v3, (void (*)(void))type metadata accessor for RetryConfiguration);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(v2, v1, v9);
        uint64_t v31 = *v4;
        uint64_t v30 = v4[1];
        uint64_t updated = type metadata accessor for CacheUpdateRun(0);
        sub_100035D08();
        v33();
        void *v6 = v31;
        v6[1] = v30;
        *((unsigned char *)v6 + *(int *)(updated + 24)) = 1;
        uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
        swift_bridgeObjectRetain();
        v34(v2, v9);
        uint64_t v23 = sub_10004A74C();
        goto LABEL_8;
      }
    }
    sub_10002CC68(v1, &qword_1002344F0);
    char v22 = (char *)v4 + *(int *)(v20 + 20);
    sub_10011D424();
    char v35 = sub_10004C888();
    sub_10011D4D4((uint64_t)v3, (void (*)(void))type metadata accessor for RetryConfiguration);
    if ((v35 & 1) == 0)
    {
LABEL_11:
      uint64_t v37 = *v4;
      uint64_t v36 = v4[1];
      uint64_t v38 = type metadata accessor for CacheUpdateRun(0);
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))((char *)v6 + *(int *)(v38 + 20), v22, v9);
      void *v6 = v37;
      v6[1] = v36;
      *((unsigned char *)v6 + *(int *)(v38 + 24)) = 0;
      uint64_t v39 = sub_10004A74C();
      sub_100021AC0(v39, v40, v41, v42);
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
  }
  type metadata accessor for CacheUpdateRun(0);
  sub_100049A68();
LABEL_8:
  sub_100021AC0(v23, v24, v25, v26);
LABEL_12:
  sub_100020FDC();
}

void sub_10011C550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1000209F4();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = type metadata accessor for RetryConfiguration(0);
  sub_100043B1C();
  __chkstk_darwin(v28);
  sub_100020EAC();
  uint64_t v31 = v30 - v29;
  uint64_t v32 = sub_100043478(&qword_100230E70);
  sub_100043B1C();
  __chkstk_darwin(v33);
  sub_100020658();
  uint64_t v34 = sub_100043478(&qword_100230BC0);
  uint64_t v35 = sub_1000208F0(v34);
  __chkstk_darwin(v35);
  sub_100011EC0();
  uint64_t v38 = v36 - v37;
  uint64_t v40 = __chkstk_darwin(v39);
  uint64_t v42 = (char *)&a9 - v41;
  __chkstk_darwin(v40);
  uint64_t v44 = (char *)&a9 - v43;
  BOOL v45 = *v26 == *v24 && v26[1] == v24[1];
  if (v45 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v46 = type metadata accessor for MercuryCacheMetadata(0);
    if (static Date.== infix(_:_:)() & 1) != 0 && (static Date.== infix(_:_:)())
    {
      sub_10011D5E8((uint64_t)v26 + *(int *)(v46 + 28), (uint64_t)v44, &qword_100230BC0);
      sub_10011D5E8((uint64_t)v24 + *(int *)(v46 + 28), (uint64_t)v42, &qword_100230BC0);
      uint64_t v47 = v20 + *(int *)(v32 + 48);
      sub_10011D5E8((uint64_t)v44, v20, &qword_100230BC0);
      sub_10011D5E8((uint64_t)v42, v47, &qword_100230BC0);
      sub_1000463F8(v20, 1, v27);
      if (!v45)
      {
        sub_10011D5E8(v20, v38, &qword_100230BC0);
        sub_1000463F8(v47, 1, v27);
        if (v48)
        {
          uint64_t v49 = &qword_100230E70;
        }
        else
        {
          sub_10011D474(v47, v31, (void (*)(void))type metadata accessor for RetryConfiguration);
          if (*(void *)v38 == *(void *)v31
            && *(void *)(v38 + 8) == *(void *)(v31 + 8)
            && *(double *)(v38 + 16) == *(double *)(v31 + 16))
          {
            static Date.== infix(_:_:)();
            sub_10011D4D4(v31, (void (*)(void))type metadata accessor for RetryConfiguration);
            sub_10002CC68((uint64_t)v42, &qword_100230BC0);
            sub_10002CC68((uint64_t)v44, &qword_100230BC0);
            sub_10011D4D4(v38, (void (*)(void))type metadata accessor for RetryConfiguration);
            sub_10002CC68(v20, &qword_100230BC0);
            goto LABEL_23;
          }
          sub_10011D4D4(v31, (void (*)(void))type metadata accessor for RetryConfiguration);
          uint64_t v49 = &qword_100230BC0;
        }
        sub_10002CC68((uint64_t)v42, &qword_100230BC0);
        sub_10002CC68((uint64_t)v44, &qword_100230BC0);
        sub_10011D4D4(v38, (void (*)(void))type metadata accessor for RetryConfiguration);
LABEL_22:
        sub_10002CC68(v20, v49);
        goto LABEL_23;
      }
      sub_10002CC68((uint64_t)v42, &qword_100230BC0);
      sub_10002CC68((uint64_t)v44, &qword_100230BC0);
      sub_1000463F8(v47, 1, v27);
      if (!v45)
      {
        uint64_t v49 = &qword_100230E70;
        goto LABEL_22;
      }
      sub_10002CC68(v20, &qword_100230BC0);
    }
  }
LABEL_23:
  sub_100020FDC();
}

void sub_10011C904()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v74 = v3;
  uint64_t v4 = sub_100043478(&qword_100230BC0);
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_100040A70();
  uint64_t v71 = v6;
  uint64_t v7 = sub_100043478(&qword_1002344F0);
  uint64_t v8 = sub_1000208F0(v7);
  __chkstk_darwin(v8);
  sub_100035C70();
  uint64_t v72 = v9;
  sub_100020974();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v67 - v11;
  uint64_t v13 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v73 = v14;
  __chkstk_darwin(v15);
  sub_100011EC0();
  uint64_t v18 = v16 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v67 - v20;
  type metadata accessor for MercuryCacheMetadata(0);
  sub_100043B1C();
  __chkstk_darwin(v22);
  sub_100018FA0();
  uint64_t v75 = v23;
  uint64_t v24 = (uint64_t)v0 + *(int *)(v23 + 28);
  uint64_t v25 = type metadata accessor for RetryConfiguration(0);
  uint64_t v76 = v24;
  sub_100049A68();
  sub_100021AC0(v26, v27, v28, v25);
  sub_1000472F0();
  *(void *)&v77[0] = v29;
  *((void *)&v77[0] + 1) = v30;
  AnyHashable.init<A>(_:)();
  uint64_t v31 = v2;
  sub_100032918((uint64_t)v78, v2, v77);
  sub_1000434BC((uint64_t)v78);
  sub_100043478(&qword_10022F490);
  if ((swift_dynamicCast() & 1) == 0 || (v69 = v25, v70 = v0, uint64_t v32 = v13, v33 = v73, (v34 = v80) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v35 = v79;
  sub_1000206D4();
  *(void *)&v77[0] = v36;
  *((void *)&v77[0] + 1) = v37;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v78, v31, v77);
  sub_1000434BC((uint64_t)v78);
  int v38 = swift_dynamicCast();
  sub_100021AC0((uint64_t)v12, v38 ^ 1u, 1, v32);
  sub_1000463F8((uint64_t)v12, 1, v32);
  if (v50)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002CC68((uint64_t)v12, &qword_1002344F0);
LABEL_7:
    uint64_t v40 = v75;
    uint64_t v39 = v76;
LABEL_8:
    sub_10002CC68(v39, &qword_100230BC0);
    sub_100049A68();
    sub_100021AC0(v41, v42, v43, v40);
    goto LABEL_9;
  }
  uint64_t v67 = v35;
  uint64_t v68 = v21;
  uint64_t v44 = v33;
  BOOL v45 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
  v45(v21, v12, v32);
  sub_10004CF24();
  *(void *)&v77[0] = v46;
  *((void *)&v77[0] + 1) = v47;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v78, v31, v77);
  sub_1000434BC((uint64_t)v78);
  uint64_t v48 = v72;
  int v49 = swift_dynamicCast();
  sub_100021AC0(v48, v49 ^ 1u, 1, v32);
  sub_1000463F8(v48, 1, v32);
  if (v50)
  {
    sub_10002D2A0();
    v51();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002CC68(v48, &qword_1002344F0);
    uint64_t v40 = v75;
    uint64_t v39 = v76;
    goto LABEL_8;
  }
  v45((char *)v18, (char *)v48, v32);
  uint64_t v52 = v18;
  uint64_t v53 = (uint64_t)v70;
  uint64_t v54 = v68;
  *int64_t v70 = v67;
  *(void *)(v53 + 8) = v34;
  uint64_t v55 = v75;
  uint64_t v56 = *(void (**)(uint64_t, char *, uint64_t))(v44 + 16);
  v56(v53 + *(int *)(v75 + 20), v54, v32);
  uint64_t v57 = v53 + *(int *)(v55 + 24);
  uint64_t v72 = v52;
  v56(v57, (char *)v52, v32);
  *(void *)&v77[0] = 0xD000000000000012;
  *((void *)&v77[0] + 1) = 0x80000001001D3C10;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v78, v31, v77);
  sub_1000434BC((uint64_t)v78);
  sub_100043478(&qword_10022D6F0);
  char v58 = swift_dynamicCast();
  if (v58)
  {
    uint64_t v59 = v79;
  }
  else
  {
    uint64_t v59 = 0;
    uint64_t v79 = 0;
  }
  uint64_t v60 = v74;
  uint64_t v61 = v69;
  swift_bridgeObjectRelease();
  if (v59)
  {
    swift_bridgeObjectRetain();
    uint64_t v62 = v71;
    sub_10011BC4C();
  }
  else
  {
    uint64_t v62 = v71;
    sub_100021AC0(v71, 1, 1, v61);
  }
  uint64_t v63 = *(void (**)(void))(v44 + 8);
  sub_10002D2A0();
  v63();
  sub_10002D2A0();
  v63();
  swift_bridgeObjectRelease();
  sub_10011D638(v62, v76);
  sub_10011D52C(v53, v60, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
  sub_1000515AC();
  sub_100021AC0(v64, v65, v66, v55);
  sub_10011D4D4(v53, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
LABEL_9:
  sub_100020FDC();
}

void sub_10011CE8C()
{
  sub_1000209F4();
  uint64_t v2 = sub_100043478(&qword_100230BC0);
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_100020658();
  uint64_t v25 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  *((void *)&v24 + 1) = &type metadata for String;
  *(void *)&long long v23 = v5;
  *((void *)&v23 + 1) = v4;
  sub_1000472F0();
  *(void *)&v20[0] = v6;
  *((void *)&v20[0] + 1) = v7;
  swift_bridgeObjectRetain();
  sub_10004BFB4();
  sub_100043520((uint64_t)&v23, (uint64_t)v20);
  sub_100040D00();
  sub_10004377C((uint64_t)&v23);
  uint64_t v8 = type metadata accessor for MercuryCacheMetadata(0);
  uint64_t v9 = type metadata accessor for Date();
  *((void *)&v24 + 1) = v9;
  sub_10003BAA4((uint64_t *)&v23);
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 16);
  sub_1000409F4();
  v10();
  sub_1000206D4();
  *(void *)&v20[0] = v11;
  *((void *)&v20[0] + 1) = v12;
  sub_10004BFB4();
  sub_100043520((uint64_t)&v23, (uint64_t)v20);
  sub_100040D00();
  sub_10004377C((uint64_t)&v23);
  *((void *)&v24 + 1) = v9;
  sub_10003BAA4((uint64_t *)&v23);
  sub_1000409F4();
  v10();
  sub_10004CF24();
  *(void *)&v20[0] = v13;
  *((void *)&v20[0] + 1) = v14;
  sub_10004BFB4();
  sub_100043520((uint64_t)&v23, (uint64_t)v20);
  sub_100040D00();
  sub_10004377C((uint64_t)&v23);
  sub_10011D5E8((uint64_t)v1 + *(int *)(v8 + 28), v0, &qword_100230BC0);
  uint64_t v15 = type metadata accessor for RetryConfiguration(0);
  sub_1000463F8(v0, 1, v15);
  if (v16)
  {
    sub_10002CC68(v0, &qword_100230BC0);
    long long v23 = 0u;
    long long v24 = 0u;
  }
  else
  {
    sub_10011BF94();
    uint64_t v18 = v17;
    sub_10011D4D4(v0, (void (*)(void))type metadata accessor for RetryConfiguration);
    *((void *)&v24 + 1) = sub_100043478(&qword_10022D6F0);
    *(void *)&long long v23 = v18;
  }
  sub_10011D5E8((uint64_t)&v23, (uint64_t)&v21, &qword_10022F490);
  if (v22)
  {
    sub_100043510(&v21, v20);
    v19[0] = 0xD000000000000012;
    v19[1] = 0x80000001001D3C10;
    AnyHashable.init<A>(_:)();
    sub_100043520((uint64_t)v20, (uint64_t)v19);
    sub_100088240((uint64_t)v19, (uint64_t)&v21);
    sub_10004377C((uint64_t)v20);
  }
  else
  {
    sub_10002CC68((uint64_t)&v21, &qword_10022F490);
  }
  sub_10002CC68((uint64_t)&v23, &qword_10022F490);
  sub_100020FDC();
}

BOOL sub_10011D154()
{
  return (dispatch thunk of static Comparable.< infix(_:_:)() & 1) == 0;
}

uint64_t sub_10011D1C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100043478(&qword_100230C98);
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = sub_100044160();
  uint64_t updated = type metadata accessor for CacheUpdateRun(v7);
  sub_100043B1C();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011C204();
  if (sub_10004FD40(v2, 1, updated) == 1)
  {
    sub_10002CC68(v2, &qword_100230C98);
LABEL_6:
    sub_100043478(&qword_10022D7B8);
    sub_100049A68();
    return sub_100021AC0(v16, v17, v18, v19);
  }
  sub_10011D474(v2, (uint64_t)v11, (void (*)(void))type metadata accessor for CacheUpdateRun);
  uint64_t v12 = &v11[*(int *)(updated + 20)];
  if ((static Date.> infix(_:_:)() & 1) == 0)
  {
    sub_10011D4D4((uint64_t)v11, (void (*)(void))type metadata accessor for CacheUpdateRun);
    goto LABEL_6;
  }
  uint64_t v13 = sub_100043478(&qword_10022D7B8);
  uint64_t v14 = a2 + *(int *)(v13 + 48);
  sub_10011D52C(a1, a2, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
  type metadata accessor for Date();
  sub_100043B1C();
  (*(void (**)(uint64_t, char *))(v15 + 16))(v14, v12);
  sub_10011D4D4((uint64_t)v11, (void (*)(void))type metadata accessor for CacheUpdateRun);
  sub_1000515AC();
  uint64_t v19 = v13;
  return sub_100021AC0(v16, v17, v18, v19);
}

uint64_t type metadata accessor for CacheUpdateRun(uint64_t a1)
{
  return sub_1000514B4(a1, qword_100230D90);
}

uint64_t type metadata accessor for MercuryCacheMetadata(uint64_t a1)
{
  return sub_1000514B4(a1, (uint64_t *)&unk_100230E28);
}

uint64_t type metadata accessor for RetryConfiguration(uint64_t a1)
{
  return sub_1000514B4(a1, qword_100230CF8);
}

unint64_t sub_10011D424()
{
  unint64_t result = qword_10022D728;
  if (!qword_10022D728)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022D728);
  }
  return result;
}

uint64_t sub_10011D474(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100043B1C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10011D4D4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100043B1C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10011D52C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100043B1C();
  uint64_t v4 = sub_10002D450();
  v5(v4);
  return a2;
}

uint64_t sub_10011D580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_100230BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10011D5E8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100043478(a3);
  sub_100043B1C();
  uint64_t v4 = sub_10002D450();
  v5(v4);
  return a2;
}

uint64_t sub_10011D638(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_100230BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_10011D6A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v5 = *(int *)(a3 + 28);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_10011D774(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = type metadata accessor for Date();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

uint64_t sub_10011D7DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_10011D860(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_10011D8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_10011D970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_10011D9F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10011DA08);
}

uint64_t sub_10011DA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 28);
  uint64_t v5 = type metadata accessor for Date();
  return sub_10004FD40(v4, a2, v5);
}

uint64_t sub_10011DA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10011DA68);
}

uint64_t sub_10011DA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 28);
  uint64_t v6 = type metadata accessor for Date();
  return sub_100021AC0(v5, a2, a2, v6);
}

uint64_t sub_10011DAB8()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_10011DB58(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *((unsigned char *)v4 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_10011DC5C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_10011DCD4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_10011DD88(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_10011DE38(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_10011DED0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10011DF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10011DF84);
}

uint64_t sub_10011DF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100046E50();
  }
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = a1 + *(int *)(a3 + 20);
  return sub_10004FD40(v8, a2, v7);
}

uint64_t sub_10011DFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10011E010);
}

void sub_10011E010()
{
  sub_10004C20C();
  if (v3)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = type metadata accessor for Date();
    uint64_t v6 = v1 + *(int *)(v4 + 20);
    sub_100021AC0(v6, v0, v0, v5);
  }
}

uint64_t sub_10011E084()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_10011E124(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12(&v4[a3[6]], &a2[a3[6]], v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = &v4[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = type metadata accessor for RetryConfiguration(0);
    if (sub_10004FD40((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = sub_100043478(&qword_100230BC0);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((void *)v14 + 2) = *((void *)v15 + 2);
      v12(&v14[*(int *)(v16 + 28)], &v15[*(int *)(v16 + 28)], v11);
      sub_100021AC0((uint64_t)v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t sub_10011E2D4(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v5 - 8), v4, v5);
  v10(a1 + a2[6], v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for RetryConfiguration(0);
  uint64_t result = sub_10004FD40(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = v6 + *(int *)(v7 + 28);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

char *sub_10011E3DC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for RetryConfiguration(0);
  if (sub_10004FD40((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_100043478(&qword_100230BC0);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((void *)v13 + 2) = *((void *)v14 + 2);
    v11(&v13[*(int *)(v15 + 28)], &v14[*(int *)(v15 + 28)], v10);
    sub_100021AC0((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

char *sub_10011E53C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v11(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for RetryConfiguration(0);
  LODWORD(v8) = sub_10004FD40((uint64_t)v13, 1, v15);
  int v16 = sub_10004FD40((uint64_t)v14, 1, v15);
  if (!v8)
  {
    if (!v16)
    {
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = *((void *)v14 + 1);
      *((void *)v13 + 2) = *((void *)v14 + 2);
      v11(&v13[*(int *)(v15 + 28)], &v14[*(int *)(v15 + 28)], v9);
      return a1;
    }
    sub_10011D4D4((uint64_t)v13, (void (*)(void))type metadata accessor for RetryConfiguration);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100043478(&qword_100230BC0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  *((void *)v13 + 2) = *((void *)v14 + 2);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(&v13[*(int *)(v15 + 28)], &v14[*(int *)(v15 + 28)], v9);
  sub_100021AC0((uint64_t)v13, 0, 1, v15);
  return a1;
}

char *sub_10011E740(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for RetryConfiguration(0);
  if (sub_10004FD40((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_100043478(&qword_100230BC0);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *((void *)v12 + 2) = *((void *)v13 + 2);
    v10(&v12[*(int *)(v14 + 28)], &v13[*(int *)(v14 + 28)], v9);
    sub_100021AC0((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

char *sub_10011E890(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v12(&a1[a3[6]], &a2[a3[6]], v10);
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = type metadata accessor for RetryConfiguration(0);
  LODWORD(v9) = sub_10004FD40((uint64_t)v14, 1, v16);
  int v17 = sub_10004FD40((uint64_t)v15, 1, v16);
  if (!v9)
  {
    if (!v17)
    {
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((void *)v14 + 2) = *((void *)v15 + 2);
      v12(&v14[*(int *)(v16 + 28)], &v15[*(int *)(v16 + 28)], v10);
      return a1;
    }
    sub_10011D4D4((uint64_t)v14, (void (*)(void))type metadata accessor for RetryConfiguration);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_100043478(&qword_100230BC0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((void *)v14 + 2) = *((void *)v15 + 2);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v14[*(int *)(v16 + 28)], &v15[*(int *)(v16 + 28)], v10);
  sub_100021AC0((uint64_t)v14, 0, 1, v16);
  return a1;
}

uint64_t sub_10011EA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10011EA88);
}

uint64_t sub_10011EA88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100046E50();
  }
  type metadata accessor for Date();
  sub_1000452B8();
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = v7;
    uint64_t v10 = *(int *)(a3 + 20);
  }
  else
  {
    uint64_t v9 = sub_100043478(&qword_100230BC0);
    uint64_t v10 = *(int *)(a3 + 28);
  }
  return sub_10004FD40(a1 + v10, a2, v9);
}

uint64_t sub_10011EB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10011EB40);
}

void sub_10011EB40()
{
  sub_10004C20C();
  if (v4)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v5 = v3;
    int v6 = v2;
    type metadata accessor for Date();
    sub_1000452B8();
    if (*(_DWORD *)(v8 + 84) == v6)
    {
      uint64_t v9 = v7;
      uint64_t v10 = *(int *)(v5 + 20);
    }
    else
    {
      uint64_t v9 = sub_100043478(&qword_100230BC0);
      uint64_t v10 = *(int *)(v5 + 28);
    }
    sub_100021AC0(v1 + v10, v0, v0, v9);
  }
}

void sub_10011EBE4()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_10011ECB8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10011ECB8()
{
  if (!qword_100230E38)
  {
    type metadata accessor for RetryConfiguration(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100230E38);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for CacheUpdateRun.RunType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10011EDDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CacheUpdateRun.RunType()
{
  return &type metadata for CacheUpdateRun.RunType;
}

unint64_t sub_10011EE18()
{
  unint64_t result = qword_100230E78;
  if (!qword_100230E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230E78);
  }
  return result;
}

uint64_t sub_10011EE64(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_100120960(a1, (uint64_t)sub_100120C88, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_10011EEF0()
{
  if (qword_10022C4C0 != -1) {
    swift_once();
  }
  qword_100230E80 = qword_100244128;
  return swift_retain();
}

uint64_t sub_10011EF54()
{
  unint64_t v0 = sub_100120920();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v4 = v0;
  uint64_t v5 = &off_1002137B0;
  *(void *)&long long v3 = sub_10011EFD4();
  type metadata accessor for MercuryCacheMetadataStore();
  uint64_t v1 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t result = sub_100028270(&v3, v1 + 112);
  qword_100244150 = v1;
  return result;
}

id sub_10011EFD4()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithDomain:v1];

  return v2;
}

uint64_t sub_10011F048(void *a1)
{
  uint64_t v2 = sub_100043478(&qword_100230BD8);
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MercuryCacheMetadata(0);
  uint64_t v29 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100035C70();
  uint64_t v30 = v7;
  __chkstk_darwin(v8);
  uint64_t v28 = (uint64_t)v27 - v9;
  id v10 = [a1 stringValue];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v12 = sub_100120690(v11);
  swift_bridgeObjectRelease();
  sub_10005370C(v12, v31);
  uint64_t v13 = v31[1];
  int64_t v14 = v31[3];
  uint64_t v15 = v31[4];
  int64_t v16 = (unint64_t)(v31[2] + 64) >> 6;
  v27[1] = v12;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v18 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v15)
    {
      v15 &= v15 - 1;
      goto LABEL_22;
    }
    int64_t v19 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v19 >= v16) {
      goto LABEL_29;
    }
    uint64_t v20 = *(void *)(v13 + 8 * v19);
    int64_t v21 = v14 + 1;
    if (!v20)
    {
      int64_t v21 = v14 + 2;
      if (v14 + 2 >= v16) {
        goto LABEL_29;
      }
      uint64_t v20 = *(void *)(v13 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v14 + 3;
        if (v14 + 3 >= v16) {
          goto LABEL_29;
        }
        uint64_t v20 = *(void *)(v13 + 8 * v21);
        if (!v20)
        {
          int64_t v21 = v14 + 4;
          if (v14 + 4 >= v16) {
            goto LABEL_29;
          }
          uint64_t v20 = *(void *)(v13 + 8 * v21);
          if (!v20)
          {
            int64_t v21 = v14 + 5;
            if (v14 + 5 >= v16) {
              goto LABEL_29;
            }
            uint64_t v20 = *(void *)(v13 + 8 * v21);
            if (!v20)
            {
              int64_t v21 = v14 + 6;
              if (v14 + 6 >= v16) {
                goto LABEL_29;
              }
              uint64_t v20 = *(void *)(v13 + 8 * v21);
              if (!v20)
              {
                int64_t v22 = v14 + 7;
                while (v22 < v16)
                {
                  uint64_t v20 = *(void *)(v13 + 8 * v22++);
                  if (v20)
                  {
                    int64_t v21 = v22 - 1;
                    goto LABEL_21;
                  }
                }
LABEL_29:
                swift_bridgeObjectRelease();
                swift_release();
                return (uint64_t)v18;
              }
            }
          }
        }
      }
    }
LABEL_21:
    uint64_t v15 = (v20 - 1) & v20;
    int64_t v14 = v21;
LABEL_22:
    swift_bridgeObjectRetain();
    sub_10011C904();
    if (sub_10004FD40((uint64_t)v5, 1, v6) == 1)
    {
      uint64_t result = sub_10002CC0C((uint64_t)v5, &qword_100230BD8);
    }
    else
    {
      uint64_t v23 = v28;
      sub_100120CCC((uint64_t)v5, v28);
      sub_100120CCC(v23, v30);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v18 = (void *)sub_100070B18(0, v18[2] + 1, 1, (uint64_t)v18);
      }
      unint64_t v25 = v18[2];
      unint64_t v24 = v18[3];
      uint64_t v26 = (uint64_t)v18;
      if (v25 >= v24 >> 1) {
        uint64_t v26 = sub_100070B18(v24 > 1, v25 + 1, 1, (uint64_t)v18);
      }
      *(void *)(v26 + 16) = v25 + 1;
      uint64_t v18 = (void *)v26;
      uint64_t result = sub_100120CCC(v30, v26+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v25);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10011F3AC(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for MercuryCacheMetadata(0);
  sub_100044798(v4);
  v3[5] = v5;
  v3[6] = swift_task_alloc();
  v3[7] = swift_task_alloc();
  return _swift_task_switch(sub_10011F458, v2, 0);
}

uint64_t sub_10011F458()
{
  NSString v1 = v0;
  uint64_t v2 = v0[2];
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v31 = v0[7];
    uint64_t v4 = v0[5];
    uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    while (1)
    {
      uint64_t v32 = v3;
      uint64_t v9 = v1[6];
      uint64_t v8 = (uint64_t *)v1[7];
      id v10 = v1;
      sub_100120B60(v5, (uint64_t)v8);
      uint64_t v11 = *v8;
      uint64_t v12 = *(void *)(v31 + 8);
      sub_100120B60((uint64_t)v8, v9);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v33 = v7;
      uint64_t result = sub_100042ADC(v11, v12);
      uint64_t v16 = v7[2];
      BOOL v17 = (v15 & 1) == 0;
      Swift::Int v18 = v16 + v17;
      if (__OFADD__(v16, v17))
      {
        __break(1u);
LABEL_21:
        __break(1u);
        return result;
      }
      unint64_t v19 = result;
      char v20 = v15;
      sub_100043478(&qword_100230F90);
      Swift::Bool v21 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v18);
      uint64_t v7 = v33;
      NSString v1 = v10;
      if (v21)
      {
        unint64_t v22 = sub_100042ADC(v11, v12);
        if ((v20 & 1) != (v23 & 1))
        {
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        }
        unint64_t v19 = v22;
      }
      uint64_t v24 = v10[6];
      if (v20)
      {
        sub_100120D30(v24, v33[7] + v19 * v6);
      }
      else
      {
        v33[(v19 >> 6) + 8] |= 1 << v19;
        unint64_t v25 = (uint64_t *)(v33[6] + 16 * v19);
        *unint64_t v25 = v11;
        v25[1] = v12;
        uint64_t result = sub_100120CCC(v24, v33[7] + v19 * v6);
        uint64_t v26 = v33[2];
        BOOL v27 = __OFADD__(v26, 1);
        uint64_t v28 = v26 + 1;
        if (v27) {
          goto LABEL_21;
        }
        uint64_t v33[2] = v28;
        swift_bridgeObjectRetain();
      }
      uint64_t v29 = v10[7];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100120C2C(v29);
      v5 += v6;
      uint64_t v3 = v32 - 1;
      if (v32 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
  }
  uint64_t v7 = _swiftEmptyDictionarySingleton;
LABEL_14:
  sub_10011F6E0((uint64_t)v7, (void *)v1[3]);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v1[1];
  return v30();
}

uint64_t sub_10011F6E0(uint64_t a1, void *a2)
{
  uint64_t v67 = sub_100043478(&qword_100230BD0);
  __chkstk_darwin(v67);
  sub_100035C70();
  uint64_t v66 = v5;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v60 - v8);
  __chkstk_darwin(v7);
  uint64_t v65 = (char *)&v60 - v10;
  id v61 = a2;
  id v11 = [a2 stringValue];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v62 = v2;
  uint64_t v60 = sub_100120690(v12);
  swift_bridgeObjectRelease();
  sub_10005370C(a1, v72);
  uint64_t v68 = v72[0];
  int64_t v69 = v72[3];
  unint64_t v13 = v72[4];
  uint64_t v63 = v72[1];
  int64_t v64 = (unint64_t)(v72[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  int64_t v14 = _swiftEmptyDictionarySingleton;
  if (!v13) {
    goto LABEL_3;
  }
LABEL_2:
  uint64_t v70 = (v13 - 1) & v13;
  for (unint64_t i = __clz(__rbit64(v13)) | (v69 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v18 << 6))
  {
    uint64_t v23 = *(void *)(v68 + 56);
    uint64_t v24 = (uint64_t *)(*(void *)(v68 + 48) + 16 * i);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    uint64_t v27 = type metadata accessor for MercuryCacheMetadata(0);
    sub_1000208F0(v27);
    uint64_t v29 = v23 + *(void *)(v28 + 72) * i;
    uint64_t v30 = v67;
    uint64_t v31 = v65;
    sub_100120B60(v29, (uint64_t)&v65[*(int *)(v67 + 48)]);
    *uint64_t v31 = v26;
    v31[1] = v25;
    sub_100120BC4((uint64_t)v31, (uint64_t)v9);
    uint64_t v32 = *(int *)(v30 + 48);
    uint64_t v33 = v66;
    uint64_t v34 = (uint64_t)v66 + v32;
    uint64_t v35 = *v9;
    uint64_t v36 = v9[1];
    uint64_t v37 = (uint64_t)v9;
    uint64_t *v66 = *v9;
    v33[1] = v36;
    sub_100120B60((uint64_t)v9 + v32, (uint64_t)v33 + v32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10011CE8C();
    uint64_t v39 = v38;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v71 = v14;
    unint64_t v41 = sub_100042ADC(v35, v36);
    uint64_t v43 = v14[2];
    BOOL v44 = (v42 & 1) == 0;
    Swift::Int v45 = v43 + v44;
    if (__OFADD__(v43, v44)) {
      break;
    }
    unint64_t v46 = v41;
    char v47 = v42;
    sub_100043478(&qword_100230F88);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v45))
    {
      unint64_t v48 = sub_100042ADC(v35, v36);
      if ((v47 & 1) != (v49 & 1)) {
        goto LABEL_39;
      }
      unint64_t v46 = v48;
    }
    int64_t v14 = v71;
    if (v47)
    {
      uint64_t v50 = v71[7];
      swift_bridgeObjectRelease();
      *(void *)(v50 + 8 * v46) = v39;
    }
    else
    {
      v71[(v46 >> 6) + 8] |= 1 << v46;
      uint64_t v51 = (uint64_t *)(v14[6] + 16 * v46);
      uint64_t *v51 = v35;
      v51[1] = v36;
      *(void *)(v14[7] + 8 * v46) = v39;
      uint64_t v52 = v14[2];
      BOOL v20 = __OFADD__(v52, 1);
      uint64_t v53 = v52 + 1;
      if (v20) {
        goto LABEL_37;
      }
      void v14[2] = v53;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100120C2C(v34);
    uint64_t v9 = (uint64_t *)v37;
    sub_10002CC0C(v37, &qword_100230BD0);
    unint64_t v13 = v70;
    if (v70) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v16 = v69 + 1;
    if (__OFADD__(v69, 1)) {
      goto LABEL_38;
    }
    if (v16 >= v64) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v63 + 8 * v16);
    int64_t v18 = v69 + 1;
    if (!v17)
    {
      sub_100048868();
      if (v19 == v20) {
        goto LABEL_35;
      }
      sub_1000452CC();
      if (!v17)
      {
        sub_100048868();
        if (v19 == v20) {
          goto LABEL_35;
        }
        sub_1000452CC();
        if (!v17)
        {
          sub_100048868();
          if (v19 == v20) {
            goto LABEL_35;
          }
          sub_1000452CC();
          if (!v17)
          {
            sub_100048868();
            if (v19 == v20) {
              goto LABEL_35;
            }
            sub_1000452CC();
            if (!v17)
            {
              int64_t v18 = v21 + 5;
              if (v21 + 5 >= v64) {
                goto LABEL_35;
              }
              unint64_t v17 = *(void *)(v63 + 8 * v18);
              if (!v17)
              {
                int64_t v22 = v69 + 7;
                while (v22 < v64)
                {
                  unint64_t v17 = *(void *)(v63 + 8 * v22++);
                  if (v17)
                  {
                    int64_t v18 = v22 - 1;
                    goto LABEL_24;
                  }
                }
LABEL_35:
                swift_release();
                uint64_t v54 = sub_10011EE64((uint64_t)v14, v60);
                id v55 = [v61 stringValue];
                uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                char v58 = v57;

                sub_100120154(v54, v56, v58);
                swift_bridgeObjectRelease();
                return swift_bridgeObjectRelease();
              }
            }
          }
        }
      }
    }
LABEL_24:
    int64_t v69 = v18;
    uint64_t v70 = (v17 - 1) & v17;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10011FB74(uint64_t a1)
{
  v2[31] = a1;
  v2[32] = v1;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  sub_1000208F0(v3);
  v2[33] = swift_task_alloc();
  return _swift_task_switch(sub_10011FC00, v1, 0);
}

uint64_t sub_10011FC00()
{
  uint64_t v1 = v0 + 80;
  if (qword_10022C510 != -1) {
    swift_once();
  }
  uint64_t v37 = v0 + 144;
  uint64_t v2 = *(void *)(v0 + 256);
  sub_100043478(&qword_10022E560);
  uint64_t v3 = type metadata accessor for LogMessage();
  sub_100044798(v3);
  uint64_t v36 = *(void *)(v4 + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v5 = type metadata accessor for MercuryCacheMetadataStore();
  *(void *)(v0 + 40) = v5;
  *(void *)(v0 + 16) = v2;
  swift_retain();
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v35 = v0 + 80;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788((void *)(v0 + 16), v5);
    uint64_t DynamicType = swift_getDynamicType();
    *(void *)(v0 + 232) = swift_getMetatypeMetadata();
    *(void *)(v0 + 208) = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C(v0 + 208, &qword_10022F490);
    v12._uint64_t countAndFlagsBits = 5972026;
    v12._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    *(void *)(v0 + 200) = &type metadata for String;
    *(void *)(v0 + 176) = v8;
    *(void *)(v0 + 184) = v10;
    uint64_t v1 = v0 + 80;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C(v0 + 176, &qword_10022F490);
    v13._uint64_t countAndFlagsBits = 93;
    v13._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788((void *)(v0 + 16), v5);
    uint64_t v14 = swift_getDynamicType();
    *(void *)(v0 + 72) = swift_getMetatypeMetadata();
    *(void *)(v0 + 48) = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C(v0 + 48, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
  }
  int64_t v16 = *(void **)(v0 + 248);
  unint64_t v17 = *(void **)(v0 + 256);
  sub_10004377C(v0 + 16);
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  id v18 = [v16 description];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  v22._uint64_t countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 104) = &type metadata for String;
  *(void *)(v0 + 80) = 0xD00000000000001CLL;
  *(void *)(v0 + 88) = 0x80000001001D3CD0;
  static LogMessage.sensitive(_:)();
  sub_10002CC0C(v1, &qword_10022F490);
  uint64_t v23 = static os_log_type_t.info.getter();
  sub_10004841C(v23);
  swift_bridgeObjectRelease();
  uint64_t v24 = v17[17];
  uint64_t v25 = v17[18];
  sub_100049788(v17 + 14, v24);
  (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v25 + 16))(0xD00000000000001ELL, 0x80000001001D3C90, v24, v25);
  if (!*(void *)(v0 + 136))
  {
    sub_10002CC0C(v0 + 112, &qword_10022F490);
    goto LABEL_7;
  }
  sub_100043478(&qword_100230F80);
  if (!swift_dynamicCast())
  {
LABEL_7:
    sub_100043478(&qword_10022E688);
    uint64_t v26 = Dictionary.init(dictionaryLiteral:)();
    goto LABEL_8;
  }
  uint64_t v26 = *(void *)(v0 + 240);
LABEL_8:
  uint64_t v38 = v26;
  id v27 = objc_msgSend(*(id *)(v0 + 248), "stringValue", v35, v36);
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  sub_10008AE48(v28, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = v17[17];
  uint64_t v32 = v17[18];
  sub_100049788(v17 + 14, v31);
  *(void *)(v0 + 168) = sub_100043478(&qword_100230F80);
  *(void *)(v0 + 144) = v38;
  (*(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v32 + 8))(v37, 0xD00000000000001ELL, 0x80000001001D3C90, v31, v32);
  sub_10004377C(v37);
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

uint64_t sub_100120154(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = v3;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  if (qword_10022C510 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v8 = type metadata accessor for LogMessage();
  sub_100044798(v8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v35 = (void *)type metadata accessor for MercuryCacheMetadataStore();
  unint64_t v33 = v3;
  swift_retain();
  id v9 = (id)AMSLogKey();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(&v33, (uint64_t)v35);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v31[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v31, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 5972026;
    v15._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    uint64_t MetatypeMetadata = &type metadata for String;
    v31[0] = v11;
    v31[1] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v31, &qword_10022F490);
    v16._uint64_t countAndFlagsBits = 93;
    v16._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(&v33, (uint64_t)v35);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v31[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v31, &qword_10022F490);
    v18._uint64_t countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v33);
  unint64_t v33 = 0;
  unint64_t v34 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  unint64_t v33 = 0xD00000000000001CLL;
  unint64_t v34 = 0x80000001001D3CB0;
  v19._uint64_t countAndFlagsBits = a2;
  v19._object = a3;
  String.append(_:)(v19);
  uint64_t v35 = &type metadata for String;
  static LogMessage.sensitive(_:)();
  sub_10002CC0C((uint64_t)&v33, &qword_10022F490);
  unint64_t v33 = 0x203A68746977;
  unint64_t v34 = 0xE600000000000000;
  sub_100043478(&qword_10022D6F0);
  v20._uint64_t countAndFlagsBits = Dictionary.description.getter();
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  uint64_t v35 = &type metadata for String;
  static LogMessage.safe(_:)();
  sub_10002CC0C((uint64_t)&v33, &qword_10022F490);
  uint64_t v21 = static os_log_type_t.info.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  Swift::String v22 = (void *)(v3 + 112);
  sub_100049788((void *)(v3 + 112), *(void *)(v3 + 136));
  unint64_t v23 = sub_100048EA0();
  v24(v23);
  if (&qword_10022F490)
  {
    swift_errorRelease();
  }
  else if (v35)
  {
    sub_100043478(&qword_100230F80);
    if (swift_dynamicCast())
    {
      uint64_t v25 = v31[0];
      goto LABEL_9;
    }
  }
  else
  {
    sub_10002CC0C((uint64_t)&v33, &qword_10022F490);
  }
  sub_100043478(&qword_10022E688);
  uint64_t v25 = Dictionary.init(dictionaryLiteral:)();
LABEL_9:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_isUniquelyReferenced_nonNull_native();
  unint64_t v33 = v25;
  sub_10008C73C();
  unint64_t v26 = v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v4 + 136);
  uint64_t v27 = *(void *)(v4 + 144);
  sub_100049788(v22, v28);
  uint64_t v35 = (void *)sub_100043478(&qword_100230F80);
  unint64_t v33 = v26;
  (*(void (**)(unint64_t *, unint64_t, unint64_t, uint64_t, uint64_t))(v27 + 8))(&v33, 0xD00000000000001ELL, 0x80000001001D3C90, v28, v27);
  return sub_10004377C((uint64_t)&v33);
}

uint64_t sub_100120690(uint64_t a1)
{
  sub_100049788((void *)(v1 + 112), *(void *)(v1 + 136));
  unint64_t v4 = sub_100048EA0();
  v5(v4);
  if (v2)
  {
    swift_errorRelease();
    goto LABEL_11;
  }
  if (!v9)
  {
    uint64_t v7 = (long long *)v8;
LABEL_10:
    sub_10002CC0C((uint64_t)v7, &qword_10022F490);
    goto LABEL_11;
  }
  sub_100043478(&qword_10022D6F0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v8, v10, &v10);
  swift_bridgeObjectRelease();
  sub_1000434BC((uint64_t)v8);
  if (!v11)
  {
    uint64_t v7 = &v10;
    goto LABEL_10;
  }
  sub_100043478(&qword_10022E688);
  if (swift_dynamicCast()) {
    return a1;
  }
LABEL_11:
  sub_100043478(&qword_10022D6F0);
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_100120828()
{
  sub_10004377C(v0 + 112);
  swift_defaultActor_destroy();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for MercuryCacheMetadataStore()
{
  return self;
}

unint64_t sub_100120884(uint64_t a1)
{
  unint64_t result = sub_1001208AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001208AC()
{
  unint64_t result = qword_100230F70;
  if (!qword_100230F70)
  {
    type metadata accessor for MercuryCacheMetadataStore();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100230F70);
  }
  return result;
}

uint64_t sub_1001208F8()
{
  return v0;
}

uint64_t sub_100120904()
{
  return sub_1001208F8();
}

unint64_t sub_100120920()
{
  unint64_t result = qword_100230F78;
  if (!qword_100230F78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100230F78);
  }
  return result;
}

uint64_t sub_100120960(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  sub_1001AA8FC(&v31);
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  uint64_t v8 = sub_1001AA9A8(v7);
  if (v9)
  {
    uint64_t v11 = v8;
    uint64_t v12 = v9;
    uint64_t v13 = v10;
    while (1)
    {
      uint64_t v14 = (void *)*a5;
      unint64_t v16 = sub_100042ADC(v11, v12);
      uint64_t v17 = v14[2];
      BOOL v18 = (v15 & 1) == 0;
      int64_t v19 = v17 + v18;
      if (__OFADD__(v17, v18)) {
        break;
      }
      char v20 = v15;
      if (v14[3] >= v19)
      {
        if ((a4 & 1) == 0)
        {
          sub_100043478(&qword_100230F88);
          _NativeDictionary.copy()();
        }
      }
      else
      {
        sub_1001A59E4();
        int64_t v19 = sub_100042ADC(v11, v12);
        if ((v20 & 1) != (v21 & 1)) {
          goto LABEL_17;
        }
        unint64_t v16 = v19;
      }
      Swift::String v22 = (void *)*a5;
      if (v20)
      {
        swift_bridgeObjectRelease();
        uint64_t v23 = v22[7];
        int64_t v19 = swift_bridgeObjectRelease();
        *(void *)(v23 + 8 * v16) = v13;
      }
      else
      {
        v22[(v16 >> 6) + 8] |= 1 << v16;
        uint64_t v24 = (uint64_t *)(v22[6] + 16 * v16);
        *uint64_t v24 = v11;
        v24[1] = v12;
        *(void *)(v22[7] + 8 * v16) = v13;
        uint64_t v25 = v22[2];
        BOOL v26 = __OFADD__(v25, 1);
        uint64_t v27 = v25 + 1;
        if (v26) {
          goto LABEL_16;
        }
        _OWORD v22[2] = v27;
      }
      uint64_t v11 = sub_1001AA9A8(v19);
      uint64_t v12 = v28;
      uint64_t v13 = v29;
      a4 = 1;
      if (!v28) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    sub_100011E28();
    return swift_release();
  }
  return result;
}

uint64_t sub_100120B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MercuryCacheMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100120BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_100230BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100120C2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MercuryCacheMetadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100120C88@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001A5564(&v6, *a1, a1[1], a1[2]);
  uint64_t v4 = v6;
  *a2 = result;
  a2[1] = v5;
  a2[2] = v4;
  return result;
}

uint64_t sub_100120CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MercuryCacheMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100120D30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MercuryCacheMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_100120D94(void *a1)
{
  id v1 = [a1 description];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;

  v5._uint64_t countAndFlagsBits = v2;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 95;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  return 0xD00000000000001ELL;
}

uint64_t sub_100120E44()
{
  if (qword_10022C4C0 != -1) {
    swift_once();
  }
  qword_100230F98 = qword_100244128;
  return swift_retain();
}

uint64_t sub_100120EA8()
{
  *(void *)(v1 + 472) = v0;
  type metadata accessor for LogMessage.StringInterpolation();
  *(void *)(v1 + 480) = swift_task_alloc();
  return _swift_task_switch(sub_100120F38, 0, 0);
}

uint64_t sub_100120F38()
{
  uint64_t v1 = v0 + 160;
  if (qword_10022C520 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 472);
  *(void *)(v0 + 488) = sub_100043478(&qword_10022E560);
  uint64_t v3 = *(void *)(type metadata accessor for LogMessage() - 8);
  *(void *)(v0 + 496) = *(void *)(v3 + 72);
  *(_DWORD *)(v0 + 60) = *(_DWORD *)(v3 + 80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v4 = *(void *)(v2 + 16);
  *(_OWORD *)(v0 + 408) = *(_OWORD *)v2;
  *(void *)(v0 + 424) = v4;
  Swift::String v5 = *(void **)(v2 + 24);
  *(void *)(v0 + 504) = v5;
  uint64_t v6 = *(void *)(v2 + 32);
  *(void *)(v0 + 512) = v6;
  char v30 = *(unsigned char *)(v2 + 40);
  *(unsigned char *)(v0 + 57) = v30;
  *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 416);
  *(void *)(v0 + 120) = &unk_100214410;
  uint64_t v7 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 96) = v7;
  long long v8 = *(_OWORD *)(v2 + 25);
  long long v9 = *(_OWORD *)(v2 + 16);
  v7[1] = *(_OWORD *)v2;
  void v7[2] = v9;
  *(_OWORD *)((char *)v7 + 41) = v8;
  sub_10002AB90(v0 + 448);
  uint64_t v31 = v6;
  swift_bridgeObjectRetain();
  id v32 = v5;
  id v10 = (id)AMSLogKey();
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788((void *)(v0 + 96), *(void *)(v0 + 120));
    uint64_t DynamicType = swift_getDynamicType();
    *(void *)(v0 + 216) = swift_getMetatypeMetadata();
    *(void *)(v0 + 192) = DynamicType;
    uint64_t v15 = v0 + 96;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    uint64_t v1 = v0 + 160;
    sub_1000423CC(v0 + 192);
    v16._uint64_t countAndFlagsBits = 5972026;
    v16._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    *(void *)(v0 + 88) = &type metadata for String;
    *(void *)(v0 + 64) = v29;
    *(void *)(v0 + 72) = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 64);
    v17._uint64_t countAndFlagsBits = 93;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    uint64_t v15 = v0 + 96;
    sub_100049788((void *)(v0 + 96), *(void *)(v0 + 120));
    uint64_t v18 = swift_getDynamicType();
    *(void *)(v0 + 152) = swift_getMetatypeMetadata();
    *(void *)(v0 + 128) = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 128);
    v19._uint64_t countAndFlagsBits = 58;
    v19._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C(v15);
  LogMessage.init(stringLiteral:)();
  *(void *)(v0 + 432) = 0;
  *(void *)(v0 + 440) = 0xE000000000000000;
  v20._uint64_t countAndFlagsBits = 0x646F6D2068746977;
  v20._object = (void *)0xEB00000000206C65;
  String.append(_:)(v20);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 408);
  *(void *)(v0 + 32) = *(void *)(v0 + 424);
  *(void *)(v0 + 40) = v32;
  *(void *)(v0 + 48) = v31;
  *(unsigned char *)(v0 + 56) = v30;
  _print_unlocked<A, B>(_:_:)();
  uint64_t v21 = *(void *)(v0 + 432);
  uint64_t v22 = *(void *)(v0 + 440);
  *(void *)(v0 + 184) = &type metadata for String;
  *(void *)(v0 + 160) = v21;
  *(void *)(v0 + 168) = v22;
  static LogMessage.sensitive(_:)();
  sub_1000423CC(v1);
  uint64_t v23 = static os_log_type_t.info.getter();
  sub_10004841C(v23);
  swift_bridgeObjectRelease();
  if (qword_10022C538 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_100244158;
  *(void *)(v0 + 520) = qword_100244158;
  if (qword_10022C518 != -1) {
    swift_once();
  }
  *(void *)(v0 + 528) = qword_100244150;
  type metadata accessor for MercuryCacheDatabase();
  id v25 = v32;
  sub_1000363B4();
  *(void *)(v0 + 536) = v26;
  sub_10006E0A4();
  *(void *)(v0 + 544) = sub_100051DF8();
  type metadata accessor for MercuryCacheUpdateStateManager();
  uint64_t v27 = swift_allocObject();
  *(void *)(v0 + 552) = v27;
  swift_defaultActor_initialize();
  *(void *)(v27 + 112) = &_swiftEmptySetSingleton;
  type metadata accessor for DynamicActivityTaskScheduler();
  *(void *)(v0 + 560) = swift_allocObject();
  return _swift_task_switch(sub_10012148C, v24, 0);
}

#error "100121508: call analysis failed (funcsize=67)"

uint64_t sub_1001215AC()
{
  *(void *)(*(void *)v1 + 584) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10012172C;
  }
  else {
    uint64_t v2 = sub_1001216C0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001216C0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10012172C()
{
  uint64_t v1 = (void *)v0[63];
  uint64_t v2 = (_OWORD *)v0[59];
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  v0[35] = &unk_100214410;
  uint64_t v3 = (_OWORD *)swift_allocObject();
  v0[32] = v3;
  long long v4 = *(_OWORD *)((char *)v2 + 25);
  long long v5 = v2[1];
  v3[1] = *v2;
  v3[2] = v5;
  *(_OWORD *)((char *)v3 + 41) = v4;
  sub_10002AB90((uint64_t)(v0 + 56));
  id v6 = v1;
  swift_bridgeObjectRetain();
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    long long v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    uint64_t v12 = sub_100046914();
    v0[47] = swift_getMetatypeMetadata();
    v0[44] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 44));
    v13._uint64_t countAndFlagsBits = 5972026;
    v13._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    v0[39] = &type metadata for String;
    v0[36] = v9;
    v0[37] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 36));
    v14._uint64_t countAndFlagsBits = 93;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    uint64_t v15 = sub_100046914();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    v0[28] = v15;
    v0[31] = MetatypeMetadata;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 28));
    v17._uint64_t countAndFlagsBits = 58;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)(v0 + 32));
  swift_getErrorValue();
  uint64_t v19 = v0[48];
  uint64_t v18 = v0[49];
  v0[43] = v18;
  Swift::String v20 = sub_10003BAA4(v0 + 40);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v20, v19, v18);
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)(v0 + 40));
  uint64_t v21 = static os_log_type_t.error.getter();
  sub_10004841C(v21);
  swift_release();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_100121A10()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 57, 7);
}

id sub_100121A5C(void *a1, void *a2, char a3)
{
  if (a3)
  {
    id v5 = a1;
    a1 = a2;
    uint64_t v3 = vars8;
  }
  return a1;
}

void sub_100121A98(uint64_t a1)
{
}

void sub_100121AA8(void *a1, void *a2, char a3)
{
  if (a3)
  {
  }
}

uint64_t sub_100121B00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  long long v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100121A5C(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_100121B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  long long v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100121A5C(*(void **)a2, v4, v5);
  id v6 = *(void **)a1;
  id v7 = *(void **)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100121AA8(v6, v7, v8);
  return a1;
}

uint64_t sub_100121BA4(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  long long v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_100121AA8(v4, v5, v6);
  return a1;
}

uint64_t sub_100121BEC(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100121C2C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100121C70(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_100121C78(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

void type metadata accessor for Identity()
{
}

void type metadata accessor for MercuryCacheUpdateActivityModel()
{
}

uint64_t sub_100121CB4(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100121CEC(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for NetworkObserver.NetworkError(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t sub_100121D44(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100121D80(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100121DC0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100121E04(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_100121E1C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

void type metadata accessor for MercuryCacheUpdateMode()
{
}

uint64_t sub_100121E40(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100121E84(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned int v3 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  char v4 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100121EE0(void *a1, uint64_t a2)
{
  sub_100044BE8(a1, a2);
  *(void *)(v3 + 16) = *(void *)(v4 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v5 = *(void **)(v2 + 24);
  char v6 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = v5;
  id v7 = v5;

  char v8 = *(unsigned char *)(v2 + 40);
  *(void *)(v3 + 32) = *(void *)(v2 + 32);
  *(unsigned char *)(v3 + 40) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100121F58(void *a1, uint64_t a2)
{
  sub_100044BE8(a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(v3 + 24);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v2 + 16);

  char v5 = *(unsigned char *)(v2 + 40);
  *(void *)(v3 + 32) = *(void *)(v2 + 32);
  *(unsigned char *)(v3 + 40) = v5;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100121FAC(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 41))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100121FEC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for MercuryCacheUpdateActivity()
{
}

void *sub_100122048(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100043478(&qword_1002310C8);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100043478(&qword_10022D7B8);
  uint64_t v25 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v26 = (uint64_t)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v24 = (uint64_t)v21 - v12;
  uint64_t v13 = *(void *)(a3 + 16);
  if (!v13) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v14 = *(void *)(type metadata accessor for MercuryCacheMetadata(0) - 8);
  uint64_t v15 = a3 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v16 = *(void *)(v14 + 72);
  v21[1] = a3;
  swift_bridgeObjectRetain();
  Swift::String v17 = _swiftEmptyArrayStorage;
  uint64_t v22 = v9;
  uint64_t v23 = a1;
  while (1)
  {
    a1(v15);
    if (v3) {
      break;
    }
    if (sub_10004FD40((uint64_t)v8, 1, v9) == 1)
    {
      sub_10002CC0C((uint64_t)v8, &qword_1002310C8);
    }
    else
    {
      uint64_t v18 = v24;
      sub_1001257D8((uint64_t)v8, v24);
      sub_1001257D8(v18, v26);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v17 = (void *)sub_100070C94();
      }
      unint64_t v19 = v17[2];
      if (v19 >= v17[3] >> 1) {
        Swift::String v17 = (void *)sub_100070C94();
      }
      v17[2] = v19 + 1;
      sub_1001257D8(v26, (uint64_t)v17+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v19);
      uint64_t v9 = v22;
      a1 = v23;
    }
    v15 += v16;
    if (!--v13)
    {
      swift_bridgeObjectRelease();
      return v17;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_10012232C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _OWORD v5[2] = a1;
  uint64_t v6 = sub_100122048((void (*)(void))sub_100125754, (uint64_t)v5, a2);
  swift_bridgeObjectRetain();
  sub_100124374((uint64_t *)&v6);
  swift_bridgeObjectRelease();
  sub_100159DC0((uint64_t)v6, a3);
  return swift_release();
}

uint64_t sub_1001223C8()
{
  if (qword_10022C4C0 != -1) {
    swift_once();
  }
  qword_100230FA8 = qword_100244128;
  return swift_retain();
}

uint64_t sub_10012242C()
{
  sub_100020958();
  *(unsigned char *)(v1 + 169) = v2;
  *(void *)(v1 + 392) = v3;
  *(void *)(v1 + 400) = v0;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  sub_1000208F0(v4);
  *(void *)(v1 + 408) = sub_10003634C();
  uint64_t v5 = type metadata accessor for Date();
  *(void *)(v1 + 416) = v5;
  sub_100044798(v5);
  *(void *)(v1 + 424) = v6;
  *(void *)(v1 + 432) = sub_10003634C();
  sub_100043FD8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_1001224DC()
{
  uint64_t v1 = *(void *)(v0 + 400);
  long long v9 = *(_OWORD *)(v1 + 208);
  sub_10005416C(v1 + 168, v0 + 32);
  uint64_t v2 = *(void *)(v1 + 160);
  *(void *)(v0 + 440) = v2;
  long long v7 = *(_OWORD *)(v1 + 240);
  long long v8 = *(_OWORD *)(v1 + 224);
  sub_10005416C(v1 + 256, v0 + 112);
  uint64_t v3 = *(void **)(v1 + 152);
  *(void *)(v0 + 448) = v3;
  *(_OWORD *)(v0 + 16) = v9;
  *(void *)(v0 + 72) = v2;
  *(_OWORD *)(v0 + 80) = v8;
  *(_OWORD *)(v0 + 96) = v7;
  *(void *)(v0 + 152) = v3;
  *(void *)(v0 + 160) = 0;
  *(unsigned char *)(v0 + 168) = 0;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v4 = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100122604;
  return sub_100130D0C();
}

uint64_t sub_100122604()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 464) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 400);
  if (v0) {
    id v4 = sub_100122BA8;
  }
  else {
    id v4 = sub_100122730;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100122730()
{
  sub_100020958();
  *(void *)(v0 + 472) = 0;
  static Date.now.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 480) = v1;
  void *v1 = v0;
  v1[1] = sub_1001227C4;
  sub_1000515B8();
  return sub_100122FC8();
}

uint64_t sub_1001227C4()
{
  sub_1000447B0();
  uint64_t v2 = v1[54];
  uint64_t v3 = v1[53];
  uint64_t v4 = v1[52];
  uint64_t v5 = v1[50];
  uint64_t v6 = *v0;
  sub_100020EBC();
  *long long v7 = v6;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_100122904, v5, 0);
}

uint64_t sub_100122904()
{
  if (*(unsigned char *)(v0 + 169) == 2 && *(void *)(v0 + 392) == 0)
  {
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 488) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100122A24;
    uint64_t v5 = *(void *)(v0 + 440);
    return sub_10010BC10(v5);
  }
  else
  {
    if (*(void *)(v0 + 472)) {
      swift_willThrow();
    }
    sub_100125840(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100040954();
    return v2();
  }
}

uint64_t sub_100122A24()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v1 = *v0;
  sub_100020EBC();
  *uint64_t v2 = v1;
  *(void *)(v3 + 496) = v4;
  swift_task_dealloc();
  sub_100043FD8();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_100122B04()
{
  sub_1001239D4(*(double *)(v0 + 496));
  if (*(void *)(v0 + 472)) {
    swift_willThrow();
  }
  sub_100125840(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100040954();
  return v1();
}

uint64_t sub_100122BA8()
{
  if (qword_10022C528 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[50];
  sub_100043478(&qword_10022E560);
  uint64_t v2 = sub_1000208FC();
  sub_100044798(v2);
  sub_100049A74();
  *(_OWORD *)(sub_100043CFC() + 16) = xmmword_1001C3130;
  v0[25] = type metadata accessor for MercuryCacheUpdateCoordinator();
  v0[22] = v1;
  swift_retain();
  id v3 = (id)AMSLogKey();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v0 + 22, v0[25]);
    uint64_t DynamicType = swift_getDynamicType();
    v0[41] = swift_getMetatypeMetadata();
    v0[38] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)(v0 + 38), &qword_10022F490);
    sub_100020E44();
    v0[45] = &type metadata for String;
    v0[42] = v5;
    v0[43] = v7;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)(v0 + 42), &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v9 = sub_10002106C(v0 + 22);
    v0[29] = swift_getMetatypeMetadata();
    v0[26] = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)(v0 + 26), &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  uint64_t v24 = v0[58];
  uint64_t v10 = (void *)v0[56];
  sub_10004377C((uint64_t)(v0 + 22));
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  id v11 = v10;
  id v12 = [v11 description];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  v16._uint64_t countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);

  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = 0x64656C69616620;
  v17._object = (void *)0xE700000000000000;
  String.append(_:)(v17);
  v0[33] = &type metadata for String;
  v0[30] = 0x726F66206B736154;
  v0[31] = 0xE900000000000020;
  static LogMessage.sensitive(_:)();
  sub_10002CC0C((uint64_t)(v0 + 30), &qword_10022F490);
  v0[46] = 0;
  v0[47] = 0xE000000000000000;
  v18._uint64_t countAndFlagsBits = sub_100049E4C();
  String.append(_:)(v18);
  v0[48] = v24;
  sub_100043478((uint64_t *)&unk_100233150);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v19 = v0[46];
  uint64_t v20 = v0[47];
  v0[37] = &type metadata for String;
  v0[34] = v19;
  v0[35] = v20;
  static LogMessage.safe(_:)();
  sub_10002CC0C((uint64_t)(v0 + 34), &qword_10022F490);
  uint64_t v21 = static os_log_type_t.error.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  v0[59] = v24;
  static Date.now.getter();
  uint64_t v22 = (void *)swift_task_alloc();
  v0[60] = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_1001227C4;
  sub_1000515B8();
  return sub_100122FC8();
}

uint64_t sub_100122FC8()
{
  sub_100020958();
  v1[54] = v2;
  v1[55] = v0;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  sub_1000208F0(v3);
  v1[56] = sub_10003634C();
  uint64_t v4 = sub_100043478(&qword_1002310C8);
  sub_1000208F0(v4);
  v1[57] = sub_10003634C();
  uint64_t v5 = sub_100043478(&qword_10022D7B8);
  v1[58] = v5;
  sub_1000208F0(v5);
  v1[59] = swift_task_alloc();
  v1[60] = swift_task_alloc();
  sub_100043FD8();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_1001230A8()
{
  uint64_t v1 = v0[55];
  uint64_t v2 = *(void *)(v1 + 208);
  v0[61] = v2;
  v0[62] = *(void *)(v1 + 152);
  return _swift_task_switch(sub_1001230D4, v2, 0);
}

uint64_t sub_1001230D4()
{
  sub_100020958();
  uint64_t v1 = *(void *)(v0 + 440);
  *(void *)(v0 + 504) = sub_10011F048(*(void **)(v0 + 496));
  return _swift_task_switch(sub_100123140, v1, 0);
}

uint64_t sub_100123140()
{
  uint64_t v3 = *(void *)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 464);
  sub_10012232C(*(void *)(v0 + 432), *(void *)(v0 + 504), v3);
  swift_bridgeObjectRelease();
  if (sub_10004FD40(v3, 1, v2) == 1)
  {
    uint64_t v4 = v0 + 128;
    sub_10002CC0C(*(void *)(v0 + 456), &qword_1002310C8);
    if (qword_10022C528 != -1) {
      swift_once();
    }
    uint64_t v5 = *(void *)(v0 + 440);
    sub_100043478(&qword_10022E560);
    uint64_t v6 = sub_1000208FC();
    sub_100044798(v6);
    sub_100049A74();
    *(_OWORD *)(sub_100043CFC() + 16) = xmmword_1001C3120;
    uint64_t updated = type metadata accessor for MercuryCacheUpdateCoordinator();
    *(void *)(v0 + 88) = updated;
    *(void *)(v0 + 64) = v5;
    swift_retain();
    id v8 = (id)AMSLogKey();
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100049788((void *)(v0 + 64), updated);
      uint64_t DynamicType = swift_getDynamicType();
      *(void *)(v0 + 184) = swift_getMetatypeMetadata();
      *(void *)(v0 + 160) = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C(v0 + 160, &qword_10022F490);
      sub_100020E44();
      *(void *)(v0 + 216) = &type metadata for String;
      *(void *)(v0 + 192) = v10;
      *(void *)(v0 + 200) = v12;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C(v0 + 192, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      uint64_t v4 = v0 + 128;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100049788((void *)(v0 + 64), updated);
      uint64_t v35 = swift_getDynamicType();
      *(void *)(v0 + 120) = swift_getMetatypeMetadata();
      *(void *)(v0 + 96) = v35;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C(v0 + 96, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    uint64_t v36 = *(void **)(v0 + 496);
    sub_10004377C(v0 + 64);
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    id v37 = v36;
    id v38 = [v37 description];
    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v41 = v40;

    v42._uint64_t countAndFlagsBits = v39;
    v42._object = v41;
    String.append(_:)(v42);

    swift_bridgeObjectRelease();
    *(void *)(v0 + 152) = &type metadata for String;
    *(void *)(v0 + 128) = 0xD000000000000016;
    *(void *)(v0 + 136) = 0x80000001001D3E10;
    static LogMessage.sensitive(_:)();
    sub_10002CC0C(v4, &qword_10022F490);
    uint64_t v43 = static os_log_type_t.info.getter();
    sub_10004841C(v43);
  }
  else
  {
    uint64_t v79 = (void *)(v0 + 224);
    uint64_t v14 = *(void *)(v0 + 480);
    uint64_t v15 = *(void *)(v0 + 456);
    uint64_t v83 = *(void *)(v0 + 464);
    uint64_t v16 = *(int *)(v83 + 48);
    uint64_t v17 = v14 + v16;
    uint64_t v18 = v15 + v16;
    sub_100120CCC(v15, v14);
    uint64_t v19 = type metadata accessor for Date();
    uint64_t v81 = *(void *)(v19 - 8);
    uint64_t v82 = v19;
    uint64_t v84 = v17;
    (*(void (**)(uint64_t, uint64_t))(v81 + 32))(v17, v18);
    if (qword_10022C528 != -1) {
      swift_once();
    }
    uint64_t v20 = *(void *)(v0 + 440);
    sub_100043478(&qword_10022E560);
    uint64_t v21 = sub_1000208FC();
    sub_100044798(v21);
    sub_100049A74();
    *(_OWORD *)(sub_100043CFC() + 16) = xmmword_1001C3130;
    *(void *)(v0 + 248) = type metadata accessor for MercuryCacheUpdateCoordinator();
    *(void *)(v0 + 224) = v20;
    swift_retain();
    id v22 = (id)AMSLogKey();
    if (v22)
    {
      uint64_t v1 = v22;
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v25 = v24;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      uint64_t v34 = sub_10004BFD4(v26, v27, v28, v29, v30, v31, v32, v33, v74, v75, v77, v78, v79);
      *(void *)(v0 + 376) = swift_getMetatypeMetadata();
      *(void *)(v0 + 352) = v34;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C(v0 + 352, &qword_10022F490);
      sub_100020E44();
      *(void *)(v0 + 408) = &type metadata for String;
      *(void *)(v0 + 384) = v23;
      *(void *)(v0 + 392) = v25;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C(v0 + 384, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      uint64_t v52 = sub_10004BFD4(v44, v45, v46, v47, v48, v49, v50, v51, v74, v75, v77, v78, v79);
      *(void *)(v0 + 280) = swift_getMetatypeMetadata();
      *(void *)(v0 + 256) = v52;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C(v0 + 256, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    uint64_t v53 = *(void **)(v0 + 496);
    uint64_t v54 = *(void *)(v0 + 472);
    uint64_t v76 = *(void *)(v0 + 480);
    uint64_t v80 = *(void *)(v0 + 440);
    sub_10004377C((uint64_t)v1);
    _StringGuts.grow(_:)(26);
    swift_bridgeObjectRelease();
    id v55 = v53;
    id v56 = [v55 description];
    uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v59 = v58;

    v60._uint64_t countAndFlagsBits = v57;
    v60._object = v59;
    String.append(_:)(v60);

    swift_bridgeObjectRelease();
    *(void *)(v0 + 312) = &type metadata for String;
    *(void *)(v0 + 288) = 0xD000000000000018;
    *(void *)(v0 + 296) = 0x80000001001D3E30;
    static LogMessage.sensitive(_:)();
    sub_10002CC0C(v0 + 288, &qword_10022F490);
    *(void *)(v0 + 416) = 0;
    *(void *)(v0 + 424) = 0xE000000000000000;
    v61._uint64_t countAndFlagsBits = sub_100049E4C();
    String.append(_:)(v61);
    uint64_t v62 = v54 + *(int *)(v83 + 48);
    sub_100120B60(v76, v54);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v62, v84, v82);
    _print_unlocked<A, B>(_:_:)();
    sub_10002CC0C(v54, &qword_10022D7B8);
    uint64_t v63 = *(void *)(v0 + 416);
    uint64_t v64 = *(void *)(v0 + 424);
    *(void *)(v0 + 344) = &type metadata for String;
    *(void *)(v0 + 320) = v63;
    *(void *)(v0 + 328) = v64;
    static LogMessage.safe(_:)();
    sub_10002CC0C(v0 + 320, &qword_10022F490);
    uint64_t v65 = static os_log_type_t.info.getter();
    sub_10004841C(v65);
    swift_bridgeObjectRelease();
    unint64_t v85 = sub_100120D94(v55);
    uint64_t v86 = v66;
    swift_bridgeObjectRetain();
    sub_10004591C();
    swift_bridgeObjectRelease();
    Date.timeIntervalSince(_:)();
    *(void *)(v0 + 16) = v67;
    *(void *)(v0 + 24) = v85;
    *(void *)(v0 + 32) = v86;
    *(void *)(v0 + 40) = v55;
    *(void *)(v0 + 48) = &_swiftEmptySetSingleton;
    *(unsigned char *)(v0 + 56) = 1;
    id v68 = v55;
    swift_bridgeObjectRetain_n();
    id v69 = v68;
    sub_1001ADE08();
    swift_bridgeObjectRelease();
    uint64_t v70 = (uint64_t *)*sub_100049788((void *)(v80 + 112), *(void *)(v80 + 136));
    id v71 = v69;
    swift_bridgeObjectRetain();
    sub_100125404((_OWORD *)(v0 + 16), v70);

    swift_bridgeObjectRelease_n();
    sub_10002CC0C(v76, &qword_10022D7B8);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100040954();
  return v72();
}

void sub_1001239D4(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  uint64_t v6 = *(void **)(v1 + 152);
  *(void *)uint64_t v27 = sub_100120D94(v6);
  *(void *)&unsigned char v27[8] = v7;
  swift_bridgeObjectRetain();
  sub_100046410();
  swift_bridgeObjectRelease();
  long long v8 = *(_OWORD *)v27;
  *(double *)uint64_t v27 = a1;
  *(_OWORD *)&unsigned char v27[8] = v8;
  uint64_t v28 = v6;
  uint64_t v29 = 0;
  char v30 = 2;
  uint64_t v9 = qword_10022C528;
  id v10 = v6;
  swift_bridgeObjectRetain();
  if (v9 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v11 = type metadata accessor for LogMessage();
  sub_100044798(v11);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  void v26[3] = type metadata accessor for MercuryCacheUpdateCoordinator();
  v26[0] = v2;
  swift_retain();
  id v12 = (id)AMSLogKey();
  if (v12)
  {
    uint64_t v13 = v12;
    id v24 = v10;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v17._uint64_t countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    sub_1000420D0();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_10004417C(MetatypeMetadata);
    sub_10002CC0C((uint64_t)v25, &qword_10022F490);
    sub_100020E44();
    void v25[3] = &type metadata for String;
    v25[0] = v14;
    v25[1] = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v25, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    id v10 = v24;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v19._uint64_t countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    sub_1000420D0();
    uint64_t v20 = swift_getMetatypeMetadata();
    sub_10004417C(v20);
    sub_10002CC0C((uint64_t)v25, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v26);
  LogMessage.init(stringLiteral:)();
  uint64_t v21 = static os_log_type_t.info.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  id v22 = (uint64_t *)*sub_100049788((void *)(v2 + 112), *(void *)(v2 + 136));
  id v23 = v10;
  swift_bridgeObjectRetain();
  sub_100125404(v27, v22);
  swift_bridgeObjectRelease_n();
}

uint64_t sub_100123D0C()
{
  sub_100020958();
  *(void *)(v1 + 176) = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  sub_1000208F0(v2);
  *(void *)(v1 + 184) = sub_10003634C();
  sub_100043FD8();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_100123D88()
{
  if (qword_10022C528 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[22];
  sub_100043478(&qword_10022E560);
  uint64_t v2 = sub_1000208FC();
  sub_100044798(v2);
  *(_OWORD *)(sub_100043CFC() + 16) = xmmword_1001C3120;
  v0[5] = type metadata accessor for MercuryCacheUpdateCoordinator();
  v0[2] = v1;
  swift_retain();
  id v3 = (id)AMSLogKey();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v8 = sub_10002106C(v0 + 2);
    v0[17] = swift_getMetatypeMetadata();
    v0[14] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)(v0 + 14), &qword_10022F490);
    sub_100020E44();
    v0[21] = &type metadata for String;
    v0[18] = v5;
    v0[19] = v7;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)(v0 + 18), &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v9 = sub_10002106C(v0 + 2);
    v0[9] = swift_getMetatypeMetadata();
    v0[6] = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)(v0 + 6), &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  uint64_t v10 = v0[22];
  sub_10004377C((uint64_t)(v0 + 2));
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease();
  id v11 = *(id *)(v10 + 152);
  id v12 = [v11 description];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  v16._uint64_t countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);

  swift_bridgeObjectRelease();
  v0[13] = &type metadata for String;
  v0[10] = 0xD000000000000021;
  v0[11] = 0x80000001001D3DA0;
  static LogMessage.sensitive(_:)();
  sub_10002CC0C((uint64_t)(v0 + 10), &qword_10022F490);
  uint64_t v17 = static os_log_type_t.info.getter();
  sub_10004841C(v17);
  swift_bridgeObjectRelease();
  sub_100120D94(v11);
  swift_bridgeObjectRetain();
  sub_10004591C();
  swift_bridgeObjectRelease();
  sub_1001ADE08();
  swift_bridgeObjectRelease();
  sub_100120D94(v11);
  swift_bridgeObjectRetain();
  sub_100046410();
  swift_bridgeObjectRelease();
  sub_1001ADE08();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)swift_task_alloc();
  v0[24] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_100124168;
  return sub_10011FB74((uint64_t)v11);
}

uint64_t sub_100124168()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v1 = *v0;
  sub_100020EBC();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100043FD8();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_100124244()
{
  sub_100049788((void *)(*(void *)(v0 + 176) + 168), *(void *)(*(void *)(v0 + 176) + 192));
  sub_100111050();
  swift_task_dealloc();
  sub_100040954();
  return v1();
}

uint64_t sub_1001242D4()
{
  sub_10004377C(v0 + 112);

  swift_unknownObjectRelease();
  sub_10004377C(v0 + 168);
  swift_unknownObjectRelease();
  sub_10004377C(v0 + 256);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_100124324()
{
  sub_1001242D4();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for MercuryCacheUpdateCoordinator()
{
  return self;
}

void sub_100124374(uint64_t *a1)
{
  uint64_t v2 = *(void *)(sub_100043478(&qword_10022D7B8) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1000BABB8();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_100124420(v6);
  *a1 = v3;
}

void sub_100124420(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v130 = sub_100043478(&qword_10022D7B8);
  uint64_t v124 = *(void *)(v130 - 8);
  uint64_t v4 = __chkstk_darwin(v130);
  uint64_t v121 = (uint64_t)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v131 = (uint64_t)&v114 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v127 = (uint64_t)&v114 - v9;
  __chkstk_darwin(v8);
  uint64_t v126 = (uint64_t)&v114 - v10;
  Swift::Int v11 = a1[1];
  Swift::Int v12 = _minimumMergeRunLength(_:)(v11);
  if (v12 >= v11)
  {
    if (v11 < 0) {
      goto LABEL_141;
    }
    if (v11) {
      sub_100124D80(0, v11, 1, a1);
    }
    return;
  }
  Swift::Int v13 = v12;
  uint64_t v129 = a1;
  uint64_t v117 = sub_1000BA1F8(v11 / 2);
  uint64_t v118 = v11;
  unint64_t v123 = v14;
  if (v11 <= 0) {
    goto LABEL_104;
  }
  Swift::Int v116 = v13;
  Swift::Int v15 = 0;
  Swift::String v16 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v17 = v11;
  while (1)
  {
    Swift::Int v18 = v15 + 1;
    uint64_t v120 = v16;
    Swift::Int v122 = v15;
    if (v15 + 1 >= v17)
    {
      Swift::Int v23 = v15 + 1;
LABEL_29:
      id v37 = v129;
      goto LABEL_30;
    }
    Swift::Int v19 = *v129;
    uint64_t v20 = *(void *)(v124 + 72);
    uint64_t v21 = v126;
    sub_100125770(*v129 + v20 * v18, v126);
    uint64_t v22 = v127;
    sub_100125770(v19 + v20 * v15, v127);
    LODWORD(v125) = static Date.< infix(_:_:)();
    sub_10002CC0C(v22, &qword_10022D7B8);
    sub_10002CC0C(v21, &qword_10022D7B8);
    Swift::Int v23 = v15 + 2;
    Swift::Int v119 = v19;
    uint64_t v132 = v20;
    if (v15 + 2 < v17)
    {
      uint64_t v24 = v20 * v18;
      Swift::Int v25 = v19;
      uint64_t v26 = v20 * v23;
      while (1)
      {
        Swift::Int v27 = v17;
        uint64_t v28 = v126;
        sub_100125770(v25 + v26, v126);
        uint64_t v29 = v127;
        sub_100125770(v25 + v24, v127);
        int v30 = static Date.< infix(_:_:)();
        sub_10002CC0C(v29, &qword_10022D7B8);
        sub_10002CC0C(v28, &qword_10022D7B8);
        if ((v125 ^ v30)) {
          break;
        }
        ++v23;
        v25 += v132;
        Swift::Int v17 = v27;
        if (v23 >= v27)
        {
          Swift::Int v23 = v27;
          Swift::Int v15 = v122;
          goto LABEL_12;
        }
      }
      Swift::Int v15 = v122;
      Swift::Int v17 = v27;
    }
LABEL_12:
    if ((v125 & 1) == 0) {
      goto LABEL_29;
    }
    uint64_t v31 = v132;
    if (v23 < v15) {
      goto LABEL_142;
    }
    if (v15 >= v23) {
      goto LABEL_29;
    }
    Swift::Int v125 = v17;
    uint64_t v32 = 0;
    uint64_t v33 = v132 * (v23 - 1);
    Swift::Int v34 = v23;
    uint64_t v35 = v23 * v132;
    uint64_t v36 = v15 * v132;
    id v37 = v129;
    Swift::Int v128 = v34;
    do
    {
      if (v15 != v34 + v32 - 1)
      {
        uint64_t v38 = v2;
        Swift::Int v39 = v119;
        if (!v119) {
          goto LABEL_148;
        }
        unint64_t v40 = v119 + v36;
        uint64_t v41 = v119 + v33;
        sub_1001257D8(v119 + v36, v121);
        if (v36 < v33 || v40 >= v39 + v35)
        {
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v2 = v38;
        }
        else
        {
          uint64_t v2 = v38;
          if (v36 != v33) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        sub_1001257D8(v121, v41);
        id v37 = v129;
        uint64_t v31 = v132;
      }
      ++v15;
      --v32;
      Swift::Int v34 = v128;
      v33 -= v31;
      v35 -= v31;
      v36 += v31;
    }
    while (v15 < v128 + v32);
    Swift::Int v23 = v128;
    Swift::Int v15 = v122;
    Swift::Int v17 = v125;
LABEL_30:
    if (v23 < v17)
    {
      if (__OFSUB__(v23, v15)) {
        goto LABEL_140;
      }
      if (v23 - v15 < v116)
      {
        if (__OFADD__(v15, v116)) {
          goto LABEL_143;
        }
        if (v15 + v116 >= v17) {
          Swift::Int v43 = v17;
        }
        else {
          Swift::Int v43 = v15 + v116;
        }
        if (v43 < v15)
        {
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        if (v23 != v43)
        {
          uint64_t v115 = v2;
          Swift::Int v44 = *(void *)(v124 + 72);
          uint64_t v132 = v44 * (v23 - 1);
          Swift::Int v125 = v44;
          Swift::Int v45 = v23 * v44;
          Swift::Int v119 = v43;
          do
          {
            uint64_t v46 = 0;
            Swift::Int v128 = v23;
            while (1)
            {
              uint64_t v47 = *v37;
              Swift::Int v48 = v45;
              uint64_t v49 = v45 + v46 + *v37;
              uint64_t v50 = v126;
              uint64_t v51 = v37;
              sub_100125770(v49, v126);
              uint64_t v52 = v127;
              sub_100125770(v132 + v46 + v47, v127);
              LOBYTE(v47) = static Date.< infix(_:_:)();
              sub_10002CC0C(v52, &qword_10022D7B8);
              sub_10002CC0C(v50, &qword_10022D7B8);
              if ((v47 & 1) == 0) {
                break;
              }
              uint64_t v53 = *v51;
              if (!*v51) {
                goto LABEL_146;
              }
              Swift::Int v45 = v48;
              uint64_t v54 = v53 + v132 + v46;
              sub_1001257D8(v53 + v48 + v46, v131);
              Swift::Int v55 = v128;
              swift_arrayInitWithTakeFrontToBack();
              sub_1001257D8(v131, v54);
              v46 -= v125;
              ++v15;
              id v37 = v129;
              if (v55 == v15) {
                goto LABEL_46;
              }
            }
            Swift::Int v55 = v128;
            Swift::Int v45 = v48;
            id v37 = v51;
LABEL_46:
            Swift::Int v23 = v55 + 1;
            v132 += v125;
            v45 += v125;
            Swift::Int v15 = v122;
          }
          while (v23 != v119);
          Swift::Int v23 = v119;
          uint64_t v2 = v115;
        }
      }
    }
    if (v23 < v15) {
      goto LABEL_139;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      Swift::String v16 = v120;
    }
    else {
      Swift::String v16 = sub_1000BAAAC(0, *((void *)v120 + 2) + 1, 1, v120);
    }
    unint64_t v57 = *((void *)v16 + 2);
    unint64_t v56 = *((void *)v16 + 3);
    unint64_t v58 = v57 + 1;
    if (v57 >= v56 >> 1) {
      Swift::String v16 = sub_1000BAAAC((char *)(v56 > 1), v57 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v58;
    uint64_t v59 = v16 + 32;
    Swift::String v60 = &v16[16 * v57 + 32];
    *(void *)Swift::String v60 = v15;
    *((void *)v60 + 1) = v23;
    Swift::Int v128 = v23;
    if (v57) {
      break;
    }
    unint64_t v58 = 1;
LABEL_96:
    Swift::Int v15 = v128;
    Swift::Int v17 = v129[1];
    if (v128 >= v17) {
      goto LABEL_105;
    }
  }
  while (1)
  {
    unint64_t v61 = v58 - 1;
    if (v58 >= 4)
    {
      uint64_t v66 = &v59[16 * v58];
      uint64_t v67 = *((void *)v66 - 8);
      uint64_t v68 = *((void *)v66 - 7);
      BOOL v72 = __OFSUB__(v68, v67);
      uint64_t v69 = v68 - v67;
      if (v72) {
        goto LABEL_124;
      }
      uint64_t v71 = *((void *)v66 - 6);
      uint64_t v70 = *((void *)v66 - 5);
      BOOL v72 = __OFSUB__(v70, v71);
      uint64_t v64 = v70 - v71;
      char v65 = v72;
      if (v72) {
        goto LABEL_125;
      }
      unint64_t v73 = v58 - 2;
      uint64_t v74 = &v59[16 * v58 - 32];
      uint64_t v76 = *(void *)v74;
      uint64_t v75 = *((void *)v74 + 1);
      BOOL v72 = __OFSUB__(v75, v76);
      uint64_t v77 = v75 - v76;
      if (v72) {
        goto LABEL_126;
      }
      BOOL v72 = __OFADD__(v64, v77);
      uint64_t v78 = v64 + v77;
      if (v72) {
        goto LABEL_128;
      }
      if (v78 >= v69)
      {
        uint64_t v96 = &v59[16 * v61];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v72 = __OFSUB__(v97, v98);
        uint64_t v99 = v97 - v98;
        if (v72) {
          goto LABEL_134;
        }
        BOOL v89 = v64 < v99;
        goto LABEL_85;
      }
    }
    else
    {
      if (v58 != 3)
      {
        uint64_t v90 = *((void *)v16 + 4);
        uint64_t v91 = *((void *)v16 + 5);
        BOOL v72 = __OFSUB__(v91, v90);
        uint64_t v83 = v91 - v90;
        char v84 = v72;
        goto LABEL_79;
      }
      uint64_t v63 = *((void *)v16 + 4);
      uint64_t v62 = *((void *)v16 + 5);
      BOOL v72 = __OFSUB__(v62, v63);
      uint64_t v64 = v62 - v63;
      char v65 = v72;
    }
    if (v65) {
      goto LABEL_127;
    }
    unint64_t v73 = v58 - 2;
    uint64_t v79 = &v59[16 * v58 - 32];
    uint64_t v81 = *(void *)v79;
    uint64_t v80 = *((void *)v79 + 1);
    BOOL v82 = __OFSUB__(v80, v81);
    uint64_t v83 = v80 - v81;
    char v84 = v82;
    if (v82) {
      goto LABEL_129;
    }
    unint64_t v85 = &v59[16 * v61];
    uint64_t v87 = *(void *)v85;
    uint64_t v86 = *((void *)v85 + 1);
    BOOL v72 = __OFSUB__(v86, v87);
    uint64_t v88 = v86 - v87;
    if (v72) {
      goto LABEL_131;
    }
    if (__OFADD__(v83, v88)) {
      goto LABEL_133;
    }
    if (v83 + v88 >= v64)
    {
      BOOL v89 = v64 < v88;
LABEL_85:
      if (v89) {
        unint64_t v61 = v73;
      }
      goto LABEL_87;
    }
LABEL_79:
    if (v84) {
      goto LABEL_130;
    }
    double v92 = &v59[16 * v61];
    uint64_t v94 = *(void *)v92;
    uint64_t v93 = *((void *)v92 + 1);
    BOOL v72 = __OFSUB__(v93, v94);
    uint64_t v95 = v93 - v94;
    if (v72) {
      goto LABEL_132;
    }
    if (v95 < v83) {
      goto LABEL_96;
    }
LABEL_87:
    unint64_t v100 = v61 - 1;
    if (v61 - 1 >= v58)
    {
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
      goto LABEL_135;
    }
    if (!*v129) {
      goto LABEL_147;
    }
    uint64_t v101 = v16;
    uint64_t v102 = &v59[16 * v100];
    uint64_t v103 = *(void *)v102;
    double v104 = &v59[16 * v61];
    uint64_t v105 = *((void *)v104 + 1);
    sub_100124FE4(*v129 + *(void *)(v124 + 72) * *(void *)v102, *v129 + *(void *)(v124 + 72) * *(void *)v104, *v129 + *(void *)(v124 + 72) * v105, v123);
    if (v2) {
      break;
    }
    if (v105 < v103) {
      goto LABEL_121;
    }
    if (v61 > *((void *)v101 + 2)) {
      goto LABEL_122;
    }
    *(void *)uint64_t v102 = v103;
    *(void *)&v59[16 * v100 + 8] = v105;
    unint64_t v106 = *((void *)v101 + 2);
    if (v61 >= v106) {
      goto LABEL_123;
    }
    unint64_t v58 = v106 - 1;
    memmove(&v59[16 * v61], v104 + 16, 16 * (v106 - 1 - v61));
    Swift::String v16 = v101;
    *((void *)v101 + 2) = v106 - 1;
    if (v106 <= 2) {
      goto LABEL_96;
    }
  }
LABEL_102:
  swift_bridgeObjectRelease();
  if (v118 >= -1) {
    goto LABEL_117;
  }
  __break(1u);
LABEL_104:
  Swift::String v16 = (char *)_swiftEmptyArrayStorage;
  unint64_t v58 = _swiftEmptyArrayStorage[2];
LABEL_105:
  if (v58 >= 2)
  {
    Swift::Int v107 = *v129;
    while (1)
    {
      unint64_t v108 = v58 - 2;
      if (v58 < 2) {
        break;
      }
      if (!v107) {
        goto LABEL_149;
      }
      uint64_t v109 = v16;
      uint64_t v110 = *(void *)&v16[16 * v108 + 32];
      uint64_t v111 = *(void *)&v16[16 * v58 + 24];
      sub_100124FE4(v107 + *(void *)(v124 + 72) * v110, v107 + *(void *)(v124 + 72) * *(void *)&v16[16 * v58 + 16], v107 + *(void *)(v124 + 72) * v111, v123);
      if (v2) {
        goto LABEL_102;
      }
      if (v111 < v110) {
        goto LABEL_136;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v109 = sub_1000BABA4((uint64_t)v109);
      }
      if (v108 >= *((void *)v109 + 2)) {
        goto LABEL_137;
      }
      uint64_t v112 = &v109[16 * v108 + 32];
      *(void *)uint64_t v112 = v110;
      *((void *)v112 + 1) = v111;
      unint64_t v113 = *((void *)v109 + 2);
      if (v58 > v113) {
        goto LABEL_138;
      }
      memmove(&v109[16 * v58 + 16], &v109[16 * v58 + 32], 16 * (v113 - v58));
      Swift::String v16 = v109;
      *((void *)v109 + 2) = v113 - 1;
      unint64_t v58 = v113 - 1;
      if (v113 <= 2) {
        goto LABEL_116;
      }
    }
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
    goto LABEL_144;
  }
LABEL_116:
  swift_bridgeObjectRelease();
  if (v118 >= -1)
  {
LABEL_117:
    *(void *)(v117 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
}

uint64_t sub_100124D80(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v25 = a1;
  uint64_t v28 = sub_100043478(&qword_10022D7B8);
  uint64_t v7 = __chkstk_darwin(v28);
  uint64_t v29 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  Swift::Int v11 = (char *)&v23 - v10;
  uint64_t result = __chkstk_darwin(v9);
  Swift::Int v15 = (char *)&v23 - v14;
  uint64_t v27 = a3;
  uint64_t v24 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v31 = v16 * (v27 - 1);
    uint64_t v26 = v16;
    uint64_t v30 = v16 * v27;
    while (2)
    {
      uint64_t v17 = 0;
      uint64_t v18 = v25;
      do
      {
        uint64_t v19 = *a4;
        sub_100125770(v30 + v17 + *a4, (uint64_t)v15);
        sub_100125770(v31 + v17 + v19, (uint64_t)v11);
        LOBYTE(v19) = static Date.< infix(_:_:)();
        sub_10002CC0C((uint64_t)v11, &qword_10022D7B8);
        uint64_t result = sub_10002CC0C((uint64_t)v15, &qword_10022D7B8);
        if ((v19 & 1) == 0) {
          break;
        }
        uint64_t v20 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        uint64_t v21 = a4;
        uint64_t v22 = v20 + v31 + v17;
        sub_1001257D8(v20 + v30 + v17, v29);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = sub_1001257D8(v29, v22);
        v17 -= v26;
        ++v18;
        a4 = v21;
      }
      while (v27 != v18);
      v31 += v26;
      v30 += v26;
      if (++v27 != v24) {
        continue;
      }
      break;
    }
  }
  return result;
}

void sub_100124FE4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v51 = sub_100043478(&qword_10022D7B8);
  uint64_t v8 = __chkstk_darwin(v51);
  uint64_t v50 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v49 = (uint64_t)&v44 - v10;
  uint64_t v12 = *(void *)(v11 + 72);
  if (!v12)
  {
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  int64_t v13 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v12 == -1) {
    goto LABEL_76;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v12 == -1) {
    goto LABEL_77;
  }
  uint64_t v17 = v13 / v12;
  uint64_t v18 = v15 / v12;
  if (v13 / v12 >= v15 / v12)
  {
    sub_1000721B0(a2, v15 / v12);
    unint64_t v19 = a4 + v18 * v12;
    if (v18 * v12 < 1 || a1 >= a2) {
      goto LABEL_70;
    }
    unint64_t v47 = a4;
    uint64_t v48 = -v12;
    unint64_t v45 = a1;
    uint64_t v46 = v12;
    while (1)
    {
      uint64_t v30 = v48;
      uint64_t v31 = v49;
      unint64_t v32 = a3 + v48;
      unint64_t v33 = v19 + v48;
      unint64_t v34 = v19;
      sub_100125770(v19 + v48, v49);
      unint64_t v35 = a2 + v30;
      uint64_t v36 = a2 + v30;
      uint64_t v37 = v50;
      sub_100125770(v36, v50);
      char v38 = static Date.< infix(_:_:)();
      sub_10002CC0C(v37, &qword_10022D7B8);
      sub_10002CC0C(v31, &qword_10022D7B8);
      if (v38) {
        break;
      }
      if (a3 < v34 || v32 >= v34)
      {
        swift_arrayInitWithTakeFrontToBack();
        unint64_t v19 = v33;
        a4 = v47;
LABEL_65:
        uint64_t v12 = v46;
        a3 = v32;
        goto LABEL_66;
      }
      a4 = v47;
      if (a3 == v34)
      {
        unint64_t v19 = v33;
        goto LABEL_65;
      }
      a3 = v32;
      swift_arrayInitWithTakeBackToFront();
      unint64_t v19 = v33;
      uint64_t v12 = v46;
LABEL_66:
      if (v19 <= a4 || a2 <= v45) {
        goto LABEL_70;
      }
    }
    if (a3 < a2 || v32 >= a2)
    {
      swift_arrayInitWithTakeFrontToBack();
      a2 = v35;
      a4 = v47;
    }
    else
    {
      a4 = v47;
      if (a3 != a2)
      {
        a3 = v32;
        swift_arrayInitWithTakeBackToFront();
        a2 = v35;
        uint64_t v12 = v46;
LABEL_63:
        unint64_t v19 = v34;
        goto LABEL_66;
      }
      a2 = v35;
    }
    uint64_t v12 = v46;
    a3 = v32;
    goto LABEL_63;
  }
  sub_1000721B0(a1, v13 / v12);
  unint64_t v19 = a4 + v17 * v12;
  if (v17 * v12 >= 1 && a2 < a3)
  {
    do
    {
      unint64_t v21 = v19;
      uint64_t v22 = v49;
      sub_100125770(a2, v49);
      uint64_t v23 = v50;
      sub_100125770(a4, v50);
      char v24 = static Date.< infix(_:_:)();
      sub_10002CC0C(v23, &qword_10022D7B8);
      sub_10002CC0C(v22, &qword_10022D7B8);
      if (v24)
      {
        unint64_t v25 = a2 + v12;
        if (a1 < a2 || a1 >= v25)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        if (a1 < a4 || a1 >= a4 + v12)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v25 = a2;
        a4 += v12;
      }
      unint64_t v19 = v21;
      a1 += v12;
      BOOL v28 = a4 >= v21 || v25 >= a3;
      a2 = v25;
    }
    while (!v28);
  }
LABEL_70:
  int64_t v42 = v19 - a4;
  if (v12 != -1 || v42 != 0x8000000000000000)
  {
    sub_1000721B0(a4, v42 / v12);
    return;
  }
LABEL_78:
  __break(1u);
}

uint64_t sub_100125404(_OWORD *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v21 = &unk_100214410;
  uint64_t v22 = &off_100214428;
  uint64_t v5 = (_OWORD *)swift_allocObject();
  v20[0] = v5;
  long long v6 = a1[1];
  *(_OWORD *)uint64_t v23 = *a1;
  *(_OWORD *)&v23[16] = v6;
  *(_OWORD *)&v23[25] = *(_OWORD *)((char *)a1 + 25);
  long long v25 = *(_OWORD *)&v23[8];
  uint64_t v7 = *(void **)&v23[24];
  sub_100125680((uint64_t *)&v23[32], (uint64_t)v24);
  long long v8 = a1[1];
  v5[1] = *a1;
  _OWORD v5[2] = v8;
  *(_OWORD *)((char *)v5 + 41) = *(_OWORD *)((char *)a1 + 25);
  unint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_10002AB90((uint64_t)&v25);
  id v9 = v7;
  sub_10008378C((uint64_t)v24);
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  unint64_t v26 = 0xD000000000000010;
  unint64_t v27 = 0x80000001001D3DF0;
  uint64_t v10 = sub_100049788(v20, (uint64_t)&unk_100214410);
  uint64_t v11 = v10[1];
  uint64_t v12 = (void *)v10[2];
  swift_bridgeObjectRetain();
  v13._uint64_t countAndFlagsBits = v11;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  unint64_t v14 = v26;
  unint64_t v15 = v27;
  sub_100049788(v20, (uint64_t)v21);
  unint64_t v16 = *sub_100049788(v20, (uint64_t)v21);
  LOWORD(v26) = 1;
  unint64_t v27 = v16;
  char v28 = 0;
  uint64_t v29 = 0x404E000000000000;
  uint64_t v30 = 0x4072C00000000000;
  char v31 = 0;
  uint64_t v32 = 0;
  char v33 = 1;
  __int16 v34 = 257;
  char v35 = 0;
  sub_10005416C((uint64_t)v20, (uint64_t)v19);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v14;
  void v17[3] = v15;
  sub_100028270(v19, (uint64_t)(v17 + 4));
  v17[9] = a2;
  v17[10] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1001AE588();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10004377C((uint64_t)v20);
}

uint64_t sub_100125638()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_100125680(uint64_t *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001256DC()
{
  swift_bridgeObjectRelease();
  sub_10004377C(v0 + 32);
  swift_release();
  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100125724(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1000A7804(a1, a2, a3, a4, v4[2], v4[3], v4 + 4, v4[9]);
}

uint64_t sub_100125754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10011D1C8(a1, a2);
}

uint64_t sub_100125770(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022D7B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001257D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022D7B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100125840(uint64_t a1)
{
  return a1;
}

uint64_t sub_100125894()
{
  if (qword_10022C4C0 != -1) {
    swift_once();
  }
  qword_1002310D0 = qword_100244128;
  return swift_retain();
}

uint64_t sub_1001258F8()
{
  type metadata accessor for MercuryCacheUpdateCoordinatorProvider();
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_10008F818();
  type metadata accessor for MercuryCacheUpdateCoordinator();
  sub_10008E608();
  uint64_t result = Dictionary.init(dictionaryLiteral:)();
  *(void *)(v0 + 112) = result;
  qword_100244158 = v0;
  return result;
}

uint64_t sub_100125974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 272) = v13;
  *(void *)(v9 + 280) = v8;
  *(_OWORD *)(v9 + 256) = v12;
  *(void *)(v9 + 240) = a7;
  *(void *)(v9 + 248) = a8;
  *(void *)(v9 + 224) = a5;
  *(void *)(v9 + 232) = a6;
  *(void *)(v9 + 208) = a2;
  *(void *)(v9 + 216) = a4;
  *(void *)(v9 + 200) = a1;
  type metadata accessor for LogMessage.StringInterpolation();
  *(void *)(v9 + 288) = swift_task_alloc();
  return _swift_task_switch(sub_100125A24, v8, 0);
}

uint64_t sub_100125A24()
{
  uint64_t v1 = *(void **)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v3 = *(void **)(v0 + 264);
  uint64_t v4 = *(void *)(v0 + 240);
  uint64_t v32 = *(void *)(v0 + 248);
  uint64_t v34 = *(void *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v6 = *(void *)(v0 + 232);
  uint64_t v7 = *(void *)(v0 + 208);
  uint64_t v8 = *(void **)(v0 + 200);
  uint64_t v9 = sub_100049788(*(void **)(v0 + 216), *(void *)(*(void *)(v0 + 216) + 24));
  uint64_t v10 = sub_100049788(v3, v3[3]);
  uint64_t v11 = sub_100049788(v1, v1[3]);
  sub_100179558((uint64_t)v8, v7, *v9, v5, v6, v4, v32, v34, *v10, *v11, v2, v32, v34, v0 + 176, v0 + 16, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43);
  *(void *)(v0 + 296) = v12;
  swift_beginAccess();
  id v13 = v8;
  sub_10008ACAC();
  swift_endAccess();

  swift_release();
  if (qword_10022C530 != -1) {
    swift_once();
  }
  uint64_t v14 = *(void *)(v0 + 280);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  *(void *)(v0 + 40) = type metadata accessor for MercuryCacheUpdateCoordinatorProvider();
  *(void *)(v0 + 16) = v14;
  swift_retain();
  id v15 = (id)AMSLogKey();
  if (v15)
  {
    unint64_t v16 = v15;
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v19._uint64_t countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    sub_100049788(v35, *(void *)(v0 + 40));
    uint64_t DynamicType = swift_getDynamicType();
    *(void *)(v0 + 136) = swift_getMetatypeMetadata();
    *(void *)(v0 + 112) = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 112);
    v21._uint64_t countAndFlagsBits = 5972026;
    v21._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    *(void *)(v0 + 168) = &type metadata for String;
    *(void *)(v0 + 144) = v33;
    *(void *)(v0 + 152) = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 144);
    v22._uint64_t countAndFlagsBits = 93;
    v22._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    LogMessage.init(stringInterpolation:)();
    uint64_t v23 = (uint64_t)v35;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v24._uint64_t countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    uint64_t v23 = (uint64_t)v35;
    sub_100049788(v35, *(void *)(v0 + 40));
    uint64_t v25 = swift_getDynamicType();
    *(void *)(v0 + 72) = swift_getMetatypeMetadata();
    *(void *)(v0 + 48) = v25;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 48);
    v26._uint64_t countAndFlagsBits = 58;
    v26._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    LogMessage.init(stringInterpolation:)();
  }
  unint64_t v27 = *(void **)(v0 + 200);
  sub_10004377C(v23);
  LogMessage.init(stringLiteral:)();
  *(void *)(v0 + 104) = sub_10008F818();
  *(void *)(v0 + 80) = v27;
  id v28 = v27;
  static LogMessage.sensitive(_:)();
  sub_1000423CC(v0 + 80);
  uint64_t v29 = static os_log_type_t.info.getter();
  sub_10004841C(v29);
  swift_bridgeObjectRelease();
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_100125E64;
  return sub_100123D0C();
}

uint64_t sub_100125E64()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 280);
  if (v0) {
    uint64_t v4 = sub_100125FFC;
  }
  else {
    uint64_t v4 = sub_100125F90;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100125F90()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100125FFC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100126068()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for MercuryCacheUpdateCoordinatorProvider()
{
  return self;
}

uint64_t sub_1001260C4()
{
  type metadata accessor for MercuryCacheUpdateData(0);
  sub_100043B1C();
  __chkstk_darwin(v2);
  sub_100022558();
  sub_100126480(v0, v1);
  sub_100127C10(v1, (void (*)(void))type metadata accessor for MercuryCacheUpdateData);
  return Date.addingTimeInterval(_:)();
}

uint64_t sub_1001261A0@<X0>(char *a1@<X8>)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100022558();
  uint64_t updated = type metadata accessor for MercuryCacheUpdateData(0);
  uint64_t v7 = updated;
  uint64_t v8 = *(void *)(v1 + *(int *)(updated + 28));
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(v1 + *(int *)(updated + 24));
    uint64_t v11 = *v9;
    uint64_t v10 = v9[1];
    uint64_t v12 = type metadata accessor for MercuryCacheUpdateData.Success(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001260C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(&a1[*(int *)(v12 + 28)], v1 + *(int *)(v7 + 20), v4);
    *(void *)a1 = v11;
    *((void *)a1 + 1) = v10;
    *(void *)&a1[*(int *)(v12 + 24)] = v8;
    type metadata accessor for MercuryCacheUpdateData.DataKind(0);
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    uint64_t v14 = (uint64_t *)(v1 + *(int *)(updated + 24));
    uint64_t v25 = v14[1];
    uint64_t v26 = *v14;
    swift_bridgeObjectRetain();
    sub_1001260C4();
    uint64_t v15 = v1 + *(int *)(v7 + 32);
    if (*(unsigned char *)(v15 + 49))
    {
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      char v20 = 1;
    }
    else
    {
      uint64_t v18 = *(void *)(v15 + 32);
      uint64_t v19 = *(void *)(v15 + 40);
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v15 + 24);
      char v20 = *(unsigned char *)(v15 + 48) & 1;
    }
    char v24 = v20;
    uint64_t v21 = v1 + *(int *)(v7 + 20);
    Swift::String v22 = (int *)type metadata accessor for MercuryCacheUpdateData.Failure(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(&a1[v22[7]], v21, v4);
    *(void *)a1 = v26;
    *((void *)a1 + 1) = v25;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(&a1[v22[5]], v2, v4);
    uint64_t v23 = &a1[v22[6]];
    *(void *)uint64_t v23 = v16;
    *((void *)v23 + 1) = v17;
    *((void *)v23 + 2) = v18;
    *((void *)v23 + 3) = v19;
    v23[32] = v24;
    type metadata accessor for MercuryCacheUpdateData.DataKind(0);
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t type metadata accessor for MercuryCacheUpdateData(uint64_t a1)
{
  return sub_1000514B4(a1, qword_1002312A0);
}

uint64_t type metadata accessor for MercuryCacheUpdateData.Failure(uint64_t a1)
{
  return sub_1000514B4(a1, qword_100231208);
}

uint64_t type metadata accessor for MercuryCacheUpdateData.DataKind(uint64_t a1)
{
  return sub_1000514B4(a1, qword_100231358);
}

uint64_t type metadata accessor for MercuryCacheUpdateData.Success(uint64_t a1)
{
  return sub_1000514B4(a1, qword_1002313E8);
}

uint64_t sub_100126480(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for MercuryCacheUpdateData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_1001264E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, double *a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  uint64_t updated = (int *)type metadata accessor for MercuryCacheUpdateData(0);
  uint64_t v17 = (void *)((char *)a6 + updated[6]);
  *uint64_t v17 = a1;
  v17[1] = a2;
  *(void *)&v30[0] = 0x64616F6C796170;
  *((void *)&v30[0] + 1) = 0xE700000000000000;
  sub_10004B558();
  sub_100032918((uint64_t)&v32, a3, v30);
  sub_1000434BC((uint64_t)&v32);
  sub_100043478(&qword_10022F490);
  sub_100043478(&qword_10022D6F0);
  int v18 = sub_100048214();
  uint64_t v19 = v31;
  if (!v18) {
    uint64_t v19 = 0;
  }
  *(void *)((char *)a6 + updated[7]) = v19;
  *a6 = a7;
  *(void *)&v30[0] = 1635018093;
  *((void *)&v30[0] + 1) = 0xE400000000000000;
  sub_10004B558();
  sub_100032918((uint64_t)&v32, a3, v30);
  sub_1000434BC((uint64_t)&v32);
  if (sub_100048214())
  {
    uint64_t v20 = v31;
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v31 = 0;
  }
  swift_bridgeObjectRelease();
  if (v20)
  {
    sub_1001266D4(a5, (uint64_t)&v32, a8);
    uint64_t v21 = v32;
    uint64_t v22 = v33;
    long long v23 = v34;
    long long v24 = v35;
    char v25 = v36;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    char v25 = 0;
    long long v23 = 0uLL;
    long long v24 = 0uLL;
  }
  uint64_t v26 = (char *)a6 + updated[8];
  *(void *)uint64_t v26 = v21;
  *((void *)v26 + 1) = v22;
  *((_OWORD *)v26 + 1) = v23;
  *((_OWORD *)v26 + 2) = v24;
  v26[48] = v25;
  v26[49] = v20 == 0;
  unint64_t v27 = (char *)a6 + updated[5];
  type metadata accessor for Date();
  sub_100043B1C();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 32))(v27, a4);
}

void sub_1001266D4(uint64_t a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = AnyHashable.init<A>(_:)();
  sub_100048874(v6, v7, v8);
  sub_1000434BC((uint64_t)v24);
  sub_100043478(&qword_10022F490);
  sub_10008F818();
  if (sub_100049588())
  {
    uint64_t v9 = v23;
    if (v23)
    {
      [v23 doubleValue];
      uint64_t v11 = v10;
      char v12 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v11 = 0;
  char v12 = 1;
LABEL_6:
  uint64_t v13 = sub_10004DE34();
  sub_100048874(v13, v14, v15);
  sub_1000434BC((uint64_t)v24);
  int v16 = sub_100049588();
  if (v16) {
    id v17 = v23;
  }
  else {
    id v17 = 0;
  }
  uint64_t v18 = sub_10004DE34();
  sub_100048874(v18, v19, v20);
  sub_1000434BC((uint64_t)v24);
  if (sub_100049588()) {
    BOOL v21 = (v23 & 1) == 0;
  }
  else {
    BOOL v21 = 1;
  }
  swift_bridgeObjectRelease();

  if (v21)
  {
    id v17 = 0;
    uint64_t v22 = 0;
    a1 = 0;
    a3 = 0.0;
  }
  else
  {
    uint64_t v22 = v16 ^ 1u;
  }
  *(void *)a2 = v11;
  *(unsigned char *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v17;
  *(void *)(a2 + 24) = v22;
  *(void *)(a2 + 32) = a1;
  *(double *)(a2 + 40) = a3;
  *(unsigned char *)(a2 + 48) = v21;
}

char *sub_1001268BC(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for Date();
    char v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = &v4[v13];
    int v16 = &a2[v13];
    long long v17 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v17;
    v15[32] = v16[32];
    v12(&v4[v14], &a2[v14], v11);
  }
  return v4;
}

uint64_t sub_1001269E8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  return v8(v6, v5);
}

char *sub_100126A98(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  v14[32] = v15[32];
  v11(&a1[v13], &a2[v13], v10);
  return a1;
}

char *sub_100126B74(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  long long v14 = *(_OWORD *)v13;
  long long v15 = *((_OWORD *)v13 + 1);
  v12[32] = v13[32];
  *(_OWORD *)uint64_t v12 = v14;
  *((_OWORD *)v12 + 1) = v15;
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  return a1;
}

char *sub_100126C5C(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v11];
  long long v14 = &a2[v11];
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  v13[32] = v14[32];
  v10(&a1[v12], &a2[v12], v9);
  return a1;
}

char *sub_100126D28(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  long long v14 = &a1[v12];
  long long v15 = &a2[v12];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)long long v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  v14[32] = v15[32];
  v11(&a1[v13], &a2[v13], v10);
  return a1;
}

uint64_t sub_100126DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100126E10);
}

uint64_t sub_100126E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100126E28);
}

uint64_t sub_100126E2C()
{
  return sub_1001286E8();
}

uint64_t *sub_100126E38(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = a3[7];
    uint64_t v13 = (uint64_t *)((char *)v4 + v11);
    long long v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    *(uint64_t *)((char *)v4 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v16 = a3[8];
    long long v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    *((_WORD *)v17 + 24) = *((_WORD *)v18 + 24);
    long long v19 = *((_OWORD *)v18 + 2);
    long long v20 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
    *((_OWORD *)v17 + 2) = v19;
    *(_OWORD *)long long v17 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100126F60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_100126FF4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)((char *)a1 + v10);
  uint64_t v13 = (void *)((char *)a2 + v10);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v15 = a3[8];
  uint64_t v16 = (char *)a1 + v15;
  long long v17 = (char *)a2 + v15;
  *((_WORD *)v16 + 24) = *((_WORD *)v17 + 24);
  long long v18 = *((_OWORD *)v17 + 2);
  long long v19 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = *((_OWORD *)v17 + 1);
  *((_OWORD *)v16 + 2) = v18;
  *(_OWORD *)uint64_t v16 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1001270CC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  long long v16 = *(_OWORD *)v15;
  long long v17 = *((_OWORD *)v15 + 1);
  long long v18 = *((_OWORD *)v15 + 2);
  *((_WORD *)v14 + 24) = *((_WORD *)v15 + 24);
  *((_OWORD *)v14 + 1) = v17;
  *((_OWORD *)v14 + 2) = v18;
  *(_OWORD *)uint64_t v14 = v16;
  return a1;
}

void *sub_1001271C4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  *((_WORD *)v12 + 24) = *((_WORD *)v13 + 24);
  return a1;
}

void *sub_100127288(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  void *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  long long v16 = (char *)a1 + v15;
  long long v17 = (char *)a2 + v15;
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)long long v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  *((_WORD *)v16 + 24) = *((_WORD *)v17 + 24);
  return a1;
}

uint64_t sub_100127368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10012737C);
}

uint64_t sub_10012737C(uint64_t a1, int a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100044124();
  if (*(_DWORD *)(v6 + 84) != a2) {
    return sub_100043A18(*(void *)(a1 + *(int *)(a3 + 24) + 8));
  }
  uint64_t v7 = sub_100048EB4();
  return sub_10004FD40(v7, v8, v9);
}

uint64_t sub_1001273FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100127410);
}

void sub_100127410(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  sub_100044124();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    sub_100021AC0(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
}

uint64_t sub_1001274A0()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_100127558(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t updated = (int *)type metadata accessor for MercuryCacheUpdateData.Failure(0);
      uint64_t v9 = updated[5];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = type metadata accessor for Date();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      uint64_t v14 = updated[6];
      uint64_t v15 = &a1[v14];
      long long v16 = &a2[v14];
      long long v17 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v17;
      v15[32] = v16[32];
      v13(&a1[updated[7]], &a2[updated[7]], v12);
    }
    else
    {
      long long v19 = (int *)type metadata accessor for MercuryCacheUpdateData.Success(0);
      uint64_t v20 = v19[5];
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      uint64_t v23 = type metadata accessor for Date();
      long long v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v21, v22, v23);
      *(void *)&a1[v19[6]] = *(void *)&a2[v19[6]];
      uint64_t v25 = v19[7];
      uint64_t v26 = &a1[v25];
      unint64_t v27 = &a2[v25];
      swift_bridgeObjectRetain();
      v24(v26, v27, v23);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10012775C(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t updated = type metadata accessor for MercuryCacheUpdateData.Failure(0);
    uint64_t v4 = a1 + *(int *)(updated + 20);
    uint64_t v5 = type metadata accessor for Date();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v5 - 8), v4, v5);
  }
  else
  {
    uint64_t updated = type metadata accessor for MercuryCacheUpdateData.Success(0);
    uint64_t v6 = a1 + *(int *)(updated + 20);
    uint64_t v5 = type metadata accessor for Date();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v5 - 8), v6, v5);
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = a1 + *(int *)(updated + 28);
  return v9(v7, v5);
}

char *sub_10012788C(char *a1, char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v5;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t updated = (int *)type metadata accessor for MercuryCacheUpdateData.Failure(0);
    uint64_t v7 = updated[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    uint64_t v12 = updated[6];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    long long v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    v13[32] = v14[32];
    v11(&a1[updated[7]], &a2[updated[7]], v10);
  }
  else
  {
    long long v16 = (int *)type metadata accessor for MercuryCacheUpdateData.Success(0);
    uint64_t v17 = v16[5];
    uint64_t v18 = &a1[v17];
    long long v19 = &a2[v17];
    uint64_t v20 = type metadata accessor for Date();
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
    *(void *)&a1[v16[6]] = *(void *)&a2[v16[6]];
    uint64_t v22 = v16[7];
    uint64_t v23 = &a1[v22];
    long long v24 = &a2[v22];
    swift_bridgeObjectRetain();
    v21(v23, v24, v20);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_100127A38(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_100127C10((uint64_t)a1, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t updated = (int *)type metadata accessor for MercuryCacheUpdateData.Failure(0);
      uint64_t v6 = updated[5];
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = type metadata accessor for Date();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
      uint64_t v11 = updated[6];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      long long v14 = *(_OWORD *)v13;
      long long v15 = *((_OWORD *)v13 + 1);
      v12[32] = v13[32];
      *(_OWORD *)uint64_t v12 = v14;
      *((_OWORD *)v12 + 1) = v15;
      v10(&a1[updated[7]], &a2[updated[7]], v9);
    }
    else
    {
      long long v16 = (int *)type metadata accessor for MercuryCacheUpdateData.Success(0);
      uint64_t v17 = v16[5];
      uint64_t v18 = &a1[v17];
      long long v19 = &a2[v17];
      uint64_t v20 = type metadata accessor for Date();
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
      *(void *)&a1[v16[6]] = *(void *)&a2[v16[6]];
      uint64_t v22 = v16[7];
      uint64_t v23 = &a1[v22];
      long long v24 = &a2[v22];
      swift_bridgeObjectRetain();
      v21(v23, v24, v20);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100127C10(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100043B1C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

char *sub_100127C68(char *a1, char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t updated = (int *)type metadata accessor for MercuryCacheUpdateData.Failure(0);
    uint64_t v6 = updated[5];
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
    v10(v7, v8, v9);
    uint64_t v11 = updated[6];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    long long v14 = *((_OWORD *)v13 + 1);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *((_OWORD *)v12 + 1) = v14;
    v12[32] = v13[32];
  }
  else
  {
    uint64_t updated = (int *)type metadata accessor for MercuryCacheUpdateData.Success(0);
    uint64_t v15 = updated[5];
    long long v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
    v10(v16, v17, v9);
    *(void *)&a1[updated[6]] = *(void *)&a2[updated[6]];
  }
  v10(&a1[updated[7]], &a2[updated[7]], v9);
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_100127DF8(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_100127C10((uint64_t)a1, (void (*)(void))type metadata accessor for MercuryCacheUpdateData.DataKind);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_OWORD *)a1 = *(_OWORD *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t updated = (int *)type metadata accessor for MercuryCacheUpdateData.Failure(0);
      uint64_t v6 = updated[5];
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = type metadata accessor for Date();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
      v10(v7, v8, v9);
      uint64_t v11 = updated[6];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      long long v14 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v14;
      v12[32] = v13[32];
    }
    else
    {
      uint64_t updated = (int *)type metadata accessor for MercuryCacheUpdateData.Success(0);
      uint64_t v15 = updated[5];
      long long v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v9 = type metadata accessor for Date();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
      v10(v16, v17, v9);
      *(void *)&a1[updated[6]] = *(void *)&a2[updated[6]];
    }
    v10(&a1[updated[7]], &a2[updated[7]], v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100127FB8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100127FC8()
{
  uint64_t result = type metadata accessor for MercuryCacheUpdateData.Success(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MercuryCacheUpdateData.Failure(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10012808C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    long long v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    swift_bridgeObjectRetain();
    v12(v14, v15, v11);
  }
  return v4;
}

uint64_t sub_1001281B4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  return v8(v6, v5);
}

void *sub_100128270(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v13 = (char *)a1 + v12;
  long long v14 = (char *)a2 + v12;
  swift_bridgeObjectRetain();
  v11(v13, v14, v10);
  return a1;
}

char *sub_100128348(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  return a1;
}

char *sub_100128430(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  v10(&a1[v11], &a2[v11], v9);
  return a1;
}

char *sub_1001284EC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  return a1;
}

uint64_t sub_1001285BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001285D0);
}

uint64_t sub_1001285D4(uint64_t a1, int a2)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100043A18(*(void *)(a1 + 8));
  }
  type metadata accessor for Date();
  uint64_t v3 = sub_100048EB4();
  return sub_10004FD40(v3, v4, v5);
}

uint64_t sub_100128648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10012865C);
}

uint64_t sub_100128660(uint64_t result, uint64_t a2, int a3)
{
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for Date();
    uint64_t v4 = sub_100048EB4();
    return sub_100021AC0(v4, v5, a2, v6);
  }
  return result;
}

uint64_t sub_1001286D8()
{
  return sub_1001286E8();
}

uint64_t sub_1001286E8()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MercuryCacheUpdateData.RetryMetadata(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MercuryCacheUpdateData.RetryMetadata(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MercuryCacheUpdateData.RetryMetadata()
{
  return &type metadata for MercuryCacheUpdateData.RetryMetadata;
}

__n128 initializeWithCopy for MercuryCacheUpdateData.Meta(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MercuryCacheUpdateData.Meta(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MercuryCacheUpdateData.Meta(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 49) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MercuryCacheUpdateData.Meta()
{
  return &type metadata for MercuryCacheUpdateData.Meta;
}

uint64_t sub_10012886C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for ContentInfo();
  uint64_t v8 = sub_100044798(v7);
  uint64_t v26 = v9;
  __chkstk_darwin(v8);
  sub_100035C70();
  uint64_t v25 = v10;
  sub_100020974();
  uint64_t result = __chkstk_darwin(v11);
  long long v14 = (char *)v22 - v13;
  uint64_t v15 = _swiftEmptyArrayStorage;
  unint64_t v27 = _swiftEmptyArrayStorage;
  uint64_t v24 = *(void *)(a3 + 16);
  if (v24)
  {
    unint64_t v16 = 0;
    uint64_t v17 = _swiftEmptyArrayStorage;
    v22[1] = a2;
    uint64_t v23 = a3;
    v22[0] = a1;
    while (v16 < *(void *)(a3 + 16))
    {
      unint64_t v18 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v15 = *(void **)(v26 + 72);
      sub_10012A178(a3 + v18 + (void)v15 * v16, (uint64_t)v14, (void (*)(void))type metadata accessor for ContentInfo);
      char v19 = a1(v14);
      if (v3)
      {
        sub_10012A1D8((uint64_t)v14, (void (*)(void))type metadata accessor for ContentInfo);
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v15;
      }
      if (v19)
      {
        sub_10012A230((uint64_t)v14, v25, (void (*)(void))type metadata accessor for ContentInfo);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_100073358(0, v17[2] + 1, 1);
        }
        uint64_t v17 = v27;
        unint64_t v21 = v27[2];
        unint64_t v20 = v27[3];
        if (v21 >= v20 >> 1)
        {
          sub_100073358(v20 > 1, v21 + 1, 1);
          uint64_t v17 = v27;
        }
        v17[2] = v21 + 1;
        uint64_t result = sub_10012A230(v25, (uint64_t)v17 + v18 + v21 * (void)v15, (void (*)(void))type metadata accessor for ContentInfo);
        a3 = v23;
        a1 = (uint64_t (*)(char *))v22[0];
      }
      else
      {
        uint64_t result = sub_10012A1D8((uint64_t)v14, (void (*)(void))type metadata accessor for ContentInfo);
      }
      if (v24 == ++v16)
      {
        uint64_t v15 = v27;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v15;
  }
  return result;
}

uint64_t sub_100128AD0(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t updated = type metadata accessor for CacheUpdateRun(0);
  uint64_t v24 = *(void *)(updated - 8);
  uint64_t v8 = __chkstk_darwin(updated - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = _swiftEmptyArrayStorage;
  uint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = _swiftEmptyArrayStorage;
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void **)(v24 + 72);
      sub_10012A178(a3 + v16 + (void)v13 * v14, (uint64_t)v12, (void (*)(void))type metadata accessor for CacheUpdateRun);
      char v17 = a1(v12);
      if (v3)
      {
        sub_10012A1D8((uint64_t)v12, (void (*)(void))type metadata accessor for CacheUpdateRun);
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v13;
      }
      if (v17)
      {
        sub_10012A230((uint64_t)v12, v23, (void (*)(void))type metadata accessor for CacheUpdateRun);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000733BC(0, v15[2] + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = v25[2];
        unint64_t v18 = v25[3];
        if (v19 >= v18 >> 1)
        {
          sub_1000733BC(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        v15[2] = v19 + 1;
        uint64_t result = sub_10012A230(v23, (uint64_t)v15 + v16 + v19 * (void)v13, (void (*)(void))type metadata accessor for CacheUpdateRun);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_10012A1D8((uint64_t)v12, (void (*)(void))type metadata accessor for CacheUpdateRun);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  return result;
}

uint64_t sub_100128D68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_1002344F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v62 = (uint64_t)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v54 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100043478(&qword_100230BC0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for RetryConfiguration(0);
  __chkstk_darwin(v64);
  unint64_t v58 = (void *)((char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_100043478(&qword_100230C98);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for CacheUpdateRun(0);
  uint64_t v56 = *(void *)(updated - 8);
  uint64_t v17 = __chkstk_darwin(updated);
  uint64_t v61 = (uint64_t)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v55 = (uint64_t)v49 - v19;
  uint64_t v63 = type metadata accessor for MercuryCacheMetadata(0);
  uint64_t v20 = __chkstk_darwin(v63);
  uint64_t v23 = (void *)((char *)v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = *(void *)(a2 + 16);
  if (!v24)
  {
    uint64_t v26 = _swiftEmptyArrayStorage;
    goto LABEL_26;
  }
  v49[1] = a2;
  uint64_t v50 = a1;
  uint64_t v25 = a2 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  uint64_t v59 = *(void *)(v21 + 72);
  unint64_t v57 = (void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v52 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v53 = (void (**)(char *, uint64_t, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  uint64_t v26 = _swiftEmptyArrayStorage;
  Swift::String v60 = v11;
  uint64_t v27 = v63;
  uint64_t v51 = updated;
  do
  {
    sub_10012A178(v25, (uint64_t)v23, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
    sub_10012A0F0((uint64_t)v23 + *(int *)(v27 + 28), (uint64_t)v11);
    if (sub_10004FD40((uint64_t)v11, 1, v64) == 1)
    {
      sub_10002CC68((uint64_t)v11, &qword_100230BC0);
      uint64_t v28 = (char *)v23 + *(int *)(v27 + 20);
      sub_10011D424();
      if ((dispatch thunk of static Comparable.< infix(_:_:)() & 1) == 0)
      {
        uint64_t v30 = *v23;
        uint64_t v29 = v23[1];
        (*v57)(&v15[*(int *)(updated + 20)], v28, v6);
        *(void *)uint64_t v15 = v30;
        *((void *)v15 + 1) = v29;
        v15[*(int *)(updated + 24)] = 0;
        sub_100021AC0((uint64_t)v15, 0, 1, updated);
        swift_bridgeObjectRetain();
        goto LABEL_16;
      }
      goto LABEL_12;
    }
    uint64_t v31 = (uint64_t)v11;
    uint64_t v32 = v58;
    sub_10012A230(v31, (uint64_t)v58, (void (*)(void))type metadata accessor for RetryConfiguration);
    if (*v32 >= v32[1])
    {
      sub_100021AC0(v62, 1, 1, v6);
    }
    else
    {
      uint64_t v33 = v62;
      Date.addingTimeInterval(_:)();
      sub_100021AC0(v33, 0, 1, v6);
      uint64_t v34 = v33;
      uint64_t v27 = v63;
      if (sub_10004FD40(v34, 1, v6) != 1)
      {
        long long v35 = v54;
        (*v53)(v54, v62, v6);
        uint64_t v37 = *v23;
        uint64_t v36 = v23[1];
        (*v57)(&v15[*(int *)(updated + 20)], v35, v6);
        *(void *)uint64_t v15 = v37;
        *((void *)v15 + 1) = v36;
        v15[*(int *)(updated + 24)] = 1;
        uint64_t v38 = *v52;
        swift_bridgeObjectRetain();
        v38(v35, v6);
        uint64_t updated = v51;
LABEL_14:
        sub_10012A1D8((uint64_t)v58, (void (*)(void))type metadata accessor for RetryConfiguration);
        uint64_t v40 = (uint64_t)v15;
        uint64_t v41 = 0;
        goto LABEL_15;
      }
    }
    sub_10002CC68(v62, &qword_1002344F0);
    uint64_t v39 = (char *)v23 + *(int *)(v27 + 20);
    sub_10011D424();
    if ((dispatch thunk of static Comparable.< infix(_:_:)() & 1) == 0)
    {
      uint64_t v43 = *v23;
      uint64_t v42 = v23[1];
      (*v57)(&v15[*(int *)(updated + 20)], v39, v6);
      *(void *)uint64_t v15 = v43;
      *((void *)v15 + 1) = v42;
      v15[*(int *)(updated + 24)] = 0;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    }
    sub_10012A1D8((uint64_t)v32, (void (*)(void))type metadata accessor for RetryConfiguration);
LABEL_12:
    uint64_t v40 = (uint64_t)v15;
    uint64_t v41 = 1;
LABEL_15:
    sub_100021AC0(v40, v41, 1, updated);
LABEL_16:
    sub_10012A1D8((uint64_t)v23, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
    if (sub_10004FD40((uint64_t)v15, 1, updated) == 1)
    {
      sub_10002CC68((uint64_t)v15, &qword_100230C98);
      uint64_t v11 = v60;
    }
    else
    {
      uint64_t v44 = v55;
      sub_10012A230((uint64_t)v15, v55, (void (*)(void))type metadata accessor for CacheUpdateRun);
      sub_10012A230(v44, v61, (void (*)(void))type metadata accessor for CacheUpdateRun);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v60;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v26 = (void *)sub_100070B60(0, v26[2] + 1, 1, (uint64_t)v26);
      }
      unint64_t v47 = v26[2];
      unint64_t v46 = v26[3];
      if (v47 >= v46 >> 1) {
        uint64_t v26 = (void *)sub_100070B60(v46 > 1, v47 + 1, 1, (uint64_t)v26);
      }
      void v26[2] = v47 + 1;
      sub_10012A230(v61, (uint64_t)v26+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v47, (void (*)(void))type metadata accessor for CacheUpdateRun);
    }
    uint64_t v27 = v63;
    v25 += v59;
    --v24;
  }
  while (v24);
  uint64_t v20 = swift_bridgeObjectRelease();
  a1 = v50;
LABEL_26:
  __chkstk_darwin(v20);
  v49[-2] = a1;
  return sub_100128AD0((uint64_t (*)(char *))sub_10012A158, (uint64_t)&v49[-4], (uint64_t)v26);
}

uint64_t sub_100129530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 88) = a6;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 16) = a1;
  return _swift_task_switch(sub_10012955C, 0, 0);
}

uint64_t sub_10012955C()
{
  *(void *)(v0 + 56) = sub_10010B2E8(*(void **)(v0 + 32));
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1002346D0 + dword_1002346D0);
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  void *v1 = v0;
  v1[1] = sub_10012960C;
  return v3();
}

uint64_t sub_10012960C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001297B8;
  }
  else
  {
    swift_release();
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = sub_10012973C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10012973C()
{
  sub_10012981C(*(void *)(v0 + 24), *(void *)(v0 + 80), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 88), *(uint64_t **)(v0 + 16));
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001297B8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10012981C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v84 = a1;
  unint64_t v85 = (unint64_t *)a2;
  uint64_t v83 = a6;
  uint64_t updated = type metadata accessor for CacheUpdateRun(0);
  uint64_t v13 = *(void *)(updated - 8);
  uint64_t v90 = updated;
  uint64_t v91 = v13;
  __chkstk_darwin(updated);
  sub_100035C70();
  uint64_t v87 = v14;
  sub_100020974();
  __chkstk_darwin(v15);
  BOOL v89 = (char *)&v82 - v16;
  sub_100020974();
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)((char *)&v82 - v19);
  __chkstk_darwin(v18);
  uint64_t v88 = (uint64_t)&v82 - v21;
  sub_100020974();
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v82 - v23;
  uint64_t v25 = type metadata accessor for MercuryCacheMetadata(0);
  uint64_t v26 = sub_100044798(v25);
  uint64_t v28 = v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (uint64_t *)((char *)&v82 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v94 = &_swiftEmptySetSingleton;
  if (!a5)
  {
    uint64_t v38 = sub_10012E130(a4);
    if (v38) {
      uint64_t v39 = sub_100192D7C(v38);
    }
    else {
      uint64_t v39 = &_swiftEmptySetSingleton;
    }
    uint64_t v74 = v83;
    uint64_t v79 = (uint64_t)v85;
    swift_bridgeObjectRetain();
    uint64_t v76 = sub_1001330A4((uint64_t)v39, v79);
    swift_bridgeObjectRelease();
    uint64_t v80 = (char *)v74 + *(int *)(type metadata accessor for MercuryCacheUpdateInput() + 32);
    type metadata accessor for Date();
    sub_100043B1C();
    (*(void (**)(char *, uint64_t))(v81 + 16))(v80, v84);
    uint64_t v61 = &_swiftEmptySetSingleton;
    uint64_t v75 = &_swiftEmptySetSingleton;
    goto LABEL_53;
  }
  uint64_t v82 = a3;
  if (a5 == 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1001330A4((uint64_t)v85, a4);
    sub_10016B680(v31);
    uint64_t v32 = *(void *)(a3 + 16);
    uint64_t v33 = _swiftEmptyArrayStorage;
    if (v32)
    {
      double v92 = _swiftEmptyArrayStorage;
      sub_100027304(0, v32, 0);
      uint64_t v34 = a3 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
      uint64_t v86 = *(void *)(v28 + 72);
      uint64_t v33 = v92;
      do
      {
        sub_10012A178(v34, (uint64_t)v30, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
        uint64_t v8 = *v30;
        uint64_t v35 = v30[1];
        swift_bridgeObjectRetain();
        sub_10012A1D8((uint64_t)v30, (void (*)(void))type metadata accessor for MercuryCacheMetadata);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100027304(0, v33[2] + 1, 1);
          uint64_t v33 = v92;
        }
        unint64_t v6 = v33[2];
        unint64_t v36 = v33[3];
        Swift::Int v7 = v6 + 1;
        if (v6 >= v36 >> 1)
        {
          sub_100027304(v36 > 1, v6 + 1, 1);
          uint64_t v33 = v92;
        }
        uint64_t v33[2] = v7;
        uint64_t v37 = &v33[2 * v6];
        void v37[4] = v8;
        v37[5] = v35;
        v34 += v86;
        --v32;
      }
      while (v32);
      a3 = v82;
    }
    uint64_t v41 = (uint64_t)v89;
    uint64_t v42 = _swiftEmptyArrayStorage;
    uint64_t v43 = sub_10002318C((uint64_t)v33);
    uint64_t v44 = (uint64_t)v85;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_10012EEF0(v43, v44);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v40 = v85;
    swift_bridgeObjectRetain();
    uint64_t v41 = (uint64_t)v89;
    uint64_t v42 = _swiftEmptyArrayStorage;
  }
  sub_10016B680((uint64_t)v40);
  uint64_t result = sub_100128D68(v84, a3);
  uint64_t v46 = result;
  double v92 = _swiftEmptyArrayStorage;
  uint64_t v47 = *(void *)(result + 16);
  if (v47)
  {
    unint64_t v48 = 0;
    uint64_t v49 = _swiftEmptyArrayStorage;
    while (v48 < *(void *)(v46 + 16))
    {
      unint64_t v50 = sub_10004694C();
      sub_10012A178(v50, (uint64_t)v24, (void (*)(void))type metadata accessor for CacheUpdateRun);
      if (v24[*(int *)(v90 + 24)] == 1)
      {
        sub_10012A230((uint64_t)v24, v88, (void (*)(void))type metadata accessor for CacheUpdateRun);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_100048EC4();
        }
        sub_10004B578();
        if (v52)
        {
          sub_1000452D8(v51);
          uint64_t v49 = v92;
        }
        void v49[2] = v41;
        uint64_t result = sub_10012A230(v88, (uint64_t)v49 + v7 + v6 * v8, (void (*)(void))type metadata accessor for CacheUpdateRun);
        uint64_t v41 = (uint64_t)v89;
      }
      else
      {
        uint64_t result = sub_10012A1D8((uint64_t)v24, (void (*)(void))type metadata accessor for CacheUpdateRun);
      }
      if (v47 == ++v48)
      {
        uint64_t v53 = v92;
        uint64_t v42 = _swiftEmptyArrayStorage;
        goto LABEL_28;
      }
    }
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v53 = _swiftEmptyArrayStorage;
LABEL_28:
  uint64_t v93 = &_swiftEmptySetSingleton;
  uint64_t v54 = v53[2];
  if (v54)
  {
    sub_100048890();
    uint64_t v56 = (uint64_t)v53 + v55;
    uint64_t v58 = *(void *)(v57 + 72);
    swift_retain();
    do
    {
      sub_10012A178(v56, (uint64_t)v20, (void (*)(void))type metadata accessor for CacheUpdateRun);
      Swift::Int v59 = *v20;
      Swift::Int v7 = v20[1];
      swift_bridgeObjectRetain();
      sub_10004A8EC((Swift::Int *)&v92, v59, v7);
      swift_bridgeObjectRelease();
      sub_10012A1D8((uint64_t)v20, (void (*)(void))type metadata accessor for CacheUpdateRun);
      v56 += v58;
      --v54;
    }
    while (v54);
    swift_release_n();
    Swift::String v60 = v93;
    uint64_t v41 = (uint64_t)v89;
    uint64_t v42 = _swiftEmptyArrayStorage;
  }
  else
  {
    swift_release();
    Swift::String v60 = &_swiftEmptySetSingleton;
  }
  uint64_t result = sub_1001330A4((uint64_t)v85, (uint64_t)v60);
  uint64_t v61 = (void *)result;
  double v92 = _swiftEmptyArrayStorage;
  if (!v47)
  {
LABEL_45:
    a3 = v82;
    swift_bridgeObjectRelease();
    uint64_t v93 = &_swiftEmptySetSingleton;
    uint64_t v66 = v42[2];
    if (v66)
    {
      sub_100048890();
      uint64_t v68 = (uint64_t)v42 + v67;
      uint64_t v70 = *(void *)(v69 + 72);
      swift_retain();
      do
      {
        sub_10012A178(v68, (uint64_t)v20, (void (*)(void))type metadata accessor for CacheUpdateRun);
        Swift::Int v71 = *v20;
        Swift::Int v72 = v20[1];
        swift_bridgeObjectRetain();
        sub_10004A8EC((Swift::Int *)&v92, v71, v72);
        swift_bridgeObjectRelease();
        sub_10012A1D8((uint64_t)v20, (void (*)(void))type metadata accessor for CacheUpdateRun);
        v68 += v70;
        --v66;
      }
      while (v66);
      swift_release_n();
      unint64_t v73 = v93;
    }
    else
    {
      swift_release();
      unint64_t v73 = &_swiftEmptySetSingleton;
    }
    uint64_t v74 = v83;
    uint64_t v75 = (void *)sub_1001330A4((uint64_t)v85, (uint64_t)v73);
    uint64_t v76 = (uint64_t)v94;
    uint64_t v77 = (char *)v74 + *(int *)(type metadata accessor for MercuryCacheUpdateInput() + 32);
    type metadata accessor for Date();
    sub_100043B1C();
    (*(void (**)(char *, uint64_t))(v78 + 16))(v77, v84);
LABEL_53:
    *uint64_t v74 = v76;
    v74[1] = (uint64_t)v61;
    v74[2] = (uint64_t)v75;
    void v74[3] = a3;
    return swift_bridgeObjectRetain();
  }
  unint64_t v62 = 0;
  uint64_t v63 = _swiftEmptyArrayStorage;
  while (v62 < *(void *)(v46 + 16))
  {
    unint64_t v64 = sub_10004694C();
    sub_10012A178(v64, v41, (void (*)(void))type metadata accessor for CacheUpdateRun);
    if (*(unsigned char *)(v41 + *(int *)(v90 + 24)))
    {
      uint64_t result = sub_10012A1D8(v41, (void (*)(void))type metadata accessor for CacheUpdateRun);
    }
    else
    {
      sub_10012A230(v41, v87, (void (*)(void))type metadata accessor for CacheUpdateRun);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100048EC4();
      }
      sub_10004B578();
      if (v52)
      {
        sub_1000452D8(v65);
        uint64_t v63 = v92;
      }
      v63[2] = v41;
      uint64_t result = sub_10012A230(v87, (uint64_t)v63 + v7, (void (*)(void))type metadata accessor for CacheUpdateRun);
      uint64_t v41 = (uint64_t)v89;
    }
    if (v47 == ++v62)
    {
      uint64_t v42 = v92;
      goto LABEL_45;
    }
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_10012A00C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1001A2898(*a1, *a2, a3, a4, a5, a6, a7, a8, v26, v29, vars0);
  if ((v16 & 1) == 0) {
    return 0;
  }
  sub_1001A2898(a1[1], a2[1], v10, v11, v12, v13, v14, v15, v27, v30, vars0a);
  if ((v23 & 1) == 0) {
    return 0;
  }
  sub_1001A2898(a1[2], a2[2], v17, v18, v19, v20, v21, v22, v28, v31, vars0b);
  if ((v24 & 1) == 0 || (sub_1001A381C(a1[3], a2[3]) & 1) == 0) {
    return 0;
  }
  type metadata accessor for MercuryCacheUpdateInput();
  return static Date.== infix(_:_:)();
}