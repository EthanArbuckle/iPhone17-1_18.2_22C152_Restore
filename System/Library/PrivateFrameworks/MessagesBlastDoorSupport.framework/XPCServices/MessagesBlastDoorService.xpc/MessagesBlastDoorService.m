void sub_1000083D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_10000842C(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_1000EE058)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = sub_100008570;
    v4[4] = &unk_1000E0460;
    v4[5] = v4;
    long long v5 = off_1000E0448;
    uint64_t v6 = 0;
    qword_1000EE058 = _sl_dlopen();
    v2 = (void *)v4[0];
    if (!qword_1000EE058)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("WKUIBlastDoorDataSource");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    v2 = (void *)sub_1000B7C78();
LABEL_8:
    free(v2);
  }
  qword_1000EE050 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_100008570()
{
  uint64_t result = _sl_dlopen();
  qword_1000EE058 = result;
  return result;
}

void sub_100009FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100009FE4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  id result = [a2 isEqualToString:*(void *)(a1 + 32)];
  if (result)
  {
    uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8);
    *(void *)(v12 + 32) = a3;
    *(void *)(v12 + 40) = a4;
    *a7 = 1;
  }
  return result;
}

id sub_10000A4EC()
{
  if (qword_1000EE068 != -1) {
    dispatch_once(&qword_1000EE068, &stru_1000E04C8);
  }
  v0 = (void *)qword_1000EE060;

  return v0;
}

void sub_10000A8F0(id a1)
{
  v1 = +[NSCharacterSet controlCharacterSet];
  id v2 = [v1 mutableCopy];

  [v2 invert];
  v3 = +[NSCharacterSet whitespaceAndNewlineCharacterSet];
  [v2 formUnionWithCharacterSet:v3];

  [v2 invert];
  WORD2(v7) = 6158;
  LODWORD(v7) = 537731084;
  id v4 = [objc_alloc((Class)NSString) initWithCharactersNoCopy:&v7 length:3 freeWhenDone:0];
  objc_msgSend(v2, "removeCharactersInString:", v4, v7);
  id v5 = [v2 copy];
  uint64_t v6 = (void *)qword_1000EE060;
  qword_1000EE060 = (uint64_t)v5;
}

void sub_10000A9F8(id a1)
{
  v1 = sub_10000A4EC();
  id v4 = [v1 mutableCopy];

  [v4 addCharactersInString:MBDIMAttachmentCharacterString];
  [v4 addCharactersInString:MBDIMBreadcrumbCharacterString];
  id v2 = [v4 copy];
  v3 = (void *)qword_1000EE070;
  qword_1000EE070 = (uint64_t)v2;
}

void sub_10000ABA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_10000ABC0(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_1000EE088)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = sub_10000AD04;
    v4[4] = &unk_1000E0460;
    v4[5] = v4;
    long long v5 = off_1000E0508;
    uint64_t v6 = 0;
    qword_1000EE088 = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!qword_1000EE088)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("SWCollaborationClearNoticeTransmissionMessage");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)sub_1000B7CA0();
LABEL_8:
    free(v2);
  }
  qword_1000EE080 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10000AD04()
{
  uint64_t result = _sl_dlopen();
  qword_1000EE088 = result;
  return result;
}

void sub_10000B23C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_10000B358(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_1000EE098)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = sub_10000B49C;
    v4[4] = &unk_1000E0460;
    v4[5] = v4;
    long long v5 = off_1000E0520;
    uint64_t v6 = 0;
    qword_1000EE098 = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!qword_1000EE098)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("FKOrderMessagesPreviewMetadata");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)sub_1000B7CC8();
LABEL_8:
    free(v2);
  }
  qword_1000EE090 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10000B49C()
{
  uint64_t result = _sl_dlopen();
  qword_1000EE098 = result;
  return result;
}

void sub_10000C06C(void *a1, void *a2, void *a3)
{
  id v8 = a1;
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = [v5 objectForKey:v8];
  if (v7)
  {
    [v6 setObject:v7 forKey:v8];
    [v5 removeObjectForKey:v8];
  }
}

id MBDIMCopyNormalizedAttributes(void *a1, int a2, int a3)
{
  id v5 = a1;
  id v6 = v5;
  if (a2 & 1) != 0 || (a3)
  {
    id v7 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", objc_msgSend(v5, "count"));
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id obj = [v6 keyEnumerator];
    id v8 = [obj countByEnumeratingWithState:&v19 objects:v18 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v20;
      do
      {
        for (i = 0; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v20 != v10) {
            objc_enumerationMutation(obj);
          }
          id v12 = *(id *)(*((void *)&v19 + 1) + 8 * i);
          v13 = [v6 objectForKey:v12];
          if (a2)
          {
            uint64_t v14 = [v12 lowercaseString];

            id v12 = (id)v14;
          }
          if (a3)
          {
            uint64_t v15 = [v13 lowercaseString];

            v13 = (void *)v15;
          }
          [v7 setObject:v13 forKey:v12];
        }
        id v9 = [obj countByEnumeratingWithState:&v19 objects:v18 count:16];
      }
      while (v9);
    }
  }
  else
  {
    id v7 = [v5 copy];
  }

  return v7;
}

double transcriptWaveformWidthForDuration(double a1)
{
  if (a1 >= 20.0) {
    return 150.0;
  }
  double v1 = log2(a1 + 1.0) * 50.0 / 4.39231742;
  unint64_t v2 = 75;
  if ((unint64_t)v1 >= 0x19) {
    return (double)(3 * (unint64_t)v1);
  }
  return (double)v2;
}

unint64_t powerLevelsCountForWidth(double a1)
{
  return (unint64_t)(a1 / 3.0);
}

AudioMetadata *audioMetadataForFileURL(void *a1)
{
  CFURLRef v67 = a1;
  v66 = objc_alloc_init(AudioMetadata);
  id v65 = 0;
  id v64 = 0;
  ExtAudioFileRef outExtAudioFile = 0;
  memset(&__b, 0, sizeof(__b));
  v63 = malloc_type_malloc(0x8000uLL, 0x9ABEB6B3uLL);
  if (v63)
  {
    if (v67)
    {
      ExtAudioFileOpenURL(v67, &outExtAudioFile);
      if (outExtAudioFile)
      {
        AudioFileID outPropertyData = 0;
        UInt32 ioPropertyDataSize = 8;
        OSStatus Property = ExtAudioFileGetProperty(outExtAudioFile, 0x6166696Cu, &ioPropertyDataSize, &outPropertyData);
        if (Property)
        {
          v54 = sub_10000D684();
          if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR))
          {
            sub_10000D6F4(Property);
            id v53 = (id)objc_claimAutoreleasedReturnValue();
            sub_10000D6E0((uint64_t)v94, (uint64_t)v53);
            _os_log_error_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_ERROR, "Unable to get audioID: %@", v94, 0xCu);
          }
        }
        else
        {
          int v77 = 0;
          UInt32 ioDataSize = 4;
          AudioFileGetProperty(outPropertyData, 0x66666D74u, &ioDataSize, &v77);
          BOOL v52 = v77 == 1667327590;
          BOOL v51 = v77 == 1634562662;
          if (v77 == 1667327590 || v77 == 1634562662)
          {
            double v75 = 0.0;
            UInt32 v74 = 8;
            OSStatus v56 = AudioFileGetProperty(outPropertyData, 0x65647572u, &v74, &v75);
            if (v56)
            {
              v49 = sub_10000D684();
              if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
              {
                sub_10000D6F4(v56);
                id v48 = (id)objc_claimAutoreleasedReturnValue();
                sub_10000D6E0((uint64_t)v93, (uint64_t)v48);
                _os_log_error_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_ERROR, "Unable to get duration: %@", v93, 0xCu);
              }
            }
            else
            {
              [(AudioMetadata *)v66 setDuration:v75];
              double v47 = transcriptWaveformWidthForDuration(v75);
              unint64_t v46 = powerLevelsCountForWidth(v47);
              if (v46 && v46 < 0x3E8)
              {
                id v64 = [objc_alloc((Class)NSMutableArray) initWithCapacity:v46];

                if (v64)
                {
                  for (unint64_t i = 0; i < v46; ++i)
                  {
                    unint64_t v2 = +[NSNumber numberWithUnsignedInteger:0];
                    [v64 addObject:v2];
                  }
                  double v42 = v75 / (double)v46;
                  memset(v73, 0, sizeof(v73));
                  UInt32 v72 = 40;
                  OSStatus v3 = ExtAudioFileGetProperty(outExtAudioFile, 0x66666D74u, &v72, v73);
                  int v57 = v3;
                  if (v3)
                  {
                    v41 = sub_10000D684();
                    if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
                    {
                      sub_10000D6F4(v57);
                      id v40 = (id)objc_claimAutoreleasedReturnValue();
                      sub_10000D6E0((uint64_t)v91, (uint64_t)v40);
                      _os_log_error_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_ERROR, "Unable to get sourceFormat: %@", v91, 0xCu);
                    }
                  }
                  else if (!v52 || LODWORD(v73[1]) == 1869641075)
                  {
                    if (!v51 || LODWORD(v73[1]) == 1935764850)
                    {
                      memset(inPropertyData, 0, sizeof(inPropertyData));
                      if (v73[0] > 0.0 && v73[0] < 72000.0)
                      {
                        inPropertyData[0] = v73[0];
                        *(void *)&inPropertyData[1] = 0x96C70636DLL;
                        LODWORD(inPropertyData[4]) = 32;
                        *(void *)&inPropertyData[3] = 0x100000004;
                        *(void *)&inPropertyData[2] = 0x100000004;
                        OSStatus v58 = ExtAudioFileSetProperty(outExtAudioFile, 0x63666D74u, 0x28u, inPropertyData);
                        if (v58)
                        {
                          v36 = sub_10000D684();
                          if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
                          {
                            sub_10000D6F4(v58);
                            id v35 = (id)objc_claimAutoreleasedReturnValue();
                            sub_10000D6E0((uint64_t)v87, (uint64_t)v35);
                            _os_log_error_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_ERROR, "Unable to set clientFormat: %@", v87, 0xCu);
                          }
                        }
                        else
                        {
                          double v34 = 0.0;
                          id v65 = [objc_alloc((Class)NSMutableArray) initWithCapacity:v46];

                          if (v65)
                          {
                            for (unint64_t j = 0; j < v46; ++j)
                            {
                              id v7 = +[NSNumber numberWithFloat:0.0];
                              [v65 addObject:v7];
                            }
                            do
                            {
                              __b.mNumberBuffers = 1;
                              __b.mBuffers[0].mNumberChannels = 1;
                              __b.mBuffers[0].mDataByteSize = 0x8000;
                              __b.mBuffers[0].mData = v63;
                              UInt32 ioNumberFrames = 0x2000;
                              OSStatus v59 = ExtAudioFileRead(outExtAudioFile, &ioNumberFrames, &__b);
                              if (!v59 && ioNumberFrames)
                              {
                                double v33 = (double)ioNumberFrames / inPropertyData[0];
                                mData = (float *)__b.mBuffers[0].mData;
                                UInt32 v28 = __b.mBuffers[0].mDataByteSize / LODWORD(inPropertyData[3]);
                                for (unsigned int k = 0; k < v28; ++k)
                                {
                                  if ((float)(mData[k] * 32767.0) >= (float)0x7FFF) {
                                    float v8 = (float)0x7FFF;
                                  }
                                  else {
                                    float v8 = mData[k] * 32767.0;
                                  }
                                  if (v8 < (float)-32768) {
                                    float v8 = (float)-32768;
                                  }
                                  float v26 = v8;
                                  if (v28 == 1) {
                                    double v25 = v34;
                                  }
                                  else {
                                    double v25 = v34 + (double)k / (double)(v28 - 1) * v33;
                                  }
                                  if (v25 / v42 >= (double)(v46 - 1)) {
                                    double v9 = (double)(v46 - 1);
                                  }
                                  else {
                                    double v9 = v25 / v42;
                                  }
                                  unint64_t v24 = (unint64_t)v9;
                                  uint64_t v10 = [v65 objectAtIndex:(unint64_t)v9];
                                  [v10 floatValue];
                                  double v12 = pow(v11, 2.0);
                                  v13 = [v64 objectAtIndex:v24];
                                  double v14 = (double)(unint64_t)[v13 unsignedIntegerValue];
                                  long double v15 = pow(v26, 2.0) + v12 * v14;
                                  v16 = [v64 objectAtIndex:v24];
                                  *(float *)&long double v15 = sqrt(v15/ (double)((unint64_t)[v16 unsignedIntegerValue]+ 1));

                                  LODWORD(v17) = LODWORD(v15);
                                  v18 = +[NSNumber numberWithFloat:v17];
                                  [v65 setObject:v18 atIndexedSubscript:v24];

                                  long long v19 = [v64 objectAtIndex:v24];
                                  long long v20 = (char *)[v19 unsignedIntegerValue] + 1;

                                  long long v21 = +[NSNumber numberWithUnsignedInteger:v20];
                                  [v64 replaceObjectAtIndex:v24 withObject:v21];
                                }
                                double v34 = v34 + v33;
                                int v23 = 0;
                              }
                              else
                              {
                                oslog = sub_10000D684();
                                if (os_log_type_enabled(oslog, OS_LOG_TYPE_ERROR))
                                {
                                  sub_10000D6F4(v59);
                                  id v29 = (id)objc_claimAutoreleasedReturnValue();
                                  sub_10000D6E0((uint64_t)v86, (uint64_t)v29);
                                  _os_log_error_impl((void *)&_mh_execute_header, oslog, OS_LOG_TYPE_ERROR, "Unable to determine ioNumberFrames: %@", v86, 0xCu);
                                }
                                int v23 = 2;
                              }
                            }
                            while (!v23);
                          }
                          else
                          {
                            v32 = sub_10000D684();
                            if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
                            {
                              sub_10000D6D8(v81);
                              _os_log_error_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_ERROR, "Unable to allocate powerLevels", v81, 2u);
                            }
                          }
                        }
                      }
                      else
                      {
                        v37 = sub_10000D684();
                        if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
                        {
                          id v6 = +[NSNumber numberWithDouble:v73[0]];
                          sub_10000D6E0((uint64_t)v88, (uint64_t)v6);
                          _os_log_error_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_ERROR, "mSampleRate is out of bounds: %@", v88, 0xCu);
                        }
                      }
                    }
                    else
                    {
                      v38 = sub_10000D684();
                      if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
                      {
                        id v5 = +[NSNumber numberWithUnsignedInt:LODWORD(v73[1])];
                        sub_10000D6E0((uint64_t)v89, (uint64_t)v5);
                        _os_log_error_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_ERROR, "Format is not AMR: %@", v89, 0xCu);
                      }
                    }
                  }
                  else
                  {
                    v39 = sub_10000D684();
                    if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
                    {
                      id v4 = +[NSNumber numberWithUnsignedInt:LODWORD(v73[1])];
                      sub_10000D6E0((uint64_t)v90, (uint64_t)v4);
                      _os_log_error_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_ERROR, "Format is not OPUS: %@", v90, 0xCu);
                    }
                  }
                }
                else
                {
                  v44 = sub_10000D684();
                  if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
                  {
                    sub_10000D6D8(v82);
                    _os_log_error_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_ERROR, "Unable to allocate runningAverageCounts", v82, 2u);
                  }
                }
              }
              else
              {
                v45 = sub_10000D684();
                if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
                {
                  double v1 = +[NSNumber numberWithUnsignedInteger:v46];
                  sub_10000D6E0((uint64_t)v92, (uint64_t)v1);
                  _os_log_error_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_ERROR, "Failing because powerLevelsCount is out of bounds: %@", v92, 0xCu);
                }
              }
            }
          }
          else
          {
            v50 = sub_10000D684();
            if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
            {
              sub_10000D6D8(v83);
              _os_log_error_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_ERROR, "Container is not CAF or AMR.", v83, 2u);
            }
          }
        }
      }
      else
      {
        v60 = sub_10000D684();
        if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR))
        {
          sub_10000D6E0((uint64_t)v95, (uint64_t)v67);
          _os_log_error_impl((void *)&_mh_execute_header, v60, OS_LOG_TYPE_ERROR, "Unable to open file url: %@", v95, 0xCu);
        }
      }
    }
    else
    {
      v61 = sub_10000D684();
      if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR))
      {
        sub_10000D6D8(v84);
        _os_log_error_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_ERROR, "No input file URL", v84, 2u);
      }
    }
  }
  else
  {
    v62 = sub_10000D684();
    if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR))
    {
      sub_10000D6D8(buf);
      _os_log_error_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_ERROR, "Couldn't allocate output buffer", buf, 2u);
    }
  }
  if (outExtAudioFile) {
    ExtAudioFileDispose(outExtAudioFile);
  }
  if (v63) {
    free(v63);
  }
  [(AudioMetadata *)v66 setPowerLevels:v65];
  v68 = v66;

  return v68;
}

id sub_10000D684()
{
  if (qword_1000EE0A0 != -1) {
    dispatch_once(&qword_1000EE0A0, &stru_1000E0538);
  }
  v0 = (void *)qword_1000EE0A8;

  return v0;
}

_WORD *sub_10000D6D8(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

double sub_10000D6E0(uint64_t a1, uint64_t a2)
{
  *(void *)&double result = 138412290;
  *(_DWORD *)a1 = 138412290;
  *(void *)(a1 + 4) = a2;
  return result;
}

CFStringRef sub_10000D6F4(int a1)
{
  if ((a1 & 0x80000000) == 0)
  {
    if (a1 > 561213538)
    {
      if (a1 == 561213539) {
        return @"kAudioServicesBadSpecifierSizeError";
      }
      if (a1 == 1886681407) {
        return @"kAudioServicesUnsupportedPropertyError";
      }
    }
    else
    {
      if (!a1) {
        return @"kAudioServicesNoError";
      }
      if (a1 == 561211770) {
        return @"kAudioServicesBadPropertySizeError";
      }
    }
    return @"Unknown Error";
  }
  if (a1 == -1502) {
    return @"kAudioServicesSystemSoundExceededMaximumDurationError";
  }
  if (a1 != -1501)
  {
    if (a1 == -1500) {
      return @"kAudioServicesSystemSoundUnspecifiedError";
    }
    return @"Unknown Error";
  }
  return @"kAudioServicesSystemSoundClientTimedOutError";
}

void sub_10000D7B4(id a1)
{
  qword_1000EE0A8 = (uint64_t)os_log_create("com.apple.Messages.blastdoor", "AudioPreviewLevelsGenerator");

  _objc_release_x1();
}

BOOL collaboratonNoticeEventTypeKnown(uint64_t a1)
{
  id v2 = [sub_10000D868() eventClassForType:a1];
  if (!v2)
  {
    OSStatus v3 = sub_10000D978();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1000B7CF0(a1, v3);
    }
  }
  return v2 != 0;
}

id sub_10000D868()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)qword_1000EE0B0;
  uint64_t v7 = qword_1000EE0B0;
  if (!qword_1000EE0B0)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_10000DCBC;
    v3[3] = &unk_1000E0428;
    v3[4] = &v4;
    sub_10000DCBC((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_10000D960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10000D978()
{
  if (qword_1000EE0C0 != -1) {
    dispatch_once(&qword_1000EE0C0, &stru_1000E0570);
  }
  v0 = (void *)qword_1000EE0C8;

  return v0;
}

id unarchiveCollaborationNoticeEvent(void *a1)
{
  id v1 = a1;
  id v2 = [sub_10000D868() allowedClasses];
  v11[0] = objc_opt_class();
  v11[1] = objc_opt_class();
  v11[2] = objc_opt_class();
  v11[3] = objc_opt_class();
  v11[4] = objc_opt_class();
  v11[5] = objc_opt_class();
  v11[6] = objc_opt_class();
  OSStatus v3 = +[NSArray arrayWithObjects:v11 count:7];
  uint64_t v4 = [v2 setByAddingObjectsFromArray:v3];

  id v10 = 0;
  id v5 = +[NSKeyedUnarchiver _strictlyUnarchivedObjectOfClasses:v4 fromData:v1 error:&v10];

  id v6 = v10;
  if (v6 || !v5)
  {
    float v8 = sub_10000D978();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1000B7D94((uint64_t)v6, v8);
    }

    id v7 = 0;
  }
  else
  {
    id v7 = v5;
  }

  return v7;
}

Class sub_10000DCBC(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_1000EE0B8)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = sub_10000DE00;
    v4[4] = &unk_1000E0460;
    v4[5] = v4;
    long long v5 = off_1000E0558;
    uint64_t v6 = 0;
    qword_1000EE0B8 = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!qword_1000EE0B8)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("_SWHighlightEventAllowList");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    sub_1000B7E90();
LABEL_8:
    free(v2);
  }
  qword_1000EE0B0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10000DE00()
{
  uint64_t result = _sl_dlopen();
  qword_1000EE0B8 = result;
  return result;
}

void sub_10000DE74(id a1)
{
  qword_1000EE0C8 = (uint64_t)os_log_create("com.apple.Messages.blastdoor", "CollaborationNotice");

  _objc_release_x1();
}

id SMSCopySanitizedContentLocation(void *a1)
{
  id v1 = a1;
  if ([v1 hasPrefix:@"cid:"])
  {
    id v2 = [v1 mutableCopy];
    [v2 replaceOccurrencesOfString:@"cid:", &stru_1000E5260, 2, 0, objc_msgSend(@"cid:", "length") withString options range];
  }
  else
  {
    id v2 = v1;
  }

  return v2;
}

void sub_10000E0EC(id a1)
{
  qword_1000EE0D0 = objc_alloc_init(MBDXMLParser);

  _objc_release_x1();
}

id sub_10000E358(uint64_t a1, void *a2)
{
  OSStatus v3 = *(void **)(*(void *)(a1 + 32) + 16);
  id v4 = a2;
  [v3 reset];
  id v5 = [objc_alloc((Class)NSXMLParser) initWithData:v4];

  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = *(void **)(v6 + 8);
  *(void *)(v6 + 8) = v5;

  id v8 = objc_alloc_init((Class)NSMutableArray);
  uint64_t v9 = *(void *)(a1 + 32);
  id v10 = *(void **)(v9 + 32);
  *(void *)(v9 + 32) = v8;

  uint64_t v11 = *(void *)(a1 + 32);
  double v12 = *(void **)(v11 + 24);
  *(void *)(v11 + 24) = 0;

  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "setDelegate:");
  v13 = *(void **)(*(void *)(a1 + 32) + 8);

  return _[v13 parse];
}

void sub_10000E414(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  OSStatus v3 = *(void **)(v2 + 32);
  *(void *)(v2 + 32) = 0;

  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 24);
  *(void *)(v4 + 24) = 0;

  [*(id *)(*(void *)(a1 + 32) + 8) setDelegate:0];
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = *(void **)(v6 + 8);
  *(void *)(v6 + 8) = 0;
}

objc_class *sub_10000EA74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = objc_opt_class();
  if (v5 == v4)
  {
LABEL_5:
    uint64_t v11 = 0;
  }
  else
  {
    Superclass = (objc_class *)v5;
    while (1)
    {
      IMP MethodImplementation = class_getMethodImplementation(Superclass, "name");
      id v8 = ((void (*)(void, const char *))MethodImplementation)(*(void *)(a1 + 32), "name");
      uint64_t v9 = (NSString *)[objc_alloc((Class)NSString) initWithFormat:@"%@_%@_Frame", v8, a2];
      Class v10 = NSClassFromString(v9);
      if (v10) {
        break;
      }
      Superclass = class_getSuperclass(Superclass);

      if (Superclass == (objc_class *)v4) {
        goto LABEL_5;
      }
    }
    uint64_t v11 = v10;
  }

  return v11;
}

unsigned char *MBDIMCreateDictionaryFromCSSString(void *a1, char a2)
{
  id v2 = a1;
  if (v2)
  {
    id v3 = objc_alloc_init((Class)NSMutableDictionary);
    uint64_t v4 = (char *)[v2 lengthOfBytesUsingEncoding:4];
    if (v4)
    {
      uint64_t v5 = v4 + 1;
      uint64_t v6 = malloc_type_malloc((size_t)(v4 + 1), 0xBAB9D742uLL);
      if (!v6) {
        goto LABEL_40;
      }
      if ([v2 getCString:v6 maxLength:v5 encoding:4])
      {
        id v7 = 0;
        id v8 = 0;
        id v29 = v6;
        while (1)
        {
          unsigned int v9 = *v6;
          if (!*v6) {
            goto LABEL_12;
          }
          Class v10 = v6;
          if (v9 <= 0x39) {
            goto LABEL_44;
          }
          if (v9 == 58)
          {
            id v11 = 0;
            Class v10 = v6 + 1;
            double v12 = v8;
            id v8 = v7;
            goto LABEL_31;
          }
          Class v10 = v6;
          if (v9 >= 0x3C)
          {
LABEL_44:
            do
              unsigned int v14 = *++v10;
            while (byte_1000BF0C8[v14] < 0);
            unint64_t v15 = (unint64_t)(v10 - 1);
            v16 = v6;
            if (v6 < v10)
            {
              while (1)
              {
                unsigned int v17 = *v6;
                BOOL v18 = v17 > 0x27;
                uint64_t v19 = (1 << v17) & 0x8500002600;
                if (v18 || v19 == 0) {
                  break;
                }
                v16 = v6 + 1;
                if ((unint64_t)v6++ >= v15) {
                  goto LABEL_23;
                }
              }
              v16 = v6;
            }
LABEL_23:
            unint64_t v22 = (unint64_t)v10;
            if (v15 > (unint64_t)v16)
            {
              unint64_t v23 = (unint64_t)v10;
              unint64_t v22 = (unint64_t)v10;
              while (1)
              {
                unsigned int v24 = *(unsigned __int8 *)--v22;
                uint64_t v25 = (1 << v24) & 0x8500002600;
                if (v24 > 0x27 || v25 == 0) {
                  break;
                }
                unint64_t v23 = v22;
                if (v22 <= (unint64_t)(v16 + 1)) {
                  goto LABEL_30;
                }
              }
              unint64_t v22 = v23;
            }
LABEL_30:
            id v11 = objc_msgSend(objc_alloc((Class)NSString), "initWithBytes:length:encoding:", v16, v22 - (void)v16, 4, v29);
            double v12 = v7;
LABEL_31:

            id v7 = v11;
            uint64_t v6 = v10;
          }
          else
          {
LABEL_12:
            if (v8 && v7)
            {
              if (a2)
              {
                v13 = [v8 lowercaseString];
                [v3 setObject:v7 forKey:v13];
              }
              else
              {
                [v3 setObject:v7 forKey:v8];
              }
            }

            id v7 = 0;
            id v8 = 0;
            if (!*v6++)
            {
              free(v29);
              uint64_t v6 = v3;
              goto LABEL_40;
            }
          }
        }
      }
      free(v6);
    }
    uint64_t v6 = 0;
LABEL_40:
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

id blastdoor_AVTAvatarRecordRenderingGetClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)qword_1000EE0E8;
  uint64_t v7 = qword_1000EE0E8;
  if (!qword_1000EE0E8)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100011568;
    v3[3] = &unk_1000E0428;
    v3[4] = &v4;
    sub_100011568((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_100010A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id blastdoor_AVTAvatarRecordSerializerGetClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)qword_1000EE0F8;
  uint64_t v7 = qword_1000EE0F8;
  if (!qword_1000EE0F8)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100011730;
    v3[3] = &unk_1000E0428;
    v3[4] = &v4;
    sub_100011730((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_100010B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100010C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100010CD4()
{
  v1[0] = 0;
  if (!qword_1000EE110)
  {
    v1[1] = _NSConcreteStackBlock;
    v1[2] = 3221225472;
    v1[3] = sub_100011940;
    v1[4] = &unk_1000E0460;
    v1[5] = v1;
    long long v2 = off_1000E0658;
    uint64_t v3 = 0;
    qword_1000EE110 = _sl_dlopen();
  }
  v0 = (void *)v1[0];
  if (!qword_1000EE110)
  {
    v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

void sub_100010EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100011038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10001117C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000112C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100011404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100011548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_100011568(uint64_t a1)
{
  sub_1000115C0();
  Class result = objc_getClass("AVTAvatarRecordRendering");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1000B7F28();
  }
  qword_1000EE0E8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1000115C0()
{
  v1[0] = 0;
  if (!qword_1000EE0F0)
  {
    v1[1] = _NSConcreteStackBlock;
    v1[2] = 3221225472;
    v1[3] = sub_1000116BC;
    v1[4] = &unk_1000E0460;
    v1[5] = v1;
    long long v2 = off_1000E0628;
    uint64_t v3 = 0;
    qword_1000EE0F0 = _sl_dlopen();
  }
  v0 = (void *)v1[0];
  if (!qword_1000EE0F0)
  {
    v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t sub_1000116BC()
{
  uint64_t result = _sl_dlopen();
  qword_1000EE0F0 = result;
  return result;
}

Class sub_100011730(uint64_t a1)
{
  sub_1000115C0();
  Class result = objc_getClass("AVTAvatarRecordSerializer");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1000B7F50();
  }
  qword_1000EE0F8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class sub_100011788(uint64_t a1)
{
  v3[0] = 0;
  if (!qword_1000EE108)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = (void *)3221225472;
    v3[3] = sub_1000118CC;
    v3[4] = &unk_1000E0460;
    void v3[5] = v3;
    long long v4 = off_1000E0640;
    uint64_t v5 = 0;
    qword_1000EE108 = _sl_dlopen();
    if (!qword_1000EE108)
    {
      abort_report_np();
LABEL_8:
      sub_1000B7F78();
    }
    if (v3[0]) {
      free(v3[0]);
    }
  }
  Class result = objc_getClass("PRSPosterArchiver");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    goto LABEL_8;
  }
  qword_1000EE100 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1000118CC()
{
  uint64_t result = _sl_dlopen();
  qword_1000EE108 = result;
  return result;
}

uint64_t sub_100011940()
{
  uint64_t result = _sl_dlopen();
  qword_1000EE110 = result;
  return result;
}

Class sub_1000119B4(uint64_t a1)
{
  v3[0] = 0;
  if (!qword_1000EE120)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = (void *)3221225472;
    v3[3] = sub_100011AF8;
    v3[4] = &unk_1000E0460;
    void v3[5] = v3;
    long long v4 = off_1000E0670;
    uint64_t v5 = 0;
    qword_1000EE120 = _sl_dlopen();
    if (!qword_1000EE120)
    {
      abort_report_np();
LABEL_8:
      sub_1000B7FA0();
    }
    if (v3[0]) {
      free(v3[0]);
    }
  }
  Class result = objc_getClass("PFServerPosterPath");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    goto LABEL_8;
  }
  qword_1000EE118 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_100011AF8()
{
  uint64_t result = _sl_dlopen();
  qword_1000EE120 = result;
  return result;
}

Class sub_100011B6C(uint64_t a1)
{
  sub_100010CD4();
  Class result = objc_getClass("PRPosterSystemTimeFontConfiguration");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1000B7FC8();
  }
  qword_1000EE128 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class sub_100011BC4(uint64_t a1)
{
  sub_100010CD4();
  Class result = objc_getClass("PRPosterContentDiscreteColorsStyle");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1000B7FF0();
  }
  qword_1000EE130 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class sub_100011C1C(uint64_t a1)
{
  sub_100010CD4();
  Class result = objc_getClass("PRPosterContentGradientStyle");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1000B8018();
  }
  qword_1000EE138 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class sub_100011C74(uint64_t a1)
{
  sub_100010CD4();
  Class result = objc_getClass("PRPosterContentVibrantMaterialStyle");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1000B8040();
  }
  qword_1000EE140 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class sub_100011CCC(uint64_t a1)
{
  sub_100010CD4();
  Class result = objc_getClass("PRPosterContentVibrantMonochromeStyle");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1000B8068();
  }
  qword_1000EE148 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id extractFirstContactFromData(uint64_t a1)
{
  uint64_t v7 = 0;
  id v1 = +[CNContactVCardSerialization summaryOfVCard:a1 error:&v7];
  long long v2 = v1;
  uint64_t v3 = 0;
  if (v7) {
    BOOL v4 = 1;
  }
  else {
    BOOL v4 = v1 == 0;
  }
  if (!v4)
  {
    if ([v1 contactCount])
    {
      uint64_t v5 = [v2 avatarContacts];
      uint64_t v3 = [v5 firstObject];
    }
    else
    {
      uint64_t v3 = 0;
    }
  }

  return v3;
}

int main(int argc, const char **argv, const char **envp)
{
  sub_10001295C(&qword_1000EC308);
  __chkstk_darwin();
  unint64_t v23 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000B8760();
  uint64_t v22 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000B8740();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  Class v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000B8720();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  unsigned int v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  register_for_dlsym_callbacks();
  _CFPrefsSetDirectModeEnabled();
  _CFPrefsSetReadOnly();
  sub_1000B8A80();
  qword_1000F9280 = sub_1000B8A10();
  v15._rawValue = &off_1000E0838;
  qword_1000F9288 = (uint64_t)&off_1000E0838;
  sub_1000B89E0(v15, 0);
  v16._rawValue = &off_1000E0AC8;
  qword_1000F9290 = (uint64_t)&off_1000E0AC8;
  sub_1000B89F0(v16);
  sub_1000BA6C0();
  sub_1000129A0();
  sub_1000B8A20();
  sub_1000BA9E0();
  sub_1000129F4();
  sub_1000B8A20();
  sub_1000BAF10();
  sub_100012A48();
  sub_1000B8A20();
  sub_1000B9F10();
  sub_100012A9C();
  sub_1000B8A20();
  sub_1000B8EC0();
  sub_100012AF0();
  sub_1000B8A20();
  sub_1000B9A70();
  sub_100012B44();
  sub_1000B8A20();
  sub_1000BAD10();
  sub_100012B98();
  sub_1000B8A20();
  sub_1000BAC60();
  sub_100012BEC();
  sub_1000B8A20();
  sub_1000BA890();
  sub_100012C40();
  sub_1000B8A20();
  sub_1000B8FD0();
  sub_100012C94();
  sub_1000B8A20();
  sub_1000B8F50();
  sub_100012CE8();
  sub_1000B8A20();
  sub_1000B8BB0();
  sub_100012D3C();
  sub_1000B8A20();
  sub_1000BB110();
  sub_100012D90();
  sub_1000B8A20();
  sub_1000B8710();
  sub_1000B9F90();
  sub_100012DE4(&qword_1000EC378, (void (*)(uint64_t))&type metadata accessor for LiteTextMessageUnpacker);
  sub_1000B8A20();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1000B8730();
  sub_1000BADF0();
  sub_100012DE4(&qword_1000EC380, (void (*)(uint64_t))&type metadata accessor for SatelliteSMSTextMessageUnpacker);
  sub_1000B8A20();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1000BB220();
  sub_100012E2C();
  sub_1000B8A20();
  sub_1000B8D30();
  sub_100012E80();
  sub_1000B8A40();
  sub_1000BACC0();
  sub_100012ED4();
  sub_1000B8A20();
  sub_1000B8750();
  sub_1000BAFE0();
  sub_100012DE4(&qword_1000EC3A0, (void (*)(uint64_t))&type metadata accessor for RelayGroupMutationMessageUnpacker);
  sub_1000B8A20();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  sub_1000BAEF0();
  sub_100012F28();
  sub_1000B8A20();
  sub_1000BB000();
  sub_100012F7C();
  sub_1000B8A20();
  sub_1000BAE80();
  sub_100012FD0();
  sub_1000B8A30();
  sub_1000BAB50();
  sub_100013024();
  sub_1000B8A50();
  sub_1000BA8C0();
  sub_100013078();
  sub_1000B8A50();
  sub_1000B8AD0();
  sub_1000130CC();
  sub_1000B8A50();
  sub_1000B9A60();
  sub_100013120();
  sub_1000B8A50();
  sub_1000B9280();
  sub_100013174();
  sub_1000B8A50();
  sub_1000BA830();
  sub_1000131C8();
  sub_1000B8A70();
  strcpy((char *)v24, "maps.apple.com");
  HIBYTE(v24[1]) = -18;
  v24[2] = 0x6F6F672E7370616DLL;
  v24[3] = 0xEF6D6F632E656C67;
  v24[4] = 27756;
  v24[5] = 0xE200000000000000;
  v24[6] = 7105651;
  v24[7] = 0xE300000000000000;
  v24[8] = 113;
  v24[9] = 0xE100000000000000;
  v24[10] = 0xD000000000000013;
  v24[11] = 0x80000001000C9070;
  sub_1000BAAF0();
  sub_10001321C();
  sub_1000B8A20();
  sub_1000B93F0();
  sub_100013270();
  sub_1000B8A70();
  sub_1000BA650();
  sub_1000132C4();
  sub_1000B8A50();
  sub_1000B9D40();
  sub_100013318();
  sub_1000B8A20();
  sub_1000B8EB0();
  sub_10001336C();
  sub_1000B8A50();
  sub_1000B90A0();
  sub_1000133C0();
  sub_1000B8A50();
  sub_1000B9220();
  sub_100013414();
  sub_1000B8A50();
  v24[0] = 0xD000000000000022;
  v24[1] = 0x80000001000C9090;
  sub_1000B9EC0();
  sub_100013468();
  sub_1000B8A60();
  sub_1000BA780();
  sub_1000134BC();
  sub_1000B8A20();
  sub_1000BB680();
  sub_100013510();
  sub_1000B8A30();
  sub_1000BA020();
  sub_100013564();
  sub_1000B8A20();
  sub_1000BAA00();
  sub_1000135B8();
  sub_1000B8A20();
  sub_1000BAFA0();
  sub_10001360C();
  sub_1000B8A20();
  sub_1000BAE10();
  sub_100013660();
  sub_1000B8A20();
  sub_1000BAB20();
  sub_1000136B4();
  sub_1000B8A20();
  uint64_t v17 = enum case for SandboxID.blastdoor(_:);
  uint64_t v18 = sub_1000BB750();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = (uint64_t)v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v23, v17, v18);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v20, 0, 1, v18);
  sub_1000B8A00();
  sub_100013708(v20);
  return 0;
}

uint64_t sub_10001295C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_1000129A0()
{
  unint64_t result = qword_1000EC310;
  if (!qword_1000EC310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC310);
  }
  return result;
}

unint64_t sub_1000129F4()
{
  unint64_t result = qword_1000EC318;
  if (!qword_1000EC318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC318);
  }
  return result;
}

unint64_t sub_100012A48()
{
  unint64_t result = qword_1000EC320;
  if (!qword_1000EC320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC320);
  }
  return result;
}

unint64_t sub_100012A9C()
{
  unint64_t result = qword_1000EC328;
  if (!qword_1000EC328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC328);
  }
  return result;
}

unint64_t sub_100012AF0()
{
  unint64_t result = qword_1000EC330;
  if (!qword_1000EC330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC330);
  }
  return result;
}

unint64_t sub_100012B44()
{
  unint64_t result = qword_1000EC338;
  if (!qword_1000EC338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC338);
  }
  return result;
}

unint64_t sub_100012B98()
{
  unint64_t result = qword_1000EC340;
  if (!qword_1000EC340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC340);
  }
  return result;
}

unint64_t sub_100012BEC()
{
  unint64_t result = qword_1000EC348;
  if (!qword_1000EC348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC348);
  }
  return result;
}

unint64_t sub_100012C40()
{
  unint64_t result = qword_1000EC350;
  if (!qword_1000EC350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC350);
  }
  return result;
}

unint64_t sub_100012C94()
{
  unint64_t result = qword_1000EC358;
  if (!qword_1000EC358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC358);
  }
  return result;
}

unint64_t sub_100012CE8()
{
  unint64_t result = qword_1000EC360;
  if (!qword_1000EC360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC360);
  }
  return result;
}

unint64_t sub_100012D3C()
{
  unint64_t result = qword_1000EC368;
  if (!qword_1000EC368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC368);
  }
  return result;
}

unint64_t sub_100012D90()
{
  unint64_t result = qword_1000EC370;
  if (!qword_1000EC370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC370);
  }
  return result;
}

uint64_t sub_100012DE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100012E2C()
{
  unint64_t result = qword_1000EC388;
  if (!qword_1000EC388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC388);
  }
  return result;
}

unint64_t sub_100012E80()
{
  unint64_t result = qword_1000EC390;
  if (!qword_1000EC390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC390);
  }
  return result;
}

unint64_t sub_100012ED4()
{
  unint64_t result = qword_1000EC398;
  if (!qword_1000EC398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC398);
  }
  return result;
}

unint64_t sub_100012F28()
{
  unint64_t result = qword_1000EC3A8;
  if (!qword_1000EC3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC3A8);
  }
  return result;
}

unint64_t sub_100012F7C()
{
  unint64_t result = qword_1000EC3B0;
  if (!qword_1000EC3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC3B0);
  }
  return result;
}

unint64_t sub_100012FD0()
{
  unint64_t result = qword_1000EC3B8;
  if (!qword_1000EC3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC3B8);
  }
  return result;
}

unint64_t sub_100013024()
{
  unint64_t result = qword_1000EC3C0;
  if (!qword_1000EC3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC3C0);
  }
  return result;
}

unint64_t sub_100013078()
{
  unint64_t result = qword_1000EC3C8;
  if (!qword_1000EC3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC3C8);
  }
  return result;
}

unint64_t sub_1000130CC()
{
  unint64_t result = qword_1000EC3D0;
  if (!qword_1000EC3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC3D0);
  }
  return result;
}

unint64_t sub_100013120()
{
  unint64_t result = qword_1000EC3D8;
  if (!qword_1000EC3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC3D8);
  }
  return result;
}

unint64_t sub_100013174()
{
  unint64_t result = qword_1000EC3E0;
  if (!qword_1000EC3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC3E0);
  }
  return result;
}

unint64_t sub_1000131C8()
{
  unint64_t result = qword_1000EC3E8;
  if (!qword_1000EC3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC3E8);
  }
  return result;
}

unint64_t sub_10001321C()
{
  unint64_t result = qword_1000EC3F0;
  if (!qword_1000EC3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC3F0);
  }
  return result;
}

unint64_t sub_100013270()
{
  unint64_t result = qword_1000EC3F8;
  if (!qword_1000EC3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC3F8);
  }
  return result;
}

unint64_t sub_1000132C4()
{
  unint64_t result = qword_1000EC400;
  if (!qword_1000EC400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC400);
  }
  return result;
}

unint64_t sub_100013318()
{
  unint64_t result = qword_1000EC408;
  if (!qword_1000EC408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC408);
  }
  return result;
}

unint64_t sub_10001336C()
{
  unint64_t result = qword_1000EC410;
  if (!qword_1000EC410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC410);
  }
  return result;
}

unint64_t sub_1000133C0()
{
  unint64_t result = qword_1000EC418;
  if (!qword_1000EC418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC418);
  }
  return result;
}

unint64_t sub_100013414()
{
  unint64_t result = qword_1000EC420;
  if (!qword_1000EC420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC420);
  }
  return result;
}

unint64_t sub_100013468()
{
  unint64_t result = qword_1000EC428;
  if (!qword_1000EC428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC428);
  }
  return result;
}

unint64_t sub_1000134BC()
{
  unint64_t result = qword_1000EC430;
  if (!qword_1000EC430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC430);
  }
  return result;
}

unint64_t sub_100013510()
{
  unint64_t result = qword_1000EC438;
  if (!qword_1000EC438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC438);
  }
  return result;
}

unint64_t sub_100013564()
{
  unint64_t result = qword_1000EC440;
  if (!qword_1000EC440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC440);
  }
  return result;
}

unint64_t sub_1000135B8()
{
  unint64_t result = qword_1000EC448;
  if (!qword_1000EC448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC448);
  }
  return result;
}

unint64_t sub_10001360C()
{
  unint64_t result = qword_1000EC450;
  if (!qword_1000EC450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC450);
  }
  return result;
}

unint64_t sub_100013660()
{
  unint64_t result = qword_1000EC458;
  if (!qword_1000EC458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC458);
  }
  return result;
}

unint64_t sub_1000136B4()
{
  unint64_t result = qword_1000EC460;
  if (!qword_1000EC460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC460);
  }
  return result;
}

uint64_t sub_100013708(uint64_t a1)
{
  uint64_t v2 = sub_10001295C(&qword_1000EC308);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t variable initialization expression of MessageEditedPartDictionary.xhtmlBody()
{
  return 0;
}

__n128 initializeWithTake for CollaborationNoticeActionDictionary(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void sub_1000137AC(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1000137B8(uint64_t a1, uint64_t a2)
{
  return sub_1000138B0(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_1000137D0()
{
  sub_1000BB900();
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100013824()
{
  sub_1000BB900();
  sub_1000BC230();
  sub_1000BB990();
  Swift::Int v0 = sub_1000BC250();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100013898(uint64_t a1, uint64_t a2)
{
  return sub_1000138B0(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_1000138B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1000BB900();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1000138F4(uint64_t a1, id *a2)
{
  uint64_t result = sub_1000BB8E0();
  *a2 = 0;
  return result;
}

uint64_t sub_10001396C(uint64_t a1, id *a2)
{
  char v3 = sub_1000BB8F0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1000139EC@<X0>(void *a1@<X8>)
{
  sub_1000BB900();
  NSString v2 = sub_1000BB8D0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100013A30()
{
  uint64_t v0 = sub_1000BB900();
  uint64_t v2 = v1;
  if (v0 == sub_1000BB900() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1000BC1A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void *sub_100013ABC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_100013ACC()
{
  return sub_1000B8450();
}

uint64_t sub_100013B18()
{
  return sub_1000B8440();
}

Swift::Int sub_100013B70()
{
  return sub_1000BC250();
}

uint64_t sub_100013BD8@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_1000BB8D0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100013C20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000BB900();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100013C4C()
{
  swift_getWitnessTable();

  return sub_1000B8430();
}

uint64_t sub_100013CB8(uint64_t a1)
{
  uint64_t v2 = sub_100012DE4(&qword_1000EC490, type metadata accessor for Key);
  uint64_t v3 = sub_100012DE4(&qword_1000EC498, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100013D74()
{
  return sub_100012DE4(&qword_1000EC478, type metadata accessor for Key);
}

uint64_t sub_100013DBC()
{
  return sub_100012DE4(&qword_1000EC480, type metadata accessor for Key);
}

uint64_t sub_100013E04()
{
  return sub_100012DE4(&qword_1000EC488, type metadata accessor for Key);
}

void type metadata accessor for PFPosterMediaType(uint64_t a1)
{
}

__n128 sub_100013E60(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100013E6C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100013E8C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for BDOrderPreviewMetadataImageKind(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for GroupContextDictionary(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithTake for EmergencySOSChatSessionCloseDictionary.EufoDictionary(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_100013F28(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100013F48(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
}

uint64_t sub_100013F94(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100013FB4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

__n128 sub_100013FF0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_100014004(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100014024(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
}

void type metadata accessor for CGImage(uint64_t a1)
{
}

void type metadata accessor for CFNumber(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for CGImageSource(uint64_t a1)
{
}

uint64_t sub_1000140C8()
{
  return sub_100012DE4(&qword_1000EC4F8, type metadata accessor for CFString);
}

uint64_t sub_100014110()
{
  return sub_100012DE4(&qword_1000EC500, type metadata accessor for CFString);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
}

void sub_100014180(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

ValueMetadata *type metadata accessor for PreviewAudioUnpacker()
{
  return &type metadata for PreviewAudioUnpacker;
}

unint64_t sub_1000141EC()
{
  unint64_t result = qword_1000EC518;
  if (!qword_1000EC518)
  {
    sub_1000B9220();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC518);
  }
  return result;
}

uint64_t sub_100014244()
{
  return 1;
}

Swift::Int sub_10001424C()
{
  return sub_1000BC250();
}

void sub_100014290()
{
}

Swift::Int sub_1000142B8()
{
  return sub_1000BC250();
}

void sub_100014308()
{
  uint64_t v0 = sub_1000B8240();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  char v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000BB3E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BB3A0();
  sub_1000BB3D0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1000B81F0(v8);
  Class v10 = v9;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v11 = audioMetadataForFileURL(v10);

  if (v11)
  {
    uint64_t v12 = [(AudioMetadata *)v11 powerLevels];
    if (v12)
    {
      uint64_t v13 = v12;
      sub_100014864();
      unint64_t v14 = sub_1000BBA50();

      Swift::OpaquePointer v15 = sub_100014558(v14);
      swift_bridgeObjectRelease();
      if (v15)
      {
        [(AudioMetadata *)v11 duration];
        sub_1000B9210();

        return;
      }
    }
  }
  sub_100014810();
  swift_allocError();
  swift_willThrow();
}

void *sub_100014558(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1000BBF40();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_10007F7D8(0, v3 & ~(v3 >> 63), 0);
  uint64_t v4 = &_swiftEmptyArrayStorage;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000BBF40();
    swift_bridgeObjectRelease();
    if (!v6) {
      return v4;
    }
  }
  else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return v4;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_1000BBEF0();
    sub_1000BBB20();
    swift_unknownObjectRelease();
  }
  else
  {
    id v7 = *(id *)(a1 + 32);
    sub_1000BBB20();
  }
  swift_release();
  return 0;
}

uint64_t sub_100014788()
{
  return sub_1000BB380();
}

void sub_1000147F4()
{
}

unint64_t sub_100014810()
{
  unint64_t result = qword_1000EC520;
  if (!qword_1000EC520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC520);
  }
  return result;
}

unint64_t sub_100014864()
{
  unint64_t result = qword_1000EC528;
  if (!qword_1000EC528)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000EC528);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PreviewAudioUnpacker.PreviewAudioUnpackerError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for PreviewAudioUnpacker.PreviewAudioUnpackerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100014994);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000149BC()
{
  return 0;
}

ValueMetadata *type metadata accessor for PreviewAudioUnpacker.PreviewAudioUnpackerError()
{
  return &type metadata for PreviewAudioUnpacker.PreviewAudioUnpackerError;
}

unint64_t sub_1000149DC()
{
  unint64_t result = qword_1000EC530;
  if (!qword_1000EC530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC530);
  }
  return result;
}

uint64_t GroupContextDictionary.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001295C(&qword_1000EC538);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014C68(a1, a1[3]);
  sub_100014CAC();
  sub_1000BC280();
  v11[0] = 0;
  sub_1000BC0E0();
  if (!v2)
  {
    v11[0] = 1;
    sub_1000BC0E0();
    v11[0] = 2;
    sub_1000BC0A0();
    v11[0] = 3;
    sub_1000BC0A0();
    sub_100014D00(v3, (uint64_t)v12);
    sub_100014D00((uint64_t)v12, (uint64_t)v11);
    v10[15] = 4;
    sub_10001295C(&qword_1000EC550);
    sub_100015CA4(&qword_1000EC558);
    sub_1000BC0F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void *sub_100014C68(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_100014CAC()
{
  unint64_t result = qword_1000EC540;
  if (!qword_1000EC540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC540);
  }
  return result;
}

uint64_t sub_100014D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EC548);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100014D68(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

__n128 GroupContextDictionary.init(from:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100015384(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(unsigned char *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_100014E04(void *a1)
{
  return GroupContextDictionary.encode(to:)(a1);
}

MessagesBlastDoorService::GroupContextDictionary::CodingKeys_optional __swiftcall GroupContextDictionary.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  object = stringValue._object;
  v5._countAndFlagsBits = stringValue._countAndFlagsBits;
  v2._rawValue = &off_1000E0B00;
  v5._object = object;
  unint64_t v3 = sub_1000BBFA0(v2, v5);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return (MessagesBlastDoorService::GroupContextDictionary::CodingKeys_optional)5;
  }
  else {
    return (MessagesBlastDoorService::GroupContextDictionary::CodingKeys_optional)v3;
  }
}

MessagesBlastDoorService::BalloonPluginPayloadAttachment::CodingKeys_optional __swiftcall BalloonPluginPayloadAttachment.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  return (MessagesBlastDoorService::BalloonPluginPayloadAttachment::CodingKeys_optional)5;
}

uint64_t BalloonPluginPayloadAttachment.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t GroupContextDictionary.CodingKeys.rawValue.getter(char a1)
{
  uint64_t result = 30320;
  switch(a1)
  {
    case 1:
      uint64_t result = 30311;
      break;
    case 2:
      uint64_t result = 110;
      break;
    case 3:
      uint64_t result = 6580583;
      break;
    case 4:
      uint64_t result = 112;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t GroupContextDictionary.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 30320;
  switch(a1)
  {
    case 1:
      uint64_t result = 30311;
      break;
    case 2:
      uint64_t result = 110;
      break;
    case 3:
      uint64_t result = 6580583;
      break;
    case 4:
      uint64_t result = 112;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100014F94(char *a1, char *a2)
{
  return sub_10004E960(*a1, *a2);
}

Swift::Int sub_100014FA0()
{
  return sub_1000BC250();
}

uint64_t sub_10001505C()
{
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100015100()
{
  return sub_1000BC250();
}

MessagesBlastDoorService::GroupContextDictionary::CodingKeys_optional sub_1000151B8@<W0>(Swift::String *a1@<X0>, MessagesBlastDoorService::GroupContextDictionary::CodingKeys_optional *a2@<X8>)
{
  result.value = GroupContextDictionary.CodingKeys.init(stringValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void sub_1000151E8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 30320;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 30311;
      goto LABEL_3;
    case 2:
      *a1 = 110;
      a1[1] = 0xE100000000000000;
      break;
    case 3:
      *a1 = 6580583;
      a1[1] = 0xE300000000000000;
      break;
    case 4:
      *a1 = 112;
      a1[1] = 0xE100000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE200000000000000;
      break;
  }
}

uint64_t sub_100015268()
{
  uint64_t result = 30320;
  switch(*v0)
  {
    case 1:
      uint64_t result = 30311;
      break;
    case 2:
      uint64_t result = 110;
      break;
    case 3:
      uint64_t result = 6580583;
      break;
    case 4:
      uint64_t result = 112;
      break;
    default:
      return result;
  }
  return result;
}

MessagesBlastDoorService::GroupContextDictionary::CodingKeys_optional sub_1000152D8@<W0>(uint64_t a1@<X0>, MessagesBlastDoorService::GroupContextDictionary::CodingKeys_optional *a2@<X8>)
{
  result.value = GroupContextDictionary.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->value = result.value;
  return result;
}

void sub_100015300(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_10001530C(uint64_t a1)
{
  unint64_t v2 = sub_100014CAC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100015348(uint64_t a1)
{
  unint64_t v2 = sub_100014CAC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100015384@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000EC578);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_100014CAC();
  sub_1000BC270();
  if (v2) {
    return sub_100015C54((uint64_t)a1);
  }
  char v36 = 0;
  uint64_t v9 = sub_1000BBFF0();
  char v11 = v10;
  char v35 = 1;
  uint64_t v12 = sub_1000BBFF0();
  int v29 = v13;
  uint64_t v30 = v12;
  char v34 = 2;
  uint64_t v14 = sub_1000BBFB0();
  uint64_t v16 = v15;
  uint64_t v27 = v14;
  char v33 = 3;
  swift_bridgeObjectRetain();
  uint64_t v28 = v16;
  v25[0] = sub_1000BBFB0();
  uint64_t v18 = v17;
  v25[1] = sub_10001295C(&qword_1000EC550);
  char v32 = 4;
  sub_100015CA4(&qword_1000EC580);
  uint64_t v26 = v18;
  swift_bridgeObjectRetain();
  sub_1000BC000();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v19 = v31;
  swift_bridgeObjectRetain();
  sub_100015C54((uint64_t)a1);
  uint64_t v20 = v28;
  swift_bridgeObjectRelease();
  uint64_t v21 = v26;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v23 = v25[0];
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = v23;
  uint64_t v24 = v27;
  *(void *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v24;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v9;
  *(unsigned char *)(a2 + 48) = v11 & 1;
  *(void *)(a2 + 56) = v30;
  *(unsigned char *)(a2 + 64) = v29 & 1;
  return result;
}

unint64_t sub_1000156D4()
{
  unint64_t result = qword_1000EC560;
  if (!qword_1000EC560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC560);
  }
  return result;
}

unint64_t sub_10001572C()
{
  unint64_t result = qword_1000EC568;
  if (!qword_1000EC568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC568);
  }
  return result;
}

unint64_t sub_100015784()
{
  unint64_t result = qword_1000EC570;
  if (!qword_1000EC570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC570);
  }
  return result;
}

uint64_t destroy for GroupContextDictionary()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupContextDictionary(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GroupContextDictionary(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  return a1;
}

__n128 initializeWithTake for GroupContextDictionary(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for GroupContextDictionary(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupContextDictionary(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 65)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupContextDictionary(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupContextDictionary()
{
  return &type metadata for GroupContextDictionary;
}

unsigned char *initializeBufferWithCopyOfBuffer for GroupContextDictionary.CodingKeys(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for GroupContextDictionary.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GroupContextDictionary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100015C0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_100015C34(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100015C3C(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for GroupContextDictionary.CodingKeys()
{
  return &type metadata for GroupContextDictionary.CodingKeys;
}

uint64_t sub_100015C54(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100015CA4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014D68(&qword_1000EC550);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100015D08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_1000BB130();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v28 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001295C(&qword_1000EC5E0);
  __chkstk_darwin(v6 - 8);
  int v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000B8240();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v29 = v9;
  uint64_t v30 = v10;
  uint64_t v11 = __chkstk_darwin(v9);
  int v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v27 - v14;
  sub_10001836C((uint64_t)a1, (uint64_t)v37, &qword_1000EC5E8);
  sub_10001836C((uint64_t)v37, (uint64_t)v38, &qword_1000EC5E8);
  if (!v38[1]) {
    goto LABEL_6;
  }
  v27[6] = v38[0];
  sub_10001836C((uint64_t)(a1 + 2), (uint64_t)v36, &qword_1000EC5F0);
  sub_10001836C((uint64_t)v36, (uint64_t)v39, &qword_1000EC5F0);
  if (v39[1] >> 60 == 15) {
    goto LABEL_6;
  }
  v27[4] = v39[0];
  sub_10001836C((uint64_t)(a1 + 4), (uint64_t)v35, &qword_1000EC5E8);
  sub_10001836C((uint64_t)v35, (uint64_t)&v40, &qword_1000EC5E8);
  v27[5] = v41;
  if (!v41
    || (v27[3] = v40,
        sub_10001836C((uint64_t)(a1 + 6), (uint64_t)v34, &qword_1000EC5F0),
        sub_10001836C((uint64_t)v34, (uint64_t)&v42, &qword_1000EC5F0),
        v27[2] = v43,
        v43 >> 60 == 15)
    || (v27[1] = v42,
        sub_10001836C((uint64_t)(a1 + 8), (uint64_t)v33, &qword_1000EC5F8),
        sub_10001836C((uint64_t)v33, (uint64_t)&v44, &qword_1000EC5F8),
        (v45 & 1) != 0))
  {
LABEL_6:
    sub_1000BBBB0();
    sub_100018190();
    uint64_t v16 = (void *)sub_1000BBD40();
    sub_1000B8780();
    sub_100018304(a1);

    uint64_t v17 = 1;
    uint64_t v18 = v31;
  }
  else
  {
    v27[0] = v44;
    sub_1000183D0((uint64_t)v37);
    sub_1000183FC((uint64_t)v36);
    sub_1000183D0((uint64_t)v35);
    sub_1000183FC((uint64_t)v34);
    sub_1000B8220();
    sub_10001842C((uint64_t)v35);
    uint64_t v20 = v29;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v8, 1, v29) == 1)
    {
      sub_10001842C((uint64_t)v37);
      sub_1000184DC((uint64_t)v8, &qword_1000EC5E0);
      uint64_t v21 = sub_1000BBF10();
      swift_allocError();
      uint64_t v23 = v22;
      sub_10001295C(&qword_1000EC600);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1000BF8A0;
      *(void *)(v24 + 56) = &type metadata for BalloonPluginPayloadAttachment.CodingKeys;
      *(void *)(v24 + 64) = sub_100018458();
      *(unsigned char *)(v24 + 32) = 2;
      sub_1000BBF00();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, enum case for DecodingError.dataCorrupted(_:), v21);
      swift_willThrow();
      sub_100018304(a1);
      sub_1000184AC((uint64_t)v34);
      return sub_1000184AC((uint64_t)v36);
    }
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v15, v8, v20);
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v13, v15, v20);
    if ((v27[0] & 0x80000000) != 0)
    {
      uint64_t result = sub_1000BBF30();
      __break(1u);
      return result;
    }
    uint64_t v25 = v28;
    uint64_t v26 = v32;
    sub_1000BB120();
    if (v26)
    {
      sub_100018304(a1);
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v15, v29);
    }
    sub_100018304(a1);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v29);
    uint64_t v18 = v31;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v31, v25, v3);
    uint64_t v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v18, v17, 1, v3);
}

uint64_t sub_10001633C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  sub_100017E68(a3, (uint64_t)v112);
  uint64_t v104 = v112[0];
  unint64_t v105 = v112[1];
  unint64_t v92 = v112[3];
  uint64_t v93 = v112[2];
  uint64_t v96 = v112[6];
  uint64_t v94 = v112[5];
  unint64_t v95 = v112[7];
  uint64_t v9 = sub_1000B9430();
  uint64_t v83 = *(void *)(v9 - 8);
  uint64_t v84 = v9;
  __chkstk_darwin(v9);
  v82 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000BA950();
  __chkstk_darwin(v11 - 8);
  v85 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10001295C(&qword_1000EC5A8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000BB130();
  uint64_t v87 = *(void *)(v16 - 8);
  uint64_t v88 = v16;
  __chkstk_darwin(v16);
  v86 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000BAE40();
  uint64_t v89 = *(void *)(v18 - 8);
  uint64_t v90 = v18;
  __chkstk_darwin(v18);
  v97 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10001295C(&qword_1000EC590);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v102 = (uint64_t)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v101 = (uint64_t)&v80 - v23;
  uint64_t v106 = sub_1000BAE80();
  uint64_t v117 = *(void *)(v106 - 8);
  uint64_t v24 = __chkstk_darwin(v106);
  uint64_t v26 = (char *)&v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  v100 = (char *)&v80 - v28;
  __chkstk_darwin(v27);
  v91 = (char *)&v80 - v29;
  uint64_t v103 = a1;
  v111[0] = a1;
  v111[1] = a2;
  *(void *)&long long v108 = 58;
  *((void *)&v108 + 1) = 0xE100000000000000;
  sub_1000180E0();
  uint64_t v30 = (void *)sub_1000BBE70();
  if (v30[2])
  {
    uint64_t v99 = a2;
    v81 = a4;
    uint64_t v107 = v4;
    uint64_t v31 = v30[4];
    uint64_t v32 = v30[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v98 = a3;
    sub_100017E68(a3, (uint64_t)v113);
    unint64_t v33 = *(unsigned int *)&v114[16] | (unint64_t)((uint64_t)v114[20] << 32);
    if ((v33 & 0x8000000000000000) != 0)
    {
      v114[20] = BYTE4(v33) & 0x7F;
      v115[2] = v113[2];
      v116[0] = *(_OWORD *)v114;
      v115[0] = v113[0];
      v115[1] = v113[1];
      *(void *)((char *)v116 + 13) = *(void *)&v114[13];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      unint64_t v55 = v92;
      uint64_t v54 = v93;
      sub_100017FA4(v93, v92);
      swift_bridgeObjectRetain();
      unint64_t v57 = v95;
      uint64_t v56 = v96;
      sub_100017FA4(v96, v95);
      swift_bridgeObjectRetain();
      sub_100017FA4(v54, v55);
      swift_bridgeObjectRetain();
      sub_100017FA4(v56, v57);
      uint64_t v58 = v107;
      sub_100015D08(v115, (uint64_t)v15);
      if (v58)
      {
        uint64_t v59 = v98;
        sub_100018134(v98, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FD4);
        return sub_100018134(v59, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FD4);
      }
      uint64_t v63 = v87;
      uint64_t v62 = v88;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v15, 1, v88) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v86, v15, v62);
        sub_1000BBBB0();
        sub_100018190();
        v66 = (void *)sub_1000BBD40();
        sub_1000B8780();

        sub_1000BA900();
        double v75 = v82;
        v76 = v86;
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v82, v86, v62);
        (*(void (**)(char *, void, uint64_t))(v83 + 104))(v75, enum case for BalloonPlugin.Payload.combinedPluginAttachmentInfo(_:), v84);
        sub_1000BAE60();
        a4 = v81;
        uint64_t v107 = 0;
        uint64_t v77 = v98;
        sub_100018134(v98, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FD4);
        sub_100018134(v77, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FD4);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v76, v62);
        uint64_t v65 = v117;
        v78 = *(void (**)(char *, char *, uint64_t))(v117 + 32);
        v79 = v91;
        uint64_t v50 = v106;
        v78(v91, v26, v106);
LABEL_28:
        v78(a4, v79, v50);
        uint64_t v37 = 0;
        return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56))(a4, v37, 1, v50);
      }
      uint64_t v64 = v98;
      sub_100018134(v98, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FD4);
      sub_100018134(v64, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FD4);
      sub_1000184DC((uint64_t)v15, &qword_1000EC5A8);
      uint64_t v37 = 1;
    }
    else
    {
      sub_100017F4C(v104, v105);
      if (qword_1000EC2D8 != -1) {
        swift_once();
      }
      uint64_t v34 = qword_1000F9390;
      if (*(void *)(qword_1000F9390 + 16) && (unint64_t v35 = sub_10008BB58(v31, v32), (v36 & 1) != 0))
      {
        sub_1000181E8(*(void *)(v34 + 56) + 40 * v35, (uint64_t)&v108);
      }
      else
      {
        uint64_t v110 = 0;
        long long v108 = 0u;
        long long v109 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v109 + 1))
      {
        sub_1000181D0(&v108, (uint64_t)v111);
        sub_1000BBBB0();
        sub_100018190();
        v38 = (void *)sub_1000BBD40();
        sub_10001295C(&qword_1000EC5C8);
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_1000BF8A0;
        sub_1000181E8((uint64_t)v111, (uint64_t)&v108);
        sub_10001295C(&qword_1000EC5D0);
        uint64_t v40 = sub_1000BB200();
        uint64_t v42 = v41;
        sub_1000184DC((uint64_t)&v108, &qword_1000EC5C0);
        *(void *)(v39 + 56) = &type metadata for String;
        *(void *)(v39 + 64) = sub_10001824C();
        *(void *)(v39 + 32) = v40;
        *(void *)(v39 + 40) = v42;
        sub_1000B8780();

        swift_bridgeObjectRelease();
        uint64_t v43 = sub_1000B82C0();
        unint64_t v45 = v44;
        uint64_t v46 = v99;
        swift_bridgeObjectRetain();
        double v47 = v97;
        uint64_t v48 = v107;
        sub_1000BAE30();
        unint64_t v105 = v45;
        if (v48)
        {
          swift_errorRelease();
          uint64_t v107 = 0;
          uint64_t v49 = 1;
          uint64_t v50 = v106;
          uint64_t v51 = v98;
          uint64_t v52 = v101;
          uint64_t v53 = v102;
        }
        else
        {
          uint64_t v52 = v101;
          sub_1000645EC(v43, v45, v101);
          uint64_t v50 = v106;
          uint64_t v53 = v102;
          uint64_t v107 = 0;
          (*(void (**)(char *, uint64_t))(v89 + 8))(v47, v90);
          uint64_t v49 = 0;
          uint64_t v51 = v98;
        }
        uint64_t v65 = v117;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v52, v49, 1, v50);
        sub_1000182A0(v52, v53, &qword_1000EC590);
        sub_1000181E8((uint64_t)v111, (uint64_t)&v108);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v53, 1, v50) == 1)
        {
          uint64_t v67 = v46;
          uint64_t v68 = *((void *)&v109 + 1);
          uint64_t v69 = v110;
          sub_100014C68(&v108, *((uint64_t *)&v109 + 1));
          uint64_t v70 = v43;
          uint64_t v71 = v43;
          unint64_t v72 = v105;
          uint64_t v73 = v107;
          (*(void (**)(uint64_t, unint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8))(v70, v105, &_swiftEmptyArrayStorage, v103, v67, v68, v69);
          sub_100018134(v51, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FD4);
          sub_100018074(v71, v72);
          sub_100018134(v51, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FD4);
          swift_bridgeObjectRelease();
          sub_1000184DC(v101, &qword_1000EC590);
          sub_100015C54((uint64_t)v111);
          sub_1000184DC(v102, &qword_1000EC590);
          if (v73) {
            return sub_100015C54((uint64_t)&v108);
          }
          uint64_t v107 = 0;
          uint64_t v65 = v117;
          UInt32 v74 = v100;
        }
        else
        {
          sub_100018134(v51, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FD4);
          sub_100018074(v43, v105);
          sub_100018134(v51, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FD4);
          swift_bridgeObjectRelease();
          sub_1000184DC(v52, &qword_1000EC590);
          sub_100015C54((uint64_t)v111);
          UInt32 v74 = v100;
          (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v100, v53, v50);
        }
        sub_100015C54((uint64_t)&v108);
        v78 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
        v79 = v91;
        v78(v91, v74, v50);
        a4 = v81;
        goto LABEL_28;
      }
      uint64_t v61 = v98;
      sub_100018134(v98, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FD4);
      sub_100018134(v61, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FD4);
      swift_bridgeObjectRelease();
      sub_1000184DC((uint64_t)&v108, &qword_1000EC5C0);
      uint64_t v37 = 1;
    }
    a4 = v81;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100018134(a3, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FD4);
    swift_bridgeObjectRelease();
    uint64_t v37 = 1;
  }
  uint64_t v50 = v106;
  uint64_t v65 = v117;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56))(a4, v37, 1, v50);
}

uint64_t sub_100016FEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MessageDictionary();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v35 - v8;
  sub_100018538(v2, (uint64_t)&v35 - v8);
  uint64_t v10 = (uint64_t *)&v9[*(int *)(v4 + 108)];
  uint64_t v12 = *v10;
  unint64_t v11 = v10[1];
  sub_100018538((uint64_t)v9, (uint64_t)v7);
  if (v11 >> 60 == 15)
  {
    uint64_t v13 = &v7[*(int *)(v4 + 112)];
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *((void *)v13 + 1);
    uint64_t v16 = *((void *)v13 + 2);
    unint64_t v17 = *((void *)v13 + 3);
    uint64_t v18 = *((void *)v13 + 4);
    uint64_t v19 = *((void *)v13 + 5);
    unint64_t v20 = *((unsigned int *)v13 + 16) | ((unint64_t)v13[68] << 32);
    if (v15 == 1) {
      uint64_t v21 = 0;
    }
    else {
      uint64_t v21 = *(void *)v13;
    }
    if (v15 == 1) {
      unint64_t v22 = 0;
    }
    else {
      unint64_t v22 = *((void *)v13 + 1);
    }
    if (v15 == 1) {
      uint64_t v23 = 0;
    }
    else {
      uint64_t v23 = *((void *)v13 + 2);
    }
    if (v15 == 1) {
      uint64_t v24 = 0;
    }
    else {
      uint64_t v24 = *((void *)v13 + 3);
    }
    uint64_t v37 = v24;
    uint64_t v38 = v23;
    if (v15 == 1) {
      uint64_t v25 = 0;
    }
    else {
      uint64_t v25 = v18;
    }
    uint64_t v26 = *((void *)v13 + 6);
    unint64_t v27 = *((void *)v13 + 7);
    if (v15 == 1) {
      uint64_t v28 = 0;
    }
    else {
      uint64_t v28 = v19;
    }
    uint64_t v35 = v28;
    uint64_t v36 = v25;
    if (v15 == 1) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = v26;
    }
    if (v15 == 1) {
      unint64_t v30 = 0;
    }
    else {
      unint64_t v30 = v27;
    }
    if (v15 == 1) {
      unint64_t v31 = 0xFE00000000;
    }
    else {
      unint64_t v31 = v20 & 0x1FFFFFFFFLL | 0xFFFFFF8000000000;
    }
    sub_10001859C(v14, v15, v16, v17, v18, v19, v26, v27);
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v29 = 0;
    unint64_t v30 = 0;
    unint64_t v31 = 0;
    uint64_t v21 = v12;
    unint64_t v22 = v11;
  }
  sub_100017FA4(v12, v11);
  sub_10001861C((uint64_t)v7);
  uint64_t result = sub_10001861C((uint64_t)v9);
  *(void *)a1 = v21;
  *(void *)(a1 + 8) = v22;
  uint64_t v33 = v37;
  *(void *)(a1 + 16) = v38;
  *(void *)(a1 + 24) = v33;
  uint64_t v34 = v35;
  *(void *)(a1 + 32) = v36;
  *(void *)(a1 + 40) = v34;
  *(void *)(a1 + 48) = v29;
  *(void *)(a1 + 56) = v30;
  *(unsigned char *)(a1 + 68) = BYTE4(v31);
  *(_DWORD *)(a1 + 64) = v31;
  return result;
}

uint64_t sub_1000171A8()
{
  uint64_t v1 = type metadata accessor for MessageDictionary();
  uint64_t v2 = v0 + *(int *)(v1 + 216);
  if (*(unsigned char *)(v2 + 8)) {
    return 0;
  }
  uint64_t v3 = v0 + *(int *)(v1 + 220);
  if (*(unsigned char *)(v3 + 8)) {
    return 0;
  }
  unint64_t v4 = *(void *)v2;
  unint64_t v5 = *(void *)v3;
  uint64_t v6 = v4 >= 0x7FFFFFFFFFFFFFFFLL ? 0x7FFFFFFFFFFFFFFFLL : v4;
  uint64_t result = sub_1000B8090();
  if (v6 == result) {
    return 0;
  }
  if (v5 >= 0x7FFFFFFFFFFFFFFFLL) {
    uint64_t v8 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v8 = v5;
  }
  if (!__OFADD__(v6, v8)) {
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_100017240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v27[8] = a4;
  uint64_t v28 = a5;
  v27[6] = a2;
  void v27[7] = a3;
  uint64_t v10 = sub_1000BA950();
  __chkstk_darwin(v10 - 8);
  uint64_t v29 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001295C(&qword_1000EC588);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10001295C(&qword_1000EC610);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000B9430();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000BA0B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v17, 1, 1, v22);
  uint64_t result = sub_1000BA290();
  if (!v7)
  {
    v27[4] = a6;
    v27[5] = a1;
    (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, enum case for BalloonPlugin.Payload.linkPresentation(_:), v18);
    sub_1000182A0(v28, (uint64_t)v14, &qword_1000EC588);
    uint64_t v24 = &_swiftEmptyArrayStorage;
    if (*v6) {
      uint64_t v24 = *v6;
    }
    uint64_t v28 = (uint64_t)v24;
    v27[3] = *(void **)((char *)v6 + *(int *)(type metadata accessor for MessageDictionary() + 208));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1000171A8();
    v27[1] = v26;
    v27[2] = v25;
    sub_1000BA900();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1000B9420();
  }
  return result;
}

uint64_t sub_1000175C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v52 = a3;
  uint64_t v54 = a2;
  uint64_t v53 = a1;
  uint64_t v7 = sub_1000BA950();
  __chkstk_darwin(v7 - 8);
  uint64_t v48 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001295C(&qword_1000EC588);
  __chkstk_darwin(v9 - 8);
  uint64_t v50 = (uint64_t)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000B9430();
  uint64_t v49 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10001295C(&qword_1000EC590);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000BAE80();
  uint64_t v51 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for MessageDictionary();
  uint64_t v21 = (uint64_t *)(v5 + *(int *)(v20 + 104));
  uint64_t v22 = v21[1];
  if (!v22)
  {
    uint64_t v28 = sub_1000B9450();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a4, 1, 1, v28);
  }
  uint64_t v23 = v20;
  uint64_t v46 = v13;
  uint64_t v47 = a4;
  uint64_t v24 = *v21;
  swift_bridgeObjectRetain();
  sub_100016FEC((uint64_t)v55);
  sub_10001836C((uint64_t)v55, (uint64_t)v56, &qword_1000EC598);
  if (v56[68] >> 1 <= 0x7EuLL)
  {
    sub_100017E68((uint64_t)v56, (uint64_t)v57);
    swift_bridgeObjectRetain();
    sub_100018134((uint64_t)v55, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017E90);
    uint64_t v30 = v58;
    sub_10001633C(v24, v22, (uint64_t)v57, v16);
    if (v30)
    {
      sub_100018134((uint64_t)v55, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FB8);
      return swift_bridgeObjectRelease();
    }
    uint64_t v45 = v24;
    uint64_t v31 = v51;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v16, 1, v17) == 1)
    {
      sub_100018134((uint64_t)v55, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FB8);
      swift_bridgeObjectRelease();
      sub_1000184DC((uint64_t)v16, &qword_1000EC590);
      uint64_t v32 = sub_1000B9450();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v47, 1, 1, v32);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v19, v16, v17);
      sub_1000BAE70();
      LODWORD(v58) = *(unsigned __int8 *)(v5 + 97);
      uint64_t v33 = sub_10009CE14();
      LODWORD(v49) = v58 & 1;
      unint64_t v44 = v33;
      sub_1000182A0(v52, v50, &qword_1000EC588);
      uint64_t v34 = &_swiftEmptyArrayStorage;
      if (*(void *)v5) {
        uint64_t v34 = *(void **)v5;
      }
      uint64_t v52 = (uint64_t)v34;
      uint64_t v43 = *(void *)(v5 + *(int *)(v23 + 208));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v58 = 0;
      uint64_t v42 = sub_1000171A8();
      uint64_t v41 = v35;
      v40[3] = v36 & 1;
      sub_1000BAE50();
      swift_bridgeObjectRetain();
      uint64_t v37 = v47;
      uint64_t v38 = v58;
      sub_1000B9420();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v19, v17);
      if (v38)
      {
        return sub_100018134((uint64_t)v55, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FB8);
      }
      else
      {
        sub_100018134((uint64_t)v55, (void (*)(void, void, void, void, void, void, void, void, unint64_t))sub_100017FB8);
        uint64_t v39 = sub_1000B9450();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v37, 0, 1, v39);
      }
    }
  }
  else
  {
    if (v24 == 0xD000000000000025 && v22 == 0x80000001000C90C0 || (sub_1000BC1A0() & 1) != 0)
    {
      uint64_t v25 = v47;
      uint64_t v26 = v58;
      sub_100017240(v24, v22, v53, v54, v52, v47);
      if (!v26)
      {
        uint64_t v27 = sub_1000B9450();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v25, 0, 1, v27);
      }
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
}

unint64_t sub_100017E10()
{
  unint64_t result = qword_1000EC5A0;
  if (!qword_1000EC5A0)
  {
    sub_1000BB6C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC5A0);
  }
  return result;
}

uint64_t sub_100017E68(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  long long v2 = *(_OWORD *)(a1 + 16);
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  *(void *)(a2 + 61) = *(void *)(a1 + 61);
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 16) = v2;
  return a2;
}

uint64_t sub_100017E90(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, unint64_t a9)
{
  if (((a9 >> 33) & 0x7F) != 0x7F) {
    return sub_100017EAC(result, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  return result;
}

uint64_t sub_100017EAC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  if ((a9 & 0x8000000000) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100017FA4(a3, a4);
    swift_bridgeObjectRetain();
    return sub_100017FA4(a7, a8);
  }
  else
  {
    return sub_100017F4C(a1, a2);
  }
}

uint64_t sub_100017F4C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_100017FA4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100017F4C(a1, a2);
  }
  return a1;
}

uint64_t sub_100017FB8(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, unint64_t a9)
{
  if (((a9 >> 33) & 0x7F) != 0x7F) {
    return sub_100017FD4(result, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  return result;
}

uint64_t sub_100017FD4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  if ((a9 & 0x8000000000) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1000180CC(a3, a4);
    swift_bridgeObjectRelease();
    return sub_1000180CC(a7, a8);
  }
  else
  {
    return sub_100018074(a1, a2);
  }
}

uint64_t sub_100018074(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1000180CC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100018074(a1, a2);
  }
  return a1;
}

unint64_t sub_1000180E0()
{
  unint64_t result = qword_1000EC5B0;
  if (!qword_1000EC5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC5B0);
  }
  return result;
}

uint64_t sub_100018134(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, unint64_t))
{
  return a1;
}

unint64_t sub_100018190()
{
  unint64_t result = qword_1000EC5B8;
  if (!qword_1000EC5B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000EC5B8);
  }
  return result;
}

uint64_t sub_1000181D0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1000181E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_10001824C()
{
  unint64_t result = qword_1000EC5D8;
  if (!qword_1000EC5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC5D8);
  }
  return result;
}

uint64_t sub_1000182A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10001295C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_100018304(void *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[6];
  unint64_t v5 = a1[7];
  swift_bridgeObjectRelease();
  sub_1000180CC(v2, v3);
  swift_bridgeObjectRelease();
  sub_1000180CC(v4, v5);
  return a1;
}

uint64_t sub_10001836C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10001295C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000183D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000183FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10001842C(uint64_t a1)
{
  return a1;
}

unint64_t sub_100018458()
{
  unint64_t result = qword_1000EC608;
  if (!qword_1000EC608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC608);
  }
  return result;
}

uint64_t sub_1000184AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000184DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10001295C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100018538(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageDictionary();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10001859C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    sub_100017FA4(a3, a4);
    swift_bridgeObjectRetain();
    sub_100017FA4(a7, a8);
  }
}

uint64_t sub_10001861C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageDictionary();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s26BalloonPluginPayloadSourceOwxx(uint64_t a1)
{
  return sub_100017FD4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned int *)(a1 + 64) | ((unint64_t)*(unsigned __int8 *)(a1 + 68) << 32));
}

uint64_t _s26BalloonPluginPayloadSourceOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  unint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(unsigned __int8 *)(a2 + 68);
  uint64_t v13 = *(unsigned int *)(a2 + 64);
  sub_100017EAC(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v13 | (v11 << 32));
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 68) = v11;
  *(_DWORD *)(a1 + 64) = v13;
  return a1;
}

uint64_t _s26BalloonPluginPayloadSourceOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  unint64_t v10 = *(void *)(a2 + 56);
  uint64_t v22 = *(unsigned __int8 *)(a2 + 68);
  uint64_t v11 = *(unsigned int *)(a2 + 64);
  sub_100017EAC(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11 | (v22 << 32));
  uint64_t v12 = *(void *)a1;
  unint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  unint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  unint64_t v19 = *(void *)(a1 + 56);
  unint64_t v20 = *(unsigned int *)(a1 + 64) | ((unint64_t)*(unsigned __int8 *)(a1 + 68) << 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(_DWORD *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 68) = v22;
  sub_100017FD4(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

__n128 initializeWithTake for BalloonPluginPayloadAttachment(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 61) = *(void *)(a2 + 61);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s26BalloonPluginPayloadSourceOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 68);
  int v4 = *(_DWORD *)(a2 + 64);
  uint64_t v5 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  unint64_t v12 = *(void *)(a1 + 56);
  unint64_t v13 = *(unsigned int *)(a1 + 64) | ((unint64_t)*(unsigned __int8 *)(a1 + 68) << 32);
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v15;
  *(_DWORD *)(a1 + 64) = v4;
  *(unsigned char *)(a1 + 68) = v3;
  sub_100017FD4(v5, v7, v6, v8, v9, v10, v11, v12, v13);
  return a1;
}

uint64_t _s26BalloonPluginPayloadSourceOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 69)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 68) >> 7) & 0xFFFFFF81 | (2 * ((*(unsigned __int8 *)(a1 + 68) >> 1) & 0x3F))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s26BalloonPluginPayloadSourceOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 68) = 0;
    *(_DWORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 69) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 69) = 0;
    }
    if (a2)
    {
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_DWORD *)(result + 64) = 0;
      *(unsigned char *)(result + 68) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1000189B0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 68) >> 7;
}

uint64_t sub_1000189BC(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 64);
  uint64_t result = a1 + 64;
  unint64_t v3 = v2 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32);
  *(_DWORD *)uint64_t result = v2;
  *(unsigned char *)(result + 4) = BYTE4(v3) & 0x7F;
  return result;
}

uint64_t sub_1000189D8(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 64);
  uint64_t result = a1 + 64;
  unint64_t v4 = (v3 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32)) & 0x1FFFFFFFFLL | (a2 << 39);
  *(_DWORD *)uint64_t result = v3;
  *(unsigned char *)(result + 4) = BYTE4(v4);
  return result;
}

ValueMetadata *_s26BalloonPluginPayloadSourceOMa()
{
  return &_s26BalloonPluginPayloadSourceON;
}

ValueMetadata *type metadata accessor for ScheduledMessageUpdateUnpacker()
{
  return &type metadata for ScheduledMessageUpdateUnpacker;
}

unint64_t sub_100018A1C(uint64_t a1)
{
  unint64_t result = sub_100012ED4();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100018A44()
{
  return sub_1000199B8(&qword_1000EC618, (void (*)(uint64_t))&type metadata accessor for ScheduledMessageUpdate);
}

uint64_t sub_100018A8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v84 = a1;
  sub_10001295C(&qword_1000EC628);
  ((void (*)(void))__chkstk_darwin)();
  v82 = (char *)&v73 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1000BBF10();
  uint64_t v2 = *(void *)(v86 - 8);
  uint64_t v3 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v83 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  v85 = (char *)&v73 - v6;
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v73 - v7;
  uint64_t v9 = sub_1000BACA0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000BB5D0();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v11 - 8);
  uint64_t v89 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000B86C0();
  uint64_t v88 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  long long v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000BB6C0();
  uint64_t v91 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v90 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000B86D0();
  if (v19 >> 60 == 15)
  {
    sub_100018190();
    unint64_t v20 = (void *)sub_1000BBDE0();
    sub_1000BBBE0();
    sub_1000B8770();

    sub_100019964();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    uint64_t v79 = v16;
    uint64_t v80 = v18;
    unint64_t v81 = v19;
    Class isa = sub_1000B82B0().super.isa;
    id v23 = [(objc_class *)isa _imOptionallyDecompressData];

    uint64_t v92 = sub_1000B82D0();
    unint64_t v25 = v24;

    unint64_t v26 = v25;
    switch(v25 >> 62)
    {
      case 1uLL:
        LODWORD(v27) = HIDWORD(v92) - v92;
        if (__OFSUB__(HIDWORD(v92), v92))
        {
          __break(1u);
LABEL_17:
          __break(1u);
          JUMPOUT(0x1000197D4);
        }
        uint64_t v27 = (int)v27;
LABEL_8:
        if (v27 <= 0)
        {
LABEL_12:
          uint64_t v56 = v88;
          (*(void (**)(char *, void, uint64_t))(v88 + 104))(v15, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v13);
          sub_1000B86B0();
          unint64_t v87 = v25;
          (*(void (**)(char *, uint64_t))(v56 + 8))(v15, v13);
          unint64_t v57 = v90;
          sub_1000BB6B0();
          sub_100018190();
          uint64_t v58 = (void *)sub_1000BBDE0();
          sub_10001295C(&qword_1000EC5C8);
          uint64_t v59 = swift_allocObject();
          *(_OWORD *)(v59 + 16) = xmmword_1000BF8A0;
          uint64_t v60 = v91;
          uint64_t v88 = *(void *)(v91 + 16);
          uint64_t v61 = (uint64_t)v89;
          uint64_t v62 = v79;
          ((void (*)(char *, char *, uint64_t))v88)(v89, v57, v79);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v61, 0, 1, v62);
          uint64_t v63 = sub_1000BB200();
          uint64_t v65 = v64;
          sub_1000184DC(v61, &qword_1000EC630);
          *(void *)(v59 + 56) = &type metadata for String;
          *(void *)(v59 + 64) = sub_10001824C();
          *(void *)(v59 + 32) = v63;
          *(void *)(v59 + 40) = v65;
          sub_1000BBBE0();
          sub_1000B8770();

          swift_bridgeObjectRelease();
          sub_1000199B8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
          swift_allocError();
          ((void (*)(uint64_t, char *, uint64_t))v88)(v66, v57, v62);
          swift_willThrow();
          sub_1000180CC(v80, v81);
          sub_100018074(v92, v87);
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v57, v62);
        }
        else
        {
          uint64_t v78 = v2;
          sub_1000B81C0();
          swift_allocObject();
          uint64_t v31 = sub_1000B81B0();
          sub_100019A00();
          unint64_t v32 = v87;
          sub_1000B81A0();
          if (v32)
          {
            uint64_t v84 = v31;
            unint64_t v87 = v25;
            unint64_t v93 = v32;
            swift_errorRetain();
            sub_10001295C(&qword_1000EC648);
            uint64_t v33 = v86;
            if (swift_dynamicCast())
            {
              swift_errorRelease();
              uint64_t v34 = v78;
              uint64_t v35 = v85;
              (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v85, v8, v33);
              unint64_t v77 = sub_100018190();
              uint64_t v36 = v33;
              uint64_t v37 = (void *)sub_1000BBDE0();
              uint64_t v76 = sub_10001295C(&qword_1000EC5C8);
              uint64_t v38 = swift_allocObject();
              long long v75 = xmmword_1000BF8A0;
              *(_OWORD *)(v38 + 16) = xmmword_1000BF8A0;
              UInt32 v74 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
              uint64_t v39 = (uint64_t)v82;
              v74(v82, v35, v36);
              uint64_t v40 = v36;
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v39, 0, 1, v36);
              uint64_t v41 = sub_1000BB200();
              uint64_t v43 = v42;
              sub_1000184DC(v39, &qword_1000EC628);
              *(void *)(v38 + 56) = &type metadata for String;
              v82 = (char *)sub_10001824C();
              *(void *)(v38 + 64) = v82;
              *(void *)(v38 + 32) = v41;
              *(void *)(v38 + 40) = v43;
              sub_1000BBBE0();
              sub_1000B8770();

              swift_bridgeObjectRelease();
              uint64_t v44 = v88;
              (*(void (**)(char *, void, uint64_t))(v88 + 104))(v15, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v13);
              sub_1000B86B0();
              (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v13);
              v74(v83, v85, v40);
              uint64_t v45 = v90;
              sub_1000BB6A0();
              uint64_t v46 = (void *)sub_1000BBDE0();
              uint64_t v47 = swift_allocObject();
              *(_OWORD *)(v47 + 16) = v75;
              uint64_t v48 = v91;
              uint64_t v88 = *(void *)(v91 + 16);
              uint64_t v49 = (uint64_t)v89;
              uint64_t v50 = v79;
              ((void (*)(char *, char *, uint64_t))v88)(v89, v45, v79);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v49, 0, 1, v50);
              uint64_t v51 = sub_1000BB200();
              uint64_t v53 = v52;
              sub_1000184DC(v49, &qword_1000EC630);
              uint64_t v54 = v82;
              *(void *)(v47 + 56) = &type metadata for String;
              *(void *)(v47 + 64) = v54;
              *(void *)(v47 + 32) = v51;
              *(void *)(v47 + 40) = v53;
              sub_1000BBBE0();
              sub_1000B8770();

              swift_bridgeObjectRelease();
              sub_1000199B8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
              swift_allocError();
              ((void (*)(uint64_t, char *, uint64_t))v88)(v55, v45, v50);
              swift_willThrow();
              sub_1000180CC(v80, v81);
              sub_100018074(v92, v87);
              swift_release();
              (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v50);
              (*(void (**)(char *, uint64_t))(v78 + 8))(v85, v86);
              uint64_t result = swift_errorRelease();
            }
            else
            {
              swift_errorRelease();
              sub_100018190();
              uint64_t v68 = (void *)sub_1000BBDE0();
              sub_10001295C(&qword_1000EC5C8);
              uint64_t v69 = swift_allocObject();
              *(_OWORD *)(v69 + 16) = xmmword_1000BF8A0;
              unint64_t v93 = v32;
              uint64_t v70 = sub_1000BB200();
              uint64_t v72 = v71;
              *(void *)(v69 + 56) = &type metadata for String;
              *(void *)(v69 + 64) = sub_10001824C();
              *(void *)(v69 + 32) = v70;
              *(void *)(v69 + 40) = v72;
              sub_1000BBBE0();
              sub_1000B8770();

              swift_bridgeObjectRelease();
              swift_getErrorValue();
              swift_getDynamicType();
              unint64_t v93 = 0;
              unint64_t v94 = 0xE000000000000000;
              sub_1000BBED0(22);
              swift_bridgeObjectRelease();
              unint64_t v93 = 0xD000000000000014;
              unint64_t v94 = 0x80000001000C9380;
              v95._countAndFlagsBits = sub_1000BC2B0();
              sub_1000BB9A0(v95);
              swift_bridgeObjectRelease();
              sub_1000199B8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
              swift_allocError();
              sub_1000BB6B0();
              swift_willThrow();
              swift_errorRelease();
              swift_release();
              sub_100018074(v92, v87);
              uint64_t result = sub_1000180CC(v80, v81);
            }
          }
          else
          {
            sub_100018190();
            uint64_t v67 = (void *)sub_1000BBDE0();
            sub_1000BBBE0();
            sub_1000B8770();

            sub_1000B86E0();
            sub_1000BAC90();
            sub_1000BACB0();
            sub_1000180CC(v80, v81);
            sub_100018074(v92, v26);
            uint64_t result = swift_release();
          }
        }
        break;
      case 2uLL:
        uint64_t v29 = *(void *)(v92 + 16);
        uint64_t v28 = *(void *)(v92 + 24);
        BOOL v30 = __OFSUB__(v28, v29);
        uint64_t v27 = v28 - v29;
        if (!v30) {
          goto LABEL_8;
        }
        goto LABEL_17;
      case 3uLL:
        goto LABEL_12;
      default:
        uint64_t v27 = BYTE6(v25);
        goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1000197E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000B8700();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B81C0();
  swift_allocObject();
  sub_1000B81B0();
  sub_1000199B8(&qword_1000EC620, (void (*)(uint64_t))&type metadata accessor for TopLevelDictionary);
  sub_1000B81A0();
  uint64_t result = swift_release();
  if (!v1)
  {
    sub_100018A8C(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

unint64_t sub_100019964()
{
  unint64_t result = qword_1000EC638;
  if (!qword_1000EC638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC638);
  }
  return result;
}

uint64_t sub_1000199B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100019A00()
{
  unint64_t result = qword_1000EC640;
  if (!qword_1000EC640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC640);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledMessageUpdateUnpacker.EncryptedMessageMissingData()
{
  return &type metadata for ScheduledMessageUpdateUnpacker.EncryptedMessageMissingData;
}

ValueMetadata *type metadata accessor for DeliveryReceiptUnpacker()
{
  return &type metadata for DeliveryReceiptUnpacker;
}

unint64_t sub_100019A74(uint64_t a1)
{
  unint64_t result = sub_100012A9C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100019AA0()
{
  unint64_t result = qword_1000EC650;
  if (!qword_1000EC650)
  {
    sub_1000B9F10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC650);
  }
  return result;
}

uint64_t sub_100019AF8(uint64_t a1, uint64_t a2)
{
  return sub_1000A119C(a1, a2);
}

ValueMetadata *type metadata accessor for PlayedReceiptUnpacker()
{
  return &type metadata for PlayedReceiptUnpacker;
}

unint64_t sub_100019B20(uint64_t a1)
{
  unint64_t result = sub_100012B44();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100019B4C()
{
  unint64_t result = qword_1000EC658;
  if (!qword_1000EC658)
  {
    sub_1000B9A70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC658);
  }
  return result;
}

uint64_t sub_100019BA4(uint64_t a1, uint64_t a2)
{
  return sub_1000A11C8(a1, a2);
}

uint64_t sub_100019BBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000BA050();
  uint64_t v72 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v71 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  long long v75 = (char *)&v61 - v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v61 - v8;
  uint64_t v10 = sub_10001295C(&qword_1000EC660);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000BB470();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = sub_1000B87C0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v77 = v14;
  uint64_t v78 = v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v70 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  UInt32 v74 = (char *)&v61 - v19;
  __chkstk_darwin(v18);
  uint64_t v76 = (char *)&v61 - v20;
  uint64_t v79 = sub_1000B8E30();
  uint64_t v21 = *(void *)(v79 - 8);
  uint64_t v22 = __chkstk_darwin(v79);
  uint64_t v73 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  unint64_t v26 = (char *)&v61 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v61 - v27;
  uint64_t v29 = type metadata accessor for MessageDictionary();
  BOOL v30 = (uint64_t *)(v1 + *(int *)(v29 + 120));
  unint64_t v31 = v30[1];
  if (v31 >> 60 == 15 || (unint64_t v32 = (uint64_t *)(v1 + *(int *)(v29 + 104)), !v32[1]))
  {
    uint64_t v43 = sub_1000B9FE0();
    uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56);
    return v44(a1, 1, 1, v43);
  }
  else
  {
    uint64_t v63 = v9;
    uint64_t v64 = v3;
    uint64_t v69 = a1;
    uint64_t v33 = *v30;
    uint64_t v65 = *v32;
    sub_100017FA4(v33, v31);
    swift_bridgeObjectRetain();
    uint64_t v66 = v33;
    unint64_t v67 = v31;
    Class isa = sub_1000B82B0().super.isa;
    id v34 = [(objc_class *)isa _imOptionallyDecompressData];
    uint64_t v35 = sub_1000B82D0();
    unint64_t v37 = v36;

    uint64_t v38 = v79;
    (*(void (**)(char *, void, uint64_t))(v21 + 104))(v28, enum case for ImageHeader.jpeg(_:), v79);
    LOBYTE(v34) = sub_1000B8300();
    uint64_t v39 = v28;
    uint64_t v40 = *(void (**)(char *, uint64_t))(v21 + 8);
    v40(v39, v38);
    if (v34)
    {
      v80[3] = (uint64_t)&type metadata for Data;
      v80[4] = (uint64_t)&protocol witness table for Data;
      v80[0] = v35;
      v80[1] = v37;
      uint64_t v41 = sub_1000BB440();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v12, 1, 1, v41);
      sub_100017F4C(v35, v37);
      sub_1000BB450();
      uint64_t v42 = v69;
      sub_1000B9FD0();
      sub_1000180CC(v66, v67);
      sub_100018074(v35, v37);

      uint64_t v46 = sub_1000B9FE0();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v42, 0, 1, v46);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v45 = v26;
      uint64_t v65 = v35;
      sub_1000B8310();
      unint64_t v62 = v37;
      uint64_t v48 = v76;
      sub_1000BB330();
      uint64_t v49 = v73;
      uint64_t v50 = v26;
      uint64_t v51 = v79;
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v73, v50, v79);
      uint64_t v52 = sub_1000B87B0();
      os_log_type_t v53 = sub_1000BBBB0();
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = (uint8_t *)swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        long long v75 = v45;
        v80[0] = v55;
        *(_DWORD *)uint64_t v54 = 136315138;
        UInt32 v74 = (char *)(v54 + 4);
        uint64_t v56 = sub_1000B8E20();
        v80[6] = sub_10007ABB4(v56, v57, v80);
        sub_1000BBE50();
        swift_bridgeObjectRelease();
        v40(v49, v51);
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "Skipping typing indicator icon since image header was incorrect: %s", v54, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        sub_1000180CC(v66, v67);

        sub_100018074(v65, v62);
        (*(void (**)(char *, uint64_t))(v78 + 8))(v76, v77);
        uint64_t v58 = v75;
      }
      else
      {
        sub_1000180CC(v66, v67);

        sub_100018074(v65, v62);
        v40(v49, v51);
        (*(void (**)(char *, uint64_t))(v78 + 8))(v48, v77);
        uint64_t v58 = v45;
      }
      v40(v58, v51);
      uint64_t v59 = v69;
      uint64_t v60 = sub_1000B9FE0();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 1, 1, v60);
    }
  }
}

ValueMetadata *type metadata accessor for MessagesAppBalloonUnpacker()
{
  return &type metadata for MessagesAppBalloonUnpacker;
}

uint64_t sub_10001A844()
{
  sub_10001295C(&qword_1000EC6B8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1000BFA90;
  uint64_t v1 = sub_10001DAE4(0, (unint64_t *)&qword_1000EC6B0);
  *(void *)(v0 + 56) = sub_10001295C(&qword_1000EC6C0);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = sub_10001DAE4(0, &qword_1000EC6C8);
  *(void *)(v0 + 88) = sub_10001295C(&qword_1000EC6D0);
  *(void *)(v0 + 64) = v2;
  uint64_t v3 = sub_10001DAE4(0, &qword_1000EC6D8);
  *(void *)(v0 + 120) = sub_10001295C(&qword_1000EC6E0);
  *(void *)(v0 + 96) = v3;
  uint64_t v4 = sub_10001DAE4(0, (unint64_t *)&qword_1000EC528);
  *(void *)(v0 + 152) = sub_10001295C(&qword_1000EC6E8);
  *(void *)(v0 + 128) = v4;
  uint64_t v5 = sub_10001DAE4(0, &qword_1000EC6A0);
  *(void *)(v0 + 184) = sub_10001295C(&qword_1000EC6F0);
  *(void *)(v0 + 160) = v5;
  uint64_t v6 = sub_10001DAE4(0, &qword_1000EC6F8);
  *(void *)(v0 + 216) = sub_10001295C(&qword_1000EC700);
  *(void *)(v0 + 192) = v6;
  uint64_t v7 = sub_10001DAE4(0, &qword_1000EC708);
  *(void *)(v0 + 248) = sub_10001295C(&qword_1000EC710);
  *(void *)(v0 + 224) = v7;
  uint64_t v8 = sub_10001DAE4(0, &qword_1000EC718);
  *(void *)(v0 + 280) = sub_10001295C(&qword_1000EC720);
  *(void *)(v0 + 256) = v8;
  uint64_t v9 = sub_10001DAE4(0, &qword_1000EC728);
  *(void *)(v0 + 312) = sub_10001295C(&qword_1000EC730);
  *(void *)(v0 + 288) = v9;
  uint64_t v10 = sub_10001DAE4(0, &qword_1000EC738);
  *(void *)(v0 + 344) = sub_10001295C(&qword_1000EC740);
  *(void *)(v0 + 320) = v10;
  sub_10001DAE4(0, &qword_1000EC748);
  uint64_t result = sub_1000BBC70();
  qword_1000F9298 = result;
  return result;
}

uint64_t sub_10001AA94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v149 = a2;
  uint64_t v150 = a3;
  uint64_t v144 = a4;
  uint64_t v5 = sub_10001295C(&qword_1000EC670);
  __chkstk_darwin(v5 - 8);
  uint64_t v146 = (uint64_t)v134 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001295C(&qword_1000EC5E0);
  __chkstk_darwin(v7 - 8);
  uint64_t v147 = (uint64_t)v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001295C(&qword_1000EC678);
  __chkstk_darwin(v9 - 8);
  uint64_t v148 = (uint64_t)v134 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001295C(&qword_1000EC660);
  __chkstk_darwin(v11 - 8);
  *((void *)&v152 + 1) = (char *)v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000BB470();
  __chkstk_darwin(v13 - 8);
  v151 = (char *)v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10001295C(&qword_1000EC680);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v145 = (uint64_t)v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  *(void *)&long long v152 = (char *)v134 - v19;
  __chkstk_darwin(v18);
  uint64_t v153 = (uint64_t)v134 - v20;
  uint64_t v21 = sub_10001295C(&qword_1000EC688);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v24 = (char *)v134 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)v134 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)v134 - v28;
  uint64_t v30 = sub_1000BA9C0();
  uint64_t v154 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  unint64_t v32 = (char *)v134 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BBBB0();
  sub_10001DAE4(0, (unint64_t *)&qword_1000EC5B8);
  uint64_t v33 = (void *)sub_1000BBD90();
  sub_1000B8780();

  uint64_t v34 = sub_1000BB2C0();
  uint64_t v35 = v160;
  uint64_t v37 = sub_10001D1B0(v34, v36, a1);
  if (v35) {
    return swift_bridgeObjectRelease();
  }
  v141 = v27;
  v140 = v24;
  uint64_t v160 = a1;
  v142 = v29;
  v143 = v32;
  if (v37)
  {
    unint64_t v39 = sub_10001D344(v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v39)
    {
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_1000BB1B0();
      uint64_t v138 = sub_10001C864(v40, v41, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_1000BB250();
      v137 = (void (*)(uint64_t, void, uint64_t, uint64_t))sub_10001C864(v45, v46, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_1000BB350();
      uint64_t v135 = sub_10001C864(v55, v56, v39);
      uint64_t v136 = v61;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_1000BB340();
      v134[3] = sub_10001C864(v62, v63, v39);
      v134[4] = v76;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v77 = sub_1000BB240();
      sub_10001C864(v77, v78, v39);
      v134[2] = v92;
      uint64_t v139 = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_1000BB2B0();
      sub_10001C864(v93, v94, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v108 = sub_1000BB230();
      v134[1] = v109;
      sub_10001D018(v108, v109, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v139 = v30;
    }
  }
  else
  {
    uint64_t v139 = v30;
    swift_bridgeObjectRelease();
  }
  sub_1000BA9B0();
  uint64_t v42 = sub_1000BB360();
  uint64_t v43 = v160;
  sub_10001CE78(v42, v44, v160, &v155);
  swift_bridgeObjectRelease();
  unint64_t v48 = *((void *)&v155 + 1);
  uint64_t v47 = v155;
  uint64_t v49 = sub_1000BA990();
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56);
  v50(v142, 1, 1, v49);
  uint64_t v138 = v47;
  if (v48 >> 60 != 15)
  {
    sub_100017F4C(v47, v48);
    sub_1000BBBB0();
    unint64_t v57 = (void *)sub_1000BBD90();
    sub_1000B8780();

    v137 = (void (*)(uint64_t, void, uint64_t, uint64_t))v48;
    uint64_t v58 = sub_10001D6AC(v47, v48);
    uint64_t v59 = sub_1000BB2E0();
    sub_10001C864(v59, v60, v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v79 = (uint64_t)v141;
    sub_1000BA980();
    uint64_t v95 = (uint64_t)v142;
    sub_1000184DC((uint64_t)v142, &qword_1000EC688);
    unint64_t v48 = (unint64_t)v137;
    sub_1000180CC(v138, (unint64_t)v137);
    v50((char *)v79, 0, 1, v49);
    sub_10001836C(v79, v95, &qword_1000EC688);
    uint64_t v43 = v160;
  }
  uint64_t v51 = sub_1000BB150();
  sub_10001CE78(v51, v52, v43, &v155);
  uint64_t v53 = v154;
  uint64_t v54 = v143;
  swift_bridgeObjectRelease();
  unint64_t v65 = *((void *)&v155 + 1);
  uint64_t v64 = v155;
  v141 = 0;
  if (*((void *)&v155 + 1) >> 60 == 15)
  {
    uint64_t v136 = v155;
  }
  else
  {
    uint64_t v66 = sub_1000B82C0();
    unint64_t v68 = v67;
    sub_1000180CC(v64, v65);
    uint64_t v136 = v66;
    unint64_t v65 = v68;
  }
  uint64_t v69 = sub_1000BA970();
  uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56);
  v70(v153, 1, 1, v69);
  if (v65 >> 60 == 15)
  {
    uint64_t v71 = v153;
  }
  else
  {
    v137 = v70;
    *((void *)&v156 + 1) = &type metadata for Data;
    v157 = &protocol witness table for Data;
    uint64_t v72 = v136;
    *(void *)&long long v155 = v136;
    *((void *)&v155 + 1) = v65;
    uint64_t v73 = sub_1000BB440();
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(*((void *)&v152 + 1), 1, 1, v73);
    sub_100017F4C(v72, v65);
    sub_1000BB450();
    uint64_t v74 = v152;
    long long v75 = v141;
    sub_1000BA960();
    v141 = v75;
    if (v75)
    {
      sub_1000180CC(v72, v65);
      sub_1000180CC(v138, v48);
      goto LABEL_17;
    }
    unint64_t v80 = v65;
    uint64_t v81 = v153;
    sub_1000184DC(v153, &qword_1000EC680);
    v137(v74, 0, 1, v69);
    uint64_t v71 = v81;
    unint64_t v65 = v80;
    sub_10001836C(v74, v71, &qword_1000EC680);
    uint64_t v54 = v143;
  }
  uint64_t v82 = sub_1000BB140();
  if (*(void *)(v43 + 16) && (unint64_t v84 = sub_10008BB58(v82, v83), (v85 & 1) != 0))
  {
    sub_10001DA70(*(void *)(v43 + 56) + 32 * v84, (uint64_t)&v155);
  }
  else
  {
    long long v155 = 0u;
    long long v156 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v156 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v87 = v158;
      unint64_t v86 = v159;
      swift_bridgeObjectRelease();
      uint64_t v88 = HIBYTE(v86) & 0xF;
      if ((v86 & 0x2000000000000000) == 0) {
        uint64_t v88 = v87 & 0xFFFFFFFFFFFFLL;
      }
      if (v88)
      {
        sub_1000BB6C0();
        sub_100017E10();
        swift_allocError();
        sub_1000BB6B0();
        swift_willThrow();
        sub_1000180CC(v136, v65);
        sub_1000180CC(v138, v48);
        sub_1000184DC(v71, &qword_1000EC680);
        sub_1000184DC((uint64_t)v142, &qword_1000EC688);
        return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v54, v139);
      }
      goto LABEL_34;
    }
  }
  else
  {
    sub_1000184DC((uint64_t)&v155, &qword_1000EC690);
  }
  uint64_t v89 = sub_1000BB140();
  uint64_t v90 = v141;
  sub_10001D018(v89, v91, v43);
  v141 = v90;
  if (v90)
  {
    swift_bridgeObjectRelease();
    sub_1000180CC(v136, v65);
    sub_1000180CC(v138, v48);
    sub_1000184DC(v71, &qword_1000EC680);
    sub_1000184DC((uint64_t)v142, &qword_1000EC688);
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v54, v139);
  }
  swift_bridgeObjectRelease();
LABEL_34:
  uint64_t v96 = sub_1000BAFB0();
  v97 = v141;
  sub_10001CE78(v96, v98, v43, &v155);
  uint64_t v99 = v150;
  if (v97)
  {
    swift_bridgeObjectRelease();
    sub_1000180CC(v136, v65);
    sub_1000180CC(v138, v48);
    sub_1000184DC(v71, &qword_1000EC680);
    sub_1000184DC((uint64_t)v142, &qword_1000EC688);
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v143, v139);
  }
  swift_bridgeObjectRelease();
  long long v152 = v155;
  *(void *)&long long v155 = v149;
  *((void *)&v155 + 1) = v99;
  uint64_t v158 = 58;
  unint64_t v159 = 0xE100000000000000;
  sub_1000180E0();
  uint64_t v100 = sub_1000BBE70();
  uint64_t v101 = *(void *)(v100 + 16);
  if (!v101)
  {
    swift_bridgeObjectRelease();
    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();
    sub_1000180CC(v152, *((unint64_t *)&v152 + 1));
    sub_1000180CC(v136, v65);
    sub_1000180CC(v138, v48);
    uint64_t v107 = v71;
    goto LABEL_41;
  }
  v137 = (void (*)(uint64_t, void, uint64_t, uint64_t))v48;
  uint64_t v102 = v100 + 16 * v101;
  uint64_t v104 = *(void *)(v102 + 16);
  uint64_t v103 = *(void *)(v102 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v105 = (void *)sub_1000BB1C0();
  char v106 = sub_10001C164(v104, v103, v105);
  swift_bridgeObjectRelease();
  if ((v106 & 1) != 0 || *((void *)&v152 + 1) >> 60 == 15)
  {
    uint64_t v110 = sub_1000BB2D0();
    uint64_t v111 = v160;
    uint64_t v150 = sub_10001C864(v110, v112, v160);
    v151 = v113;
    swift_bridgeObjectRelease();
    uint64_t v114 = sub_1000BB2F0();
    sub_10001CB94(v114, v115, v111, v148);
    swift_bridgeObjectRelease();
    uint64_t v116 = sub_1000BB370();
    uint64_t v149 = sub_10001C864(v116, v117, v160);
    v141 = 0;
    swift_bridgeObjectRelease();
    uint64_t v118 = sub_1000BAEB0();
    v119 = v141;
    sub_10001C22C(v118, v120, v160, v147);
    v141 = v119;
    if (!v119)
    {
      swift_bridgeObjectRelease();
      uint64_t v121 = v53;
      v122 = *(void (**)(uint64_t, char *, uint64_t))(v53 + 16);
      uint64_t v123 = v146;
      uint64_t v124 = v139;
      v122(v146, v143, v139);
      v125 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v121 + 56);
      uint64_t v139 = v124;
      v125(v123, 0, 1, v124);
      uint64_t v126 = sub_1000BB160();
      v127 = v141;
      sub_10001C864(v126, v128, v160);
      v141 = v127;
      if (v127)
      {
        swift_bridgeObjectRelease();
        sub_1000180CC(v152, *((unint64_t *)&v152 + 1));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000180CC(v136, v65);
        sub_1000180CC(v138, (unint64_t)v137);
        sub_1000184DC(v146, &qword_1000EC670);
        sub_1000184DC(v147, &qword_1000EC5E0);
        sub_1000184DC(v148, &qword_1000EC678);
        uint64_t v129 = v153;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1000182A0(v153, v145, &qword_1000EC680);
        uint64_t v130 = sub_1000BB2E0();
        v131 = v141;
        uint64_t v160 = sub_10001C864(v130, v132, v160);
        uint64_t v135 = v133;
        v141 = v131;
        if (!v131)
        {
          swift_bridgeObjectRelease();
          sub_1000182A0((uint64_t)v142, (uint64_t)v140, &qword_1000EC688);
          sub_1000BA9A0();
          sub_1000180CC(v136, v65);
          sub_1000180CC(v138, (unint64_t)v137);
          sub_1000184DC(v153, &qword_1000EC680);
          sub_1000184DC((uint64_t)v142, &qword_1000EC688);
          uint64_t v53 = v154;
          return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v143, v139);
        }
        swift_bridgeObjectRelease();
        sub_1000180CC(v152, *((unint64_t *)&v152 + 1));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000180CC(v136, v65);
        sub_1000180CC(v138, (unint64_t)v137);
        sub_1000184DC(v145, &qword_1000EC680);
        sub_1000184DC(v146, &qword_1000EC670);
        sub_1000184DC(v147, &qword_1000EC5E0);
        sub_1000184DC(v148, &qword_1000EC678);
        uint64_t v129 = v153;
      }
      sub_1000184DC(v129, &qword_1000EC680);
      sub_1000184DC((uint64_t)v142, &qword_1000EC688);
      uint64_t v53 = v154;
      return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v143, v139);
    }
    swift_bridgeObjectRelease();
    sub_1000180CC(v152, *((unint64_t *)&v152 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000180CC(v136, v65);
    sub_1000180CC(v138, (unint64_t)v137);
    sub_1000184DC(v148, &qword_1000EC678);
LABEL_17:
    sub_1000184DC(v153, &qword_1000EC680);
    sub_1000184DC((uint64_t)v142, &qword_1000EC688);
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v143, v139);
  }
  swift_bridgeObjectRelease();
  sub_1000BB6C0();
  sub_100017E10();
  swift_allocError();
  sub_1000BB6B0();
  swift_willThrow();
  sub_1000180CC(v152, *((unint64_t *)&v152 + 1));
  sub_1000180CC(v136, v65);
  sub_1000180CC(v138, (unint64_t)v137);
  uint64_t v107 = v153;
LABEL_41:
  sub_1000184DC(v107, &qword_1000EC680);
  sub_1000184DC((uint64_t)v142, &qword_1000EC688);
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v143, v139);
}

uint64_t sub_10001C164(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1000BC1A0();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1000BC1A0() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

void sub_10001C22C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_10001295C(&qword_1000EC5E0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)sub_10001C9F4(a1, a2, a3);
  if (!v4)
  {
    uint64_t v13 = v12;
    if (!v12)
    {
      uint64_t v22 = sub_1000B8240();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 1, 1, v22);
      goto LABEL_11;
    }
    id v14 = [v12 absoluteString];
    if (!v14)
    {
LABEL_9:
      sub_1000B8200();

      uint64_t v21 = sub_1000B8240();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 0, 1, v21);
LABEL_11:
      sub_10001836C((uint64_t)v11, a4, &qword_1000EC5E0);
      return;
    }
    uint64_t v15 = v14;
    uint64_t v16 = sub_1000BB900();
    uint64_t v18 = v17;

    if (v16) {
      BOOL v19 = 0;
    }
    else {
      BOOL v19 = v18 == 0xE000000000000000;
    }
    if (v19)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v20 = sub_1000BC1A0();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0) {
        goto LABEL_9;
      }
    }
    uint64_t v23 = sub_1000B8240();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a4, 1, 1, v23);
  }
}

uint64_t sub_10001C438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v36 = a3;
  uint64_t v33 = a1;
  uint64_t v30 = a6;
  uint64_t v6 = sub_1000B9430();
  uint64_t v29 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000BA950();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000BA9D0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BBBB0();
  sub_10001DAE4(0, (unint64_t *)&qword_1000EC5B8);
  id v14 = (void *)sub_1000BBD90();
  sub_1000B8780();

  if (*(void *)(v36 + 16))
  {
    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
  else
  {
    uint64_t v28 = v8;
    uint64_t v16 = v10;
    uint64_t v36 = v6;
    uint64_t v17 = sub_1000B82C0();
    unint64_t v19 = v18;
    unint64_t v20 = v35;
    uint64_t v21 = sub_10001D6AC(v17, v18);
    if (v20)
    {
      uint64_t v22 = v17;
      unint64_t v23 = v19;
    }
    else
    {
      uint64_t v34 = v17;
      unint64_t v35 = v19;
      sub_10001AA94(v21, v31, v32, (uint64_t)v13);
      swift_bridgeObjectRelease();
      sub_1000BBBB0();
      uint64_t v24 = (void *)sub_1000BBD90();
      sub_1000B8780();

      sub_1000BA900();
      uint64_t v25 = v28;
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v28, v13, v16);
      (*(void (**)(char *, void, uint64_t))(v29 + 104))(v25, enum case for BalloonPlugin.Payload.messagesAppBalloon(_:), v36);
      sub_1000BAE60();
      uint64_t v27 = v34;
      unint64_t v26 = v35;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v16);
      uint64_t v22 = v27;
      unint64_t v23 = v26;
    }
    return sub_100018074(v22, v23);
  }
}

uint64_t sub_10001C84C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_10001C438(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10001C864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16))
  {
    long long v10 = 0u;
    long long v11 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10008BB58(a1, a2);
  if ((v7 & 1) == 0)
  {
    long long v10 = 0u;
    long long v11 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_10001DA70(*(void *)(a3 + 56) + 32 * v6, (uint64_t)&v10);
  swift_bridgeObjectRelease();
  if (!*((void *)&v11 + 1))
  {
LABEL_8:
    sub_1000184DC((uint64_t)&v10, &qword_1000EC690);
    return 0;
  }
  sub_10001DACC(&v10, v12);
  sub_10001DA70((uint64_t)v12, (uint64_t)&v10);
  if (swift_dynamicCast())
  {
    sub_100015C54((uint64_t)v12);
    return v9;
  }
  else
  {
    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
    swift_bridgeObjectRetain();
    sub_1000BB6B0();
    swift_willThrow();
    return sub_100015C54((uint64_t)v12);
  }
}

uint64_t sub_10001C9F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16))
  {
    long long v10 = 0u;
    long long v11 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10008BB58(a1, a2);
  if ((v7 & 1) == 0)
  {
    long long v10 = 0u;
    long long v11 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_10001DA70(*(void *)(a3 + 56) + 32 * v6, (uint64_t)&v10);
  swift_bridgeObjectRelease();
  if (!*((void *)&v11 + 1))
  {
LABEL_8:
    sub_1000184DC((uint64_t)&v10, &qword_1000EC690);
    return 0;
  }
  sub_10001DACC(&v10, v12);
  sub_10001DA70((uint64_t)v12, (uint64_t)&v10);
  sub_10001DAE4(0, &qword_1000EC6A0);
  if (swift_dynamicCast())
  {
    sub_100015C54((uint64_t)v12);
    return v9;
  }
  else
  {
    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
    swift_bridgeObjectRetain();
    sub_1000BB6B0();
    swift_willThrow();
    return sub_100015C54((uint64_t)v12);
  }
}

uint64_t sub_10001CB94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10001295C(&qword_1000EC678);
  __chkstk_darwin(v8 - 8);
  long long v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a3 + 16))
  {
    long long v19 = 0u;
    long long v20 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_10008BB58(a1, a2);
  if ((v12 & 1) == 0)
  {
    long long v19 = 0u;
    long long v20 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_10001DA70(*(void *)(a3 + 56) + 32 * v11, (uint64_t)&v19);
  swift_bridgeObjectRelease();
  if (!*((void *)&v20 + 1))
  {
LABEL_8:
    sub_1000184DC((uint64_t)&v19, &qword_1000EC690);
    uint64_t v18 = sub_1000B8380();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a4, 1, 1, v18);
  }
  sub_10001DACC(&v19, v21);
  sub_10001DA70((uint64_t)v21, (uint64_t)&v19);
  uint64_t v13 = sub_1000B8380();
  char v14 = swift_dynamicCast();
  uint64_t v15 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  if (v14)
  {
    uint64_t v16 = *(void *)(v13 - 8);
    v15(v10, 0, 1, v13);
    sub_100015C54((uint64_t)v21);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a4, v10, v13);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v15)(a4, 0, 1, v13);
  }
  else
  {
    v15(v10, 1, 1, v13);
    sub_1000184DC((uint64_t)v10, &qword_1000EC678);
    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
    swift_bridgeObjectRetain();
    sub_1000BB6B0();
    swift_willThrow();
    return sub_100015C54((uint64_t)v21);
  }
}

uint64_t sub_10001CE78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X8>)
{
  if (!*(void *)(a3 + 16))
  {
    long long v13 = 0u;
    long long v14 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_10008BB58(a1, a2);
  if ((v9 & 1) == 0)
  {
    long long v13 = 0u;
    long long v14 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_10001DA70(*(void *)(a3 + 56) + 32 * v8, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  if (!*((void *)&v14 + 1))
  {
LABEL_8:
    uint64_t result = sub_1000184DC((uint64_t)&v13, &qword_1000EC690);
    long long v11 = xmmword_1000BFAA0;
    goto LABEL_9;
  }
  sub_10001DACC(&v13, v15);
  sub_10001DA70((uint64_t)v15, (uint64_t)&v13);
  if (swift_dynamicCast())
  {
    uint64_t result = sub_100015C54((uint64_t)v15);
    long long v11 = v12;
LABEL_9:
    *a4 = v11;
    return result;
  }
  sub_1000BB6C0();
  sub_100017E10();
  swift_allocError();
  swift_bridgeObjectRetain();
  sub_1000BB6B0();
  swift_willThrow();
  return sub_100015C54((uint64_t)v15);
}

uint64_t sub_10001D018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16))
  {
    long long v10 = 0u;
    long long v11 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10008BB58(a1, a2);
  if ((v7 & 1) == 0)
  {
    long long v10 = 0u;
    long long v11 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_10001DA70(*(void *)(a3 + 56) + 32 * v6, (uint64_t)&v10);
  swift_bridgeObjectRelease();
  if (!*((void *)&v11 + 1))
  {
LABEL_8:
    sub_1000184DC((uint64_t)&v10, &qword_1000EC690);
    return 0;
  }
  sub_10001DACC(&v10, v12);
  sub_10001DA70((uint64_t)v12, (uint64_t)&v10);
  if (swift_dynamicCast())
  {
    sub_100015C54((uint64_t)v12);
    return v9;
  }
  else
  {
    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
    swift_bridgeObjectRetain();
    sub_1000BB6B0();
    swift_willThrow();
    return sub_100015C54((uint64_t)v12);
  }
}

uint64_t sub_10001D1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16))
  {
    long long v10 = 0u;
    long long v11 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10008BB58(a1, a2);
  if ((v7 & 1) == 0)
  {
    long long v10 = 0u;
    long long v11 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_10001DA70(*(void *)(a3 + 56) + 32 * v6, (uint64_t)&v10);
  swift_bridgeObjectRelease();
  if (!*((void *)&v11 + 1))
  {
LABEL_8:
    sub_1000184DC((uint64_t)&v10, &qword_1000EC690);
    return 0;
  }
  sub_10001DACC(&v10, v12);
  sub_10001DA70((uint64_t)v12, (uint64_t)&v10);
  sub_10001295C(&qword_1000EC6A8);
  if (swift_dynamicCast())
  {
    sub_100015C54((uint64_t)v12);
    return v9;
  }
  else
  {
    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
    swift_bridgeObjectRetain();
    sub_1000BB6B0();
    swift_willThrow();
    return sub_100015C54((uint64_t)v12);
  }
}

unint64_t sub_10001D344(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_10001295C(&qword_1000EC698);
    uint64_t v2 = (void *)sub_1000BBF70();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v34 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v33 = (unint64_t)(63 - v3) >> 6;
  unint64_t v6 = v43;
  char v7 = v41;
  unint64_t v8 = &v37;
  uint64_t v9 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v33) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v33) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v34 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v33) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v34 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v33) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v34 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v33)
          {
            unint64_t v21 = *(void *)(v34 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v33) {
                break;
              }
              unint64_t v21 = *(void *)(v34 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_10001DADC();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v36 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    sub_10001DA70(*(void *)(v1 + 56) + 32 * v19, (uint64_t)v6);
    *(void *)&long long v42 = v26;
    *((void *)&v42 + 1) = v25;
    v40[2] = v42;
    v41[0] = v43[0];
    v41[1] = v43[1];
    long long v27 = v42;
    sub_10001DACC(v7, v8);
    sub_10001DACC(v8, v9);
    sub_10001DACC(v9, v40);
    sub_10001DACC(v40, &v38);
    swift_bridgeObjectRetain();
    unint64_t result = sub_10008BB58(v27, *((uint64_t *)&v27 + 1));
    unint64_t v28 = result;
    if (v29)
    {
      int64_t v35 = i;
      long long v12 = v9;
      long long v13 = v8;
      uint64_t v14 = v1;
      uint64_t v15 = v7;
      uint64_t v16 = v6;
      uint64_t v17 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v27;
      unint64_t v6 = v16;
      char v7 = v15;
      uint64_t v1 = v14;
      unint64_t v8 = v13;
      uint64_t v9 = v12;
      int64_t i = v35;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v28);
      sub_100015C54((uint64_t)v18);
      unint64_t result = (unint64_t)sub_10001DACC(&v38, v18);
      unint64_t v5 = v36;
      if (!v36) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v27;
    unint64_t result = (unint64_t)sub_10001DACC(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v30 = v2[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_34;
    }
    v2[2] = v32;
    unint64_t v5 = v36;
    if (!v36) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v36 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_10001D6AC(uint64_t a1, uint64_t a2)
{
  if (qword_1000EC278 != -1) {
    swift_once();
  }
  uint64_t v4 = 0;
  sub_1000BBB50();
  sub_1000BB6C0();
  sub_100017E10();
  swift_allocError();
  sub_1000BB6B0();
  swift_willThrow();
  return a2;
}

uint64_t sub_10001DA70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_10001DACC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10001DADC()
{
  return swift_release();
}

uint64_t sub_10001DAE4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

ValueMetadata *type metadata accessor for RelayReachabilityResponseUnpacker()
{
  return &type metadata for RelayReachabilityResponseUnpacker;
}

uint64_t sub_10001DB30()
{
  return sub_10001F464(&qword_1000EC750, (void (*)(uint64_t))&type metadata accessor for RelayReachabilityResponse);
}

uint64_t sub_10001DB78@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v4 = sub_10001295C(&qword_1000EC760);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000BAC80();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  long long v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v13 = (char *)v29 - v12;
  int64_t v33 = a1;
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_10001F5A4(v14, (void (*)(uint64_t, uint64_t, uint64_t))sub_10001F500, (uint64_t)v32);
  swift_bridgeObjectRelease();
  if (v2)
  {
    long long v35 = *a1;
    sub_10001842C((uint64_t)&v35);
  }
  else
  {
    uint64_t v30 = v13;
    BOOL v31 = v15;
    uint64_t v16 = *((void *)a1 + 1);
    v29[0] = *(void *)a1;
    sub_10001F8CC((uint64_t)(a1 + 1), (uint64_t)v34);
    sub_10001F8CC((uint64_t)v34, (uint64_t)&v36);
    v29[1] = v16;
    if (v37)
    {
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, enum case for RelayReachabilityError.none(_:), v7);
      swift_bridgeObjectRetain();
      uint64_t v17 = v30;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1000BAC70();
      int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
      uint64_t v17 = v30;
      if (v18 == 1)
      {
        sub_1000184DC((uint64_t)v6, &qword_1000EC760);
        (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, enum case for RelayReachabilityError.unknown(_:), v7);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v11, v7);
    unint64_t v19 = v31;
    uint64_t v20 = v31[2];
    if (v20)
    {
      uint64_t v21 = *(void *)(sub_1000BB1F0() - 8);
      uint64_t v22 = (uint64_t)v19 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
      uint64_t v23 = *(void *)(v21 + 72);
      swift_bridgeObjectRetain();
      uint64_t v24 = v20 - 1;
      do
      {
        char v25 = sub_1000BB1D0();
        BOOL v27 = v24-- != 0;
        if ((v25 & 1) == 0) {
          break;
        }
        v22 += v23;
      }
      while (v27);
      swift_bridgeObjectRelease();
    }
    sub_1000BADB0();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_10001DF1C()
{
  return sub_1000BB1E0();
}

uint64_t sub_10001DF88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v121 = a1;
  uint64_t v1 = sub_10001295C(&qword_1000EC628);
  __chkstk_darwin(v1 - 8);
  uint64_t v123 = (char *)v118 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_1000BBF10();
  uint64_t isa = (uint64_t)v137[-1].isa;
  uint64_t v3 = __chkstk_darwin(v137);
  v125 = (char *)v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v124 = (char *)v118 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v135 = (char *)v118 - v8;
  __chkstk_darwin(v7);
  uint64_t v132 = (uint8_t *)v118 - v9;
  uint64_t v10 = sub_1000BADC0();
  __chkstk_darwin(v10 - 8);
  uint64_t v126 = (uint8_t *)v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1000BB000();
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  v122 = (uint8_t *)v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v13 - 8);
  uint64_t v133 = (char *)v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000B87C0();
  uint64_t v142 = *(void *)(v15 - 8);
  uint64_t v143 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  v127 = (uint8_t *)v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v129 = (char *)v118 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v130 = (char *)v118 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)v118 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)v118 - v25;
  uint64_t v138 = (void *)sub_1000B86C0();
  uint64_t v27 = *(v138 - 1);
  __chkstk_darwin(v138);
  char v29 = (char *)v118 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_1000BB6C0();
  uint64_t v139 = *(void *)(v141 - 8);
  uint64_t v30 = __chkstk_darwin(v141);
  uint64_t v128 = (char *)v118 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  v131 = (char *)v118 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)v118 - v35;
  __chkstk_darwin(v34);
  uint64_t v38 = (char *)v118 - v37;
  Class v39 = sub_1000B82B0().super.isa;
  id v40 = [(objc_class *)v39 _imOptionallyDecompressData];

  uint64_t v41 = sub_1000B82D0();
  unint64_t v43 = v42;

  unint64_t v44 = v43;
  uint64_t v140 = v41;
  switch(v43 >> 62)
  {
    case 1uLL:
      LODWORD(v45) = HIDWORD(v41) - v41;
      if (__OFSUB__(HIDWORD(v41), v41))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x10001F43CLL);
      }
      uint64_t v45 = (int)v45;
LABEL_6:
      if (v45 > 0)
      {
        sub_1000B81C0();
        swift_allocObject();
        uint64_t v49 = sub_1000B81B0();
        sub_10001F4AC();
        v118[1] = v49;
        uint64_t v50 = (uint64_t)v136;
        sub_1000B81A0();
        if (v50)
        {
          *(void *)&long long v145 = v50;
          swift_errorRetain();
          sub_10001295C(&qword_1000EC648);
          uint64_t v51 = v132;
          uint64_t v52 = v137;
          if (swift_dynamicCast())
          {
            swift_errorRelease();
            uint64_t v53 = isa;
            uint64_t v54 = v135;
            (*(void (**)(char *, uint8_t *, NSObject *))(isa + 32))(v135, v51, v52);
            sub_1000B87A0();
            uint64_t v55 = v124;
            uint64_t v136 = *(uint8_t **)(v53 + 16);
            ((void (*)(char *, char *, NSObject *))v136)(v124, v54, v52);
            uint64_t v56 = sub_1000B87B0();
            os_log_type_t v57 = sub_1000BBBE0();
            int v58 = v57;
            BOOL v59 = os_log_type_enabled(v56, v57);
            v118[0] = v44;
            if (v59)
            {
              uint64_t v60 = swift_slowAlloc();
              LODWORD(v127) = v58;
              uint64_t v61 = (uint8_t *)v60;
              uint64_t v126 = (uint8_t *)swift_slowAlloc();
              uint64_t v149 = v126;
              v122 = v61;
              *(_DWORD *)uint64_t v61 = 136446210;
              uint64_t v132 = v61 + 4;
              uint64_t v62 = (uint64_t)v123;
              ((void (*)(char *, char *, NSObject *))v136)(v123, v55, v137);
              (*(void (**)(uint64_t, void, uint64_t, NSObject *))(v53 + 56))(v62, 0, 1, v137);
              uint64_t v63 = sub_1000BB200();
              unint64_t v65 = v64;
              sub_1000184DC(v62, &qword_1000EC628);
              uint64_t v144 = sub_10007ABB4(v63, v65, (uint64_t *)&v149);
              sub_1000BBE50();
              uint64_t v52 = v137;
              swift_bridgeObjectRelease();
              uint64_t v132 = *(uint8_t **)(isa + 8);
              ((void (*)(char *, NSObject *))v132)(v55, v52);
              _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v127, "RelayReachabilityResponseDictionary unpacking error: %{public}s", v122, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              uint64_t v132 = *(uint8_t **)(v53 + 8);
              ((void (*)(char *, NSObject *))v132)(v55, v52);
            }

            uint64_t v93 = v130;
            uint64_t v130 = *(char **)(v142 + 8);
            ((void (*)(char *, uint64_t))v130)(v93, v143);
            uint64_t v94 = v138;
            (*(void (**)(char *, void, void *))(v27 + 104))(v29, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v138);
            sub_1000B86B0();
            (*(void (**)(char *, void *))(v27 + 8))(v29, v94);
            ((void (*)(char *, char *, NSObject *))v136)(v125, v135, v52);
            uint64_t v95 = v131;
            sub_1000BB6A0();
            uint64_t v96 = v129;
            sub_1000B87A0();
            uint64_t v97 = v139;
            uint64_t v98 = v128;
            uint64_t v99 = v141;
            uint64_t v138 = *(void **)(v139 + 16);
            ((void (*)(char *, char *, uint64_t))v138)(v128, v95, v141);
            uint64_t v100 = sub_1000B87B0();
            os_log_type_t v101 = sub_1000BBBE0();
            if (os_log_type_enabled(v100, v101))
            {
              uint64_t v102 = v98;
              uint64_t v103 = (uint8_t *)swift_slowAlloc();
              uint64_t v136 = (uint8_t *)swift_slowAlloc();
              uint64_t v149 = v136;
              v127 = v103;
              *(_DWORD *)uint64_t v103 = 136446210;
              uint64_t v126 = v103 + 4;
              uint64_t v104 = v97;
              uint64_t v105 = (uint64_t)v133;
              ((void (*)(char *, char *, uint64_t))v138)(v133, v102, v99);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v104 + 56))(v105, 0, 1, v99);
              uint64_t v106 = sub_1000BB200();
              unint64_t v108 = v107;
              sub_1000184DC(v105, &qword_1000EC630);
              uint64_t v144 = sub_10007ABB4(v106, v108, (uint64_t *)&v149);
              sub_1000BBE50();
              uint64_t v109 = v137;
              swift_bridgeObjectRelease();
              uint64_t v110 = *(void (**)(char *, uint64_t))(v104 + 8);
              v110(v128, v99);
              _os_log_impl((void *)&_mh_execute_header, v100, v101, "RelayReachabilityResponseDictionary unpacking explosion: %{public}s", v127, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v111 = v129;
            }
            else
            {
              uint64_t v110 = *(void (**)(char *, uint64_t))(v97 + 8);
              v110(v98, v99);
              uint64_t v109 = v52;

              uint64_t v111 = v96;
            }
            ((void (*)(char *, uint64_t))v130)(v111, v143);
            uint64_t v112 = v140;
            sub_10001F464((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
            swift_allocError();
            v113 = v131;
            ((void (*)(uint64_t, char *, uint64_t))v138)(v114, v131, v99);
            swift_willThrow();
            sub_100018074(v112, v118[0]);
            swift_release();
            v110(v113, v99);
            ((void (*)(char *, NSObject *))v132)(v135, v109);
            return swift_errorRelease();
          }
          swift_errorRelease();
          uint64_t v87 = v127;
          sub_1000B87A0();
          swift_errorRetain();
          swift_errorRetain();
          uint64_t v88 = sub_1000B87B0();
          os_log_type_t v89 = sub_1000BBBE0();
          if (os_log_type_enabled(v88, v89))
          {
            uint64_t v90 = (uint8_t *)swift_slowAlloc();
            *(void *)&long long v145 = swift_slowAlloc();
            *(_DWORD *)uint64_t v90 = 136446210;
            uint64_t v149 = (uint8_t *)v50;
            uint64_t v91 = sub_1000BB200();
            uint64_t v149 = (uint8_t *)sub_10007ABB4(v91, v92, (uint64_t *)&v145);
            sub_1000BBE50();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v88, v89, "RelayReachabilityResponseDictionary unpacking unknown error: %{public}s", v90, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(uint8_t *, uint64_t))(v142 + 8))(v127, v143);
          }
          else
          {
            swift_errorRelease();
            swift_errorRelease();

            (*(void (**)(uint8_t *, uint64_t))(v142 + 8))(v87, v143);
          }
          swift_getErrorValue();
          swift_getDynamicType();
          *(void *)&long long v145 = 0;
          *((void *)&v145 + 1) = 0xE000000000000000;
          sub_1000BBED0(22);
          swift_bridgeObjectRelease();
          *(void *)&long long v145 = 0xD000000000000014;
          *((void *)&v145 + 1) = 0x80000001000C9380;
          v150._countAndFlagsBits = sub_1000BC2B0();
          sub_1000BB9A0(v150);
          swift_bridgeObjectRelease();
          sub_10001F464((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
          swift_allocError();
          sub_1000BB6B0();
          swift_willThrow();
          swift_errorRelease();
          swift_release();
          uint64_t v117 = v140;
        }
        else
        {
          long long v147 = v145;
          *(_OWORD *)uint64_t v148 = *(_OWORD *)v146;
          *(_OWORD *)&v148[10] = *(_OWORD *)&v146[10];
          sub_1000B87A0();
          unint64_t v84 = sub_1000B87B0();
          os_log_type_t v85 = sub_1000BBBE0();
          if (os_log_type_enabled(v84, v85))
          {
            unint64_t v86 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v86 = 0;
            _os_log_impl((void *)&_mh_execute_header, v84, v85, "Unpacking RelayReachabilityResponseDictionary", v86, 2u);
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v142 + 8))(v24, v143);
          sub_10001DB78(&v147, (uint64_t)v126);
          uint64_t v115 = v122;
          sub_1000BAFF0();
          uint64_t v116 = v140;
          (*(void (**)(uint64_t, uint8_t *, uint64_t))(v119 + 32))(v121, v115, v120);
          swift_release();
          uint64_t v117 = v116;
        }
        return sub_100018074(v117, v44);
      }
LABEL_11:
      uint64_t v66 = v138;
      (*(void (**)(char *, void, void *))(v27 + 104))(v29, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v138);
      sub_1000B86B0();
      (*(void (**)(char *, void *))(v27 + 8))(v29, v66);
      sub_1000BB6B0();
      sub_1000B87A0();
      uint64_t v67 = v139;
      uint64_t v68 = v141;
      uint64_t v138 = *(void **)(v139 + 16);
      ((void (*)(char *, char *, uint64_t))v138)(v36, v38, v141);
      uint64_t v69 = sub_1000B87B0();
      os_log_type_t v70 = sub_1000BBBE0();
      int v71 = v70;
      v137 = v69;
      if (os_log_type_enabled(v69, v70))
      {
        LODWORD(v135) = v71;
        uint64_t v72 = (uint8_t *)swift_slowAlloc();
        uint64_t isa = swift_slowAlloc();
        *(void *)&long long v145 = isa;
        uint64_t v132 = v72;
        *(_DWORD *)uint64_t v72 = 136446210;
        v131 = (char *)(v72 + 4);
        uint64_t v136 = (uint8_t *)v26;
        uint64_t v73 = v67;
        uint64_t v74 = (uint64_t)v133;
        ((void (*)(char *, char *, uint64_t))v138)(v133, v36, v68);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56))(v74, 0, 1, v68);
        unint64_t v75 = v44;
        uint64_t v76 = sub_1000BB200();
        unint64_t v78 = v77;
        sub_1000184DC(v74, &qword_1000EC630);
        uint64_t v79 = v76;
        unint64_t v44 = v75;
        uint64_t v68 = v141;
        uint64_t v149 = (uint8_t *)sub_10007ABB4(v79, v78, (uint64_t *)&v145);
        sub_1000BBE50();
        swift_bridgeObjectRelease();
        unint64_t v80 = *(void (**)(char *, uint64_t))(v73 + 8);
        v80(v36, v68);
        uint64_t v81 = v137;
        _os_log_impl((void *)&_mh_execute_header, v137, (os_log_type_t)v135, "Message unpacking explosion: %{public}s", v132, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint8_t *, uint64_t))(v142 + 8))(v136, v143);
      }
      else
      {
        unint64_t v80 = *(void (**)(char *, uint64_t))(v67 + 8);
        v80(v36, v68);

        (*(void (**)(char *, uint64_t))(v142 + 8))(v26, v143);
      }
      sub_10001F464((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      ((void (*)(uint64_t, char *, uint64_t))v138)(v82, v38, v68);
      swift_willThrow();
      sub_100018074(v140, v44);
      return ((uint64_t (*)(char *, uint64_t))v80)(v38, v68);
    case 2uLL:
      uint64_t v47 = *(void *)(v41 + 16);
      uint64_t v46 = *(void *)(v41 + 24);
      BOOL v48 = __OFSUB__(v46, v47);
      uint64_t v45 = v46 - v47;
      if (!v48) {
        goto LABEL_6;
      }
      goto LABEL_29;
    case 3uLL:
      goto LABEL_11;
    default:
      uint64_t v45 = BYTE6(v43);
      goto LABEL_6;
  }
}

uint64_t sub_10001F44C@<X0>(uint64_t a1@<X8>)
{
  return sub_10001DF88(a1);
}

uint64_t sub_10001F464(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10001F4AC()
{
  unint64_t result = qword_1000EC758;
  if (!qword_1000EC758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC758);
  }
  return result;
}

uint64_t sub_10001F500()
{
  return sub_10001DF1C();
}

uint64_t sub_10001F51C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void *sub_10001F5A4(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  id v40 = a2;
  uint64_t v41 = a3;
  uint64_t v38 = sub_1000BB1F0();
  uint64_t v6 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v45 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  unint64_t result = &_swiftEmptyArrayStorage;
  if (v8)
  {
    uint64_t v46 = &_swiftEmptyArrayStorage;
    uint64_t v39 = a1;
    sub_10007F8AC(0, v8, 0);
    uint64_t v10 = v39;
    unint64_t v44 = v46;
    unint64_t result = (void *)sub_10001F51C(v39);
    uint64_t v11 = (uint64_t)result;
    int v13 = v12;
    uint64_t v14 = 0;
    uint64_t v15 = v10 + 64;
    int64_t v36 = v8;
    uint64_t v37 = v6 + 32;
    char v16 = *(unsigned char *)(v10 + 32);
    uint64_t v35 = v10 + 80;
    while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << v16)
    {
      unint64_t v19 = (unint64_t)v11 >> 6;
      if ((*(void *)(v15 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0) {
        goto LABEL_26;
      }
      if (*(_DWORD *)(v10 + 36) != v13) {
        goto LABEL_27;
      }
      uint64_t v43 = v14;
      uint64_t v20 = v6;
      uint64_t v21 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v11);
      uint64_t v22 = *v21;
      uint64_t v23 = v21[1];
      uint64_t v24 = *(unsigned __int8 *)(*(void *)(v10 + 56) + v11);
      swift_bridgeObjectRetain();
      v40(v22, v23, v24);
      if (v4)
      {
        swift_release();
        return (void *)swift_bridgeObjectRelease();
      }
      uint64_t v42 = 0;
      swift_bridgeObjectRelease();
      uint64_t v25 = v44;
      uint64_t v46 = v44;
      unint64_t v27 = v44[2];
      unint64_t v26 = v44[3];
      if (v27 >= v26 >> 1)
      {
        sub_10007F8AC(v26 > 1, v27 + 1, 1);
        uint64_t v25 = v46;
      }
      void v25[2] = v27 + 1;
      uint64_t v6 = v20;
      unint64_t v28 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      unint64_t v44 = v25;
      unint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v20 + 32))((unint64_t)v25 + v28 + *(void *)(v20 + 72) * v27, v45, v38);
      uint64_t v10 = v39;
      char v16 = *(unsigned char *)(v39 + 32);
      unint64_t v17 = 1 << v16;
      if (v11 >= 1 << v16) {
        goto LABEL_28;
      }
      uint64_t v29 = *(void *)(v15 + 8 * v19);
      if ((v29 & (1 << v11)) == 0) {
        goto LABEL_29;
      }
      if (*(_DWORD *)(v39 + 36) != v13) {
        goto LABEL_30;
      }
      unint64_t v30 = v29 & (-2 << (v11 & 0x3F));
      if (v30)
      {
        unint64_t v17 = __clz(__rbit64(v30)) | v11 & 0xFFFFFFFFFFFFFFC0;
        uint64_t v4 = v42;
        int64_t v18 = v36;
      }
      else
      {
        unint64_t v31 = v19 + 1;
        unint64_t v32 = (v17 + 63) >> 6;
        uint64_t v4 = v42;
        int64_t v18 = v36;
        if (v19 + 1 < v32)
        {
          unint64_t v33 = *(void *)(v15 + 8 * v31);
          if (v33)
          {
LABEL_21:
            unint64_t v17 = __clz(__rbit64(v33)) + (v31 << 6);
          }
          else
          {
            while (v32 - 2 != v19)
            {
              unint64_t v33 = *(void *)(v35 + 8 * v19++);
              if (v33)
              {
                unint64_t v31 = v19 + 1;
                goto LABEL_21;
              }
            }
          }
        }
      }
      uint64_t v14 = v43 + 1;
      uint64_t v11 = v17;
      if (v43 + 1 == v18) {
        return v44;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  return result;
}

uint64_t sub_10001F8CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EC768);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for SMSMessageUnpacker()
{
  return &type metadata for SMSMessageUnpacker;
}

uint64_t sub_10001F944()
{
  return sub_100020C9C(&qword_1000EC770, (void (*)(uint64_t))&type metadata accessor for SMSMessage);
}

uint64_t sub_10001F98C@<X0>(unint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  v157 = (char *)a1;
  uint64_t v158 = a2;
  uint64_t v138 = a3;
  uint64_t v3 = sub_10001295C(&qword_1000EC678);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v146 = (uint64_t)v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  long long v145 = (char *)v99 - v6;
  uint64_t v7 = sub_10001295C(&qword_1000EC778);
  __chkstk_darwin(v7 - 8);
  long long v147 = (char *)v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_10001295C(&qword_1000EC780);
  uint64_t v137 = *(void *)(v149 - 8);
  __chkstk_darwin(v149);
  uint64_t v144 = (char *)v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_10001295C(&qword_1000EC788);
  uint64_t v136 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v154 = (char *)v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001295C(&qword_1000EC790);
  __chkstk_darwin(v11 - 8);
  uint64_t v141 = (uint64_t)v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000B8BA0();
  __chkstk_darwin(v13 - 8);
  uint64_t v140 = (uint64_t)v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10001295C(&qword_1000EC798);
  __chkstk_darwin(v15 - 8);
  uint64_t v139 = (void (**)(char *, uint64_t, uint64_t))((char *)v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v143 = (unsigned int (**)(void, void, void))sub_1000B8B80();
  uint64_t v142 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))*(v143 - 1);
  __chkstk_darwin(v143);
  int64_t v18 = (char *)v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000BB730();
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000BB740();
  uint64_t v155 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10001295C(&qword_1000EC7A0);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  unint64_t v28 = (char *)v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  unint64_t v30 = (char *)v99 - v29;
  uint64_t v31 = type metadata accessor for SMSDictionary();
  __chkstk_darwin(v31);
  unint64_t v33 = (char *)v99 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B81C0();
  swift_allocObject();
  uint64_t v34 = sub_1000B81B0();
  sub_100020C9C(&qword_1000EC7A8, (void (*)(uint64_t))type metadata accessor for SMSDictionary);
  uint64_t v35 = v162;
  sub_1000B81A0();
  uint64_t v162 = v35;
  if (v35) {
    return swift_release();
  }
  v157 = v24;
  unint64_t v151 = v22;
  uint64_t v153 = v21;
  v134 = v18;
  v131 = v28;
  uint64_t v132 = v34;
  uint64_t v133 = v30;
  uint64_t v37 = *(int *)(v31 + 88);
  uint64_t v135 = v33;
  if (*(void *)&v33[v37]) {
    uint64_t v38 = *(unint64_t **)&v33[v37];
  }
  else {
    uint64_t v38 = (unint64_t *)&_swiftEmptyArrayStorage;
  }
  int64_t v39 = v38[2];
  id v40 = (int *)v31;
  if (v39)
  {
    uint64_t v129 = (int *)v31;
    unint64_t v159 = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10007F8E8(0, v39, 0);
    uint64_t v41 = v159;
    Swift::String v150 = (void (**)(char *, uint64_t))(v155 + 32);
    uint64_t v42 = 4;
    long long v152 = v38;
    do
    {
      uint64_t v156 = v39;
      uint64_t v158 = v41;
      long long v43 = *(_OWORD *)&v38[v42 + 2];
      long long v45 = *(_OWORD *)&v38[v42 + 4];
      long long v44 = *(_OWORD *)&v38[v42 + 6];
      v161[0] = *(_OWORD *)&v38[v42];
      v161[1] = v43;
      v161[2] = v45;
      v161[3] = v44;
      sub_100020CE4((uint64_t)v161);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v46 = v162;
      sub_10003C834((uint64_t)v153);
      if (v46)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100020D48((uint64_t)v161);
        swift_release();
        swift_release();
        sub_100020DAC((uint64_t)v135);
        return swift_bridgeObjectRelease();
      }
      sub_1000BB720();
      uint64_t v162 = 0;
      sub_100020D48((uint64_t)v161);
      uint64_t v41 = v158;
      unint64_t v159 = v158;
      unint64_t v48 = v158[2];
      unint64_t v47 = v158[3];
      uint64_t v38 = v152;
      if (v48 >= v47 >> 1)
      {
        sub_10007F8E8(v47 > 1, v48 + 1, 1);
        uint64_t v41 = v159;
      }
      _OWORD v41[2] = v48 + 1;
      (*(void (**)(unint64_t, char *, unint64_t))(v155 + 32))((unint64_t)v41+ ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80))+ *(void *)(v155 + 72) * v48, v157, v151);
      v42 += 8;
      int64_t v39 = v156 - 1;
    }
    while (v156 != 1);
    uint64_t v49 = (uint64_t)v133;
    id v40 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = &_swiftEmptyArrayStorage;
    uint64_t v49 = (uint64_t)v133;
  }
  uint64_t v50 = v143;
  uint64_t v51 = v142;
  swift_bridgeObjectRetain();
  sub_1000BB0F0();
  uint64_t v52 = v162;
  sub_1000B8B60();
  if (v52)
  {
    swift_errorRelease();
    uint64_t v53 = sub_1000B8B70();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v49, 1, 1, v53);
  }
  else
  {
    uint64_t v54 = sub_1000B8B70();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v49, 0, 1, v54);
  }
  uint64_t v55 = (uint64_t)v135;
  uint64_t v56 = v139;
  uint64_t v128 = *(void *)v135;
  int v127 = v135[8];
  sub_1000182A0((uint64_t)&v135[v40[5]], (uint64_t)v139, &qword_1000EC798);
  if (((unsigned int (*)(void, uint64_t, void))v51[6])(v56, 1, v50) == 1)
  {
    ((void (*)(char *, void, unsigned int (**)(void, void, void)))v51[13])(v134, enum case for SMSMessage.FilterSubCategoryType.filterSubCategoryNone(_:), v50);
    sub_1000184DC((uint64_t)v56, &qword_1000EC798);
  }
  else
  {
    ((void (*)(char *, void, unsigned int (**)(void, void, void)))v51[4])(v134, v56, v50);
  }
  os_log_type_t v57 = (uint64_t *)(v55 + v40[6]);
  uint64_t v58 = *v57;
  uint64_t v59 = v57[1];
  swift_bridgeObjectRetain();
  sub_100057AD8(v140);
  uint64_t v162 = 0;
  uint64_t v124 = v58;
  uint64_t v125 = v59;
  uint64_t v158 = v41;
  uint64_t v60 = v40[9];
  uint64_t v126 = *(void *)(v55 + v40[8]);
  sub_1000182A0(v55 + v60, v141, &qword_1000EC790);
  uint64_t v61 = v40[11];
  uint64_t v62 = (uint64_t *)(v55 + v40[10]);
  uint64_t v63 = v62[1];
  uint64_t v123 = *v62;
  uint64_t v121 = *(void *)(v55 + v61);
  int v120 = *(unsigned __int8 *)(v55 + v61 + 8);
  uint64_t v64 = v40[13];
  unint64_t v65 = (uint64_t *)(v55 + v40[12]);
  uint64_t v66 = v65[1];
  uint64_t v119 = *v65;
  uint64_t v67 = *(void *)(v55 + v64 + 8);
  uint64_t v117 = *(void *)(v55 + v64);
  uint64_t v68 = v40[15];
  uint64_t v69 = (uint64_t *)(v55 + v40[14]);
  uint64_t v70 = v69[1];
  uint64_t v115 = *v69;
  uint64_t v71 = *(void *)(v55 + v68 + 8);
  uint64_t v113 = *(void *)(v55 + v68);
  uint64_t v72 = v40[17];
  uint64_t v73 = (uint64_t *)(v55 + v40[16]);
  uint64_t v74 = v73[1];
  uint64_t v111 = *v73;
  uint64_t v75 = *(void *)(v55 + v72 + 8);
  uint64_t v109 = *(void *)(v55 + v72);
  uint64_t v76 = v40[19];
  uint64_t v77 = v55 + v40[18];
  uint64_t v107 = *(void *)v77;
  int v106 = *(unsigned __int8 *)(v77 + 8);
  uint64_t v78 = *(void *)(v55 + v76 + 8);
  uint64_t v105 = *(void *)(v55 + v76);
  uint64_t v104 = v78;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v122 = v63;
  swift_bridgeObjectRetain();
  uint64_t v118 = v66;
  swift_bridgeObjectRetain();
  uint64_t v116 = v67;
  swift_bridgeObjectRetain();
  uint64_t v114 = v70;
  swift_bridgeObjectRetain();
  uint64_t v112 = v71;
  swift_bridgeObjectRetain();
  uint64_t v110 = v74;
  swift_bridgeObjectRetain();
  uint64_t v108 = v75;
  swift_bridgeObjectRetain();
  uint64_t v103 = sub_100057CE0();
  uint64_t v102 = v79;
  unint64_t v80 = (uint64_t *)(v55 + v40[21]);
  uint64_t v81 = v80[1];
  uint64_t v101 = *v80;
  uint64_t v82 = v40[24];
  v99[1] = *(unsigned __int8 *)(v55 + v40[23]);
  v99[0] = *(unsigned __int8 *)(v55 + v82);
  unint64_t v83 = v38[2];
  uint64_t v100 = v81;
  if (!v83)
  {
    swift_bridgeObjectRetain();
    LODWORD(v156) = 0;
    uint64_t v98 = (uint64_t)v135;
    goto LABEL_34;
  }
  uint64_t v129 = v40;
  uint64_t v143 = (unsigned int (**)(void, void, void))(v137 + 48);
  uint64_t v139 = (void (**)(char *, uint64_t, uint64_t))(v137 + 32);
  uint64_t v130 = (void (**)(char *, uint64_t))(v137 + 8);
  Swift::String v150 = (void (**)(char *, uint64_t))(v136 + 8);
  uint64_t v142 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v137 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v84 = v38 + 11;
  unint64_t v151 = 0x80000001000C9660;
  long long v152 = v38;
  uint64_t v85 = v149;
  uint64_t v86 = v148;
  uint64_t v87 = (uint64_t)v147;
  while (1)
  {
    uint64_t v89 = *(v84 - 1);
    unint64_t v88 = *v84;
    uint64_t v91 = (void *)*(v84 - 5);
    uint64_t v90 = *(v84 - 4);
    uint64_t v92 = *(v84 - 6);
    uint64_t v153 = (char *)*(v84 - 2);
    swift_bridgeObjectRetain();
    uint64_t v155 = v92;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v156 = v89;
    v157 = (char *)v88;
    sub_100017FA4(v89, v88);
    sub_10001295C(&qword_1000EC7B0);
    sub_1000B8460();
    if (v90) {
      break;
    }
    (*v142)(v87, 1, 1, v85);
LABEL_24:
    (*v150)(v154, v86);
    sub_1000184DC(v87, &qword_1000EC778);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_25:
    v84 += 8;
    swift_bridgeObjectRelease();
    sub_1000180CC(v156, (unint64_t)v157);
    if (!--v83)
    {
      swift_bridgeObjectRelease();
      LODWORD(v156) = 0;
      goto LABEL_33;
    }
  }
  unint64_t v159 = v91;
  uint64_t v160 = v90;
  sub_100020E08();
  sub_100020E5C();
  uint64_t v85 = v149;
  sub_1000BB8A0();
  if ((*v143)(v87, 1, v85) == 1) {
    goto LABEL_24;
  }
  uint64_t v93 = v144;
  (*v139)(v144, v87, v85);
  swift_getKeyPath();
  sub_1000B8470();
  swift_release();
  sub_1000BB970();
  swift_bridgeObjectRelease();
  uint64_t v94 = (uint64_t)v145;
  sub_1000B8350();
  swift_bridgeObjectRelease();
  uint64_t v95 = v146;
  sub_1000182A0(v94, v146, &qword_1000EC678);
  uint64_t v96 = sub_1000B8380();
  uint64_t v97 = *(void *)(v96 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96) == 1)
  {
    sub_1000184DC(v94, &qword_1000EC678);
    uint64_t v85 = v149;
    (*v130)(v93, v149);
    uint64_t v86 = v148;
    (*v150)(v154, v148);
    sub_1000184DC(v95, &qword_1000EC678);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v87 = (uint64_t)v147;
    goto LABEL_25;
  }
  sub_1000B8360();
  sub_1000184DC(v94, &qword_1000EC678);
  (*v130)(v93, v149);
  (*v150)(v154, v148);
  (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v95, v96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000180CC(v156, (unint64_t)v157);
  swift_bridgeObjectRelease();
  LODWORD(v156) = 1;
LABEL_33:
  uint64_t v98 = (uint64_t)v135;
  id v40 = v129;
LABEL_34:
  swift_bridgeObjectRelease();
  v157 = *(char **)(v98 + v40[29]);
  sub_1000182A0((uint64_t)v133, (uint64_t)v131, &qword_1000EC7A0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000B8B90();
  swift_release();
  sub_1000184DC((uint64_t)v133, &qword_1000EC7A0);
  return sub_100020DAC(v98);
}

uint64_t sub_100020C84@<X0>(unint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10001F98C(a1, a2, a3);
}

uint64_t sub_100020C9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100020CE4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  unint64_t v3 = *(void *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100017FA4(v2, v3);
  return a1;
}

uint64_t sub_100020D48(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  unint64_t v3 = *(void *)(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000180CC(v2, v3);
  return a1;
}

uint64_t sub_100020DAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SMSDictionary();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100020E08()
{
  unint64_t result = qword_1000EC7B8;
  if (!qword_1000EC7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC7B8);
  }
  return result;
}

unint64_t sub_100020E5C()
{
  unint64_t result = qword_1000EC7C0;
  if (!qword_1000EC7C0)
  {
    sub_100014D68(&qword_1000EC788);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC7C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactMessageUnpacker()
{
  return &type metadata for ContactMessageUnpacker;
}

unint64_t sub_100020ECC()
{
  unint64_t result = qword_1000EC7C8;
  if (!qword_1000EC7C8)
  {
    sub_1000B9D40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC7C8);
  }
  return result;
}

void sub_100020F24(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000B9D20();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class isa = sub_1000B82B0().super.isa;
  id v7 = extractFirstContactFromData((uint64_t)isa);

  if (v7)
  {
    id v8 = [v7 familyName];
    uint64_t v9 = sub_1000BB900();

    id v10 = [v7 givenName];
    uint64_t v11 = sub_1000BB900();
    uint64_t v36 = v12;

    uint64_t v13 = self;
    id v14 = [v13 stringFromContact:v7 style:0];
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = sub_1000BB900();
      uint64_t v30 = v17;
      uint64_t v31 = v16;
    }
    else
    {
      uint64_t v30 = 0;
      uint64_t v31 = 0;
    }
    id v18 = [v13 nameOrderForContact:v7];
    uint64_t v32 = v11;
    if (v18 == (id)1) {
      uint64_t v19 = v11;
    }
    else {
      uint64_t v19 = v9;
    }
    uint64_t v29 = v19;
    swift_bridgeObjectRetain();
    id v20 = [v7 contactType];
    uint64_t v26 = a1;
    uint64_t v34 = v5;
    uint64_t v35 = v1;
    uint64_t v33 = v9;
    if (v20 == (id)1)
    {
      id v21 = objc_msgSend(v7, "organizationName", v26);
      uint64_t v22 = sub_1000BB900();
      uint64_t v27 = v23;
      uint64_t v28 = v22;
    }
    else
    {
      uint64_t v27 = 0;
      uint64_t v28 = 0;
    }
    id v24 = objc_msgSend(v7, "organizationName", v26, v27, v28);
    sub_1000BB900();

    [v13 nameOrderForContact:v7];
    swift_bridgeObjectRetain();
    uint64_t v25 = v35;
    sub_1000B9D10();
    if (!v25) {
      sub_1000B9D30();
    }
  }
  else
  {
    sub_100021208();
    swift_allocError();
    swift_willThrow();
  }
}

void sub_1000211F0(uint64_t a1@<X8>)
{
}

unint64_t sub_100021208()
{
  unint64_t result = qword_1000EC7D0;
  if (!qword_1000EC7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC7D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactMessageUnpacker.ContactsParsingError()
{
  return &type metadata for ContactMessageUnpacker.ContactsParsingError;
}

ValueMetadata *type metadata accessor for PassPreviewUnpacker()
{
  return &type metadata for PassPreviewUnpacker;
}

uint64_t sub_10002127C()
{
  return sub_10002320C(&qword_1000EC7D8, (void (*)(uint64_t))&type metadata accessor for PassPreview);
}

uint64_t sub_1000212C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v156 = a2;
  uint64_t v154 = a1;
  uint64_t v131 = a3;
  uint64_t v134 = sub_1000BB410();
  uint64_t v133 = *(void *)(v134 - 8);
  uint64_t v3 = __chkstk_darwin(v134);
  uint64_t v132 = (uint64_t)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v135 = (uint64_t)&v125 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v136 = (char *)&v125 - v8;
  __chkstk_darwin(v7);
  long long v147 = (char *)&v125 - v9;
  uint64_t v10 = sub_10001295C(&qword_1000EC7E0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v130 = (uint64_t)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v129 = (uint64_t)&v125 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v128 = (uint64_t)&v125 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v137 = (uint64_t)&v125 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v138 = (uint64_t)&v125 - v20;
  __chkstk_darwin(v19);
  uint64_t v141 = (uint64_t)&v125 - v21;
  uint64_t v140 = sub_1000B8E60();
  uint64_t v139 = *(void *)(v140 - 8);
  uint64_t v22 = __chkstk_darwin(v140);
  int v127 = (char *)&v125 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v143 = (uint64_t)&v125 - v24;
  uint64_t v25 = sub_10001295C(&qword_1000EC660);
  __chkstk_darwin(v25 - 8);
  uint64_t v146 = (char *)&v125 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10001295C(&qword_1000EC7E8);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v126 = (char *)&v125 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v142 = (char *)&v125 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v144 = (uint64_t)&v125 - v33;
  __chkstk_darwin(v32);
  uint64_t v145 = (uint64_t)&v125 - v34;
  uint64_t v158 = sub_1000BB3B0();
  uint64_t v165 = *(void *)(v158 - 8);
  uint64_t v35 = __chkstk_darwin(v158);
  uint64_t v155 = (char *)&v125 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v125 - v37;
  uint64_t v39 = sub_1000BB3E0();
  uint64_t v153 = v39;
  uint64_t v40 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v42 = (char *)&v125 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v148 = sub_1000BBBE0();
  unint64_t v151 = sub_100018190();
  long long v43 = (void *)sub_1000BBCF0();
  uint64_t v150 = sub_10001295C(&qword_1000EC5C8);
  uint64_t v44 = swift_allocObject();
  long long v149 = xmmword_1000BF8A0;
  *(_OWORD *)(v44 + 16) = xmmword_1000BF8A0;
  sub_1000BB3A0();
  uint64_t v45 = sub_1000BB3C0();
  uint64_t v47 = v46;
  long long v152 = *(void (**)(char *, uint64_t))(v40 + 8);
  v152(v42, v39);
  v161 = (void *)v45;
  uint64_t v162 = v47;
  uint64_t v48 = sub_1000BB200();
  uint64_t v50 = v49;
  swift_bridgeObjectRelease();
  *(void *)(v44 + 56) = &type metadata for String;
  unint64_t v51 = sub_10001824C();
  *(void *)(v44 + 64) = v51;
  *(void *)(v44 + 32) = v48;
  *(void *)(v44 + 40) = v50;
  sub_1000B8780();

  swift_bridgeObjectRelease();
  int v148 = sub_1000BBBC0();
  uint64_t v52 = (void *)sub_1000BBCF0();
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = v149;
  sub_1000B8E90();
  sub_1000BB3A0();
  uint64_t v54 = *(void (**)(char *, uint64_t))(v165 + 8);
  v165 += 8;
  v54(v38, v158);
  uint64_t v55 = sub_1000BB3C0();
  uint64_t v57 = v56;
  v152(v42, v153);
  v161 = (void *)v55;
  uint64_t v162 = v57;
  uint64_t v58 = sub_1000BB200();
  uint64_t v60 = v59;
  swift_bridgeObjectRelease();
  *(void *)(v53 + 56) = &type metadata for String;
  *(void *)(v53 + 64) = v51;
  *(void *)(v53 + 32) = v58;
  *(void *)(v53 + 40) = v60;
  sub_1000B8780();

  uint64_t v61 = v155;
  swift_bridgeObjectRelease();
  sub_1000B8E90();
  uint64_t v159 = v154;
  uint64_t v160 = v61;
  sub_10001295C(&qword_1000EC7F0);
  uint64_t v62 = v157;
  sub_1000BB380();
  if (v62) {
    return ((uint64_t (*)(char *, uint64_t))v54)(v61, v158);
  }
  uint64_t v64 = v146;
  uint64_t v65 = (uint64_t)v147;
  uint64_t v66 = v161;
  v54(v61, v158);
  if (v66)
  {
    id v67 = [v66 image];
    if (v67)
    {
      id v68 = v67;
      type metadata accessor for CGImage(0);
      uint64_t v163 = v69;
      v164 = &protocol witness table for CGImageRef;
      v161 = v68;
      uint64_t v70 = sub_1000BB440();
      uint64_t v71 = v64;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v64, 1, 1, v70);
      uint64_t v72 = v145;
      sub_1000BB450();
      uint64_t v73 = sub_1000BB470();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v72, 0, 1, v73);
    }
    else
    {
      uint64_t v75 = sub_1000BB470();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v145, 1, 1, v75);
      uint64_t v71 = v64;
    }
    uint64_t v74 = (uint64_t)v142;
    id v76 = [v66 icon];
    if (v76)
    {
      id v77 = v76;
      type metadata accessor for CGImage(0);
      uint64_t v163 = v78;
      v164 = &protocol witness table for CGImageRef;
      v161 = v77;
      uint64_t v79 = sub_1000BB440();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v71, 1, 1, v79);
      uint64_t v80 = v144;
      sub_1000BB450();
      uint64_t v81 = sub_1000BB470();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v80, 0, 1, v81);
    }
    else
    {
      uint64_t v82 = sub_1000BB470();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v144, 1, 1, v82);
    }
    sub_100022540(v66, v143);
    id v83 = [v66 primaryText];
    if (v83)
    {
      unint64_t v84 = v83;
      sub_1000BB900();
      uint64_t v86 = v85;
    }
    else
    {
      uint64_t v86 = 0;
    }
    id v87 = [v66 primaryColor];
    sub_1000BB900();

    if (v86)
    {
      swift_bridgeObjectRetain();
      sub_100022E80(v65);
      uint64_t v89 = v133;
      uint64_t v90 = v134;
      (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v136, v65, v134);
      uint64_t v91 = v141;
      sub_1000B8E70();
      uint64_t v92 = v89;
      uint64_t v74 = (uint64_t)v142;
      (*(void (**)(char *, uint64_t))(v92 + 8))(v147, v90);
      uint64_t v93 = sub_1000B8E80();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v91, 0, 1, v93);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v88 = sub_1000B8E80();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v141, 1, 1, v88);
    }
    swift_bridgeObjectRelease();
    id v94 = [v66 secondaryText];
    if (v94)
    {
      uint64_t v95 = v94;
      sub_1000BB900();
      uint64_t v97 = v96;
    }
    else
    {
      uint64_t v97 = 0;
    }
    id v98 = [v66 secondaryColor];
    sub_1000BB900();

    if (v97)
    {
      swift_bridgeObjectRetain();
      uint64_t v99 = v135;
      sub_100022E80(v135);
      uint64_t v101 = v133;
      uint64_t v102 = v136;
      uint64_t v103 = v99;
      uint64_t v104 = v134;
      (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v136, v103, v134);
      uint64_t v105 = v138;
      int v106 = v102;
      sub_1000B8E70();
      uint64_t v107 = v101;
      uint64_t v74 = (uint64_t)v142;
      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v135, v104);
      uint64_t v108 = sub_1000B8E80();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v105, 0, 1, v108);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v100 = sub_1000B8E80();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v138, 1, 1, v100);
      int v106 = v136;
    }
    swift_bridgeObjectRelease();
    id v109 = [v66 tertiaryText];
    if (v109)
    {
      uint64_t v110 = v109;
      sub_1000BB900();
      uint64_t v112 = v111;
    }
    else
    {
      uint64_t v112 = 0;
    }
    id v113 = [v66 tertiaryColor];
    sub_1000BB900();

    if (v112)
    {
      swift_bridgeObjectRetain();
      uint64_t v114 = v132;
      sub_100022E80(v132);
      uint64_t v116 = v133;
      uint64_t v117 = v114;
      uint64_t v118 = v134;
      (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v106, v117, v134);
      uint64_t v119 = v137;
      uint64_t v120 = (uint64_t)v126;
      sub_1000B8E70();
      (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v132, v118);
      uint64_t v74 = (uint64_t)v142;
      uint64_t v121 = sub_1000B8E80();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v119, 0, 1, v121);
      swift_bridgeObjectRelease();
      uint64_t v122 = v140;
      uint64_t v123 = v139;
    }
    else
    {
      uint64_t v115 = sub_1000B8E80();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56))(v137, 1, 1, v115);
      uint64_t v122 = v140;
      uint64_t v123 = v139;
      uint64_t v120 = (uint64_t)v126;
    }
    swift_bridgeObjectRelease();
    sub_1000182A0(v145, v74, &qword_1000EC7E8);
    sub_1000182A0(v144, v120, &qword_1000EC7E8);
    (*(void (**)(char *, uint64_t, uint64_t))(v123 + 16))(v127, v143, v122);
    sub_1000182A0(v141, v128, &qword_1000EC7E0);
    uint64_t v124 = v138;
    sub_1000182A0(v138, v129, &qword_1000EC7E0);
    sub_1000182A0(v137, v130, &qword_1000EC7E0);
    sub_1000B8EA0();

    sub_1000184DC(v137, &qword_1000EC7E0);
    sub_1000184DC(v124, &qword_1000EC7E0);
    sub_1000184DC(v141, &qword_1000EC7E0);
    (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v143, v140);
    sub_1000184DC(v144, &qword_1000EC7E8);
    return sub_1000184DC(v145, &qword_1000EC7E8);
  }
  else
  {
    sub_1000BB6C0();
    sub_10002320C((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
}

uint64_t sub_100022540@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v28[7] = a2;
  uint64_t v4 = sub_1000BB410();
  v28[0] = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v28 - v8;
  uint64_t v10 = sub_10001295C(&qword_1000EC660);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10001295C(&qword_1000EC7E8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v28 - v17;
  id v19 = [a1 backgroundImage];
  if (v19)
  {
    id v20 = v19;
    type metadata accessor for CGImage(0);
    v28[4] = v21;
    v28[5] = &protocol witness table for CGImageRef;
    v28[1] = v20;
    uint64_t v22 = sub_1000BB440();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v12, 1, 1, v22);
    sub_1000BB450();
    uint64_t v23 = sub_1000BB470();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v18, 0, 1, v23);
  }
  else
  {
    uint64_t v24 = sub_1000BB470();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v18, 1, 1, v24);
  }
  id v25 = [a1 backgroundColor];
  sub_1000BB900();

  sub_100022E80((uint64_t)v9);
  if (v2)
  {
    sub_1000184DC((uint64_t)v18, &qword_1000EC7E8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1000182A0((uint64_t)v18, (uint64_t)v16, &qword_1000EC7E8);
    uint64_t v27 = v28[0];
    (*(void (**)(char *, char *, uint64_t))(v28[0] + 16))(v7, v9, v4);
    sub_1000B8E50();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v4);
    return sub_1000184DC((uint64_t)v18, &qword_1000EC7E8);
  }
}

uint64_t sub_1000228B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000BB3E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [self defaultManager];
  sub_1000BB3A0();
  sub_1000BB3C0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  NSString v9 = sub_1000BB8D0();
  swift_bridgeObjectRelease();
  LOBYTE(v4) = [v8 fileExistsAtPath:v9 isDirectory:0];

  if (v4)
  {
    __chkstk_darwin(v10);
    *(&v12 - 2) = a2;
    *(&v12 - 1) = a1;
    sub_10001295C(&qword_1000EC7F0);
    return sub_1000BB380();
  }
  else
  {
    sub_1000BB6C0();
    sub_10002320C((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
}

void sub_100022B30(NSURL *a1@<X0>, NSURL *a2@<X1>, uint64_t *a3@<X8>)
{
  v24[0] = a2;
  uint64_t v26 = a3;
  uint64_t v25 = sub_1000B8240();
  uint64_t v4 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000BB3E0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(self, "defaultManager", v24[0]);
  v24[1] = a1;
  sub_1000BB3A0();
  sub_1000BB3C0();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v8 + 8);
  v12(v10, v7);
  NSString v13 = sub_1000BB8D0();
  swift_bridgeObjectRelease();
  unsigned __int8 v14 = [v11 isWritableFileAtPath:v13];

  if (v14)
  {
    sub_1000BB3A0();
    sub_1000BB3D0();
    v12(v10, v7);
    sub_1000B81F0(v15);
    v24[0] = v16;
    uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v18 = v25;
    v17(v6, v25);
    sub_1000BB3A0();
    sub_1000BB3D0();
    v12(v10, v7);
    sub_1000B81F0(v19);
    uint64_t v21 = v20;
    v17(v6, v18);
    uint64_t v22 = v24[0];
    uint64_t MessagesPreview = PKPassSecurePreviewContextCreateMessagesPreview(v24[0], v21);

    *uint64_t v26 = MessagesPreview;
  }
  else
  {
    sub_1000BB6C0();
    sub_10002320C((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();
  }
}

void sub_100022E80(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10001295C(&qword_1000EC7F8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  NSString v6 = sub_1000BB8D0();
  swift_bridgeObjectRelease();
  id v7 = [self colorFromString:v6];

  if (v7)
  {
    if ([v7 CGColor])
    {
      sub_1000BB400();
      if (v1)
      {
        swift_errorRelease();
        uint64_t v8 = sub_1000BB410();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
        sub_1000184DC((uint64_t)v5, &qword_1000EC7F8);
        sub_1000BB6C0();
        sub_10002320C((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
        sub_1000BB6B0();
        swift_willThrow();
      }
      else
      {
        uint64_t v9 = sub_1000BB410();
        uint64_t v10 = *(void *)(v9 - 8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);

        (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v5, v9);
      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1000BB6C0();
    sub_10002320C((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();
  }
}

uint64_t sub_1000231D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1000212C4(a1, a2, a3);
}

uint64_t sub_1000231F0()
{
  return sub_1000228B8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10002320C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100023254(uint64_t *a1@<X8>)
{
  sub_100022B30(*(NSURL **)(v1 + 16), *(NSURL **)(v1 + 24), a1);
}

uint64_t sub_100023270@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10001295C(&qword_1000EC628);
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_1000BBF10();
  uint64_t v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  uint64_t result = type metadata accessor for MessageDictionary();
  id v7 = (uint64_t *)(v1 + *(int *)(result + 136));
  unint64_t v8 = v7[1];
  long long v9 = xmmword_1000BFCC0;
  long long v10 = 0uLL;
  if (v8 >> 60 == 15)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    __int16 v13 = 0;
    long long v14 = 0uLL;
    long long v15 = 0uLL;
    long long v16 = 0uLL;
  }
  else
  {
    uint64_t v17 = *v7;
    sub_1000B81C0();
    swift_allocObject();
    sub_100017F4C(v17, v8);
    sub_1000B81B0();
    sub_100023C5C();
    sub_1000B81A0();
    swift_release();
    uint64_t result = sub_1000180CC(v17, v8);
    uint64_t v11 = v18;
    uint64_t v12 = v19;
    long long v9 = v20;
    long long v10 = v21;
    long long v14 = v22;
    long long v15 = v23;
    long long v16 = v24;
    __int16 v13 = v25;
  }
  *(void *)a1 = v11;
  *(void *)(a1 + 8) = v12;
  *(_OWORD *)(a1 + 16) = v9;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v14;
  *(_OWORD *)(a1 + 64) = v15;
  *(_OWORD *)(a1 + 80) = v16;
  *(_WORD *)(a1 + 96) = v13;
  return result;
}

uint64_t sub_1000236F8@<X0>(uint64_t a1@<X8>)
{
  sub_100023270((uint64_t)v5);
  sub_100023B24((uint64_t)v5, (uint64_t)v6);
  if (v7 == 1)
  {
    uint64_t v2 = sub_1000B8F00();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000B8EF0();
    sub_100023B8C(v5);
    uint64_t v3 = sub_1000B8F00();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a1, 0, 1, v3);
  }
}

uint64_t sub_1000238D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000BB540();
  __chkstk_darwin(v2 - 8);
  sub_100023270((uint64_t)v6);
  sub_100023B24((uint64_t)v6, (uint64_t)v7);
  if (v7[3] == 1)
  {
    uint64_t v3 = sub_1000BB560();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a1, 1, 1, v3);
  }
  else
  {
    sub_1000BB530();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000BB550();
    sub_100023B8C(v6);
    uint64_t v4 = sub_1000BB560();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_100023B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EC800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100023B8C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100023BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_100023C5C()
{
  unint64_t result = qword_1000EC808;
  if (!qword_1000EC808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC808);
  }
  return result;
}

uint64_t sub_100023CB0(uint64_t a1)
{
  uint64_t v2 = sub_10001295C(&qword_1000EC628);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s18MessageSummaryInfoVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s18MessageSummaryInfoVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s18MessageSummaryInfoVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = a2[10];
  *(void *)(a1 + 88) = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(unsigned char *)(a1 + 97) = *((unsigned char *)a2 + 97);
  return a1;
}

__n128 _s18MessageSummaryInfoVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s18MessageSummaryInfoVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  return a1;
}

uint64_t _s18MessageSummaryInfoVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 98)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s18MessageSummaryInfoVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 96) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 98) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 98) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *_s18MessageSummaryInfoVMa()
{
  return &_s18MessageSummaryInfoVN;
}

ValueMetadata *type metadata accessor for ErrorMessageUnpacker()
{
  return &type metadata for ErrorMessageUnpacker;
}

unint64_t sub_100024094(uint64_t a1)
{
  unint64_t result = sub_100012C94();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000240BC()
{
  return sub_10002428C(&qword_1000EC810, (void (*)(uint64_t))&type metadata accessor for ErrorMessage);
}

uint64_t sub_100024104()
{
  uint64_t v1 = sub_1000B8700();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  int v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B81C0();
  swift_allocObject();
  sub_1000B81B0();
  sub_10002428C(&qword_1000EC620, (void (*)(uint64_t))&type metadata accessor for TopLevelDictionary);
  sub_1000B81A0();
  uint64_t result = swift_release();
  if (!v0)
  {
    sub_1000242D4();
    swift_allocError();
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

uint64_t sub_10002428C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000242D4()
{
  unint64_t result = qword_1000EC818;
  if (!qword_1000EC818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC818);
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorMessageUnpacker.ErrorMessageTypeNotSupported()
{
  return &type metadata for ErrorMessageUnpacker.ErrorMessageTypeNotSupported;
}

uint64_t destroy for RelayReachabilityContextDictionary()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RelayReachabilityContextDictionary(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RelayReachabilityContextDictionary(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
  *(unsigned char *)(a1 + 91) = *(unsigned char *)(a2 + 91);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  return a1;
}

__n128 initializeWithTake for RelayReachabilityContextDictionary(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 77) = *(_OWORD *)(a2 + 77);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for RelayReachabilityContextDictionary(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  return a1;
}

uint64_t getEnumTagSinglePayload for RelayReachabilityContextDictionary(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 93)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RelayReachabilityContextDictionary(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 92) = 0;
    *(_DWORD *)(result + 88) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 93) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 93) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RelayReachabilityContextDictionary()
{
  return &type metadata for RelayReachabilityContextDictionary;
}

uint64_t sub_1000246B4(char a1)
{
  uint64_t result = 26979;
  switch(a1)
  {
    case 1:
      uint64_t result = 29539;
      break;
    case 2:
      uint64_t result = 1751215219;
      break;
    case 3:
      uint64_t result = 1935764595;
      break;
    case 4:
      uint64_t result = 7566700;
      break;
    case 5:
      uint64_t result = 7171187;
      break;
    case 6:
      uint64_t result = 25699;
      break;
    case 7:
      uint64_t result = 26728;
      break;
    case 8:
      uint64_t result = 29286;
      break;
    case 9:
      uint64_t result = 28006;
      break;
    case 10:
      uint64_t result = 25456;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100024780(char a1)
{
  uint64_t result = 26979;
  switch(a1)
  {
    case 1:
      uint64_t result = 29539;
      break;
    case 2:
      uint64_t result = 1751215219;
      break;
    case 3:
      uint64_t result = 1935764595;
      break;
    case 4:
      uint64_t result = 7566700;
      break;
    case 5:
      uint64_t result = 7171187;
      break;
    case 6:
      uint64_t result = 25699;
      break;
    case 7:
      uint64_t result = 26728;
      break;
    case 8:
      uint64_t result = 29286;
      break;
    case 9:
      uint64_t result = 28006;
      break;
    case 10:
      uint64_t result = 25456;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10002484C(void *a1)
{
  uint64_t v3 = sub_10001295C(&qword_1000EC830);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014C68(a1, a1[3]);
  sub_1000253E8();
  sub_1000BC280();
  v8[15] = 0;
  sub_1000BC0A0();
  if (!v1)
  {
    v8[14] = 1;
    sub_1000BC110();
    v8[12] = 2;
    sub_1000BC0A0();
    v8[11] = 3;
    sub_1000BC0A0();
    v8[10] = 4;
    sub_1000BC0A0();
    v8[9] = 5;
    sub_1000BC0A0();
    v8[8] = 6;
    sub_1000BC0B0();
    v8[7] = 7;
    sub_1000BC0B0();
    v8[6] = 8;
    sub_1000BC0B0();
    v8[5] = 9;
    sub_1000BC0B0();
    v8[4] = 10;
    sub_1000BC0B0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100024B1C(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1000246B4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1000246B4(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1000BC1A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_100024BA8()
{
  char v1 = *v0;
  sub_1000BC230();
  sub_1000246B4(v1);
  sub_1000BB990();
  swift_bridgeObjectRelease();
  return sub_1000BC250();
}

uint64_t sub_100024C0C()
{
  sub_1000246B4(*v0);
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100024C60()
{
  char v1 = *v0;
  sub_1000BC230();
  sub_1000246B4(v1);
  sub_1000BB990();
  swift_bridgeObjectRelease();
  return sub_1000BC250();
}

uint64_t sub_100024CC0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100024E3C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100024CF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000246B4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100024D1C()
{
  return sub_100024780(*v0);
}

uint64_t sub_100024D24@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100024E3C(a1, a2);
  *a3 = result;
  return result;
}

void sub_100024D4C(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_100024D58(uint64_t a1)
{
  unint64_t v2 = sub_1000253E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100024D94(uint64_t a1)
{
  unint64_t v2 = sub_1000253E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100024DD0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100024E88(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    a2[2] = v7[2];
    a2[3] = v5;
    a2[4] = v8[0];
    *(_OWORD *)((char *)a2 + 77) = *(_OWORD *)((char *)v8 + 13);
    double result = *(double *)v7;
    long long v6 = v7[1];
    *a2 = v7[0];
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_100024E24(void *a1)
{
  return sub_10002484C(a1);
}

uint64_t sub_100024E3C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000E0B98;
  v6._object = a2;
  unint64_t v4 = sub_1000BBFA0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xB) {
    return 11;
  }
  else {
    return v4;
  }
}

uint64_t sub_100024E88@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000EC820);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_1000253E8();
  sub_1000BC270();
  if (v2)
  {
    sub_100015C54((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v51 = 0;
    uint64_t v9 = sub_1000BBFB0();
    uint64_t v11 = v10;
    char v50 = 1;
    swift_bridgeObjectRetain();
    int v40 = sub_1000BC020();
    char v49 = 2;
    uint64_t v12 = sub_1000BBFB0();
    uint64_t v14 = v13;
    uint64_t v38 = v12;
    char v48 = 3;
    swift_bridgeObjectRetain();
    uint64_t v39 = v14;
    uint64_t v35 = sub_1000BBFB0();
    uint64_t v36 = v9;
    char v47 = 4;
    uint64_t v37 = v15;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1000BBFB0();
    uint64_t v18 = v17;
    uint64_t v33 = v16;
    uint64_t v34 = a2;
    char v46 = 5;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1000BBFB0();
    uint64_t v21 = v20;
    uint64_t v32 = v19;
    char v45 = 6;
    swift_bridgeObjectRetain();
    int v31 = sub_1000BBFC0();
    char v44 = 7;
    int v30 = sub_1000BBFC0();
    char v43 = 8;
    int v29 = sub_1000BBFC0();
    char v42 = 9;
    int v28 = sub_1000BBFC0();
    char v41 = 10;
    LOBYTE(v14) = sub_1000BBFC0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_100015C54((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v37;
    swift_bridgeObjectRelease();
    uint64_t v23 = v39;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    __int16 v25 = v34;
    *uint64_t v34 = v36;
    v25[1] = v11;
    char v26 = BYTE1(v40);
    *((unsigned char *)v25 + 16) = v40;
    *((unsigned char *)v25 + 17) = v26 & 1;
    v25[3] = v38;
    v25[4] = v23;
    v25[5] = v35;
    v25[6] = v22;
    v25[7] = v33;
    v25[8] = v18;
    v25[9] = v32;
    v25[10] = v21;
    *((unsigned char *)v25 + 88) = v31;
    *((unsigned char *)v25 + 89) = v30;
    *((unsigned char *)v25 + 90) = v29;
    *((unsigned char *)v25 + 91) = v28;
    *((unsigned char *)v25 + 92) = v14;
  }
  return result;
}

unint64_t sub_1000253E8()
{
  unint64_t result = qword_1000EC828;
  if (!qword_1000EC828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC828);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RelayReachabilityContextDictionary.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RelayReachabilityContextDictionary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100025598);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RelayReachabilityContextDictionary.CodingKeys()
{
  return &type metadata for RelayReachabilityContextDictionary.CodingKeys;
}

unint64_t sub_1000255D4()
{
  unint64_t result = qword_1000EC838;
  if (!qword_1000EC838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC838);
  }
  return result;
}

unint64_t sub_10002562C()
{
  unint64_t result = qword_1000EC840;
  if (!qword_1000EC840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC840);
  }
  return result;
}

unint64_t sub_100025684()
{
  unint64_t result = qword_1000EC848;
  if (!qword_1000EC848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC848);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadReceiptUnpacker()
{
  return &type metadata for ReadReceiptUnpacker;
}

unint64_t sub_1000256E8(uint64_t a1)
{
  unint64_t result = sub_100012AF0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100025714()
{
  unint64_t result = qword_1000EC850;
  if (!qword_1000EC850)
  {
    sub_1000B8EC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC850);
  }
  return result;
}

uint64_t sub_10002576C(uint64_t a1, uint64_t a2)
{
  return sub_1000A13CC(a1, a2);
}

uint64_t destroy for RelayReachabilityRequestDictionary()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RelayReachabilityRequestDictionary(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RelayReachabilityRequestDictionary(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
  *(unsigned char *)(a1 + 115) = *(unsigned char *)(a2 + 115);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  return a1;
}

__n128 initializeWithTake for RelayReachabilityRequestDictionary(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 109) = *(void *)((char *)a2 + 109);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for RelayReachabilityRequestDictionary(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  return a1;
}

uint64_t getEnumTagSinglePayload for RelayReachabilityRequestDictionary(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 117)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RelayReachabilityRequestDictionary(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 116) = 0;
    *(_DWORD *)(result + 112) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 117) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 117) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RelayReachabilityRequestDictionary()
{
  return &type metadata for RelayReachabilityRequestDictionary;
}

uint64_t sub_100025B78(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001295C(&qword_1000EC870);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_100026400();
  sub_1000BC280();
  *(void *)&v12[0] = *(void *)v3;
  char v14 = 0;
  sub_10001295C(&qword_1000EC550);
  sub_100015CA4(&qword_1000EC558);
  sub_1000BC160();
  if (!v2)
  {
    LOBYTE(v12[0]) = 1;
    sub_1000BC130();
    long long v9 = *(_OWORD *)(v3 + 72);
    _OWORD v12[2] = *(_OWORD *)(v3 + 56);
    v12[3] = v9;
    *(_OWORD *)uint64_t v13 = *(_OWORD *)(v3 + 88);
    *(_OWORD *)&v13[13] = *(_OWORD *)(v3 + 101);
    long long v10 = *(_OWORD *)(v3 + 40);
    v12[0] = *(_OWORD *)(v3 + 24);
    v12[1] = v10;
    char v14 = 2;
    sub_1000264A8();
    sub_1000BC160();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100025D80(char *a1, char *a2)
{
  return sub_10004DFB4(*a1, *a2);
}

Swift::Int sub_100025D8C()
{
  return sub_1000BC250();
}

uint64_t sub_100025DE8()
{
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100025E28()
{
  return sub_1000BC250();
}

uint64_t sub_100025E80@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100026010(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_100025EB0(void *a1@<X8>)
{
  *a1 = qword_1000C01C8[*v1];
  a1[1] = 0xE100000000000000;
}

uint64_t sub_100025ECC()
{
  return qword_1000C01C8[*v0];
}

uint64_t sub_100025EE4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100026010(a1, a2);
  *a3 = result;
  return result;
}

void sub_100025F0C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_100025F18(uint64_t a1)
{
  unint64_t v2 = sub_100026400();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100025F54(uint64_t a1)
{
  unint64_t v2 = sub_100026400();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100025F90@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10002605C(a1, v8);
  if (!v2)
  {
    long long v5 = v12;
    *(_OWORD *)(a2 + 64) = v11;
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 96) = *(_OWORD *)v13;
    *(void *)(a2 + 109) = *(void *)&v13[13];
    long long v6 = v8[1];
    *(_OWORD *)a2 = v8[0];
    *(_OWORD *)(a2 + 16) = v6;
    double result = *(double *)&v9;
    long long v7 = v10;
    *(_OWORD *)(a2 + 32) = v9;
    *(_OWORD *)(a2 + 48) = v7;
  }
  return result;
}

uint64_t sub_100025FF8(void *a1)
{
  return sub_100025B78(a1);
}

uint64_t sub_100026010(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000E0CC0;
  v6._object = a2;
  unint64_t v4 = sub_1000BBFA0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_10002605C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000EC858);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_100026400();
  sub_1000BC270();
  if (v2) {
    return sub_100015C54((uint64_t)a1);
  }
  sub_10001295C(&qword_1000EC550);
  char v47 = 0;
  sub_100015CA4(&qword_1000EC580);
  sub_1000BC070();
  int v31 = a2;
  uint64_t v9 = v32;
  LOBYTE(v32) = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1000BC040();
  uint64_t v12 = v11;
  uint64_t v30 = v10;
  char v47 = 2;
  sub_100026454();
  swift_bridgeObjectRetain();
  sub_1000BC070();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v13 = v33;
  uint64_t v29 = v32;
  int v27 = v35;
  int v28 = v34;
  uint64_t v14 = v37;
  uint64_t v15 = v39;
  uint64_t v25 = v38;
  uint64_t v26 = v36;
  uint64_t v16 = v41;
  uint64_t v17 = v43;
  uint64_t v23 = v42;
  uint64_t v24 = v40;
  int v46 = v45;
  HIDWORD(v22) = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100015C54((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v20 = v30;
  uint64_t v19 = v31;
  *int v31 = v9;
  v19[1] = v20;
  uint64_t v21 = v29;
  v19[2] = v12;
  v19[3] = v21;
  v19[4] = v13;
  *((unsigned char *)v19 + 40) = v28;
  *((unsigned char *)v19 + 41) = v27;
  v19[6] = v26;
  v19[7] = v14;
  v19[8] = v25;
  v19[9] = v15;
  v19[10] = v24;
  v19[11] = v16;
  v19[12] = v23;
  v19[13] = v17;
  *((_DWORD *)v19 + 28) = HIDWORD(v22);
  *((unsigned char *)v19 + 116) = v46;
  return result;
}

unint64_t sub_100026400()
{
  unint64_t result = qword_1000EC860;
  if (!qword_1000EC860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC860);
  }
  return result;
}

unint64_t sub_100026454()
{
  unint64_t result = qword_1000EC868;
  if (!qword_1000EC868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC868);
  }
  return result;
}

unint64_t sub_1000264A8()
{
  unint64_t result = qword_1000EC878;
  if (!qword_1000EC878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC878);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RelayReachabilityRequestDictionary.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RelayReachabilityRequestDictionary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100026658);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RelayReachabilityRequestDictionary.CodingKeys()
{
  return &type metadata for RelayReachabilityRequestDictionary.CodingKeys;
}

unint64_t sub_100026694()
{
  unint64_t result = qword_1000EC880;
  if (!qword_1000EC880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC880);
  }
  return result;
}

unint64_t sub_1000266EC()
{
  unint64_t result = qword_1000EC888;
  if (!qword_1000EC888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC888);
  }
  return result;
}

unint64_t sub_100026744()
{
  unint64_t result = qword_1000EC890;
  if (!qword_1000EC890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC890);
  }
  return result;
}

uint64_t Message.init(messageDictionary:)@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000EC588);
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000B9E10();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[3] = type metadata accessor for MessageDictionary();
  v14[4] = (uint64_t)&off_1000E4B50;
  uint64_t v10 = sub_1000269C4(v14);
  sub_100018538((uint64_t)a1, (uint64_t)v10);
  sub_1000A4FB4(v14, (uint64_t)v9);
  if (v2) {
    return sub_10001861C((uint64_t)a1);
  }
  v13[2] = a2;
  uint64_t v12 = &_swiftEmptyArrayStorage;
  if (*a1) {
    uint64_t v12 = *a1;
  }
  v14[6] = (uint64_t)v12;
  swift_bridgeObjectRetain();
  v13[1] = sub_1000B9DD0();
  v13[0] = sub_1000B9DE0();
  sub_1000B9E00();
  sub_10009CE14();
  sub_1000BB4E0();
  sub_10001861C((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t *sub_1000269C4(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_100026A28(uint64_t a1)
{
  uint64_t v2 = sub_10001295C(&qword_1000EC588);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for DoubleValue(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for DoubleValue(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DoubleValue(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DoubleValue()
{
  return &type metadata for DoubleValue;
}

void *sub_100026AF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_100026B2C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
  }
  return result;
}

void *sub_100026B2C(void *a1)
{
  char v3 = sub_100014C68(a1, a1[3]);
  sub_1000BC260();
  if (v1)
  {
    sub_100015C54((uint64_t)a1);
    return v3;
  }
  sub_100014C68(v18, v18[3]);
  uint64_t v4 = sub_1000BC1B0();
  uint64_t v6 = v5;
  uint64_t v19 = 0;
  uint64_t v7 = __chkstk_darwin(v4);
  v16[6] = &v19;
  if ((v6 & 0x1000000000000000) != 0 || !(v6 & 0x2000000000000000 | v8 & 0x1000000000000000))
  {
    sub_1000BBEC0();
  }
  else
  {
    __chkstk_darwin(v7);
    void v16[2] = sub_100026E60;
    v16[3] = v10;
    if ((v6 & 0x2000000000000000) != 0)
    {
      v16[10] = v9;
      v16[11] = v6 & 0xFFFFFFFFFFFFFFLL;
      BOOL v14 = (v9 > 0x20u || ((0x100003E01uLL >> v9) & 1) == 0)
         && (uint64_t v13 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
         && *v13 == 0;
      char v17 = v14;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    if ((v9 & 0x1000000000000000) != 0)
    {
      uint64_t v11 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      v16[9] = v16;
      uint64_t v11 = sub_1000BBF20();
    }
    char v17 = sub_10008CB48(v11, v12, (void (*)(uint64_t *__return_ptr))sub_100026E7C) & 1;
  }
  swift_bridgeObjectRelease();
LABEL_16:
  if (v17) {
    char v3 = v19;
  }
  else {
    char v3 = 0;
  }
  sub_100015C54((uint64_t)v18);
  sub_100015C54((uint64_t)a1);
  return v3;
}

unsigned char *sub_100026E60@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_10008BFD0(a1, a2);
}

void *sub_100026E7C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10008CBA8(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t destroy for MapPreviewUnpacker()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MapPreviewUnpacker(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MapPreviewUnpacker(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for MapPreviewUnpacker(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

void *assignWithTake for MapPreviewUnpacker(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MapPreviewUnpacker(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MapPreviewUnpacker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapPreviewUnpacker()
{
  return &type metadata for MapPreviewUnpacker;
}

unint64_t sub_1000271CC()
{
  unint64_t result = qword_1000EC898;
  if (!qword_1000EC898)
  {
    sub_1000BAAF0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC898);
  }
  return result;
}

BOOL sub_100027224(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_10002723C()
{
  Swift::UInt v1 = *v0;
  sub_1000BC230();
  sub_1000BC240(v1);
  return sub_1000BC250();
}

void sub_100027284()
{
  sub_1000BC240(*v0);
}

Swift::Int sub_1000272B0()
{
  Swift::UInt v1 = *v0;
  sub_1000BC230();
  sub_1000BC240(v1);
  return sub_1000BC250();
}

uint64_t sub_1000272F4@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  v184 = a1;
  uint64_t v156 = a2;
  uint64_t v2 = sub_10001295C(&qword_1000EC8A0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v162 = (char *)&v152 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v163 = (char *)&v152 - v6;
  __chkstk_darwin(v5);
  v168 = (char *)&v152 - v7;
  uint64_t v170 = sub_1000B8100();
  uint64_t v171 = *(void *)(v170 - 8);
  uint64_t v8 = __chkstk_darwin(v170);
  uint64_t v157 = (char *)&v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  v161 = (char *)&v152 - v11;
  __chkstk_darwin(v10);
  v167 = (char *)&v152 - v12;
  uint64_t v13 = sub_10001295C(&qword_1000EC8A8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v152 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000B8130();
  *(void *)&long long v166 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v152 - v20;
  uint64_t v22 = sub_10001295C(&qword_1000EC5E0);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v152 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000B8240();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  int v28 = (char *)&v152 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v29 = v185;
  unint64_t v30 = sub_100028BE4();
  if (v29)
  {
    sub_100028DE4();
    swift_allocError();
    *int v31 = 0;
    swift_willThrow();
    return swift_errorRelease();
  }
  unint64_t v33 = v30;
  v184 = v24;
  v169 = v19;
  uint64_t v172 = 0;
  v179 = v21;
  v180 = v28;
  v175 = v15;
  uint64_t v176 = v16;
  unint64_t v185 = v30;
  uint64_t v186 = v25;
  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1000BBF40();
    swift_bridgeObjectRelease();
    unint64_t v33 = v185;
  }
  else
  {
    uint64_t v34 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v35 = v176;
  if (!v34)
  {
LABEL_137:
    swift_bridgeObjectRelease();
    sub_100028DE4();
    swift_allocError();
    unsigned char *v151 = 1;
    return swift_willThrow();
  }
  unint64_t v183 = v33 & 0xC000000000000001;
  v182 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v178 = (void (**)(char *, uint64_t, uint64_t))(v26 + 32);
  v174 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v166 + 48);
  uint64_t v165 = (void (**)(char *, uint64_t, uint64_t))(v166 + 32);
  v164 = (void (**)(char *, uint64_t))(v166 + 8);
  v177 = (void (**)(uint64_t, uint64_t))(v26 + 8);
  uint64_t v155 = v171 + 16;
  uint64_t v160 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v171 + 56);
  uint64_t v159 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v171 + 48);
  uint64_t v154 = (void (**)(void))(v171 + 32);
  uint64_t v153 = (void (**)(char *, uint64_t))(v171 + 8);
  uint64_t v158 = (void (**)(char *, char *, uint64_t))(v166 + 16);
  uint64_t v36 = 4;
  long long v166 = xmmword_1000BF8A0;
  uint64_t v37 = v173;
  uint64_t v181 = v34;
  while (1)
  {
    uint64_t v38 = v36 - 4;
    id v39 = v183 ? (id)sub_1000BBEF0() : *(id *)(v33 + 8 * v36);
    uint64_t v40 = v39;
    uint64_t v41 = v36 - 3;
    if (__OFADD__(v38, 1)) {
      break;
    }
    id v42 = [v39 value];
    sub_1000BB900();

    uint64_t v43 = (uint64_t)v184;
    sub_1000B8220();
    swift_bridgeObjectRelease();
    uint64_t v44 = v186;
    if ((*v182)(v43, 1, v186) == 1)
    {

      uint64_t v45 = v43;
      int v46 = &qword_1000EC5E0;
LABEL_19:
      sub_1000184DC(v45, v46);
      goto LABEL_8;
    }
    char v47 = v180;
    (*v178)(v180, v43, v44);
    uint64_t v48 = sub_1000B8210();
    if (v49)
    {
      uint64_t v50 = v48;
      uint64_t v51 = v49;
      uint64_t v52 = (uint64_t)v175;
      sub_1000B8120();
      if ((*v174)(v52, 1, v35) == 1)
      {
        (*v177)((uint64_t)v47, v186);
        swift_bridgeObjectRelease();

        uint64_t v45 = v52;
        int v46 = &qword_1000EC8A8;
        goto LABEL_19;
      }
      (*v165)(v179, v52, v35);
      if (v50 == *v37 && v51 == v37[1] || (sub_1000BC1A0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v53 = v37;
        uint64_t v54 = v37[6];
        uint64_t v55 = v53[7];
        uint64_t v56 = sub_1000B8110();
        if (v56)
        {
          sub_10001DAE4(0, &qword_1000EC8B8);
          sub_10001295C(&qword_1000EC5C8);
          uint64_t v57 = swift_allocObject();
          *(_OWORD *)(v57 + 16) = v166;
          *(void *)(v57 + 56) = &type metadata for String;
          *(void *)(v57 + 64) = sub_10001824C();
          *(void *)(v57 + 32) = v54;
          *(void *)(v57 + 40) = v55;
          swift_bridgeObjectRetain();
          uint64_t v58 = (void *)sub_1000BBB80();
          uint64_t v59 = v172;
          uint64_t v60 = sub_100028E38(v56, v58);
          uint64_t v172 = v59;
          swift_bridgeObjectRelease();
          if (*((void *)v60 + 2))
          {
            uint64_t v61 = (uint64_t)v168;
            uint64_t v62 = v170;
            (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v168, &v60[(*(unsigned __int8 *)(v171 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v171 + 80)], v170);
            uint64_t v63 = 0;
          }
          else
          {
            uint64_t v63 = 1;
            uint64_t v61 = (uint64_t)v168;
            uint64_t v62 = v170;
          }
          uint64_t v65 = v167;
          (*v160)(v61, v63, 1, v62);
          swift_bridgeObjectRelease();
          if ((*v159)(v61, 1, v62) == 1)
          {

            sub_1000184DC(v61, &qword_1000EC8A0);
            uint64_t v64 = 0;
            uint64_t v56 = 0;
          }
          else
          {
            ((void (*)(char *, uint64_t, uint64_t))*v154)(v65, v61, v62);
            uint64_t v64 = sub_1000B80F0();
            uint64_t v66 = v65;
            uint64_t v56 = v67;

            (*v153)(v66, v62);
            if (!v56) {
              uint64_t v64 = 0;
            }
          }
          uint64_t v35 = v176;
        }
        else
        {
          uint64_t v64 = 0;
        }
        id v68 = v169;
        (*v158)(v169, v179, v35);
        if (v56)
        {
LABEL_37:
          uint64_t v69 = *v164;
          (*v164)(v68, v176);
          uint64_t v190 = v64;
          uint64_t v191 = v56;
          uint64_t v188 = 44;
          unint64_t v189 = 0xE100000000000000;
          sub_1000180E0();
          uint64_t v70 = (void *)sub_1000BBE70();
          uint64_t v71 = swift_bridgeObjectRelease();
          if (v70[2] != 2)
          {
            swift_bridgeObjectRelease();

            uint64_t v88 = v179;
            uint64_t v34 = (uint64_t)v180;
            goto LABEL_104;
          }
          uint64_t v72 = v70[4];
          uint64_t v73 = v70[5];
          uint64_t v188 = 0;
          __chkstk_darwin(v71);
          *(&v152 - 2) = (uint64_t)&v188;
          if ((v73 & 0x1000000000000000) != 0 || !(v73 & 0x2000000000000000 | v72 & 0x1000000000000000))
          {
            swift_bridgeObjectRetain();
            uint64_t v146 = v172;
            sub_1000BBEC0();
            uint64_t v172 = v146;
            goto LABEL_47;
          }
          if ((v73 & 0x2000000000000000) != 0)
          {
            uint64_t v190 = v72;
            uint64_t v191 = v73 & 0xFFFFFFFFFFFFFFLL;
            switch((char)v72)
            {
              case 0:
              case 9:
              case 10:
              case 11:
              case 12:
              case 13:
              case 32:
                swift_bridgeObjectRetain();
                goto LABEL_54;
              default:
                swift_bridgeObjectRetain();
                uint64_t v134 = (unsigned char *)_swift_stdlib_strtod_clocale();
                if (v134) {
                  BOOL v89 = *v134 == 0;
                }
                else {
LABEL_54:
                }
                  BOOL v89 = 0;
                BOOL v187 = v89;
                swift_bridgeObjectRelease();
                break;
            }
          }
          else
          {
            if ((v72 & 0x1000000000000000) != 0) {
              uint64_t v74 = (unsigned char *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 32);
            }
            else {
              uint64_t v74 = (unsigned char *)sub_1000BBF20();
            }
            switch(*v74)
            {
              case 0:
              case 9:
              case 0xA:
              case 0xB:
              case 0xC:
              case 0xD:
              case 0x20:
                swift_bridgeObjectRetain();
                goto LABEL_45;
              default:
                swift_bridgeObjectRetain();
                uint64_t v133 = (unsigned char *)_swift_stdlib_strtod_clocale();
                if (v133) {
                  BOOL v75 = *v133 == 0;
                }
                else {
LABEL_45:
                }
                  BOOL v75 = 0;
                BOOL v187 = v75;
                break;
            }
LABEL_47:
            swift_bridgeObjectRelease();
          }
          uint64_t v34 = (uint64_t)v180;
          if (v187)
          {
            if (v70[2] < 2uLL)
            {
              __break(1u);
LABEL_144:
              __break(1u);
              JUMPOUT(0x100028AC4);
            }
            uint64_t v90 = v70[6];
            uint64_t v91 = v70[7];
            swift_bridgeObjectRetain();
            uint64_t v92 = swift_bridgeObjectRelease();
            uint64_t v188 = 0;
            __chkstk_darwin(v92);
            *(&v152 - 2) = (uint64_t)&v188;
            if ((v91 & 0x1000000000000000) != 0 || !(v91 & 0x2000000000000000 | v90 & 0x1000000000000000))
            {
              uint64_t v147 = v172;
              sub_1000BBEC0();
              uint64_t v172 = v147;
              goto LABEL_99;
            }
            if ((v91 & 0x2000000000000000) != 0)
            {
              uint64_t v190 = v90;
              uint64_t v191 = v91 & 0xFFFFFFFFFFFFFFLL;
              BOOL v113 = (v90 > 0x20u || ((0x100003E01uLL >> v90) & 1) == 0)
                  && (uint64_t v112 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
                  && *v112 == 0;
              BOOL v187 = v113;
              swift_bridgeObjectRelease();
            }
            else
            {
              if ((v90 & 0x1000000000000000) != 0) {
                uint64_t v93 = (unsigned __int8 *)((v91 & 0xFFFFFFFFFFFFFFFLL) + 32);
              }
              else {
                uint64_t v93 = (unsigned __int8 *)sub_1000BBF20();
              }
              unint64_t v94 = *v93;
              BOOL v96 = (v94 >= 0x21 || ((0x100003E01uLL >> v94) & 1) == 0)
                 && (uint64_t v95 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
                 && *v95 == 0;
              BOOL v187 = v96;
LABEL_99:
              swift_bridgeObjectRelease();
            }
            uint64_t v88 = v179;
            uint64_t v34 = (uint64_t)v180;
            if (v187)
            {
              swift_bridgeObjectRelease();
              sub_1000BAAE0();

              v69(v88, v176);
              return ((uint64_t (*)(uint64_t, uint64_t))*v177)(v34, v186);
            }

LABEL_104:
            uint64_t v131 = v88;
            uint64_t v132 = v176;
            v69(v131, v176);
            uint64_t v35 = v132;
            (*v177)(v34, v186);
            uint64_t v34 = v181;
            uint64_t v37 = v173;
            goto LABEL_9;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v77 = v173[4];
          uint64_t v76 = v173[5];
          uint64_t v78 = sub_1000B8110();
          if (v78)
          {
            uint64_t v79 = v78;
            sub_10001DAE4(0, &qword_1000EC8B8);
            sub_10001295C(&qword_1000EC5C8);
            uint64_t v80 = swift_allocObject();
            *(_OWORD *)(v80 + 16) = v166;
            *(void *)(v80 + 56) = &type metadata for String;
            *(void *)(v80 + 64) = sub_10001824C();
            *(void *)(v80 + 32) = v77;
            *(void *)(v80 + 40) = v76;
            swift_bridgeObjectRetain();
            uint64_t v81 = (void *)sub_1000BBB80();
            uint64_t v82 = v172;
            id v83 = sub_100028E38(v79, v81);
            swift_bridgeObjectRelease();
            uint64_t v84 = *((void *)v83 + 2);
            uint64_t v172 = v82;
            if (v84)
            {
              uint64_t v85 = (uint64_t)v163;
              uint64_t v86 = v170;
              (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v163, &v83[(*(unsigned __int8 *)(v171 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v171 + 80)], v170);
              uint64_t v87 = 0;
            }
            else
            {
              uint64_t v87 = 1;
              uint64_t v85 = (uint64_t)v163;
              uint64_t v86 = v170;
            }
            (*v160)(v85, v87, 1, v86);
            swift_bridgeObjectRelease();
            if ((*v159)(v85, 1, v86) == 1)
            {

              sub_1000184DC(v85, &qword_1000EC8A0);
            }
            else
            {
              uint64_t v110 = v161;
              (*v154)();
              uint64_t v64 = sub_1000B80F0();
              uint64_t v56 = v111;

              (*v153)(v110, v86);
              if (v56)
              {
                id v68 = v169;
                goto LABEL_37;
              }
            }
          }
          uint64_t v34 = (uint64_t)v180;
          uint64_t v69 = *v164;
          (*v164)(v169, v176);
        }

        uint64_t v88 = v179;
        goto LABEL_104;
      }
      if (v50 == v37[2] && v51 == v37[3])
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v97 = sub_1000BC1A0();
        swift_bridgeObjectRelease();
        if ((v97 & 1) == 0)
        {

          (*v164)(v179, v35);
          (*v177)((uint64_t)v47, v186);
          goto LABEL_8;
        }
      }
      uint64_t v99 = v37[8];
      uint64_t v98 = v37[9];
      uint64_t v100 = sub_1000B8110();
      if (!v100) {
        goto LABEL_106;
      }
      uint64_t v101 = v100;
      sub_10001DAE4(0, &qword_1000EC8B8);
      sub_10001295C(&qword_1000EC5C8);
      uint64_t v102 = swift_allocObject();
      *(_OWORD *)(v102 + 16) = v166;
      *(void *)(v102 + 56) = &type metadata for String;
      *(void *)(v102 + 64) = sub_10001824C();
      *(void *)(v102 + 32) = v99;
      *(void *)(v102 + 40) = v98;
      swift_bridgeObjectRetain();
      uint64_t v103 = (void *)sub_1000BBB80();
      uint64_t v104 = v172;
      uint64_t v105 = sub_100028E38(v101, v103);
      uint64_t v172 = v104;
      swift_bridgeObjectRelease();
      if (*((void *)v105 + 2))
      {
        uint64_t v106 = (uint64_t)v162;
        uint64_t v107 = v170;
        (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v162, &v105[(*(unsigned __int8 *)(v171 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v171 + 80)], v170);
        uint64_t v108 = 0;
        id v109 = v180;
      }
      else
      {
        uint64_t v108 = 1;
        uint64_t v106 = (uint64_t)v162;
        id v109 = v180;
        uint64_t v107 = v170;
      }
      (*v160)(v106, v108, 1, v107);
      swift_bridgeObjectRelease();
      if ((*v159)(v106, 1, v107) == 1)
      {

        sub_1000184DC(v106, &qword_1000EC8A0);
        uint64_t v35 = v176;
        goto LABEL_107;
      }
      uint64_t v114 = v157;
      (*v154)();
      uint64_t v115 = sub_1000B80F0();
      uint64_t v117 = v116;

      (*v153)(v114, v107);
      if (!v117)
      {
        uint64_t v35 = v176;
LABEL_106:
        id v109 = v180;
LABEL_107:
        uint64_t v34 = v181;

        (*v164)(v179, v35);
        (*v177)((uint64_t)v109, v186);
        goto LABEL_9;
      }
      uint64_t v190 = v115;
      uint64_t v191 = v117;
      uint64_t v188 = 32;
      unint64_t v189 = 0xE100000000000000;
      sub_1000180E0();
      uint64_t v118 = (void *)sub_1000BBE70();
      swift_bridgeObjectRelease();
      if (v118[2])
      {
        uint64_t v120 = v118[4];
        uint64_t v119 = v118[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v190 = v120;
        uint64_t v191 = v119;
        uint64_t v188 = 44;
        unint64_t v189 = 0xE100000000000000;
        uint64_t v121 = (void *)sub_1000BBE70();
        uint64_t v122 = swift_bridgeObjectRelease();
        if (v121[2] == 2)
        {
          uint64_t v152 = (uint64_t)&v152;
          uint64_t v123 = v121[4];
          uint64_t v124 = v121[5];
          uint64_t v188 = 0;
          uint64_t v125 = __chkstk_darwin(v122);
          *(&v152 - 2) = (uint64_t)&v188;
          uint64_t v37 = v173;
          if ((v124 & 0x1000000000000000) != 0 || !(v124 & 0x2000000000000000 | v123 & 0x1000000000000000))
          {
            swift_bridgeObjectRetain();
            uint64_t v148 = v172;
            sub_1000BBEC0();
            uint64_t v172 = v148;
            goto LABEL_96;
          }
          __chkstk_darwin(v125);
          *(&v152 - 2) = (uint64_t)sub_100026E60;
          *(&v152 - 1) = (uint64_t)(&v152 - 4);
          if ((v124 & 0x2000000000000000) != 0)
          {
            uint64_t v190 = v123;
            uint64_t v191 = v124 & 0xFFFFFFFFFFFFFFLL;
            swift_bridgeObjectRetain();
            uint64_t v135 = v172;
            sub_10008BFD0(&v190, &v187);
            uint64_t v172 = v135;
            swift_bridgeObjectRelease();
          }
          else
          {
            if ((v123 & 0x1000000000000000) != 0)
            {
              uint64_t v126 = (v124 & 0xFFFFFFFFFFFFFFFLL) + 32;
              uint64_t v127 = v123 & 0xFFFFFFFFFFFFLL;
            }
            else
            {
              uint64_t v126 = sub_1000BBF20();
              uint64_t v127 = v150;
            }
            swift_bridgeObjectRetain();
            uint64_t v128 = v127;
            uint64_t v129 = v172;
            char v130 = sub_10008CB48(v126, v128, (void (*)(uint64_t *__return_ptr))sub_1000292A0);
            uint64_t v172 = v129;
            BOOL v187 = v130 & 1;
LABEL_96:
            swift_bridgeObjectRelease();
          }
          uint64_t v35 = v176;
          uint64_t v34 = (uint64_t)v180;
          if (v187)
          {
            if (v121[2] < 2uLL) {
              goto LABEL_144;
            }
            uint64_t v136 = v121[6];
            uint64_t v137 = v121[7];
            swift_bridgeObjectRetain();
            uint64_t v138 = swift_bridgeObjectRelease();
            uint64_t v188 = 0;
            uint64_t v139 = __chkstk_darwin(v138);
            *(&v152 - 2) = (uint64_t)&v188;
            if ((v137 & 0x1000000000000000) != 0 || !(v137 & 0x2000000000000000 | v136 & 0x1000000000000000))
            {
              uint64_t v149 = v172;
              sub_1000BBEC0();
              uint64_t v172 = v149;
              goto LABEL_123;
            }
            __chkstk_darwin(v139);
            *(&v152 - 2) = (uint64_t)sub_1000292B8;
            *(&v152 - 1) = v140;
            if ((v137 & 0x2000000000000000) != 0)
            {
              uint64_t v190 = v136;
              uint64_t v191 = v137 & 0xFFFFFFFFFFFFFFLL;
              uint64_t v145 = v172;
              sub_10008BFD0(&v190, &v187);
              uint64_t v172 = v145;
              swift_bridgeObjectRelease();
            }
            else
            {
              if ((v136 & 0x1000000000000000) != 0)
              {
                uint64_t v141 = (v137 & 0xFFFFFFFFFFFFFFFLL) + 32;
                uint64_t v142 = v136 & 0xFFFFFFFFFFFFLL;
              }
              else
              {
                uint64_t v141 = sub_1000BBF20();
              }
              uint64_t v143 = v172;
              char v144 = sub_10008CB48(v141, v142, (void (*)(uint64_t *__return_ptr))sub_100026E7C);
              uint64_t v172 = v143;
              BOOL v187 = v144 & 1;
LABEL_123:
              swift_bridgeObjectRelease();
            }
            uint64_t v35 = v176;
            uint64_t v38 = (uint64_t)v179;
            uint64_t v34 = (uint64_t)v180;
            if (v187) {
              goto LABEL_141;
            }

            (*v164)((char *)v38, v35);
          }
          else
          {
            swift_bridgeObjectRelease();

            (*v164)(v179, v35);
          }
          (*v177)(v34, v186);
          goto LABEL_8;
        }
        swift_bridgeObjectRelease();

        uint64_t v35 = v176;
        (*v164)(v179, v176);
        (*v177)((uint64_t)v180, v186);
        uint64_t v37 = v173;
      }
      else
      {
        swift_bridgeObjectRelease();

        uint64_t v35 = v176;
        (*v164)(v179, v176);
        (*v177)((uint64_t)v180, v186);
      }
    }
    else
    {
      (*v177)((uint64_t)v47, v44);
    }
LABEL_8:
    uint64_t v34 = v181;
LABEL_9:
    ++v36;
    unint64_t v33 = v185;
    if (v41 == v34) {
      goto LABEL_137;
    }
  }
  __break(1u);
LABEL_141:
  swift_bridgeObjectRelease();
  sub_1000BAAE0();

  (*v164)((char *)v38, v176);
  return ((uint64_t (*)(uint64_t, uint64_t))*v177)(v34, v186);
}

uint64_t sub_100028BCC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000272F4(a1, a2);
}

unint64_t sub_100028BE4()
{
  uint64_t v0 = self;
  Class isa = sub_1000B82B0().super.isa;
  id v12 = 0;
  id v2 = [v0 contactsWithData:isa error:&v12];

  id v3 = v12;
  if (!v2)
  {
    unint64_t v4 = (unint64_t)v12;
    sub_1000B81D0();

LABEL_11:
    swift_willThrow();
    return v4;
  }
  sub_10001DAE4(0, &qword_1000EC8C0);
  unint64_t v4 = sub_1000BBA50();
  id v5 = v3;

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1000BBF40();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
    goto LABEL_10;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_10:
    swift_bridgeObjectRelease();
    sub_100028DE4();
    swift_allocError();
    *uint64_t v10 = 0;
    goto LABEL_11;
  }
LABEL_4:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v6 = (id)sub_1000BBEF0();
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v6 = *(id *)(v4 + 32);
  }
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  id v8 = [v7 urlAddresses];
  sub_10001295C(&qword_1000EC8C8);
  unint64_t v4 = sub_1000BBA50();

  return v4;
}

unint64_t sub_100028DE4()
{
  unint64_t result = qword_1000EC8B0;
  if (!qword_1000EC8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC8B0);
  }
  return result;
}

char *sub_100028E38(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_1000B8100();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v34 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - v9;
  unint64_t result = (char *)&_swiftEmptyArrayStorage;
  uint64_t v35 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v27 = v2;
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v14 = v6 + 16;
    uint64_t v13 = v15;
    uint64_t v16 = *(unsigned __int8 *)(v14 + 64);
    uint64_t v17 = *(void *)(v14 + 56);
    uint64_t v29 = v5;
    uint64_t v30 = (v16 + 32) & ~v16;
    uint64_t v18 = a1 + v30;
    int v28 = (void (**)(char *, uint64_t))(v14 - 8);
    uint64_t v32 = (void (**)(char *, char *, uint64_t))(v14 + 16);
    unint64_t v33 = a2;
    int v31 = v15;
    v15(v10, a1 + v30, v5);
    while (1)
    {
      uint64_t v19 = (void *)sub_1000B80E0();
      unsigned int v20 = [a2 evaluateWithObject:v19];
      uint64_t v21 = v5;
      unsigned int v22 = v20;

      if (v22)
      {
        uint64_t v23 = *v32;
        (*v32)(v34, v10, v21);
        uint64_t v24 = v35;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10007F924(0, *((void *)v24 + 2) + 1, 1);
          uint64_t v24 = v35;
        }
        unint64_t v26 = *((void *)v24 + 2);
        unint64_t v25 = *((void *)v24 + 3);
        if (v26 >= v25 >> 1)
        {
          sub_10007F924(v25 > 1, v26 + 1, 1);
          uint64_t v24 = v35;
        }
        *((void *)v24 + 2) = v26 + 1;
        uint64_t v5 = v29;
        v23(&v24[v30 + v26 * v17], v34, v29);
        uint64_t v35 = v24;
        a2 = v33;
        uint64_t v13 = v31;
      }
      else
      {
        (*v28)(v10, v21);
        uint64_t v5 = v21;
        a2 = v33;
      }
      v18 += v17;
      if (!--v12) {
        break;
      }
      v13(v10, v18, v5);
    }
    return v35;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MapPreviewUnpacker.MapPreviewUnpackerError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MapPreviewUnpacker.MapPreviewUnpackerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100029204);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_10002922C(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MapPreviewUnpacker.MapPreviewUnpackerError()
{
  return &type metadata for MapPreviewUnpacker.MapPreviewUnpackerError;
}

unint64_t sub_10002924C()
{
  unint64_t result = qword_1000EC8D0;
  if (!qword_1000EC8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC8D0);
  }
  return result;
}

void *sub_1000292A0@<X0>(unsigned char *a1@<X8>)
{
  return sub_100026E7C(a1);
}

unsigned char *sub_1000292B8@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_100026E60(a1, a2);
}

ValueMetadata *type metadata accessor for CollaborationNoticeActionUnpacker()
{
  return &type metadata for CollaborationNoticeActionUnpacker;
}

unint64_t sub_1000292E4()
{
  unint64_t result = qword_1000EC8D8;
  if (!qword_1000EC8D8)
  {
    sub_1000BAFA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC8D8);
  }
  return result;
}

uint64_t sub_10002933C@<X0>(uint64_t a1@<X8>)
{
  v14[3] = a1;
  uint64_t v2 = sub_10001295C(&qword_1000EC8E0);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000BAF80();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v14 - v10;
  sub_100018190();
  uint64_t v12 = (void *)sub_1000BBE00();
  sub_1000BBBE0();
  sub_1000B8770();

  sub_1000B81C0();
  swift_allocObject();
  sub_1000B81B0();
  sub_100029608();
  sub_1000B81A0();
  uint64_t result = swift_release();
  if (!v1)
  {
    sub_1000BAF70();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v6 + 104))(v11, enum case for CollaborationNoticeAction.ActionType.invalid(_:), v5);
      sub_10002965C((uint64_t)v4);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    sub_1000BAF90();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  return result;
}

uint64_t sub_1000295F0@<X0>(uint64_t a1@<X8>)
{
  return sub_10002933C(a1);
}

unint64_t sub_100029608()
{
  unint64_t result = qword_1000EC8E8;
  if (!qword_1000EC8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC8E8);
  }
  return result;
}

uint64_t sub_10002965C(uint64_t a1)
{
  uint64_t v2 = sub_10001295C(&qword_1000EC8E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for VideoPreviewUnpacker()
{
  return &type metadata for VideoPreviewUnpacker;
}

uint64_t sub_1000296CC()
{
  return sub_1000336B4(&qword_1000EC8F0, (void (*)(uint64_t))&type metadata accessor for VideoPreview);
}

uint64_t sub_100029714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v5 = sub_10001295C(&qword_1000EC8F8);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  __chkstk_darwin(v5);
  uint64_t v38 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000BB3E0();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000B8240();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000BB3B0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v17 = sub_1000BBBB0();
  sub_10001DAE4(0, (unint64_t *)&qword_1000EC5B8);
  uint64_t v18 = sub_1000BBD50();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v37 = a1;
  v19(v16, a1, v13);
  os_log_type_t v20 = v17;
  if (os_log_type_enabled(v18, v17))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v43 = v31;
    uint64_t v32 = a3;
    *(_DWORD *)uint64_t v21 = 136446210;
    v29[1] = v21 + 4;
    uint64_t v30 = v21;
    sub_1000BB3A0();
    sub_1000BB3D0();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v34);
    sub_1000336B4(&qword_1000EC908, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v22 = v36;
    uint64_t v23 = sub_1000BC190();
    unint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v22);
    uint64_t v42 = sub_10007ABB4(v23, v25, &v43);
    sub_1000BBE50();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    _os_log_impl((void *)&_mh_execute_header, v18, v20, "BlastDoor processing thumbnail for video: %{public}s", v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v26 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  __chkstk_darwin(v26);
  uint64_t v27 = v39;
  v29[-2] = v37;
  v29[-1] = v27;
  sub_10001295C(&qword_1000EC900);
  (*(void (**)(char *, void, uint64_t))(v40 + 104))(v38, enum case for AsyncThrowingStream.Continuation.BufferingPolicy.unbounded<A, B>(_:), v41);
  return sub_1000BBAF0();
}

uint64_t sub_100029BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a3;
  uint64_t v30 = a1;
  uint64_t v27 = a2;
  uint64_t v31 = sub_10001295C(&qword_1000EC910);
  uint64_t v3 = *(void *)(v31 - 8);
  uint64_t v28 = *(void *)(v3 + 64);
  __chkstk_darwin(v31);
  uint64_t v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000B9330();
  uint64_t v24 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  unint64_t v25 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000BB3B0();
  uint64_t v23 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001295C(&qword_1000EC918);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000BBAC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v27, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v5);
  uint64_t v16 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v26, v30, v31);
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v18 = (v10 + *(unsigned __int8 *)(v6 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v19 = (v7 + *(unsigned __int8 *)(v3 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v20 + v17, v11, v23);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v20 + v18, v25, v24);
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v20 + v19, v16, v31);
  sub_100053018((uint64_t)v14, (uint64_t)&unk_1000EC928, v20);
  return swift_release();
}

uint64_t sub_100029F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  uint64_t v7 = sub_10001295C(&qword_1000EC910);
  v6[8] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[9] = v8;
  v6[10] = *(void *)(v8 + 64);
  v6[11] = swift_task_alloc();
  uint64_t v9 = sub_1000B9330();
  v6[12] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v6[13] = v10;
  v6[14] = *(void *)(v10 + 64);
  v6[15] = swift_task_alloc();
  uint64_t v11 = sub_1000BB3E0();
  v6[16] = v11;
  v6[17] = *(void *)(v11 - 8);
  v6[18] = swift_task_alloc();
  uint64_t v12 = sub_1000B8240();
  v6[19] = v12;
  v6[20] = *(void *)(v12 - 8);
  v6[21] = swift_task_alloc();
  uint64_t v13 = sub_1000BB3B0();
  v6[22] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v6[23] = v14;
  unsigned char v6[24] = *(void *)(v14 + 64);
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  return _swift_task_switch(sub_10002A1D0, 0, 0);
}

uint64_t sub_10002A1D0()
{
  uint64_t v48 = v0;
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[23];
  os_log_type_t v5 = sub_1000BBBB0();
  v0[27] = sub_10001DAE4(0, (unint64_t *)&qword_1000EC5B8);
  uint64_t v6 = sub_1000BBD50();
  int v46 = *(void (**)(void))(v4 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v46)(v2, v1, v3);
  os_log_type_t v7 = v5;
  if (os_log_type_enabled(v6, v5))
  {
    uint64_t v8 = v0[26];
    uint64_t v9 = v0[21];
    uint64_t v40 = v0[23];
    uint64_t v42 = v0[22];
    uint64_t v10 = v0[20];
    uint64_t v36 = v0[19];
    uint64_t v11 = v0[17];
    uint64_t v12 = v0[18];
    uint64_t v35 = v0[16];
    os_log_type_t type = v7;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446210;
    sub_1000BB3A0();
    sub_1000BB3D0();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v35);
    sub_1000336B4(&qword_1000EC908, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v14 = sub_1000BC190();
    unint64_t v16 = v15;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v36);
    v0[4] = sub_10007ABB4(v14, v16, &v47);
    sub_1000BBE50();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v8, v42);
    _os_log_impl((void *)&_mh_execute_header, v6, type, "Task running for video: %{public}s)", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v17 = v0[26];
    uint64_t v18 = v0[22];
    uint64_t v19 = v0[23];

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  uint64_t v20 = v0[23];
  uint64_t v39 = v0[22];
  uint64_t v41 = v0[25];
  uint64_t v21 = v0[15];
  uint64_t v37 = v0[24];
  buf = (uint8_t *)v0[14];
  uint64_t v23 = v0[12];
  uint64_t v22 = v0[13];
  uint64_t v24 = v0[11];
  uint64_t v25 = v0[8];
  uint64_t v26 = v0[9];
  uint64_t v43 = v25;
  *(void *)typea = v24;
  uint64_t v28 = v0[6];
  uint64_t v27 = v0[7];
  v46();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v21, v28, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v24, v27, v25);
  unint64_t v29 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v30 = (v37 + *(unsigned __int8 *)(v22 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v31 = (unint64_t)&buf[*(unsigned __int8 *)(v26 + 80) + v30] & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v32 = swift_allocObject();
  v0[28] = v32;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 32))(v32 + v29, v41, v39);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(v32 + v30, v21, v23);
  (*(void (**)(unint64_t, os_log_type_t *, uint64_t))(v26 + 32))(v32 + v31, *(os_log_type_t **)typea, v43);
  uint64_t v33 = (void *)swift_task_alloc();
  v0[29] = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_10002A620;
  return File.withResource<A>(_:)();
}

uint64_t sub_10002A620()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10002A7E4;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_10002A73C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10002A73C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002A7E4()
{
  swift_release();
  os_log_type_t v1 = sub_1000BBBD0();
  uint64_t v2 = sub_1000BBD50();
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(v2, v1))
  {
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v6;
    sub_1000BBE50();
    *os_log_type_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Caught error: %@", v4, 0xCu);
    sub_10001295C(&qword_1000EC668);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v7 = v0[30];

  v0[2] = v7;
  sub_1000BBAE0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10002A9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[134] = a4;
  v4[133] = a3;
  v4[132] = a2;
  sub_10001295C(&qword_1000EC900);
  v4[135] = swift_task_alloc();
  uint64_t v5 = sub_10001295C(&qword_1000EC940);
  v4[136] = v5;
  v4[137] = *(void *)(v5 - 8);
  v4[138] = swift_task_alloc();
  uint64_t v6 = sub_1000B93F0();
  v4[139] = v6;
  v4[140] = *(void *)(v6 - 8);
  v4[141] = swift_task_alloc();
  v4[142] = swift_task_alloc();
  uint64_t v7 = sub_1000B9310();
  v4[143] = v7;
  v4[144] = *(void *)(v7 - 8);
  v4[145] = swift_task_alloc();
  v4[146] = swift_task_alloc();
  uint64_t v8 = sub_1000B92F0();
  v4[147] = v8;
  v4[148] = *(void *)(v8 - 8);
  v4[149] = swift_task_alloc();
  v4[150] = swift_task_alloc();
  sub_10001295C(&qword_1000EC660);
  v4[151] = swift_task_alloc();
  uint64_t v9 = sub_1000BB470();
  v4[152] = v9;
  v4[153] = *(void *)(v9 - 8);
  v4[154] = swift_task_alloc();
  v4[155] = swift_task_alloc();
  uint64_t v10 = sub_1000BBB90();
  v4[156] = v10;
  v4[157] = *(void *)(v10 - 8);
  v4[158] = swift_task_alloc();
  v4[159] = swift_task_alloc();
  uint64_t v11 = sub_1000B93B0();
  v4[160] = v11;
  v4[161] = *(void *)(v11 - 8);
  v4[162] = swift_task_alloc();
  v4[163] = swift_task_alloc();
  v4[164] = swift_task_alloc();
  v4[165] = swift_task_alloc();
  v4[166] = swift_task_alloc();
  uint64_t v12 = sub_1000B93D0();
  v4[167] = v12;
  v4[168] = *(void *)(v12 - 8);
  v4[169] = swift_task_alloc();
  uint64_t v13 = sub_1000B9340();
  v4[170] = v13;
  v4[171] = *(void *)(v13 - 8);
  v4[172] = swift_task_alloc();
  v4[173] = swift_task_alloc();
  v4[174] = swift_task_alloc();
  v4[175] = swift_task_alloc();
  v4[176] = swift_task_alloc();
  uint64_t v14 = sub_1000B8240();
  v4[177] = v14;
  v4[178] = *(void *)(v14 - 8);
  v4[179] = swift_task_alloc();
  uint64_t v15 = sub_1000BB3E0();
  v4[180] = v15;
  v4[181] = *(void *)(v15 - 8);
  v4[182] = swift_task_alloc();
  return _swift_task_switch(sub_10002AF74, 0, 0);
}

uint64_t sub_10002AF74()
{
  uint64_t v1 = v0[182];
  uint64_t v2 = v0[181];
  uint64_t v3 = v0[180];
  uint64_t v4 = v0[179];
  uint64_t v5 = v0[178];
  uint64_t v6 = v0[177];
  sub_1000BB3A0();
  sub_1000BB3D0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[183] = sub_10001295C(&qword_1000EC948);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000BF8A0;
  *(void *)(inited + 32) = sub_1000BB900();
  *(void *)(inited + 40) = v8;
  *(void *)(inited + 72) = &type metadata for Bool;
  *(unsigned char *)(inited + 48) = 1;
  sub_100064E54(inited);
  id v9 = objc_allocWithZone((Class)AVURLAsset);
  sub_1000B81F0(v10);
  uint64_t v12 = v11;
  Class isa = sub_1000BB850().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [v9 initWithURL:v12 options:isa];
  v0[184] = v14;

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  os_log_type_t v15 = sub_1000BBBB0();
  v0[185] = sub_10001DAE4(0, (unint64_t *)&qword_1000EC5B8);
  unint64_t v16 = sub_1000BBD50();
  if (os_log_type_enabled(v16, v15))
  {
    id v17 = v14;
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 138543362;
    v0[129] = v17;
    id v23 = v14;
    id v19 = v17;
    sub_1000BBE50();
    *uint64_t v22 = v17;

    id v14 = v23;
    _os_log_impl((void *)&_mh_execute_header, v16, v15, "Created asset: %{public}@", v18, 0xCu);
    sub_10001295C(&qword_1000EC668);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000BBBB0();
  uint64_t v20 = (void *)sub_1000BBD50();
  sub_1000B8780();

  v0[2] = v0;
  v0[7] = v0 + 126;
  v0[3] = sub_10002B364;
  v0[82] = swift_continuation_init();
  v0[78] = _NSConcreteStackBlock;
  v0[79] = 0x40000000;
  v0[80] = sub_100032DB4;
  v0[81] = &unk_1000E2E98;
  [v14 loadTracksWithMediaType:AVMediaTypeVideo completionHandler:v0 + 78];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10002B364()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 1488) = v1;
  if (v1) {
    uint64_t v2 = sub_100030E40;
  }
  else {
    uint64_t v2 = sub_10002B4A0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10002B4A0()
{
  unint64_t v1 = *(void *)(v0 + 1008);
  sub_1000BBBB0();
  uint64_t v2 = (void *)sub_1000BBD50();
  sub_1000B8780();

  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1000BBF40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1000BBF40();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1496) = v4;
    if (v3)
    {
LABEL_3:
      unint64_t v5 = v3 - 1;
      if (__OFSUB__(v3, 1))
      {
        __break(1u);
      }
      else if ((v1 & 0xC000000000000001) == 0)
      {
        if ((v5 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v5 < *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v6 = *(id *)(v1 + 8 * v5 + 32);
LABEL_8:
          uint64_t v7 = v6;
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
        __break(1u);
      }
      id v6 = (id)sub_1000BBEF0();
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v4 = v3;
    *(void *)(v0 + 1496) = v3;
    if (v3) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = 0;
LABEL_11:
  *(void *)(v0 + 1504) = v7;
  os_log_type_t v8 = sub_1000BBBB0();
  id v9 = sub_1000BBD50();
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134349056;
    *(void *)(v0 + 1048) = v4;
    sub_1000BBE50();
    _os_log_impl((void *)&_mh_execute_header, v9, v8, "Tracks found: %{public}ld)", v10, 0xCu);
    swift_slowDealloc();
  }

  uint64_t v11 = *(void **)(v0 + 1472);
  if (v7)
  {
    uint64_t v12 = *(void *)(v0 + 1408);
    uint64_t v13 = *(void *)(v0 + 1368);
    uint64_t v14 = *(void *)(v0 + 1360);
    os_log_type_t v15 = self;
    id v16 = v7;
    *(unsigned char *)(v0 + 1820) = [v15 videoAssetIsSpatial:v11];
    sub_1000B9320();
    id v17 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 88);
    *(void *)(v0 + 1512) = v17;
    *(void *)(v0 + 1520) = (v13 + 88) & 0xFFFFFFFFFFFFLL | 0xA3B5000000000000;
    int v18 = v17(v12, v14);
    *(_DWORD *)(v0 + 1796) = v18;
    int v19 = enum case for VideoPreview.FrameConstraints.singleFrame(_:);
    *(_DWORD *)(v0 + 1800) = enum case for VideoPreview.FrameConstraints.singleFrame(_:);
    if (v18 == v19)
    {
      uint64_t v20 = *(void *)(v0 + 1408);
      uint64_t v21 = *(void *)(v0 + 1360);
      uint64_t v22 = *(void *)(v0 + 1352);
      uint64_t v23 = *(void *)(v0 + 1344);
      uint64_t v24 = *(void *)(v0 + 1336);
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1368) + 96);
      *(void *)(v0 + 1528) = v25;
      v25(v20, v21);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v22, v20, v24);
      sub_10001295C(&qword_1000EC978);
      uint64_t v26 = sub_1000B83E0();
      *(void *)(v0 + 1536) = v26;
      uint64_t v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 1544) = v27;
      *uint64_t v27 = v0;
      v27[1] = sub_10002BE60;
      return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 936, v26);
    }
    if (v18 == enum case for VideoPreview.FrameConstraints.multiFrame(_:))
    {
      uint64_t v28 = *(void *)(v0 + 1408);
      uint64_t v29 = *(void *)(v0 + 1328);
      uint64_t v30 = *(void *)(v0 + 1320);
      uint64_t v31 = *(void *)(v0 + 1288);
      uint64_t v32 = *(void *)(v0 + 1280);
      uint64_t v33 = *(void (**)(uint64_t, void))(*(void *)(v0 + 1368) + 96);
      v33(v28, *(void *)(v0 + 1360));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v29, v28, v32);
      uint64_t v34 = sub_1000B9380();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v30, v29, v32);
      uint64_t v35 = *(void *)(v0 + 1320);
      uint64_t v36 = *(void *)(v0 + 1288);
      uint64_t v37 = *(void *)(v0 + 1280);
      if (v34 < 1)
      {
        uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
        v39(*(void *)(v0 + 1320), *(void *)(v0 + 1280));
      }
      else
      {
        uint64_t v38 = sub_1000B9390();
        uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
        v39(v35, v37);
        if (v38 > 0)
        {
          uint64_t v40 = *(void *)(v0 + 1328);
          uint64_t v41 = *(void *)(v0 + 1280);
          double v42 = (double)sub_1000B9380();
          double v43 = (double)sub_1000B9390();
          uint64_t v44 = sub_1000B9350();
          v39(v40, v41);
          *(double *)(v0 + 1624) = v42;
          *(double *)(v0 + 1616) = v43;
          *(void *)(v0 + 1608) = v44;
          *(void *)(v0 + 1600) = v33;
          uint64_t v45 = (void *)swift_task_alloc();
          *(void *)(v0 + 1632) = v45;
          void *v45 = v0;
          v45[1] = sub_10002C52C;
          uint64_t v46 = *(void *)(v0 + 1272);
          return AVAssetTrack.info.getter(v46);
        }
      }
      uint64_t v51 = *(void **)(v0 + 1472);
      uint64_t v52 = *(void *)(v0 + 1328);
      uint64_t v53 = *(void *)(v0 + 1280);
      sub_1000BB6C0();
      sub_1000336B4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();

      v39(v52, v53);
    }
    else
    {
      uint64_t v47 = *(void **)(v0 + 1472);
      uint64_t v48 = *(void *)(v0 + 1408);
      uint64_t v49 = *(void *)(v0 + 1368);
      uint64_t v50 = *(void *)(v0 + 1360);
      sub_1000BB6C0();
      sub_1000336B4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
    }
  }
  else
  {
    sub_1000BB6C0();
    sub_1000336B4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v54 = *(uint64_t (**)(void))(v0 + 8);
  return v54();
}

uint64_t sub_10002BE60()
{
  *(void *)(*(void *)v1 + 1552) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100031054;
  }
  else {
    uint64_t v2 = sub_10002BFC0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10002BFC0()
{
  v0[195] = v0[117];
  v0[196] = v0[118];
  sub_10001295C(&qword_1000EC980);
  uint64_t v1 = sub_1000B8400();
  v0[197] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[198] = v2;
  void *v2 = v0;
  v2[1] = sub_10002C0C4;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 66, v1);
}

uint64_t sub_10002C0C4()
{
  *(void *)(*(void *)v1 + 1592) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100031290;
  }
  else {
    uint64_t v2 = sub_10002C224;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10002C224()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void *)(v0 + 1568);
  uint64_t v2 = *(void *)(v0 + 1560);
  long long v3 = *(_OWORD *)(v0 + 544);
  long long v4 = *(_OWORD *)(v0 + 560);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 528);
  *(_OWORD *)(v0 + 448) = v3;
  *(_OWORD *)(v0 + 464) = v4;
  uint64_t v5 = 0;
  *(void *)&long long v3 = 0;
  CGRect v31 = CGRectApplyAffineTransform(*(CGRect *)(&v1 - 3), (CGAffineTransform *)(v0 + 432));
  double width = v31.size.width;
  double height = v31.size.height;
  double v8 = (double)sub_1000B93C0();
  double v9 = fmin(width / height, 1.77777778);
  if (width / height < 0.75) {
    double v10 = 0.75;
  }
  else {
    double v10 = v9;
  }
  double v11 = ceil(v8 / v10);
  if (height == 0.0 || width == 0.0)
  {
    os_log_type_t v13 = sub_1000BBBB0();
    uint64_t v14 = sub_1000BBD50();
    os_log_type_t v15 = v13;
    BOOL v16 = os_log_type_enabled(v14, v13);
    uint64_t v17 = *(void *)(v0 + 1352);
    uint64_t v18 = *(void *)(v0 + 1344);
    uint64_t v19 = *(void *)(v0 + 1336);
    if (v16)
    {
      uint64_t v27 = *(void *)(v0 + 1352);
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      *(double *)(v0 + 952) = v8;
      *(double *)(v0 + 960) = v11;
      type metadata accessor for CGSize(0);
      uint64_t v21 = sub_1000BB960();
      *(void *)(v0 + 1040) = sub_10007ABB4(v21, v22, &v28);
      sub_1000BBE50();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "video size is zero, falling back to maxPtSize: %s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v27, v19);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
  }
  else
  {
    double v12 = v8 / width;
    if (v8 / width <= v11 / height) {
      double v12 = v11 / height;
    }
    double v8 = ceil(width * v12);
    double v11 = ceil(height * v12);
    (*(void (**)(void, void))(*(void *)(v0 + 1344) + 8))(*(void *)(v0 + 1352), *(void *)(v0 + 1336));
  }
  uint64_t v23 = *(void *)(v0 + 1528);
  *(double *)(v0 + 1624) = v8;
  *(double *)(v0 + 1616) = v11;
  *(void *)(v0 + 1608) = 0;
  *(void *)(v0 + 1600) = v23;
  uint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 1632) = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_10002C52C;
  uint64_t v25 = *(void *)(v0 + 1272);
  return AVAssetTrack.info.getter(v25);
}

uint64_t sub_10002C52C()
{
  *(void *)(*(void *)v1 + 1640) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000314CC;
  }
  else {
    uint64_t v2 = sub_10002C66C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10002C66C()
{
  uint64_t v13 = v0;
  os_log_type_t v1 = sub_1000BBBB0();
  uint64_t v2 = sub_1000BBD50();
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(v2, v1))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v5 = sub_1000BBB10();
    *(void *)(v0 + 992) = sub_10007ABB4(v5, v6, &v12);
    sub_1000BBE50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    uint64_t v7 = sub_1000BBB10();
    *(void *)(v0 + 1000) = sub_10007ABB4(v7, v8, &v12);
    sub_1000BBE50();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "thumbnailFitPxSize: %s x %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v9 = *(id *)(v0 + 1472);
  double v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 1648) = v10;
  *double v10 = v0;
  v10[1] = sub_10002C89C;
  return AVAsset.isAutoLoop.getter();
}

uint64_t sub_10002C89C(char a1)
{
  uint64_t v3 = *v2;
  *(unsigned char *)(v3 + 1821) = a1;
  *(void *)(v3 + 1656) = v1;
  swift_task_dealloc();
  if (v1)
  {

    uint64_t v4 = sub_1000316E4;
  }
  else
  {
    uint64_t v4 = sub_10002C9F0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10002C9F0()
{
  uint64_t v1 = *(void **)(v0 + 1472);

  id v2 = objc_allocWithZone((Class)AVAssetReader);
  *(void *)(v0 + 1024) = 0;
  id v3 = [v2 initWithAsset:v1 error:v0 + 1024];
  *(void *)(v0 + 1664) = v3;
  uint64_t v4 = *(void **)(v0 + 1024);
  if (!v3)
  {
    uint64_t v44 = *(void **)(v0 + 1504);
    uint64_t v45 = *(void **)(v0 + 1472);
    uint64_t v46 = *(void *)(v0 + 1272);
    uint64_t v47 = *(void *)(v0 + 1256);
    uint64_t v48 = *(void *)(v0 + 1248);
    id v49 = v4;
    sub_1000B81D0();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);

    goto LABEL_66;
  }
  uint64_t v5 = *(void *)(v0 + 1624);
  uint64_t v6 = *(void **)(v0 + 1472);
  id v7 = v4;

  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000C03C0;
  *(void *)(inited + 32) = sub_1000BB900();
  *(void *)(inited + 40) = v9;
  *(void *)(inited + 72) = sub_10001295C(&qword_1000EC950);
  *(void *)(inited + 48) = &off_1000E0D28;
  *(void *)(inited + 80) = sub_1000BB900();
  *(void *)(inited + 88) = v10;
  if ((~v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_74;
  }
  double v11 = *(double *)(v0 + 1624);
  if (v11 <= -9.22337204e18)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  if (v11 >= 9.22337204e18)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  uint64_t v12 = *(void *)(v0 + 1616);
  *(void *)(inited + 120) = &type metadata for Int;
  *(void *)(inited + 96) = (uint64_t)v11;
  *(void *)(inited + 128) = sub_1000BB900();
  *(void *)(inited + 136) = v13;
  if ((~v12 & 0x7FF0000000000000) == 0)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  double v14 = *(double *)(v0 + 1616);
  if (v14 <= -9.22337204e18)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
  }
  os_log_type_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1512);
  uint64_t v16 = *(void *)(v0 + 1400);
  uint64_t v17 = *(void *)(v0 + 1360);
  *(void *)(inited + 168) = &type metadata for Int;
  *(void *)(inited + 144) = (uint64_t)v14;
  unint64_t v18 = sub_100064E54(inited);
  sub_1000B9320();
  int v19 = v15(v16, v17);
  int v20 = enum case for VideoPreview.FrameConstraints.multiFrame(_:);
  *(_DWORD *)(v0 + 1804) = enum case for VideoPreview.FrameConstraints.multiFrame(_:);
  if (v19 == v20)
  {
    uint64_t v21 = *(void *)(v0 + 1400);
    uint64_t v22 = *(void *)(v0 + 1312);
    uint64_t v23 = *(void *)(v0 + 1288);
    uint64_t v24 = *(void *)(v0 + 1280);
    (*(void (**)(uint64_t, void))(v0 + 1600))(v21, *(void *)(v0 + 1360));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v22, v21, v24);
    if (sub_1000B9360() >= 1)
    {
      uint64_t v25 = sub_1000BB900();
      uint64_t v27 = v26;
      uint64_t v28 = sub_1000B9360();
      *(void *)(v0 + 784) = &type metadata for Int;
      *(void *)(v0 + 760) = v28;
      sub_10001DACC((_OWORD *)(v0 + 760), (_OWORD *)(v0 + 728));
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1000336FC((_OWORD *)(v0 + 728), v25, v27, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    *(void *)(v0 + 1672) = v18;
    uint64_t v30 = *(void *)(v0 + 1312);
    uint64_t v31 = *(void *)(v0 + 1304);
    uint64_t v32 = *(void *)(v0 + 1288);
    uint64_t v33 = *(void *)(v0 + 1280);
    uint64_t v34 = sub_1000B9350();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v31, v30, v33);
    uint64_t v35 = *(void *)(v0 + 1304);
    uint64_t v36 = *(void *)(v0 + 1288);
    uint64_t v37 = *(void *)(v0 + 1280);
    if (v34 < 1)
    {
      uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v39(*(void *)(v0 + 1304), *(void *)(v0 + 1280));
    }
    else
    {
      char v38 = sub_1000B9370();
      uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      *(void *)(v0 + 1680) = v39;
      *(void *)(v0 + 1688) = (v36 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v39(v35, v37);
      if (v38)
      {
        sub_10001295C(&qword_1000EC970);
        uint64_t v40 = sub_1000B8420();
        *(void *)(v0 + 1696) = v40;
        uint64_t v41 = (void *)swift_task_alloc();
        *(void *)(v0 + 1704) = v41;
        void *v41 = v0;
        v41[1] = sub_10002E0A0;
        uint64_t v42 = v0 + 888;
        uint64_t v43 = v40;
LABEL_25:
        return AVAsynchronousKeyValueLoading.load<A>(_:)(v42, v43);
      }
    }
    v39(*(void *)(v0 + 1312), *(void *)(v0 + 1280));
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 1368) + 8))(*(void *)(v0 + 1400), *(void *)(v0 + 1360));
  }
  *(void *)(v0 + 1720) = v18;
  int v203 = *(_DWORD *)(v0 + 1804);
  uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t))(v0 + 1512);
  uint64_t v51 = *(void **)(v0 + 1504);
  uint64_t v52 = *(void *)(v0 + 1392);
  uint64_t v53 = *(void *)(v0 + 1360);
  id v54 = objc_allocWithZone((Class)AVAssetReaderTrackOutput);
  id v55 = v51;
  swift_bridgeObjectRetain();
  Class isa = sub_1000BB850().super.isa;
  swift_bridgeObjectRelease();
  id v57 = [v54 initWithTrack:v55 outputSettings:isa];
  *(void *)(v0 + 1728) = v57;

  sub_1000B9320();
  if (v50(v52, v53) == v203)
  {
    uint64_t v58 = *(void *)(v0 + 1392);
    uint64_t v59 = *(void *)(v0 + 1296);
    uint64_t v60 = *(void *)(v0 + 1288);
    uint64_t v61 = *(void *)(v0 + 1280);
    (*(void (**)(uint64_t, void))(v0 + 1600))(v58, *(void *)(v0 + 1360));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v59, v58, v61);
    [v57 setAppliesPreferredTrackTransform:sub_1000B93A0() & 1];
    if (sub_1000B9360() == 1) {
      [v57 setLimitsImageQueueCapacityToOneFrame:1];
    }
    (*(void (**)(void, void))(*(void *)(v0 + 1288) + 8))(*(void *)(v0 + 1296), *(void *)(v0 + 1280));
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 1368) + 8))(*(void *)(v0 + 1392), *(void *)(v0 + 1360));
    [v57 setAppliesPreferredTrackTransform:1];
  }
  uint64_t v62 = *(void **)(v0 + 1664);
  int v63 = *(_DWORD *)(v0 + 1800);
  uint64_t v64 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1512);
  uint64_t v65 = *(void *)(v0 + 1384);
  uint64_t v66 = *(void *)(v0 + 1368);
  uint64_t v67 = *(void *)(v0 + 1360);
  [v57 setAlwaysCopiesSampleData:0];
  [v62 addOutput:v57];
  sub_1000B9320();
  int v68 = v64(v65, v67);
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v67);
  if (v68 == v63)
  {
    sub_10001295C(&qword_1000EC960);
    uint64_t v69 = sub_1000B83F0();
    *(void *)(v0 + 1736) = v69;
    uint64_t v70 = (void *)swift_task_alloc();
    *(void *)(v0 + 1744) = v70;
    *uint64_t v70 = v0;
    v70[1] = sub_10002F6F0;
    uint64_t v42 = v0 + 1792;
    uint64_t v43 = v69;
    goto LABEL_25;
  }
  uint64_t v71 = *(void **)(v0 + 1728);
  [*(id *)(v0 + 1664) startReading];
  *(void *)(v0 + 1016) = 0;
  id v72 = [v71 copyNextSampleBuffer];
  if (!v72)
  {
    uint64_t v128 = *(void **)(v0 + 1728);
    uint64_t v129 = *(void **)(v0 + 1664);
    char v130 = *(void **)(v0 + 1504);
    uint64_t v131 = *(void **)(v0 + 1472);
    uint64_t v132 = *(void *)(v0 + 1272);
    uint64_t v133 = *(void *)(v0 + 1256);
    uint64_t v134 = *(void *)(v0 + 1248);
    swift_bridgeObjectRelease();
    sub_1000BB6C0();
    sub_1000336B4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v132, v134);
    goto LABEL_66;
  }
  id v73 = v72;
  uint64_t v74 = *(void *)(v0 + 1608);
  int v75 = *(_DWORD *)(v0 + 1800);
  int v76 = *(_DWORD *)(v0 + 1796);
  uint64_t v77 = (opaqueCMSampleBuffer *)v72;
  v173 = (void *)(v0 + 1016);
  swift_beginAccess();
  if (v76 != v75 && *(void *)(v0 + 1016) == v74) {
    goto LABEL_65;
  }
  uint64_t v171 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1256) + 16);
  uint64_t v78 = *(void *)(v0 + 1224);
  uint64_t v79 = *(void *)(v0 + 1184);
  uint64_t v80 = *(void *)(v0 + 1152);
  uint64_t v81 = *(void *)(v0 + 1120);
  v169 = (void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16);
  uint64_t v170 = (void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16);
  uint64_t v172 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1368) + 8);
  long long v166 = (void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16);
  v167 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1096) + 8);
  v168 = (void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16);
  uint64_t v162 = (void (**)(uint64_t, uint64_t))(v81 + 8);
  uint64_t v163 = (void (**)(uint64_t, uint64_t))(v80 + 8);
  v164 = (void (**)(uint64_t, uint64_t))(v79 + 8);
  uint64_t v165 = (void (**)(uint64_t, uint64_t))(v78 + 8);
  uint64_t v82 = v73;
  while (1)
  {
    if (CMSampleBufferGetNumSamples(v77)) {
      goto LABEL_44;
    }
    uint64_t v83 = *(void *)(v0 + 1608);
    int v84 = *(_DWORD *)(v0 + 1800);
    int v85 = *(_DWORD *)(v0 + 1796);

    uint64_t v86 = *(void *)(v0 + 1016);
    uint64_t v87 = v82;
    uint64_t v88 = v87;
    if (v85 != v84 && v86 == v83)
    {
      id v73 = v82;
      uint64_t v77 = v87;
      goto LABEL_65;
    }
    if (!CMSampleBufferGetNumSamples(v87)) {
      break;
    }
    uint64_t v77 = v88;
LABEL_44:
    uint64_t v96 = sub_1000BBC40();
    if (!v96)
    {
      uint64_t v142 = *(void **)(v0 + 1728);
      uint64_t v143 = v77;
      char v144 = *(void **)(v0 + 1664);
      uint64_t v145 = *(void **)(v0 + 1504);
      uint64_t v146 = *(void **)(v0 + 1472);
      uint64_t v147 = *(void *)(v0 + 1256);
      uint64_t v202 = *(void *)(v0 + 1248);
      uint64_t v205 = *(void *)(v0 + 1272);
      swift_bridgeObjectRelease();
      sub_1000BB6C0();
      sub_1000336B4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v205, v202);
      goto LABEL_66;
    }
    char v97 = (void *)v96;
    v200 = v82;
    v204 = v77;
    os_log_type_t v98 = sub_1000BBBB0();
    uint64_t v99 = sub_1000BBD50();
    if (os_log_type_enabled(v99, v98))
    {
      uint64_t v100 = swift_slowAlloc();
      *(_DWORD *)uint64_t v100 = 134217984;
      *(void *)(v100 + 4) = *v173;
      _os_log_impl((void *)&_mh_execute_header, v99, v98, "BlastDoor processing thumbnail %ld", (uint8_t *)v100, 0xCu);
      swift_slowDealloc();
    }
    int v197 = *(_DWORD *)(v0 + 1800);
    v194 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1512);
    uint64_t v190 = *(void *)(v0 + 1376);
    uint64_t v192 = *(void *)(v0 + 1360);
    uint64_t v101 = *(void *)(v0 + 1272);
    uint64_t v102 = *(void *)(v0 + 1264);
    uint64_t v103 = *(void *)(v0 + 1248);
    uint64_t v104 = *(void *)(v0 + 1240);
    uint64_t v176 = *(void *)(v0 + 1232);
    uint64_t v177 = *(void *)(v0 + 1216);
    uint64_t v105 = *(void *)(v0 + 1208);
    uint64_t v106 = *(void *)(v0 + 1200);
    uint64_t v178 = *(void *)(v0 + 1192);
    uint64_t v179 = *(void *)(v0 + 1176);
    uint64_t v175 = *(void *)(v0 + 1168);
    uint64_t v181 = *(void *)(v0 + 1160);
    uint64_t v183 = *(void *)(v0 + 1144);

    sub_1000BBC50();
    sub_1000BBCA0();
    type metadata accessor for CVBuffer(0);
    uint64_t v107 = sub_1000BB440();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v105, 1, 1, v107);
    id v174 = v97;
    sub_1000BB450();
    uint64_t v108 = *v171;
    (*v171)(v102, v101, v103);
    sub_1000B92E0();
    v108(v102, v101, v103);
    sub_1000B9300();
    (*v170)(v176, v104, v177);
    (*v169)(v178, v106, v179);
    (*v168)(v181, v175, v183);
    sub_1000B93E0();
    sub_1000B9320();
    int v109 = v194(v190, v192);
    uint64_t v110 = *(void **)(v0 + 1728);
    if (v109 == v197)
    {
      v182 = *(void **)(v0 + 1664);
      v184 = *(void **)(v0 + 1504);
      unint64_t v185 = *(void **)(v0 + 1472);
      uint64_t v148 = *(void *)(v0 + 1376);
      uint64_t v149 = *(void *)(v0 + 1360);
      uint64_t v196 = *(void *)(v0 + 1248);
      uint64_t v199 = *(void *)(v0 + 1272);
      uint64_t v193 = *(void *)(v0 + 1240);
      uint64_t v195 = *(void *)(v0 + 1256);
      uint64_t v189 = *(void *)(v0 + 1200);
      uint64_t v191 = *(void *)(v0 + 1216);
      uint64_t v187 = *(void *)(v0 + 1168);
      uint64_t v188 = *(void *)(v0 + 1176);
      uint64_t v186 = *(void *)(v0 + 1144);
      uint64_t v150 = *(void *)(v0 + 1136);
      uint64_t v151 = *(void *)(v0 + 1128);
      uint64_t v152 = *(void *)(v0 + 1112);
      uint64_t v153 = *(void *)(v0 + 1104);
      uint64_t v180 = *(void *)(v0 + 1088);
      swift_bridgeObjectRelease();
      (*v172)(v148, v149);
      sub_1000BBBB0();
      uint64_t v154 = (void *)sub_1000BBD50();
      sub_1000B8780();

      (*v166)(v151, v150, v152);
      sub_1000336B4(&qword_1000EC958, (void (*)(uint64_t))&type metadata accessor for VideoPreview);
      sub_1000BAA90();
      sub_10001295C(&qword_1000EC910);
      sub_1000BBAD0();
      (*v167)(v153, v180);
      *(void *)(v0 + 968) = 0;
      sub_1000BBAE0();

      (*v162)(v150, v152);
      (*v163)(v187, v186);
      (*v164)(v189, v188);
      (*v165)(v193, v191);
      (*(void (**)(uint64_t, uint64_t))(v195 + 8))(v199, v196);
      goto LABEL_66;
    }
    (*v172)(*(void *)(v0 + 1376), *(void *)(v0 + 1360));
    id v73 = [v110 copyNextSampleBuffer];

    uint64_t v111 = *(void *)(v0 + 1016);
    BOOL v112 = __OFADD__(v111, 1);
    uint64_t v113 = v111 + 1;
    if (v112) {
      goto LABEL_79;
    }
    void *v173 = v113;
    if (v73) {
      BOOL v115 = *(_DWORD *)(v0 + 1796) != *(_DWORD *)(v0 + 1800) && v113 == *(void *)(v0 + 1608);
    }
    else {
      BOOL v115 = 1;
    }
    uint64_t v116 = *(void *)(v0 + 1104);
    uint64_t v117 = *(void *)(v0 + 1088);
    (*v166)(*(void *)(v0 + 1128), *(void *)(v0 + 1136), *(void *)(v0 + 1112));
    sub_1000336B4(&qword_1000EC958, (void (*)(uint64_t))&type metadata accessor for VideoPreview);
    sub_1000BAA90();
    sub_10001295C(&qword_1000EC910);
    sub_1000BBAD0();
    (*v167)(v116, v117);
    uint64_t v118 = *(void *)(v0 + 1240);
    uint64_t v198 = *(void *)(v0 + 1200);
    uint64_t v201 = *(void *)(v0 + 1216);
    uint64_t v119 = *(void *)(v0 + 1176);
    uint64_t v120 = *(void *)(v0 + 1168);
    uint64_t v121 = *(void *)(v0 + 1144);
    uint64_t v122 = *(void *)(v0 + 1136);
    uint64_t v123 = *(void *)(v0 + 1112);
    if (v115)
    {
      *(void *)(v0 + 976) = 0;
      sub_1000BBAE0();
    }

    (*v162)(v122, v123);
    (*v163)(v120, v121);
    (*v164)(v198, v119);
    (*v165)(v118, v201);
    if (!v73)
    {
      uint64_t v155 = *(void **)(v0 + 1728);
      uint64_t v156 = *(void **)(v0 + 1504);
      uint64_t v157 = *(void **)(v0 + 1472);
      uint64_t v158 = *(void *)(v0 + 1272);
      uint64_t v159 = *(void *)(v0 + 1256);
      uint64_t v160 = *(void *)(v0 + 1248);

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v158, v160);
      goto LABEL_66;
    }
    uint64_t v124 = *(void *)(v0 + 1608);
    int v125 = *(_DWORD *)(v0 + 1800);
    int v126 = *(_DWORD *)(v0 + 1796);
    uint64_t v127 = *(void *)(v0 + 1016);
    uint64_t v77 = (opaqueCMSampleBuffer *)v73;
    uint64_t v82 = v73;
    if (v126 != v125)
    {
      uint64_t v82 = v73;
      if (v127 == v124) {
        goto LABEL_65;
      }
    }
  }
  while (1)
  {
    uint64_t v90 = *(void *)(v0 + 1608);
    int v91 = *(_DWORD *)(v0 + 1800);
    int v92 = *(_DWORD *)(v0 + 1796);

    uint64_t v93 = *(void *)(v0 + 1016);
    unint64_t v94 = v88;
    uint64_t v77 = v94;
    if (v92 != v91 && v93 == v90) {
      break;
    }
    if (CMSampleBufferGetNumSamples(v94)) {
      goto LABEL_44;
    }
  }
  id v73 = v82;
LABEL_65:
  uint64_t v135 = *(void **)(v0 + 1728);
  uint64_t v136 = *(void **)(v0 + 1504);
  uint64_t v137 = *(void **)(v0 + 1472);
  uint64_t v138 = *(void *)(v0 + 1272);
  uint64_t v139 = *(void *)(v0 + 1256);
  uint64_t v140 = *(void *)(v0 + 1248);

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v138, v140);
LABEL_66:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v141 = *(uint64_t (**)(void))(v0 + 8);
  return v141();
}

uint64_t sub_10002E0A0()
{
  *(void *)(*(void *)v1 + 1712) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    id v2 = sub_100031920;
  }
  else
  {
    swift_release();
    id v2 = sub_10002E21C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10002E21C()
{
  uint64_t v187 = v0;
  uint64_t v1 = *(void *)(v0 + 904);
  uint64_t v2 = *(void *)(v0 + 896);
  *(void *)(v0 + 912) = *(void *)(v0 + 888);
  *(void *)(v0 + 920) = v2;
  *(void *)(v0 + 928) = v1;
  double Seconds = CMTimeGetSeconds((CMTime *)(v0 + 912));
  uint64_t v4 = sub_1000B9350();
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
LABEL_62:
    __break(1u);
  }
  double v5 = Seconds / ((double)(v4 - 1) + 0.1);
  if (v5 <= 0.0)
  {
    (*(void (**)(void, void))(v0 + 1680))(*(void *)(v0 + 1312), *(void *)(v0 + 1280));
    CMTimeValue value = *(void *)(v0 + 1672);
  }
  else
  {
    CMTimeMakeWithSeconds(&v184, v5, 1000);
    CMTimeEpoch epoch = v184.epoch;
    uint64_t v7 = *(void *)&v184.timescale;
    *(void *)(v0 + 864) = v184.value;
    *(void *)(v0 + 872) = v7;
    *(void *)(v0 + 880) = epoch;
    CFDictionaryRef v8 = CMTimeCopyAsDictionary((CMTime *)(v0 + 864), kCFAllocatorDefault);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 1680);
    CMTimeValue v10 = *(void *)(v0 + 1672);
    if (!v8)
    {
      os_log_type_t v98 = *(void **)(v0 + 1664);
      uint64_t v99 = *(void **)(v0 + 1504);
      uint64_t v100 = *(void **)(v0 + 1472);
      uint64_t v101 = *(void *)(v0 + 1312);
      uint64_t v102 = *(void *)(v0 + 1280);
      uint64_t v103 = *(void *)(v0 + 1256);
      uint64_t v174 = *(void *)(v0 + 1248);
      uint64_t v178 = *(void *)(v0 + 1272);
      swift_bridgeObjectRelease();
      sub_1000BB6C0();
      sub_1000336B4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();

      v9(v101, v102);
      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v178, v174);
      goto LABEL_54;
    }
    CFDictionaryRef v11 = v8;
    uint64_t v12 = *(void *)(v0 + 1312);
    uint64_t v13 = *(void *)(v0 + 1280);
    uint64_t v14 = sub_1000BB900();
    uint64_t v16 = v15;
    *(void *)(v0 + 720) = sub_10001DAE4(0, (unint64_t *)&qword_1000EC6B0);
    *(void *)(v0 + 696) = v11;
    sub_10001DACC((_OWORD *)(v0 + 696), (_OWORD *)(v0 + 664));
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v184.CMTimeValue value = v10;
    sub_1000336FC((_OWORD *)(v0 + 664), v14, v16, isUniquelyReferenced_nonNull_native);
    CMTimeValue value = v184.value;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9(v12, v13);
  }
  *(void *)(v0 + 1720) = value;
  int v181 = *(_DWORD *)(v0 + 1804);
  int v19 = *(unsigned int (**)(uint64_t, uint64_t))(v0 + 1512);
  int v20 = *(void **)(v0 + 1504);
  uint64_t v21 = *(void *)(v0 + 1392);
  uint64_t v22 = *(void *)(v0 + 1360);
  id v23 = objc_allocWithZone((Class)AVAssetReaderTrackOutput);
  id v24 = v20;
  swift_bridgeObjectRetain();
  Class isa = sub_1000BB850().super.isa;
  swift_bridgeObjectRelease();
  id v26 = [v23 initWithTrack:v24 outputSettings:isa];
  *(void *)(v0 + 1728) = v26;

  sub_1000B9320();
  if (v19(v21, v22) == v181)
  {
    uint64_t v27 = *(void *)(v0 + 1392);
    uint64_t v28 = *(void *)(v0 + 1296);
    uint64_t v29 = *(void *)(v0 + 1288);
    uint64_t v30 = *(void *)(v0 + 1280);
    (*(void (**)(uint64_t, void))(v0 + 1600))(v27, *(void *)(v0 + 1360));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v28, v27, v30);
    [v26 setAppliesPreferredTrackTransform:sub_1000B93A0() & 1];
    if (sub_1000B9360() == 1) {
      [v26 setLimitsImageQueueCapacityToOneFrame:1];
    }
    (*(void (**)(void, void))(*(void *)(v0 + 1288) + 8))(*(void *)(v0 + 1296), *(void *)(v0 + 1280));
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 1368) + 8))(*(void *)(v0 + 1392), *(void *)(v0 + 1360));
    [v26 setAppliesPreferredTrackTransform:1];
  }
  uint64_t v31 = *(void **)(v0 + 1664);
  int v32 = *(_DWORD *)(v0 + 1800);
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1512);
  uint64_t v34 = *(void *)(v0 + 1384);
  uint64_t v35 = *(void *)(v0 + 1368);
  uint64_t v36 = *(void *)(v0 + 1360);
  [v26 setAlwaysCopiesSampleData:0];
  [v31 addOutput:v26];
  sub_1000B9320();
  int v37 = v33(v34, v36);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
  if (v37 == v32)
  {
    sub_10001295C(&qword_1000EC960);
    uint64_t v38 = sub_1000B83F0();
    *(void *)(v0 + 1736) = v38;
    uint64_t v39 = (void *)swift_task_alloc();
    *(void *)(v0 + 1744) = v39;
    void *v39 = v0;
    v39[1] = sub_10002F6F0;
    return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 1792, v38);
  }
  uint64_t v40 = *(void **)(v0 + 1728);
  [*(id *)(v0 + 1664) startReading];
  *(void *)(v0 + 1016) = 0;
  id v41 = [v40 copyNextSampleBuffer];
  if (!v41)
  {
    uint64_t v104 = *(void **)(v0 + 1728);
    uint64_t v105 = *(void **)(v0 + 1664);
    uint64_t v106 = *(void **)(v0 + 1504);
    uint64_t v107 = *(void **)(v0 + 1472);
    uint64_t v108 = *(void *)(v0 + 1272);
    uint64_t v109 = *(void *)(v0 + 1256);
    uint64_t v110 = *(void *)(v0 + 1248);
    swift_bridgeObjectRelease();
    sub_1000BB6C0();
    sub_1000336B4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v108, v110);
    goto LABEL_54;
  }
  id v42 = v41;
  uint64_t v43 = *(void *)(v0 + 1608);
  int v44 = *(_DWORD *)(v0 + 1800);
  int v45 = *(_DWORD *)(v0 + 1796);
  uint64_t v46 = (opaqueCMSampleBuffer *)v41;
  uint64_t v149 = (void *)(v0 + 1016);
  swift_beginAccess();
  if (v45 != v44 && *(void *)(v0 + 1016) == v43) {
    goto LABEL_53;
  }
  uint64_t v148 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1256) + 16);
  uint64_t v47 = *(void *)(v0 + 1224);
  uint64_t v48 = *(void *)(v0 + 1184);
  uint64_t v49 = *(void *)(v0 + 1152);
  uint64_t v50 = *(void *)(v0 + 1120);
  uint64_t v146 = (void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16);
  uint64_t v147 = (void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
  char v144 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1368) + 8);
  uint64_t v145 = (void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16);
  uint64_t v138 = (void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
  uint64_t v139 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1096) + 8);
  uint64_t v140 = (void (**)(uint64_t, uint64_t))(v50 + 8);
  uint64_t v141 = (void (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v142 = (void (**)(uint64_t, uint64_t))(v48 + 8);
  uint64_t v143 = (void (**)(uint64_t, uint64_t))(v47 + 8);
  uint64_t v51 = v42;
  while (1)
  {
    if (CMSampleBufferGetNumSamples(v46)) {
      goto LABEL_31;
    }
    uint64_t v52 = *(void *)(v0 + 1608);
    int v53 = *(_DWORD *)(v0 + 1800);
    int v54 = *(_DWORD *)(v0 + 1796);

    uint64_t v55 = *(void *)(v0 + 1016);
    uint64_t v56 = v51;
    id v57 = v56;
    if (v54 != v53 && v55 == v52)
    {
      id v42 = v51;
      uint64_t v46 = v56;
      goto LABEL_53;
    }
    if (!CMSampleBufferGetNumSamples(v56)) {
      break;
    }
    uint64_t v46 = v57;
LABEL_31:
    uint64_t v65 = sub_1000BBC40();
    if (!v65)
    {
      uint64_t v118 = *(void **)(v0 + 1728);
      uint64_t v119 = v46;
      uint64_t v120 = *(void **)(v0 + 1664);
      uint64_t v121 = *(void **)(v0 + 1504);
      uint64_t v122 = *(void **)(v0 + 1472);
      uint64_t v123 = *(void *)(v0 + 1256);
      uint64_t v179 = *(void *)(v0 + 1248);
      uint64_t v183 = *(void *)(v0 + 1272);
      swift_bridgeObjectRelease();
      sub_1000BB6C0();
      sub_1000336B4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v183, v179);
      goto LABEL_54;
    }
    uint64_t v66 = (void *)v65;
    uint64_t v151 = v51;
    v182 = v46;
    os_log_type_t v67 = sub_1000BBBB0();
    int v68 = sub_1000BBD50();
    if (os_log_type_enabled(v68, v67))
    {
      uint64_t v69 = swift_slowAlloc();
      *(_DWORD *)uint64_t v69 = 134217984;
      *(void *)(v69 + 4) = *v149;
      _os_log_impl((void *)&_mh_execute_header, v68, v67, "BlastDoor processing thumbnail %ld", (uint8_t *)v69, 0xCu);
      swift_slowDealloc();
    }
    int v176 = *(_DWORD *)(v0 + 1800);
    uint64_t v171 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1512);
    uint64_t v167 = *(void *)(v0 + 1376);
    uint64_t v169 = *(void *)(v0 + 1360);
    uint64_t v70 = *(void *)(v0 + 1272);
    uint64_t v71 = *(void *)(v0 + 1264);
    uint64_t v72 = *(void *)(v0 + 1248);
    uint64_t v73 = *(void *)(v0 + 1240);
    uint64_t v153 = *(void *)(v0 + 1232);
    uint64_t v154 = *(void *)(v0 + 1216);
    uint64_t v74 = *(void *)(v0 + 1208);
    uint64_t v75 = *(void *)(v0 + 1200);
    uint64_t v155 = *(void *)(v0 + 1192);
    uint64_t v156 = *(void *)(v0 + 1176);
    uint64_t v152 = *(void *)(v0 + 1168);
    uint64_t v158 = *(void *)(v0 + 1160);
    uint64_t v160 = *(void *)(v0 + 1144);

    sub_1000BBC50();
    sub_1000BBCA0();
    type metadata accessor for CVBuffer(0);
    uint64_t v185 = v76;
    uint64_t v186 = &protocol witness table for CVBufferRef;
    v184.CMTimeValue value = (CMTimeValue)v66;
    uint64_t v77 = sub_1000BB440();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v74, 1, 1, v77);
    id v150 = v66;
    sub_1000BB450();
    uint64_t v78 = *v148;
    (*v148)(v71, v70, v72);
    sub_1000B92E0();
    v78(v71, v70, v72);
    sub_1000B9300();
    (*v147)(v153, v73, v154);
    (*v146)(v155, v75, v156);
    (*v145)(v158, v152, v160);
    sub_1000B93E0();
    sub_1000B9320();
    int v79 = v171(v167, v169);
    uint64_t v80 = *(void **)(v0 + 1728);
    if (v79 == v176)
    {
      uint64_t v159 = *(void **)(v0 + 1664);
      v161 = *(void **)(v0 + 1504);
      uint64_t v162 = *(void **)(v0 + 1472);
      uint64_t v124 = *(void *)(v0 + 1376);
      uint64_t v125 = *(void *)(v0 + 1360);
      uint64_t v175 = *(void *)(v0 + 1248);
      uint64_t v180 = *(void *)(v0 + 1272);
      uint64_t v170 = *(void *)(v0 + 1240);
      uint64_t v172 = *(void *)(v0 + 1256);
      uint64_t v166 = *(void *)(v0 + 1200);
      uint64_t v168 = *(void *)(v0 + 1216);
      uint64_t v164 = *(void *)(v0 + 1168);
      uint64_t v165 = *(void *)(v0 + 1176);
      uint64_t v163 = *(void *)(v0 + 1144);
      uint64_t v126 = *(void *)(v0 + 1136);
      uint64_t v127 = *(void *)(v0 + 1128);
      uint64_t v128 = *(void *)(v0 + 1112);
      uint64_t v129 = *(void *)(v0 + 1104);
      uint64_t v157 = *(void *)(v0 + 1088);
      swift_bridgeObjectRelease();
      (*v144)(v124, v125);
      sub_1000BBBB0();
      char v130 = (void *)sub_1000BBD50();
      sub_1000B8780();

      (*v138)(v127, v126, v128);
      sub_1000336B4(&qword_1000EC958, (void (*)(uint64_t))&type metadata accessor for VideoPreview);
      sub_1000BAA90();
      sub_10001295C(&qword_1000EC910);
      sub_1000BBAD0();
      (*v139)(v129, v157);
      *(void *)(v0 + 968) = 0;
      sub_1000BBAE0();

      (*v140)(v126, v128);
      (*v141)(v164, v163);
      (*v142)(v166, v165);
      (*v143)(v170, v168);
      (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v180, v175);
      goto LABEL_54;
    }
    (*v144)(*(void *)(v0 + 1376), *(void *)(v0 + 1360));
    id v42 = [v80 copyNextSampleBuffer];

    uint64_t v81 = *(void *)(v0 + 1016);
    BOOL v82 = __OFADD__(v81, 1);
    uint64_t v83 = v81 + 1;
    if (v82) {
      goto LABEL_62;
    }
    *uint64_t v149 = v83;
    if (v42) {
      BOOL v85 = *(_DWORD *)(v0 + 1796) != *(_DWORD *)(v0 + 1800) && v83 == *(void *)(v0 + 1608);
    }
    else {
      BOOL v85 = 1;
    }
    uint64_t v86 = *(void *)(v0 + 1104);
    uint64_t v87 = *(void *)(v0 + 1088);
    (*v138)(*(void *)(v0 + 1128), *(void *)(v0 + 1136), *(void *)(v0 + 1112));
    sub_1000336B4(&qword_1000EC958, (void (*)(uint64_t))&type metadata accessor for VideoPreview);
    sub_1000BAA90();
    sub_10001295C(&qword_1000EC910);
    sub_1000BBAD0();
    (*v139)(v86, v87);
    uint64_t v88 = *(void *)(v0 + 1240);
    uint64_t v173 = *(void *)(v0 + 1200);
    uint64_t v177 = *(void *)(v0 + 1216);
    uint64_t v89 = *(void *)(v0 + 1176);
    uint64_t v90 = *(void *)(v0 + 1168);
    uint64_t v91 = *(void *)(v0 + 1144);
    uint64_t v92 = *(void *)(v0 + 1136);
    uint64_t v93 = *(void *)(v0 + 1112);
    if (v85)
    {
      *(void *)(v0 + 976) = 0;
      sub_1000BBAE0();
    }

    (*v140)(v92, v93);
    (*v141)(v90, v91);
    (*v142)(v173, v89);
    (*v143)(v88, v177);
    if (!v42)
    {
      uint64_t v131 = *(void **)(v0 + 1728);
      uint64_t v132 = *(void **)(v0 + 1504);
      uint64_t v133 = *(void **)(v0 + 1472);
      uint64_t v134 = *(void *)(v0 + 1272);
      uint64_t v135 = *(void *)(v0 + 1256);
      uint64_t v136 = *(void *)(v0 + 1248);

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v134, v136);
      goto LABEL_54;
    }
    uint64_t v94 = *(void *)(v0 + 1608);
    int v95 = *(_DWORD *)(v0 + 1800);
    int v96 = *(_DWORD *)(v0 + 1796);
    uint64_t v97 = *(void *)(v0 + 1016);
    uint64_t v46 = (opaqueCMSampleBuffer *)v42;
    uint64_t v51 = v42;
    if (v96 != v95)
    {
      uint64_t v51 = v42;
      if (v97 == v94) {
        goto LABEL_53;
      }
    }
  }
  while (1)
  {
    uint64_t v59 = *(void *)(v0 + 1608);
    int v60 = *(_DWORD *)(v0 + 1800);
    int v61 = *(_DWORD *)(v0 + 1796);

    uint64_t v62 = *(void *)(v0 + 1016);
    int v63 = v57;
    uint64_t v46 = v63;
    if (v61 != v60 && v62 == v59) {
      break;
    }
    if (CMSampleBufferGetNumSamples(v63)) {
      goto LABEL_31;
    }
  }
  id v42 = v51;
LABEL_53:
  uint64_t v111 = *(void **)(v0 + 1728);
  BOOL v112 = *(void **)(v0 + 1504);
  uint64_t v113 = *(void **)(v0 + 1472);
  uint64_t v114 = *(void *)(v0 + 1272);
  uint64_t v115 = *(void *)(v0 + 1256);
  uint64_t v116 = *(void *)(v0 + 1248);

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v114, v116);
LABEL_54:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v117 = *(uint64_t (**)(void))(v0 + 8);
  return v117();
}

uint64_t sub_10002F6F0()
{
  *(void *)(*(void *)v1 + 1752) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_100031B80;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_10002F86C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10002F86C()
{
  float v1 = ceilf(*(float *)(v0 + 1792));
  *(float *)(v0 + 1808) = v1;
  if ((~LODWORD(v1) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v1 <= -2147500000.0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
  }
  if (v1 >= 2147500000.0) {
    goto LABEL_9;
  }
  *(void *)(v0 + 1760) = kCMTimeZero.value;
  *(void *)(v0 + 1812) = *(void *)&kCMTimeZero.timescale;
  *(void *)(v0 + 1768) = kCMTimeZero.epoch;
  sub_10001295C(&qword_1000EC968);
  uint64_t v2 = sub_1000B8410();
  *(void *)(v0 + 1776) = v2;
  id v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 1784) = v3;
  void *v3 = v0;
  v3[1] = sub_10002F9CC;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 984, v2);
}

uint64_t sub_10002F9CC()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    swift_release();
    float v1 = sub_100031DCC;
  }
  else
  {
    swift_release();
    float v1 = sub_10002FB40;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_10002FB40()
{
  uint64_t v185 = v0;
  unint64_t v1 = *(void *)(v0 + 984);
  if (v1 >> 62) {
    goto LABEL_71;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = (uint64_t *)(v0 + 1812);
    if (!v2) {
      break;
    }
    unint64_t v4 = 0;
    unint64_t v5 = v1 & 0xC000000000000001;
    p_ivars = &MBDHTMLToSuper_FONT_Frame__metaData.ivars;
    uint64_t v166 = v2;
    while (1)
    {
      if (v5)
      {
        id v7 = (id)sub_1000BBEF0();
      }
      else
      {
        if (v4 >= *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_69;
        }
        id v7 = *(id *)(v1 + 32 + 8 * v4);
      }
      CFDictionaryRef v8 = v7;
      BOOL v9 = __OFADD__(v4++, 1);
      if (v9) {
        break;
      }
      if ((objc_msgSend(v7, (SEL)p_ivars[485]) & 1) == 0)
      {
        CMTimeValue v10 = *(void **)(v0 + 1504);
        [v8 timeMapping];
        uint64_t v11 = v177;
        uint64_t v12 = v176;
        *(void *)(v0 + 792) = v175;
        *(void *)(v0 + 800) = v12;
        *(void *)(v0 + 808) = v11;
        id v13 = [v10 makeSampleCursorWithPresentationTimeStamp:v0 + 792];
        if (v13)
        {
          uint64_t v14 = v13;
          do
          {
            if (([v14 currentSampleDependencyInfo] & 0x1000000) == 0) {
              break;
            }
            if ([v14 stepInPresentationOrderByCount:1] != (id)1) {
              break;
            }
            [v14 presentationTimeStamp];
            [v8 timeMapping];
            uint64_t v15 = v179;
            uint64_t v16 = v176;
            uint64_t v17 = v178;
            long long v18 = v177;
            *(void *)(v0 + 480) = v175;
            *(void *)(v0 + 488) = v16;
            *(_OWORD *)(v0 + 496) = v18;
            *(void *)(v0 + 512) = v17;
            *(void *)(v0 + 520) = v15;
            sub_1000BBB70();
          }
          while ((sub_1000BBC80() & 1) == 0);
          if (([v14 currentSampleDependencyInfo] & 0x1000000) == 0)
          {
            swift_bridgeObjectRelease();
            [v14 presentationTimeStamp];
            uint64_t v91 = v175;
            uint64_t v92 = v177;
            uint64_t v93 = v176;
            [v8 timeMapping];
            uint64_t v94 = v175;
            long long v95 = v177;
            uint64_t v96 = v179;
            uint64_t v97 = v176;
            os_log_type_t v98 = v178;
            [v8 timeMapping];
            uint64_t v99 = v180;
            uint64_t v100 = v184;
            uint64_t v101 = v181;
            uint64_t v102 = v183;
            long long v103 = v182;
            *(void *)(v0 + 816) = v91;
            *(void *)(v0 + 824) = v93;
            *(void *)(v0 + 832) = v92;
            *(void *)(v0 + 576) = v94;
            *(void *)(v0 + 584) = v97;
            *(_OWORD *)(v0 + 592) = v95;
            *(void *)(v0 + 608) = v98;
            *(void *)(v0 + 616) = v96;
            *(void *)(v0 + 336) = v99;
            *(void *)(v0 + 344) = v101;
            *(_OWORD *)(v0 + 352) = v103;
            *(void *)(v0 + 368) = v102;
            *(void *)(v0 + 376) = v100;
            CMTimeMapTimeFromRangeToRange((CMTime *)&v175, (CMTime *)(v0 + 816), (CMTimeRange *)(v0 + 576), (CMTimeRange *)(v0 + 336));
            uint64_t v21 = v175;
            uint64_t v20 = v176;
            uint64_t v19 = v177;

            goto LABEL_22;
          }

          unint64_t v5 = v1 & 0xC000000000000001;
          uint64_t v2 = v166;
          p_ivars = (__objc2_ivar_list **)(&MBDHTMLToSuper_FONT_Frame__metaData + 48);
        }
      }

      if (v4 == v2)
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = *(void *)(v0 + 1768);
        uint64_t v3 = (uint64_t *)(v0 + 1812);
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000BBF40();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v0 + 1768);
LABEL_21:
  uint64_t v20 = *v3;
  uint64_t v21 = *(void **)(v0 + 1760);
LABEL_22:
  uint64_t v22 = *(void **)(v0 + 1664);
  unint64_t v23 = sub_1000BBC90(1, (int)*(float *)(v0 + 1808));
  *(void *)(v0 + 384) = v21;
  *(void *)(v0 + 392) = v20;
  *(void *)(v0 + 400) = v19;
  *(void *)(v0 + 408) = v23;
  *(_DWORD *)(v0 + 416) = v24;
  *(_DWORD *)(v0 + 420) = v25;
  *(void *)(v0 + 424) = v26;
  [v22 setTimeRange:v0 + 384];
  uint64_t v27 = *(void **)(v0 + 1728);
  [*(id *)(v0 + 1664) startReading];
  *(void *)(v0 + 1016) = 0;
  id v28 = [v27 copyNextSampleBuffer];
  if (!v28)
  {
    int v84 = *(void **)(v0 + 1728);
    BOOL v85 = *(void **)(v0 + 1664);
    uint64_t v86 = *(void **)(v0 + 1504);
    uint64_t v87 = *(void **)(v0 + 1472);
    uint64_t v88 = *(void *)(v0 + 1272);
    uint64_t v89 = *(void *)(v0 + 1256);
    uint64_t v90 = *(void *)(v0 + 1248);
    swift_bridgeObjectRelease();
    sub_1000BB6C0();
    sub_1000336B4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v88, v90);
    goto LABEL_61;
  }
  id v29 = v28;
  uint64_t v30 = *(void *)(v0 + 1608);
  int v31 = *(_DWORD *)(v0 + 1800);
  int v32 = *(_DWORD *)(v0 + 1796);
  uint64_t v33 = (opaqueCMSampleBuffer *)v28;
  uint64_t v143 = (void *)(v0 + 1016);
  swift_beginAccess();
  if (v32 != v31 && *(void *)(v0 + 1016) == v30) {
    goto LABEL_60;
  }
  uint64_t v141 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1256) + 16);
  uint64_t v34 = *(void *)(v0 + 1224);
  uint64_t v35 = *(void *)(v0 + 1184);
  uint64_t v36 = *(void *)(v0 + 1152);
  uint64_t v37 = *(void *)(v0 + 1120);
  uint64_t v139 = (void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  uint64_t v140 = (void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
  uint64_t v142 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1368) + 8);
  uint64_t v132 = (void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
  uint64_t v133 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1096) + 8);
  uint64_t v134 = (void (**)(uint64_t, uint64_t))(v37 + 8);
  uint64_t v135 = (void (**)(uint64_t, uint64_t))(v36 + 8);
  uint64_t v136 = (void (**)(uint64_t, uint64_t))(v35 + 8);
  uint64_t v137 = (void (**)(uint64_t, CMTimeRange *))(v34 + 8);
  uint64_t v138 = (void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
  uint64_t v38 = v29;
  while (1)
  {
    uint64_t v171 = v38;
    if (CMSampleBufferGetNumSamples(v33)) {
      goto LABEL_38;
    }
    uint64_t v39 = *(void *)(v0 + 1608);
    int v40 = *(_DWORD *)(v0 + 1800);
    int v41 = *(_DWORD *)(v0 + 1796);

    uint64_t v42 = *(void *)(v0 + 1016);
    uint64_t v43 = v38;
    int v44 = v43;
    if (v41 != v40 && v42 == v39)
    {
      id v29 = v38;
      uint64_t v33 = v43;
      goto LABEL_60;
    }
    if (!CMSampleBufferGetNumSamples(v43)) {
      break;
    }
    uint64_t v33 = v44;
LABEL_38:
    uint64_t v52 = sub_1000BBC40();
    if (!v52)
    {
      BOOL v112 = *(void **)(v0 + 1728);
      uint64_t v113 = v33;
      uint64_t v114 = *(void **)(v0 + 1664);
      uint64_t v115 = *(void **)(v0 + 1504);
      uint64_t v116 = *(void **)(v0 + 1472);
      uint64_t v174 = *(void *)(v0 + 1272);
      uint64_t v117 = *(void *)(v0 + 1256);
      uint64_t v118 = *(void *)(v0 + 1248);
      swift_bridgeObjectRelease();
      sub_1000BB6C0();
      sub_1000336B4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v174, v118);
      goto LABEL_61;
    }
    int v53 = (void *)v52;
    uint64_t v173 = v33;
    os_log_type_t v54 = sub_1000BBBB0();
    uint64_t v55 = sub_1000BBD50();
    if (os_log_type_enabled(v55, v54))
    {
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 134217984;
      *(void *)(v56 + 4) = *v143;
      _os_log_impl((void *)&_mh_execute_header, v55, v54, "BlastDoor processing thumbnail %ld", (uint8_t *)v56, 0xCu);
      swift_slowDealloc();
    }
    int v168 = *(_DWORD *)(v0 + 1800);
    uint64_t v164 = *(uint64_t (**)(uint64_t, CMTimeRange *))(v0 + 1512);
    uint64_t v159 = *(void *)(v0 + 1376);
    toRange = *(CMTimeRange **)(v0 + 1360);
    uint64_t v57 = *(void *)(v0 + 1272);
    uint64_t v58 = *(void *)(v0 + 1264);
    uint64_t v59 = *(void *)(v0 + 1248);
    uint64_t v60 = *(void *)(v0 + 1240);
    uint64_t v146 = *(void *)(v0 + 1232);
    uint64_t v147 = *(void *)(v0 + 1216);
    uint64_t v61 = *(void *)(v0 + 1208);
    uint64_t v62 = *(void *)(v0 + 1200);
    uint64_t v148 = *(void *)(v0 + 1192);
    uint64_t v149 = *(void *)(v0 + 1176);
    uint64_t v145 = *(void *)(v0 + 1168);
    unint64_t v150 = *(void *)(v0 + 1160);
    uint64_t v152 = *(void *)(v0 + 1144);

    sub_1000BBC50();
    sub_1000BBCA0();
    type metadata accessor for CVBuffer(0);
    *((void *)&v177 + 1) = v63;
    uint64_t v178 = &protocol witness table for CVBufferRef;
    uint64_t v175 = v53;
    uint64_t v64 = sub_1000BB440();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v61, 1, 1, v64);
    id v144 = v53;
    sub_1000BB450();
    uint64_t v65 = *v141;
    (*v141)(v58, v57, v59);
    sub_1000B92E0();
    v65(v58, v57, v59);
    sub_1000B9300();
    (*v140)(v146, v60, v147);
    (*v139)(v148, v62, v149);
    unint64_t v1 = v150;
    (*v138)(v150, v145, v152);
    sub_1000B93E0();
    sub_1000B9320();
    int v66 = v164(v159, toRange);
    os_log_type_t v67 = *(void **)(v0 + 1728);
    if (v66 == v168)
    {
      uint64_t v153 = *(void **)(v0 + 1664);
      uint64_t v154 = *(void **)(v0 + 1504);
      uint64_t v155 = *(void **)(v0 + 1472);
      uint64_t v119 = *(void *)(v0 + 1376);
      uint64_t v120 = *(void *)(v0 + 1360);
      uint64_t v165 = *(void *)(v0 + 1256);
      uint64_t v167 = *(void *)(v0 + 1248);
      uint64_t v170 = *(void *)(v0 + 1272);
      toRangea = *(CMTimeRange **)(v0 + 1216);
      uint64_t v163 = *(void *)(v0 + 1240);
      uint64_t v158 = *(void *)(v0 + 1176);
      uint64_t v160 = *(void *)(v0 + 1200);
      uint64_t v156 = *(void *)(v0 + 1144);
      uint64_t v157 = *(void *)(v0 + 1168);
      uint64_t v121 = *(void *)(v0 + 1136);
      uint64_t v122 = *(void *)(v0 + 1128);
      uint64_t v123 = *(void *)(v0 + 1112);
      uint64_t v124 = *(void *)(v0 + 1104);
      uint64_t v151 = *(void *)(v0 + 1088);
      swift_bridgeObjectRelease();
      (*v142)(v119, v120);
      sub_1000BBBB0();
      uint64_t v125 = (void *)sub_1000BBD50();
      sub_1000B8780();

      (*v132)(v122, v121, v123);
      sub_1000336B4(&qword_1000EC958, (void (*)(uint64_t))&type metadata accessor for VideoPreview);
      sub_1000BAA90();
      sub_10001295C(&qword_1000EC910);
      sub_1000BBAD0();
      (*v133)(v124, v151);
      *(void *)(v0 + 968) = 0;
      sub_1000BBAE0();

      (*v134)(v121, v123);
      (*v135)(v157, v156);
      (*v136)(v160, v158);
      (*v137)(v163, toRangea);
      (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v170, v167);
      goto LABEL_61;
    }
    (*v142)(*(void *)(v0 + 1376), *(void *)(v0 + 1360));
    id v29 = [v67 copyNextSampleBuffer];

    uint64_t v68 = *(void *)(v0 + 1016);
    BOOL v9 = __OFADD__(v68, 1);
    uint64_t v69 = v68 + 1;
    if (v9) {
      goto LABEL_70;
    }
    void *v143 = v69;
    if (v29) {
      BOOL v71 = *(_DWORD *)(v0 + 1796) != *(_DWORD *)(v0 + 1800) && v69 == *(void *)(v0 + 1608);
    }
    else {
      BOOL v71 = 1;
    }
    uint64_t v72 = *(void *)(v0 + 1104);
    uint64_t v73 = *(void *)(v0 + 1088);
    (*v132)(*(void *)(v0 + 1128), *(void *)(v0 + 1136), *(void *)(v0 + 1112));
    sub_1000336B4(&qword_1000EC958, (void (*)(uint64_t))&type metadata accessor for VideoPreview);
    sub_1000BAA90();
    sub_10001295C(&qword_1000EC910);
    sub_1000BBAD0();
    (*v133)(v72, v73);
    uint64_t v74 = *(void *)(v0 + 1240);
    uint64_t v169 = *(void *)(v0 + 1200);
    uint64_t v172 = *(CMTimeRange **)(v0 + 1216);
    uint64_t v75 = *(void *)(v0 + 1176);
    uint64_t v76 = *(void *)(v0 + 1168);
    uint64_t v77 = *(void *)(v0 + 1144);
    uint64_t v78 = *(void *)(v0 + 1136);
    uint64_t v79 = *(void *)(v0 + 1112);
    if (v71)
    {
      *(void *)(v0 + 976) = 0;
      sub_1000BBAE0();
    }

    (*v134)(v78, v79);
    (*v135)(v76, v77);
    (*v136)(v169, v75);
    (*v137)(v74, v172);
    if (!v29)
    {
      uint64_t v126 = *(void **)(v0 + 1728);
      uint64_t v127 = *(void **)(v0 + 1504);
      uint64_t v128 = *(void **)(v0 + 1472);
      uint64_t v129 = *(void *)(v0 + 1272);
      uint64_t v130 = *(void *)(v0 + 1256);
      uint64_t v131 = *(void *)(v0 + 1248);

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v129, v131);
      goto LABEL_61;
    }
    uint64_t v80 = *(void *)(v0 + 1608);
    int v81 = *(_DWORD *)(v0 + 1800);
    int v82 = *(_DWORD *)(v0 + 1796);
    uint64_t v83 = *(void *)(v0 + 1016);
    uint64_t v33 = (opaqueCMSampleBuffer *)v29;
    uint64_t v38 = v29;
    if (v82 != v81)
    {
      uint64_t v38 = v29;
      if (v83 == v80) {
        goto LABEL_60;
      }
    }
  }
  while (1)
  {
    uint64_t v46 = *(void *)(v0 + 1608);
    int v47 = *(_DWORD *)(v0 + 1800);
    int v48 = *(_DWORD *)(v0 + 1796);

    uint64_t v49 = *(void *)(v0 + 1016);
    uint64_t v50 = v44;
    uint64_t v33 = v50;
    if (v48 != v47 && v49 == v46) {
      break;
    }
    if (CMSampleBufferGetNumSamples(v50)) {
      goto LABEL_38;
    }
  }
  id v29 = v38;
LABEL_60:
  uint64_t v104 = *(void **)(v0 + 1728);
  uint64_t v105 = *(void **)(v0 + 1504);
  uint64_t v106 = *(void **)(v0 + 1472);
  uint64_t v107 = *(void *)(v0 + 1272);
  uint64_t v108 = *(void *)(v0 + 1256);
  uint64_t v109 = *(void *)(v0 + 1248);

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v107, v109);
LABEL_61:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v110 = *(uint64_t (**)(void))(v0 + 8);
  return v110();
}

uint64_t sub_100030E40()
{
  unint64_t v1 = *(void **)(v0 + 1472);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100031054()
{
  unint64_t v1 = *(void **)(v0 + 1504);
  uint64_t v2 = *(void *)(v0 + 1352);
  uint64_t v3 = *(void *)(v0 + 1344);
  uint64_t v4 = *(void *)(v0 + 1336);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100031290()
{
  unint64_t v1 = *(void **)(v0 + 1504);
  uint64_t v2 = *(void *)(v0 + 1352);
  uint64_t v3 = *(void *)(v0 + 1344);
  uint64_t v4 = *(void *)(v0 + 1336);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1000314CC()
{
  unint64_t v1 = *(void **)(v0 + 1504);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000316E4()
{
  unint64_t v1 = *(void **)(v0 + 1504);
  uint64_t v2 = *(void *)(v0 + 1272);
  uint64_t v3 = *(void *)(v0 + 1256);
  uint64_t v4 = *(void *)(v0 + 1248);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100031920()
{
  unint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1680);
  uint64_t v2 = *(void **)(v0 + 1504);
  uint64_t v3 = *(void **)(v0 + 1472);
  uint64_t v4 = *(void *)(v0 + 1312);
  uint64_t v5 = *(void *)(v0 + 1280);
  uint64_t v6 = *(void *)(v0 + 1272);
  uint64_t v7 = *(void *)(v0 + 1256);
  uint64_t v8 = *(void *)(v0 + 1248);

  v1(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100031B80()
{
  unint64_t v1 = *(void **)(v0 + 1728);
  uint64_t v2 = *(void **)(v0 + 1504);
  uint64_t v3 = *(void **)(v0 + 1472);
  uint64_t v4 = *(void *)(v0 + 1272);
  uint64_t v5 = *(void *)(v0 + 1256);
  uint64_t v6 = *(void *)(v0 + 1248);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100031DCC()
{
  uint64_t v1 = *(void *)(v0 + 1768);
  uint64_t v2 = *(void *)(v0 + 1760);
  uint64_t v3 = *(void **)(v0 + 1664);
  uint64_t v4 = *(void *)(v0 + 1812);
  unint64_t v5 = sub_1000BBC90(1, (int)*(float *)(v0 + 1808));
  *(void *)(v0 + 384) = v2;
  *(void *)(v0 + 392) = v4;
  *(void *)(v0 + 400) = v1;
  *(void *)(v0 + 408) = v5;
  *(_DWORD *)(v0 + 416) = v6;
  *(_DWORD *)(v0 + 420) = v7;
  *(void *)(v0 + 424) = v8;
  [v3 setTimeRange:v0 + 384];
  uint64_t v9 = *(void **)(v0 + 1728);
  [*(id *)(v0 + 1664) startReading];
  *(void *)(v0 + 1016) = 0;
  id v10 = [v9 copyNextSampleBuffer];
  if (!v10)
  {
    int v66 = *(void **)(v0 + 1728);
    os_log_type_t v67 = *(void **)(v0 + 1664);
    uint64_t v68 = *(void **)(v0 + 1504);
    uint64_t v69 = *(void **)(v0 + 1472);
    uint64_t v70 = *(void *)(v0 + 1272);
    uint64_t v71 = *(void *)(v0 + 1256);
    uint64_t v72 = *(void *)(v0 + 1248);
    swift_bridgeObjectRelease();
    sub_1000BB6C0();
    sub_1000336B4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v70, v72);
    goto LABEL_39;
  }
  id v11 = v10;
  uint64_t v12 = *(void *)(v0 + 1608);
  int v13 = *(_DWORD *)(v0 + 1800);
  int v14 = *(_DWORD *)(v0 + 1796);
  uint64_t v15 = (opaqueCMSampleBuffer *)v10;
  uint64_t v111 = (void *)(v0 + 1016);
  swift_beginAccess();
  if (v14 != v13 && *(void *)(v0 + 1016) == v12) {
    goto LABEL_38;
  }
  uint64_t v110 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1256) + 16);
  uint64_t v16 = *(void *)(v0 + 1224);
  uint64_t v17 = *(void *)(v0 + 1184);
  uint64_t v18 = *(void *)(v0 + 1152);
  uint64_t v19 = *(void *)(v0 + 1120);
  uint64_t v108 = (void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  uint64_t v109 = (void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v106 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1368) + 8);
  uint64_t v107 = (void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  uint64_t v104 = (void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  uint64_t v105 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1096) + 8);
  uint64_t v100 = (void (**)(uint64_t, uint64_t))(v19 + 8);
  uint64_t v101 = (void (**)(uint64_t, uint64_t))(v18 + 8);
  uint64_t v102 = (void (**)(uint64_t, uint64_t))(v17 + 8);
  long long v103 = (void (**)(uint64_t, uint64_t))(v16 + 8);
  uint64_t v20 = v11;
  while (1)
  {
    if (CMSampleBufferGetNumSamples(v15)) {
      goto LABEL_17;
    }
    uint64_t v21 = *(void *)(v0 + 1608);
    int v22 = *(_DWORD *)(v0 + 1800);
    int v23 = *(_DWORD *)(v0 + 1796);

    uint64_t v24 = *(void *)(v0 + 1016);
    int v25 = v20;
    uint64_t v26 = v25;
    if (v23 != v22 && v24 == v21)
    {
      id v11 = v20;
      uint64_t v15 = v25;
      goto LABEL_38;
    }
    if (!CMSampleBufferGetNumSamples(v25)) {
      break;
    }
    uint64_t v15 = v26;
LABEL_17:
    uint64_t v34 = sub_1000BBC40();
    if (!v34)
    {
      int v81 = *(void **)(v0 + 1728);
      int v82 = v15;
      uint64_t v83 = *(void **)(v0 + 1664);
      int v84 = *(void **)(v0 + 1504);
      BOOL v85 = *(void **)(v0 + 1472);
      uint64_t v86 = *(void *)(v0 + 1256);
      uint64_t v140 = *(void *)(v0 + 1248);
      uint64_t v142 = *(void *)(v0 + 1272);
      swift_bridgeObjectRelease();
      sub_1000BB6C0();
      sub_1000336B4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v142, v140);
      goto LABEL_39;
    }
    uint64_t v35 = (void *)v34;
    uint64_t v138 = v20;
    uint64_t v141 = v15;
    os_log_type_t v36 = sub_1000BBBB0();
    uint64_t v37 = sub_1000BBD50();
    if (os_log_type_enabled(v37, v36))
    {
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 134217984;
      *(void *)(v38 + 4) = *v111;
      _os_log_impl((void *)&_mh_execute_header, v37, v36, "BlastDoor processing thumbnail %ld", (uint8_t *)v38, 0xCu);
      swift_slowDealloc();
    }
    int v135 = *(_DWORD *)(v0 + 1800);
    uint64_t v132 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1512);
    uint64_t v128 = *(void *)(v0 + 1376);
    uint64_t v130 = *(void *)(v0 + 1360);
    uint64_t v39 = *(void *)(v0 + 1272);
    uint64_t v40 = *(void *)(v0 + 1264);
    uint64_t v41 = *(void *)(v0 + 1248);
    uint64_t v42 = *(void *)(v0 + 1240);
    uint64_t v114 = *(void *)(v0 + 1232);
    uint64_t v115 = *(void *)(v0 + 1216);
    uint64_t v43 = *(void *)(v0 + 1208);
    uint64_t v44 = *(void *)(v0 + 1200);
    uint64_t v116 = *(void *)(v0 + 1192);
    uint64_t v117 = *(void *)(v0 + 1176);
    uint64_t v113 = *(void *)(v0 + 1168);
    uint64_t v119 = *(void *)(v0 + 1160);
    uint64_t v121 = *(void *)(v0 + 1144);

    sub_1000BBC50();
    sub_1000BBCA0();
    type metadata accessor for CVBuffer(0);
    uint64_t v45 = sub_1000BB440();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v43, 1, 1, v45);
    id v112 = v35;
    sub_1000BB450();
    uint64_t v46 = *v110;
    (*v110)(v40, v39, v41);
    sub_1000B92E0();
    v46(v40, v39, v41);
    sub_1000B9300();
    (*v109)(v114, v42, v115);
    (*v108)(v116, v44, v117);
    (*v107)(v119, v113, v121);
    sub_1000B93E0();
    sub_1000B9320();
    int v47 = v132(v128, v130);
    int v48 = *(void **)(v0 + 1728);
    if (v47 == v135)
    {
      uint64_t v120 = *(void **)(v0 + 1664);
      uint64_t v122 = *(void **)(v0 + 1504);
      uint64_t v123 = *(void **)(v0 + 1472);
      uint64_t v87 = *(void *)(v0 + 1376);
      uint64_t v88 = *(void *)(v0 + 1360);
      uint64_t v134 = *(void *)(v0 + 1248);
      uint64_t v137 = *(void *)(v0 + 1272);
      uint64_t v131 = *(void *)(v0 + 1240);
      uint64_t v133 = *(void *)(v0 + 1256);
      uint64_t v127 = *(void *)(v0 + 1200);
      uint64_t v129 = *(void *)(v0 + 1216);
      uint64_t v125 = *(void *)(v0 + 1168);
      uint64_t v126 = *(void *)(v0 + 1176);
      uint64_t v124 = *(void *)(v0 + 1144);
      uint64_t v89 = *(void *)(v0 + 1136);
      uint64_t v90 = *(void *)(v0 + 1128);
      uint64_t v91 = *(void *)(v0 + 1112);
      uint64_t v92 = *(void *)(v0 + 1104);
      uint64_t v118 = *(void *)(v0 + 1088);
      swift_bridgeObjectRelease();
      (*v106)(v87, v88);
      sub_1000BBBB0();
      uint64_t v93 = (void *)sub_1000BBD50();
      sub_1000B8780();

      (*v104)(v90, v89, v91);
      sub_1000336B4(&qword_1000EC958, (void (*)(uint64_t))&type metadata accessor for VideoPreview);
      sub_1000BAA90();
      sub_10001295C(&qword_1000EC910);
      sub_1000BBAD0();
      (*v105)(v92, v118);
      *(void *)(v0 + 968) = 0;
      sub_1000BBAE0();

      (*v100)(v89, v91);
      (*v101)(v125, v124);
      (*v102)(v127, v126);
      (*v103)(v131, v129);
      (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v137, v134);
      goto LABEL_39;
    }
    (*v106)(*(void *)(v0 + 1376), *(void *)(v0 + 1360));
    id v11 = [v48 copyNextSampleBuffer];

    uint64_t v49 = *(void *)(v0 + 1016);
    BOOL v50 = __OFADD__(v49, 1);
    uint64_t v51 = v49 + 1;
    if (v50) {
      __break(1u);
    }
    *uint64_t v111 = v51;
    if (v11) {
      BOOL v53 = *(_DWORD *)(v0 + 1796) != *(_DWORD *)(v0 + 1800) && v51 == *(void *)(v0 + 1608);
    }
    else {
      BOOL v53 = 1;
    }
    uint64_t v54 = *(void *)(v0 + 1104);
    uint64_t v55 = *(void *)(v0 + 1088);
    (*v104)(*(void *)(v0 + 1128), *(void *)(v0 + 1136), *(void *)(v0 + 1112));
    sub_1000336B4(&qword_1000EC958, (void (*)(uint64_t))&type metadata accessor for VideoPreview);
    sub_1000BAA90();
    sub_10001295C(&qword_1000EC910);
    sub_1000BBAD0();
    (*v105)(v54, v55);
    uint64_t v56 = *(void *)(v0 + 1240);
    uint64_t v136 = *(void *)(v0 + 1200);
    uint64_t v139 = *(void *)(v0 + 1216);
    uint64_t v57 = *(void *)(v0 + 1176);
    uint64_t v58 = *(void *)(v0 + 1168);
    uint64_t v59 = *(void *)(v0 + 1144);
    uint64_t v60 = *(void *)(v0 + 1136);
    uint64_t v61 = *(void *)(v0 + 1112);
    if (v53)
    {
      *(void *)(v0 + 976) = 0;
      sub_1000BBAE0();
    }

    (*v100)(v60, v61);
    (*v101)(v58, v59);
    (*v102)(v136, v57);
    (*v103)(v56, v139);
    if (!v11)
    {
      uint64_t v94 = *(void **)(v0 + 1728);
      long long v95 = *(void **)(v0 + 1504);
      uint64_t v96 = *(void **)(v0 + 1472);
      uint64_t v97 = *(void *)(v0 + 1272);
      uint64_t v98 = *(void *)(v0 + 1256);
      uint64_t v99 = *(void *)(v0 + 1248);

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v97, v99);
      goto LABEL_39;
    }
    uint64_t v62 = *(void *)(v0 + 1608);
    int v63 = *(_DWORD *)(v0 + 1800);
    int v64 = *(_DWORD *)(v0 + 1796);
    uint64_t v65 = *(void *)(v0 + 1016);
    uint64_t v15 = (opaqueCMSampleBuffer *)v11;
    uint64_t v20 = v11;
    if (v64 != v63)
    {
      uint64_t v20 = v11;
      if (v65 == v62) {
        goto LABEL_38;
      }
    }
  }
  while (1)
  {
    uint64_t v28 = *(void *)(v0 + 1608);
    int v29 = *(_DWORD *)(v0 + 1800);
    int v30 = *(_DWORD *)(v0 + 1796);

    uint64_t v31 = *(void *)(v0 + 1016);
    int v32 = v26;
    uint64_t v15 = v32;
    if (v30 != v29 && v31 == v28) {
      break;
    }
    if (CMSampleBufferGetNumSamples(v32)) {
      goto LABEL_17;
    }
  }
  id v11 = v20;
LABEL_38:
  uint64_t v73 = *(void **)(v0 + 1728);
  uint64_t v74 = *(void **)(v0 + 1504);
  uint64_t v75 = *(void **)(v0 + 1472);
  uint64_t v76 = *(void *)(v0 + 1272);
  uint64_t v77 = *(void *)(v0 + 1256);
  uint64_t v78 = *(void *)(v0 + 1248);

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, v78);
LABEL_39:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v79 = *(uint64_t (**)(void))(v0 + 8);
  return v79();
}

uint64_t sub_100032DB4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_10001295C(&qword_1000EC648);
    uint64_t v5 = swift_allocError();
    *int v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    sub_10001DAE4(0, &qword_1000EC988);
    **(void **)(*(void *)(v3 + 64) + 40) = sub_1000BBA50();
    return _swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_100032E94(uint64_t a1)
{
  return sub_100029BF4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100032E9C()
{
  uint64_t v17 = sub_1000BB3B0();
  uint64_t v1 = *(void *)(v17 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v16 = sub_1000B9330();
  uint64_t v5 = *(void *)(v16 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = sub_10001295C(&qword_1000EC910);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v7 + v8 + v11) & ~v11;
  uint64_t v15 = v12 + *(void *)(v10 + 64);
  uint64_t v13 = v2 | v6 | v11 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v17);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);

  return _swift_deallocObject(v0, v15, v13);
}

uint64_t sub_100033080(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000BB3B0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_1000B9330() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(sub_10001295C(&qword_1000EC910) - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = v1 + v5;
  uint64_t v15 = v1 + v8;
  uint64_t v16 = v1 + (v11 & ~v10);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v17;
  *uint64_t v17 = v2;
  v17[1] = sub_100033238;
  return sub_100029F70(a1, v12, v13, v14, v15, v16);
}

uint64_t sub_100033238()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10003332C()
{
  uint64_t v17 = sub_1000BB3B0();
  uint64_t v1 = *(void *)(v17 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v16 = sub_1000B9330();
  uint64_t v5 = *(void *)(v16 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = sub_10001295C(&qword_1000EC910);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v7 + v8 + v11) & ~v11;
  uint64_t v15 = v12 + *(void *)(v10 + 64);
  uint64_t v13 = v2 | v6 | v11 | 7;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v17);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);

  return _swift_deallocObject(v0, v15, v13);
}

uint64_t sub_100033508(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000BB3B0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_1000B9330() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(sub_10001295C(&qword_1000EC910) - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = v1 + v5;
  uint64_t v13 = v1 + v8;
  uint64_t v14 = v1 + (v11 & ~v10);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_100033238;
  return sub_10002A9CC(a1, v12, v13, v14);
}

uint64_t sub_1000336B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_OWORD *sub_1000336FC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10008BB58(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_100091DD0();
      goto LABEL_7;
    }
    sub_10009193C(v15, a4 & 1);
    unint64_t v21 = sub_10008BB58(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1000BC1E0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_100015C54((uint64_t)v19);
    return sub_10001DACC(a1, v19);
  }
LABEL_13:
  sub_100033850(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_100033850(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_10001DACC(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeliveredQuietlyReceiptUnpacker()
{
  return &type metadata for DeliveredQuietlyReceiptUnpacker;
}

unint64_t sub_1000338CC(uint64_t a1)
{
  unint64_t result = sub_100012B98();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000338F8()
{
  unint64_t result = qword_1000EC990;
  if (!qword_1000EC990)
  {
    sub_1000BAD10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC990);
  }
  return result;
}

uint64_t sub_100033950(uint64_t a1, uint64_t a2)
{
  return sub_1000A13F8(a1, a2);
}

ValueMetadata *type metadata accessor for LinkPresentationUnpacker()
{
  return &type metadata for LinkPresentationUnpacker;
}

uint64_t sub_100033978@<X0>(uint64_t a1@<X8>)
{
  uint64_t v516 = a1;
  uint64_t v381 = sub_1000B83D0();
  uint64_t v380 = *(void *)(v381 - 8);
  __chkstk_darwin(v381);
  v377 = (char *)&v355 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10001295C(&qword_1000EC9B8);
  __chkstk_darwin(v2 - 8);
  uint64_t v375 = (uint64_t)&v355 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v379 = sub_1000BA460();
  uint64_t v378 = *(void *)(v379 - 8);
  __chkstk_darwin(v379);
  v376 = (char *)&v355 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v374 = sub_1000BA430();
  uint64_t v373 = *(void *)(v374 - 8);
  __chkstk_darwin(v374);
  v372 = (char *)&v355 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v371 = sub_1000BA260();
  uint64_t v370 = *(void *)(v371 - 8);
  __chkstk_darwin(v371);
  v369 = (char *)&v355 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v368 = sub_1000BA220();
  uint64_t v367 = *(void *)(v368 - 8);
  __chkstk_darwin(v368);
  v366 = (char *)&v355 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v386 = sub_1000BA150();
  uint64_t v385 = *(void *)(v386 - 8);
  __chkstk_darwin(v386);
  v391 = (char *)&v355 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v399 = sub_1000BA550();
  uint64_t v398 = *(void *)(v399 - 8);
  __chkstk_darwin(v399);
  v397 = (char *)&v355 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v407 = sub_1000BA4B0();
  uint64_t v406 = *(void *)(v407 - 8);
  __chkstk_darwin(v407);
  v415 = (char *)&v355 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v414 = sub_1000BA100();
  uint64_t v413 = *(void *)(v414 - 8);
  __chkstk_darwin(v414);
  v422 = (char *)&v355 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v421 = sub_1000BA510();
  uint64_t v420 = *(void *)(v421 - 8);
  __chkstk_darwin(v421);
  v423 = (char *)&v355 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v428 = sub_1000BA530();
  uint64_t v427 = *(void *)(v428 - 8);
  __chkstk_darwin(v428);
  v426 = (char *)&v355 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v434 = sub_1000BA410();
  uint64_t v433 = *(void *)(v434 - 8);
  __chkstk_darwin(v434);
  v435 = (char *)&v355 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v440 = sub_1000BA3E0();
  uint64_t v439 = *(void *)(v440 - 8);
  __chkstk_darwin(v440);
  v438 = (char *)&v355 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v445 = sub_1000BA1C0();
  uint64_t v444 = *(void *)(v445 - 8);
  __chkstk_darwin(v445);
  v446 = (char *)&v355 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v455 = sub_1000BA240();
  uint64_t v454 = *(void *)(v455 - 8);
  __chkstk_darwin(v455);
  v453 = (char *)&v355 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v452 = sub_1000BA360();
  uint64_t v451 = *(void *)(v452 - 8);
  __chkstk_darwin(v452);
  v450 = (char *)&v355 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v460 = sub_1000BA3A0();
  uint64_t v459 = *(void *)(v460 - 8);
  __chkstk_darwin(v460);
  v458 = (char *)&v355 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v465 = sub_1000BA2C0();
  uint64_t v464 = *(void *)(v465 - 8);
  __chkstk_darwin(v465);
  v463 = (char *)&v355 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v470 = sub_1000BA4D0();
  uint64_t v469 = *(void *)(v470 - 8);
  __chkstk_darwin(v470);
  v468 = (char *)&v355 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v475 = sub_1000BA380();
  uint64_t v474 = *(void *)(v475 - 8);
  __chkstk_darwin(v475);
  v473 = (char *)&v355 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v481 = sub_1000BA120();
  uint64_t v480 = *(void *)(v481 - 8);
  __chkstk_darwin(v481);
  v479 = (char *)&v355 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v492 = sub_1000BA340();
  uint64_t v491 = *(void *)(v492 - 8);
  __chkstk_darwin(v492);
  v485 = (char *)&v355 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v490 = sub_1000BA1E0();
  uint64_t v489 = *(void *)(v490 - 8);
  __chkstk_darwin(v490);
  v488 = (char *)&v355 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000BA300();
  uint64_t v496 = *(void *)(v26 - 8);
  uint64_t v497 = v26;
  __chkstk_darwin(v26);
  v495 = (char *)&v355 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000BA200();
  uint64_t v500 = *(void *)(v28 - 8);
  uint64_t v501 = v28;
  __chkstk_darwin(v28);
  v499 = (char *)&v355 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000BA3C0();
  uint64_t v504 = *(void *)(v30 - 8);
  uint64_t v505 = v30;
  __chkstk_darwin(v30);
  v503 = (char *)&v355 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000BA190();
  uint64_t v509 = *(void *)(v32 - 8);
  uint64_t v510 = v32;
  __chkstk_darwin(v32);
  v508 = (char *)&v355 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10001295C(&qword_1000EC9C0);
  uint64_t v35 = __chkstk_darwin(v34 - 8);
  uint64_t v365 = (uint64_t)&v355 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  v364 = (char *)&v355 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v363 = (char *)&v355 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  v362 = (char *)&v355 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  v384 = (char *)&v355 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v383 = (uint64_t)&v355 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v396 = (char *)&v355 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  v405 = (char *)&v355 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v404 = (uint64_t)&v355 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v403 = (uint64_t)&v355 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v402 = (uint64_t)&v355 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  v412 = (char *)&v355 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v411 = (uint64_t)&v355 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  uint64_t v410 = (uint64_t)&v355 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  uint64_t v409 = (uint64_t)&v355 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  v419 = (char *)&v355 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v418 = (uint64_t)&v355 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  v425 = (char *)&v355 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  v432 = (char *)&v355 - v72;
  uint64_t v73 = __chkstk_darwin(v71);
  uint64_t v431 = (uint64_t)&v355 - v74;
  uint64_t v75 = __chkstk_darwin(v73);
  v437 = (char *)&v355 - v76;
  uint64_t v77 = __chkstk_darwin(v75);
  v443 = (char *)&v355 - v78;
  uint64_t v79 = __chkstk_darwin(v77);
  uint64_t v442 = (uint64_t)&v355 - v80;
  uint64_t v81 = __chkstk_darwin(v79);
  v449 = (char *)&v355 - v82;
  uint64_t v83 = __chkstk_darwin(v81);
  v448 = (char *)&v355 - v84;
  uint64_t v85 = __chkstk_darwin(v83);
  v457 = (char *)&v355 - v86;
  uint64_t v87 = __chkstk_darwin(v85);
  v462 = (char *)&v355 - v88;
  uint64_t v89 = __chkstk_darwin(v87);
  v467 = (char *)&v355 - v90;
  uint64_t v91 = __chkstk_darwin(v89);
  v472 = (char *)&v355 - v92;
  uint64_t v93 = __chkstk_darwin(v91);
  v478 = (char *)&v355 - v94;
  uint64_t v95 = __chkstk_darwin(v93);
  v484 = (char *)&v355 - v96;
  uint64_t v97 = __chkstk_darwin(v95);
  v483 = (char *)&v355 - v98;
  uint64_t v99 = __chkstk_darwin(v97);
  v487 = (char *)&v355 - v100;
  uint64_t v101 = __chkstk_darwin(v99);
  v494 = (char *)&v355 - v102;
  uint64_t v103 = __chkstk_darwin(v101);
  v498 = (char *)&v355 - v104;
  uint64_t v105 = __chkstk_darwin(v103);
  v502 = (char *)&v355 - v106;
  uint64_t v107 = __chkstk_darwin(v105);
  v507 = (char *)&v355 - v108;
  __chkstk_darwin(v107);
  v511 = (char *)&v355 - v109;
  uint64_t v513 = sub_1000BA2E0();
  uint64_t v515 = *(void *)(v513 - 8);
  uint64_t v110 = __chkstk_darwin(v513);
  v361 = (char *)&v355 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __chkstk_darwin(v110);
  v359 = (char *)&v355 - v113;
  uint64_t v114 = __chkstk_darwin(v112);
  v358 = (char *)&v355 - v115;
  uint64_t v116 = __chkstk_darwin(v114);
  v357 = (char *)&v355 - v117;
  uint64_t v118 = __chkstk_darwin(v116);
  v360 = (char *)&v355 - v119;
  uint64_t v120 = __chkstk_darwin(v118);
  v356 = (char *)&v355 - v121;
  uint64_t v122 = __chkstk_darwin(v120);
  v382 = (char *)&v355 - v123;
  uint64_t v124 = __chkstk_darwin(v122);
  v390 = (char *)&v355 - v125;
  uint64_t v126 = __chkstk_darwin(v124);
  v389 = (char *)&v355 - v127;
  uint64_t v128 = __chkstk_darwin(v126);
  v388 = (char *)&v355 - v129;
  uint64_t v130 = __chkstk_darwin(v128);
  v387 = (char *)&v355 - v131;
  uint64_t v132 = __chkstk_darwin(v130);
  v395 = (char *)&v355 - v133;
  uint64_t v134 = __chkstk_darwin(v132);
  v394 = (char *)&v355 - v135;
  uint64_t v136 = __chkstk_darwin(v134);
  v393 = (char *)&v355 - v137;
  uint64_t v138 = __chkstk_darwin(v136);
  v392 = (char *)&v355 - v139;
  uint64_t v140 = __chkstk_darwin(v138);
  v401 = (char *)&v355 - v141;
  uint64_t v142 = __chkstk_darwin(v140);
  v400 = (char *)&v355 - v143;
  uint64_t v144 = __chkstk_darwin(v142);
  v408 = (char *)&v355 - v145;
  uint64_t v146 = __chkstk_darwin(v144);
  v417 = (char *)&v355 - v147;
  uint64_t v148 = __chkstk_darwin(v146);
  v416 = (char *)&v355 - v149;
  uint64_t v150 = __chkstk_darwin(v148);
  v424 = (char *)&v355 - v151;
  uint64_t v152 = __chkstk_darwin(v150);
  v430 = (char *)&v355 - v153;
  uint64_t v154 = __chkstk_darwin(v152);
  v429 = (char *)&v355 - v155;
  uint64_t v156 = __chkstk_darwin(v154);
  v436 = (char *)&v355 - v157;
  uint64_t v158 = __chkstk_darwin(v156);
  v441 = (char *)&v355 - v159;
  uint64_t v160 = __chkstk_darwin(v158);
  v447 = (char *)&v355 - v161;
  uint64_t v162 = __chkstk_darwin(v160);
  v456 = (char *)&v355 - v163;
  uint64_t v164 = __chkstk_darwin(v162);
  v461 = (char *)&v355 - v165;
  uint64_t v166 = __chkstk_darwin(v164);
  v466 = (char *)&v355 - v167;
  uint64_t v168 = __chkstk_darwin(v166);
  v471 = (char *)&v355 - v169;
  uint64_t v170 = __chkstk_darwin(v168);
  v506 = (char *)&v355 - v171;
  uint64_t v172 = __chkstk_darwin(v170);
  v477 = (char *)&v355 - v173;
  uint64_t v174 = __chkstk_darwin(v172);
  v476 = (char *)&v355 - v175;
  uint64_t v176 = __chkstk_darwin(v174);
  v482 = (char *)&v355 - v177;
  uint64_t v178 = __chkstk_darwin(v176);
  v486 = (char *)&v355 - v179;
  uint64_t v180 = __chkstk_darwin(v178);
  v493 = (char *)&v355 - v181;
  uint64_t v182 = __chkstk_darwin(v180);
  uint64_t v184 = (char *)&v355 - v183;
  uint64_t v185 = __chkstk_darwin(v182);
  uint64_t v187 = (char *)&v355 - v186;
  __chkstk_darwin(v185);
  uint64_t v189 = (char *)&v355 - v188;
  uint64_t v190 = sub_1000BA170();
  uint64_t v191 = *(void *)(v190 - 8);
  __chkstk_darwin(v190);
  uint64_t v193 = (char *)&v355 - ((v192 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = sub_1000BA4E0();
  uint64_t v195 = *(void *)(v194 - 8);
  uint64_t v196 = __chkstk_darwin(v194);
  v355 = (char *)&v355 - ((v197 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v196);
  uint64_t v199 = (char *)&v355 - v198;
  sub_1000B83C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v195 + 16))(v199, v514, v194);
  int v200 = (*(uint64_t (**)(char *, uint64_t))(v195 + 88))(v199, v194);
  if (v200 == enum case for LinkPresentation.SpecializationMetadata.songMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v195 + 96))(v199, v194);
    (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v193, v199, v190);
    uint64_t v201 = v511;
    sub_1000BA160();
    uint64_t v202 = v515;
    uint64_t v203 = v513;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v515 + 48))(v201, 1, v513) == 1)
    {
      (*(void (**)(char *, uint64_t))(v191 + 8))(v193, v190);
LABEL_7:
      uint64_t v210 = (uint64_t)v201;
      return sub_1000184DC(v210, &qword_1000EC9C0);
    }
    (*(void (**)(char *, char *, uint64_t))(v202 + 32))(v189, v201, v203);
    Swift::Int v212 = sub_1000BA2D0();
    sub_1000B8390(v212);
    (*(void (**)(char *, uint64_t))(v202 + 8))(v189, v203);
    return (*(uint64_t (**)(char *, uint64_t))(v191 + 8))(v193, v190);
  }
  uint64_t v204 = v195;
  uint64_t v205 = v513;
  uint64_t v206 = v515;
  if (v200 == enum case for LinkPresentation.SpecializationMetadata.albumMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v195 + 96))(v199, v194);
    v208 = v508;
    uint64_t v207 = v509;
    uint64_t v209 = v510;
    (*(void (**)(char *, char *, uint64_t))(v509 + 32))(v508, v199, v510);
    uint64_t v201 = v507;
    sub_1000BA180();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v201, 1, v205) == 1)
    {
      (*(void (**)(char *, uint64_t))(v207 + 8))(v208, v209);
      goto LABEL_7;
    }
    (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v187, v201, v205);
    Swift::Int v217 = sub_1000BA2D0();
    sub_1000B8390(v217);
    (*(void (**)(char *, uint64_t))(v206 + 8))(v187, v205);
    v218 = *(uint64_t (**)(char *, uint64_t))(v207 + 8);
    v219 = v208;
    return v218(v219, v209);
  }
  v213 = v199;
  if (v200 == enum case for LinkPresentation.SpecializationMetadata.musicVideoMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    v215 = v503;
    uint64_t v214 = v504;
    uint64_t v209 = v505;
    (*(void (**)(char *, char *, uint64_t))(v504 + 32))(v503, v213, v505);
    v216 = v502;
    sub_1000BA3B0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v216, 1, v205) == 1)
    {
LABEL_12:
      (*(void (**)(char *, uint64_t))(v214 + 8))(v215, v209);
      uint64_t v210 = (uint64_t)v216;
      return sub_1000184DC(v210, &qword_1000EC9C0);
    }
    (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v184, v216, v205);
    Swift::Int v225 = sub_1000BA2D0();
    sub_1000B8390(v225);
    (*(void (**)(char *, uint64_t))(v206 + 8))(v184, v205);
LABEL_18:
    v218 = *(uint64_t (**)(char *, uint64_t))(v214 + 8);
    v219 = v215;
    return v218(v219, v209);
  }
  if (v200 == enum case for LinkPresentation.SpecializationMetadata.artistMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    v221 = v499;
    uint64_t v220 = v500;
    uint64_t v222 = v501;
    (*(void (**)(char *, char *, uint64_t))(v500 + 32))(v499, v213, v501);
    v223 = v498;
    sub_1000BA1F0();
    uint64_t v224 = v206;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v223, 1, v205) == 1)
    {
      (*(void (**)(char *, uint64_t))(v220 + 8))(v221, v222);
      uint64_t v210 = (uint64_t)v223;
      return sub_1000184DC(v210, &qword_1000EC9C0);
    }
    v230 = *(void (**)(char *, char *, uint64_t))(v206 + 32);
    v231 = v493;
    v230(v493, v223, v205);
    Swift::Int v232 = sub_1000BA2D0();
    sub_1000B8390(v232);
    (*(void (**)(char *, uint64_t))(v224 + 8))(v231, v205);
    return (*(uint64_t (**)(char *, uint64_t))(v220 + 8))(v221, v222);
  }
  if (v200 == enum case for LinkPresentation.SpecializationMetadata.playlistMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    v227 = v495;
    uint64_t v226 = v496;
    uint64_t v228 = v497;
    (*(void (**)(char *, char *, uint64_t))(v496 + 32))(v495, v199, v497);
    uint64_t v201 = v494;
    sub_1000BA2F0();
    uint64_t v229 = v206;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v201, 1, v205) == 1)
    {
      (*(void (**)(char *, uint64_t))(v226 + 8))(v227, v228);
      goto LABEL_7;
    }
    v237 = *(void (**)(char *, char *, uint64_t))(v206 + 32);
    v238 = v486;
    v237(v486, v201, v205);
    Swift::Int v239 = sub_1000BA2D0();
    sub_1000B8390(v239);
    (*(void (**)(char *, uint64_t))(v229 + 8))(v238, v205);
    return (*(uint64_t (**)(char *, uint64_t))(v226 + 8))(v227, v228);
  }
  if (v200 == enum case for LinkPresentation.SpecializationMetadata.radioMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    uint64_t v214 = v489;
    v215 = v488;
    uint64_t v209 = v490;
    (*(void (**)(char *, char *, uint64_t))(v489 + 32))(v488, v213, v490);
    v216 = v487;
    sub_1000BA1D0();
    uint64_t v233 = v206;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v216, 1, v205) == 1) {
      goto LABEL_12;
    }
    v234 = *(void (**)(char *, char *, uint64_t))(v206 + 32);
    v235 = v482;
    v234(v482, v216, v205);
    Swift::Int v236 = sub_1000BA2D0();
    sub_1000B8390(v236);
    (*(void (**)(char *, uint64_t))(v233 + 8))(v235, v205);
    goto LABEL_18;
  }
  if (v200 == enum case for LinkPresentation.SpecializationMetadata.softwareMetadata(_:))
  {
    uint64_t v240 = v515;
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    v241 = v485;
    (*(void (**)(char *, char *, uint64_t))(v491 + 32))(v485, v199, v492);
    uint64_t v242 = (uint64_t)v483;
    sub_1000BA330();
    v243 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v240 + 48);
    uint64_t v244 = v240;
    if (v243(v242, 1, v205) == 1)
    {
      sub_1000184DC(v242, &qword_1000EC9C0);
    }
    else
    {
      v252 = *(void (**)(char *, uint64_t, uint64_t))(v240 + 32);
      v253 = v476;
      v252(v476, v242, v205);
      Swift::Int v254 = sub_1000BA2D0();
      sub_1000B8390(v254);
      (*(void (**)(char *, uint64_t))(v244 + 8))(v253, v205);
    }
    uint64_t v255 = (uint64_t)v484;
    sub_1000BA320();
    if (v243(v255, 1, v205) == 1)
    {
      sub_1000184DC(v255, &qword_1000EC9C0);
    }
    else
    {
      v256 = v477;
      (*(void (**)(char *, uint64_t, uint64_t))(v244 + 32))(v477, v255, v205);
      Swift::Int v257 = sub_1000BA2D0();
      sub_1000B8390(v257);
      (*(void (**)(char *, uint64_t))(v244 + 8))(v256, v205);
    }
    uint64_t v258 = sub_1000BA310();
    if (v258)
    {
      uint64_t v514 = v258;
      uint64_t v259 = *(void *)(v258 + 16);
      v260 = v506;
      if (v259)
      {
        v263 = *(void (**)(char *, unint64_t, uint64_t))(v244 + 16);
        uint64_t v262 = v244 + 16;
        v261 = v263;
        unint64_t v264 = v514 + ((*(unsigned __int8 *)(v262 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v262 + 64));
        uint64_t v265 = *(void *)(v262 + 56);
        do
        {
          v261(v260, v264, v205);
          Swift::Int v266 = sub_1000BA2D0();
          sub_1000B8390(v266);
          v260 = v506;
          (*(void (**)(char *, uint64_t))(v262 - 8))(v506, v205);
          v264 += v265;
          --v259;
        }
        while (v259);
      }
      swift_bridgeObjectRelease();
      v267 = *(uint64_t (**)(char *, uint64_t))(v491 + 8);
      v268 = v485;
    }
    else
    {
      v267 = *(uint64_t (**)(char *, uint64_t))(v491 + 8);
      v268 = v241;
    }
    return v267(v268, v492);
  }
  if (v200 == enum case for LinkPresentation.SpecializationMetadata.bookMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    uint64_t v245 = v480;
    v246 = v479;
    uint64_t v247 = v481;
    (*(void (**)(char *, char *, uint64_t))(v480 + 32))(v479, v199, v481);
    v248 = v478;
    sub_1000BA110();
    uint64_t v249 = v515;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v515 + 48))(v248, 1, v205) != 1)
    {
      v250 = *(void (**)(uint64_t, char *, uint64_t))(v249 + 32);
      v251 = &v503;
LABEL_64:
      uint64_t v270 = (uint64_t)*(v251 - 32);
      v250(v270, v248, v205);
      Swift::Int v271 = sub_1000BA2D0();
      sub_1000B8390(v271);
      (*(void (**)(uint64_t, uint64_t))(v249 + 8))(v270, v205);
      return (*(uint64_t (**)(char *, uint64_t))(v245 + 8))(v246, v247);
    }
    goto LABEL_59;
  }
  if (v200 == enum case for LinkPresentation.SpecializationMetadata.audioBookMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    uint64_t v245 = v474;
    v246 = v473;
    uint64_t v247 = v475;
    (*(void (**)(char *, char *, uint64_t))(v474 + 32))(v473, v199, v475);
    v248 = v472;
    sub_1000BA370();
    uint64_t v249 = v515;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v515 + 48))(v248, 1, v205) != 1)
    {
      v250 = *(void (**)(uint64_t, char *, uint64_t))(v249 + 32);
      v251 = &v498;
      goto LABEL_64;
    }
LABEL_59:
    (*(void (**)(char *, uint64_t))(v245 + 8))(v246, v247);
    uint64_t v210 = (uint64_t)v248;
    return sub_1000184DC(v210, &qword_1000EC9C0);
  }
  if (v200 == enum case for LinkPresentation.SpecializationMetadata.podcastEpisodeMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    uint64_t v245 = v469;
    v246 = v468;
    uint64_t v247 = v470;
    (*(void (**)(char *, char *, uint64_t))(v469 + 32))(v468, v199, v470);
    v248 = v467;
    sub_1000BA4C0();
    uint64_t v249 = v515;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v515 + 48))(v248, 1, v205) != 1)
    {
      v250 = *(void (**)(uint64_t, char *, uint64_t))(v249 + 32);
      v251 = &v493;
      goto LABEL_64;
    }
    goto LABEL_59;
  }
  if (v200 == enum case for LinkPresentation.SpecializationMetadata.podcastMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    uint64_t v245 = v464;
    v246 = v463;
    uint64_t v247 = v465;
    (*(void (**)(char *, char *, uint64_t))(v464 + 32))(v463, v199, v465);
    v248 = v462;
    sub_1000BA2B0();
    uint64_t v249 = v515;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v515 + 48))(v248, 1, v205) != 1)
    {
      v250 = *(void (**)(uint64_t, char *, uint64_t))(v249 + 32);
      v251 = &v488;
      goto LABEL_64;
    }
    goto LABEL_59;
  }
  if (v200 == enum case for LinkPresentation.SpecializationMetadata.tvEpisodeMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    uint64_t v245 = v459;
    v246 = v458;
    uint64_t v247 = v460;
    (*(void (**)(char *, char *, uint64_t))(v459 + 32))(v458, v199, v460);
    v248 = v457;
    sub_1000BA390();
    uint64_t v249 = v515;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v515 + 48))(v248, 1, v205) != 1)
    {
      v250 = *(void (**)(uint64_t, char *, uint64_t))(v249 + 32);
      v251 = &v479;
      goto LABEL_64;
    }
    goto LABEL_59;
  }
  if (v200 == enum case for LinkPresentation.SpecializationMetadata.tvSeasonMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    uint64_t v245 = v451;
    v246 = v450;
    uint64_t v247 = v452;
    (*(void (**)(char *, char *, uint64_t))(v451 + 32))(v450, v199, v452);
    v248 = v448;
    sub_1000BA350();
    uint64_t v249 = v515;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v515 + 48))(v248, 1, v205) != 1)
    {
      v250 = *(void (**)(uint64_t, char *, uint64_t))(v249 + 32);
      v251 = &v473;
      goto LABEL_64;
    }
    goto LABEL_59;
  }
  if (v200 == enum case for LinkPresentation.SpecializationMetadata.tvShowMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    (*(void (**)(char *, char *, uint64_t))(v454 + 32))(v453, v199, v455);
    v269 = v449;
    sub_1000BA230();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v515 + 48))(v269, 1, v205) == 1)
    {
      (*(void (**)(char *, uint64_t))(v454 + 8))(v453, v455);
      uint64_t v210 = (uint64_t)v449;
      return sub_1000184DC(v210, &qword_1000EC9C0);
    }
    v274 = v436;
    (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v436, v449, v205);
    Swift::Int v275 = sub_1000BA2D0();
    sub_1000B8390(v275);
    (*(void (**)(char *, uint64_t))(v206 + 8))(v274, v205);
    return (*(uint64_t (**)(char *, uint64_t))(v454 + 8))(v453, v455);
  }
  else if (v200 == enum case for LinkPresentation.SpecializationMetadata.movieMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    (*(void (**)(char *, char *, uint64_t))(v444 + 32))(v446, v199, v445);
    uint64_t v272 = v442;
    sub_1000BA1A0();
    v273 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v206 + 48);
    if (v273(v272, 1, v205) == 1)
    {
      sub_1000184DC(v442, &qword_1000EC9C0);
    }
    else
    {
      v277 = v429;
      (*(void (**)(char *, uint64_t, uint64_t))(v206 + 32))(v429, v442, v205);
      Swift::Int v278 = sub_1000BA2D0();
      sub_1000B8390(v278);
      (*(void (**)(char *, uint64_t))(v206 + 8))(v277, v205);
    }
    v279 = v443;
    sub_1000BA1B0();
    if (v273((uint64_t)v279, 1, v205) == 1)
    {
      (*(void (**)(char *, uint64_t))(v444 + 8))(v446, v445);
      uint64_t v210 = (uint64_t)v443;
      return sub_1000184DC(v210, &qword_1000EC9C0);
    }
    v282 = v430;
    (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v430, v443, v205);
    Swift::Int v283 = sub_1000BA2D0();
    sub_1000B8390(v283);
    (*(void (**)(char *, uint64_t))(v206 + 8))(v282, v205);
    return (*(uint64_t (**)(char *, uint64_t))(v444 + 8))(v446, v445);
  }
  else if (v200 == enum case for LinkPresentation.SpecializationMetadata.movieBundleMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    (*(void (**)(char *, char *, uint64_t))(v439 + 32))(v438, v199, v440);
    v276 = v437;
    sub_1000BA3D0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v276, 1, v205) == 1)
    {
      (*(void (**)(char *, uint64_t))(v439 + 8))(v438, v440);
      uint64_t v210 = (uint64_t)v437;
      return sub_1000184DC(v210, &qword_1000EC9C0);
    }
    v284 = v424;
    (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v424, v437, v205);
    Swift::Int v285 = sub_1000BA2D0();
    sub_1000B8390(v285);
    (*(void (**)(char *, uint64_t))(v206 + 8))(v284, v205);
    return (*(uint64_t (**)(char *, uint64_t))(v439 + 8))(v438, v440);
  }
  else if (v200 == enum case for LinkPresentation.SpecializationMetadata.cloudSharingMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    (*(void (**)(char *, char *, uint64_t))(v433 + 32))(v435, v199, v434);
    uint64_t v280 = v431;
    sub_1000BA3F0();
    v281 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v206 + 48);
    if (v281(v280, 1, v205) == 1)
    {
      sub_1000184DC(v431, &qword_1000EC9C0);
    }
    else
    {
      v287 = v416;
      (*(void (**)(char *, uint64_t, uint64_t))(v206 + 32))(v416, v431, v205);
      Swift::Int v288 = sub_1000BA2D0();
      sub_1000B8390(v288);
      (*(void (**)(char *, uint64_t))(v206 + 8))(v287, v205);
    }
    v289 = v432;
    sub_1000BA400();
    if (v281((uint64_t)v289, 1, v205) == 1)
    {
      (*(void (**)(char *, uint64_t))(v433 + 8))(v435, v434);
      uint64_t v210 = (uint64_t)v432;
      return sub_1000184DC(v210, &qword_1000EC9C0);
    }
    v292 = v417;
    (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v417, v432, v205);
    Swift::Int v293 = sub_1000BA2D0();
    sub_1000B8390(v293);
    (*(void (**)(char *, uint64_t))(v206 + 8))(v292, v205);
    return (*(uint64_t (**)(char *, uint64_t))(v433 + 8))(v435, v434);
  }
  else if (v200 == enum case for LinkPresentation.SpecializationMetadata.cloudFamilyInvitationMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    (*(void (**)(char *, char *, uint64_t))(v427 + 32))(v426, v199, v428);
    v286 = v425;
    sub_1000BA520();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v286, 1, v205) == 1)
    {
      (*(void (**)(char *, uint64_t))(v427 + 8))(v426, v428);
      uint64_t v210 = (uint64_t)v425;
      return sub_1000184DC(v210, &qword_1000EC9C0);
    }
    v294 = v408;
    (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v408, v425, v205);
    Swift::Int v295 = sub_1000BA2D0();
    sub_1000B8390(v295);
    (*(void (**)(char *, uint64_t))(v206 + 8))(v294, v205);
    return (*(uint64_t (**)(char *, uint64_t))(v427 + 8))(v426, v428);
  }
  else if (v200 == enum case for LinkPresentation.SpecializationMetadata.gameCenterInvitationMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    (*(void (**)(char *, char *, uint64_t))(v420 + 32))(v423, v199, v421);
    uint64_t v290 = v418;
    sub_1000BA500();
    v291 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v206 + 48);
    if (v291(v290, 1, v205) == 1)
    {
      sub_1000184DC(v418, &qword_1000EC9C0);
    }
    else
    {
      v298 = v400;
      (*(void (**)(char *, uint64_t, uint64_t))(v206 + 32))(v400, v418, v205);
      Swift::Int v299 = sub_1000BA2D0();
      sub_1000B8390(v299);
      (*(void (**)(char *, uint64_t))(v206 + 8))(v298, v205);
    }
    v300 = v419;
    sub_1000BA4F0();
    if (v291((uint64_t)v300, 1, v205) == 1)
    {
      (*(void (**)(char *, uint64_t))(v420 + 8))(v423, v421);
      uint64_t v210 = (uint64_t)v419;
      return sub_1000184DC(v210, &qword_1000EC9C0);
    }
    v303 = v401;
    (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v401, v419, v205);
    Swift::Int v304 = sub_1000BA2D0();
    sub_1000B8390(v304);
    (*(void (**)(char *, uint64_t))(v206 + 8))(v303, v205);
    return (*(uint64_t (**)(char *, uint64_t))(v420 + 8))(v423, v421);
  }
  else if (v200 == enum case for LinkPresentation.SpecializationMetadata.mapMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    (*(void (**)(char *, char *, uint64_t))(v413 + 32))(v422, v199, v414);
    uint64_t v296 = v409;
    sub_1000BA0C0();
    v297 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v206 + 48);
    if (v297(v296, 1, v205) == 1)
    {
      sub_1000184DC(v409, &qword_1000EC9C0);
    }
    else
    {
      v305 = v392;
      (*(void (**)(char *, uint64_t, uint64_t))(v206 + 32))(v392, v409, v205);
      Swift::Int v306 = sub_1000BA2D0();
      sub_1000B8390(v306);
      (*(void (**)(char *, uint64_t))(v206 + 8))(v305, v205);
    }
    uint64_t v307 = v410;
    sub_1000BA0E0();
    if (v297(v307, 1, v205) == 1)
    {
      sub_1000184DC(v410, &qword_1000EC9C0);
    }
    else
    {
      v309 = v393;
      (*(void (**)(char *, uint64_t, uint64_t))(v206 + 32))(v393, v410, v205);
      Swift::Int v310 = sub_1000BA2D0();
      sub_1000B8390(v310);
      (*(void (**)(char *, uint64_t))(v206 + 8))(v309, v205);
    }
    uint64_t v311 = v411;
    sub_1000BA0F0();
    if (v297(v311, 1, v205) == 1)
    {
      sub_1000184DC(v411, &qword_1000EC9C0);
    }
    else
    {
      v312 = v394;
      (*(void (**)(char *, uint64_t, uint64_t))(v206 + 32))(v394, v411, v205);
      Swift::Int v313 = sub_1000BA2D0();
      sub_1000B8390(v313);
      (*(void (**)(char *, uint64_t))(v206 + 8))(v312, v205);
    }
    v314 = v412;
    sub_1000BA0D0();
    if (v297((uint64_t)v314, 1, v205) == 1)
    {
      (*(void (**)(char *, uint64_t))(v413 + 8))(v422, v414);
      uint64_t v210 = (uint64_t)v412;
      return sub_1000184DC(v210, &qword_1000EC9C0);
    }
    v315 = v395;
    (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v395, v412, v205);
    Swift::Int v316 = sub_1000BA2D0();
    sub_1000B8390(v316);
    (*(void (**)(char *, uint64_t))(v206 + 8))(v315, v205);
    return (*(uint64_t (**)(char *, uint64_t))(v413 + 8))(v422, v414);
  }
  else if (v200 == enum case for LinkPresentation.SpecializationMetadata.mapCollectionMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    (*(void (**)(char *, char *, uint64_t))(v406 + 32))(v415, v199, v407);
    uint64_t v301 = v402;
    sub_1000BA480();
    v302 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v206 + 48);
    if (v302(v301, 1, v205) == 1)
    {
      sub_1000184DC(v402, &qword_1000EC9C0);
    }
    else
    {
      v317 = v387;
      (*(void (**)(char *, uint64_t, uint64_t))(v206 + 32))(v387, v402, v205);
      Swift::Int v318 = sub_1000BA2D0();
      sub_1000B8390(v318);
      (*(void (**)(char *, uint64_t))(v206 + 8))(v317, v205);
    }
    uint64_t v319 = v403;
    sub_1000BA490();
    if (v302(v319, 1, v205) == 1)
    {
      sub_1000184DC(v403, &qword_1000EC9C0);
    }
    else
    {
      v322 = v388;
      (*(void (**)(char *, uint64_t, uint64_t))(v206 + 32))(v388, v403, v205);
      Swift::Int v323 = sub_1000BA2D0();
      sub_1000B8390(v323);
      (*(void (**)(char *, uint64_t))(v206 + 8))(v322, v205);
    }
    uint64_t v324 = v404;
    sub_1000BA4A0();
    if (v302(v324, 1, v205) == 1)
    {
      sub_1000184DC(v404, &qword_1000EC9C0);
    }
    else
    {
      v325 = v389;
      (*(void (**)(char *, uint64_t, uint64_t))(v206 + 32))(v389, v404, v205);
      Swift::Int v326 = sub_1000BA2D0();
      sub_1000B8390(v326);
      (*(void (**)(char *, uint64_t))(v206 + 8))(v325, v205);
    }
    v327 = v405;
    sub_1000BA470();
    if (v302((uint64_t)v327, 1, v205) == 1)
    {
      (*(void (**)(char *, uint64_t))(v406 + 8))(v415, v407);
      uint64_t v210 = (uint64_t)v405;
      return sub_1000184DC(v210, &qword_1000EC9C0);
    }
    v328 = v390;
    (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v390, v405, v205);
    Swift::Int v329 = sub_1000BA2D0();
    sub_1000B8390(v329);
    (*(void (**)(char *, uint64_t))(v206 + 8))(v328, v205);
    return (*(uint64_t (**)(char *, uint64_t))(v406 + 8))(v415, v407);
  }
  else if (v200 == enum case for LinkPresentation.SpecializationMetadata.mapCollectionPublisherMetadata(_:))
  {
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    (*(void (**)(char *, char *, uint64_t))(v398 + 32))(v397, v199, v399);
    v308 = v396;
    sub_1000BA540();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v308, 1, v205) == 1)
    {
      (*(void (**)(char *, uint64_t))(v398 + 8))(v397, v399);
      uint64_t v210 = (uint64_t)v396;
      return sub_1000184DC(v210, &qword_1000EC9C0);
    }
    v330 = v382;
    (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v382, v396, v205);
    Swift::Int v331 = sub_1000BA2D0();
    sub_1000B8390(v331);
    (*(void (**)(char *, uint64_t))(v206 + 8))(v330, v205);
    return (*(uint64_t (**)(char *, uint64_t))(v398 + 8))(v397, v399);
  }
  else
  {
    if (v200 != enum case for LinkPresentation.SpecializationMetadata.fileMetadata(_:))
    {
      if (v200 != enum case for LinkPresentation.SpecializationMetadata.appleNewsMetadata(_:))
      {
        if (v200 == enum case for LinkPresentation.SpecializationMetadata.stocksMetadata(_:))
        {
          (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
          (*(void (**)(char *, char *, uint64_t))(v367 + 32))(v366, v199, v368);
          v335 = v362;
          sub_1000BA210();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v335, 1, v205) == 1)
          {
            (*(void (**)(char *, uint64_t))(v367 + 8))(v366, v368);
            uint64_t v210 = (uint64_t)v362;
            return sub_1000184DC(v210, &qword_1000EC9C0);
          }
          v339 = v357;
          (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v357, v362, v205);
          Swift::Int v340 = sub_1000BA2D0();
          sub_1000B8390(v340);
          (*(void (**)(char *, uint64_t))(v206 + 8))(v339, v205);
          return (*(uint64_t (**)(char *, uint64_t))(v367 + 8))(v366, v368);
        }
        if (v200 == enum case for LinkPresentation.SpecializationMetadata.appleTVMetadata(_:))
        {
          (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
          (*(void (**)(char *, char *, uint64_t))(v370 + 32))(v369, v199, v371);
          v338 = v363;
          sub_1000BA250();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v338, 1, v205) == 1)
          {
            (*(void (**)(char *, uint64_t))(v370 + 8))(v369, v371);
            uint64_t v210 = (uint64_t)v363;
            return sub_1000184DC(v210, &qword_1000EC9C0);
          }
          v342 = v358;
          (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v358, v363, v205);
          Swift::Int v343 = sub_1000BA2D0();
          sub_1000B8390(v343);
          (*(void (**)(char *, uint64_t))(v206 + 8))(v342, v205);
          return (*(uint64_t (**)(char *, uint64_t))(v370 + 8))(v369, v371);
        }
        if (v200 == enum case for LinkPresentation.SpecializationMetadata.photosMomentMetadata(_:))
        {
          (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
          (*(void (**)(char *, char *, uint64_t))(v373 + 32))(v372, v199, v374);
          v341 = v364;
          sub_1000BA420();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v341, 1, v205) == 1)
          {
            (*(void (**)(char *, uint64_t))(v373 + 8))(v372, v374);
            uint64_t v210 = (uint64_t)v364;
            return sub_1000184DC(v210, &qword_1000EC9C0);
          }
          v346 = v359;
          (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v359, v364, v205);
          Swift::Int v347 = sub_1000BA2D0();
          sub_1000B8390(v347);
          (*(void (**)(char *, uint64_t))(v206 + 8))(v346, v205);
          return (*(uint64_t (**)(char *, uint64_t))(v373 + 8))(v372, v374);
        }
        if (v200 != enum case for LinkPresentation.SpecializationMetadata.photosStatusMetadata(_:)
          && v200 != enum case for LinkPresentation.SpecializationMetadata.photosSharedLibraryInvitationMetadata(_:)
          && v200 != enum case for LinkPresentation.SpecializationMetadata.businessChatMetadata(_:)
          && v200 != enum case for LinkPresentation.SpecializationMetadata.walletPassMetadata(_:)
          && v200 != enum case for LinkPresentation.SpecializationMetadata.appStoreStoryMetadata(_:)
          && v200 != enum case for LinkPresentation.SpecializationMetadata.summarizedLinkMetadata(_:)
          && v200 != enum case for LinkPresentation.SpecializationMetadata.faceTimeInviteMetadata(_:)
          && v200 != enum case for LinkPresentation.SpecializationMetadata.passwordsInviteMetadata(_:))
        {
          if (v200 == enum case for LinkPresentation.SpecializationMetadata.sharedObjectMetadata(_:))
          {
            (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
            uint64_t v344 = swift_projectBox();
            (*(void (**)(char *, uint64_t, uint64_t))(v378 + 16))(v376, v344, v379);
            uint64_t v345 = v365;
            sub_1000BA450();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v206 + 48))(v345, 1, v205) == 1)
            {
              sub_1000184DC(v365, &qword_1000EC9C0);
            }
            else
            {
              v349 = v361;
              (*(void (**)(char *, uint64_t, uint64_t))(v206 + 32))(v361, v365, v205);
              Swift::Int v350 = sub_1000BA2D0();
              sub_1000B8390(v350);
              (*(void (**)(char *, uint64_t))(v206 + 8))(v349, v205);
            }
            uint64_t v351 = v375;
            sub_1000BA440();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v204 + 48))(v351, 1, v194) == 1)
            {
              (*(void (**)(char *, uint64_t))(v378 + 8))(v376, v379);
              sub_1000184DC(v375, &qword_1000EC9B8);
              return swift_release();
            }
            else
            {
              uint64_t v352 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v204 + 32))(v355, v375, v194);
              uint64_t v353 = v512;
              sub_100033978(v352);
              if (v353)
              {
                (*(void (**)(char *, uint64_t))(v204 + 8))(v355, v194);
                (*(void (**)(char *, uint64_t))(v378 + 8))(v376, v379);
                (*(void (**)(uint64_t, uint64_t))(v380 + 8))(v516, v381);
              }
              else
              {
                v354 = v377;
                sub_1000B83B0();
                (*(void (**)(char *, uint64_t))(v380 + 8))(v354, v381);
                (*(void (**)(char *, uint64_t))(v204 + 8))(v355, v194);
                (*(void (**)(char *, uint64_t))(v378 + 8))(v376, v379);
              }
              return swift_release();
            }
          }
          else
          {
            sub_10003A128();
            swift_allocError();
            *(void *)uint64_t v348 = 0;
            *(void *)(v348 + 8) = 0;
            *(unsigned char *)(v348 + 16) = 1;
            swift_willThrow();
            (*(void (**)(uint64_t, uint64_t))(v380 + 8))(v516, v381);
            return (*(uint64_t (**)(char *, uint64_t))(v204 + 8))(v199, v194);
          }
        }
      }
      return (*(uint64_t (**)(char *, uint64_t))(v204 + 8))(v199, v194);
    }
    (*(void (**)(char *, uint64_t))(v204 + 96))(v199, v194);
    (*(void (**)(char *, char *, uint64_t))(v385 + 32))(v391, v199, v386);
    uint64_t v320 = v383;
    sub_1000BA140();
    v321 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v206 + 48);
    if (v321(v320, 1, v205) == 1)
    {
      sub_1000184DC(v383, &qword_1000EC9C0);
    }
    else
    {
      v332 = v356;
      (*(void (**)(char *, uint64_t, uint64_t))(v206 + 32))(v356, v383, v205);
      Swift::Int v333 = sub_1000BA2D0();
      sub_1000B8390(v333);
      (*(void (**)(char *, uint64_t))(v206 + 8))(v332, v205);
    }
    v334 = v384;
    sub_1000BA130();
    if (v321((uint64_t)v334, 1, v205) == 1)
    {
      (*(void (**)(char *, uint64_t))(v385 + 8))(v391, v386);
      uint64_t v210 = (uint64_t)v384;
      return sub_1000184DC(v210, &qword_1000EC9C0);
    }
    v336 = v360;
    (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v360, v384, v205);
    Swift::Int v337 = sub_1000BA2D0();
    sub_1000B8390(v337);
    (*(void (**)(char *, uint64_t))(v206 + 8))(v336, v205);
    return (*(uint64_t (**)(char *, uint64_t))(v385 + 8))(v391, v386);
  }
}

uint64_t sub_100037EFC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1000B83D0();
  uint64_t v83 = *(void *)(v2 - 8);
  uint64_t v84 = v2;
  __chkstk_darwin(v2);
  uint64_t v74 = (uint64_t)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001295C(&qword_1000EC9B8);
  __chkstk_darwin(v4 - 8);
  uint64_t v76 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000BA4E0();
  uint64_t v77 = *(void *)(v6 - 8);
  uint64_t v78 = v6;
  __chkstk_darwin(v6);
  uint64_t v82 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001295C(&qword_1000EC9C0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v80 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v75 = (char *)&v71 - v11;
  uint64_t v12 = sub_1000BA2E0();
  uint64_t v79 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v87 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v86 = (char *)&v71 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v71 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v71 - v20;
  uint64_t v22 = sub_10001295C(&qword_1000EC610);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000BA0B0();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1;
  sub_1000B83C0();
  sub_1000BA270();
  uint64_t v30 = v25;
  uint64_t v31 = v26;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v30) == 1) {
    return sub_1000184DC((uint64_t)v24, &qword_1000EC610);
  }
  uint64_t v81 = v21;
  uint64_t v71 = v19;
  uint64_t v72 = v26;
  uint64_t v33 = v29;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  uint64_t v73 = v30;
  v34(v28, v24, v30);
  uint64_t v35 = (uint64_t)v75;
  sub_1000BA090();
  uint64_t v36 = v79;
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
  if (v37(v35, 1, v12) == 1)
  {
    sub_1000184DC(v35, &qword_1000EC9C0);
  }
  else
  {
    uint64_t v38 = v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v81, v35, v12);
    Swift::Int v39 = sub_1000BA2D0();
    sub_1000B8390(v39);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v12);
  }
  uint64_t v41 = v84;
  uint64_t v40 = v85;
  sub_1000BA0A0();
  uint64_t v42 = (uint64_t)v80;
  unsigned int v43 = v37((uint64_t)v80, 1, v12);
  uint64_t v81 = v33;
  uint64_t v44 = v83;
  if (v43 == 1)
  {
    sub_1000184DC(v42, &qword_1000EC9C0);
  }
  else
  {
    uint64_t v45 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v71, v42, v12);
    Swift::Int v46 = sub_1000BA2D0();
    sub_1000B8390(v46);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v45, v12);
  }
  uint64_t v47 = v41;
  uint64_t v48 = sub_1000BA080();
  uint64_t v80 = v28;
  uint64_t v49 = v82;
  if (v48)
  {
    uint64_t v75 = (char *)v48;
    uint64_t v50 = *(void *)(v48 + 16);
    uint64_t v51 = v86;
    if (v50)
    {
      uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
      uint64_t v53 = &v75[(*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80)];
      uint64_t v54 = *(void *)(v79 + 72);
      uint64_t v55 = (void (**)(char *, uint64_t))(v79 + 8);
      do
      {
        v52(v51, v53, v12);
        Swift::Int v56 = sub_1000BA2D0();
        sub_1000B8390(v56);
        uint64_t v51 = v86;
        (*v55)(v86, v12);
        v53 += v54;
        --v50;
      }
      while (v50);
    }
    swift_bridgeObjectRelease();
    uint64_t v47 = v84;
    uint64_t v40 = v85;
    uint64_t v49 = v82;
    uint64_t v44 = v83;
    uint64_t v36 = v79;
    uint64_t v28 = v80;
  }
  uint64_t v57 = sub_1000BA060();
  if (v57)
  {
    uint64_t v86 = (char *)v57;
    uint64_t v58 = *(void *)(v57 + 16);
    uint64_t v59 = v87;
    if (v58)
    {
      uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
      uint64_t v61 = &v86[(*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80)];
      uint64_t v62 = *(void *)(v36 + 72);
      uint64_t v63 = (void (**)(char *, uint64_t))(v36 + 8);
      do
      {
        v60(v59, v61, v12);
        Swift::Int v64 = sub_1000BA2D0();
        sub_1000B8390(v64);
        uint64_t v59 = v87;
        (*v63)(v87, v12);
        v61 += v62;
        --v58;
      }
      while (v58);
    }
    swift_bridgeObjectRelease();
    uint64_t v47 = v84;
    uint64_t v40 = v85;
    uint64_t v49 = v82;
    uint64_t v44 = v83;
    uint64_t v28 = v80;
  }
  uint64_t v65 = (uint64_t)v76;
  sub_1000BA070();
  uint64_t v66 = v77;
  uint64_t v67 = v78;
  int v68 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v65, 1, v78);
  uint64_t v69 = v81;
  if (v68 == 1)
  {
    (*(void (**)(char *, uint64_t))(v72 + 8))(v28, v73);
    return sub_1000184DC(v65, &qword_1000EC9B8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v49, v65, v67);
    uint64_t v70 = v74;
    sub_100033978(v74);
    if (v40)
    {
      (*(void (**)(char *, uint64_t))(v66 + 8))(v49, v67);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v80, v73);
      return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v69, v47);
    }
    else
    {
      sub_1000B83B0();
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v70, v47);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v49, v67);
      return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v80, v73);
    }
  }
}

void sub_100038714()
{
  uint64_t v0 = sub_1000BA920();
  sub_10003A0C4(v0, qword_1000EC998);
  uint64_t v1 = sub_10003A08C(v0, (uint64_t)qword_1000EC998);
  sub_100038760(v1);
}

void sub_100038760(uint64_t a1@<X8>)
{
  v15[0] = a1;
  uint64_t v1 = sub_1000BA8F0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000BA940();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_allocWithZone((Class)NSKeyedArchiver);
  id v10 = objc_msgSend(v9, "initRequiringSecureCoding:", 1, v15[0]);
  [v10 encodeObject:0];
  id v11 = [v10 encodedData];
  uint64_t v12 = sub_1000B82D0();
  unint64_t v14 = v13;

  sub_100017F4C(v12, v14);
  sub_1000BA930();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for EncodedAttachments.EncodedContent.other(_:), v1);
  sub_1000BA910();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100018074(v12, v14);
}

uint64_t sub_1000389D4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v64 = a2;
  uint64_t v56 = a3;
  *(void *)&long long v63 = a1;
  uint64_t v3 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v3 - 8);
  uint64_t v59 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000BB6C0();
  uint64_t v61 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v60 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000B9430();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  __chkstk_darwin(v6);
  uint64_t v50 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000BA950();
  __chkstk_darwin(v8 - 8);
  uint64_t v53 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000B83D0();
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v55 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000BA2A0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v62 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v57 = (char *)&v49 - v17;
  uint64_t v18 = sub_1000B87C0();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BB300();
  uint64_t v22 = sub_1000B87B0();
  os_log_type_t v23 = sub_1000BBBB0();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v49 = v13;
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Going through new LinkPresentation unpacking flow.", v24, 2u);
    uint64_t v13 = v49;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  sub_100017F4C(v63, v64);
  uint64_t v25 = v62;
  uint64_t v26 = v65;
  sub_1000BA280();
  if (v26)
  {
    sub_100018190();
    uint64_t v27 = (void *)sub_1000BBD00();
    sub_10001295C(&qword_1000EC5C8);
    uint64_t v28 = swift_allocObject();
    long long v63 = xmmword_1000BF8A0;
    *(_OWORD *)(v28 + 16) = xmmword_1000BF8A0;
    uint64_t v66 = v26;
    sub_10001295C(&qword_1000EC648);
    uint64_t v29 = sub_1000BB200();
    uint64_t v31 = v30;
    *(void *)(v28 + 56) = &type metadata for String;
    unint64_t v64 = sub_10001824C();
    *(void *)(v28 + 64) = v64;
    *(void *)(v28 + 32) = v29;
    *(void *)(v28 + 40) = v31;
    sub_1000BBBE0();
    sub_1000B8770();

    swift_bridgeObjectRelease();
    uint64_t v65 = v26;
    swift_errorRetain();
    uint64_t v32 = v60;
    sub_1000BB6D0();
    uint64_t v33 = (void *)sub_1000BBD00();
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = v63;
    uint64_t v35 = v61;
    uint64_t v36 = v58;
    uint64_t v37 = (uint64_t)v59;
    *(void *)&long long v63 = *(void *)(v61 + 16);
    ((void (*)(char *, char *, uint64_t))v63)(v59, v32, v58);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v37, 0, 1, v36);
    uint64_t v38 = sub_1000BB200();
    uint64_t v40 = v39;
    sub_1000184DC(v37, &qword_1000EC630);
    unint64_t v41 = v64;
    *(void *)(v34 + 56) = &type metadata for String;
    *(void *)(v34 + 64) = v41;
    *(void *)(v34 + 32) = v38;
    *(void *)(v34 + 40) = v40;
    sub_1000BBBE0();
    sub_1000B8770();

    swift_bridgeObjectRelease();
    sub_100017E10();
    swift_allocError();
    ((void (*)(uint64_t, char *, uint64_t))v63)(v42, v32, v36);
    swift_willThrow();
    swift_errorRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v32, v36);
  }
  else
  {
    uint64_t v44 = v57;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v57, v25, v13);
    uint64_t v45 = sub_100037EFC(v12);
    __chkstk_darwin(v45);
    *(&v49 - 2) = (uint64_t)v12;
    uint64_t v46 = swift_bridgeObjectRetain();
    sub_100039D80(v46, (void (*)(uint64_t, uint64_t, unint64_t))sub_100039D64, (uint64_t)(&v49 - 4));
    uint64_t v47 = v12;
    swift_bridgeObjectRelease();
    sub_1000BA900();
    uint64_t v48 = v50;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v50, v44, v13);
    (*(void (**)(char *, void, uint64_t))(v51 + 104))(v48, enum case for BalloonPlugin.Payload.linkPresentation(_:), v52);
    sub_1000BAE60();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v44, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v47, v55);
  }
}

uint64_t sub_100039224@<X0>(Swift::Int a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v72 = a4;
  uint64_t v7 = sub_1000BA940();
  uint64_t v69 = *(void *)(v7 - 8);
  uint64_t v70 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000BA8F0();
  uint64_t v73 = *(void *)(v10 - 8);
  uint64_t v74 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  long long v63 = (char *)&v60 - v14;
  uint64_t v62 = sub_1000BA920();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v66 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000BA8E0();
  uint64_t v64 = *(void *)(v16 - 8);
  uint64_t v65 = v16;
  __chkstk_darwin(v16);
  int v68 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10001295C(&qword_1000EC660);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000BB470();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v76 = v21;
  uint64_t v77 = v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v67 = (char *)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v60 - v25;
  Swift::Int v75 = a1;
  LOBYTE(a1) = sub_1000B83A0(a1);
  os_log_type_t v27 = sub_1000BBBB0();
  unint64_t v71 = sub_100018190();
  uint64_t v28 = sub_1000BBCF0();
  uint64_t v29 = v28;
  if (a1)
  {
    uint64_t v30 = v83;
    uint64_t v70 = a2;
    if (os_log_type_enabled(v28, v27))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 134217984;
      *(void *)&long long v80 = v75;
      sub_1000BBE50();
      _os_log_impl((void *)&_mh_execute_header, v29, v27, "%ld should be an image, assessing type", v31, 0xCu);
      swift_slowDealloc();
    }

    unint64_t v32 = a3;
    *((void *)&v81 + 1) = &type metadata for Data;
    uint64_t v82 = &protocol witness table for Data;
    uint64_t v33 = v70;
    *(void *)&long long v80 = v70;
    *((void *)&v80 + 1) = v32;
    uint64_t v34 = sub_1000BB440();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v20, 1, 1, v34);
    sub_100017F4C(v33, v32);
    sub_1000BB450();
    sub_1000BB460();
    sub_100014C68(&v80, *((uint64_t *)&v81 + 1));
    sub_1000B9480();
    if (v30)
    {
      (*(void (**)(char *, uint64_t))(v77 + 8))(v26, v76);
      return sub_100015C54((uint64_t)&v80);
    }
    else
    {
      uint64_t v39 = v79;
      if (v79)
      {
        Swift::Int v40 = v78;
        sub_100015C54((uint64_t)&v80);
        sub_1000BBBB0();
        unint64_t v41 = (void *)sub_1000BBCF0();
        sub_10001295C(&qword_1000EC5C8);
        uint64_t v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = xmmword_1000BF8A0;
        *(void *)(v42 + 56) = &type metadata for String;
        *(void *)(v42 + 64) = sub_10001824C();
        *(void *)(v42 + 32) = v40;
        *(void *)(v42 + 40) = v39;
        swift_bridgeObjectRetain();
        sub_1000B8780();

        swift_bridgeObjectRelease();
        uint64_t v44 = v76;
        uint64_t v43 = v77;
        (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v67, v26, v76);
        uint64_t v45 = v68;
        sub_1000BA8D0();
        uint64_t v47 = v64;
        uint64_t v46 = v65;
        uint64_t v48 = v63;
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v63, v45, v65);
        (*(void (**)(char *, void, uint64_t))(v73 + 104))(v48, enum case for EncodedAttachments.EncodedContent.astc(_:), v74);
        uint64_t v49 = v66;
        sub_1000BA910();
        sub_1000BBBB0();
        uint64_t v56 = (void *)sub_1000BBCF0();
        sub_1000B8780();

        (*(void (**)(char *, uint64_t))(v47 + 8))(v68, v46);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v44);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v61 + 32))(v72, v49, v62);
      }
      else
      {
        sub_100015C54((uint64_t)&v80);
        id v50 = objc_allocWithZone((Class)NSKeyedUnarchiver);
        sub_100017F4C(v33, v32);
        id v51 = sub_100039F78();
        sub_100018074(v33, v32);
        if ([v51 decodeObject])
        {
          sub_1000BBE80();
          swift_unknownObjectRelease();

          sub_1000184DC((uint64_t)&v80, &qword_1000EC690);
          uint64_t v52 = sub_1000BBF10();
          swift_allocError();
          uint64_t v54 = v53;
          sub_10001295C(&qword_1000EC600);
          uint64_t v55 = swift_allocObject();
          *(_OWORD *)(v55 + 16) = xmmword_1000BF8A0;
          *(void *)(v55 + 56) = &type metadata for MessageDictionary.CodingKeys;
          *(void *)(v55 + 64) = sub_10003A038();
          *(unsigned char *)(v55 + 32) = 22;
          *(void *)&long long v80 = 0;
          *((void *)&v80 + 1) = 0xE000000000000000;
          sub_1000BBED0(56);
          v84._object = (void *)0x80000001000C9AD0;
          v84._countAndFlagsBits = 0xD000000000000035;
          sub_1000BB9A0(v84);
          Swift::Int v78 = v75;
          v85._countAndFlagsBits = sub_1000BC190();
          sub_1000BB9A0(v85);
          swift_bridgeObjectRelease();
          v86._countAndFlagsBits = 41;
          v86._object = (void *)0xE100000000000000;
          sub_1000BB9A0(v86);
          sub_1000BBF00();
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v52 - 8) + 104))(v54, enum case for DecodingError.dataCorrupted(_:), v52);
          swift_willThrow();
        }
        else
        {

          long long v80 = 0u;
          long long v81 = 0u;
          sub_1000184DC((uint64_t)&v80, &qword_1000EC690);
          sub_1000BBBB0();
          uint64_t v57 = (void *)sub_1000BBCF0();
          sub_1000B8780();

          if (qword_1000EC280 != -1) {
            swift_once();
          }
          uint64_t v58 = v62;
          uint64_t v59 = sub_10003A08C(v62, (uint64_t)qword_1000EC998);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v72, v59, v58);
        }
        return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v26, v76);
      }
    }
  }
  else
  {
    sub_1000B8780();

    sub_100017F4C(a2, a3);
    uint64_t v36 = v83;
    uint64_t result = sub_1000BA930();
    if (!v36)
    {
      uint64_t v38 = v69;
      uint64_t v37 = v70;
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v13, v9, v70);
      (*(void (**)(char *, void, uint64_t))(v73 + 104))(v13, enum case for EncodedAttachments.EncodedContent.other(_:), v74);
      sub_1000BA910();
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v9, v37);
    }
  }
  return result;
}

uint64_t sub_100039D10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000BBC00();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100039D4C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1000389D4(a1, a2, a3);
}

uint64_t sub_100039D64@<X0>(Swift::Int a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_100039224(a1, a2, a3, a4);
}

void *sub_100039D80(uint64_t a1, void (*a2)(uint64_t, uint64_t, unint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v20 = sub_1000BA920();
  uint64_t v6 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = &_swiftEmptyArrayStorage;
  sub_10007F834(0, 0, 0);
  uint64_t v9 = v23;
  uint64_t v10 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v19 = v10;
  v18[0] = a1;
  if (v10)
  {
    uint64_t v11 = 0;
    v18[1] = v6 + 32;
    uint64_t v12 = (unint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v13 = *(v12 - 1);
      unint64_t v14 = *v12;
      sub_100017F4C(v13, *v12);
      v21(v11, v13, v14);
      if (v4) {
        break;
      }
      sub_100018074(v13, v14);
      uint64_t v23 = v9;
      unint64_t v16 = v9[2];
      unint64_t v15 = v9[3];
      if (v16 >= v15 >> 1)
      {
        sub_10007F834(v15 > 1, v16 + 1, 1);
        uint64_t v9 = v23;
      }
      ++v11;
      v12 += 2;
      v9[2] = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v9+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16, v8, v20);
      if (v19 == v11) {
        goto LABEL_9;
      }
    }
    sub_100018074(v13, v14);
    swift_release();
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return v9;
}

id sub_100039F78()
{
  Class isa = sub_1000B82B0().super.isa;
  id v6 = 0;
  id v2 = [v0 initForReadingFromData:isa error:&v6];

  if (v2)
  {
    id v3 = v6;
  }
  else
  {
    id v4 = v6;
    sub_1000B81D0();

    swift_willThrow();
  }
  return v2;
}

unint64_t sub_10003A038()
{
  unint64_t result = qword_1000EC9B0;
  if (!qword_1000EC9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC9B0);
  }
  return result;
}

uint64_t sub_10003A08C(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *sub_10003A0C4(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_10003A128()
{
  unint64_t result = qword_1000EC9C8;
  if (!qword_1000EC9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC9C8);
  }
  return result;
}

__n128 initializeBufferWithCopyOfBuffer for LinkPresentationUnpackerError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for LinkPresentationUnpackerError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LinkPresentationUnpackerError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_10003A1E0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10003A1FC(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 1;
  }
  else
  {
    *(unsigned char *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkPresentationUnpackerError()
{
  return &type metadata for LinkPresentationUnpackerError;
}

uint64_t destroy for CombinedPluginAttachmentDictionary(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = *(void *)(a1 + 16);

  return sub_100018074(v2, v3);
}

void *_s24MessagesBlastDoorService34CombinedPluginAttachmentDictionaryVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  unint64_t v4 = a2[2];
  swift_bridgeObjectRetain();
  sub_100017F4C(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

void *assignWithCopy for CombinedPluginAttachmentDictionary(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[1];
  unint64_t v4 = a2[2];
  sub_100017F4C(v5, v4);
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  a1[1] = v5;
  a1[2] = v4;
  sub_100018074(v6, v7);
  return a1;
}

__n128 initializeWithTake for CombinedPluginAttachmentDictionary(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for CombinedPluginAttachmentDictionary(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a1[1];
  unint64_t v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_100018074(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CombinedPluginAttachmentDictionary(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CombinedPluginAttachmentDictionary(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CombinedPluginAttachmentDictionary()
{
  return &type metadata for CombinedPluginAttachmentDictionary;
}

uint64_t sub_10003A438(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = a4;
  uint64_t v8 = sub_10001295C(&qword_1000EC9F8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_10003AC74();
  sub_1000BC280();
  uint64_t v15 = a2;
  char v17 = 0;
  sub_10001295C(&qword_1000EC9E0);
  sub_10003AD1C(&qword_1000ECA00, (void (*)(void))sub_10003AD8C);
  sub_1000BC0F0();
  if (!v4)
  {
    uint64_t v15 = a3;
    uint64_t v16 = v14;
    char v17 = 1;
    sub_10003AD8C();
    sub_1000BC160();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10003A610@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10003AA08(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_10003A640(void *a1)
{
  return sub_10003A438(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_10003A660(char *a1, char *a2)
{
  return sub_10004E01C(*a1, *a2);
}

Swift::Int sub_10003A66C()
{
  return sub_1000BC250();
}

uint64_t sub_10003A704()
{
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10003A788()
{
  return sub_1000BC250();
}

uint64_t sub_10003A81C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_1000E0D58;
  v8._object = v3;
  Swift::Int v5 = sub_1000BBFA0(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_10003A87C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6863617474615F5FLL;
  if (*v1) {
    uint64_t v2 = 0x616F6C7961705F5FLL;
  }
  unint64_t v3 = 0xEF5F5F73746E656DLL;
  if (*v1) {
    unint64_t v3 = 0xEB000000005F5F64;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10003A8D0()
{
  if (*v0) {
    return 0x616F6C7961705F5FLL;
  }
  else {
    return 0x6863617474615F5FLL;
  }
}

uint64_t sub_10003A920@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_1000E0D58;
  v9._object = a2;
  Swift::Int v6 = sub_1000BBFA0(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

void sub_10003A984(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10003A990(uint64_t a1)
{
  unint64_t v2 = sub_10003AC74();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10003A9CC(uint64_t a1)
{
  unint64_t v2 = sub_10003AC74();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10003AA08(void *a1)
{
  uint64_t v3 = sub_10001295C(&qword_1000EC9D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::Int v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_10003AC74();
  sub_1000BC270();
  if (v1)
  {
    uint64_t v7 = 0;
    sub_100015C54((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10001295C(&qword_1000EC9E0);
    char v14 = 0;
    sub_10003AD1C(&qword_1000EC9E8, (void (*)(void))sub_10003ACC8);
    sub_1000BC000();
    uint64_t v7 = v12;
    char v14 = 1;
    sub_10003ACC8();
    swift_bridgeObjectRetain();
    sub_1000BC070();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v9 = v12;
    unint64_t v10 = v13;
    swift_bridgeObjectRetain();
    sub_100017F4C(v9, v10);
    swift_bridgeObjectRelease();
    sub_100015C54((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_100018074(v9, v10);
  }
  return v7;
}

unint64_t sub_10003AC74()
{
  unint64_t result = qword_1000EC9D8;
  if (!qword_1000EC9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC9D8);
  }
  return result;
}

unint64_t sub_10003ACC8()
{
  unint64_t result = qword_1000EC9F0;
  if (!qword_1000EC9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EC9F0);
  }
  return result;
}

uint64_t sub_10003AD1C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014D68(&qword_1000EC9E0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10003AD8C()
{
  unint64_t result = qword_1000ECA08;
  if (!qword_1000ECA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECA08);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CombinedPluginAttachmentDictionary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003AEACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CombinedPluginAttachmentDictionary.CodingKeys()
{
  return &type metadata for CombinedPluginAttachmentDictionary.CodingKeys;
}

unint64_t sub_10003AEE8()
{
  unint64_t result = qword_1000ECA10;
  if (!qword_1000ECA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECA10);
  }
  return result;
}

unint64_t sub_10003AF40()
{
  unint64_t result = qword_1000ECA18;
  if (!qword_1000ECA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECA18);
  }
  return result;
}

unint64_t sub_10003AF98()
{
  unint64_t result = qword_1000ECA20;
  if (!qword_1000ECA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECA20);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledMessageUpdateDictionary()
{
  return &type metadata for ScheduledMessageUpdateDictionary;
}

Swift::Int sub_10003AFFC()
{
  return sub_1000BC250();
}

uint64_t sub_10003B044()
{
  return sub_1000BB990();
}

Swift::Int sub_10003B050()
{
  return sub_1000BC250();
}

uint64_t sub_10003B094@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  int v3 = (void *)a1[1];
  v4._rawValue = &off_1000E0DA8;
  v7._object = v3;
  Swift::Int v5 = sub_1000BBFA0(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_10003B0E8(void *a1@<X8>)
{
  *a1 = 29555;
  a1[1] = 0xE200000000000000;
}

uint64_t sub_10003B0F8()
{
  return 29555;
}

uint64_t sub_10003B104@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  v8._countAndFlagsBits = a1;
  v5._rawValue = &off_1000E0DE0;
  v8._object = a2;
  Swift::Int v6 = sub_1000BBFA0(v5, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

void sub_10003B15C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_10003B168(uint64_t a1)
{
  unint64_t v2 = sub_10003B470();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10003B1A4(uint64_t a1)
{
  unint64_t v2 = sub_10003B470();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10003B1E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000ECA28);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_10003B470();
  sub_1000BC270();
  if (v2) {
    return sub_100015C54((uint64_t)a1);
  }
  uint64_t v9 = sub_1000BC060();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = sub_100015C54((uint64_t)a1);
  *a2 = v9;
  return result;
}

uint64_t sub_10003B33C(void *a1)
{
  uint64_t v2 = sub_10001295C(&qword_1000ECA38);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_10003B470();
  sub_1000BC280();
  sub_1000BC150();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_10003B470()
{
  unint64_t result = qword_1000ECA30;
  if (!qword_1000ECA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECA30);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ScheduledMessageUpdateDictionary.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10003B560);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledMessageUpdateDictionary.CodingKeys()
{
  return &type metadata for ScheduledMessageUpdateDictionary.CodingKeys;
}

unint64_t sub_10003B59C()
{
  unint64_t result = qword_1000ECA40;
  if (!qword_1000ECA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECA40);
  }
  return result;
}

unint64_t sub_10003B5F4()
{
  unint64_t result = qword_1000ECA48;
  if (!qword_1000ECA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECA48);
  }
  return result;
}

unint64_t sub_10003B64C()
{
  unint64_t result = qword_1000ECA50;
  if (!qword_1000ECA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECA50);
  }
  return result;
}

uint64_t MessageSummaryInfoDictionary.encode(to:)(void *a1)
{
  uint64_t v3 = sub_10001295C(&qword_1000ECA58);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014C68(a1, a1[3]);
  sub_10003B8F4();
  sub_1000BC280();
  v8[15] = 0;
  sub_1000BC0D0();
  if (!v1)
  {
    v8[14] = 1;
    sub_1000BC0A0();
    v8[13] = 2;
    sub_1000BC0A0();
    v8[12] = 3;
    sub_1000BC0A0();
    v8[11] = 4;
    sub_1000BC0A0();
    v8[10] = 5;
    sub_1000BC0A0();
    v8[9] = 6;
    sub_1000BC0B0();
    v8[8] = 7;
    sub_1000BC0B0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_10003B8F4()
{
  unint64_t result = qword_1000ECA60;
  if (!qword_1000ECA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECA60);
  }
  return result;
}

__n128 MessageSummaryInfoDictionary.init(from:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10003BDB4(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_WORD *)(a2 + 96) = v8;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_10003B9A8(void *a1)
{
  return MessageSummaryInfoDictionary.encode(to:)(a1);
}

MessagesBlastDoorService::MessageSummaryInfoDictionary::CodingKeys_optional __swiftcall MessageSummaryInfoDictionary.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  return (MessagesBlastDoorService::MessageSummaryInfoDictionary::CodingKeys_optional)8;
}

uint64_t MessageSummaryInfoDictionary.CodingKeys.rawValue.getter(char a1)
{
  uint64_t result = 6516065;
  switch(a1)
  {
    case 1:
      uint64_t result = 7564641;
      break;
    case 2:
      uint64_t result = 6450529;
      break;
    case 3:
      uint64_t result = 6581601;
      break;
    case 4:
      uint64_t result = 1650552161;
      break;
    case 5:
      uint64_t result = 1634954593;
      break;
    case 6:
      uint64_t result = 7631733;
      break;
    case 7:
      uint64_t result = 7496296;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t MessageSummaryInfoDictionary.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 6516065;
  switch(a1)
  {
    case 1:
      uint64_t result = 7564641;
      break;
    case 2:
      uint64_t result = 6450529;
      break;
    case 3:
      uint64_t result = 6581601;
      break;
    case 4:
      uint64_t result = 1650552161;
      break;
    case 5:
      uint64_t result = 1634954593;
      break;
    case 6:
      uint64_t result = 7631733;
      break;
    case 7:
      uint64_t result = 7496296;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10003BB34(char *a1, char *a2)
{
  return sub_10004E43C(*a1, *a2);
}

Swift::Int sub_10003BB40()
{
  return sub_10007CD7C();
}

uint64_t sub_10003BB4C()
{
  return sub_10007CB2C();
}

Swift::Int sub_10003BB54()
{
  return sub_10007CD7C();
}

uint64_t sub_10003BB5C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s24MessagesBlastDoorService28MessageSummaryInfoDictionaryV10CodingKeysO8rawValueAESgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10003BB8C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 6516065;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 7564641;
      goto LABEL_3;
    case 2:
      *a1 = 6450529;
      a1[1] = 0xE300000000000000;
      break;
    case 3:
      *a1 = 6581601;
      a1[1] = 0xE300000000000000;
      break;
    case 4:
      *a1 = 1650552161;
      a1[1] = 0xE400000000000000;
      break;
    case 5:
      *a1 = 1634954593;
      a1[1] = 0xE400000000000000;
      break;
    case 6:
      *a1 = 7631733;
      a1[1] = 0xE300000000000000;
      break;
    case 7:
      *a1 = 7496296;
      a1[1] = 0xE300000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE300000000000000;
      break;
  }
}

uint64_t sub_10003BC58()
{
  uint64_t result = 6516065;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7564641;
      break;
    case 2:
      uint64_t result = 6450529;
      break;
    case 3:
      uint64_t result = 6581601;
      break;
    case 4:
      uint64_t result = 1650552161;
      break;
    case 5:
      uint64_t result = 1634954593;
      break;
    case 6:
      uint64_t result = 7631733;
      break;
    case 7:
      uint64_t result = 7496296;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10003BD08@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = _s24MessagesBlastDoorService28MessageSummaryInfoDictionaryV10CodingKeysO8rawValueAESgSS_tcfC_0(a1, a2);
  *a3 = result;
  return result;
}

void sub_10003BD30(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_10003BD3C(uint64_t a1)
{
  unint64_t v2 = sub_10003B8F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10003BD78(uint64_t a1)
{
  unint64_t v2 = sub_10003B8F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10003BDB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000ECA80);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  __int16 v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_10003B8F4();
  sub_1000BC270();
  if (v2) {
    return sub_100015C54((uint64_t)a1);
  }
  char v52 = 0;
  uint64_t v9 = sub_1000BBFE0();
  int v11 = v10;
  char v51 = 1;
  uint64_t v39 = sub_1000BBFB0();
  int v40 = v11;
  char v50 = 2;
  uint64_t v13 = v12;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1000BBFB0();
  uint64_t v44 = v13;
  uint64_t v38 = v14;
  char v49 = 3;
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1000BBFB0();
  uint64_t v43 = v16;
  uint64_t v37 = v17;
  char v48 = 4;
  uint64_t v19 = v18;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1000BBFB0();
  uint64_t v42 = v19;
  uint64_t v36 = v20;
  char v47 = 5;
  uint64_t v22 = v21;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1000BBFB0();
  uint64_t v41 = v22;
  uint64_t v35 = v23;
  char v46 = 6;
  uint64_t v25 = v24;
  swift_bridgeObjectRetain();
  HIDWORD(v33) = sub_1000BBFC0();
  uint64_t v34 = v9;
  char v45 = 7;
  char v26 = sub_1000BBFC0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100015C54((uint64_t)a1);
  uint64_t v27 = v25;
  swift_bridgeObjectRelease();
  uint64_t v28 = v41;
  swift_bridgeObjectRelease();
  uint64_t v29 = v42;
  swift_bridgeObjectRelease();
  uint64_t v30 = v43;
  swift_bridgeObjectRelease();
  uint64_t v31 = v44;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v34;
  *(unsigned char *)(a2 + 8) = v40 & 1;
  *(void *)(a2 + 16) = v39;
  *(void *)(a2 + 24) = v31;
  *(void *)(a2 + 32) = v38;
  *(void *)(a2 + 40) = v30;
  *(void *)(a2 + 48) = v37;
  *(void *)(a2 + 56) = v29;
  *(void *)(a2 + 64) = v36;
  *(void *)(a2 + 72) = v28;
  *(void *)(a2 + 80) = v35;
  *(void *)(a2 + 88) = v27;
  *(unsigned char *)(a2 + 96) = BYTE4(v33);
  *(unsigned char *)(a2 + 97) = v26;
  return result;
}

uint64_t _s24MessagesBlastDoorService28MessageSummaryInfoDictionaryV10CodingKeysO8rawValueAESgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000E0E18;
  v6._object = a2;
  unint64_t v4 = sub_1000BBFA0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 8) {
    return 8;
  }
  else {
    return v4;
  }
}

unint64_t sub_10003C37C()
{
  unint64_t result = qword_1000ECA68;
  if (!qword_1000ECA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECA68);
  }
  return result;
}

unint64_t sub_10003C3D4()
{
  unint64_t result = qword_1000ECA70;
  if (!qword_1000ECA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECA70);
  }
  return result;
}

unint64_t sub_10003C42C()
{
  unint64_t result = qword_1000ECA78;
  if (!qword_1000ECA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECA78);
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageSummaryInfoDictionary()
{
  return &type metadata for MessageSummaryInfoDictionary;
}

uint64_t getEnumTagSinglePayload for MessageSummaryInfoDictionary.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MessageSummaryInfoDictionary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003C5ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageSummaryInfoDictionary.CodingKeys()
{
  return &type metadata for MessageSummaryInfoDictionary.CodingKeys;
}

ValueMetadata *type metadata accessor for VideoMessageMetadataUnpacker()
{
  return &type metadata for VideoMessageMetadataUnpacker;
}

uint64_t sub_10003C634()
{
  return sub_10003C720(&qword_1000ECA88);
}

uint64_t sub_10003C668()
{
  return swift_release();
}

uint64_t sub_10003C720(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000BAB20();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Int sub_10003C764()
{
  return sub_1000BC250();
}

void sub_10003C834(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_10001295C(&qword_1000EC588);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  BOOL v7 = (char *)v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  int v10 = (char *)v76 - v9;
  __chkstk_darwin(v8);
  uint64_t v95 = (char *)v76 - v11;
  uint64_t v94 = sub_1000B9CC0();
  uint64_t v97 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v96 = (char *)v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_1000BADE0();
  uint64_t v100 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v103 = (char *)v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000BA6E0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v101 = v14;
  uint64_t v102 = v15;
  __chkstk_darwin(v14);
  uint64_t v105 = (char *)v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1000BA7D0();
  uint64_t v17 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v99 = (uint64_t)v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000BB950();
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = v1[6];
  unint64_t v20 = v1[7];
  if (v20 >> 60 == 15)
  {
    sub_1000BAA80();
    if (!v2)
    {
      uint64_t v22 = (unsigned int *)&enum case for SMSCTPart.Content.attachment(_:);
LABEL_4:
      uint64_t v23 = *v22;
      uint64_t v24 = sub_1000BB730();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(a1, v23, v24);
      return;
    }
    return;
  }
  uint64_t v92 = v17;
  uint64_t v93 = a1;
  uint64_t v25 = v1[1];
  if (!v25) {
    goto LABEL_18;
  }
  uint64_t v26 = *v1;
  if (v26 == 0x616C702F74786574 && v25 == 0xEA00000000006E69 || (sub_1000BC1A0() & 1) != 0)
  {
    sub_100017F4C(v21, v20);
    sub_1000BB930();
    sub_1000BB920();
    uint64_t v27 = v93;
    sub_1000B9E30();
    if (!v2)
    {
      uint64_t v28 = (unsigned int *)&enum case for SMSCTPart.Content.plain(_:);
LABEL_20:
      uint64_t v36 = *v28;
      uint64_t v37 = sub_1000BB730();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104))(v27, v36, v37);
      goto LABEL_21;
    }
    goto LABEL_21;
  }
  if ((v26 != 0xD000000000000010 || v25 != 0x80000001000C9BF0) && (sub_1000BC1A0() & 1) == 0)
  {
LABEL_18:
    sub_100017FA4(v21, v20);
    sub_100017F4C(v21, v20);
    uint64_t v27 = v93;
    sub_1000BAA80();
    if (!v2)
    {
      uint64_t v28 = (unsigned int *)&enum case for SMSCTPart.Content.attachment(_:);
      goto LABEL_20;
    }
LABEL_21:
    sub_1000180CC(v21, v20);
    return;
  }
  sub_100017F4C(v21, v20);
  sub_1000BB930();
  sub_1000BB920();
  if (!v29)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v7, 1, 1, v104);
    uint64_t v38 = v93;
    sub_1000B9CA0();
    sub_1000180CC(v21, v20);
    if (v2) {
      return;
    }
    goto LABEL_56;
  }
  id v30 = [self sharedInstance];
  id v31 = objc_allocWithZone((Class)MBDSMSToSuperParserContext);
  NSString v32 = sub_1000BB8D0();
  swift_bridgeObjectRelease();
  id v33 = [v31 initWithContent:v32];

  id v88 = v30;
  if (![v30 parseContext:v33])
  {
    uint64_t v39 = v33;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v10, 1, 1, v104);
    uint64_t v38 = v93;
    sub_1000B9CA0();
    if (v2)
    {

      goto LABEL_21;
    }
    sub_1000180CC(v21, v20);

LABEL_56:
    uint64_t v70 = enum case for SMSCTPart.Content.smil(_:);
    uint64_t v71 = sub_1000BB730();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 104))(v38, v70, v71);
    return;
  }
  id v34 = [v33 body];
  _AttributedString.init(fromNSAttributedString:)(v34, v99);
  uint64_t v35 = v92;
  if (v2)
  {

    goto LABEL_21;
  }
  id v83 = v33;
  id v40 = [v33 orderedParts];
  uint64_t v82 = (char *)&type metadata for Any + 8;
  uint64_t v41 = sub_1000BBA50();

  uint64_t v42 = *(void *)(v41 + 16);
  if (!v42)
  {
LABEL_57:
    swift_bridgeObjectRelease();
    uint64_t v72 = v104;
    uint64_t v73 = v95;
    uint64_t v74 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v95, v99, v104);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v73, 0, 1, v72);
    a1 = v93;
    sub_1000B9CA0();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v74, v72);
    sub_1000180CC(v21, v20);

    uint64_t v22 = (unsigned int *)&enum case for SMSCTPart.Content.smil(_:);
    goto LABEL_4;
  }
  unint64_t v43 = 0;
  uint64_t v44 = v41 + 32;
  uint64_t v87 = v102 + 32;
  uint64_t v86 = v100 + 32;
  v76[1] = v97 + 32;
  Swift::String v84 = &_swiftEmptyArrayStorage;
  uint64_t v81 = v41;
  uint64_t v78 = v42;
  uint64_t v77 = v41 + 32;
  while (v43 < *(void *)(v41 + 16))
  {
    unint64_t v80 = v43;
    sub_10001DA70(v44 + 32 * v43, (uint64_t)v106);
    sub_10001DAE4(0, &qword_1000ECA98);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000BB6C0();
      sub_100017E10();
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();

      Swift::Int v75 = &v109;
      goto LABEL_61;
    }
    id v85 = v107;
    id v45 = [v107 textParts];
    uint64_t v46 = sub_1000BBA50();

    uint64_t v47 = *(void *)(v46 + 16);
    if (v47)
    {
      uint64_t v79 = v46;
      uint64_t v48 = v46 + 32;
      char v49 = &_swiftEmptyArrayStorage;
      while (1)
      {
        sub_10001DA70(v48, (uint64_t)v106);
        sub_10001DAE4(0, &qword_1000ECAA0);
        if (!swift_dynamicCast()) {
          break;
        }
        uint64_t v89 = v47;
        uint64_t v91 = v49;
        id v50 = v107;
        id v51 = [v107 contentLocation];
        sub_1000BB900();

        id v90 = v50;
        id v52 = [v50 text];
        sub_1000BB900();

        sub_1000BA6D0();
        char v49 = v91;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v49 = (void *)sub_10003E73C(0, v49[2] + 1, 1, (unint64_t)v49, &qword_1000ECAC0, (uint64_t (*)(void))&type metadata accessor for SMSParserTextPart, (uint64_t (*)(void))&type metadata accessor for SMSParserTextPart);
        }
        unint64_t v54 = v49[2];
        unint64_t v53 = v49[3];
        if (v54 >= v53 >> 1) {
          char v49 = (void *)sub_10003E73C(v53 > 1, v54 + 1, 1, (unint64_t)v49, &qword_1000ECAC0, (uint64_t (*)(void))&type metadata accessor for SMSParserTextPart, (uint64_t (*)(void))&type metadata accessor for SMSParserTextPart);
        }
        v49[2] = v54 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v102 + 32))((unint64_t)v49+ ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80))+ *(void *)(v102 + 72) * v54, v105, v101);

        v48 += 32;
        uint64_t v47 = v89 - 1;
        uint64_t v35 = v92;
        if (v89 == 1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_41;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000BB6C0();
      sub_100017E10();
      swift_allocError();
LABEL_60:
      sub_1000BB6B0();
      swift_willThrow();

      Swift::Int v75 = &v108;
LABEL_61:

      sub_1000180CC(v21, v20);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v99, v104);
      return;
    }
    swift_bridgeObjectRelease();
    char v49 = &_swiftEmptyArrayStorage;
LABEL_41:
    id v55 = [v85 attachmentParts];
    uint64_t v56 = sub_1000BBA50();

    uint64_t v57 = *(void *)(v56 + 16);
    if (v57)
    {
      uint64_t v91 = v49;
      uint64_t v89 = v56;
      uint64_t v58 = v56 + 32;
      uint64_t v59 = &_swiftEmptyArrayStorage;
      while (1)
      {
        sub_10001DA70(v58, (uint64_t)v106);
        sub_10001DAE4(0, &qword_1000ECAA8);
        if (!swift_dynamicCast()) {
          break;
        }
        id v90 = v59;
        id v60 = v107;
        id v61 = [v107 contentLocation];
        sub_1000BB900();

        sub_1000BADD0();
        uint64_t v59 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v59 = (void *)sub_10003E73C(0, v59[2] + 1, 1, (unint64_t)v59, &qword_1000ECAB8, (uint64_t (*)(void))&type metadata accessor for SMSParserAttachmentPart, (uint64_t (*)(void))&type metadata accessor for SMSParserAttachmentPart);
        }
        unint64_t v63 = v59[2];
        unint64_t v62 = v59[3];
        if (v63 >= v62 >> 1) {
          uint64_t v59 = (void *)sub_10003E73C(v62 > 1, v63 + 1, 1, (unint64_t)v59, &qword_1000ECAB8, (uint64_t (*)(void))&type metadata accessor for SMSParserAttachmentPart, (uint64_t (*)(void))&type metadata accessor for SMSParserAttachmentPart);
        }
        v59[2] = v63 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v100 + 32))((unint64_t)v59+ ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80))+ *(void *)(v100 + 72) * v63, v103, v98);

        v58 += 32;
        --v57;
        uint64_t v35 = v92;
        if (!v57) {
          goto LABEL_49;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000BB6C0();
      sub_100017E10();
      swift_allocError();
      goto LABEL_60;
    }
LABEL_49:
    swift_bridgeObjectRelease();
    sub_1000B9CB0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v84 = (void *)sub_10003E73C(0, v84[2] + 1, 1, (unint64_t)v84, &qword_1000ECAB0, (uint64_t (*)(void))&type metadata accessor for SMSParserPart, (uint64_t (*)(void))&type metadata accessor for SMSParserPart);
    }
    unint64_t v64 = v80;
    uint64_t v65 = v84;
    unint64_t v67 = v84[2];
    unint64_t v66 = v84[3];
    if (v67 >= v66 >> 1)
    {
      uint64_t v65 = (void *)sub_10003E73C(v66 > 1, v67 + 1, 1, (unint64_t)v84, &qword_1000ECAB0, (uint64_t (*)(void))&type metadata accessor for SMSParserPart, (uint64_t (*)(void))&type metadata accessor for SMSParserPart);
      unint64_t v64 = v80;
    }
    v65[2] = v67 + 1;
    unint64_t v68 = v64 + 1;
    unint64_t v69 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
    Swift::String v84 = v65;
    (*(void (**)(char *, char *, uint64_t))(v97 + 32))((char *)v65 + v69 + *(void *)(v97 + 72) * v67, v96, v94);

    unint64_t v43 = v68;
    uint64_t v35 = v92;
    uint64_t v41 = v81;
    uint64_t v44 = v77;
    if (v68 == v78) {
      goto LABEL_57;
    }
  }
  __break(1u);
}

uint64_t sub_10003DAC0()
{
  uint64_t v1 = sub_10001295C(&qword_1000EC678);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v28 = (uint64_t)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - v4;
  uint64_t v6 = sub_10001295C(&qword_1000EC778);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001295C(&qword_1000EC780);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10001295C(&qword_1000EC788);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001295C(&qword_1000EC7B0);
  sub_1000B8460();
  sub_10001836C(v0 + 16, (uint64_t)v30, &qword_1000EC5E8);
  sub_10001836C((uint64_t)v30, (uint64_t)&v31, &qword_1000EC5E8);
  if (!*((void *)&v31 + 1))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_6;
  }
  uint64_t v27 = v12;
  long long v29 = v31;
  sub_100020E08();
  sub_100020E5C();
  sub_1000BB8A0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v22 = &qword_1000EC778;
    uint64_t v21 = (uint64_t)v8;
    goto LABEL_7;
  }
  uint64_t v26 = v13;
  uint64_t v17 = v27;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v8, v9);
  swift_getKeyPath();
  sub_1000B8470();
  swift_release();
  sub_1000BB970();
  swift_bridgeObjectRelease();
  sub_1000B8350();
  swift_bridgeObjectRelease();
  uint64_t v18 = v28;
  sub_10003EF6C((uint64_t)v5, v28);
  uint64_t v19 = sub_1000B8380();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) != 1)
  {
    uint64_t v23 = sub_1000B8360();
    sub_1000184DC((uint64_t)v5, &qword_1000EC678);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v26);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v28, v19);
    return v23;
  }
  sub_1000184DC((uint64_t)v5, &qword_1000EC678);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v26);
  uint64_t v21 = v18;
  uint64_t v22 = &qword_1000EC678;
LABEL_7:
  sub_1000184DC(v21, v22);
  return 0;
}

uint64_t sub_10003DF8C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001295C(&qword_1000ECB50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014C68(a1, a1[3]);
  sub_10003FAE4();
  sub_1000BC280();
  v11[0] = 0;
  sub_1000BC0A0();
  if (!v2)
  {
    v11[0] = 1;
    sub_1000BC0A0();
    v11[0] = 2;
    sub_1000BC0A0();
    sub_10001836C(v3 + 48, (uint64_t)v12, &qword_1000EC5F0);
    sub_10001836C((uint64_t)v12, (uint64_t)v11, &qword_1000EC5F0);
    v10[15] = 3;
    sub_10003AD8C();
    sub_1000BC0F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_10003E174@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10003EFD4(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_10003E1B8(void *a1)
{
  return sub_10003DF8C(a1);
}

uint64_t sub_10003E1F4(unsigned __int8 *a1, char *a2)
{
  return sub_10004E7E8(*a1, *a2);
}

Swift::Int sub_10003E200()
{
  return sub_10003C764();
}

uint64_t sub_10003E208()
{
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10003E2C0()
{
  return sub_10007CC54();
}

uint64_t sub_10003E2C8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10003F350(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10003E2F8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701869940;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA00000000006469;
      uint64_t v3 = 0x2D746E65746E6F63;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000010;
      a1[1] = 0x80000001000C8E30;
      break;
    case 3:
      *a1 = 1635017060;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_10003E388()
{
  unint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x2D746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 1635017060;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10003E40C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10003F350(a1, a2);
  *a3 = result;
  return result;
}

void sub_10003E434(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_10003E440(uint64_t a1)
{
  unint64_t v2 = sub_10003FAE4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10003E47C(uint64_t a1)
{
  unint64_t v2 = sub_10003FAE4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10003E4B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10003E73C(a1, a2, a3, a4, &qword_1000ECB38, (uint64_t (*)(void))&type metadata accessor for SingleTap, (uint64_t (*)(void))&type metadata accessor for SingleTap);
}

char *sub_10003E4EC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001295C(&qword_1000ECB10);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      int64_t v12 = v11 - 32;
      if (v11 < 32) {
        int64_t v12 = v11 - 31;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 32]) {
          memmove(v13, a4 + 32, 2 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10003EE7C(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_10003E5F8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001295C(&qword_1000ECB18);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10003ED90(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10003E708(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10003E73C(a1, a2, a3, a4, &qword_1000ECB08, (uint64_t (*)(void))&type metadata accessor for SingleStroke, (uint64_t (*)(void))&type metadata accessor for SingleStroke);
}

uint64_t sub_10003E73C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10001295C(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1000BBF30();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10003F488(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_10003E9BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10003E73C(a1, a2, a3, a4, &qword_1000ECB28, (uint64_t (*)(void))&type metadata accessor for SingleKiss, (uint64_t (*)(void))&type metadata accessor for SingleKiss);
}

uint64_t sub_10003E9F0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10003E73C(a1, a2, a3, a4, &qword_1000ECB30, (uint64_t (*)(void))&type metadata accessor for AngerMovement, (uint64_t (*)(void))&type metadata accessor for AngerMovement);
}

uint64_t sub_10003EA24(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10003E73C(a1, a2, a3, a4, &qword_1000ECB20, (uint64_t (*)(void))&type metadata accessor for DigitalTouchBalloon, (uint64_t (*)(void))&type metadata accessor for DigitalTouchBalloon);
}

uint64_t sub_10003EA58(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10003E73C(a1, a2, a3, a4, &qword_1000ECB00, (uint64_t (*)(void))&type metadata accessor for AttributionInfo, (uint64_t (*)(void))&type metadata accessor for AttributionInfo);
}

uint64_t sub_10003EA8C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10003E73C(a1, a2, a3, a4, &qword_1000ECAE0, (uint64_t (*)(void))&type metadata accessor for MorphologyCustomPronounPair, (uint64_t (*)(void))&type metadata accessor for MorphologyCustomPronounPair);
}

char *sub_10003EAC0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001295C(&qword_1000ECAD8);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 32]) {
          memmove(v13, a4 + 32, 8 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10003F39C(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10003EBD0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10003E73C(a1, a2, a3, a4, &qword_1000ECAD0, (uint64_t (*)(void))&type metadata accessor for StyleSheet.Rule.Declaration, (uint64_t (*)(void))&type metadata accessor for StyleSheet.Rule.Declaration);
}

uint64_t sub_10003EC04(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10003E73C(a1, a2, a3, a4, &qword_1000ECAC8, (uint64_t (*)(void))&type metadata accessor for StyleSheet.Rule, (uint64_t (*)(void))&type metadata accessor for StyleSheet.Rule);
}

uint64_t sub_10003EC38(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10003E73C(a1, a2, a3, a4, &qword_1000ECAE8, (uint64_t (*)(void))&type metadata accessor for FileTransferAttribute.AttachmentInfo, (uint64_t (*)(void))&type metadata accessor for FileTransferAttribute.AttachmentInfo);
}

char *sub_10003EC6C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001295C(&qword_1000ECAF0);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[40 * v8 + 32]) {
          memmove(v12, a4 + 32, 40 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v12 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10003F5E4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_10003ED90(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1000BBF80();
  __break(1u);
  return result;
}

char *sub_10003EE7C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 2 * a1 + 32);
    size_t v6 = 2 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1000BBF80();
  __break(1u);
  return result;
}

uint64_t sub_10003EF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EC678);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003EFD4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000ECB40);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_10003FAE4();
  sub_1000BC270();
  if (v2)
  {
    sub_100015C54((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1000180CC(0, 0xF000000000000000);
  }
  else
  {
    LOBYTE(v26) = 0;
    uint64_t v9 = sub_1000BBFB0();
    uint64_t v11 = v10;
    uint64_t v25 = v9;
    LOBYTE(v26) = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1000BBFB0();
    uint64_t v14 = v13;
    uint64_t v23 = v12;
    uint64_t v24 = a2;
    LOBYTE(v26) = 2;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1000BBFB0();
    uint64_t v17 = v16;
    uint64_t v22 = v15;
    char v28 = 3;
    sub_10003ACC8();
    swift_bridgeObjectRetain();
    sub_1000BC000();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v18 = v26;
    unint64_t v19 = v27;
    sub_100017FA4(v26, v27);
    sub_1000180CC(0, 0xF000000000000000);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100017FA4(v18, v19);
    sub_1000180CC(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100015C54((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1000180CC(v18, v19);
    uint64_t v21 = v24;
    *uint64_t v24 = v25;
    v21[1] = v11;
    _OWORD v21[2] = v23;
    v21[3] = v14;
    v21[4] = v22;
    v21[5] = v17;
    v21[6] = v18;
    v21[7] = v19;
  }
  return result;
}

uint64_t sub_10003F350(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000E0EF8;
  v6._object = a2;
  unint64_t v4 = sub_1000BBFA0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

char *sub_10003F39C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1000BBF80();
  __break(1u);
  return result;
}

uint64_t sub_10003F488(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1000BBF80();
  __break(1u);
  return result;
}

uint64_t sub_10003F5E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_10001295C(&qword_1000ECAF8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000BBF80();
  __break(1u);
  return result;
}

uint64_t destroy for SMSCTPartDictionary(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 56);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    return sub_100018074(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for SMSCTPartDictionary(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v5;
  unint64_t v6 = a2 + 6;
  unint64_t v7 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    sub_100017F4C(*v6, v7);
    *(void *)(a1 + 48) = v8;
    *(void *)(a1 + 56) = v7;
  }
  return a1;
}

void *assignWithCopy for SMSCTPartDictionary(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 6;
  unint64_t v5 = a2[7];
  if (a1[7] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_100017F4C(*v4, v5);
      uint64_t v8 = a1[6];
      unint64_t v9 = a1[7];
      a1[6] = v7;
      a1[7] = v5;
      sub_100018074(v8, v9);
      return a1;
    }
    sub_10003F900((uint64_t)(a1 + 6));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 3) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  sub_100017F4C(*v4, v5);
  a1[6] = v6;
  a1[7] = v5;
  return a1;
}

uint64_t sub_10003F900(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for SMSCTPartDictionary(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for SMSCTPartDictionary(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2 + 6;
  unint64_t v8 = a1[7];
  if (v8 >> 60 != 15)
  {
    unint64_t v9 = a2[7];
    if (v9 >> 60 != 15)
    {
      uint64_t v10 = a1[6];
      a1[6] = *v7;
      a1[7] = v9;
      sub_100018074(v10, v8);
      return a1;
    }
    sub_10003F900((uint64_t)(a1 + 6));
  }
  *((_OWORD *)a1 + 3) = *(_OWORD *)v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for SMSCTPartDictionary(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SMSCTPartDictionary(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SMSCTPartDictionary()
{
  return &type metadata for SMSCTPartDictionary;
}

unint64_t sub_10003FAE4()
{
  unint64_t result = qword_1000ECB48;
  if (!qword_1000ECB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECB48);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SMSCTPartDictionary.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SMSCTPartDictionary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003FC94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SMSCTPartDictionary.CodingKeys()
{
  return &type metadata for SMSCTPartDictionary.CodingKeys;
}

unint64_t sub_10003FCD0()
{
  unint64_t result = qword_1000ECB58;
  if (!qword_1000ECB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECB58);
  }
  return result;
}

unint64_t sub_10003FD28()
{
  unint64_t result = qword_1000ECB60;
  if (!qword_1000ECB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECB60);
  }
  return result;
}

unint64_t sub_10003FD80()
{
  unint64_t result = qword_1000ECB68;
  if (!qword_1000ECB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECB68);
  }
  return result;
}

BOOL sub_10003FDD4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10003FDE8()
{
  return sub_1000BC250();
}

uint64_t sub_10003FE4C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000449F0();

  return Enum.hash(into:)(a1, a2, v4);
}

Swift::Int sub_10003FE98()
{
  return sub_1000BC250();
}

void sub_10003FEF8(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_10003FF00@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10004A488(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10003FF28()
{
  return *v0 + 1;
}

uint64_t sub_10003FF34@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10004A488(*a1);
  *a2 = result;
  return result;
}

void sub_10003FF60(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

void sub_10003FF70(void *a1@<X8>)
{
  *a1 = &off_1000E0F78;
}

uint64_t sub_10003FF80(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000465FC();

  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t sub_10003FFCC@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (result == 2) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (result == 1) {
    char v2 = 0;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_10003FFE8()
{
  if (*v0) {
    return 2;
  }
  else {
    return 1;
  }
}

void *sub_10003FFFC@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 2) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result == 1) {
    char v3 = 0;
  }
  else {
    char v3 = v2;
  }
  *a2 = v3;
  return result;
}

void sub_10004001C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1;
  if (*v1) {
    uint64_t v2 = 2;
  }
  *a1 = v2;
}

void sub_100040034(void *a1@<X8>)
{
  *a1 = &off_1000E0FA0;
}

uint64_t sub_100040044()
{
  uint64_t v0 = sub_1000B86A0();
  sub_10003A0C4(v0, qword_1000F92A0);
  sub_10003A08C(v0, (uint64_t)qword_1000F92A0);
  sub_10001295C(&qword_1000ECCA0);
  uint64_t v1 = (int *)(sub_10001295C(&qword_1000ECCA8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1000C0CD0;
  unint64_t v4 = v20 + v3 + v1[14];
  *(void *)(v20 + v3) = 1;
  *(void *)unint64_t v4 = "messageType";
  *(void *)(v4 + 8) = 11;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v6 = sub_1000B8670();
  BOOL v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  unint64_t v8 = v20 + v3 + v2 + v1[14];
  *(void *)(v20 + v3 + v2) = 2;
  *(void *)unint64_t v8 = "sendDate";
  *(void *)(v8 + 8) = 8;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  unint64_t v9 = (void *)(v20 + v3 + 2 * v2);
  uint64_t v10 = (char *)v9 + v1[14];
  *unint64_t v9 = 3;
  *(void *)uint64_t v10 = "messageData";
  *((void *)v10 + 1) = 11;
  unsigned char v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v20 + v3 + 3 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 4;
  *(void *)unint64_t v12 = "baseColor";
  *((void *)v12 + 1) = 9;
  unsigned char v12[16] = 2;
  v7();
  unint64_t v13 = (void *)(v20 + v3 + 4 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 5;
  *(void *)uint64_t v14 = "identifier";
  *((void *)v14 + 1) = 10;
  v14[16] = 2;
  v7();
  uint64_t v15 = (void *)(v20 + v3 + 5 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 6;
  *(void *)uint64_t v16 = "supportsPlaybackTimeOffsets";
  *((void *)v16 + 1) = 27;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v20 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 7;
  *(void *)uint64_t v18 = "startDelay";
  *((void *)v18 + 1) = 10;
  v18[16] = 2;
  v7();
  return sub_1000B8680();
}

uint64_t sub_100040330()
{
  while (1)
  {
    uint64_t result = sub_1000B8500();
    if (v0 || (v2 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        sub_100040508();
        break;
      case 2:
        type metadata accessor for ETP_Header(0);
        sub_1000B8590();
        break;
      case 3:
        type metadata accessor for ETP_Header(0);
        sub_1000B8530();
        break;
      case 4:
        type metadata accessor for ETP_Header(0);
        sub_1000B8580();
        break;
      case 5:
        type metadata accessor for ETP_Header(0);
        sub_1000B8560();
        break;
      case 6:
        type metadata accessor for ETP_Header(0);
        sub_1000B8510();
        break;
      case 7:
        type metadata accessor for ETP_Header(0);
        sub_1000B8550();
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_100040508()
{
  return sub_1000B8520();
}

uint64_t sub_100040580()
{
  char v2 = (int *)type metadata accessor for ETP_Header(0);
  if (*(unsigned char *)(v0 + v2[5]) == 8 || (sub_1000449F0(), uint64_t result = sub_1000B85F0(), !v1))
  {
    if ((*(unsigned char *)(v0 + v2[6] + 8) & 1) != 0 || (uint64_t result = sub_1000B8660(), !v1))
    {
      uint64_t v4 = v0 + v2[7];
      unint64_t v5 = *(void *)(v4 + 8);
      if (v5 >> 60 == 15
        || (uint64_t v6 = *(void *)v4,
            sub_100017F4C(*(void *)v4, *(void *)(v4 + 8)),
            sub_1000B8600(),
            uint64_t result = sub_1000180CC(v6, v5),
            !v1))
      {
        if ((*(unsigned char *)(v0 + v2[8] + 4) & 1) != 0 || (uint64_t result = sub_1000B8650(), !v1))
        {
          if (!*(void *)(v0 + v2[9] + 8) || (uint64_t result = sub_1000B8630(), !v1))
          {
            if (*(unsigned char *)(v0 + v2[10]) == 2 || (uint64_t result = sub_1000B85E0(), !v1))
            {
              if (*(unsigned char *)(v0 + v2[11] + 8)) {
                return sub_1000B8480();
              }
              uint64_t result = sub_1000B8620();
              if (!v1) {
                return sub_1000B8480();
              }
            }
          }
        }
      }
    }
  }
  return result;
}

double sub_100040788@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000B8490();
  uint64_t v4 = a1[6];
  *(unsigned char *)(a2 + a1[5]) = 8;
  uint64_t v5 = a2 + v4;
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  double result = 0.0;
  uint64_t v7 = a1[8];
  *(_OWORD *)(a2 + a1[7]) = xmmword_1000BFAA0;
  uint64_t v8 = a2 + v7;
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1[10];
  uint64_t v10 = (void *)(a2 + a1[9]);
  *uint64_t v10 = 0;
  v10[1] = 0;
  *(unsigned char *)(a2 + v9) = 2;
  uint64_t v11 = a2 + a1[11];
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  return result;
}

uint64_t sub_10004080C()
{
  return 0x646165482E505445;
}

uint64_t (*sub_100040834())()
{
  return nullsub_1;
}

uint64_t sub_100040854()
{
  return sub_100040330();
}

uint64_t sub_10004086C()
{
  return sub_100040580();
}

uint64_t sub_100040888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043F80(&qword_1000ECC90, (void (*)(uint64_t))type metadata accessor for ETP_Header);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100040908@<X0>(uint64_t a1@<X8>)
{
  return sub_100043C9C(&qword_1000EC288, (uint64_t)qword_1000F92A0, a1);
}

uint64_t sub_10004092C(uint64_t a1)
{
  uint64_t v2 = sub_100043F80(&qword_1000ECC58, (void (*)(uint64_t))type metadata accessor for ETP_Header);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10004099C()
{
  sub_100043F80(&qword_1000ECC58, (void (*)(uint64_t))type metadata accessor for ETP_Header);

  return sub_1000B85D0();
}

uint64_t sub_100040A20()
{
  uint64_t v0 = sub_1000B86A0();
  sub_10003A0C4(v0, qword_1000F92B8);
  sub_10003A08C(v0, (uint64_t)qword_1000F92B8);
  sub_10001295C(&qword_1000ECCA0);
  uint64_t v1 = (int *)(sub_10001295C(&qword_1000ECCA8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1000C0CE0;
  unint64_t v4 = v23 + v3;
  unint64_t v5 = v23 + v3 + v1[14];
  *(void *)(v23 + v3) = 1;
  *(void *)unint64_t v5 = "Tap";
  *(void *)(v5 + 8) = 3;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v7 = sub_1000B8670();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "QuickTap";
  *(void *)(v9 + 8) = 8;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "Heartbeat";
  *((void *)v11 + 1) = 9;
  char v11[16] = 2;
  v8();
  unint64_t v12 = (void *)(v4 + 3 * v2);
  unint64_t v13 = (char *)v12 + v1[14];
  *unint64_t v12 = 4;
  *(void *)unint64_t v13 = "Doodle";
  *((void *)v13 + 1) = 6;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "ReadReceipt";
  *((void *)v15 + 1) = 11;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  void *v16 = 6;
  *(void *)uint64_t v17 = "Video";
  *((void *)v17 + 1) = 5;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  unint64_t v19 = (char *)v18 + v1[14];
  void *v18 = 7;
  *(void *)unint64_t v19 = "Kiss";
  *((void *)v19 + 1) = 4;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v4 + 7 * v2);
  uint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 8;
  *(void *)uint64_t v21 = "Anger";
  *((void *)v21 + 1) = 5;
  v21[16] = 2;
  v8();
  return sub_1000B8680();
}

uint64_t sub_100040D50@<X0>(uint64_t a1@<X8>)
{
  return sub_100043C9C(&qword_1000EC290, (uint64_t)qword_1000F92B8, a1);
}

uint64_t sub_100040D74()
{
  uint64_t v0 = sub_1000B86A0();
  sub_10003A0C4(v0, qword_1000F92D0);
  sub_10003A08C(v0, (uint64_t)qword_1000F92D0);
  sub_10001295C(&qword_1000ECCA0);
  uint64_t v1 = (int *)(sub_10001295C(&qword_1000ECCA8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000C03C0;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 2;
  *(void *)unint64_t v6 = "timeDeltas";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1000B8670();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 3;
  *(void *)uint64_t v10 = "points";
  *((void *)v10 + 1) = 6;
  unsigned char v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 4;
  *(void *)uint64_t v11 = "colors";
  *(void *)(v11 + 8) = 6;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1000B8680();
}

uint64_t sub_100040F70()
{
  while (1)
  {
    uint64_t result = sub_1000B8500();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 4 || result == 3 || result == 2)
    {
      type metadata accessor for ETP_Tap(0);
      sub_1000B8530();
    }
    uint64_t v0 = 0;
  }
  return result;
}

uint64_t sub_10004103C()
{
  return 0x7061542E505445;
}

uint64_t sub_100041054()
{
  return sub_100040F70();
}

uint64_t sub_10004106C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10004310C(a1, a2, a3, type metadata accessor for ETP_Tap);
}

uint64_t sub_1000410A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043F80(&qword_1000ECCB8, (void (*)(uint64_t))type metadata accessor for ETP_Tap);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100041120@<X0>(uint64_t a1@<X8>)
{
  return sub_100043C9C(&qword_1000EC298, (uint64_t)qword_1000F92D0, a1);
}

uint64_t sub_100041144(uint64_t a1)
{
  uint64_t v2 = sub_100043F80(&qword_1000ECC38, (void (*)(uint64_t))type metadata accessor for ETP_Tap);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000411B0()
{
  sub_100043F80(&qword_1000ECC38, (void (*)(uint64_t))type metadata accessor for ETP_Tap);

  return sub_1000B85D0();
}

uint64_t sub_10004122C(uint64_t a1, uint64_t a2)
{
  return sub_1000457D0(a1, a2, type metadata accessor for ETP_Tap) & 1;
}

uint64_t sub_10004125C()
{
  uint64_t v0 = sub_1000B86A0();
  sub_10003A0C4(v0, qword_1000F92E8);
  sub_10003A08C(v0, (uint64_t)qword_1000F92E8);
  sub_10001295C(&qword_1000ECCA0);
  uint64_t v1 = (int *)(sub_10001295C(&qword_1000ECCA8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1000C0CF0;
  unint64_t v4 = v19 + v3;
  unint64_t v5 = v19 + v3 + v1[14];
  *(void *)(v19 + v3) = 1;
  *(void *)unint64_t v5 = "beatsPerMinute";
  *(void *)(v5 + 8) = 14;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v7 = sub_1000B8670();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "duration";
  *(void *)(v9 + 8) = 8;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "normalizedCenterX";
  *((void *)v11 + 1) = 17;
  char v11[16] = 2;
  v8();
  unint64_t v12 = (void *)(v4 + 3 * v2);
  unint64_t v13 = (char *)v12 + v1[14];
  *unint64_t v12 = 4;
  *(void *)unint64_t v13 = "normalizedCenterY";
  *((void *)v13 + 1) = 17;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "rotation";
  *((void *)v15 + 1) = 8;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  void *v16 = 6;
  *(void *)uint64_t v17 = "heartbreakTime";
  *((void *)v17 + 1) = 14;
  v17[16] = 2;
  v8();
  return sub_1000B8680();
}

uint64_t sub_100041510()
{
  while (1)
  {
    uint64_t result = sub_1000B8500();
    if (v0 || (v2 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
      case 3:
      case 4:
      case 5:
      case 6:
        type metadata accessor for ETP_Heartbeat(0);
        sub_1000B8540();
        break;
      case 2:
        type metadata accessor for ETP_Heartbeat(0);
        sub_1000B8570();
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_100041650()
{
  char v2 = (int *)type metadata accessor for ETP_Heartbeat(0);
  if ((*(unsigned char *)(v0 + v2[5] + 4) & 1) != 0 || (uint64_t result = sub_1000B8610(), !v1))
  {
    if ((*(unsigned char *)(v0 + v2[6] + 4) & 1) != 0 || (uint64_t result = sub_1000B8640(), !v1))
    {
      if ((*(unsigned char *)(v0 + v2[7] + 4) & 1) != 0 || (uint64_t result = sub_1000B8610(), !v1))
      {
        if ((*(unsigned char *)(v0 + v2[8] + 4) & 1) != 0 || (uint64_t result = sub_1000B8610(), !v1))
        {
          if ((*(unsigned char *)(v0 + v2[9] + 4) & 1) != 0 || (uint64_t result = sub_1000B8610(), !v1))
          {
            if (*(unsigned char *)(v0 + v2[10] + 4)) {
              return sub_1000B8480();
            }
            uint64_t result = sub_1000B8610();
            if (!v1) {
              return sub_1000B8480();
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000417DC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1000B8490();
  uint64_t v5 = a1[6];
  uint64_t v6 = a2 + a1[5];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a2 + v5;
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  uint64_t v8 = a1[8];
  uint64_t v9 = a2 + a1[7];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a2 + v8;
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1[10];
  uint64_t v12 = a2 + a1[9];
  *(_DWORD *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 4) = 1;
  uint64_t v13 = a2 + v11;
  *(_DWORD *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 4) = 1;
  return result;
}

uint64_t sub_10004185C()
{
  return 0x726165482E505445;
}

uint64_t sub_100041880()
{
  return sub_100041510();
}

uint64_t sub_100041898()
{
  return sub_100041650();
}

uint64_t sub_1000418B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043F80(&qword_1000ECCC0, (void (*)(uint64_t))type metadata accessor for ETP_Heartbeat);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10004192C@<X0>(uint64_t a1@<X8>)
{
  return sub_100043C9C(&qword_1000EC2A0, (uint64_t)qword_1000F92E8, a1);
}

uint64_t sub_100041950(uint64_t a1)
{
  uint64_t v2 = sub_100043F80(&qword_1000ECC18, (void (*)(uint64_t))type metadata accessor for ETP_Heartbeat);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000419BC()
{
  sub_100043F80(&qword_1000ECC18, (void (*)(uint64_t))type metadata accessor for ETP_Heartbeat);

  return sub_1000B85D0();
}

uint64_t sub_100041A3C()
{
  uint64_t v0 = sub_1000B86A0();
  sub_10003A0C4(v0, qword_1000F9300);
  sub_10003A08C(v0, (uint64_t)qword_1000F9300);
  sub_10001295C(&qword_1000ECCA0);
  uint64_t v1 = (int *)(sub_10001295C(&qword_1000ECCA8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000C0D00;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "doodleCount";
  *(void *)(v6 + 8) = 11;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1000B8670();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "doodleData";
  *(void *)(v10 + 8) = 10;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "colorData";
  *((void *)v12 + 1) = 9;
  unsigned char v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "pointTimeDeltaData";
  *((void *)v14 + 1) = 18;
  v14[16] = 2;
  v9();
  return sub_1000B8680();
}

uint64_t sub_100041C74()
{
  while (1)
  {
    uint64_t result = sub_1000B8500();
    if (v0 || (v2 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        type metadata accessor for ETP_Doodle(0);
        sub_1000B8570();
        break;
      case 2:
      case 3:
      case 4:
        type metadata accessor for ETP_Doodle(0);
        sub_1000B8530();
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_100041D8C()
{
  char v2 = (int *)type metadata accessor for ETP_Doodle(0);
  if ((*(unsigned char *)(v0 + v2[5] + 4) & 1) != 0 || (uint64_t result = sub_1000B8640(), !v1))
  {
    uint64_t v4 = v0 + v2[6];
    unint64_t v5 = *(void *)(v4 + 8);
    if (v5 >> 60 == 15
      || (uint64_t v6 = *(void *)v4,
          sub_100017F4C(*(void *)v4, *(void *)(v4 + 8)),
          sub_1000B8600(),
          uint64_t result = sub_1000180CC(v6, v5),
          !v1))
    {
      uint64_t v7 = v0 + v2[7];
      unint64_t v8 = *(void *)(v7 + 8);
      if (v8 >> 60 == 15
        || (uint64_t v9 = *(void *)v7,
            sub_100017F4C(*(void *)v7, *(void *)(v7 + 8)),
            sub_1000B8600(),
            uint64_t result = sub_1000180CC(v9, v8),
            !v1))
      {
        uint64_t v10 = v0 + v2[8];
        unint64_t v11 = *(void *)(v10 + 8);
        if (v11 >> 60 == 15) {
          return sub_1000B8480();
        }
        uint64_t v12 = *(void *)v10;
        sub_100017F4C(*(void *)v10, *(void *)(v10 + 8));
        sub_1000B8600();
        uint64_t result = sub_1000180CC(v12, v11);
        if (!v1) {
          return sub_1000B8480();
        }
      }
    }
  }
  return result;
}

double sub_100041F38@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000B8490();
  uint64_t v4 = a1[6];
  uint64_t v5 = a2 + a1[5];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  double result = 0.0;
  *(_OWORD *)(a2 + v4) = xmmword_1000BFAA0;
  uint64_t v7 = a1[8];
  *(_OWORD *)(a2 + a1[7]) = xmmword_1000BFAA0;
  *(_OWORD *)(a2 + v7) = xmmword_1000BFAA0;
  return result;
}

uint64_t sub_100041F8C()
{
  return 0x646F6F442E505445;
}

uint64_t sub_100041FA8()
{
  return sub_100041C74();
}

uint64_t sub_100041FC0()
{
  return sub_100041D8C();
}

uint64_t sub_100041FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043F80(&qword_1000ECCC8, (void (*)(uint64_t))type metadata accessor for ETP_Doodle);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100042054@<X0>(uint64_t a1@<X8>)
{
  return sub_100043C9C(&qword_1000EC2A8, (uint64_t)qword_1000F9300, a1);
}

uint64_t sub_100042078(uint64_t a1)
{
  uint64_t v2 = sub_100043F80(&qword_1000ECBF8, (void (*)(uint64_t))type metadata accessor for ETP_Doodle);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000420E4()
{
  sub_100043F80(&qword_1000ECBF8, (void (*)(uint64_t))type metadata accessor for ETP_Doodle);

  return sub_1000B85D0();
}

uint64_t sub_100042164()
{
  uint64_t v0 = sub_1000B86A0();
  sub_10003A0C4(v0, qword_1000F9318);
  sub_10003A08C(v0, (uint64_t)qword_1000F9318);
  return sub_1000B8690();
}

uint64_t sub_1000421B0()
{
  do
    uint64_t result = sub_1000B8500();
  while (!v0 && (v2 & 1) == 0);
  return result;
}

uint64_t sub_1000421F4()
{
  return sub_1000B8480();
}

uint64_t sub_100042210()
{
  return 0x646165522E505445;
}

uint64_t sub_100042234()
{
  return sub_1000421B0();
}

uint64_t sub_10004224C()
{
  return sub_1000421F4();
}

uint64_t sub_100042264(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043F80(&qword_1000ECCD0, (void (*)(uint64_t))type metadata accessor for ETP_ReadReceipt);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000422E0@<X0>(uint64_t a1@<X8>)
{
  return sub_100043C9C(&qword_1000EC2B0, (uint64_t)qword_1000F9318, a1);
}

uint64_t sub_100042304(uint64_t a1)
{
  uint64_t v2 = sub_100043F80(&qword_1000ECBD8, (void (*)(uint64_t))type metadata accessor for ETP_ReadReceipt);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100042370()
{
  sub_100043F80(&qword_1000ECBD8, (void (*)(uint64_t))type metadata accessor for ETP_ReadReceipt);

  return sub_1000B85D0();
}

uint64_t sub_1000423EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B84A0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v14 - v9;
  unint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v14 - v9, a1, v4);
  v11(v8, a2, v4);
  sub_100043F80(&qword_1000ECCB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  LOBYTE(a2) = sub_1000BB8B0();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  v12(v10, v4);
  return a2 & 1;
}

uint64_t sub_100042578()
{
  uint64_t v0 = sub_1000B86A0();
  sub_10003A0C4(v0, qword_1000F9330);
  sub_10003A08C(v0, (uint64_t)qword_1000F9330);
  sub_10001295C(&qword_1000ECCA0);
  uint64_t v1 = (int *)(sub_10001295C(&qword_1000ECCA8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000C03C0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "introMessageData";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1000B8670();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "playingMessagesData";
  *((void *)v10 + 1) = 19;
  unsigned char v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 4;
  *(void *)uint64_t v11 = "mediaType";
  *(void *)(v11 + 8) = 9;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1000B8680();
}

uint64_t sub_10004277C()
{
  while (1)
  {
    uint64_t result = sub_1000B8500();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 4)
    {
      sub_10004285C();
    }
    else if (result == 2 || result == 1)
    {
      type metadata accessor for ETP_Video(0);
      sub_1000B8530();
    }
    uint64_t v0 = 0;
  }
  return result;
}

uint64_t sub_10004285C()
{
  return sub_1000B8520();
}

uint64_t sub_1000428D4()
{
  char v2 = (int *)type metadata accessor for ETP_Video(0);
  uint64_t v3 = v0 + v2[5];
  unint64_t v4 = *(void *)(v3 + 8);
  if (v4 >> 60 == 15
    || (uint64_t v5 = *(void *)v3,
        sub_100017F4C(*(void *)v3, *(void *)(v3 + 8)),
        sub_1000B8600(),
        uint64_t result = sub_1000180CC(v5, v4),
        !v1))
  {
    uint64_t v7 = v0 + v2[6];
    unint64_t v8 = *(void *)(v7 + 8);
    if (v8 >> 60 == 15
      || (uint64_t v9 = *(void *)v7,
          sub_100017F4C(*(void *)v7, *(void *)(v7 + 8)),
          sub_1000B8600(),
          uint64_t result = sub_1000180CC(v9, v8),
          !v1))
    {
      if (*(unsigned char *)(v0 + v2[7]) == 2) {
        return sub_1000B8480();
      }
      sub_1000465FC();
      uint64_t result = sub_1000B85F0();
      if (!v1) {
        return sub_1000B8480();
      }
    }
  }
  return result;
}

double sub_100042A48@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000B8490();
  double result = 0.0;
  uint64_t v5 = a1[6];
  *(_OWORD *)(a2 + a1[5]) = xmmword_1000BFAA0;
  *(_OWORD *)(a2 + v5) = xmmword_1000BFAA0;
  *(unsigned char *)(a2 + a1[7]) = 2;
  return result;
}

uint64_t sub_100042A90()
{
  return 0x656469562E505445;
}

uint64_t sub_100042AAC()
{
  return sub_10004277C();
}

uint64_t sub_100042AC4()
{
  return sub_1000428D4();
}

uint64_t sub_100042ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043F80(&qword_1000ECCD8, (void (*)(uint64_t))type metadata accessor for ETP_Video);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100042B58@<X0>(uint64_t a1@<X8>)
{
  return sub_100043C9C(&qword_1000EC2B8, (uint64_t)qword_1000F9330, a1);
}

uint64_t sub_100042B7C(uint64_t a1)
{
  uint64_t v2 = sub_100043F80(&qword_1000ECBB8, (void (*)(uint64_t))type metadata accessor for ETP_Video);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100042BE8()
{
  sub_100043F80(&qword_1000ECBB8, (void (*)(uint64_t))type metadata accessor for ETP_Video);

  return sub_1000B85D0();
}

uint64_t sub_100042C68()
{
  uint64_t v0 = sub_1000B86A0();
  sub_10003A0C4(v0, qword_1000F9348);
  sub_10003A08C(v0, (uint64_t)qword_1000F9348);
  sub_10001295C(&qword_1000ECCA0);
  uint64_t v1 = (int *)(sub_10001295C(&qword_1000ECCA8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000C0D10;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "Video";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1000B8670();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "Photo";
  *((void *)v10 + 1) = 5;
  unsigned char v10[16] = 2;
  v9();
  return sub_1000B8680();
}

uint64_t sub_100042E20@<X0>(uint64_t a1@<X8>)
{
  return sub_100043C9C(&qword_1000EC2C0, (uint64_t)qword_1000F9348, a1);
}

uint64_t sub_100042E44()
{
  uint64_t v0 = sub_1000B86A0();
  sub_10003A0C4(v0, qword_1000F9360);
  sub_10003A08C(v0, (uint64_t)qword_1000F9360);
  sub_10001295C(&qword_1000ECCA0);
  uint64_t v1 = (int *)(sub_10001295C(&qword_1000ECCA8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000C03C0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "delays";
  *(void *)(v6 + 8) = 6;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1000B8670();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "points";
  *((void *)v10 + 1) = 6;
  unsigned char v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "angles";
  *(void *)(v11 + 8) = 6;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1000B8680();
}

uint64_t sub_100043044()
{
  while (1)
  {
    uint64_t result = sub_1000B8500();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 3 || result == 2 || result == 1)
    {
      type metadata accessor for ETP_Kiss(0);
      sub_1000B8530();
    }
    uint64_t v0 = 0;
  }
  return result;
}

uint64_t sub_10004310C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = v4;
  uint64_t v7 = (int *)a4(0);
  uint64_t v8 = (uint64_t *)(v4 + v7[5]);
  unint64_t v9 = v8[1];
  if (v9 >> 60 == 15
    || (v10 = *v8, sub_100017F4C(*v8, v9), sub_1000B8600(), v11 = v10, v6 = v4, uint64_t result = sub_1000180CC(v11, v9), !v5))
  {
    uint64_t v13 = v6 + v7[6];
    unint64_t v14 = *(void *)(v13 + 8);
    if (v14 >> 60 == 15
      || (uint64_t v15 = v6,
          uint64_t v16 = *(void *)v13,
          sub_100017F4C(*(void *)v13, *(void *)(v13 + 8)),
          sub_1000B8600(),
          uint64_t v17 = v16,
          uint64_t v6 = v15,
          uint64_t result = sub_1000180CC(v17, v14),
          !v5))
    {
      uint64_t v18 = v6 + v7[7];
      unint64_t v19 = *(void *)(v18 + 8);
      if (v19 >> 60 == 15) {
        return sub_1000B8480();
      }
      uint64_t v20 = *(void *)v18;
      sub_100017F4C(*(void *)v18, *(void *)(v18 + 8));
      sub_1000B8600();
      uint64_t result = sub_1000180CC(v20, v19);
      if (!v5) {
        return sub_1000B8480();
      }
    }
  }
  return result;
}

double sub_1000432B8@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000B8490();
  double result = 0.0;
  uint64_t v5 = a1[6];
  *(_OWORD *)(a2 + a1[5]) = xmmword_1000BFAA0;
  *(_OWORD *)(a2 + v5) = xmmword_1000BFAA0;
  *(_OWORD *)(a2 + a1[7]) = xmmword_1000BFAA0;
  return result;
}

uint64_t sub_1000432FC()
{
  return 0x7373694B2E505445;
}

uint64_t sub_100043314()
{
  return sub_100043044();
}

uint64_t sub_10004332C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10004310C(a1, a2, a3, type metadata accessor for ETP_Kiss);
}

uint64_t sub_100043364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043F80(&qword_1000ECCE8, (void (*)(uint64_t))type metadata accessor for ETP_Kiss);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000433E0@<X0>(uint64_t a1@<X8>)
{
  return sub_100043C9C(&qword_1000EC2C8, (uint64_t)qword_1000F9360, a1);
}

uint64_t sub_100043404(uint64_t a1)
{
  uint64_t v2 = sub_100043F80(&qword_1000ECB98, (void (*)(uint64_t))type metadata accessor for ETP_Kiss);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100043470()
{
  sub_100043F80(&qword_1000ECB98, (void (*)(uint64_t))type metadata accessor for ETP_Kiss);

  return sub_1000B85D0();
}

uint64_t sub_1000434EC(uint64_t a1, uint64_t a2)
{
  return sub_1000457D0(a1, a2, type metadata accessor for ETP_Kiss) & 1;
}

uint64_t sub_10004351C()
{
  uint64_t v0 = sub_1000B86A0();
  sub_10003A0C4(v0, qword_1000F9378);
  sub_10003A08C(v0, (uint64_t)qword_1000F9378);
  sub_10001295C(&qword_1000ECCA0);
  uint64_t v1 = (int *)(sub_10001295C(&qword_1000ECCA8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1000C0D20;
  unint64_t v4 = v16 + v3;
  unint64_t v5 = v16 + v3 + v1[14];
  *(void *)(v16 + v3) = 1;
  *(void *)unint64_t v5 = "duration";
  *(void *)(v5 + 8) = 8;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v7 = sub_1000B8670();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "normalizedCenterX";
  *(void *)(v9 + 8) = 17;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "normalizedCenterY";
  *((void *)v11 + 1) = 17;
  char v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "delays";
  *((void *)v13 + 1) = 6;
  v13[16] = 2;
  v8();
  uint64_t v14 = v4 + 4 * v2 + v1[14];
  *(void *)(v4 + 4 * v2) = 5;
  *(void *)uint64_t v14 = "points";
  *(void *)(v14 + 8) = 6;
  *(unsigned char *)(v14 + 16) = 2;
  v8();
  return sub_1000B8680();
}

uint64_t sub_100043794()
{
  while (1)
  {
    uint64_t result = sub_1000B8500();
    if (v0 || (v2 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
      case 2:
      case 3:
        type metadata accessor for ETP_Anger(0);
        sub_1000B8540();
        break;
      case 4:
      case 5:
        type metadata accessor for ETP_Anger(0);
        sub_1000B8530();
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_1000438C0()
{
  char v2 = (int *)type metadata accessor for ETP_Anger(0);
  if ((*(unsigned char *)(v0 + v2[5] + 4) & 1) != 0 || (uint64_t result = sub_1000B8610(), !v1))
  {
    if ((*(unsigned char *)(v0 + v2[6] + 4) & 1) != 0 || (uint64_t result = sub_1000B8610(), !v1))
    {
      if ((*(unsigned char *)(v0 + v2[7] + 4) & 1) != 0 || (uint64_t result = sub_1000B8610(), !v1))
      {
        uint64_t v4 = v0 + v2[8];
        unint64_t v5 = *(void *)(v4 + 8);
        if (v5 >> 60 == 15
          || (uint64_t v6 = *(void *)v4,
              sub_100017F4C(*(void *)v4, *(void *)(v4 + 8)),
              sub_1000B8600(),
              uint64_t result = sub_1000180CC(v6, v5),
              !v1))
        {
          uint64_t v7 = v0 + v2[9];
          unint64_t v8 = *(void *)(v7 + 8);
          if (v8 >> 60 == 15) {
            return sub_1000B8480();
          }
          uint64_t v9 = *(void *)v7;
          sub_100017F4C(*(void *)v7, *(void *)(v7 + 8));
          sub_1000B8600();
          uint64_t result = sub_1000180CC(v9, v8);
          if (!v1) {
            return sub_1000B8480();
          }
        }
      }
    }
  }
  return result;
}

double sub_100043A74@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000B8490();
  uint64_t v4 = a1[6];
  uint64_t v5 = a2 + a1[5];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a2 + v4;
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a1[8];
  uint64_t v8 = a2 + a1[7];
  *(unsigned char *)(v8 + 4) = 1;
  *(_DWORD *)uint64_t v8 = 0;
  double result = 0.0;
  *(_OWORD *)(a2 + v7) = xmmword_1000BFAA0;
  *(_OWORD *)(a2 + a1[9]) = xmmword_1000BFAA0;
  return result;
}

uint64_t sub_100043AE0()
{
  return 0x65676E412E505445;
}

uint64_t sub_100043AFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000B84A0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_100043B64(uint64_t a1)
{
  uint64_t v3 = sub_1000B84A0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t sub_100043BCC()
{
  return sub_100043794();
}

uint64_t sub_100043BE4()
{
  return sub_1000438C0();
}

uint64_t sub_100043BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043F80(&qword_1000ECCF0, (void (*)(uint64_t))type metadata accessor for ETP_Anger);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100043C78@<X0>(uint64_t a1@<X8>)
{
  return sub_100043C9C(&qword_1000EC2D0, (uint64_t)qword_1000F9378, a1);
}

uint64_t sub_100043C9C@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1000B86A0();
  uint64_t v6 = sub_10003A08C(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_100043D38(uint64_t a1)
{
  uint64_t v2 = sub_100043F80(&qword_1000ECB78, (void (*)(uint64_t))type metadata accessor for ETP_Anger);

  return Message.debugDescription.getter(a1, v2);
}

Swift::Int sub_100043DA4()
{
  return sub_1000BC250();
}

uint64_t sub_100043DFC()
{
  sub_100043F80(&qword_1000ECB78, (void (*)(uint64_t))type metadata accessor for ETP_Anger);

  return sub_1000B85D0();
}

Swift::Int sub_100043E78()
{
  return sub_1000BC250();
}

uint64_t sub_100043ED0()
{
  return sub_100043F80(&qword_1000ECB70, (void (*)(uint64_t))type metadata accessor for ETP_Anger);
}

uint64_t type metadata accessor for ETP_Anger(uint64_t a1)
{
  return sub_100044840(a1, qword_1000ED198);
}

uint64_t sub_100043F38()
{
  return sub_100043F80(&qword_1000ECB78, (void (*)(uint64_t))type metadata accessor for ETP_Anger);
}

uint64_t sub_100043F80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100043FC8()
{
  return sub_100043F80(&qword_1000ECB80, (void (*)(uint64_t))type metadata accessor for ETP_Anger);
}

uint64_t sub_100044010()
{
  return sub_100043F80(&qword_1000ECB88, (void (*)(uint64_t))type metadata accessor for ETP_Anger);
}

uint64_t sub_100044058()
{
  return sub_100043F80(&qword_1000ECB90, (void (*)(uint64_t))type metadata accessor for ETP_Kiss);
}

uint64_t type metadata accessor for ETP_Kiss(uint64_t a1)
{
  return sub_100044840(a1, qword_1000ED100);
}

uint64_t sub_1000440C0()
{
  return sub_100043F80(&qword_1000ECB98, (void (*)(uint64_t))type metadata accessor for ETP_Kiss);
}

uint64_t sub_100044108()
{
  return sub_100043F80(&qword_1000ECBA0, (void (*)(uint64_t))type metadata accessor for ETP_Kiss);
}

uint64_t sub_100044150()
{
  return sub_100043F80(&qword_1000ECBA8, (void (*)(uint64_t))type metadata accessor for ETP_Kiss);
}

uint64_t sub_100044198()
{
  return sub_100043F80(&qword_1000ECBB0, (void (*)(uint64_t))type metadata accessor for ETP_Video);
}

uint64_t type metadata accessor for ETP_Video(uint64_t a1)
{
  return sub_100044840(a1, qword_1000ED068);
}

uint64_t sub_100044200()
{
  return sub_100043F80(&qword_1000ECBB8, (void (*)(uint64_t))type metadata accessor for ETP_Video);
}

uint64_t sub_100044248()
{
  return sub_100043F80(&qword_1000ECBC0, (void (*)(uint64_t))type metadata accessor for ETP_Video);
}

uint64_t sub_100044290()
{
  return sub_100043F80(&qword_1000ECBC8, (void (*)(uint64_t))type metadata accessor for ETP_Video);
}

uint64_t sub_1000442D8()
{
  return sub_100043F80(&qword_1000ECBD0, (void (*)(uint64_t))type metadata accessor for ETP_ReadReceipt);
}

uint64_t type metadata accessor for ETP_ReadReceipt(uint64_t a1)
{
  return sub_100044840(a1, qword_1000ECFD8);
}

uint64_t sub_100044340()
{
  return sub_100043F80(&qword_1000ECBD8, (void (*)(uint64_t))type metadata accessor for ETP_ReadReceipt);
}

uint64_t sub_100044388()
{
  return sub_100043F80(&qword_1000ECBE0, (void (*)(uint64_t))type metadata accessor for ETP_ReadReceipt);
}

uint64_t sub_1000443D0()
{
  return sub_100043F80(&qword_1000ECBE8, (void (*)(uint64_t))type metadata accessor for ETP_ReadReceipt);
}

uint64_t sub_100044418()
{
  return sub_100043F80(&qword_1000ECBF0, (void (*)(uint64_t))type metadata accessor for ETP_Doodle);
}

uint64_t type metadata accessor for ETP_Doodle(uint64_t a1)
{
  return sub_100044840(a1, qword_1000ECF38);
}

uint64_t sub_100044480()
{
  return sub_100043F80(&qword_1000ECBF8, (void (*)(uint64_t))type metadata accessor for ETP_Doodle);
}

uint64_t sub_1000444C8()
{
  return sub_100043F80(&qword_1000ECC00, (void (*)(uint64_t))type metadata accessor for ETP_Doodle);
}

uint64_t sub_100044510()
{
  return sub_100043F80(&qword_1000ECC08, (void (*)(uint64_t))type metadata accessor for ETP_Doodle);
}

uint64_t sub_100044558()
{
  return sub_100043F80(&qword_1000ECC10, (void (*)(uint64_t))type metadata accessor for ETP_Heartbeat);
}

uint64_t type metadata accessor for ETP_Heartbeat(uint64_t a1)
{
  return sub_100044840(a1, qword_1000ECE90);
}

uint64_t sub_1000445C0()
{
  return sub_100043F80(&qword_1000ECC18, (void (*)(uint64_t))type metadata accessor for ETP_Heartbeat);
}

uint64_t sub_100044608()
{
  return sub_100043F80(&qword_1000ECC20, (void (*)(uint64_t))type metadata accessor for ETP_Heartbeat);
}

uint64_t sub_100044650()
{
  return sub_100043F80(&qword_1000ECC28, (void (*)(uint64_t))type metadata accessor for ETP_Heartbeat);
}

uint64_t sub_100044698()
{
  return sub_100043F80(&qword_1000ECC30, (void (*)(uint64_t))type metadata accessor for ETP_Tap);
}

uint64_t type metadata accessor for ETP_Tap(uint64_t a1)
{
  return sub_100044840(a1, qword_1000ECDF8);
}

uint64_t sub_100044700()
{
  return sub_100043F80(&qword_1000ECC38, (void (*)(uint64_t))type metadata accessor for ETP_Tap);
}

uint64_t sub_100044748()
{
  return sub_100043F80(&qword_1000ECC40, (void (*)(uint64_t))type metadata accessor for ETP_Tap);
}

uint64_t sub_100044790()
{
  return sub_100043F80(&qword_1000ECC48, (void (*)(uint64_t))type metadata accessor for ETP_Tap);
}

uint64_t sub_1000447D8()
{
  return sub_100043F80(&qword_1000ECC50, (void (*)(uint64_t))type metadata accessor for ETP_Header);
}

uint64_t type metadata accessor for ETP_Header(uint64_t a1)
{
  return sub_100044840(a1, qword_1000ECD50);
}

uint64_t sub_100044840(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100044878()
{
  return sub_100043F80(&qword_1000ECC58, (void (*)(uint64_t))type metadata accessor for ETP_Header);
}

uint64_t sub_1000448C0()
{
  return sub_100043F80(&qword_1000ECC60, (void (*)(uint64_t))type metadata accessor for ETP_Header);
}

uint64_t sub_100044908()
{
  return sub_100043F80(&qword_1000ECC68, (void (*)(uint64_t))type metadata accessor for ETP_Header);
}

uint64_t sub_100044950()
{
  return sub_1000449A0(&qword_1000ECC70, &qword_1000ECC78);
}

uint64_t sub_100044978()
{
  return sub_1000449A0(&qword_1000ECC80, &qword_1000ECC88);
}

uint64_t sub_1000449A0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014D68(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000449F0()
{
  unint64_t result = qword_1000ECC98;
  if (!qword_1000ECC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECC98);
  }
  return result;
}

uint64_t sub_100044A44@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_100017F4C(a2, a3);
      uint64_t v10 = (char *)sub_1000B8150();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1000B8180();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1000B8170();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x100044CA8);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_100018074(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1000B8150();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1000B8180();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1000B8170();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_100044CB8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_100044A44((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_100044D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1000B8150();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1000B8180();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1000B8170();
  sub_100044A44(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_100044E48(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1000450B0);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_100017F4C(a3, a4);
                  sub_100017F4C(a1, a2);
                  char v17 = sub_100044D90((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_100018074(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_100017F4C(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_100044D90(v21, v22, v20, a3, a4);
                  sub_100018074(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_100017F4C(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_100017F4C(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_100044CB8(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_100018074(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1000450E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B84A0();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  char v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = (int *)type metadata accessor for ETP_Video(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = *(void *)(a1 + v11);
  unint64_t v13 = *(void *)(a1 + v11 + 8);
  uint64_t v14 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  uint64_t v32 = v4;
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 != 15) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  if (v16 >> 60 == 15) {
    goto LABEL_10;
  }
  sub_100017FA4(v12, v13);
  sub_100017FA4(v15, v16);
  char v17 = sub_100044E48(v12, v13, v15, v16);
  sub_1000180CC(v15, v16);
  sub_1000180CC(v12, v13);
  if (v17)
  {
LABEL_6:
    uint64_t v18 = v10[6];
    uint64_t v12 = *(void *)(a1 + v18);
    unint64_t v13 = *(void *)(a1 + v18 + 8);
    unint64_t v19 = (uint64_t *)(a2 + v18);
    uint64_t v15 = *v19;
    unint64_t v16 = v19[1];
    if (v13 >> 60 == 15)
    {
      if (v16 >> 60 == 15) {
        goto LABEL_14;
      }
    }
    else if (v16 >> 60 != 15)
    {
      sub_100017FA4(v12, v13);
      sub_100017FA4(v15, v16);
      char v22 = sub_100044E48(v12, v13, v15, v16);
      sub_1000180CC(v15, v16);
      sub_1000180CC(v12, v13);
      if ((v22 & 1) == 0) {
        goto LABEL_11;
      }
LABEL_14:
      uint64_t v23 = v10[7];
      int v24 = *(unsigned __int8 *)(a1 + v23);
      int v25 = *(unsigned __int8 *)(a2 + v23);
      if (v24 == 2)
      {
        if (v25 != 2) {
          goto LABEL_11;
        }
      }
      else if (v25 == 2 || ((v25 ^ v24) & 1) != 0)
      {
        goto LABEL_11;
      }
      uint64_t v26 = v31;
      char v27 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
      uint64_t v28 = a1;
      uint64_t v29 = v32;
      v27(v9, v28, v32);
      v27(v7, a2, v29);
      sub_100043F80(&qword_1000ECCB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v20 = sub_1000BB8B0();
      char v30 = *(void (**)(char *, uint64_t))(v26 + 8);
      v30(v7, v29);
      v30(v9, v29);
      return v20 & 1;
    }
LABEL_10:
    sub_100017FA4(v12, v13);
    sub_100017FA4(v15, v16);
    sub_1000180CC(v12, v13);
    sub_1000180CC(v15, v16);
  }
LABEL_11:
  char v20 = 0;
  return v20 & 1;
}

uint64_t sub_100045408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B84A0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v47[-v9];
  uint64_t v11 = (int *)type metadata accessor for ETP_Anger(0);
  uint64_t v12 = v11;
  uint64_t v13 = v11[5];
  uint64_t v14 = (float *)(a1 + v13);
  char v15 = *(unsigned char *)(a1 + v13 + 4);
  unint64_t v16 = (float *)(a2 + v13);
  int v17 = *(unsigned __int8 *)(a2 + v13 + 4);
  if (v15)
  {
    if (!v17) {
      goto LABEL_31;
    }
  }
  else
  {
    if (*v14 != *v16) {
      LOBYTE(v17) = 1;
    }
    if (v17) {
      goto LABEL_31;
    }
  }
  uint64_t v18 = v11[6];
  unint64_t v19 = (float *)(a1 + v18);
  char v20 = *(unsigned char *)(a1 + v18 + 4);
  uint64_t v21 = (float *)(a2 + v18);
  int v22 = *(unsigned __int8 *)(a2 + v18 + 4);
  if (v20)
  {
    if (!v22) {
      goto LABEL_31;
    }
  }
  else
  {
    if (*v19 != *v21) {
      LOBYTE(v22) = 1;
    }
    if (v22) {
      goto LABEL_31;
    }
  }
  uint64_t v23 = v11[7];
  int v24 = (float *)(a1 + v23);
  char v25 = *(unsigned char *)(a1 + v23 + 4);
  uint64_t v26 = (float *)(a2 + v23);
  int v27 = *(unsigned __int8 *)(a2 + v23 + 4);
  if (v25)
  {
    if (!v27) {
      goto LABEL_31;
    }
  }
  else
  {
    if (*v24 != *v26) {
      LOBYTE(v27) = 1;
    }
    if (v27) {
      goto LABEL_31;
    }
  }
  uint64_t v28 = v11[8];
  uint64_t v29 = *(void *)(a1 + v28);
  unint64_t v30 = *(void *)(a1 + v28 + 8);
  uint64_t v31 = (uint64_t *)(a2 + v28);
  uint64_t v32 = *v31;
  unint64_t v33 = v31[1];
  if (v30 >> 60 != 15)
  {
    if (v33 >> 60 != 15)
    {
      uint64_t v49 = v29;
      sub_100017FA4(v29, v30);
      sub_100017FA4(v32, v33);
      int v48 = sub_100044E48(v49, v30, v32, v33);
      sub_1000180CC(v32, v33);
      sub_1000180CC(v49, v30);
      if ((v48 & 1) == 0) {
        goto LABEL_31;
      }
      goto LABEL_25;
    }
LABEL_23:
    uint64_t v34 = v29;
    sub_100017FA4(v29, v30);
    sub_100017FA4(v32, v33);
    sub_1000180CC(v34, v30);
    uint64_t v35 = v32;
    unint64_t v36 = v33;
LABEL_30:
    sub_1000180CC(v35, v36);
    goto LABEL_31;
  }
  if (v33 >> 60 != 15) {
    goto LABEL_23;
  }
LABEL_25:
  uint64_t v37 = v12[9];
  uint64_t v38 = *(void *)(a1 + v37);
  unint64_t v39 = *(void *)(a1 + v37 + 8);
  id v40 = (uint64_t *)(a2 + v37);
  uint64_t v41 = *v40;
  unint64_t v42 = v40[1];
  if (v39 >> 60 == 15)
  {
    if (v42 >> 60 == 15) {
      goto LABEL_34;
    }
    goto LABEL_29;
  }
  if (v42 >> 60 == 15)
  {
LABEL_29:
    sub_100017FA4(v38, v39);
    sub_100017FA4(v41, v42);
    sub_1000180CC(v38, v39);
    uint64_t v35 = v41;
    unint64_t v36 = v42;
    goto LABEL_30;
  }
  sub_100017FA4(v38, v39);
  sub_100017FA4(v41, v42);
  LODWORD(v49) = sub_100044E48(v38, v39, v41, v42);
  sub_1000180CC(v41, v42);
  sub_1000180CC(v38, v39);
  if (v49)
  {
LABEL_34:
    id v45 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
    v45(v10, a1, v4);
    v45(v8, a2, v4);
    sub_100043F80(&qword_1000ECCB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v43 = sub_1000BB8B0();
    uint64_t v46 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
    v46(v8, v4);
    v46(v10, v4);
    return v43 & 1;
  }
LABEL_31:
  char v43 = 0;
  return v43 & 1;
}

uint64_t sub_1000457D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_1000B84A0();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = (int *)a3(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = *(void *)(a1 + v13);
  unint64_t v15 = *(void *)(a1 + v13 + 8);
  unint64_t v16 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v16;
  unint64_t v18 = v16[1];
  uint64_t v40 = v6;
  if (v15 >> 60 == 15)
  {
    if (v18 >> 60 != 15) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  if (v18 >> 60 == 15) {
    goto LABEL_10;
  }
  sub_100017FA4(v14, v15);
  sub_100017FA4(v17, v18);
  char v19 = sub_100044E48(v14, v15, v17, v18);
  sub_1000180CC(v17, v18);
  sub_1000180CC(v14, v15);
  if (v19)
  {
LABEL_6:
    uint64_t v20 = v12[6];
    uint64_t v14 = *(void *)(a1 + v20);
    unint64_t v15 = *(void *)(a1 + v20 + 8);
    uint64_t v21 = (uint64_t *)(a2 + v20);
    uint64_t v17 = *v21;
    unint64_t v18 = v21[1];
    if (v15 >> 60 == 15)
    {
      if (v18 >> 60 == 15) {
        goto LABEL_15;
      }
    }
    else if (v18 >> 60 != 15)
    {
      sub_100017FA4(v14, v15);
      sub_100017FA4(v17, v18);
      char v26 = sub_100044E48(v14, v15, v17, v18);
      sub_1000180CC(v17, v18);
      sub_1000180CC(v14, v15);
      if ((v26 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_15:
      uint64_t v27 = v12[7];
      uint64_t v28 = *(void *)(a1 + v27);
      unint64_t v29 = *(void *)(a1 + v27 + 8);
      unint64_t v30 = (uint64_t *)(a2 + v27);
      uint64_t v31 = *v30;
      unint64_t v32 = v30[1];
      if (v29 >> 60 == 15)
      {
        if (v32 >> 60 == 15) {
          goto LABEL_21;
        }
      }
      else if (v32 >> 60 != 15)
      {
        sub_100017FA4(v28, v29);
        sub_100017FA4(v31, v32);
        char v33 = sub_100044E48(v28, v29, v31, v32);
        sub_1000180CC(v31, v32);
        sub_1000180CC(v28, v29);
        if ((v33 & 1) == 0) {
          goto LABEL_12;
        }
LABEL_21:
        uint64_t v34 = v39;
        uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
        uint64_t v36 = a1;
        uint64_t v37 = v40;
        v35(v11, v36, v40);
        v35(v9, a2, v37);
        sub_100043F80(&qword_1000ECCB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v24 = sub_1000BB8B0();
        uint64_t v38 = *(void (**)(char *, uint64_t))(v34 + 8);
        v38(v9, v37);
        v38(v11, v37);
        return v24 & 1;
      }
      sub_100017FA4(v28, v29);
      sub_100017FA4(v31, v32);
      sub_1000180CC(v28, v29);
      uint64_t v22 = v31;
      unint64_t v23 = v32;
      goto LABEL_11;
    }
LABEL_10:
    sub_100017FA4(v14, v15);
    sub_100017FA4(v17, v18);
    sub_1000180CC(v14, v15);
    uint64_t v22 = v17;
    unint64_t v23 = v18;
LABEL_11:
    sub_1000180CC(v22, v23);
  }
LABEL_12:
  char v24 = 0;
  return v24 & 1;
}

uint64_t sub_100045B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B84A0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v46 - v9;
  uint64_t v11 = (int *)type metadata accessor for ETP_Heartbeat(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (float *)(a1 + v12);
  char v14 = *(unsigned char *)(a1 + v12 + 4);
  unint64_t v15 = (float *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if (v14)
  {
    if (!v16) {
      goto LABEL_33;
    }
  }
  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if (v16) {
      goto LABEL_33;
    }
  }
  uint64_t v17 = v11[6];
  unint64_t v18 = (_DWORD *)(a1 + v17);
  char v19 = *(unsigned char *)(a1 + v17 + 4);
  uint64_t v20 = (_DWORD *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if (v19)
  {
    if (!v21) {
      goto LABEL_33;
    }
  }
  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if (v21) {
      goto LABEL_33;
    }
  }
  uint64_t v22 = v11[7];
  unint64_t v23 = (float *)(a1 + v22);
  char v24 = *(unsigned char *)(a1 + v22 + 4);
  char v25 = (float *)(a2 + v22);
  int v26 = *(unsigned __int8 *)(a2 + v22 + 4);
  if (v24)
  {
    if (!v26) {
      goto LABEL_33;
    }
  }
  else
  {
    if (*v23 != *v25) {
      LOBYTE(v26) = 1;
    }
    if (v26) {
      goto LABEL_33;
    }
  }
  uint64_t v27 = v11[8];
  uint64_t v28 = (float *)(a1 + v27);
  char v29 = *(unsigned char *)(a1 + v27 + 4);
  unint64_t v30 = (float *)(a2 + v27);
  int v31 = *(unsigned __int8 *)(a2 + v27 + 4);
  if (v29)
  {
    if (!v31) {
      goto LABEL_33;
    }
  }
  else
  {
    if (*v28 != *v30) {
      LOBYTE(v31) = 1;
    }
    if (v31) {
      goto LABEL_33;
    }
  }
  uint64_t v32 = v11[9];
  char v33 = (float *)(a1 + v32);
  char v34 = *(unsigned char *)(a1 + v32 + 4);
  uint64_t v35 = (float *)(a2 + v32);
  int v36 = *(unsigned __int8 *)(a2 + v32 + 4);
  if ((v34 & 1) == 0)
  {
    if (*v33 != *v35) {
      LOBYTE(v36) = 1;
    }
    if (v36) {
      goto LABEL_33;
    }
LABEL_31:
    uint64_t v37 = v11[10];
    uint64_t v38 = (float *)(a1 + v37);
    char v39 = *(unsigned char *)(a1 + v37 + 4);
    uint64_t v40 = (float *)(a2 + v37);
    int v41 = *(unsigned __int8 *)(a2 + v37 + 4);
    if (v39)
    {
      if (!v41) {
        goto LABEL_33;
      }
    }
    else
    {
      if (*v38 != *v40) {
        LOBYTE(v41) = 1;
      }
      if (v41) {
        goto LABEL_33;
      }
    }
    uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v44(v10, a1, v4);
    v44(v8, a2, v4);
    sub_100043F80(&qword_1000ECCB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v42 = sub_1000BB8B0();
    id v45 = *(void (**)(char *, uint64_t))(v5 + 8);
    v45(v8, v4);
    v45(v10, v4);
    return v42 & 1;
  }
  if (v36) {
    goto LABEL_31;
  }
LABEL_33:
  char v42 = 0;
  return v42 & 1;
}

uint64_t sub_100045E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B84A0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v51[-v9];
  uint64_t v11 = (int *)type metadata accessor for ETP_Header(0);
  uint64_t v12 = v11;
  uint64_t v13 = v11[5];
  int v14 = *(unsigned __int8 *)(a1 + v13);
  int v15 = *(unsigned __int8 *)(a2 + v13);
  if (v14 == 8)
  {
    if (v15 != 8) {
      goto LABEL_41;
    }
  }
  else if (v15 == 8 || v14 != v15)
  {
    goto LABEL_41;
  }
  uint64_t v17 = v11[6];
  unint64_t v18 = (void *)(a1 + v17);
  char v19 = *(unsigned char *)(a1 + v17 + 8);
  uint64_t v20 = (void *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if (v19)
  {
    if (!v21) {
      goto LABEL_41;
    }
  }
  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if (v21) {
      goto LABEL_41;
    }
  }
  uint64_t v53 = v5;
  uint64_t v22 = v11[7];
  uint64_t v23 = *(void *)(a1 + v22);
  unint64_t v24 = *(void *)(a1 + v22 + 8);
  char v25 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v25;
  unint64_t v27 = v25[1];
  if (v24 >> 60 == 15)
  {
    if (v27 >> 60 == 15) {
      goto LABEL_21;
    }
LABEL_19:
    sub_100017FA4(v23, v24);
    sub_100017FA4(v26, v27);
    sub_1000180CC(v23, v24);
    sub_1000180CC(v26, v27);
    goto LABEL_41;
  }
  if (v27 >> 60 == 15) {
    goto LABEL_19;
  }
  sub_100017FA4(v23, v24);
  sub_100017FA4(v26, v27);
  int v52 = sub_100044E48(v23, v24, v26, v27);
  sub_1000180CC(v26, v27);
  sub_1000180CC(v23, v24);
  if ((v52 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_21:
  uint64_t v28 = v12[8];
  char v29 = (_DWORD *)(a1 + v28);
  char v30 = *(unsigned char *)(a1 + v28 + 4);
  int v31 = (_DWORD *)(a2 + v28);
  int v32 = *(unsigned __int8 *)(a2 + v28 + 4);
  if (v30)
  {
    if (!v32) {
      goto LABEL_41;
    }
  }
  else
  {
    if (*v29 != *v31) {
      LOBYTE(v32) = 1;
    }
    if (v32) {
      goto LABEL_41;
    }
  }
  uint64_t v33 = v12[9];
  char v34 = (void *)(a1 + v33);
  uint64_t v35 = *(void *)(a1 + v33 + 8);
  int v36 = (void *)(a2 + v33);
  uint64_t v37 = v36[1];
  if (!v35)
  {
    if (v37) {
      goto LABEL_41;
    }
LABEL_34:
    uint64_t v39 = v12[10];
    int v40 = *(unsigned __int8 *)(a1 + v39);
    int v41 = *(unsigned __int8 *)(a2 + v39);
    if (v40 != 2)
    {
      if (v41 == 2 || ((((v41 & 1) == 0) ^ v40) & 1) == 0) {
        goto LABEL_41;
      }
LABEL_39:
      uint64_t v42 = v12[11];
      char v43 = (double *)(a1 + v42);
      char v44 = *(unsigned char *)(a1 + v42 + 8);
      id v45 = (double *)(a2 + v42);
      int v46 = *(unsigned __int8 *)(a2 + v42 + 8);
      if (v44)
      {
        if (!v46) {
          goto LABEL_41;
        }
      }
      else
      {
        if (*v43 != *v45) {
          LOBYTE(v46) = 1;
        }
        if (v46) {
          goto LABEL_41;
        }
      }
      uint64_t v48 = v53;
      uint64_t v49 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v53 + 16);
      v49(v10, a1, v4);
      v49(v8, a2, v4);
      sub_100043F80(&qword_1000ECCB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v38 = sub_1000BB8B0();
      id v50 = *(void (**)(unsigned char *, uint64_t))(v48 + 8);
      v50(v8, v4);
      v50(v10, v4);
      return v38 & 1;
    }
    if (v41 == 2) {
      goto LABEL_39;
    }
LABEL_41:
    char v38 = 0;
    return v38 & 1;
  }
  if (!v37) {
    goto LABEL_41;
  }
  if (*v34 == *v36 && v35 == v37) {
    goto LABEL_34;
  }
  char v38 = 0;
  if (sub_1000BC1A0()) {
    goto LABEL_34;
  }
  return v38 & 1;
}

uint64_t sub_100046214(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B84A0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v40[-v9];
  uint64_t v11 = type metadata accessor for ETP_Doodle(0);
  uint64_t v12 = v11;
  uint64_t v13 = *(int *)(v11 + 20);
  int v14 = (_DWORD *)(a1 + v13);
  char v15 = *(unsigned char *)(a1 + v13 + 4);
  int v16 = (_DWORD *)(a2 + v13);
  int v17 = *(unsigned __int8 *)(a2 + v13 + 4);
  if (v15)
  {
    if (!v17) {
      goto LABEL_18;
    }
  }
  else
  {
    if (*v14 != *v16) {
      LOBYTE(v17) = 1;
    }
    if (v17) {
      goto LABEL_18;
    }
  }
  uint64_t v42 = v5;
  uint64_t v18 = *(int *)(v11 + 24);
  uint64_t v19 = *(void *)(a1 + v18);
  unint64_t v20 = *(void *)(a1 + v18 + 8);
  int v21 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v21;
  unint64_t v23 = v21[1];
  if (v20 >> 60 == 15)
  {
    if (v23 >> 60 != 15) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  if (v23 >> 60 == 15) {
    goto LABEL_16;
  }
  sub_100017FA4(v19, v20);
  sub_100017FA4(v22, v23);
  int v41 = sub_100044E48(v19, v20, v22, v23);
  sub_1000180CC(v22, v23);
  sub_1000180CC(v19, v20);
  if (v41)
  {
LABEL_12:
    uint64_t v24 = *(int *)(v12 + 28);
    uint64_t v19 = *(void *)(a1 + v24);
    unint64_t v20 = *(void *)(a1 + v24 + 8);
    char v25 = (uint64_t *)(a2 + v24);
    uint64_t v22 = *v25;
    unint64_t v23 = v25[1];
    if (v20 >> 60 == 15)
    {
      if (v23 >> 60 == 15) {
        goto LABEL_21;
      }
    }
    else if (v23 >> 60 != 15)
    {
      sub_100017FA4(v19, v20);
      sub_100017FA4(v22, v23);
      int v41 = sub_100044E48(v19, v20, v22, v23);
      sub_1000180CC(v22, v23);
      sub_1000180CC(v19, v20);
      if ((v41 & 1) == 0) {
        goto LABEL_18;
      }
LABEL_21:
      uint64_t v30 = *(int *)(v12 + 32);
      uint64_t v31 = *(void *)(a1 + v30);
      unint64_t v32 = *(void *)(a1 + v30 + 8);
      uint64_t v33 = (uint64_t *)(a2 + v30);
      uint64_t v34 = *v33;
      unint64_t v35 = v33[1];
      if (v32 >> 60 == 15)
      {
        if (v35 >> 60 == 15) {
          goto LABEL_27;
        }
      }
      else if (v35 >> 60 != 15)
      {
        sub_100017FA4(v31, v32);
        sub_100017FA4(v34, v35);
        char v36 = sub_100044E48(v31, v32, v34, v35);
        sub_1000180CC(v34, v35);
        sub_1000180CC(v31, v32);
        if ((v36 & 1) == 0) {
          goto LABEL_18;
        }
LABEL_27:
        uint64_t v37 = v42;
        char v38 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v42 + 16);
        v38(v10, a1, v4);
        v38(v8, a2, v4);
        sub_100043F80(&qword_1000ECCB0, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v28 = sub_1000BB8B0();
        uint64_t v39 = *(void (**)(unsigned char *, uint64_t))(v37 + 8);
        v39(v8, v4);
        v39(v10, v4);
        return v28 & 1;
      }
      sub_100017FA4(v31, v32);
      sub_100017FA4(v34, v35);
      sub_1000180CC(v31, v32);
      uint64_t v26 = v34;
      unint64_t v27 = v35;
      goto LABEL_17;
    }
LABEL_16:
    sub_100017FA4(v19, v20);
    sub_100017FA4(v22, v23);
    sub_1000180CC(v19, v20);
    uint64_t v26 = v22;
    unint64_t v27 = v23;
LABEL_17:
    sub_1000180CC(v26, v27);
  }
LABEL_18:
  char v28 = 0;
  return v28 & 1;
}

unint64_t sub_1000465FC()
{
  unint64_t result = qword_1000ECCE0;
  if (!qword_1000ECCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ECCE0);
  }
  return result;
}

void *sub_100046650(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000B84A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(void *)uint64_t v9 = *(void *)v10;
    v9[8] = v10[8];
    uint64_t v11 = a3[7];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    unint64_t v14 = *((void *)v13 + 1);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    }
    else
    {
      uint64_t v16 = *(void *)v13;
      sub_100017F4C(*(void *)v13, *((void *)v13 + 1));
      *(void *)uint64_t v12 = v16;
      *((void *)v12 + 1) = v14;
    }
    uint64_t v17 = a3[8];
    uint64_t v18 = a3[9];
    uint64_t v19 = (char *)a1 + v17;
    unint64_t v20 = (char *)a2 + v17;
    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    int v21 = (void *)((char *)a1 + v18);
    uint64_t v22 = (void *)((char *)a2 + v18);
    uint64_t v23 = v22[1];
    *int v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    char v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    *(void *)char v25 = *(void *)v26;
    v25[8] = v26[8];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000467CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  unint64_t v6 = v5[1];
  if (v6 >> 60 != 15) {
    sub_100018074(*v5, v6);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100046864(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t *)(a2 + v10);
  unint64_t v13 = v12[1];
  if (v13 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  }
  else
  {
    uint64_t v14 = *v12;
    sub_100017F4C(*v12, v12[1]);
    *(void *)uint64_t v11 = v14;
    *(void *)(v11 + 8) = v13;
  }
  uint64_t v15 = a3[8];
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  uint64_t v19 = (void *)(a1 + v16);
  unint64_t v20 = (void *)(a2 + v16);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100046990(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = (uint64_t *)(a1 + v11);
  unint64_t v13 = (uint64_t *)(a2 + v11);
  unint64_t v14 = *(void *)(a2 + v11 + 8);
  if (*(void *)(a1 + v11 + 8) >> 60 != 15)
  {
    if (v14 >> 60 != 15)
    {
      uint64_t v16 = *v13;
      sub_100017F4C(v16, v14);
      uint64_t v17 = *v12;
      unint64_t v18 = v12[1];
      *uint64_t v12 = v16;
      v12[1] = v14;
      sub_100018074(v17, v18);
      goto LABEL_8;
    }
    sub_10003F900((uint64_t)v12);
    goto LABEL_6;
  }
  if (v14 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    goto LABEL_8;
  }
  uint64_t v15 = *v13;
  sub_100017F4C(v15, v14);
  *uint64_t v12 = v15;
  v12[1] = v14;
LABEL_8:
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (int *)(a2 + v19);
  int v22 = *v21;
  *(unsigned char *)(v20 + 4) = *((unsigned char *)v21 + 4);
  *(_DWORD *)uint64_t v20 = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)(a1 + v23);
  char v25 = (void *)(a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v26 = a3[11];
  uint64_t v27 = a1 + v26;
  char v28 = (uint64_t *)(a2 + v26);
  uint64_t v29 = *v28;
  *(unsigned char *)(v27 + 8) = *((unsigned char *)v28 + 8);
  *(void *)uint64_t v27 = v29;
  return a1;
}

uint64_t sub_100046B20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  uint64_t v10 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(unsigned char *)(v11 + 4) = *(unsigned char *)(v12 + 4);
  uint64_t v13 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[11];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v15 = *(void *)v16;
  return a1;
}

uint64_t sub_100046C08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  uint64_t v10 = a3[7];
  uint64_t v11 = (uint64_t *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  unint64_t v13 = *(void *)(a1 + v10 + 8);
  if (v13 >> 60 != 15)
  {
    unint64_t v14 = v12[1];
    if (v14 >> 60 != 15)
    {
      uint64_t v15 = *v11;
      *uint64_t v11 = *v12;
      v11[1] = v14;
      sub_100018074(v15, v13);
      goto LABEL_6;
    }
    sub_10003F900((uint64_t)v11);
  }
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
LABEL_6:
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  uint64_t v20 = (void *)(a1 + v17);
  uint64_t v21 = (uint64_t *)(a2 + v17);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  return a1;
}

uint64_t sub_100046D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100046D60);
}

uint64_t sub_100046D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B84A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100046E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100046E44);
}

uint64_t sub_100046E44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000B84A0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36) + 8) = a2;
  }
  return result;
}

uint64_t sub_100046F04()
{
  uint64_t result = sub_1000B84A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ETP_Header.MessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100047098);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ETP_Header.MessageType()
{
  return &type metadata for ETP_Header.MessageType;
}

uint64_t sub_1000470E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000470FC);
}

uint64_t sub_100047100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100047114);
}

uint64_t sub_100047118()
{
  return sub_1000497F8();
}

uint64_t *sub_100047124(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000B84A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = (char *)a1 + v8;
    int v11 = (char *)a2 + v8;
    *(_DWORD *)unint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    uint64_t v12 = (char *)a1 + v9;
    unint64_t v13 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    _OWORD v12[4] = v13[4];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    uint64_t v18 = (char *)a1 + v15;
    uint64_t v19 = (char *)a2 + v15;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    void v18[4] = v19[4];
    uint64_t v20 = a3[9];
    uint64_t v21 = a3[10];
    uint64_t v22 = (char *)a1 + v20;
    uint64_t v23 = (char *)a2 + v20;
    int v24 = *(_DWORD *)v23;
    v22[4] = v23[4];
    *(_DWORD *)uint64_t v22 = v24;
    uint64_t v25 = (char *)a1 + v21;
    uint64_t v26 = (char *)a2 + v21;
    v25[4] = v26[4];
    *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  }
  return a1;
}

uint64_t sub_100047284(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(unsigned char *)(v11 + 4) = *(unsigned char *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = (int *)(a2 + v19);
  int v23 = *v22;
  *(unsigned char *)(v21 + 4) = *((unsigned char *)v22 + 4);
  *(_DWORD *)uint64_t v21 = v23;
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  *(unsigned char *)(v24 + 4) = *(unsigned char *)(v25 + 4);
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  return a1;
}

uint64_t sub_100047390(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(unsigned char *)(v8 + 4) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(unsigned char *)(v12 + 4) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(unsigned char *)(v17 + 4);
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(unsigned char *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  char v26 = *(unsigned char *)(v25 + 4);
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(unsigned char *)(v24 + 4) = v26;
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  char v30 = *(unsigned char *)(v29 + 4);
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(unsigned char *)(v28 + 4) = v30;
  return a1;
}

uint64_t sub_1000474A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(unsigned char *)(v11 + 4) = *(unsigned char *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  char v22 = (int *)(a2 + v19);
  int v23 = *v22;
  *(unsigned char *)(v21 + 4) = *((unsigned char *)v22 + 4);
  *(_DWORD *)uint64_t v21 = v23;
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  *(unsigned char *)(v24 + 4) = *(unsigned char *)(v25 + 4);
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  return a1;
}

uint64_t sub_1000475B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(unsigned char *)(v11 + 4) = *(unsigned char *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  char v22 = (int *)(a2 + v19);
  int v23 = *v22;
  *(unsigned char *)(v21 + 4) = *((unsigned char *)v22 + 4);
  *(_DWORD *)uint64_t v21 = v23;
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  *(unsigned char *)(v24 + 4) = *(unsigned char *)(v25 + 4);
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  return a1;
}

uint64_t sub_1000476C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000476D4);
}

uint64_t sub_1000476D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000476EC);
}

uint64_t sub_1000476F0()
{
  uint64_t result = sub_1000B84A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100047790(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000B84A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (uint64_t *)((char *)a2 + v9);
    unint64_t v14 = *(uint64_t *)((char *)a2 + v9 + 8);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    }
    else
    {
      uint64_t v16 = *v13;
      sub_100017F4C(*v13, v14);
      *(void *)uint64_t v12 = v16;
      *((void *)v12 + 1) = v14;
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    unint64_t v20 = *((void *)v19 + 1);
    if (v20 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    }
    else
    {
      uint64_t v21 = *(void *)v19;
      sub_100017F4C(*(void *)v19, *((void *)v19 + 1));
      *(void *)uint64_t v18 = v21;
      *((void *)v18 + 1) = v20;
    }
    uint64_t v22 = a3[8];
    int v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    unint64_t v25 = *((void *)v24 + 1);
    if (v25 >> 60 == 15)
    {
      *(_OWORD *)int v23 = *(_OWORD *)v24;
    }
    else
    {
      uint64_t v26 = *(void *)v24;
      sub_100017F4C(*(void *)v24, *((void *)v24 + 1));
      *(void *)int v23 = v26;
      *((void *)v23 + 1) = v25;
    }
  }
  return a1;
}

uint64_t sub_100047924(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1000B84A0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v6 = (uint64_t *)(a1 + a2[6]);
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15) {
    uint64_t result = sub_100018074(*v6, v7);
  }
  uint64_t v8 = (uint64_t *)(a1 + a2[7]);
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15) {
    uint64_t result = sub_100018074(*v8, v9);
  }
  uint64_t v10 = (uint64_t *)(a1 + a2[8]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15)
  {
    uint64_t v12 = *v10;
    return sub_100018074(v12, v11);
  }
  return result;
}

uint64_t sub_1000479F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = (uint64_t *)(a2 + v8);
  unint64_t v13 = *(void *)(a2 + v8 + 8);
  if (v13 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  }
  else
  {
    uint64_t v14 = *v12;
    sub_100017F4C(*v12, v13);
    *(void *)uint64_t v11 = v14;
    *(void *)(v11 + 8) = v13;
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t *)(a2 + v15);
  unint64_t v18 = v17[1];
  if (v18 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  }
  else
  {
    uint64_t v19 = *v17;
    sub_100017F4C(*v17, v17[1]);
    *(void *)uint64_t v16 = v19;
    *(void *)(v16 + 8) = v18;
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (uint64_t *)(a2 + v20);
  unint64_t v23 = v22[1];
  if (v23 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  else
  {
    uint64_t v24 = *v22;
    sub_100017F4C(*v22, v22[1]);
    *(void *)uint64_t v21 = v24;
    *(void *)(v21 + 8) = v23;
  }
  return a1;
}

uint64_t sub_100047B3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (int *)(a2 + v7);
  int v10 = *v9;
  *(unsigned char *)(v8 + 4) = *((unsigned char *)v9 + 4);
  *(_DWORD *)uint64_t v8 = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = (uint64_t *)(a1 + v11);
  unint64_t v13 = (uint64_t *)(a2 + v11);
  unint64_t v14 = *(void *)(a2 + v11 + 8);
  if (*(void *)(a1 + v11 + 8) >> 60 == 15)
  {
    if (v14 >> 60 != 15)
    {
      uint64_t v15 = *v13;
      sub_100017F4C(v15, v14);
      *uint64_t v12 = v15;
      v12[1] = v14;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v14 >> 60 == 15)
  {
    sub_10003F900((uint64_t)v12);
LABEL_6:
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    goto LABEL_8;
  }
  uint64_t v16 = *v13;
  sub_100017F4C(v16, v14);
  uint64_t v17 = *v12;
  unint64_t v18 = v12[1];
  *uint64_t v12 = v16;
  v12[1] = v14;
  sub_100018074(v17, v18);
LABEL_8:
  uint64_t v19 = a3[7];
  uint64_t v20 = (uint64_t *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  unint64_t v22 = *(void *)(a2 + v19 + 8);
  if (*(void *)(a1 + v19 + 8) >> 60 == 15)
  {
    if (v22 >> 60 != 15)
    {
      uint64_t v23 = *v21;
      sub_100017F4C(v23, v22);
      *uint64_t v20 = v23;
      v20[1] = v22;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v22 >> 60 == 15)
  {
    sub_10003F900((uint64_t)v20);
LABEL_13:
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    goto LABEL_15;
  }
  uint64_t v24 = *v21;
  sub_100017F4C(v24, v22);
  uint64_t v25 = *v20;
  unint64_t v26 = v20[1];
  *uint64_t v20 = v24;
  v20[1] = v22;
  sub_100018074(v25, v26);
LABEL_15:
  uint64_t v27 = a3[8];
  uint64_t v28 = (uint64_t *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  unint64_t v30 = *(void *)(a2 + v27 + 8);
  if (*(void *)(a1 + v27 + 8) >> 60 != 15)
  {
    if (v30 >> 60 != 15)
    {
      uint64_t v32 = *v29;
      sub_100017F4C(v32, v30);
      uint64_t v33 = *v28;
      unint64_t v34 = v28[1];
      *uint64_t v28 = v32;
      v28[1] = v30;
      sub_100018074(v33, v34);
      return a1;
    }
    sub_10003F900((uint64_t)v28);
    goto LABEL_20;
  }
  if (v30 >> 60 == 15)
  {
LABEL_20:
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    return a1;
  }
  uint64_t v31 = *v29;
  sub_100017F4C(v31, v30);
  *uint64_t v28 = v31;
  v28[1] = v30;
  return a1;
}

uint64_t sub_100047D50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

uint64_t sub_100047DF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  unint64_t v13 = *(void *)(a1 + v8 + 8);
  if (v13 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v14 = *(void *)(v12 + 8);
  if (v14 >> 60 == 15)
  {
    sub_10003F900(v11);
LABEL_4:
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    goto LABEL_6;
  }
  uint64_t v15 = *(void *)v11;
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = v14;
  sub_100018074(v15, v13);
LABEL_6:
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  unint64_t v19 = *(void *)(a1 + v16 + 8);
  if (v19 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    goto LABEL_11;
  }
  unint64_t v20 = *(void *)(v18 + 8);
  if (v20 >> 60 == 15)
  {
    sub_10003F900(v17);
    goto LABEL_9;
  }
  uint64_t v21 = *(void *)v17;
  *(void *)uint64_t v17 = *(void *)v18;
  *(void *)(v17 + 8) = v20;
  sub_100018074(v21, v19);
LABEL_11:
  uint64_t v22 = a3[8];
  uint64_t v23 = (uint64_t *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  unint64_t v25 = *(void *)(a1 + v22 + 8);
  if (v25 >> 60 != 15)
  {
    unint64_t v26 = v24[1];
    if (v26 >> 60 != 15)
    {
      uint64_t v27 = *v23;
      *uint64_t v23 = *v24;
      v23[1] = v26;
      sub_100018074(v27, v25);
      return a1;
    }
    sub_10003F900((uint64_t)v23);
  }
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  return a1;
}

uint64_t sub_100047F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100047F8C);
}

uint64_t sub_100047F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B84A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8) >> 60;
    BOOL v11 = ((4 * v10) & 0xC) == 0;
    unsigned int v12 = ((4 * v10) & 0xC | (v10 >> 2)) ^ 0xF;
    if (v11) {
      return 0;
    }
    else {
      return v12;
    }
  }
}

uint64_t sub_100048058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004806C);
}

uint64_t sub_10004806C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000B84A0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    BOOL v11 = (void *)(a1 + *(int *)(a4 + 24));
    *BOOL v11 = 0;
    v11[1] = (unint64_t)((~a2 >> 2) & 3 | (4 * ~a2)) << 60;
  }
  return result;
}

uint64_t sub_100048138()
{
  uint64_t result = sub_1000B84A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000481DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B84A0();
  int v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_100048248(uint64_t a1)
{
  uint64_t v2 = sub_1000B84A0();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1000482AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_100048310(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100048374(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000483D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10004843C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100048450);
}

uint64_t sub_100048454(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B84A0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1000484C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000484D4);
}

uint64_t sub_1000484D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B84A0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_100048548()
{
  uint64_t result = sub_1000B84A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1000485D4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000B84A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    unint64_t v11 = *((void *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v13 = *(void *)v10;
      sub_100017F4C(*(void *)v10, *((void *)v10 + 1));
      *(void *)uint64_t v9 = v13;
      *((void *)v9 + 1) = v11;
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    unint64_t v17 = *((void *)v16 + 1);
    if (v17 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    }
    else
    {
      uint64_t v18 = *(void *)v16;
      sub_100017F4C(*(void *)v16, *((void *)v16 + 1));
      *(void *)uint64_t v15 = v18;
      *((void *)v15 + 1) = v17;
    }
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_100048720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B84A0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15) {
    uint64_t result = sub_100018074(*v6, v7);
  }
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15)
  {
    uint64_t v10 = *v8;
    return sub_100018074(v10, v9);
  }
  return result;
}

uint64_t sub_1000487D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  unint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = *v9;
    sub_100017F4C(*v9, v9[1]);
    *(void *)uint64_t v8 = v11;
    *(void *)(v8 + 8) = v10;
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (uint64_t *)(a2 + v12);
  unint64_t v15 = v14[1];
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  }
  else
  {
    uint64_t v16 = *v14;
    sub_100017F4C(*v14, v14[1]);
    *(void *)uint64_t v13 = v16;
    *(void *)(v13 + 8) = v15;
  }
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1000488D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (uint64_t *)(a1 + v7);
  unint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a2 + v7 + 8);
  if (*(void *)(a1 + v7 + 8) >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      uint64_t v11 = *v9;
      sub_100017F4C(v11, v10);
      *uint64_t v8 = v11;
      v8[1] = v10;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
    sub_10003F900((uint64_t)v8);
LABEL_6:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  uint64_t v12 = *v9;
  sub_100017F4C(v12, v10);
  uint64_t v13 = *v8;
  unint64_t v14 = v8[1];
  *uint64_t v8 = v12;
  v8[1] = v10;
  sub_100018074(v13, v14);
LABEL_8:
  uint64_t v15 = a3[6];
  uint64_t v16 = (uint64_t *)(a1 + v15);
  unint64_t v17 = (uint64_t *)(a2 + v15);
  unint64_t v18 = *(void *)(a2 + v15 + 8);
  if (*(void *)(a1 + v15 + 8) >> 60 != 15)
  {
    if (v18 >> 60 != 15)
    {
      uint64_t v20 = *v17;
      sub_100017F4C(v20, v18);
      uint64_t v21 = *v16;
      unint64_t v22 = v16[1];
      uint64_t *v16 = v20;
      v16[1] = v18;
      sub_100018074(v21, v22);
      goto LABEL_15;
    }
    sub_10003F900((uint64_t)v16);
    goto LABEL_13;
  }
  if (v18 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    goto LABEL_15;
  }
  uint64_t v19 = *v17;
  sub_100017F4C(v19, v18);
  uint64_t *v16 = v19;
  v16[1] = v18;
LABEL_15:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100048A54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100048AE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  unint64_t v10 = *(void *)(a1 + v7 + 8);
  if (v10 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v11 = *(void *)(v9 + 8);
  if (v11 >> 60 == 15)
  {
    sub_10003F900(v8);
LABEL_4:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)v8;
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v11;
  sub_100018074(v12, v10);
LABEL_6:
  uint64_t v13 = a3[6];
  unint64_t v14 = (uint64_t *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  unint64_t v16 = *(void *)(a1 + v13 + 8);
  if (v16 >> 60 != 15)
  {
    unint64_t v17 = v15[1];
    if (v17 >> 60 != 15)
    {
      uint64_t v18 = *v14;
      *unint64_t v14 = *v15;
      v14[1] = v17;
      sub_100018074(v18, v16);
      goto LABEL_11;
    }
    sub_10003F900((uint64_t)v14);
  }
  *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
LABEL_11:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100048C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100048C1C);
}

uint64_t sub_100048C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B84A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) <= 2u) {
      int v10 = 2;
    }
    else {
      int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    }
    unsigned int v11 = v10 - 2;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) >= 2u) {
      return v11;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100048CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100048CF8);
}

uint64_t sub_100048CF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000B84A0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
  }
  return result;
}

uint64_t sub_100048DB4()
{
  return sub_1000497F8();
}

unsigned char *storeEnumTagSinglePayload for ETP_Video.MediaType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100048E8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ETP_Video.MediaType()
{
  return &type metadata for ETP_Video.MediaType;
}

uint64_t *sub_100048EC4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000B84A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    unint64_t v11 = *((void *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v13 = *(void *)v10;
      sub_100017F4C(*(void *)v10, *((void *)v10 + 1));
      *(void *)uint64_t v9 = v13;
      *((void *)v9 + 1) = v11;
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)a1 + v14;
    unint64_t v16 = (char *)a2 + v14;
    unint64_t v17 = *((void *)v16 + 1);
    if (v17 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    }
    else
    {
      uint64_t v18 = *(void *)v16;
      sub_100017F4C(*(void *)v16, *((void *)v16 + 1));
      *(void *)uint64_t v15 = v18;
      *((void *)v15 + 1) = v17;
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    unint64_t v22 = *((void *)v21 + 1);
    if (v22 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    }
    else
    {
      uint64_t v23 = *(void *)v21;
      sub_100017F4C(*(void *)v21, *((void *)v21 + 1));
      *(void *)uint64_t v20 = v23;
      *((void *)v20 + 1) = v22;
    }
  }
  return a1;
}

uint64_t sub_100049040(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1000B84A0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  unsigned int v6 = (uint64_t *)(a1 + a2[5]);
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15) {
    uint64_t result = sub_100018074(*v6, v7);
  }
  uint64_t v8 = (uint64_t *)(a1 + a2[6]);
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15) {
    uint64_t result = sub_100018074(*v8, v9);
  }
  int v10 = (uint64_t *)(a1 + a2[7]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15)
  {
    uint64_t v12 = *v10;
    return sub_100018074(v12, v11);
  }
  return result;
}

uint64_t sub_100049114(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  unint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = *v9;
    sub_100017F4C(*v9, v9[1]);
    *(void *)uint64_t v8 = v11;
    *(void *)(v8 + 8) = v10;
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (uint64_t *)(a2 + v12);
  unint64_t v15 = v14[1];
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  }
  else
  {
    uint64_t v16 = *v14;
    sub_100017F4C(*v14, v14[1]);
    *(void *)uint64_t v13 = v16;
    *(void *)(v13 + 8) = v15;
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t *)(a2 + v17);
  unint64_t v20 = v19[1];
  if (v20 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  }
  else
  {
    uint64_t v21 = *v19;
    sub_100017F4C(*v19, v19[1]);
    *(void *)uint64_t v18 = v21;
    *(void *)(v18 + 8) = v20;
  }
  return a1;
}

uint64_t sub_100049240(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (uint64_t *)(a1 + v7);
  unint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a2 + v7 + 8);
  if (*(void *)(a1 + v7 + 8) >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      uint64_t v11 = *v9;
      sub_100017F4C(v11, v10);
      *uint64_t v8 = v11;
      v8[1] = v10;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
    sub_10003F900((uint64_t)v8);
LABEL_6:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  uint64_t v12 = *v9;
  sub_100017F4C(v12, v10);
  uint64_t v13 = *v8;
  unint64_t v14 = v8[1];
  *uint64_t v8 = v12;
  v8[1] = v10;
  sub_100018074(v13, v14);
LABEL_8:
  uint64_t v15 = a3[6];
  uint64_t v16 = (uint64_t *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  unint64_t v18 = *(void *)(a2 + v15 + 8);
  if (*(void *)(a1 + v15 + 8) >> 60 == 15)
  {
    if (v18 >> 60 != 15)
    {
      uint64_t v19 = *v17;
      sub_100017F4C(v19, v18);
      uint64_t *v16 = v19;
      v16[1] = v18;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v18 >> 60 == 15)
  {
    sub_10003F900((uint64_t)v16);
LABEL_13:
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    goto LABEL_15;
  }
  uint64_t v20 = *v17;
  sub_100017F4C(v20, v18);
  uint64_t v21 = *v16;
  unint64_t v22 = v16[1];
  uint64_t *v16 = v20;
  v16[1] = v18;
  sub_100018074(v21, v22);
LABEL_15:
  uint64_t v23 = a3[7];
  uint64_t v24 = (uint64_t *)(a1 + v23);
  unint64_t v25 = (uint64_t *)(a2 + v23);
  unint64_t v26 = *(void *)(a2 + v23 + 8);
  if (*(void *)(a1 + v23 + 8) >> 60 != 15)
  {
    if (v26 >> 60 != 15)
    {
      uint64_t v28 = *v25;
      sub_100017F4C(v28, v26);
      uint64_t v29 = *v24;
      unint64_t v30 = v24[1];
      *uint64_t v24 = v28;
      v24[1] = v26;
      sub_100018074(v29, v30);
      return a1;
    }
    sub_10003F900((uint64_t)v24);
    goto LABEL_20;
  }
  if (v26 >> 60 == 15)
  {
LABEL_20:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    return a1;
  }
  uint64_t v27 = *v25;
  sub_100017F4C(v27, v26);
  *uint64_t v24 = v27;
  v24[1] = v26;
  return a1;
}

uint64_t sub_100049438(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1000494C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  unint64_t v10 = *(void *)(a1 + v7 + 8);
  if (v10 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v11 = *(void *)(v9 + 8);
  if (v11 >> 60 == 15)
  {
    sub_10003F900(v8);
LABEL_4:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)v8;
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v11;
  sub_100018074(v12, v10);
LABEL_6:
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  unint64_t v16 = *(void *)(a1 + v13 + 8);
  if (v16 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    goto LABEL_11;
  }
  unint64_t v17 = *(void *)(v15 + 8);
  if (v17 >> 60 == 15)
  {
    sub_10003F900(v14);
    goto LABEL_9;
  }
  uint64_t v18 = *(void *)v14;
  *(void *)uint64_t v14 = *(void *)v15;
  *(void *)(v14 + 8) = v17;
  sub_100018074(v18, v16);
LABEL_11:
  uint64_t v19 = a3[7];
  uint64_t v20 = (uint64_t *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  unint64_t v22 = *(void *)(a1 + v19 + 8);
  if (v22 >> 60 != 15)
  {
    unint64_t v23 = v21[1];
    if (v23 >> 60 != 15)
    {
      uint64_t v24 = *v20;
      *uint64_t v20 = *v21;
      v20[1] = v23;
      sub_100018074(v24, v22);
      return a1;
    }
    sub_10003F900((uint64_t)v20);
  }
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  return a1;
}

uint64_t sub_100049630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100049644);
}

uint64_t sub_100049648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B84A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
    BOOL v11 = ((4 * v10) & 0xC) == 0;
    unsigned int v12 = ((4 * v10) & 0xC | (v10 >> 2)) ^ 0xF;
    if (v11) {
      return 0;
    }
    else {
      return v12;
    }
  }
}

uint64_t sub_100049714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100049728);
}

uint64_t sub_10004972C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000B84A0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    BOOL v11 = (void *)(a1 + *(int *)(a4 + 20));
    *BOOL v11 = 0;
    v11[1] = (unint64_t)((~a2 >> 2) & 3 | (4 * ~a2)) << 60;
  }
  return result;
}

uint64_t sub_1000497F8()
{
  uint64_t result = sub_1000B84A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100049894(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000B84A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    BOOL v11 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    unsigned int v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(_DWORD *)unsigned int v12 = *(_DWORD *)v13;
    _OWORD v12[4] = v13[4];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    unint64_t v16 = (char *)a1 + v14;
    unint64_t v17 = (char *)a2 + v14;
    *(_DWORD *)unint64_t v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    uint64_t v18 = (char *)a1 + v15;
    uint64_t v19 = (uint64_t *)((char *)a2 + v15);
    unint64_t v20 = *(uint64_t *)((char *)a2 + v15 + 8);
    if (v20 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    }
    else
    {
      uint64_t v22 = *v19;
      sub_100017F4C(*v19, v20);
      *(void *)uint64_t v18 = v22;
      *((void *)v18 + 1) = v20;
    }
    uint64_t v23 = a3[9];
    uint64_t v24 = (char *)a1 + v23;
    unint64_t v25 = (char *)a2 + v23;
    unint64_t v26 = *((void *)v25 + 1);
    if (v26 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    }
    else
    {
      uint64_t v27 = *(void *)v25;
      sub_100017F4C(*(void *)v25, *((void *)v25 + 1));
      *(void *)uint64_t v24 = v27;
      *((void *)v24 + 1) = v26;
    }
  }
  return a1;
}

uint64_t sub_100049A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B84A0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(a2 + 32));
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15) {
    uint64_t result = sub_100018074(*v6, v7);
  }
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(a2 + 36));
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15)
  {
    uint64_t v10 = *v8;
    return sub_100018074(v10, v9);
  }
  return result;
}

uint64_t sub_100049AD4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(unsigned char *)(v11 + 4) = *(unsigned char *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = (uint64_t *)(a2 + v14);
  unint64_t v19 = *(void *)(a2 + v14 + 8);
  if (v19 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  }
  else
  {
    uint64_t v20 = *v18;
    sub_100017F4C(*v18, v19);
    *(void *)uint64_t v17 = v20;
    *(void *)(v17 + 8) = v19;
  }
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (uint64_t *)(a2 + v21);
  unint64_t v24 = v23[1];
  if (v24 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  }
  else
  {
    uint64_t v25 = *v23;
    sub_100017F4C(*v23, v23[1]);
    *(void *)uint64_t v22 = v25;
    *(void *)(v22 + 8) = v24;
  }
  return a1;
}

uint64_t sub_100049C10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(unsigned char *)(v8 + 4) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(unsigned char *)(v12 + 4) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(unsigned char *)(v17 + 4);
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = (uint64_t *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  unint64_t v22 = *(void *)(a2 + v19 + 8);
  if (*(void *)(a1 + v19 + 8) >> 60 == 15)
  {
    if (v22 >> 60 != 15)
    {
      uint64_t v23 = *v21;
      sub_100017F4C(v23, v22);
      *uint64_t v20 = v23;
      v20[1] = v22;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v22 >> 60 == 15)
  {
    sub_10003F900((uint64_t)v20);
LABEL_6:
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    goto LABEL_8;
  }
  uint64_t v24 = *v21;
  sub_100017F4C(v24, v22);
  uint64_t v25 = *v20;
  unint64_t v26 = v20[1];
  *uint64_t v20 = v24;
  v20[1] = v22;
  sub_100018074(v25, v26);
LABEL_8:
  uint64_t v27 = a3[9];
  uint64_t v28 = (uint64_t *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  unint64_t v30 = *(void *)(a2 + v27 + 8);
  if (*(void *)(a1 + v27 + 8) >> 60 != 15)
  {
    if (v30 >> 60 != 15)
    {
      uint64_t v32 = *v29;
      sub_100017F4C(v32, v30);
      uint64_t v33 = *v28;
      unint64_t v34 = v28[1];
      *uint64_t v28 = v32;
      v28[1] = v30;
      sub_100018074(v33, v34);
      return a1;
    }
    sub_10003F900((uint64_t)v28);
    goto LABEL_13;
  }
  if (v30 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    return a1;
  }
  uint64_t v31 = *v29;
  sub_100017F4C(v31, v30);
  *uint64_t v28 = v31;
  v28[1] = v30;
  return a1;
}

uint64_t sub_100049DDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(unsigned char *)(v11 + 4) = *(unsigned char *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100049EB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B84A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(unsigned char *)(v11 + 4) = *(unsigned char *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  unint64_t v19 = *(void *)(a1 + v14 + 8);
  if (v19 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v20 = *(void *)(v18 + 8);
  if (v20 >> 60 == 15)
  {
    sub_10003F900(v17);
LABEL_4:
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    goto LABEL_6;
  }
  uint64_t v21 = *(void *)v17;
  *(void *)uint64_t v17 = *(void *)v18;
  *(void *)(v17 + 8) = v20;
  sub_100018074(v21, v19);
LABEL_6:
  uint64_t v22 = a3[9];
  uint64_t v23 = (uint64_t *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  unint64_t v25 = *(void *)(a1 + v22 + 8);
  if (v25 >> 60 != 15)
  {
    unint64_t v26 = v24[1];
    if (v26 >> 60 != 15)
    {
      uint64_t v27 = *v23;
      *uint64_t v23 = *v24;
      v23[1] = v26;
      sub_100018074(v27, v25);
      return a1;
    }
    sub_10003F900((uint64_t)v23);
  }
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  return a1;
}

uint64_t sub_10004A014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004A028);
}

uint64_t sub_10004A028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B84A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32) + 8) >> 60;
    BOOL v11 = ((4 * v10) & 0xC) == 0;
    unsigned int v12 = ((4 * v10) & 0xC | (v10 >> 2)) ^ 0xF;
    if (v11) {
      return 0;
    }
    else {
      return v12;
    }
  }
}

uint64_t sub_10004A0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004A108);
}

uint64_t sub_10004A108(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000B84A0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    BOOL v11 = (void *)(a1 + *(int *)(a4 + 32));
    *BOOL v11 = 0;
    v11[1] = (unint64_t)((~a2 >> 2) & 3 | (4 * ~a2)) << 60;
  }
  return result;
}

uint64_t sub_10004A1D4()
{
  uint64_t result = sub_1000B84A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10004A27C()
{
  unint64_t result = qword_1000ED1E0;
  if (!qword_1000ED1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED1E0);
  }
  return result;
}

unint64_t sub_10004A2D4()
{
  unint64_t result = qword_1000ED1E8;
  if (!qword_1000ED1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED1E8);
  }
  return result;
}

unint64_t sub_10004A32C()
{
  unint64_t result = qword_1000ED1F0;
  if (!qword_1000ED1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED1F0);
  }
  return result;
}

unint64_t sub_10004A384()
{
  unint64_t result = qword_1000ED1F8;
  if (!qword_1000ED1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED1F8);
  }
  return result;
}

unint64_t sub_10004A3DC()
{
  unint64_t result = qword_1000ED200;
  if (!qword_1000ED200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED200);
  }
  return result;
}

unint64_t sub_10004A434()
{
  unint64_t result = qword_1000ED208;
  if (!qword_1000ED208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED208);
  }
  return result;
}

uint64_t sub_10004A488(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 8) {
    return 8;
  }
  else {
    return a1 - 1;
  }
}

ValueMetadata *type metadata accessor for RelayReachabilityRequestUnpacker()
{
  return &type metadata for RelayReachabilityRequestUnpacker;
}

uint64_t sub_10004A4AC()
{
  return sub_10004BD28(&qword_1000ED210, (void (*)(uint64_t))&type metadata accessor for RelayReachabilityRequest);
}

uint64_t sub_10004A4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v19[7] = a2;
  uint64_t v3 = sub_10001295C(&qword_1000EC678);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001295C(&qword_1000ED220);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000BB280();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unsigned int v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + 8);
  LOBYTE(v11) = *(unsigned char *)(a1 + 17);
  v19[5] = *(void *)a1;
  if (v11)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for RelayReachabilityContextChatStyle.none(_:), v9);
    swift_bridgeObjectRetain();
    sub_1000184DC((uint64_t)v8, &qword_1000ED220);
  }
  else
  {
    uint64_t v14 = (unsigned int *)&enum case for RelayReachabilityContextChatStyle.groupChat(_:);
    if (*(unsigned char *)(a1 + 16) != 43) {
      uint64_t v14 = (unsigned int *)&enum case for RelayReachabilityContextChatStyle.instantMessage(_:);
    }
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v8, *v14, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    swift_bridgeObjectRetain();
  }
  uint64_t v15 = *(void *)(a1 + 32);
  v19[3] = *(void *)(a1 + 24);
  v19[4] = v13;
  uint64_t v16 = *(void *)(a1 + 48);
  v19[6] = v12;
  v19[1] = v5;
  v19[2] = v15;
  if (v16)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000B8350();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = sub_1000B8380();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 1, 1, v17);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000BAEC0();
  return sub_10004BDC4(a1);
}

uint64_t sub_10004A864@<X0>(uint64_t a1@<X8>)
{
  uint64_t v115 = a1;
  uint64_t v1 = sub_10001295C(&qword_1000EC628);
  __chkstk_darwin(v1 - 8);
  uint64_t v117 = (char *)&v113 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_1000BBF10();
  uint64_t v128 = *(uint8_t **)(v131 - 8);
  uint64_t v3 = __chkstk_darwin(v131);
  uint64_t v119 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  v123.i64[0] = (uint64_t)&v113 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v129 = (uint8_t *)&v113 - v8;
  __chkstk_darwin(v7);
  uint64_t v126 = ((char *)&v113 - v9);
  uint64_t v10 = sub_1000BAED0();
  __chkstk_darwin(v10 - 8);
  uint64_t v120 = (uint8_t *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000BAEF0();
  uint64_t v113 = *(void *)(v12 - 8);
  uint64_t v114 = v12;
  __chkstk_darwin(v12);
  uint64_t v116 = (uint8_t *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v14 - 8);
  uint64_t v127 = (char *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000B87C0();
  uint64_t v137 = *(void *)(v16 - 8);
  uint64_t v138 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v121 = (uint8_t *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v124 = (char *)&v113 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v122 = (uint8_t *)&v113 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v25 = (char *)&v113 - v24;
  __chkstk_darwin(v23);
  uint64_t v136 = (char *)&v113 - v26;
  uint64_t v132 = (void *)sub_1000B86C0();
  uint64_t v27 = *(v132 - 1);
  __chkstk_darwin(v132);
  uint64_t v29 = (char *)&v113 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_1000BB6C0();
  uint64_t v133 = *(void *)(v139 - 8);
  uint64_t v30 = __chkstk_darwin(v139);
  uint64_t v118 = (uint8_t *)&v113 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v125 = (uint8_t *)&v113 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  char v36 = (char *)&v113 - v35;
  __chkstk_darwin(v34);
  char v38 = (char *)&v113 - v37;
  Class isa = sub_1000B82B0().super.isa;
  id v40 = [(objc_class *)isa _imOptionallyDecompressData];

  uint64_t v41 = sub_1000B82D0();
  unint64_t v43 = v42;

  unint64_t v134 = v43;
  uint64_t v135 = v41;
  switch(v43 >> 62)
  {
    case 1uLL:
      LODWORD(v44) = HIDWORD(v41) - v41;
      if (__OFSUB__(HIDWORD(v41), v41))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x10004BD00);
      }
      uint64_t v44 = (int)v44;
LABEL_6:
      if (v44 > 0)
      {
        sub_1000B81C0();
        swift_allocObject();
        uint64_t v48 = sub_1000B81B0();
        sub_10004BD70();
        uint64_t v49 = (uint64_t)v130;
        sub_1000B81A0();
        if (v49)
        {
          uint64_t v136 = (char *)v48;
          uint64_t v141 = (void (*)(void, void, void))v49;
          swift_errorRetain();
          sub_10001295C(&qword_1000EC648);
          id v51 = v126;
          uint64_t v52 = v131;
          if (swift_dynamicCast())
          {
            swift_errorRelease();
            unint64_t v54 = v128;
            uint64_t v53 = v129;
            (*((void (**)(uint8_t *, NSObject *, uint64_t))v128 + 4))(v129, v51, v52);
            id v55 = v122;
            sub_1000B8790();
            uint64_t v56 = v123.i64[0];
            uint64_t v130 = (void (*)(uint64_t, uint8_t *, uint64_t))*((void *)v54 + 2);
            v130(v123.i64[0], v53, v52);
            uint64_t v57 = sub_1000B87B0();
            os_log_type_t v58 = sub_1000BBBE0();
            LODWORD(v121) = v58;
            if (os_log_type_enabled(v57, v58))
            {
              uint64_t v59 = swift_slowAlloc();
              uint64_t v120 = (uint8_t *)swift_slowAlloc();
              uint64_t v170 = v120;
              uint64_t v116 = (uint8_t *)v59;
              *(_DWORD *)uint64_t v59 = 136446210;
              uint64_t v126 = (v59 + 4);
              uint64_t v60 = (uint64_t)v117;
              v130((uint64_t)v117, (uint8_t *)v56, v52);
              (*((void (**)(uint64_t, void, uint64_t, uint64_t))v128 + 7))(v60, 0, 1, v52);
              uint64_t v61 = sub_1000BB200();
              unint64_t v63 = v62;
              sub_1000184DC(v60, &qword_1000EC628);
              uint64_t v64 = v61;
              uint64_t v52 = v131;
              uint64_t v140 = sub_10007ABB4(v64, v63, (uint64_t *)&v170);
              sub_1000BBE50();
              swift_bridgeObjectRelease();
              uint64_t v126 = *((void *)v128 + 1);
              ((void (*)(uint64_t, uint64_t))v126)(v123.i64[0], v52);
              _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v121, "RelayReachabilityRequestDictionary unpacking error: %{public}s", v116, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v65 = *(void (**)(uint8_t *, uint64_t))(v137 + 8);
              unint64_t v66 = v122;
            }
            else
            {
              uint64_t v126 = *((void *)v54 + 1);
              ((void (*)(uint64_t, uint64_t))v126)(v56, v52);

              uint64_t v65 = *(void (**)(uint8_t *, uint64_t))(v137 + 8);
              unint64_t v66 = v55;
            }
            v123.i64[0] = (uint64_t)v65;
            v65(v66, v138);
            uint64_t v94 = v132;
            (*(void (**)(char *, void, void *))(v27 + 104))(v29, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v132);
            sub_1000B86B0();
            (*(void (**)(char *, void *))(v27 + 8))(v29, v94);
            v130((uint64_t)v119, v129, v52);
            uint64_t v95 = v125;
            sub_1000BB6A0();
            uint64_t v96 = v124;
            sub_1000B8790();
            uint64_t v97 = v133;
            uint64_t v98 = *(void (**)(uint64_t, uint8_t *, uint64_t))(v133 + 16);
            uint64_t v99 = v118;
            uint64_t v100 = v139;
            uint64_t v132 = (void *)(v133 + 16);
            uint64_t v130 = v98;
            v98((uint64_t)v118, v95, v139);
            uint64_t v101 = sub_1000B87B0();
            os_log_type_t v102 = sub_1000BBBE0();
            if (os_log_type_enabled(v101, v102))
            {
              uint64_t v103 = (uint8_t *)swift_slowAlloc();
              uint64_t v122 = (uint8_t *)swift_slowAlloc();
              uint64_t v170 = v122;
              *(_DWORD *)uint64_t v103 = 136446210;
              uint64_t v120 = v103 + 4;
              uint64_t v121 = v103;
              uint64_t v104 = (uint64_t)v127;
              v130((uint64_t)v127, v99, v100);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v97 + 56))(v104, 0, 1, v100);
              uint64_t v105 = sub_1000BB200();
              unint64_t v107 = v106;
              sub_1000184DC(v104, &qword_1000EC630);
              uint64_t v140 = sub_10007ABB4(v105, v107, (uint64_t *)&v170);
              sub_1000BBE50();
              uint64_t v100 = v139;
              swift_bridgeObjectRelease();
              uint64_t v108 = *(void (**)(char *, uint64_t))(v97 + 8);
              v108((char *)v99, v100);
              _os_log_impl((void *)&_mh_execute_header, v101, v102, "RelayReachabilityRequestDictionary unpacking explosion: %{public}s", v121, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              ((void (*)(char *, uint64_t))v123.i64[0])(v124, v138);
            }
            else
            {
              uint64_t v108 = *(void (**)(char *, uint64_t))(v97 + 8);
              v108((char *)v99, v100);

              ((void (*)(char *, uint64_t))v123.i64[0])(v96, v138);
            }
            unint64_t v109 = v134;
            sub_10004BD28((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
            swift_allocError();
            uint64_t v110 = (char *)v125;
            v130(v111, v125, v100);
            swift_willThrow();
            sub_100018074(v135, v109);
            swift_release();
            v108(v110, v100);
            ((void (*)(uint8_t *, uint64_t))v126)(v129, v131);
            return swift_errorRelease();
          }
          swift_errorRelease();
          id v88 = v121;
          sub_1000B8790();
          swift_errorRetain();
          swift_errorRetain();
          uint64_t v89 = sub_1000B87B0();
          os_log_type_t v90 = sub_1000BBBE0();
          if (os_log_type_enabled(v89, v90))
          {
            uint64_t v91 = (uint8_t *)swift_slowAlloc();
            uint64_t v141 = (void (*)(void, void, void))swift_slowAlloc();
            *(_DWORD *)uint64_t v91 = 136446210;
            uint64_t v170 = (uint8_t *)v49;
            uint64_t v92 = sub_1000BB200();
            uint64_t v170 = (uint8_t *)sub_10007ABB4(v92, v93, (uint64_t *)&v141);
            sub_1000BBE50();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v89, v90, "RelayReachabilityRequestDictionary unpacking unknown error: %{public}s", v91, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(uint8_t *, uint64_t))(v137 + 8))(v121, v138);
          }
          else
          {
            swift_errorRelease();
            swift_errorRelease();

            (*(void (**)(uint8_t *, uint64_t))(v137 + 8))(v88, v138);
          }
          swift_getErrorValue();
          swift_getDynamicType();
          uint64_t v141 = 0;
          unint64_t v142 = 0xE000000000000000;
          sub_1000BBED0(22);
          swift_bridgeObjectRelease();
          uint64_t v141 = (void (*)(void, void, void))0xD000000000000014;
          unint64_t v142 = 0x80000001000C9380;
          v171._countAndFlagsBits = sub_1000BC2B0();
          sub_1000BB9A0(v171);
          swift_bridgeObjectRelease();
          sub_10004BD28((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
          swift_allocError();
          sub_1000BB6B0();
          swift_willThrow();
          swift_errorRelease();
        }
        else
        {
          uint64_t v139 = (uint64_t)v141;
          uint64_t v122 = (uint8_t *)v142;
          uint64_t v83 = v143;
          Swift::String v84 = v144;
          LODWORD(v129) = v145;
          LODWORD(v128) = v146;
          uint64_t v136 = v148;
          uint64_t v126 = v149;
          uint64_t v127 = v147;
          uint64_t v131 = v152;
          uint64_t v124 = v153;
          uint64_t v125 = v151;
          uint64_t v132 = v154;
          uint64_t v133 = v150;
          v50.i32[0] = v155;
          int16x8_t v123 = (int16x8_t)vmovl_u8(v50);
          LODWORD(v130) = v156;
          sub_1000B8790();
          id v85 = sub_1000B87B0();
          os_log_type_t v86 = sub_1000BBBE0();
          if (os_log_type_enabled(v85, v86))
          {
            uint64_t v87 = (uint8_t *)swift_slowAlloc();
            uint64_t v121 = v84;
            *(_WORD *)uint64_t v87 = 0;
            _os_log_impl((void *)&_mh_execute_header, v85, v86, "Unpacking RelayReachabilityRequestDictionary", v87, 2u);
            Swift::String v84 = v121;
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v137 + 8))(v25, v138);
          v157[0] = v83;
          v157[1] = v84;
          char v158 = (char)v129;
          char v159 = (char)v128;
          uint64_t v160 = v127;
          uint64_t v161 = v136;
          uint64_t v162 = v126;
          uint64_t v163 = v133;
          uint64_t v164 = v125;
          uint64_t v165 = v131;
          uint64_t v166 = v124;
          uint64_t v167 = v132;
          unsigned __int32 v168 = vmovn_s16(v123).u32[0];
          char v169 = (char)v130;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10004A4F4((uint64_t)v157, (uint64_t)v120);
          uint64_t v112 = v116;
          sub_1000BAEE0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint8_t *, uint64_t))(v113 + 32))(v115, v112, v114);
        }
        swift_release();
        return sub_100018074(v135, v134);
      }
LABEL_11:
      unint64_t v67 = v132;
      (*(void (**)(char *, void, void *))(v27 + 104))(v29, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v132);
      sub_1000B86B0();
      (*(void (**)(char *, void *))(v27 + 8))(v29, v67);
      sub_1000BB6B0();
      sub_1000B8790();
      uint64_t v68 = v133;
      uint64_t v69 = v139;
      uint64_t v132 = *(void **)(v133 + 16);
      ((void (*)(char *, char *, uint64_t))v132)(v36, v38, v139);
      uint64_t v70 = sub_1000B87B0();
      os_log_type_t v71 = sub_1000BBBE0();
      int v72 = v71;
      if (os_log_type_enabled(v70, v71))
      {
        LODWORD(v131) = v72;
        uint64_t v73 = (uint8_t *)swift_slowAlloc();
        uint64_t v130 = (void (*)(uint64_t, uint8_t *, uint64_t))swift_slowAlloc();
        uint64_t v141 = (void (*)(void, void, void))v130;
        *(_DWORD *)uint64_t v73 = 136446210;
        uint64_t v128 = v73 + 4;
        uint64_t v129 = v73;
        uint64_t v74 = (uint64_t)v127;
        ((void (*)(char *, char *, uint64_t))v132)(v127, v36, v139);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v74, 0, 1, v139);
        uint64_t v75 = sub_1000BB200();
        uint64_t v126 = v70;
        uint64_t v76 = v75;
        unint64_t v78 = v77;
        sub_1000184DC(v74, &qword_1000EC630);
        uint64_t v170 = (uint8_t *)sub_10007ABB4(v76, v78, (uint64_t *)&v141);
        uint64_t v69 = v139;
        sub_1000BBE50();
        swift_bridgeObjectRelease();
        uint64_t v79 = *(void (**)(char *, uint64_t))(v68 + 8);
        v79(v36, v69);
        os_log_t v80 = v126;
        _os_log_impl((void *)&_mh_execute_header, v126, (os_log_type_t)v131, "Message unpacking explosion: %{public}s", v129, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v79 = *(void (**)(char *, uint64_t))(v68 + 8);
        v79(v36, v69);
      }
      (*(void (**)(char *, uint64_t))(v137 + 8))(v136, v138);
      sub_10004BD28((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      ((void (*)(uint64_t, char *, uint64_t))v132)(v81, v38, v69);
      swift_willThrow();
      sub_100018074(v135, v134);
      return ((uint64_t (*)(char *, uint64_t))v79)(v38, v69);
    case 2uLL:
      uint64_t v46 = *(void *)(v41 + 16);
      uint64_t v45 = *(void *)(v41 + 24);
      BOOL v47 = __OFSUB__(v45, v46);
      uint64_t v44 = v45 - v46;
      if (!v47) {
        goto LABEL_6;
      }
      goto LABEL_29;
    case 3uLL:
      goto LABEL_11;
    default:
      uint64_t v44 = BYTE6(v43);
      goto LABEL_6;
  }
}

uint64_t sub_10004BD10@<X0>(uint64_t a1@<X8>)
{
  return sub_10004A864(a1);
}

uint64_t sub_10004BD28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10004BD70()
{
  unint64_t result = qword_1000ED218;
  if (!qword_1000ED218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED218);
  }
  return result;
}

uint64_t sub_10004BDC4(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for SyndicationActionUnpacker()
{
  return &type metadata for SyndicationActionUnpacker;
}

uint64_t sub_10004BE40()
{
  return sub_10004DAA8(&qword_1000ED228, (void (*)(uint64_t))&type metadata accessor for SyndicationAction);
}

uint64_t sub_10004BE88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v55 = sub_1000B8FF0();
  uint64_t v58 = *(void *)(v55 - 8);
  uint64_t v3 = __chkstk_darwin(v55);
  uint64_t v56 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v62 = (char *)&v54 - v5;
  uint64_t v6 = sub_1000BA720();
  uint64_t v59 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000BB6C0();
  uint64_t v60 = *(char **)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v63 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000BA770();
  uint64_t v64 = *(void *)(v14 - 8);
  uint64_t v65 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v54 - v18;
  int v20 = *(unsigned __int8 *)(a1 + 1);
  sub_1000BA750();
  if (v20 == sub_1000BA760())
  {
    uint64_t v60 = v17;
    unint64_t v63 = v19;
    uint64_t v21 = v61;
    uint64_t v22 = v59;
    uint64_t v23 = v8;
    if (*(unsigned char *)a1 != 2)
    {
      sub_100018190();
      uint64_t v24 = sub_1000BBCE0();
      os_log_type_t v25 = sub_1000BBBE0();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 16777472;
        char v68 = 2;
        sub_1000BBE50();
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "SyndicationAction version greater than known version or lower than the minimum version expected. Unpacking to version %hhu", v26, 5u);
        uint64_t v21 = v61;
        swift_slowDealloc();
      }
    }
    if ((sub_1000BA6F0() & 1) == 0)
    {
      sub_100018190();
      uint64_t v27 = sub_1000BBCE0();
      os_log_type_t v28 = sub_1000BBBE0();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = v23;
        uint64_t v30 = v22;
        uint64_t v31 = v6;
        uint64_t v32 = v21;
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 16777472;
        char v68 = 2;
        sub_1000BBE50();
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "SyndicationAction type not valid, defaulting to none %hhu", v33, 5u);
        uint64_t v21 = v32;
        uint64_t v6 = v31;
        uint64_t v22 = v30;
        uint64_t v23 = v29;
        swift_slowDealloc();
      }

      sub_1000BA700();
      sub_1000BA710();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v6);
    }
    uint64_t v34 = *(void *)(a1 + 8);
    uint64_t v35 = SyndicationActionDictionary.messagePartRange()();
    uint64_t v61 = *(void *)(a1 + 48);
    long long v36 = *(_OWORD *)(a1 + 112);
    v66[2] = *(_OWORD *)(a1 + 96);
    v66[3] = v36;
    char v67 = *(unsigned char *)(a1 + 128);
    long long v37 = *(_OWORD *)(a1 + 80);
    v66[0] = *(_OWORD *)(a1 + 64);
    v66[1] = v37;
    swift_bridgeObjectRetain();
    sub_10004DAF0((uint64_t)v66);
    char v38 = v62;
    sub_10009FA60(v66);
    if (v21)
    {
      (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v65);
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v49 = v64;
      uint8x8_t v50 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
      uint64_t v59 = v34;
      v50(v60, v63, v65);
      uint64_t v54 = v35;
      uint64_t v51 = v58;
      uint64_t v52 = v38;
      uint64_t v53 = v55;
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v56, v52, v55);
      sub_1000BA740();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v62, v53);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v63, v65);
    }
  }
  else
  {
    id v40 = v63;
    sub_1000BB6B0();
    sub_100018190();
    uint64_t v41 = (void *)sub_1000BBD70();
    sub_10001295C(&qword_1000EC5C8);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1000BF8A0;
    unint64_t v43 = v60;
    unint64_t v62 = (char *)*((void *)v60 + 2);
    ((void (*)(char *, char *, uint64_t))v62)(v11, v40, v12);
    (*((void (**)(char *, void, uint64_t, uint64_t))v43 + 7))(v11, 0, 1, v12);
    uint64_t v44 = sub_1000BB200();
    uint64_t v46 = v45;
    sub_1000184DC((uint64_t)v11, &qword_1000EC630);
    *(void *)(v42 + 56) = &type metadata for String;
    *(void *)(v42 + 64) = sub_10001824C();
    *(void *)(v42 + 32) = v44;
    *(void *)(v42 + 40) = v46;
    sub_1000BBBE0();
    sub_1000B8770();

    swift_bridgeObjectRelease();
    sub_10004DAA8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    BOOL v47 = v63;
    ((void (*)(uint64_t, char *, uint64_t))v62)(v48, v63, v12);
    swift_willThrow();
    (*((void (**)(char *, uint64_t))v43 + 1))(v47, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v19, v65);
  }
}

uint64_t sub_10004C688@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000B8700();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B81C0();
  swift_allocObject();
  sub_1000B81B0();
  sub_10004DAA8(&qword_1000EC620, (void (*)(uint64_t))&type metadata accessor for TopLevelDictionary);
  sub_1000B81A0();
  if (v1) {
    return swift_release();
  }
  uint64_t v7 = sub_10004CA30();
  unint64_t v9 = v8;
  uint64_t v10 = sub_10004CDB8();
  unint64_t v27 = v11;
  uint64_t v12 = v10;
  sub_10004D170((uint64_t)v26);
  uint64_t v23 = v12;
  sub_10004BE88((uint64_t)v26, a1);
  sub_10004DA50((uint64_t)v26);
  sub_100018190();
  uint64_t v22 = sub_1000BBD70();
  sub_10001295C(&qword_1000EC5C8);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1000BF8A0;
  uint64_t v24 = sub_1000BA730();
  uint64_t v25 = v13;
  uint64_t v14 = sub_1000BB200();
  uint64_t v20 = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)v21;
  *(void *)(v21 + 56) = &type metadata for String;
  v16[8] = sub_10001824C();
  uint64_t v17 = v20;
  v16[4] = v14;
  v16[5] = v17;
  sub_1000BBBE0();
  uint64_t v18 = (void *)v22;
  sub_1000B8770();

  swift_bridgeObjectRelease();
  sub_100018074(v23, v27);
  sub_100018074(v7, v9);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10004CA18@<X0>(uint64_t a1@<X8>)
{
  return sub_10004C688(a1);
}

uint64_t sub_10004CA30()
{
  uint64_t v0 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000BB6C0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000B86D0();
  uint64_t v9 = v7;
  unint64_t v10 = v8;
  if (v8 >> 60 != 15)
  {
    switch(v8 >> 62)
    {
      case 1uLL:
        if ((int)v7 == v7 >> 32) {
          goto LABEL_8;
        }
        return v9;
      case 2uLL:
        if (*(void *)(v7 + 16) == *(void *)(v7 + 24)) {
          goto LABEL_8;
        }
        return v9;
      case 3uLL:
        goto LABEL_8;
      default:
        if ((v8 & 0xFF000000000000) != 0) {
          return v9;
        }
LABEL_8:
        sub_1000180CC(v7, v8);
        break;
    }
  }
  sub_1000BB6B0();
  sub_100018190();
  uint64_t v19 = v9;
  unint64_t v11 = (void *)sub_1000BBD70();
  sub_10001295C(&qword_1000EC5C8);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1000BF8A0;
  v18[1] = v10;
  v18[0] = *(void *)(v4 + 16);
  ((void (*)(char *, char *, uint64_t))v18[0])(v2, v6, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  uint64_t v13 = sub_1000BB200();
  uint64_t v15 = v14;
  sub_1000184DC((uint64_t)v2, &qword_1000EC630);
  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 64) = sub_10001824C();
  *(void *)(v12 + 32) = v13;
  *(void *)(v12 + 40) = v15;
  sub_1000BBBE0();
  sub_1000B8770();

  uint64_t v9 = v19;
  swift_bridgeObjectRelease();
  sub_10004DAA8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
  swift_allocError();
  ((void (*)(uint64_t, char *, uint64_t))v18[0])(v16, v6, v3);
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

uint64_t sub_10004CDB8()
{
  uint64_t v0 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000BB6C0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class isa = sub_1000B82B0().super.isa;
  id v8 = [(objc_class *)isa _imOptionallyDecompressData];

  uint64_t v9 = sub_1000B82D0();
  unint64_t v11 = v10;

  switch(v11 >> 62)
  {
    case 1uLL:
      if ((int)v9 == v9 >> 32) {
        goto LABEL_7;
      }
      break;
    case 2uLL:
      if (*(void *)(v9 + 16) == *(void *)(v9 + 24)) {
        goto LABEL_7;
      }
      break;
    case 3uLL:
      goto LABEL_7;
    default:
      if ((v11 & 0xFF000000000000) == 0)
      {
LABEL_7:
        sub_1000BB6B0();
        sub_100018190();
        uint64_t v22 = sub_1000BBD70();
        sub_10001295C(&qword_1000EC5C8);
        uint64_t v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_1000BF8A0;
        uint64_t v24 = v9;
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
        v23(v2, v6, v3);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
        uint64_t v13 = v4;
        uint64_t v14 = sub_1000BB200();
        unint64_t v15 = v11;
        uint64_t v17 = v16;
        sub_1000184DC((uint64_t)v2, &qword_1000EC630);
        *(void *)(v12 + 56) = &type metadata for String;
        *(void *)(v12 + 64) = sub_10001824C();
        *(void *)(v12 + 32) = v14;
        *(void *)(v12 + 40) = v17;
        unint64_t v18 = v15;
        sub_1000BBBE0();
        uint64_t v19 = (void *)v22;
        sub_1000B8770();

        swift_bridgeObjectRelease();
        sub_10004DAA8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
        v23(v20, v6, v3);
        uint64_t v9 = v24;
        swift_willThrow();
        sub_100018074(v9, v18);
        (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v3);
      }
      break;
  }
  return v9;
}

uint64_t sub_10004D170@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v2 - 8);
  uint64_t v57 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001295C(&qword_1000EC628);
  __chkstk_darwin(v4 - 8);
  uint64_t v56 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000B86C0();
  uint64_t v55 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1000BB6C0();
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  unint64_t v62 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000BBF10();
  uint64_t v59 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v61 = (char *)&v53 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v53 - v16;
  sub_10004DB3C();
  uint64_t v18 = v63;
  uint64_t result = sub_1000B81A0();
  if (v18)
  {
    *(void *)&long long v64 = v18;
    swift_errorRetain();
    sub_10001295C(&qword_1000EC648);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      uint64_t v20 = v59;
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
      uint64_t v54 = v10;
      v21(v61, v17, v10);
      uint64_t v22 = v55;
      (*(void (**)(char *, void, uint64_t))(v55 + 104))(v8, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v6);
      sub_1000B86B0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
      uint64_t v23 = v20;
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
      uint64_t v25 = v61;
      uint64_t v26 = v54;
      v24(v13, v61, v54);
      sub_1000BB6A0();
      sub_100018190();
      unint64_t v27 = (void *)sub_1000BBD70();
      uint64_t v55 = sub_10001295C(&qword_1000EC5C8);
      uint64_t v28 = swift_allocObject();
      long long v63 = xmmword_1000BF8A0;
      *(_OWORD *)(v28 + 16) = xmmword_1000BF8A0;
      uint64_t v29 = (uint64_t)v56;
      v24(v56, v25, v26);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v29, 0, 1, v26);
      uint64_t v30 = sub_1000BB200();
      uint64_t v32 = v31;
      sub_1000184DC(v29, &qword_1000EC628);
      *(void *)(v28 + 56) = &type metadata for String;
      unint64_t v33 = sub_10001824C();
      *(void *)(v28 + 64) = v33;
      *(void *)(v28 + 32) = v30;
      *(void *)(v28 + 40) = v32;
      sub_1000BBBE0();
      sub_1000B8770();

      swift_bridgeObjectRelease();
      uint64_t v34 = (void *)sub_1000BBD70();
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = v63;
      uint64_t v36 = v58;
      *(void *)&long long v63 = *(void *)(v58 + 16);
      uint64_t v37 = (uint64_t)v57;
      uint64_t v38 = v60;
      ((void (*)(char *, char *, uint64_t))v63)(v57, v62, v60);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v38);
      uint64_t v39 = sub_1000BB200();
      uint64_t v41 = v40;
      sub_1000184DC(v37, &qword_1000EC630);
      *(void *)(v35 + 56) = &type metadata for String;
      *(void *)(v35 + 64) = v33;
      *(void *)(v35 + 32) = v39;
      *(void *)(v35 + 40) = v41;
      sub_1000BBBE0();
      sub_1000B8770();

      swift_bridgeObjectRelease();
      sub_10004DAA8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      uint64_t v42 = v62;
      ((void (*)(uint64_t, char *, uint64_t))v63)(v43, v62, v38);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v42, v38);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v54);
    }
    else
    {
      swift_errorRelease();
      sub_100018190();
      uint64_t v48 = (void *)sub_1000BBD70();
      sub_10001295C(&qword_1000EC5C8);
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_1000BF8A0;
      *(void *)&long long v64 = v18;
      uint64_t v50 = sub_1000BB200();
      uint64_t v52 = v51;
      *(void *)(v49 + 56) = &type metadata for String;
      *(void *)(v49 + 64) = sub_10001824C();
      *(void *)(v49 + 32) = v50;
      *(void *)(v49 + 40) = v52;
      sub_1000BBBE0();
      sub_1000B8770();

      swift_bridgeObjectRelease();
      swift_getErrorValue();
      swift_getDynamicType();
      *(void *)&long long v64 = 0;
      *((void *)&v64 + 1) = 0xE000000000000000;
      sub_1000BBED0(22);
      swift_bridgeObjectRelease();
      *(void *)&long long v64 = 0xD000000000000014;
      *((void *)&v64 + 1) = 0x80000001000C9380;
      v73._countAndFlagsBits = sub_1000BC2B0();
      sub_1000BB9A0(v73);
      swift_bridgeObjectRelease();
      sub_10004DAA8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();
    }
    return swift_errorRelease();
  }
  else
  {
    long long v44 = v71;
    *(_OWORD *)(a1 + 96) = v70;
    *(_OWORD *)(a1 + 112) = v44;
    *(unsigned char *)(a1 + 128) = v72;
    long long v45 = v67;
    *(_OWORD *)(a1 + 32) = v66;
    *(_OWORD *)(a1 + 48) = v45;
    long long v46 = v69;
    *(_OWORD *)(a1 + 64) = v68;
    *(_OWORD *)(a1 + 80) = v46;
    long long v47 = v65;
    *(_OWORD *)a1 = v64;
    *(_OWORD *)(a1 + 16) = v47;
  }
  return result;
}

uint64_t sub_10004DA50(uint64_t a1)
{
  return a1;
}

uint64_t sub_10004DAA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004DAF0(uint64_t a1)
{
  return a1;
}

unint64_t sub_10004DB3C()
{
  unint64_t result = qword_1000ED230;
  if (!qword_1000ED230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED230);
  }
  return result;
}

uint64_t sub_10004DB90(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1868985701;
  }
  else {
    uint64_t v3 = 118;
  }
  if (v2) {
    unint64_t v4 = 0xE100000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1868985701;
  }
  else {
    uint64_t v5 = 118;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE100000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1000BC1A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10004DC24(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 110;
    }
    else {
      uint64_t v3 = 6580579;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE100000000000000;
    }
    else {
      unint64_t v4 = 0xE300000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 110;
      }
      else {
        uint64_t v6 = 6580579;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE100000000000000;
      }
      else {
        unint64_t v7 = 0xE300000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE100000000000000;
    uint64_t v3 = 104;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE100000000000000;
  if (v3 != 104)
  {
LABEL_21:
    char v8 = sub_1000BC1A0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_10004DD00(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x64692D6D616461;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x64692D6D616461;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6C737365636361;
      break;
    case 2:
      uint64_t v5 = 0x692D656C646E7562;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1701667182;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x68736E656770;
      break;
    case 5:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x77736E656770;
      break;
    case 6:
      uint64_t v5 = 0x637A736E656770;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x6C737365636361) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xE900000000000064;
      if (v5 != 0x692D656C646E7562) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1701667182) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x68736E656770) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x77736E656770;
      goto LABEL_18;
    case 6:
      if (v5 != 0x637A736E656770) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_1000BC1A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10004DF24(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 103;
  }
  else {
    uint64_t v3 = 29793;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xE100000000000000;
  }
  if (a2) {
    uint64_t v5 = 103;
  }
  else {
    uint64_t v5 = 29793;
  }
  if (a2) {
    unint64_t v6 = 0xE100000000000000;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1000BC1A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10004DFB4(char a1, char a2)
{
  if (qword_1000C22B0[a1] == qword_1000C22B0[a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1000BC1A0();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_10004E01C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x616F6C7961705F5FLL;
  }
  else {
    uint64_t v3 = 0x6863617474615F5FLL;
  }
  if (v2) {
    unint64_t v4 = 0xEF5F5F73746E656DLL;
  }
  else {
    unint64_t v4 = 0xEB000000005F5F64;
  }
  if (a2) {
    uint64_t v5 = 0x616F6C7961705F5FLL;
  }
  else {
    uint64_t v5 = 0x6863617474615F5FLL;
  }
  if (a2) {
    unint64_t v6 = 0xEB000000005F5F64;
  }
  else {
    unint64_t v6 = 0xEF5F5F73746E656DLL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1000BC1A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10004E0D8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 4475235;
    }
    else {
      uint64_t v3 = 25444;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE300000000000000;
    }
    else {
      unint64_t v4 = 0xE200000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 4475235;
      }
      else {
        uint64_t v6 = 25444;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE300000000000000;
      }
      else {
        unint64_t v7 = 0xE200000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE200000000000000;
    uint64_t v3 = 22131;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE200000000000000;
  if (v3 != 22131)
  {
LABEL_21:
    char v8 = sub_1000BC1A0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_10004E1B4(char a1, char a2)
{
  unint64_t v3 = 0xE100000000000000;
  uint64_t v4 = 115;
  switch(a1)
  {
    case 1:
      uint64_t v4 = 101;
      break;
    case 2:
      uint64_t v4 = 114;
      break;
    case 3:
      uint64_t v4 = 102;
      break;
    case 4:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v4 = 29539;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE100000000000000;
  uint64_t v6 = 115;
  switch(a2)
  {
    case 1:
      if (v4 == 101) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      if (v4 != 114) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v6 = 102;
      goto LABEL_12;
    case 4:
      unint64_t v5 = 0xE200000000000000;
      if (v4 != 29539) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v4 != v6) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1000BC1A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10004E2F4(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 1734959987;
  }
  else {
    uint64_t v2 = 1768977011;
  }
  if (a2) {
    uint64_t v3 = 1734959987;
  }
  else {
    uint64_t v3 = 1768977011;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1000BC1A0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_10004E364(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 7299942;
  }
  else {
    uint64_t v2 = 7234918;
  }
  if (a2) {
    uint64_t v3 = 7299942;
  }
  else {
    uint64_t v3 = 7234918;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1000BC1A0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_10004E3D4(char a1, char a2)
{
  if (qword_1000C22C8[a1] == qword_1000C22C8[a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1000BC1A0();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_10004E43C(char a1, char a2)
{
  uint64_t v3 = 6516065;
  unint64_t v4 = 0xE300000000000000;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 7564641;
      break;
    case 2:
      uint64_t v3 = 6450529;
      break;
    case 3:
      uint64_t v3 = 6581601;
      break;
    case 4:
      uint64_t v3 = 1650552161;
      unint64_t v4 = 0xE400000000000000;
      break;
    case 5:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v3 = 1634954593;
      break;
    case 6:
      uint64_t v3 = 7631733;
      break;
    case 7:
      uint64_t v3 = 7496296;
      break;
    default:
      break;
  }
  uint64_t v5 = 6516065;
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      if (v3 == 7564641) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      if (v3 != 6450529) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      if (v3 != 6581601) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      if (v3 != 1650552161) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      if (v3 != 1634954593) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      uint64_t v5 = 7631733;
      goto LABEL_21;
    case 7:
      if (v3 != 7496296) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v3 != v5) {
        goto LABEL_25;
      }
LABEL_22:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_1000BC1A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10004E624(char a1, char a2)
{
  if (*(void *)&aSait_0[8 * a1] == *(void *)&aSait_0[8 * a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1000BC1A0();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_10004E68C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 6778213;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 6778213;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 6910053;
      break;
    case 2:
      uint64_t v5 = 6451301;
      break;
    case 3:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 29797;
      break;
    case 4:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 29554;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 6910053) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      if (v5 != 6451301) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE200000000000000;
      uint64_t v2 = 29797;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE200000000000000;
      if (v5 != 29554) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1000BC1A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10004E7E8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 1701869940;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1701869940;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x2D746E65746E6F63;
      unint64_t v3 = 0xEA00000000006469;
      break;
    case 2:
      unint64_t v3 = 0x80000001000C8E30;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v5 = 1635017060;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000006469;
      if (v5 == 0x2D746E65746E6F63) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0x80000001000C8E30;
      unint64_t v2 = 0xD000000000000010;
      goto LABEL_9;
    case 3:
      if (v5 == 1635017060) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1000BC1A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10004E960(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 30320;
  switch(a1)
  {
    case 1:
      uint64_t v4 = 30311;
      break;
    case 2:
      unint64_t v3 = 0xE100000000000000;
      uint64_t v4 = 110;
      break;
    case 3:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v4 = 6580583;
      break;
    case 4:
      unint64_t v3 = 0xE100000000000000;
      uint64_t v4 = 112;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE200000000000000;
  uint64_t v6 = 30320;
  switch(a2)
  {
    case 1:
      if (v4 == 30311) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v5 = 0xE100000000000000;
      if (v4 != 110) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v5 = 0xE300000000000000;
      uint64_t v6 = 6580583;
      goto LABEL_12;
    case 4:
      unint64_t v5 = 0xE100000000000000;
      if (v4 != 112) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v4 != v6) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1000BC1A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10004EAB8(void *a1)
{
  uint64_t v3 = sub_10001295C(&qword_1000ED2B8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014C68(a1, a1[3]);
  sub_1000522A8();
  sub_1000BC280();
  v8[15] = 0;
  sub_1000BC0A0();
  if (!v1)
  {
    v8[14] = 1;
    sub_1000BC0A0();
    v8[13] = 2;
    sub_1000BC130();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10004EC40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10004DC24(*a1, *a2);
}

Swift::Int sub_10004EC4C()
{
  return sub_1000BC250();
}

uint64_t sub_10004ECD0()
{
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10004ED40()
{
  return sub_1000BC250();
}

uint64_t sub_10004EDC0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1000E0FC8;
  uint64_t result = sub_1000514F8(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

void sub_10004EDF8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE100000000000000;
  unint64_t v4 = 0xE100000000000000;
  uint64_t v5 = 110;
  if (v2 != 1)
  {
    uint64_t v5 = 6580579;
    unint64_t v4 = 0xE300000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 104;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_10004EE38()
{
  uint64_t v1 = 110;
  if (*v0 != 1) {
    uint64_t v1 = 6580579;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 104;
  }
}

uint64_t sub_10004EE74@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  v4._rawValue = &off_1000E0FC8;
  uint64_t result = sub_1000514F8(a1, a2, v4);
  *a3 = result;
  return result;
}

uint64_t sub_10004EEA4(uint64_t a1)
{
  unint64_t v2 = sub_1000522A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10004EEE0(uint64_t a1)
{
  unint64_t v2 = sub_1000522A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10004EF1C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10005108C(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_10004EF60(void *a1)
{
  return sub_10004EAB8(a1);
}

uint64_t sub_10004EF78(char *a1, char *a2)
{
  return sub_10004DB90(*a1, *a2);
}

Swift::Int sub_10004EF84()
{
  return sub_1000BC250();
}

uint64_t sub_10004EFF4()
{
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10004F050()
{
  return sub_1000BC250();
}

uint64_t sub_10004F0BC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  unint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_1000E1030;
  v8._object = v3;
  Swift::Int v5 = sub_1000BBFA0(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_10004F11C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 118;
  if (*v1) {
    uint64_t v2 = 1868985701;
  }
  unint64_t v3 = 0xE100000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10004F148()
{
  if (*v0) {
    return 1868985701;
  }
  else {
    return 118;
  }
}

uint64_t sub_10004F170@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_1000E1030;
  v9._object = a2;
  Swift::Int v6 = sub_1000BBFA0(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

uint64_t sub_10004F1D4(uint64_t a1)
{
  unint64_t v2 = sub_10004F420();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10004F210(uint64_t a1)
{
  unint64_t v2 = sub_10004F420();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t EmergencySOSChatSessionCloseDictionary.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001295C(&qword_1000ED238);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014C68(a1, a1[3]);
  sub_10004F420();
  sub_1000BC280();
  LOBYTE(v12) = 0;
  sub_1000BC150();
  if (!v2)
  {
    long long v9 = *(_OWORD *)(v3 + 24);
    long long v15 = *(_OWORD *)(v3 + 8);
    long long v16 = v9;
    long long v17 = *(_OWORD *)(v3 + 40);
    long long v20 = v17;
    sub_10004F474((uint64_t)&v16, (uint64_t)v19);
    sub_10004F474((uint64_t)&v15, (uint64_t)v18);
    long long v12 = v15;
    long long v13 = v16;
    long long v14 = v17;
    v11[15] = 1;
    sub_10004F4DC(v3);
    sub_10004F528();
    sub_1000BC160();
    sub_10001842C((uint64_t)v18);
    sub_10001842C((uint64_t)v19);
    sub_10001842C((uint64_t)&v20);
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_10004F420()
{
  unint64_t result = qword_1000ED240;
  if (!qword_1000ED240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED240);
  }
  return result;
}

uint64_t sub_10004F474(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EC5E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004F4DC(uint64_t a1)
{
  return a1;
}

unint64_t sub_10004F528()
{
  unint64_t result = qword_1000ED248;
  if (!qword_1000ED248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED248);
  }
  return result;
}

double EmergencySOSChatSessionCloseDictionary.init(from:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000512C0(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_10004F5CC(void *a1)
{
  return EmergencySOSChatSessionCloseDictionary.encode(to:)(a1);
}

uint64_t sub_10004F610(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10004E0D8(*a1, *a2);
}

Swift::Int sub_10004F61C()
{
  return sub_1000BC250();
}

uint64_t sub_10004F6A0()
{
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10004F710()
{
  return sub_1000BC250();
}

uint64_t sub_10004F790@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1000E1080;
  uint64_t result = sub_1000514F8(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

void sub_10004F7C8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE200000000000000;
  unint64_t v4 = 0xE300000000000000;
  uint64_t v5 = 4475235;
  if (v2 != 1)
  {
    uint64_t v5 = 25444;
    unint64_t v4 = 0xE200000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 22131;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_10004F808()
{
  uint64_t v1 = 4475235;
  if (*v0 != 1) {
    uint64_t v1 = 25444;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 22131;
  }
}

uint64_t sub_10004F844@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  v4._rawValue = &off_1000E1080;
  uint64_t result = sub_1000514F8(a1, a2, v4);
  *a3 = result;
  return result;
}

uint64_t sub_10004F874(uint64_t a1)
{
  unint64_t v2 = sub_1000514A4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10004F8B0(uint64_t a1)
{
  unint64_t v2 = sub_1000514A4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BusinessChatSessionCloseDictionary.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a3;
  v11[1] = a4;
  uint64_t v6 = sub_10001295C(&qword_1000ED250);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_1000514A4();
  sub_1000BC280();
  char v14 = 0;
  sub_1000BC150();
  if (!v4)
  {
    char v13 = 1;
    sub_1000BC130();
    char v12 = 2;
    sub_1000BC140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t BusinessChatSessionCloseDictionary.init(from:)(void *a1)
{
  uint64_t result = sub_100051540(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_10004FAB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100051540(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7 & 1;
  }
  return result;
}

uint64_t sub_10004FAE8(void *a1)
{
  return BusinessChatSessionCloseDictionary.encode(to:)(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_10004FB0C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v99 = a2;
  uint64_t v98 = (char *)a1;
  uint64_t v89 = a3;
  uint64_t v93 = sub_1000BBF10();
  unint64_t v94 = *(void *)(v93 - 8);
  uint64_t v3 = __chkstk_darwin(v93);
  uint64_t v92 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  os_log_type_t v90 = (char *)&v81 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v97 = (char *)&v81 - v8;
  __chkstk_darwin(v7);
  uint64_t v91 = (char *)&v81 - v9;
  uint64_t v10 = sub_1000BB5D0();
  __chkstk_darwin(v10 - 8);
  char v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000B86C0();
  uint64_t v96 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  long long v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000BB6C0();
  uint64_t v95 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000B8700();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B81C0();
  swift_allocObject();
  uint64_t v23 = sub_1000B81B0();
  sub_100052158(&qword_1000EC620, (void (*)(uint64_t))&type metadata accessor for TopLevelDictionary);
  uint64_t v99 = v19;
  uint64_t v24 = v100;
  sub_1000B81A0();
  if (v24) {
    return swift_release();
  }
  uint64_t v98 = v15;
  uint64_t v83 = v12;
  uint64_t v87 = 0;
  uint64_t v26 = v23;
  unint64_t v27 = v97;
  id v85 = v18;
  uint64_t v88 = v16;
  uint64_t v28 = sub_1000B86D0();
  if (v29 >> 60 != 15)
  {
    unint64_t v30 = v29;
    uint64_t v82 = v28;
    Class isa = sub_1000B82B0().super.isa;
    id v32 = [(objc_class *)isa _imOptionallyDecompressData];

    uint64_t v100 = sub_1000B82D0();
    unint64_t v34 = v33;

    unint64_t v86 = v34;
    uint64_t v84 = v26;
    uint64_t v35 = v87;
    switch(v34 >> 62)
    {
      case 1uLL:
        LODWORD(v36) = HIDWORD(v100) - v100;
        if (__OFSUB__(HIDWORD(v100), v100))
        {
          __break(1u);
LABEL_47:
          __break(1u);
        }
        uint64_t v36 = (int)v36;
LABEL_10:
        if (v36 <= 0)
        {
LABEL_17:
          unint64_t v55 = (unint64_t)v98;
          uint64_t v56 = v96;
          (*(void (**)(char *, void, uint64_t))(v96 + 104))(v98, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v13);
          sub_1000B86B0();
          (*(void (**)(unint64_t, uint64_t))(v56 + 8))(v55, v13);
          uint64_t v57 = v85;
          sub_1000BB6B0();
          sub_100052158((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
          uint64_t v58 = v88;
          swift_allocError();
          uint64_t v59 = v95;
          (*(void (**)(uint64_t, char *, uint64_t))(v95 + 16))(v60, v57, v58);
          swift_willThrow();
          sub_1000180CC(v82, v30);
          sub_100018074(v100, v86);
          swift_release();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v57, v58);
          return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v99);
        }
        uint64_t v40 = self;
        Class v41 = sub_1000B82B0().super.isa;
        id v102 = 0;
        id v42 = [v40 propertyListWithData:v41 options:0 format:0 error:&v102];

        if (v42)
        {
          id v43 = v102;
          sub_1000BBE80();
          swift_unknownObjectRelease();
          sub_10001295C(&qword_1000EC6A8);
          if (swift_dynamicCast())
          {
            long long v44 = v35;
            char v45 = sub_100050E7C(v101, 0x6F667565uLL, 0xE400000000000000);
            swift_bridgeObjectRelease();
            if (v45)
            {
              sub_1000521F4();
              sub_1000B81A0();
              unint64_t v46 = v94;
              if (v44)
              {
                id v102 = v44;
                swift_errorRetain();
                sub_10001295C(&qword_1000EC648);
                long long v47 = v91;
                uint64_t v48 = v93;
                if (swift_dynamicCast())
                {
                  swift_errorRelease();
                  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v27, v47, v48);
                  uint64_t v49 = v96;
                  unint64_t v50 = (unint64_t)v98;
                  (*(void (**)(char *, void, uint64_t))(v96 + 104))(v98, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v13);
                  uint64_t v92 = (char *)sub_1000B86B0();
                  (*(void (**)(unint64_t, uint64_t))(v49 + 8))(v50, v13);
                  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v90, v27, v93);
                  uint64_t v51 = v85;
                  sub_1000BB6A0();
                  sub_100052158((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
                  uint64_t v52 = v88;
                  swift_allocError();
                  uint64_t v53 = v95;
                  (*(void (**)(uint64_t, char *, uint64_t))(v95 + 16))(v54, v51, v52);
                  swift_willThrow();
                  sub_1000180CC(v82, v30);
                  sub_100018074(v100, v86);
                  swift_release();
                  (*(void (**)(char *, uint64_t))(v53 + 8))(v51, v52);
                  (*(void (**)(char *, uint64_t))(v46 + 8))(v27, v93);
LABEL_26:
                  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v99);
                  return swift_errorRelease();
                }
LABEL_33:
                swift_errorRelease();
                swift_getErrorValue();
                swift_getDynamicType();
                id v102 = (id)0xD000000000000025;
                unint64_t v103 = 0x80000001000CA180;
                v109._countAndFlagsBits = sub_1000BC2B0();
                sub_1000BB9A0(v109);
                swift_bridgeObjectRelease();
                sub_100052158((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
                swift_allocError();
                sub_1000BB6B0();
                swift_willThrow();
                sub_1000180CC(v82, v30);
                sub_100018074(v100, v86);
                swift_release();
                goto LABEL_21;
              }
              uint64_t v97 = 0;
              uint64_t v98 = (char *)v30;
              uint64_t v75 = v22;
              if (!v102) {
                goto LABEL_41;
              }
              if (v106)
              {
                unint64_t v94 = v103;
                uint64_t v96 = v105;
                LODWORD(v93) = 0;
                goto LABEL_40;
              }
              if (v107 != 0xE000000000000000)
              {
                unint64_t v94 = v103;
                uint64_t v96 = v105;
                LODWORD(v93) = 0;
                goto LABEL_40;
              }
            }
            else
            {
              sub_1000521A0();
              sub_1000B81A0();
              unint64_t v63 = v94;
              if (v44)
              {
                id v102 = v44;
                swift_errorRetain();
                sub_10001295C(&qword_1000EC648);
                long long v64 = v92;
                uint64_t v65 = v93;
                if (swift_dynamicCast())
                {
                  swift_errorRelease();
                  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v27, v64, v65);
                  uint64_t v66 = v65;
                  uint64_t v67 = v96;
                  unint64_t v68 = (unint64_t)v98;
                  (*(void (**)(char *, void, uint64_t))(v96 + 104))(v98, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v13);
                  uint64_t v92 = (char *)sub_1000B86B0();
                  uint64_t v91 = v69;
                  (*(void (**)(unint64_t, uint64_t))(v67 + 8))(v68, v13);
                  unint64_t v70 = v94;
                  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v90, v27, v66);
                  long long v71 = v85;
                  sub_1000BB6A0();
                  sub_100052158((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
                  uint64_t v72 = v88;
                  swift_allocError();
                  uint64_t v73 = v95;
                  (*(void (**)(uint64_t, char *, uint64_t))(v95 + 16))(v74, v71, v72);
                  swift_willThrow();
                  sub_1000180CC(v82, v30);
                  sub_100018074(v100, v86);
                  swift_release();
                  (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v72);
                  (*(void (**)(char *, uint64_t))(v70 + 8))(v27, v93);
                  goto LABEL_26;
                }
                goto LABEL_33;
              }
              uint64_t v97 = 0;
              uint64_t v98 = (char *)v30;
              uint64_t v75 = v22;
              uint64_t v76 = v88;
              if (!v102)
              {
                unint64_t v77 = v22;
                uint64_t v78 = v95;
                uint64_t v79 = v85;
LABEL_42:
                sub_1000BB6B0();
                sub_100052158((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
                swift_allocError();
                (*(void (**)(uint64_t, char *, uint64_t))(v78 + 16))(v80, v79, v76);
                swift_willThrow();
                sub_1000180CC(v82, (unint64_t)v98);
                sub_100018074(v100, v86);
                swift_bridgeObjectRelease();
                swift_release();
                (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v76);
                return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v77, v99);
              }
              if (v103)
              {
                LODWORD(v93) = v105;
                uint64_t v96 = 0;
                unint64_t v94 = 0;
                goto LABEL_40;
              }
              if (v104 != 0xE000000000000000)
              {
                LODWORD(v93) = v105;
                uint64_t v96 = 0;
                unint64_t v94 = 0;
LABEL_40:
                if ((sub_1000BC1A0() & 1) == 0)
                {
                  sub_1000B86E0();
                  sub_1000BA010();
                  (*(void (**)(char *, uint64_t))(v20 + 8))(v75, v99);
                  sub_1000180CC(v82, (unint64_t)v98);
                  sub_100018074(v100, v86);
                  return swift_release();
                }
              }
            }
LABEL_41:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v77 = v75;
            uint64_t v76 = v88;
            uint64_t v78 = v95;
            uint64_t v79 = v85;
            goto LABEL_42;
          }
          unint64_t v61 = v30;
          sub_100052158((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
          swift_allocError();
          sub_1000BB6B0();
        }
        else
        {
          unint64_t v61 = v30;
          id v62 = v102;
          sub_1000B81D0();
        }
        swift_willThrow();
        swift_getErrorValue();
        swift_getDynamicType();
        id v102 = (id)0xD000000000000025;
        unint64_t v103 = 0x80000001000CA180;
        v108._countAndFlagsBits = sub_1000BC2B0();
        sub_1000BB9A0(v108);
        swift_bridgeObjectRelease();
        sub_100052158((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
        sub_1000BB6B0();
        swift_willThrow();
        sub_1000180CC(v82, v61);
        sub_100018074(v100, v86);
        swift_release();
LABEL_21:
        swift_errorRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v99);
      case 2uLL:
        uint64_t v38 = *(void *)(v100 + 16);
        uint64_t v37 = *(void *)(v100 + 24);
        BOOL v39 = __OFSUB__(v37, v38);
        uint64_t v36 = v37 - v38;
        if (!v39) {
          goto LABEL_10;
        }
        goto LABEL_47;
      case 3uLL:
        goto LABEL_17;
      default:
        uint64_t v36 = BYTE6(v86);
        goto LABEL_10;
    }
  }
  sub_100052104();
  swift_allocError();
  swift_willThrow();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v99);
}

uint64_t sub_100050E64@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10004FB0C(a1, a2, a3);
}

uint64_t sub_100050E7C(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v6 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v24 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_22;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 >= v24) {
      goto LABEL_25;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v11);
        if (!v16)
        {
          int64_t v11 = v15 + 3;
          if (v15 + 3 >= v24) {
            goto LABEL_25;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v11);
          if (!v16)
          {
            int64_t v17 = v15 + 4;
            if (v17 >= v24)
            {
LABEL_25:
              swift_release();
              return 0;
            }
            unint64_t v16 = *(void *)(v6 + 8 * v17);
            int64_t v11 = v17;
            if (!v16) {
              break;
            }
          }
        }
      }
    }
LABEL_21:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_22:
    uint64_t v18 = (unint64_t *)(*(void *)(a1 + 48) + 16 * v14);
    unint64_t v20 = *v18;
    unint64_t v19 = v18[1];
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v14, (uint64_t)v23);
    *(void *)&long long v22 = v20;
    *((void *)&v22 + 1) = v19;
    v21[0] = v22;
    v21[1] = v23[0];
    _OWORD v21[2] = v23[1];
    if (__PAIR128__(v19, v20) == __PAIR128__(a3, a2))
    {
      swift_bridgeObjectRetain();
      sub_100052248((uint64_t)v21);
LABEL_24:
      swift_release();
      return 1;
    }
    char v12 = sub_1000BC1A0();
    swift_bridgeObjectRetain();
    uint64_t result = sub_100052248((uint64_t)v21);
    if (v12) {
      goto LABEL_24;
    }
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10005108C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000ED2C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_1000522A8();
  sub_1000BC270();
  if (v2) {
    return sub_100015C54((uint64_t)a1);
  }
  char v23 = 0;
  uint64_t v9 = sub_1000BBFB0();
  uint64_t v11 = v10;
  char v22 = 1;
  uint64_t v19 = sub_1000BBFB0();
  uint64_t v20 = v12;
  char v21 = 2;
  uint64_t v13 = sub_1000BC040();
  unint64_t v14 = v8;
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  uint64_t result = sub_100015C54((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  uint64_t v18 = v20;
  a2[2] = v19;
  a2[3] = v18;
  a2[4] = v13;
  a2[5] = v16;
  return result;
}

uint64_t sub_1000512C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000ED2D8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_10004F420();
  sub_1000BC270();
  if (v2) {
    return sub_100015C54((uint64_t)a1);
  }
  LOBYTE(v15) = 0;
  uint64_t v9 = sub_1000BC060();
  char v19 = 1;
  sub_1000522FC();
  sub_1000BC070();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v13 = v16;
  long long v14 = v15;
  uint64_t v10 = v17;
  uint64_t v11 = v18;
  uint64_t result = sub_100015C54((uint64_t)a1);
  *(void *)a2 = v9;
  *(_OWORD *)(a2 + 8) = v14;
  *(_OWORD *)(a2 + 24) = v13;
  *(void *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = v11;
  return result;
}

unint64_t sub_1000514A4()
{
  unint64_t result = qword_1000ED258;
  if (!qword_1000ED258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED258);
  }
  return result;
}

uint64_t sub_1000514F8(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  unint64_t v5 = sub_1000BBFA0(a3, v7);
  swift_bridgeObjectRelease();
  if (v5 >= 3) {
    return 3;
  }
  else {
    return v5;
  }
}

uint64_t sub_100051540(void *a1)
{
  uint64_t v3 = sub_10001295C(&qword_1000ED2D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  sub_100014C68(a1, v7);
  sub_1000514A4();
  sub_1000BC270();
  if (v1)
  {
    sub_100015C54((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v7 = sub_1000BC060();
    char v11 = 1;
    sub_1000BC040();
    char v10 = 2;
    swift_bridgeObjectRetain();
    sub_1000BC050();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_100015C54((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t destroy for EmergencySOSChatSessionCloseDictionary()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EmergencySOSChatSessionCloseDictionary(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EmergencySOSChatSessionCloseDictionary(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for EmergencySOSChatSessionCloseDictionary(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for EmergencySOSChatSessionCloseDictionary(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencySOSChatSessionCloseDictionary(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencySOSChatSessionCloseDictionary(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmergencySOSChatSessionCloseDictionary()
{
  return &type metadata for EmergencySOSChatSessionCloseDictionary;
}

uint64_t destroy for BusinessChatSessionCloseDictionary()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BusinessChatSessionCloseDictionary(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BusinessChatSessionCloseDictionary(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 initializeWithTake for BusinessChatSessionCloseDictionary(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BusinessChatSessionCloseDictionary(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for BusinessChatSessionCloseDictionary(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BusinessChatSessionCloseDictionary(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BusinessChatSessionCloseDictionary()
{
  return &type metadata for BusinessChatSessionCloseDictionary;
}

ValueMetadata *type metadata accessor for BusinessChatSessionCloseDictionary.CodingKeys()
{
  return &type metadata for BusinessChatSessionCloseDictionary.CodingKeys;
}

uint64_t destroy for EmergencySOSChatSessionCloseDictionary.EufoDictionary()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for EmergencySOSChatSessionCloseDictionary.EufoDictionary(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EmergencySOSChatSessionCloseDictionary.EufoDictionary(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for EmergencySOSChatSessionCloseDictionary.EufoDictionary(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencySOSChatSessionCloseDictionary.EufoDictionary(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencySOSChatSessionCloseDictionary.EufoDictionary(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmergencySOSChatSessionCloseDictionary.EufoDictionary()
{
  return &type metadata for EmergencySOSChatSessionCloseDictionary.EufoDictionary;
}

unsigned char *storeEnumTagSinglePayload for EmergencySOSChatSessionCloseDictionary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100051E64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmergencySOSChatSessionCloseDictionary.CodingKeys()
{
  return &type metadata for EmergencySOSChatSessionCloseDictionary.CodingKeys;
}

ValueMetadata *type metadata accessor for ChatSessionCloseUnpacker()
{
  return &type metadata for ChatSessionCloseUnpacker;
}

unint64_t sub_100051EB0()
{
  unint64_t result = qword_1000ED260;
  if (!qword_1000ED260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED260);
  }
  return result;
}

unint64_t sub_100051F08()
{
  unint64_t result = qword_1000ED268;
  if (!qword_1000ED268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED268);
  }
  return result;
}

unint64_t sub_100051F60()
{
  unint64_t result = qword_1000ED270;
  if (!qword_1000ED270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED270);
  }
  return result;
}

unint64_t sub_100051FB8()
{
  unint64_t result = qword_1000ED278;
  if (!qword_1000ED278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED278);
  }
  return result;
}

unint64_t sub_100052010()
{
  unint64_t result = qword_1000ED280;
  if (!qword_1000ED280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED280);
  }
  return result;
}

unint64_t sub_100052068()
{
  unint64_t result = qword_1000ED288;
  if (!qword_1000ED288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED288);
  }
  return result;
}

uint64_t sub_1000520BC()
{
  return sub_100052158(&qword_1000ED290, (void (*)(uint64_t))&type metadata accessor for ChatSessionClose);
}

unint64_t sub_100052104()
{
  unint64_t result = qword_1000ED298;
  if (!qword_1000ED298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED298);
  }
  return result;
}

uint64_t sub_100052158(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000521A0()
{
  unint64_t result = qword_1000ED2A0;
  if (!qword_1000ED2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED2A0);
  }
  return result;
}

unint64_t sub_1000521F4()
{
  unint64_t result = qword_1000ED2A8;
  if (!qword_1000ED2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED2A8);
  }
  return result;
}

uint64_t sub_100052248(uint64_t a1)
{
  uint64_t v2 = sub_10001295C(&qword_1000ED2B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000522A8()
{
  unint64_t result = qword_1000ED2C0;
  if (!qword_1000ED2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED2C0);
  }
  return result;
}

unint64_t sub_1000522FC()
{
  unint64_t result = qword_1000ED2E0;
  if (!qword_1000ED2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED2E0);
  }
  return result;
}

unsigned char *_s24MessagesBlastDoorService34BusinessChatSessionCloseDictionaryV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005241CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmergencySOSChatSessionCloseDictionary.EufoDictionary.CodingKeys()
{
  return &type metadata for EmergencySOSChatSessionCloseDictionary.EufoDictionary.CodingKeys;
}

ValueMetadata *type metadata accessor for ChatSessionCloseUnpacker.EncryptedMessageMissingData()
{
  return &type metadata for ChatSessionCloseUnpacker.EncryptedMessageMissingData;
}

unint64_t sub_100052468()
{
  unint64_t result = qword_1000ED2E8;
  if (!qword_1000ED2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED2E8);
  }
  return result;
}

unint64_t sub_1000524C0()
{
  unint64_t result = qword_1000ED2F0;
  if (!qword_1000ED2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED2F0);
  }
  return result;
}

unint64_t sub_100052518()
{
  unint64_t result = qword_1000ED2F8;
  if (!qword_1000ED2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED2F8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for CollaborationNoticeActionDictionary(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CollaborationNoticeActionDictionary()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for CollaborationNoticeActionDictionary(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CollaborationNoticeActionDictionary(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CollaborationNoticeActionDictionary(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CollaborationNoticeActionDictionary(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollaborationNoticeActionDictionary()
{
  return &type metadata for CollaborationNoticeActionDictionary;
}

uint64_t sub_1000526B8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10001295C(&qword_1000ED310);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_100052D5C();
  sub_1000BC280();
  char v13 = 0;
  sub_1000BC150();
  if (!v3)
  {
    v11[1] = a3;
    char v12 = 1;
    sub_10001295C(&qword_1000EC550);
    sub_100015CA4(&qword_1000EC558);
    sub_1000BC160();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100052868@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100052B70(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100052894(void *a1)
{
  return sub_1000526B8(a1, *v1, v1[1]);
}

uint64_t sub_1000528B0(char *a1, char *a2)
{
  return sub_10004DF24(*a1, *a2);
}

Swift::Int sub_1000528BC()
{
  return sub_1000BC250();
}

uint64_t sub_100052928()
{
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100052980()
{
  return sub_1000BC250();
}

uint64_t sub_1000529E8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_1000E10E8;
  v8._object = v3;
  Swift::Int v5 = sub_1000BBFA0(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_100052A48(uint64_t *a1@<X8>)
{
  uint64_t v2 = 29793;
  if (*v1) {
    uint64_t v2 = 103;
  }
  unint64_t v3 = 0xE200000000000000;
  if (*v1) {
    unint64_t v3 = 0xE100000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100052A70()
{
  if (*v0) {
    return 103;
  }
  else {
    return 29793;
  }
}

uint64_t sub_100052A94@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_1000E10E8;
  v9._object = a2;
  Swift::Int v6 = sub_1000BBFA0(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

uint64_t sub_100052AF8(uint64_t a1)
{
  unint64_t v2 = sub_100052D5C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100052B34(uint64_t a1)
{
  unint64_t v2 = sub_100052D5C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100052B70(void *a1)
{
  uint64_t v3 = sub_10001295C(&qword_1000ED300);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::Int v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_100014C68(a1, v7);
  sub_100052D5C();
  sub_1000BC270();
  if (!v1)
  {
    v9[31] = 0;
    uint64_t v7 = sub_1000BC060();
    sub_10001295C(&qword_1000EC550);
    v9[15] = 1;
    sub_100015CA4(&qword_1000EC580);
    sub_1000BC070();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_100015C54((uint64_t)a1);
  return v7;
}

unint64_t sub_100052D5C()
{
  unint64_t result = qword_1000ED308;
  if (!qword_1000ED308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED308);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CollaborationNoticeActionDictionary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100052E7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollaborationNoticeActionDictionary.CodingKeys()
{
  return &type metadata for CollaborationNoticeActionDictionary.CodingKeys;
}

unint64_t sub_100052EB8()
{
  unint64_t result = qword_1000ED318;
  if (!qword_1000ED318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED318);
  }
  return result;
}

unint64_t sub_100052F10()
{
  unint64_t result = qword_1000ED320;
  if (!qword_1000ED320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED320);
  }
  return result;
}

unint64_t sub_100052F68()
{
  unint64_t result = qword_1000ED328;
  if (!qword_1000ED328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED328);
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimatedImageUnpacker()
{
  return &type metadata for AnimatedImageUnpacker;
}

uint64_t sub_100052FD0()
{
  return sub_1000557D4(&qword_1000ED330, (void (*)(uint64_t))&type metadata accessor for AnimatedImageFrame);
}

uint64_t sub_100053018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000BBAC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1000BBAB0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100055350(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1000BBAA0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1000531BC@<X0>(uint8_t *a1@<X0>, uint8_t *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v4 = sub_10001295C(&qword_1000ED338);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v32 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000BB3E0();
  uint64_t v29 = *(void *)(v7 - 8);
  uint64_t v30 = v7;
  __chkstk_darwin(v7);
  Swift::String v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000BB3B0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B8A80();
  sub_1000B89D0();
  os_log_type_t v14 = sub_1000BBBB0();
  sub_100018190();
  long long v15 = sub_1000BBD10();
  long long v16 = *(void (**)(char *, uint8_t *, uint64_t))(v11 + 16);
  uint64_t v31 = a1;
  v16(v13, a1, v10);
  if (os_log_type_enabled(v15, v14))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = v4;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v36 = v26;
    *(_DWORD *)uint64_t v18 = 136446210;
    uint64_t v25 = v18 + 4;
    sub_1000BB3A0();
    uint64_t v19 = sub_1000BB3C0();
    uint64_t v27 = v5;
    unint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v30);
    uint64_t v35 = sub_10007ABB4(v19, v21, &v36);
    sub_1000BBE50();
    uint64_t v5 = v27;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    _os_log_impl((void *)&_mh_execute_header, v15, v14, "Unpacking animated image at path %{public}s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v28;
    swift_slowDealloc();
  }
  else
  {

    uint64_t v22 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  __chkstk_darwin(v22);
  char v23 = v33;
  *(&v25 - 2) = v31;
  *(&v25 - 1) = v23;
  sub_10001295C(&qword_1000ED340);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v32, enum case for AsyncThrowingStream.Continuation.BufferingPolicy.unbounded<A, B>(_:), v4);
  return sub_1000BBAF0();
}

uint64_t sub_1000535C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a3;
  uint64_t v30 = a1;
  uint64_t v27 = a2;
  uint64_t v31 = sub_10001295C(&qword_1000ED348);
  uint64_t v3 = *(void *)(v31 - 8);
  uint64_t v28 = *(void *)(v3 + 64);
  __chkstk_darwin(v31);
  uint64_t v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000BA810();
  uint64_t v24 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v25 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000BB3B0();
  uint64_t v23 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001295C(&qword_1000EC918);
  __chkstk_darwin(v12 - 8);
  os_log_type_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000BBAC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v27, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v5);
  long long v16 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v26, v30, v31);
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v18 = (v10 + *(unsigned __int8 *)(v6 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v19 = (v7 + *(unsigned __int8 *)(v3 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v20 + v17, v11, v23);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v20 + v18, v25, v24);
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v20 + v19, v16, v31);
  sub_100053018((uint64_t)v14, (uint64_t)&unk_1000ED358, v20);
  return swift_release();
}

uint64_t sub_100053940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[18] = a5;
  v6[19] = a6;
  v6[17] = a4;
  uint64_t v7 = sub_1000BA810();
  v6[20] = v7;
  v6[21] = *(void *)(v7 - 8);
  v6[22] = swift_task_alloc();
  sub_10001295C(&qword_1000EC660);
  v6[23] = swift_task_alloc();
  uint64_t v8 = sub_1000BB470();
  unsigned char v6[24] = v8;
  v6[25] = *(void *)(v8 - 8);
  v6[26] = swift_task_alloc();
  uint64_t v9 = sub_1000BB3E0();
  v6[27] = v9;
  v6[28] = *(void *)(v9 - 8);
  v6[29] = swift_task_alloc();
  uint64_t v10 = sub_1000B8240();
  v6[30] = v10;
  v6[31] = *(void *)(v10 - 8);
  v6[32] = swift_task_alloc();
  uint64_t v11 = sub_1000BB3B0();
  v6[33] = v11;
  v6[34] = *(void *)(v11 - 8);
  v6[35] = swift_task_alloc();
  return _swift_task_switch(sub_100053BA4, 0, 0);
}

uint64_t sub_100053BA4()
{
  uint64_t v57 = v0;
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 272);
  unint64_t v2 = *(uint64_t **)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 264);
  os_log_type_t v5 = sub_1000BBBB0();
  sub_100018190();
  uint64_t v6 = sub_1000BBD10();
  uint64_t v7 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16);
  v7(v2, v1, v4);
  unint64_t v55 = v7;
  if (os_log_type_enabled(v6, v5))
  {
    uint64_t v8 = *(void *)(v0 + 256);
    uint64_t v51 = *(void *)(v0 + 272);
    uint64_t v52 = *(void *)(v0 + 264);
    os_log_type_t type = v5;
    uint64_t v9 = *(void *)(v0 + 248);
    uint64_t v49 = *(void *)(v0 + 240);
    uint64_t v50 = *(void *)(v0 + 280);
    uint64_t v10 = *(void *)(v0 + 224);
    uint64_t v11 = *(void *)(v0 + 232);
    uint64_t v48 = *(void *)(v0 + 216);
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    v56[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446210;
    sub_1000BB3A0();
    sub_1000BB3D0();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v48);
    sub_1000557D4(&qword_1000EC908, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v13 = sub_1000BC190();
    unint64_t v15 = v14;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v49);
    uint64_t v16 = v0 + 136;
    *(void *)(v0 + 128) = sub_10007ABB4(v13, v15, v56);
    sub_1000BBE50();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
    _os_log_impl((void *)&_mh_execute_header, v6, type, "Task running for animated image: %{public}s)", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 272);
    uint64_t v18 = *(void *)(v0 + 280);
    uint64_t v19 = *(void *)(v0 + 264);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
    uint64_t v16 = v0 + 136;
  }
  if (sub_1000BA800() <= 5000)
  {
    uint64_t v33 = *(void *)(v0 + 264);
    uint64_t v34 = *(void *)(v0 + 184);
    uint64_t v35 = *(void *)(v0 + 136);
    *(void *)(v0 + 40) = v33;
    *(void *)(v0 + 48) = &protocol witness table for File;
    *(_OWORD *)typea = *(_OWORD *)(v0 + 144);
    uint64_t v36 = sub_1000269C4((uint64_t *)(v16 - 120));
    v55(v36, v35, v33);
    sub_1000BA7F0();
    uint64_t v37 = sub_1000BB440();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v34, 1, 1, v37);
    sub_1000BB450();
    sub_1000BB460();
    sub_100014C68((void *)(v16 - 80), *(void *)(v0 + 80));
    uint64_t v38 = swift_task_alloc();
    *(_OWORD *)(v38 + 16) = *(_OWORD *)typea;
    uint64_t v39 = swift_task_alloc();
    *(void *)(v39 + 16) = sub_1000554A0;
    *(void *)(v39 + 24) = v38;
    sub_1000B9480();
    (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100015C54(v16 - 80);
  }
  else
  {
    uint64_t v20 = *(void *)(v0 + 168);
    uint64_t v21 = *(void *)(v0 + 176);
    uint64_t v22 = *(void *)(v0 + 160);
    uint64_t v23 = *(void *)(v0 + 144);
    os_log_type_t v24 = sub_1000BBBB0();
    uint64_t v25 = sub_1000BBD10();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v21, v23, v22);
    os_log_type_t v26 = v24;
    BOOL v27 = os_log_type_enabled(v25, v24);
    uint64_t v28 = *(void *)(v0 + 168);
    uint64_t v29 = *(void *)(v0 + 176);
    uint64_t v30 = *(void *)(v0 + 160);
    if (v27)
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 134349056;
      uint64_t v32 = sub_1000BA800();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v30);
      *(void *)(v0 + 120) = v32;
      sub_1000BBE50();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "context.maxCount too large: %{public}ld)", v31, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v28 + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
    }

    v56[0] = 40;
    v56[1] = 0xE100000000000000;
    *(void *)(v0 + 112) = sub_1000BA800();
    v59._countAndFlagsBits = sub_1000BC190();
    sub_1000BB9A0(v59);
    swift_bridgeObjectRelease();
    sub_1000BB6C0();
    sub_1000557D4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    uint64_t v40 = swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();
    os_log_type_t v41 = sub_1000BBBD0();
    id v42 = sub_1000BBD10();
    if (os_log_type_enabled(v42, v41))
    {
      swift_errorRetain();
      swift_errorRetain();
      id v43 = (uint8_t *)swift_slowAlloc();
      long long v44 = (void *)swift_slowAlloc();
      *(_DWORD *)id v43 = 138412290;
      swift_errorRetain();
      uint64_t v45 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 96) = v45;
      sub_1000BBE50();
      void *v44 = v45;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v42, v41, "Caught error: %@", v43, 0xCu);
      sub_10001295C(&qword_1000EC668);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    *(void *)(v0 + 104) = v40;
    sub_10001295C(&qword_1000ED348);
    sub_1000BBAE0();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
  return v46();
}

uint64_t sub_100054390(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v75 = a2;
  uint64_t v6 = sub_10001295C(&qword_1000ED340);
  __chkstk_darwin(v6 - 8);
  unint64_t v68 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_10001295C(&qword_1000ED370);
  unint64_t v55 = *(void (***)(uint64_t, uint64_t))(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v66 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000B9CE0();
  unint64_t v63 = *(void (***)(char *, uint64_t))(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v72 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001295C(&qword_1000EC660);
  __chkstk_darwin(v10 - 8);
  long long v71 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000BB470();
  __chkstk_darwin(v12 - 8);
  unint64_t v70 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000BA830();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v65 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v77 = (char *)&v52 - v18;
  uint64_t v19 = sub_1000B9F80();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  long long v69 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  os_log_type_t v24 = (char *)&v52 - v23;
  uint64_t v74 = a1;
  sub_1000BBC20();
  uint64_t v25 = sub_1000B9F40();
  if (!v26 || (v27 = v25, uint64_t v28 = v26, (sub_10008CDC8(v25, v26) & 1) == 0))
  {
LABEL_21:
    sub_1000BB6C0();
    sub_1000557D4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v24, v19);
  }
  uint64_t v64 = v28;
  uint64_t v58 = a3;
  uint64_t result = sub_1000BA800();
  uint64_t v30 = result - 1;
  if (__OFSUB__(result, 1))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t result = sub_1000B9F20();
  uint64_t v31 = result - 1;
  if (!__OFSUB__(result, 1))
  {
    if (v31 >= v30) {
      uint64_t v31 = v30;
    }
    uint64_t v57 = v31;
    if (v31 < 0) {
      goto LABEL_29;
    }
    uint64_t v62 = v27;
    uint64_t v32 = 0;
    unsigned int v61 = enum case for StickerEffect.none(_:);
    uint64_t v60 = (void (**)(char *, void, uint64_t))(v63 + 13);
    Swift::String v59 = (void (**)(char *, char *, uint64_t))(v20 + 16);
    unint64_t v63 = (void (**)(char *, uint64_t))(v20 + 8);
    uint64_t v56 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    ++v55;
    uint64_t v54 = (void (**)(char *, uint64_t))(v15 + 8);
    uint64_t v76 = v19;
    uint64_t v53 = v24;
    while (1)
    {
      uint64_t v33 = v24;
      uint64_t v34 = sub_1000B9F20();
      uint64_t v35 = sub_1000BA800();
      sub_1000554F0(v32, v34, v35);
      if (v3)
      {
        (*v63)(v24, v76);
        return swift_bridgeObjectRelease();
      }
      uint64_t v37 = v36;
      uint64_t v38 = v14;
      uint64_t v39 = swift_allocObject();
      uint64_t v40 = v74;
      *(void *)(v39 + 16) = v74;
      v40;
      sub_1000BA7E0();
      swift_release();
      sub_1000BA7F0();
      uint64_t v41 = sub_1000BBC10();
      type metadata accessor for CGImage(0);
      uint64_t v79 = v42;
      uint64_t v80 = &protocol witness table for CGImageRef;
      uint64_t v78 = v41;
      uint64_t v43 = sub_1000BB440();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v71, 1, 1, v43);
      sub_1000BB450();
      (*v60)(v72, v61, v73);
      swift_bridgeObjectRetain();
      sub_1000BA820();
      uint64_t result = sub_1000BA800();
      uint64_t v44 = result - 1;
      if (__OFSUB__(result, 1)) {
        break;
      }
      uint64_t v45 = v69;
      uint64_t v46 = v76;
      (*v59)(v69, v33, v76);
      if (v32 >= v44)
      {
        uint64_t v52 = *v63;
        v52(v45, v46);
        BOOL v48 = 1;
      }
      else
      {
        uint64_t v47 = sub_1000B9F20();
        uint64_t v52 = *v63;
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v52)(v45, v46);
        if (__OFSUB__(v47, 1)) {
          goto LABEL_26;
        }
        BOOL v48 = v37 >= v47 - 1;
      }
      uint64_t v49 = v77;
      (*v56)(v65, v77, v38);
      sub_1000557D4(&qword_1000ED378, (void (*)(uint64_t))&type metadata accessor for AnimatedImageFrame);
      sub_1000BAA90();
      sub_10001295C(&qword_1000ED348);
      uint64_t v20 = (uint64_t)v66;
      sub_1000BBAD0();
      (*v55)(v20, v67);
      if (v48)
      {
        uint64_t v20 = sub_1000BBBB0();
        sub_100018190();
        uint64_t v50 = (void *)sub_1000BBD10();
        sub_1000B8780();

        uint64_t v78 = 0;
        sub_1000BBAE0();
      }
      (*v54)(v49, v38);
      uint64_t v14 = v38;
      uint64_t v19 = v76;
      if (v57 == v32)
      {
        v52(v53, v76);
        return swift_bridgeObjectRelease();
      }
      BOOL v51 = __OFADD__(v32++, 1);
      os_log_type_t v24 = v53;
      if (v51)
      {
        __break(1u);
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100054DD8(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100054EB4;
  return v6(a1);
}

uint64_t sub_100054EB4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100054FAC(uint64_t a1)
{
  return sub_1000535C4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100054FB4()
{
  uint64_t v17 = sub_1000BB3B0();
  uint64_t v1 = *(void *)(v17 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v16 = sub_1000BA810();
  uint64_t v5 = *(void *)(v16 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = sub_10001295C(&qword_1000ED348);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v7 + v8 + v11) & ~v11;
  uint64_t v15 = v12 + *(void *)(v10 + 64);
  uint64_t v13 = v2 | v6 | v11 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v17);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);

  return _swift_deallocObject(v0, v15, v13);
}

uint64_t sub_100055198(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000BB3B0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_1000BA810() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(sub_10001295C(&qword_1000ED348) - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = v1 + v5;
  uint64_t v15 = v1 + v8;
  uint64_t v16 = v1 + (v11 & ~v10);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v17;
  *uint64_t v17 = v2;
  v17[1] = sub_100033238;
  return sub_100053940(a1, v12, v13, v14, v15, v16);
}

uint64_t sub_100055350(uint64_t a1)
{
  uint64_t v2 = sub_10001295C(&qword_1000EC918);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000553B0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000553E8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100033238;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000ED360 + dword_1000ED360);
  return v6(a1, v4);
}

uint64_t sub_1000554A0(void *a1)
{
  return sub_100054390(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000554BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = 0;
  }
  return result;
}

uint64_t sub_1000554F0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3 < result || (uint64_t v3 = result, result >= a2))
  {
    sub_1000BB6C0();
    sub_1000557D4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
  if (a3 < a2)
  {
    double v4 = (double)a2 / (double)a3;
    double v5 = v4 * (double)result;
    if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    if (v5 <= -9.22337204e18)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    if (v5 >= 9.22337204e18)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v6 = (uint64_t)v5 + 1;
    if (__OFADD__((uint64_t)v5, 1))
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    uint64_t result = a2 - 1;
    if (v3)
    {
      if (v6 >= a2)
      {
LABEL_17:
        double v7 = v4 * (double)(v3 + 1);
        if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
        {
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        if (v7 <= -9.22337204e18)
        {
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        if (v7 >= 9.22337204e18)
        {
LABEL_30:
          __break(1u);
          return result;
        }
        uint64_t v8 = (uint64_t)v7;
        if (a2 - 1 < (uint64_t)v7) {
          uint64_t v8 = a2 - 1;
        }
        if (v8 < result)
        {
          __break(1u);
          goto LABEL_24;
        }
        return result;
      }
    }
    else
    {
      if (a2 < 1) {
        goto LABEL_17;
      }
      uint64_t v6 = 0;
    }
    uint64_t result = v6;
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_100055768()
{
  return _swift_deallocObject(v0, 24, 7);
}

double sub_1000557A0(Swift::Int a1)
{
  return sub_1000BBC30(a1);
}

uint64_t sub_1000557D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for RecoverJunkCommandUnpacker()
{
  return &type metadata for RecoverJunkCommandUnpacker;
}

unint64_t sub_10005582C(uint64_t a1)
{
  unint64_t result = sub_1000129F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100055858()
{
  unint64_t result = qword_1000ED380;
  if (!qword_1000ED380)
  {
    sub_1000BA9E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED380);
  }
  return result;
}

uint64_t sub_1000558B0(uint64_t a1, uint64_t a2)
{
  return sub_1000A1424(a1, a2);
}

ValueMetadata *type metadata accessor for EditMessageCommandUnpacker()
{
  return &type metadata for EditMessageCommandUnpacker;
}

unint64_t sub_1000558D8(uint64_t a1)
{
  unint64_t result = sub_100012C40();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100055900()
{
  return sub_100057318(&qword_1000ED388, (void (*)(uint64_t))&type metadata accessor for EditMessageCommand);
}

uint64_t sub_100055948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v149 = a2;
  uint64_t v3 = sub_10001295C(&qword_1000EC628);
  __chkstk_darwin(v3 - 8);
  uint64_t v162 = (char *)v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v168 = sub_1000BBF10();
  *(void *)&long long v166 = *(void *)(v168 - 8);
  uint64_t v5 = __chkstk_darwin(v168);
  uint64_t v163 = (char *)v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v165 = (char *)v138 - v8;
  __chkstk_darwin(v7);
  uint64_t v167 = (char *)v138 - v9;
  uint64_t v10 = sub_10001295C(&qword_1000EC588);
  __chkstk_darwin(v10 - 8);
  uint64_t v154 = (char *)v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_1000BA870();
  uint64_t v12 = *(void *)(v156 - 8);
  uint64_t v13 = __chkstk_darwin(v156);
  __int32 v155 = (char *)v138 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v151 = (char *)v138 - v16;
  __chkstk_darwin(v15);
  uint64_t v161 = (void (*)(char *, char *, unint64_t))((char *)v138 - v17);
  uint64_t v159 = sub_1000B9E10();
  uint64_t v158 = *(void *)(v159 - 8);
  uint64_t v18 = __chkstk_darwin(v159);
  uint64_t v152 = (char *)v138 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v157 = (uint64_t)v138 - v20;
  uint64_t v21 = sub_10001295C(&qword_1000ED390);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v153 = (uint64_t)v138 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v150 = (char *)v138 - v25;
  __chkstk_darwin(v24);
  *(void *)&long long v164 = (char *)v138 - v26;
  uint64_t v27 = sub_1000BB5D0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v160 = (char *)v138 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)v138 - v31;
  uint64_t v33 = sub_10001295C(&qword_1000EC678);
  __chkstk_darwin(v33 - 8);
  uint64_t v35 = (char *)v138 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v36 - 8);
  Swift::String v171 = (char *)v138 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1000B86C0();
  uint64_t v170 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)v138 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_1000BB6C0();
  uint64_t v173 = *(void *)(v175 - 8);
  __chkstk_darwin(v175);
  uint64_t v172 = (char *)v138 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1000B86D0();
  if (v43 >> 60 == 15)
  {
    sub_100018190();
    uint64_t v44 = (void *)sub_1000BBD40();
    sub_10001295C(&qword_1000EC5C8);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1000BF8A0;
    sub_1000B86E0();
    sub_1000BB5C0();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v27);
    uint64_t v46 = sub_1000B8380();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v35, 0, 1, v46);
    uint64_t v47 = sub_1000BB200();
    uint64_t v49 = v48;
    sub_1000184DC((uint64_t)v35, &qword_1000EC678);
    *(void *)(v45 + 56) = &type metadata for String;
    *(void *)(v45 + 64) = sub_10001824C();
    *(void *)(v45 + 32) = v47;
    *(void *)(v45 + 40) = v49;
    sub_1000BBBE0();
    sub_1000B8770();

    swift_bridgeObjectRelease();
    sub_1000572C4();
    swift_allocError();
    return swift_willThrow();
  }
  uint64_t v145 = v27;
  uint64_t v146 = a1;
  uint64_t v144 = v12;
  uint64_t v147 = v42;
  unint64_t v148 = v43;
  Class isa = sub_1000B82B0().super.isa;
  id v52 = [(objc_class *)isa _imOptionallyDecompressData];

  uint64_t v176 = sub_1000B82D0();
  unint64_t v54 = v53;

  unint64_t v174 = v54;
  uint64_t v55 = v28;
  switch(v54 >> 62)
  {
    case 1uLL:
      LODWORD(v56) = HIDWORD(v176) - v176;
      if (__OFSUB__(HIDWORD(v176), v176))
      {
        __break(1u);
LABEL_27:
        __break(1u);
        JUMPOUT(0x100057134);
      }
      uint64_t v56 = (int)v56;
LABEL_8:
      if (v56 <= 0)
      {
LABEL_12:
        uint64_t v85 = v170;
        (*(void (**)(char *, void, uint64_t))(v170 + 104))(v40, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v38);
        sub_1000B86B0();
        (*(void (**)(char *, uint64_t))(v85 + 8))(v40, v38);
        unint64_t v86 = v172;
        sub_1000BB6B0();
        sub_100018190();
        uint64_t v87 = (void *)sub_1000BBD80();
        sub_10001295C(&qword_1000EC5C8);
        uint64_t v88 = swift_allocObject();
        *(_OWORD *)(v88 + 16) = xmmword_1000BF8A0;
        uint64_t v89 = v173;
        uint64_t v170 = *(void *)(v173 + 16);
        uint64_t v90 = (uint64_t)v171;
        uint64_t v91 = v175;
        ((void (*)(char *, char *, uint64_t))v170)(v171, v86, v175);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v90, 0, 1, v91);
        uint64_t v92 = sub_1000BB200();
        uint64_t v94 = v93;
        sub_1000184DC(v90, &qword_1000EC630);
        *(void *)(v88 + 56) = &type metadata for String;
        *(void *)(v88 + 64) = sub_10001824C();
        *(void *)(v88 + 32) = v92;
        *(void *)(v88 + 40) = v94;
        sub_1000BBBE0();
        sub_1000B8770();

        swift_bridgeObjectRelease();
        sub_100057318((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
        ((void (*)(uint64_t, char *, uint64_t))v170)(v95, v86, v91);
        swift_willThrow();
        sub_1000180CC(v147, v148);
        sub_100018074(v176, v174);
        return (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v86, v91);
      }
      sub_1000B81C0();
      swift_allocObject();
      uint64_t v60 = sub_1000B81B0();
      sub_100057360();
      uint64_t v143 = v60;
      unint64_t v61 = v169;
      sub_1000B81A0();
      if (v61)
      {
        unint64_t v177 = v61;
        swift_errorRetain();
        sub_10001295C(&qword_1000EC648);
        uint64_t v62 = v167;
        unint64_t v63 = v168;
        if (swift_dynamicCast())
        {
          swift_errorRelease();
          uint64_t v64 = v166;
          uint64_t v65 = v165;
          (*(void (**)(char *, char *, unint64_t))(v166 + 32))(v165, v62, v63);
          unint64_t v169 = sub_100018190();
          uint64_t v66 = (void *)sub_1000BBD80();
          uint64_t v167 = (char *)sub_10001295C(&qword_1000EC5C8);
          uint64_t v67 = swift_allocObject();
          long long v164 = xmmword_1000BF8A0;
          *(_OWORD *)(v67 + 16) = xmmword_1000BF8A0;
          unint64_t v68 = *(void (**)(char *, char *, unint64_t))(v64 + 16);
          uint64_t v160 = (char *)(v64 + 16);
          uint64_t v161 = v68;
          uint64_t v69 = (uint64_t)v162;
          v68(v162, v65, v63);
          (*(void (**)(uint64_t, void, uint64_t, unint64_t))(v64 + 56))(v69, 0, 1, v63);
          uint64_t v70 = sub_1000BB200();
          uint64_t v72 = v71;
          sub_1000184DC(v69, &qword_1000EC628);
          *(void *)(v67 + 56) = &type metadata for String;
          uint64_t v162 = (char *)sub_10001824C();
          *(void *)(v67 + 64) = v162;
          *(void *)(v67 + 32) = v70;
          *(void *)(v67 + 40) = v72;
          sub_1000BBBE0();
          sub_1000B8770();

          swift_bridgeObjectRelease();
          uint64_t v73 = v170;
          (*(void (**)(char *, void, uint64_t))(v170 + 104))(v40, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v38);
          sub_1000B86B0();
          (*(void (**)(char *, uint64_t))(v73 + 8))(v40, v38);
          v161(v163, v65, v63);
          uint64_t v74 = v172;
          sub_1000BB6A0();
          uint64_t v75 = (void *)sub_1000BBD80();
          uint64_t v76 = swift_allocObject();
          *(_OWORD *)(v76 + 16) = v164;
          uint64_t v77 = v173;
          uint64_t v170 = *(void *)(v173 + 16);
          uint64_t v78 = (uint64_t)v171;
          uint64_t v79 = v175;
          ((void (*)(char *, char *, uint64_t))v170)(v171, v74, v175);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v78, 0, 1, v79);
          uint64_t v80 = sub_1000BB200();
          uint64_t v82 = v81;
          sub_1000184DC(v78, &qword_1000EC630);
          uint64_t v83 = v162;
          *(void *)(v76 + 56) = &type metadata for String;
          *(void *)(v76 + 64) = v83;
          *(void *)(v76 + 32) = v80;
          *(void *)(v76 + 40) = v82;
          sub_1000BBBE0();
          sub_1000B8770();

          swift_bridgeObjectRelease();
          sub_100057318((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
          swift_allocError();
          ((void (*)(uint64_t, char *, uint64_t))v170)(v84, v74, v79);
          swift_willThrow();
          sub_1000180CC(v147, v148);
          sub_100018074(v176, v174);
          swift_release();
          (*(void (**)(char *, uint64_t))(v77 + 8))(v74, v79);
          (*(void (**)(char *, unint64_t))(v166 + 8))(v165, v168);
          return swift_errorRelease();
        }
        swift_errorRelease();
        sub_100018190();
        uint64_t v114 = (void *)sub_1000BBD80();
        sub_10001295C(&qword_1000EC5C8);
        uint64_t v115 = swift_allocObject();
        *(_OWORD *)(v115 + 16) = xmmword_1000BF8A0;
        unint64_t v177 = v61;
        uint64_t v116 = sub_1000BB200();
        uint64_t v118 = v117;
        *(void *)(v115 + 56) = &type metadata for String;
        *(void *)(v115 + 64) = sub_10001824C();
        *(void *)(v115 + 32) = v116;
        *(void *)(v115 + 40) = v118;
        sub_1000BBBE0();
        sub_1000B8770();

        swift_bridgeObjectRelease();
        swift_getErrorValue();
        swift_getDynamicType();
        unint64_t v177 = 0;
        unint64_t v178 = 0xE000000000000000;
        sub_1000BBED0(22);
        swift_bridgeObjectRelease();
        unint64_t v177 = 0xD000000000000014;
        unint64_t v178 = 0x80000001000C9380;
        v186._countAndFlagsBits = sub_1000BC2B0();
        sub_1000BB9A0(v186);
        swift_bridgeObjectRelease();
        sub_100057318((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
        sub_1000BB6B0();
        swift_willThrow();
        swift_errorRelease();
        goto LABEL_19;
      }
      uint64_t v175 = 0;
      unint64_t v96 = v178;
      unint64_t v139 = v177;
      uint64_t v141 = v179;
      int v140 = v180;
      uint64_t v173 = v182;
      uint64_t v170 = v183;
      Swift::String v171 = v181;
      LODWORD(v169) = v184;
      v138[1] = v185;
      unint64_t v168 = sub_100018190();
      uint64_t v97 = (void *)sub_1000BBD80();
      uint64_t v167 = (char *)sub_10001295C(&qword_1000EC5C8);
      uint64_t v98 = swift_allocObject();
      long long v166 = xmmword_1000BF8A0;
      *(_OWORD *)(v98 + 16) = xmmword_1000BF8A0;
      sub_1000B86E0();
      sub_1000BB5C0();
      uint64_t v99 = *(void (**)(char *, uint64_t))(v55 + 8);
      uint64_t v172 = (char *)(v55 + 8);
      v99(v32, v145);
      uint64_t v100 = sub_1000B8380();
      uint64_t v101 = *(void *)(v100 - 8);
      uint64_t v165 = *(char **)(v101 + 56);
      uint64_t v163 = (char *)(v101 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v165)(v35, 0, 1, v100);
      uint64_t v102 = sub_1000BB200();
      uint64_t v104 = v103;
      sub_1000184DC((uint64_t)v35, &qword_1000EC678);
      *(void *)(v98 + 56) = &type metadata for String;
      uint64_t v162 = (char *)sub_10001824C();
      *(void *)(v98 + 64) = v162;
      *(void *)(v98 + 32) = v102;
      *(void *)(v98 + 40) = v104;
      sub_1000BBBE0();
      sub_1000B8770();

      swift_bridgeObjectRelease();
      if (!v96)
      {
        swift_bridgeObjectRelease();
        uint64_t v119 = (void *)sub_1000BBD80();
        uint64_t v120 = swift_allocObject();
        *(_OWORD *)(v120 + 16) = v166;
        sub_1000B86E0();
        sub_1000BB5C0();
        v99(v32, v145);
        ((void (*)(char *, void, uint64_t, uint64_t))v165)(v35, 0, 1, v100);
        uint64_t v121 = sub_1000BB200();
        uint64_t v123 = v122;
        sub_1000184DC((uint64_t)v35, &qword_1000EC678);
        uint64_t v124 = v162;
        *(void *)(v120 + 56) = &type metadata for String;
        *(void *)(v120 + 64) = v124;
        *(void *)(v120 + 32) = v121;
        *(void *)(v120 + 40) = v123;
        sub_1000BBBE0();
        sub_1000B8770();

        swift_bridgeObjectRelease();
        sub_1000573B4();
        swift_allocError();
        swift_willThrow();
LABEL_19:
        swift_release();
        sub_100018074(v176, v174);
        return sub_1000180CC(v147, v148);
      }
      unint64_t v168 = (unint64_t)v99;
      uint64_t v105 = v158;
      uint64_t v106 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v158 + 56);
      uint64_t v107 = v164;
      uint64_t v108 = v159;
      v106(v164, 1, 1, v159);
      uint64_t v109 = v173;
      unint64_t v142 = v96;
      if (v173)
      {
        uint64_t v180 = &type metadata for MessageEditedPartDictionary;
        uint64_t v181 = (char *)&off_1000E4B78;
        uint64_t v110 = swift_allocObject();
        unint64_t v177 = v110;
        *(void *)(v110 + 16) = v171;
        *(void *)(v110 + 24) = v109;
        *(_OWORD *)(v110 + 32) = 0u;
        *(_OWORD *)(v110 + 48) = 0u;
        *(_OWORD *)(v110 + 64) = 0u;
        uint64_t v111 = v157;
        uint64_t v112 = v175;
        sub_1000A4FB4(&v177, v157);
        uint64_t v175 = v112;
        uint64_t v113 = v160;
        if (v112)
        {
          sub_1000184DC(v107, &qword_1000ED390);
          sub_1000180CC(v147, v148);
          sub_100018074(v176, v174);
          swift_bridgeObjectRelease();
          return swift_release();
        }
        uint64_t v127 = (uint64_t)v150;
        uint64_t v128 = v111;
        uint64_t v129 = (char *)v161;
        (*(void (**)(char *, uint64_t, uint64_t))(v105 + 32))(v150, v128, v108);
        sub_1000184DC(v107, &qword_1000ED390);
        v106(v127, 0, 1, v108);
        sub_1000574C0(v127, v107);
        uint64_t v125 = v129;
        uint64_t v126 = v155;
      }
      else
      {
        uint64_t v125 = (char *)v161;
        uint64_t v126 = v155;
        uint64_t v113 = v160;
      }
      uint64_t v130 = v144;
      uint64_t v131 = v156;
      (*(void (**)(char *, void, uint64_t))(v144 + 104))(v151, enum case for EditMessageCommand.MessageEditType.unspecified(_:), v156);
      sub_1000BA860();
      sub_1000B86E0();
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v126, v125, v131);
      uint64_t v132 = v153;
      sub_100057408(v107, v153);
      uint64_t v133 = sub_1000BA7D0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v133 - 8) + 56))(v154, 1, 1, v133);
      uint64_t v134 = v175;
      sub_1000B9DF0();
      uint64_t v135 = (void (*)(char *, uint64_t))v168;
      if (v134)
      {
        sub_1000180CC(v147, v148);
        sub_100018074(v176, v174);
        swift_bridgeObjectRelease();
        swift_release();
        sub_1000184DC(v132, &qword_1000ED390);
        uint64_t v136 = *(void (**)(char *, uint64_t))(v130 + 8);
        v136(v126, v131);
        v135(v113, v145);
        v136(v125, v131);
        return sub_1000184DC(v164, &qword_1000ED390);
      }
      else
      {
        uint64_t v137 = v164;
        sub_1000BA880();
        sub_1000180CC(v147, v148);
        sub_100018074(v176, v174);
        swift_release();
        (*(void (**)(char *, uint64_t))(v144 + 8))(v125, v131);
        return sub_1000184DC(v137, &qword_1000ED390);
      }
    case 2uLL:
      uint64_t v58 = *(void *)(v176 + 16);
      uint64_t v57 = *(void *)(v176 + 24);
      BOOL v59 = __OFSUB__(v57, v58);
      uint64_t v56 = v57 - v58;
      if (!v59) {
        goto LABEL_8;
      }
      goto LABEL_27;
    case 3uLL:
      goto LABEL_12;
    default:
      uint64_t v56 = BYTE6(v174);
      goto LABEL_8;
  }
}

uint64_t sub_100057144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000B8700();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B81C0();
  swift_allocObject();
  sub_1000B81B0();
  sub_100057318(&qword_1000EC620, (void (*)(uint64_t))&type metadata accessor for TopLevelDictionary);
  sub_1000B81A0();
  uint64_t result = swift_release();
  if (!v1)
  {
    sub_100055948((uint64_t)v6, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

unint64_t sub_1000572C4()
{
  unint64_t result = qword_1000ED398;
  if (!qword_1000ED398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED398);
  }
  return result;
}

uint64_t sub_100057318(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100057360()
{
  unint64_t result = qword_1000ED3A0;
  if (!qword_1000ED3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED3A0);
  }
  return result;
}

unint64_t sub_1000573B4()
{
  unint64_t result = qword_1000ED3A8;
  if (!qword_1000ED3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED3A8);
  }
  return result;
}

uint64_t sub_100057408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000ED390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100057470()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1000574C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000ED390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for EditMessageCommandUnpacker.NoEditedMessageGUID()
{
  return &type metadata for EditMessageCommandUnpacker.NoEditedMessageGUID;
}

ValueMetadata *type metadata accessor for EditMessageCommandUnpacker.EncryptedMessageMissingData()
{
  return &type metadata for EditMessageCommandUnpacker.EncryptedMessageMissingData;
}

ValueMetadata *type metadata accessor for CollaborationClearNoticeUnpacker()
{
  return &type metadata for CollaborationClearNoticeUnpacker;
}

uint64_t sub_100057558()
{
  return sub_100057A90(&qword_1000ED3B0, (void (*)(uint64_t))&type metadata accessor for CollaborationClearNotice);
}

id sub_1000575A0@<X0>(uint64_t a1@<X8>)
{
  v23[1] = a1;
  uint64_t v1 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000BB6C0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000B8340();
  __chkstk_darwin(v8 - 8);
  sub_100018190();
  uint64_t v9 = (void *)sub_1000BBDF0();
  sub_1000BBBE0();
  sub_1000B8770();

  uint64_t v10 = self;
  Class isa = sub_1000B82B0().super.isa;
  id v12 = [v10 initWithData:isa];

  if (v12)
  {
    [v12 version];
    id result = [v12 guidString];
    if (result)
    {
      uint64_t v14 = result;
      sub_1000BB900();

      [v12 dateAsTimeIntervalSince1970];
      sub_1000B8320();
      id result = [v12 collaborationId];
      if (result)
      {
        uint64_t v15 = result;
        sub_1000BB900();

        sub_1000BAE00();
        return (id)swift_unknownObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    sub_1000BB6B0();
    uint64_t v16 = (void *)sub_1000BBDF0();
    sub_10001295C(&qword_1000EC5C8);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1000BF8A0;
    uint64_t v18 = v5;
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v24(v3, v7, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    uint64_t v19 = sub_1000BB200();
    uint64_t v21 = v20;
    sub_100057A30((uint64_t)v3);
    *(void *)(v17 + 56) = &type metadata for String;
    *(void *)(v17 + 64) = sub_10001824C();
    *(void *)(v17 + 32) = v19;
    *(void *)(v17 + 40) = v21;
    sub_1000BBBE0();
    sub_1000B8770();

    swift_bridgeObjectRelease();
    sub_100057A90((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    v24(v22, v7, v4);
    swift_willThrow();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v7, v4);
  }
  return result;
}

id sub_100057A18@<X0>(uint64_t a1@<X8>)
{
  return sub_1000575A0(a1);
}

uint64_t sub_100057A30(uint64_t a1)
{
  uint64_t v2 = sub_10001295C(&qword_1000EC630);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100057A90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100057AD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SMSDictionary() + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  BOOL v6 = *v3 == 7564659 && v5 == 0xE300000000000000;
  if (v6 || (sub_1000BC1A0() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)&enum case for SMSMessage.SMSType.sms(_:);
LABEL_19:
    uint64_t v10 = *v7;
    uint64_t v11 = sub_1000B8BA0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(a1, v10, v11);
  }
  BOOL v8 = v4 == 7564653 && v5 == 0xE300000000000000;
  if (v8 || (sub_1000BC1A0() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)&enum case for SMSMessage.SMSType.mms(_:);
    goto LABEL_19;
  }
  BOOL v9 = v4 == 0x6E776F6E6B6E75 && v5 == 0xE700000000000000;
  if (v9 || (sub_1000BC1A0() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)&enum case for SMSMessage.SMSType.unknown(_:);
    goto LABEL_19;
  }
  sub_1000BB6C0();
  sub_10005BC88((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
  swift_allocError();
  sub_1000BB6B0();
  return swift_willThrow();
}

uint64_t sub_100057CE0()
{
  uint64_t v1 = type metadata accessor for SMSDictionary();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001295C(&qword_1000EC678);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v51 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  BOOL v8 = (char *)&v43 - v7;
  uint64_t v9 = sub_10001295C(&qword_1000EC778);
  __chkstk_darwin(v9 - 8);
  uint64_t v58 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001295C(&qword_1000EC780);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10001295C(&qword_1000EC788);
  __chkstk_darwin(v52);
  uint64_t v60 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v0 + *(int *)(v1 + 88));
  if (!v17 || (uint64_t v57 = *(void *)(v17 + 16)) == 0)
  {
LABEL_13:
    sub_100058490(v0, (uint64_t)v3);
    uint64_t v37 = *(void *)&v3[*(int *)(v1 + 80)];
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  uint64_t v48 = v14;
  uint64_t v49 = v8;
  uint64_t v43 = v1;
  uint64_t v44 = v0;
  uint64_t v45 = v3;
  unint64_t v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  uint64_t v46 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
  uint64_t v47 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v56 = (void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v50 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  swift_bridgeObjectRetain();
  unint64_t v18 = 0;
  uint64_t v19 = (uint64_t *)(v17 + 48);
  unint64_t v55 = 0x80000001000C9660;
  uint64_t v59 = v11;
  uint64_t v20 = v52;
  uint64_t v21 = v60;
  uint64_t v54 = v17;
  while (1)
  {
    uint64_t v23 = *(v19 - 1);
    uint64_t v24 = *v19;
    uint64_t v25 = v19[1];
    uint64_t v26 = v19[4];
    unint64_t v27 = v19[5];
    uint64_t v61 = v19[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v62 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v63 = v27;
    uint64_t v64 = v26;
    sub_100017FA4(v26, v27);
    sub_10001295C(&qword_1000EC7B0);
    sub_1000B8460();
    if (v25) {
      break;
    }
    uint64_t v22 = (uint64_t)v58;
    (*v50)(v58, 1, 1, v59);
LABEL_5:
    (*v56)(v21, v20);
    sub_1000184DC(v22, &qword_1000EC778);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    sub_1000180CC(v64, v63);
    swift_bridgeObjectRelease();
    ++v18;
    v19 += 8;
    if (v57 == v18) {
      goto LABEL_12;
    }
  }
  *(void *)&v65[0] = v24;
  *((void *)&v65[0] + 1) = v25;
  sub_100020E08();
  sub_100020E5C();
  uint64_t v28 = v58;
  sub_1000BB8A0();
  uint64_t v22 = (uint64_t)v28;
  uint64_t v21 = v60;
  if ((*v53)(v22, 1, v59) == 1) {
    goto LABEL_5;
  }
  uint64_t v29 = v48;
  uint64_t v30 = v59;
  (*v46)(v48, v22, v59);
  swift_getKeyPath();
  sub_1000B8470();
  swift_release();
  sub_1000BB970();
  swift_bridgeObjectRelease();
  uint64_t v31 = (uint64_t)v49;
  sub_1000B8350();
  swift_bridgeObjectRelease();
  uint64_t v32 = v51;
  sub_10003EF6C(v31, v51);
  uint64_t v33 = sub_1000B8380();
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) == 1)
  {
    sub_1000184DC(v31, &qword_1000EC678);
    (*v47)(v29, v30);
    uint64_t v21 = v60;
    uint64_t v20 = v52;
    (*v56)(v60, v52);
    sub_1000184DC(v32, &qword_1000EC678);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  sub_1000B8360();
  sub_1000184DC(v31, &qword_1000EC678);
  (*v47)(v29, v30);
  (*v56)(v60, v52);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000180CC(v64, v63);
  swift_bridgeObjectRelease();
  uint64_t v35 = v54;
  uint64_t result = swift_bridgeObjectRelease();
  if (v57 == v18)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v3 = v45;
    uint64_t v0 = v44;
    uint64_t v1 = v43;
    goto LABEL_13;
  }
  if (v18 >= *(void *)(v35 + 16))
  {
    __break(1u);
    goto LABEL_19;
  }
  long long v38 = *((_OWORD *)v19 - 1);
  long long v39 = *(_OWORD *)v19;
  long long v40 = *((_OWORD *)v19 + 2);
  v65[2] = *((_OWORD *)v19 + 1);
  v65[3] = v40;
  v65[0] = v38;
  v65[1] = v39;
  sub_100020CE4((uint64_t)v65);
  uint64_t v37 = sub_10003DAC0();
  uint64_t v42 = v41;
  uint64_t result = sub_100020D48((uint64_t)v65);
  if (!v42)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = v45;
  sub_100058490(v44, (uint64_t)v45);
LABEL_14:
  sub_100020DAC((uint64_t)v3);
  return v37;
}

uint64_t type metadata accessor for SMSDictionary()
{
  uint64_t result = qword_1000ED410;
  if (!qword_1000ED410) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100058490(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SMSDictionary();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_1000584F4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a3[5];
    BOOL v8 = (void *)(a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1000B8B80();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_10001295C(&qword_1000EC798);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    uint64_t v16 = (void *)((char *)v4 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = (void *)((char *)v4 + v15);
    uint64_t v20 = (uint64_t *)((char *)a2 + v15);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = a3[9];
    *(void *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    __dst = (char *)v4 + v22;
    uint64_t v23 = (char *)a2 + v22;
    uint64_t v24 = sub_1000B8340();
    uint64_t v25 = *(void *)(v24 - 8);
    unint64_t v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v96(v23, 1, v24))
    {
      uint64_t v26 = sub_10001295C(&qword_1000EC790);
      memcpy(__dst, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
    }
    uint64_t v27 = a3[10];
    uint64_t v28 = a3[11];
    uint64_t v29 = (void *)((char *)v4 + v27);
    uint64_t v30 = (uint64_t *)((char *)a2 + v27);
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = (char *)v4 + v28;
    uint64_t v33 = (uint64_t)a2 + v28;
    *(void *)uint64_t v32 = *(void *)v33;
    v32[8] = *(unsigned char *)(v33 + 8);
    uint64_t v34 = a3[12];
    uint64_t v35 = a3[13];
    uint64_t v36 = (void *)((char *)v4 + v34);
    uint64_t v37 = (uint64_t *)((char *)a2 + v34);
    uint64_t v97 = v37[1];
    void *v36 = *v37;
    v36[1] = v97;
    long long v38 = (void *)((char *)v4 + v35);
    long long v39 = (uint64_t *)((char *)a2 + v35);
    __dsta = (void *)v39[1];
    void *v38 = *v39;
    v38[1] = __dsta;
    uint64_t v40 = a3[14];
    uint64_t v41 = a3[15];
    uint64_t v42 = (void *)((char *)v4 + v40);
    uint64_t v43 = (uint64_t *)((char *)a2 + v40);
    uint64_t v94 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v94;
    uint64_t v44 = (void *)((char *)v4 + v41);
    uint64_t v45 = (uint64_t *)((char *)a2 + v41);
    uint64_t v95 = v45[1];
    void *v44 = *v45;
    v44[1] = v95;
    uint64_t v46 = a3[16];
    uint64_t v47 = a3[17];
    uint64_t v48 = (void *)((char *)v4 + v46);
    uint64_t v49 = (uint64_t *)((char *)a2 + v46);
    uint64_t v92 = v49[1];
    *uint64_t v48 = *v49;
    v48[1] = v92;
    uint64_t v50 = (void *)((char *)v4 + v47);
    uint64_t v51 = (uint64_t *)((char *)a2 + v47);
    uint64_t v93 = v51[1];
    void *v50 = *v51;
    v50[1] = v93;
    uint64_t v52 = a3[18];
    uint64_t v53 = a3[19];
    uint64_t v54 = (char *)v4 + v52;
    uint64_t v55 = (uint64_t)a2 + v52;
    *(void *)uint64_t v54 = *(void *)v55;
    v54[8] = *(unsigned char *)(v55 + 8);
    uint64_t v56 = (void *)((char *)v4 + v53);
    uint64_t v57 = (uint64_t *)((char *)a2 + v53);
    uint64_t v91 = v57[1];
    *uint64_t v56 = *v57;
    v56[1] = v91;
    uint64_t v58 = a3[20];
    uint64_t v59 = a3[21];
    uint64_t v60 = (void *)((char *)v4 + v58);
    uint64_t v61 = (uint64_t *)((char *)a2 + v58);
    uint64_t v62 = v61[1];
    void *v60 = *v61;
    v60[1] = v62;
    unint64_t v63 = (void *)((char *)v4 + v59);
    uint64_t v64 = (uint64_t *)((char *)a2 + v59);
    uint64_t v65 = v64[1];
    void *v63 = *v64;
    v63[1] = v65;
    uint64_t v66 = a3[23];
    *(void *)((char *)v4 + a3[22]) = *(uint64_t *)((char *)a2 + a3[22]);
    *((unsigned char *)v4 + v66) = *((unsigned char *)a2 + v66);
    uint64_t v67 = a3[25];
    *((unsigned char *)v4 + a3[24]) = *((unsigned char *)a2 + a3[24]);
    unint64_t v68 = (void *)((char *)v4 + v67);
    uint64_t v69 = (uint64_t *)((char *)a2 + v67);
    uint64_t v70 = v69[1];
    void *v68 = *v69;
    v68[1] = v70;
    uint64_t v71 = a3[26];
    uint64_t v72 = a3[27];
    uint64_t v73 = (char *)v4 + v71;
    uint64_t v74 = (uint64_t)a2 + v71;
    *(void *)uint64_t v73 = *(void *)v74;
    v73[8] = *(unsigned char *)(v74 + 8);
    uint64_t v75 = (void *)((char *)v4 + v72);
    uint64_t v76 = (uint64_t *)((char *)a2 + v72);
    uint64_t v77 = v76[1];
    *uint64_t v75 = *v76;
    v75[1] = v77;
    uint64_t v78 = a3[28];
    uint64_t v79 = a3[29];
    uint64_t v80 = (void *)((char *)v4 + v78);
    uint64_t v81 = (uint64_t *)((char *)a2 + v78);
    uint64_t v82 = v81[1];
    *uint64_t v80 = *v81;
    v80[1] = v82;
    uint64_t v83 = (void *)((char *)v4 + v79);
    uint64_t v84 = (uint64_t *)((char *)a2 + v79);
    uint64_t v85 = v84[1];
    *uint64_t v83 = *v84;
    v83[1] = v85;
    uint64_t v86 = a3[30];
    uint64_t v87 = (void *)((char *)v4 + v86);
    uint64_t v88 = (uint64_t *)((char *)a2 + v86);
    uint64_t v89 = v88[1];
    *uint64_t v87 = *v88;
    v87[1] = v89;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000589C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1000B8B80();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 36);
  uint64_t v8 = sub_1000B8340();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100058C38(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1000B8B80();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10001295C(&qword_1000EC798);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)(a1 + v13);
  uint64_t v18 = (void *)(a2 + v13);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  __dst = (void *)(a1 + v20);
  uint64_t v21 = (const void *)(a2 + v20);
  uint64_t v22 = sub_1000B8340();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v94 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v94(v21, 1, v22))
  {
    uint64_t v24 = sub_10001295C(&qword_1000EC790);
    memcpy(__dst, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(__dst, v21, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
  }
  uint64_t v25 = a3[10];
  uint64_t v26 = a3[11];
  uint64_t v27 = (void *)(a1 + v25);
  uint64_t v28 = (void *)(a2 + v25);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = a1 + v26;
  uint64_t v31 = a2 + v26;
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  uint64_t v32 = a3[12];
  uint64_t v33 = a3[13];
  uint64_t v34 = (void *)(a1 + v32);
  uint64_t v35 = (void *)(a2 + v32);
  uint64_t v95 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v95;
  uint64_t v36 = (void *)(a1 + v33);
  uint64_t v37 = (void *)(a2 + v33);
  __dsta = (void *)v37[1];
  void *v36 = *v37;
  v36[1] = __dsta;
  uint64_t v38 = a3[14];
  uint64_t v39 = a3[15];
  uint64_t v40 = (void *)(a1 + v38);
  uint64_t v41 = (void *)(a2 + v38);
  uint64_t v92 = v41[1];
  *uint64_t v40 = *v41;
  v40[1] = v92;
  uint64_t v42 = (void *)(a1 + v39);
  uint64_t v43 = (void *)(a2 + v39);
  uint64_t v93 = v43[1];
  *uint64_t v42 = *v43;
  v42[1] = v93;
  uint64_t v44 = a3[16];
  uint64_t v45 = a3[17];
  uint64_t v46 = (void *)(a1 + v44);
  uint64_t v47 = (void *)(a2 + v44);
  uint64_t v90 = v47[1];
  *uint64_t v46 = *v47;
  v46[1] = v90;
  uint64_t v48 = (void *)(a1 + v45);
  uint64_t v49 = (void *)(a2 + v45);
  uint64_t v91 = v49[1];
  *uint64_t v48 = *v49;
  v48[1] = v91;
  uint64_t v50 = a3[18];
  uint64_t v51 = a3[19];
  uint64_t v52 = a1 + v50;
  uint64_t v53 = a2 + v50;
  *(void *)uint64_t v52 = *(void *)v53;
  *(unsigned char *)(v52 + 8) = *(unsigned char *)(v53 + 8);
  uint64_t v54 = (void *)(a1 + v51);
  uint64_t v55 = (void *)(a2 + v51);
  uint64_t v89 = v55[1];
  void *v54 = *v55;
  v54[1] = v89;
  uint64_t v56 = a3[20];
  uint64_t v57 = a3[21];
  uint64_t v58 = (void *)(a1 + v56);
  uint64_t v59 = (void *)(a2 + v56);
  uint64_t v60 = v59[1];
  *uint64_t v58 = *v59;
  v58[1] = v60;
  uint64_t v61 = (void *)(a1 + v57);
  uint64_t v62 = (void *)(a2 + v57);
  uint64_t v63 = v62[1];
  void *v61 = *v62;
  v61[1] = v63;
  uint64_t v64 = a3[23];
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  *(unsigned char *)(a1 + v64) = *(unsigned char *)(a2 + v64);
  uint64_t v65 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  uint64_t v66 = (void *)(a1 + v65);
  uint64_t v67 = (void *)(a2 + v65);
  uint64_t v68 = v67[1];
  void *v66 = *v67;
  v66[1] = v68;
  uint64_t v69 = a3[26];
  uint64_t v70 = a3[27];
  uint64_t v71 = a1 + v69;
  uint64_t v72 = a2 + v69;
  *(void *)uint64_t v71 = *(void *)v72;
  *(unsigned char *)(v71 + 8) = *(unsigned char *)(v72 + 8);
  uint64_t v73 = (void *)(a1 + v70);
  uint64_t v74 = (void *)(a2 + v70);
  uint64_t v75 = v74[1];
  *uint64_t v73 = *v74;
  v73[1] = v75;
  uint64_t v76 = a3[28];
  uint64_t v77 = a3[29];
  uint64_t v78 = (void *)(a1 + v76);
  uint64_t v79 = (void *)(a2 + v76);
  uint64_t v80 = v79[1];
  *uint64_t v78 = *v79;
  v78[1] = v80;
  uint64_t v81 = (void *)(a1 + v77);
  uint64_t v82 = (void *)(a2 + v77);
  uint64_t v83 = v82[1];
  void *v81 = *v82;
  v81[1] = v83;
  uint64_t v84 = a3[30];
  uint64_t v85 = (void *)(a1 + v84);
  uint64_t v86 = (void *)(a2 + v84);
  uint64_t v87 = v86[1];
  void *v85 = *v86;
  v85[1] = v87;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000590B8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000B8B80();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_10001295C(&qword_1000EC798);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1000B8340();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    uint64_t v30 = sub_10001295C(&qword_1000EC790);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_13:
  uint64_t v31 = a3[10];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)((char *)a2 + v31);
  void *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[11];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (uint64_t *)((char *)a2 + v34);
  uint64_t v37 = *v36;
  *(unsigned char *)(v35 + 8) = *((unsigned char *)v36 + 8);
  *(void *)uint64_t v35 = v37;
  uint64_t v38 = a3[12];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (uint64_t *)((char *)a2 + v38);
  void *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[13];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (uint64_t *)((char *)a2 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[14];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (uint64_t *)((char *)a2 + v44);
  void *v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = a3[15];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (uint64_t *)((char *)a2 + v47);
  *uint64_t v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v50 = a3[16];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (uint64_t *)((char *)a2 + v50);
  *uint64_t v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[17];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (uint64_t *)((char *)a2 + v53);
  void *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = a3[18];
  uint64_t v57 = a1 + v56;
  uint64_t v58 = (uint64_t *)((char *)a2 + v56);
  uint64_t v59 = *v58;
  *(unsigned char *)(v57 + 8) = *((unsigned char *)v58 + 8);
  *(void *)uint64_t v57 = v59;
  uint64_t v60 = a3[19];
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = (uint64_t *)((char *)a2 + v60);
  void *v61 = *v62;
  v61[1] = v62[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = a3[20];
  uint64_t v64 = (void *)(a1 + v63);
  uint64_t v65 = (uint64_t *)((char *)a2 + v63);
  *uint64_t v64 = *v65;
  v64[1] = v65[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v66 = a3[21];
  uint64_t v67 = (void *)(a1 + v66);
  uint64_t v68 = (uint64_t *)((char *)a2 + v66);
  *uint64_t v67 = *v68;
  v67[1] = v68[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[22]) = *(uint64_t *)((char *)a2 + a3[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[23]) = *((unsigned char *)a2 + a3[23]);
  *(unsigned char *)(a1 + a3[24]) = *((unsigned char *)a2 + a3[24]);
  uint64_t v69 = a3[25];
  uint64_t v70 = (void *)(a1 + v69);
  uint64_t v71 = (uint64_t *)((char *)a2 + v69);
  *uint64_t v70 = *v71;
  v70[1] = v71[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v72 = a3[26];
  uint64_t v73 = a1 + v72;
  uint64_t v74 = (uint64_t *)((char *)a2 + v72);
  uint64_t v75 = *v74;
  *(unsigned char *)(v73 + 8) = *((unsigned char *)v74 + 8);
  *(void *)uint64_t v73 = v75;
  uint64_t v76 = a3[27];
  uint64_t v77 = (void *)(a1 + v76);
  uint64_t v78 = (uint64_t *)((char *)a2 + v76);
  *uint64_t v77 = *v78;
  v77[1] = v78[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v79 = a3[28];
  uint64_t v80 = (void *)(a1 + v79);
  uint64_t v81 = (uint64_t *)((char *)a2 + v79);
  *uint64_t v80 = *v81;
  v80[1] = v81[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v82 = a3[29];
  uint64_t v83 = (void *)(a1 + v82);
  uint64_t v84 = (uint64_t *)((char *)a2 + v82);
  *uint64_t v83 = *v84;
  v83[1] = v84[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v85 = a3[30];
  uint64_t v86 = (void *)(a1 + v85);
  uint64_t v87 = (uint64_t *)((char *)a2 + v85);
  void *v86 = *v87;
  v86[1] = v87[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10005970C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1000B8B80();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10001295C(&qword_1000EC798);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v13 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  int v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_1000B8340();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_10001295C(&qword_1000EC790);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  uint64_t v23 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  uint64_t v24 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  uint64_t v25 = a3[18];
  uint64_t v26 = a3[19];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  uint64_t v29 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  *(_OWORD *)(a1 + v29) = *(_OWORD *)(a2 + v29);
  uint64_t v30 = a3[23];
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  *(unsigned char *)(a1 + v30) = *(unsigned char *)(a2 + v30);
  uint64_t v31 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(_OWORD *)(a1 + v31) = *(_OWORD *)(a2 + v31);
  uint64_t v32 = a3[26];
  uint64_t v33 = a3[27];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  *(void *)uint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  *(_OWORD *)(a1 + v33) = *(_OWORD *)(a2 + v33);
  uint64_t v36 = a3[29];
  *(_OWORD *)(a1 + a3[28]) = *(_OWORD *)(a2 + a3[28]);
  *(_OWORD *)(a1 + v36) = *(_OWORD *)(a2 + v36);
  *(_OWORD *)(a1 + a3[30]) = *(_OWORD *)(a2 + a3[30]);
  return a1;
}

uint64_t sub_100059A30(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1000B8B80();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10001295C(&qword_1000EC798);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  void *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = sub_1000B8340();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v29 + 40))(v26, v27, v28);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v29 + 8))(v26, v28);
    goto LABEL_12;
  }
  if (v32)
  {
LABEL_12:
    uint64_t v33 = sub_10001295C(&qword_1000EC790);
    memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v29 + 32))(v26, v27, v28);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_13:
  uint64_t v34 = a3[10];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v38 = *v36;
  uint64_t v37 = v36[1];
  *uint64_t v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[11];
  uint64_t v40 = a3[12];
  uint64_t v41 = a1 + v39;
  uint64_t v42 = a2 + v39;
  *(void *)uint64_t v41 = *(void *)v42;
  *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
  uint64_t v43 = (void *)(a1 + v40);
  uint64_t v44 = (uint64_t *)(a2 + v40);
  uint64_t v46 = *v44;
  uint64_t v45 = v44[1];
  *uint64_t v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  uint64_t v47 = a3[13];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (uint64_t *)(a2 + v47);
  uint64_t v51 = *v49;
  uint64_t v50 = v49[1];
  *uint64_t v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease();
  uint64_t v52 = a3[14];
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (uint64_t *)(a2 + v52);
  uint64_t v56 = *v54;
  uint64_t v55 = v54[1];
  *uint64_t v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  uint64_t v57 = a3[15];
  uint64_t v58 = (void *)(a1 + v57);
  uint64_t v59 = (uint64_t *)(a2 + v57);
  uint64_t v61 = *v59;
  uint64_t v60 = v59[1];
  *uint64_t v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  uint64_t v62 = a3[16];
  uint64_t v63 = (void *)(a1 + v62);
  uint64_t v64 = (uint64_t *)(a2 + v62);
  uint64_t v66 = *v64;
  uint64_t v65 = v64[1];
  void *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  uint64_t v67 = a3[17];
  uint64_t v68 = (void *)(a1 + v67);
  uint64_t v69 = (uint64_t *)(a2 + v67);
  uint64_t v71 = *v69;
  uint64_t v70 = v69[1];
  void *v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  uint64_t v72 = a3[18];
  uint64_t v73 = a3[19];
  uint64_t v74 = a1 + v72;
  uint64_t v75 = a2 + v72;
  *(void *)uint64_t v74 = *(void *)v75;
  *(unsigned char *)(v74 + 8) = *(unsigned char *)(v75 + 8);
  uint64_t v76 = (void *)(a1 + v73);
  uint64_t v77 = (uint64_t *)(a2 + v73);
  uint64_t v79 = *v77;
  uint64_t v78 = v77[1];
  void *v76 = v79;
  v76[1] = v78;
  swift_bridgeObjectRelease();
  uint64_t v80 = a3[20];
  uint64_t v81 = (void *)(a1 + v80);
  uint64_t v82 = (uint64_t *)(a2 + v80);
  uint64_t v84 = *v82;
  uint64_t v83 = v82[1];
  void *v81 = v84;
  v81[1] = v83;
  swift_bridgeObjectRelease();
  uint64_t v85 = a3[21];
  uint64_t v86 = (void *)(a1 + v85);
  uint64_t v87 = (uint64_t *)(a2 + v85);
  uint64_t v89 = *v87;
  uint64_t v88 = v87[1];
  void *v86 = v89;
  v86[1] = v88;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  swift_bridgeObjectRelease();
  uint64_t v90 = a3[24];
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + v90) = *(unsigned char *)(a2 + v90);
  uint64_t v91 = a3[25];
  uint64_t v92 = (void *)(a1 + v91);
  uint64_t v93 = (uint64_t *)(a2 + v91);
  uint64_t v95 = *v93;
  uint64_t v94 = v93[1];
  *uint64_t v92 = v95;
  v92[1] = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = a3[26];
  uint64_t v97 = a3[27];
  uint64_t v98 = a1 + v96;
  uint64_t v99 = a2 + v96;
  *(void *)uint64_t v98 = *(void *)v99;
  *(unsigned char *)(v98 + 8) = *(unsigned char *)(v99 + 8);
  uint64_t v100 = (void *)(a1 + v97);
  uint64_t v101 = (uint64_t *)(a2 + v97);
  uint64_t v103 = *v101;
  uint64_t v102 = v101[1];
  void *v100 = v103;
  v100[1] = v102;
  swift_bridgeObjectRelease();
  uint64_t v104 = a3[28];
  uint64_t v105 = (void *)(a1 + v104);
  uint64_t v106 = (uint64_t *)(a2 + v104);
  uint64_t v108 = *v106;
  uint64_t v107 = v106[1];
  *uint64_t v105 = v108;
  v105[1] = v107;
  swift_bridgeObjectRelease();
  uint64_t v109 = a3[29];
  uint64_t v110 = (void *)(a1 + v109);
  uint64_t v111 = (uint64_t *)(a2 + v109);
  uint64_t v113 = *v111;
  uint64_t v112 = v111[1];
  *uint64_t v110 = v113;
  v110[1] = v112;
  swift_bridgeObjectRelease();
  uint64_t v114 = a3[30];
  uint64_t v115 = (void *)(a1 + v114);
  uint64_t v116 = (uint64_t *)(a2 + v114);
  uint64_t v118 = *v116;
  uint64_t v117 = v116[1];
  *uint64_t v115 = v118;
  v115[1] = v117;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100059F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100059F68);
}

uint64_t sub_100059F68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10001295C(&qword_1000EC798);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[6] + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v13 = sub_10001295C(&qword_1000EC790);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[9];
    return v14(v16, a2, v15);
  }
}

uint64_t sub_10005A0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005A0B8);
}

uint64_t sub_10005A0B8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_10001295C(&qword_1000EC798);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[5];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v13 = sub_10001295C(&qword_1000EC790);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[9];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

void sub_10005A1F4()
{
  sub_10005A354(319, &qword_1000ED420, (void (*)(uint64_t))&type metadata accessor for SMSMessage.FilterSubCategoryType);
  if (v0 <= 0x3F)
  {
    sub_10005A354(319, (unint64_t *)&unk_1000ED428, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10005A354(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000BBE30();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10005A3A8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001295C(&qword_1000ED4F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_10005BB7C();
  sub_1000BC280();
  LOBYTE(v12) = 0;
  sub_1000BC0D0();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for SMSDictionary();
    LOBYTE(v12) = 1;
    sub_1000B8B80();
    sub_10005BC88(&qword_1000ED500, (void (*)(uint64_t))&type metadata accessor for SMSMessage.FilterSubCategoryType);
    sub_1000BC0F0();
    LOBYTE(v12) = 2;
    sub_1000BC130();
    LOBYTE(v12) = 3;
    sub_1000BC130();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 32));
    HIBYTE(v11) = 4;
    sub_10001295C(&qword_1000EC550);
    sub_100015CA4(&qword_1000EC558);
    sub_1000BC0F0();
    LOBYTE(v12) = 5;
    sub_1000B8340();
    sub_10005BC88(&qword_1000ED508, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000BC0F0();
    LOBYTE(v12) = 6;
    sub_1000BC0A0();
    LOBYTE(v12) = 7;
    sub_1000BC0D0();
    LOBYTE(v12) = 8;
    sub_1000BC0A0();
    LOBYTE(v12) = 9;
    sub_1000BC0A0();
    LOBYTE(v12) = 10;
    sub_1000BC0A0();
    LOBYTE(v12) = 11;
    sub_1000BC0A0();
    LOBYTE(v12) = 12;
    sub_1000BC0A0();
    LOBYTE(v12) = 13;
    sub_1000BC0A0();
    LOBYTE(v12) = 14;
    sub_1000BC0D0();
    LOBYTE(v12) = 15;
    sub_1000BC0A0();
    LOBYTE(v12) = 16;
    sub_1000BC0A0();
    LOBYTE(v12) = 17;
    sub_1000BC0A0();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 88));
    HIBYTE(v11) = 18;
    sub_10001295C(&qword_1000ED4E0);
    sub_10005BCD0(&qword_1000ED510, (void (*)(void))sub_10005BD40);
    sub_1000BC0F0();
    LOBYTE(v12) = 19;
    sub_1000BC0B0();
    LOBYTE(v12) = 20;
    sub_1000BC0B0();
    LOBYTE(v12) = 21;
    sub_1000BC0A0();
    LOBYTE(v12) = 22;
    sub_1000BC120();
    LOBYTE(v12) = 23;
    sub_1000BC0A0();
    LOBYTE(v12) = 24;
    sub_1000BC0A0();
    LOBYTE(v12) = 25;
    sub_1000BC0A0();
    LOBYTE(v12) = 26;
    sub_1000BC0A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10005AAF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v124 = a2;
  uint64_t v3 = sub_10001295C(&qword_1000EC790);
  __chkstk_darwin(v3 - 8);
  uint64_t v126 = (char *)&v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001295C(&qword_1000EC798);
  __chkstk_darwin(v5 - 8);
  uint64_t v128 = (char *)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_10001295C(&qword_1000ED4C0);
  uint64_t v129 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v153 = (char *)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for SMSDictionary();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = 0;
  char v11[8] = 1;
  uint64_t v12 = (uint64_t)&v11[*(int *)(v9 + 20)];
  uint64_t v13 = sub_1000B8B80();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  uint64_t v152 = v12;
  uint64_t v127 = v13;
  v14(v12, 1, 1);
  uint64_t v149 = v8[8];
  *(void *)&v11[v149] = 0;
  uint64_t v15 = (uint64_t)&v11[v8[9]];
  uint64_t v16 = sub_1000B8340();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v150 = v15;
  uint64_t v125 = v16;
  v17(v15, 1, 1);
  uint64_t v18 = &v11[v8[10]];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  uint64_t v151 = v18;
  uint64_t v19 = &v11[v8[11]];
  *(void *)uint64_t v19 = 0;
  void v19[8] = 1;
  uint64_t v20 = &v11[v8[12]];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  unint64_t v148 = v20;
  uint64_t v21 = &v11[v8[13]];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  uint64_t v146 = v21;
  uint64_t v22 = &v11[v8[14]];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = 0;
  uint64_t v145 = v22;
  uint64_t v23 = &v11[v8[15]];
  *(void *)uint64_t v23 = 0;
  *((void *)v23 + 1) = 0;
  uint64_t v144 = v23;
  uint64_t v24 = &v11[v8[16]];
  *(void *)uint64_t v24 = 0;
  *((void *)v24 + 1) = 0;
  uint64_t v143 = v24;
  uint64_t v25 = &v11[v8[17]];
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  unint64_t v142 = v25;
  uint64_t v26 = &v11[v8[18]];
  *(void *)uint64_t v26 = 0;
  v26[8] = 1;
  uint64_t v27 = &v11[v8[19]];
  *(void *)uint64_t v27 = 0;
  *((void *)v27 + 1) = 0;
  uint64_t v138 = v27;
  uint64_t v28 = &v11[v8[20]];
  *(void *)uint64_t v28 = 0;
  *((void *)v28 + 1) = 0;
  uint64_t v137 = v28;
  uint64_t v29 = &v11[v8[21]];
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  uint64_t v136 = v29;
  uint64_t v139 = v8[22];
  *(void *)&v11[v139] = 0;
  uint64_t v30 = v8[23];
  v11[v30] = 2;
  uint64_t v31 = v8[24];
  v11[v31] = 2;
  int v32 = &v11[v8[25]];
  *(void *)int v32 = 0;
  *((void *)v32 + 1) = 0;
  uint64_t v135 = v32;
  uint64_t v33 = &v11[v8[26]];
  *(void *)uint64_t v33 = 0;
  char v33[8] = 1;
  uint64_t v34 = &v11[v8[27]];
  *(void *)uint64_t v34 = 0;
  *((void *)v34 + 1) = 0;
  uint64_t v134 = v34;
  uint64_t v35 = &v11[v8[28]];
  *(void *)uint64_t v35 = 0;
  *((void *)v35 + 1) = 0;
  uint64_t v133 = v35;
  uint64_t v36 = &v11[v8[29]];
  *(void *)uint64_t v36 = 0;
  *((void *)v36 + 1) = 0;
  uint64_t v132 = v36;
  uint64_t v147 = v8;
  uint64_t v37 = &v11[v8[30]];
  *(void *)uint64_t v37 = 0;
  *((void *)v37 + 1) = 0;
  int v140 = v37;
  uint64_t v141 = a1;
  sub_100014C68(a1, a1[3]);
  sub_10005BB7C();
  uint64_t v38 = v131;
  sub_1000BC270();
  if (v38)
  {
    uint64_t v40 = v150;
    sub_100015C54((uint64_t)v141);
    sub_1000184DC(v152, &qword_1000EC798);
    swift_bridgeObjectRelease();
    sub_1000184DC(v40, &qword_1000EC790);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = (uint64_t)v128;
    uint64_t v131 = (uint64_t *)v19;
    uint64_t v123 = v30;
    uint64_t v122 = (uint64_t *)v33;
    LOBYTE(v155) = 0;
    *(void *)uint64_t v11 = sub_1000BBFE0();
    char v11[8] = v41 & 1;
    LOBYTE(v155) = 1;
    sub_10005BC88(&qword_1000ED4D0, (void (*)(uint64_t))&type metadata accessor for SMSMessage.FilterSubCategoryType);
    sub_1000BC000();
    uint64_t v42 = v147;
    sub_10005BBD0(v39, v152, &qword_1000EC798);
    LOBYTE(v155) = 2;
    uint64_t v43 = sub_1000BC040();
    uint64_t v44 = (uint64_t *)&v11[v42[6]];
    uint64_t *v44 = v43;
    v44[1] = v45;
    LOBYTE(v155) = 3;
    uint64_t v46 = sub_1000BC040();
    uint64_t v47 = v149;
    uint64_t v48 = (uint64_t *)&v11[v42[7]];
    *uint64_t v48 = v46;
    v48[1] = v49;
    sub_10001295C(&qword_1000EC550);
    char v154 = 4;
    sub_100015CA4(&qword_1000EC580);
    sub_1000BC000();
    uint64_t v50 = v155;
    swift_bridgeObjectRelease();
    *(void *)&v11[v47] = v50;
    LOBYTE(v155) = 5;
    sub_10005BC88(&qword_1000ED4D8, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v51 = (uint64_t)v126;
    sub_1000BC000();
    sub_10005BBD0(v51, v150, &qword_1000EC790);
    LOBYTE(v155) = 6;
    uint64_t v52 = sub_1000BBFB0();
    uint64_t v53 = (uint64_t *)v151;
    uint64_t v128 = v54;
    swift_bridgeObjectRelease();
    uint64_t v55 = v128;
    *uint64_t v53 = v52;
    v53[1] = (uint64_t)v55;
    LOBYTE(v155) = 7;
    uint64_t v56 = sub_1000BBFE0();
    uint64_t v57 = v131;
    uint64_t *v131 = v56;
    *((unsigned char *)v57 + 8) = v58 & 1;
    LOBYTE(v155) = 8;
    uint64_t v59 = sub_1000BBFB0();
    uint64_t v61 = v60;
    uint64_t v62 = (uint64_t *)v148;
    swift_bridgeObjectRelease();
    uint64_t *v62 = v59;
    v62[1] = v61;
    LOBYTE(v155) = 9;
    uint64_t v63 = sub_1000BBFB0();
    uint64_t v65 = v64;
    uint64_t v66 = (uint64_t *)v146;
    swift_bridgeObjectRelease();
    uint64_t *v66 = v63;
    v66[1] = v65;
    LOBYTE(v155) = 10;
    uint64_t v67 = sub_1000BBFB0();
    uint64_t v69 = v68;
    uint64_t v70 = (uint64_t *)v145;
    swift_bridgeObjectRelease();
    *uint64_t v70 = v67;
    v70[1] = v69;
    LOBYTE(v155) = 11;
    uint64_t v71 = sub_1000BBFB0();
    uint64_t v73 = v72;
    uint64_t v74 = (uint64_t *)v144;
    swift_bridgeObjectRelease();
    *uint64_t v74 = v71;
    v74[1] = v73;
    LOBYTE(v155) = 12;
    uint64_t v75 = sub_1000BBFB0();
    uint64_t v77 = v76;
    uint64_t v78 = (uint64_t *)v143;
    swift_bridgeObjectRelease();
    *uint64_t v78 = v75;
    v78[1] = v77;
    LOBYTE(v155) = 13;
    uint64_t v79 = sub_1000BBFB0();
    uint64_t v81 = v80;
    uint64_t v82 = (uint64_t *)v142;
    swift_bridgeObjectRelease();
    uint64_t *v82 = v79;
    v82[1] = v81;
    LOBYTE(v155) = 14;
    *(void *)uint64_t v26 = sub_1000BBFE0();
    v26[8] = v83 & 1;
    LOBYTE(v155) = 15;
    uint64_t v84 = sub_1000BBFB0();
    uint64_t v86 = v85;
    uint64_t v87 = (uint64_t *)v138;
    swift_bridgeObjectRelease();
    *uint64_t v87 = v84;
    v87[1] = v86;
    LOBYTE(v155) = 16;
    uint64_t v88 = sub_1000BBFB0();
    uint64_t v90 = v89;
    uint64_t v91 = (uint64_t *)v137;
    swift_bridgeObjectRelease();
    uint64_t *v91 = v88;
    v91[1] = v90;
    LOBYTE(v155) = 17;
    uint64_t v92 = sub_1000BBFB0();
    uint64_t v94 = v93;
    uint64_t v95 = (uint64_t *)v136;
    swift_bridgeObjectRelease();
    *uint64_t v95 = v92;
    v95[1] = v94;
    sub_10001295C(&qword_1000ED4E0);
    char v154 = 18;
    sub_10005BCD0(&qword_1000ED4E8, (void (*)(void))sub_10005BC34);
    sub_1000BC000();
    uint64_t v96 = v155;
    uint64_t v97 = v139;
    swift_bridgeObjectRelease();
    *(void *)&v11[v97] = v96;
    LOBYTE(v155) = 19;
    v11[v123] = sub_1000BBFC0();
    LOBYTE(v155) = 20;
    v11[v31] = sub_1000BBFC0();
    LOBYTE(v155) = 21;
    uint64_t v98 = sub_1000BBFB0();
    uint64_t v100 = v99;
    uint64_t v101 = (uint64_t *)v135;
    swift_bridgeObjectRelease();
    *uint64_t v101 = v98;
    v101[1] = v100;
    LOBYTE(v155) = 22;
    uint64_t v102 = sub_1000BC030();
    uint64_t v103 = v122;
    uint64_t *v122 = v102;
    *((unsigned char *)v103 + 8) = v104 & 1;
    LOBYTE(v155) = 23;
    uint64_t v105 = sub_1000BBFB0();
    uint64_t v107 = v106;
    uint64_t v108 = (uint64_t *)v134;
    swift_bridgeObjectRelease();
    *uint64_t v108 = v105;
    v108[1] = v107;
    LOBYTE(v155) = 24;
    uint64_t v109 = sub_1000BBFB0();
    uint64_t v111 = v110;
    uint64_t v112 = (uint64_t *)v133;
    swift_bridgeObjectRelease();
    *uint64_t v112 = v109;
    v112[1] = v111;
    LOBYTE(v155) = 25;
    uint64_t v113 = sub_1000BBFB0();
    uint64_t v115 = v114;
    uint64_t v116 = (uint64_t *)v132;
    swift_bridgeObjectRelease();
    *uint64_t v116 = v113;
    v116[1] = v115;
    LOBYTE(v155) = 26;
    uint64_t v117 = sub_1000BBFB0();
    uint64_t v119 = v118;
    (*(void (**)(char *, uint64_t))(v129 + 8))(v153, v130);
    uint64_t v120 = (uint64_t *)v140;
    swift_bridgeObjectRelease();
    *uint64_t v120 = v117;
    v120[1] = v119;
    sub_100058490((uint64_t)v11, v124);
    sub_100015C54((uint64_t)v141);
    return sub_100020DAC((uint64_t)v11);
  }
}

uint64_t sub_10005B964(char a1)
{
  uint64_t result = 6517599;
  switch(a1)
  {
    case 1:
      uint64_t result = 1668510559;
      break;
    case 2:
      uint64_t result = 22131;
      break;
    case 3:
      uint64_t result = 109;
      break;
    case 4:
      uint64_t result = 25970;
      break;
    case 5:
      uint64_t result = 119;
      break;
    case 6:
      uint64_t result = 104;
      break;
    case 7:
      uint64_t result = 25449;
      break;
    case 8:
      uint64_t result = 99;
      break;
    case 9:
      uint64_t result = 28515;
      break;
    case 10:
      uint64_t result = 25955;
      break;
    case 11:
      uint64_t result = 29539;
      break;
    case 12:
      uint64_t result = 97;
      break;
    case 13:
      uint64_t result = 98;
      break;
    case 14:
      uint64_t result = 108;
      break;
    case 15:
      uint64_t result = 110;
      break;
    case 16:
      uint64_t result = 103;
      break;
    case 17:
      uint64_t result = 26726;
      break;
    case 18:
      uint64_t result = 107;
      break;
    case 19:
      uint64_t result = 25453;
      break;
    case 20:
      uint64_t result = 114;
      break;
    case 21:
      uint64_t result = 7234918;
      break;
    case 22:
      uint64_t result = 7299942;
      break;
    case 23:
      uint64_t result = 1145664868;
      break;
    case 24:
      uint64_t result = 7234659;
      break;
    case 25:
      uint64_t result = 6907747;
      break;
    case 26:
      uint64_t result = 1768383343;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10005BB4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005AAF8(a1, a2);
}

uint64_t sub_10005BB64(void *a1)
{
  return sub_10005A3A8(a1);
}

unint64_t sub_10005BB7C()
{
  unint64_t result = qword_1000ED4C8;
  if (!qword_1000ED4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED4C8);
  }
  return result;
}

uint64_t sub_10005BBD0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10001295C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_10005BC34()
{
  unint64_t result = qword_1000ED4F0;
  if (!qword_1000ED4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED4F0);
  }
  return result;
}

uint64_t sub_10005BC88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005BCD0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014D68(&qword_1000ED4E0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005BD40()
{
  unint64_t result = qword_1000ED518;
  if (!qword_1000ED518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED518);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SMSDictionary.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE6) {
    goto LABEL_17;
  }
  if (a2 + 26 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 26) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 26;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 26;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 26;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1B;
  int v8 = v6 - 27;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SMSDictionary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 26 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 26) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE5)
  {
    unsigned int v6 = ((a2 - 230) >> 8) + 1;
    *unint64_t result = a2 + 26;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005BEF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 26;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SMSDictionary.CodingKeys()
{
  return &type metadata for SMSDictionary.CodingKeys;
}

uint64_t sub_10005BF28(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_10005B964(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_10005B964(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1000BC1A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10005BFB4()
{
  char v1 = *v0;
  sub_1000BC230();
  sub_10005B964(v1);
  sub_1000BB990();
  swift_bridgeObjectRelease();
  return sub_1000BC250();
}

uint64_t sub_10005C018()
{
  sub_10005B964(*v0);
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10005C06C()
{
  char v1 = *v0;
  sub_1000BC230();
  sub_10005B964(v1);
  sub_1000BB990();
  swift_bridgeObjectRelease();
  return sub_1000BC250();
}

uint64_t sub_10005C0CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10005C2E4();
  *a1 = result;
  return result;
}

uint64_t sub_10005C0FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10005B964(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10005C128()
{
  return sub_10005B964(*v0);
}

uint64_t sub_10005C130@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10005C2E4();
  *a1 = result;
  return result;
}

void sub_10005C158(unsigned char *a1@<X8>)
{
  *a1 = 27;
}

uint64_t sub_10005C164(uint64_t a1)
{
  unint64_t v2 = sub_10005BB7C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10005C1A0(uint64_t a1)
{
  unint64_t v2 = sub_10005BB7C();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_10005C1E0()
{
  unint64_t result = qword_1000ED520;
  if (!qword_1000ED520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED520);
  }
  return result;
}

unint64_t sub_10005C238()
{
  unint64_t result = qword_1000ED528;
  if (!qword_1000ED528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED528);
  }
  return result;
}

unint64_t sub_10005C290()
{
  unint64_t result = qword_1000ED530;
  if (!qword_1000ED530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED530);
  }
  return result;
}

uint64_t sub_10005C2E4()
{
  unint64_t v0 = sub_1000BC1D0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1B) {
    return 27;
  }
  else {
    return v0;
  }
}

uint64_t sub_10005C338@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10001295C(&qword_1000ED538);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1000BB0E0();
  uint64_t v98 = *(void *)(v101 - 8);
  uint64_t v6 = __chkstk_darwin(v101);
  uint64_t v100 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v99 = (char *)&v80 - v8;
  uint64_t v9 = sub_1000BADA0();
  uint64_t v95 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v97 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v104 = (char *)&v80 - v12;
  uint64_t v13 = sub_1000B8B10();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v102 = v13;
  uint64_t v103 = v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v96 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v105 = (char *)&v80 - v17;
  uint64_t v18 = sub_1000BA6A0();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = sub_1000BA680();
  __chkstk_darwin(v19 - 8);
  uint64_t v20 = self;
  Class isa = sub_1000B82B0().super.isa;
  *(void *)&long long v107 = 0;
  id v22 = [v20 propertyListWithData:isa options:0 format:0 error:&v107];

  if (!v22)
  {
    id v29 = (id)v107;
    sub_1000B81D0();

    swift_willThrow();
    swift_errorRelease();
    goto LABEL_10;
  }
  id v23 = (id)v107;
  sub_1000BBE80();
  swift_unknownObjectRelease();
  sub_10001295C(&qword_1000EC6A8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
  uint64_t v94 = v1;
  uint64_t v24 = v106;
  sub_1000B8B40();
  if (*(void *)(v24 + 16) && (unint64_t v25 = sub_10008BB58(0xD000000000000011, 0x80000001000CA5A0), (v26 & 1) != 0))
  {
    sub_10001DA70(*(void *)(v24 + 56) + 32 * v25, (uint64_t)&v107);
    sub_1000184DC((uint64_t)&v107, &qword_1000EC690);
    if (!*(void *)(v24 + 16)
      || (unint64_t v27 = sub_10008BB58(0xD000000000000011, 0x80000001000CA5A0), (v28 & 1) == 0)
      || (sub_10001DA70(*(void *)(v24 + 56) + 32 * v27, (uint64_t)&v107), (swift_dynamicCast() & 1) == 0))
    {
      swift_bridgeObjectRelease();
      sub_1000BB6C0();
      sub_100017E10();
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();
      uint64_t v43 = sub_1000B8B50();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(a1, v43);
    }
    sub_1000BA690();
    sub_1000B8B20();
  }
  else
  {
    long long v107 = 0u;
    long long v108 = 0u;
    sub_1000184DC((uint64_t)&v107, &qword_1000EC690);
  }
  uint64_t v31 = v9;
  uint64_t v32 = v103;
  if (*(void *)(v24 + 16) && (unint64_t v33 = sub_10008BB58(0x7265626D756ELL, 0xE600000000000000), (v34 & 1) != 0))
  {
    sub_10001DA70(*(void *)(v24 + 56) + 32 * v33, (uint64_t)&v107);
    sub_1000184DC((uint64_t)&v107, &qword_1000EC690);
    if (!*(void *)(v24 + 16)
      || (unint64_t v35 = sub_10008BB58(0x7265626D756ELL, 0xE600000000000000), (v36 & 1) == 0)
      || (sub_10001DA70(*(void *)(v24 + 56) + 32 * v35, (uint64_t)&v107), (swift_dynamicCast() & 1) == 0))
    {
      swift_bridgeObjectRelease();
      sub_1000BB6C0();
      sub_100017E10();
      swift_allocError();
LABEL_61:
      sub_1000BB6B0();
      swift_willThrow();
      uint64_t v78 = sub_1000B8B50();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(a1, v78);
    }
    sub_1000BA6B0();
    sub_1000B8B30();
  }
  else
  {
    long long v107 = 0u;
    long long v108 = 0u;
    sub_1000184DC((uint64_t)&v107, &qword_1000EC690);
  }
  uint64_t v37 = v94;
  uint64_t v38 = v102;
  if (!*(void *)(v24 + 16) || (unint64_t v39 = sub_10008BB58(0x72506D6F74737563, 0xEE00736E756F6E6FLL), (v40 & 1) == 0))
  {
    long long v107 = 0u;
    long long v108 = 0u;
    swift_bridgeObjectRelease();
    return sub_1000184DC((uint64_t)&v107, &qword_1000EC690);
  }
  sub_10001DA70(*(void *)(v24 + 56) + 32 * v39, (uint64_t)&v107);
  sub_1000184DC((uint64_t)&v107, &qword_1000EC690);
  if (*(void *)(v24 + 16) && (unint64_t v41 = sub_10008BB58(0x72506D6F74737563, 0xEE00736E756F6E6FLL), (v42 & 1) != 0))
  {
    sub_10001DA70(*(void *)(v24 + 56) + 32 * v41, (uint64_t)&v107);
  }
  else
  {
    long long v107 = 0u;
    long long v108 = 0u;
  }
  uint64_t v44 = v105;
  swift_bridgeObjectRelease();
  if (!*((void *)&v108 + 1))
  {
    sub_1000184DC((uint64_t)&v107, &qword_1000EC690);
    goto LABEL_60;
  }
  sub_10001295C(&qword_1000ED540);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_60:
    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
    goto LABEL_61;
  }
  uint64_t v89 = v5;
  uint64_t v91 = v31;
  uint64_t v81 = a1;
  uint64_t v45 = v106;
  uint64_t v46 = sub_1000B8B00();
  uint64_t v47 = *(void *)(v46 + 16);
  if (!v47)
  {
LABEL_62:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1000B8AE0();
  }
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  uint64_t v48 = v32 + 16;
  uint64_t v93 = v49;
  unint64_t v50 = (*(unsigned __int8 *)(v48 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 64);
  uint64_t v80 = v46;
  unint64_t v51 = v46 + v50;
  uint64_t v85 = (void (**)(char *, char *, uint64_t))(v95 + 16);
  uint64_t v86 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56);
  uint64_t v90 = (void (**)(char *, uint64_t, uint64_t))(v98 + 32);
  uint64_t v84 = (void (**)(char *, char *, uint64_t))(v98 + 16);
  uint64_t v83 = v98 + 8;
  uint64_t v87 = (void (**)(char *, uint64_t))(v95 + 8);
  uint64_t v52 = (void (**)(char *, uint64_t))(v48 - 8);
  uint64_t v95 = *(void *)(v48 + 56);
  uint64_t v92 = &_swiftEmptyArrayStorage;
  uint64_t v82 = 0x80000001000CA5E0;
  uint64_t v103 = v48;
  uint64_t v88 = (void (**)(char *, uint64_t))(v48 - 8);
  v49(v44, (char *)(v46 + v50), v38);
  while (1)
  {
    uint64_t v54 = sub_1000B8AF0();
    if (!v55) {
      goto LABEL_33;
    }
    if (!*(void *)(v45 + 16) || (unint64_t v56 = sub_10008BB58(v54, v55), (v57 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    uint64_t v58 = *(void *)(*(void *)(v45 + 56) + 8 * v56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1000BAD90();
    if (*(void *)(v58 + 16))
    {
      sub_10008BB58(0x467463656A627573, 0xEB000000006D726FLL);
      if (v59) {
        swift_bridgeObjectRetain();
      }
    }
    sub_1000BAD50();
    if (*(void *)(v58 + 16))
    {
      sub_10008BB58(0x6F467463656A626FLL, 0xEA00000000006D72);
      if (v60) {
        swift_bridgeObjectRetain();
      }
    }
    sub_1000BAD40();
    if (*(void *)(v58 + 16))
    {
      sub_10008BB58(0x6973736573736F70, 0xEE006D726F466576);
      if (v61) {
        swift_bridgeObjectRetain();
      }
    }
    sub_1000BAD70();
    if (*(void *)(v58 + 16))
    {
      sub_10008BB58(0xD000000000000017, v82);
      if (v62) {
        swift_bridgeObjectRetain();
      }
    }
    sub_1000BAD80();
    if (*(void *)(v58 + 16))
    {
      sub_10008BB58(0x766978656C666572, 0xED00006D726F4665);
      if (v63) {
        swift_bridgeObjectRetain();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v64 = v104;
    sub_1000BAD60();
    uint64_t v65 = v102;
    v93(v96, v105, v102);
    (*v85)(v97, v64, v91);
    uint64_t v66 = (uint64_t)v89;
    sub_1000BB0D0();
    if (v37) {
      break;
    }
    uint64_t v67 = v101;
    (*v86)(v66, 0, 1, v101);
    uint64_t v68 = *v90;
    uint64_t v69 = v99;
    (*v90)(v99, v66, v67);
    (*v84)(v100, v69, v67);
    unint64_t v70 = (unint64_t)v92;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v52 = v88;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v70 = sub_10003EA8C(0, *(void *)(v70 + 16) + 1, 1, v70);
    }
    unint64_t v73 = *(void *)(v70 + 16);
    unint64_t v72 = *(void *)(v70 + 24);
    if (v73 >= v72 >> 1) {
      unint64_t v70 = sub_10003EA8C(v72 > 1, v73 + 1, 1, v70);
    }
    *(void *)(v70 + 16) = v73 + 1;
    uint64_t v74 = (char *)v70;
    uint64_t v75 = v98;
    unint64_t v76 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
    uint64_t v92 = v74;
    uint64_t v77 = v101;
    v68(&v74[v76 + *(void *)(v98 + 72) * v73], (uint64_t)v100, v101);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v99, v77);
    (*v87)(v104, v91);
    uint64_t v38 = v102;
LABEL_33:
    uint64_t v53 = v105;
    (*v52)(v105, v38);
    v51 += v95;
    if (!--v47) {
      goto LABEL_62;
    }
    v93(v53, (char *)v51, v38);
  }
  swift_errorRelease();
  (*v86)(v66, 1, 1, v101);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000184DC(v66, &qword_1000ED538);
  sub_1000BB6C0();
  sub_100017E10();
  swift_allocError();
  sub_1000BB6B0();
  swift_willThrow();
  (*v87)(v104, v91);
  (*v88)(v105, v65);
  uint64_t v79 = sub_1000B8B50();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v81, v79);
}

ValueMetadata *type metadata accessor for CollaborationNoticeUnpacker()
{
  return &type metadata for CollaborationNoticeUnpacker;
}

uint64_t sub_10005D39C()
{
  return sub_10005E820(&qword_1000ED548, (void (*)(uint64_t))&type metadata accessor for CollaborationNotice);
}

id sub_10005D3E4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v139 = a3;
  uint64_t v5 = sub_1000B8340();
  __chkstk_darwin(v5 - 8);
  uint64_t v138 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_1000BA620();
  uint64_t v123 = *(void *)(v124 - 8);
  uint64_t v7 = __chkstk_darwin(v124);
  uint64_t v122 = (char *)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v125 = (char *)&v119 - v9;
  uint64_t v130 = sub_1000B9FC0();
  uint64_t v129 = *(void *)(v130 - 8);
  uint64_t v10 = __chkstk_darwin(v130);
  uint64_t v128 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v131 = (char *)&v119 - v12;
  uint64_t v13 = sub_10001295C(&qword_1000ED550);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v135 = (uint64_t)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v132 = (char *)&v119 - v17;
  __chkstk_darwin(v16);
  uint64_t v136 = (uint64_t)&v119 - v18;
  uint64_t v19 = sub_1000B8240();
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v121 = (char *)&v119 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v127 = (char *)&v119 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v134 = (char *)&v119 - v25;
  __chkstk_darwin(v24);
  uint64_t v145 = (char *)&v119 - v26;
  uint64_t v27 = sub_1000B8D90();
  unint64_t v142 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 - 8);
  id v143 = (id)v27;
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v141 = (char *)&v119 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v144 = (char *)&v119 - v30;
  uint64_t v31 = sub_1000BB050();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v147 = v31;
  uint64_t v148 = v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v137 = (char *)&v119 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v120 = (char *)&v119 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v126 = (char *)&v119 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v133 = (char *)&v119 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  int v140 = (char *)&v119 - v42;
  __chkstk_darwin(v41);
  uint64_t v146 = (char *)&v119 - v43;
  uint64_t v44 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v44 - 8);
  uint64_t v46 = (char *)&v119 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1000BB6C0();
  uint64_t v48 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  unint64_t v50 = (char *)&v119 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001DAE4(0, (unint64_t *)&qword_1000EC5B8);
  unint64_t v51 = (void *)sub_1000BBDA0();
  sub_1000BBBE0();
  sub_1000B8770();

  id v52 = objc_allocWithZone((Class)SWCollaborationNoticeTransmissionMessage);
  sub_100017F4C(a1, a2);
  Class isa = sub_1000B82B0().super.isa;
  sub_100018074(a1, a2);
  id v54 = [v52 initWithData:isa];

  if (!v54)
  {
    sub_1000BB6B0();
    uint64_t v71 = (void *)sub_1000BBDA0();
    sub_10001295C(&qword_1000EC5C8);
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_1000BF8A0;
    uint64_t v150 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
    v150(v46, v50, v47);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v46, 0, 1, v47);
    uint64_t v73 = sub_1000BB200();
    uint64_t v75 = v74;
    sub_1000184DC((uint64_t)v46, &qword_1000EC630);
    *(void *)(v72 + 56) = &type metadata for String;
    *(void *)(v72 + 64) = sub_10001824C();
    *(void *)(v72 + 32) = v73;
    *(void *)(v72 + 40) = v75;
    sub_1000BBBE0();
    sub_1000B8770();

    swift_bridgeObjectRelease();
    sub_10005E820((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    v150(v76, v50, v47);
    swift_willThrow();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v50, v47);
  }
  uint64_t v55 = v47;
  BOOL v56 = collaboratonNoticeEventTypeKnown((uint64_t)[v54 highlightChangeEventType]);
  id v149 = v54;
  if (!v56) {
    goto LABEL_9;
  }
  id result = [v54 highlightChangeEvent];
  if (!result)
  {
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v58 = result;
  uint64_t v59 = sub_1000B82D0();
  unint64_t v61 = v60;

  Class v62 = sub_1000B82B0().super.isa;
  sub_100018074(v59, v61);
  id v63 = unarchiveCollaborationNoticeEvent(v62);

  if (!v63)
  {
LABEL_9:
    sub_1000BB6B0();
    uint64_t v77 = (void *)sub_1000BBDA0();
    sub_10001295C(&qword_1000EC5C8);
    uint64_t v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = xmmword_1000BF8A0;
    uint64_t v150 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
    v150(v46, v50, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v46, 0, 1, v55);
    uint64_t v79 = sub_1000BB200();
    uint64_t v81 = v80;
    sub_1000184DC((uint64_t)v46, &qword_1000EC630);
    *(void *)(v78 + 56) = &type metadata for String;
    *(void *)(v78 + 64) = sub_10001824C();
    *(void *)(v78 + 32) = v79;
    *(void *)(v78 + 40) = v81;
    sub_1000BBBE0();
    sub_1000B8770();

    swift_bridgeObjectRelease();
    sub_10005E820((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    v150(v82, v50, v55);
    swift_willThrow();

    return (id)(*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v50, v55);
  }
  sub_1000BBE80();
  swift_unknownObjectRelease();
  sub_10001DACC(&v152, &v153);
  sub_10001DA70((uint64_t)&v153, (uint64_t)&v152);
  sub_10001DAE4(0, &qword_1000ED558);
  if (swift_dynamicCast())
  {
    id v64 = v154;
    [v154 changeEventTrigger];
    (*((void (**)(char *, void, id))v142 + 13))(v141, enum case for ChangeEvent.Trigger.invalid(_:), v143);
    sub_1000B8D80();
    id v65 = [v64 highlightURL];
    sub_1000B8200();

    uint64_t v66 = v140;
    uint64_t v67 = v150;
    sub_1000B8D70();
    uint64_t v68 = v147;
    uint64_t v69 = v148;
    if (v67)
    {
      sub_100015C54((uint64_t)&v153);

      unint64_t v70 = &v152;
      return (id)sub_100015C54((uint64_t)v70);
    }
    uint64_t v150 = 0;

    (*(void (**)(char *, void, uint64_t))(v69 + 104))(v66, enum case for CollaborationHighlightEvent.change(_:), v68);
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v146, v66, v68);
LABEL_30:
    id v97 = v149;
    goto LABEL_31;
  }
  sub_10001DAE4(0, &qword_1000ED560);
  int v83 = swift_dynamicCast();
  uint64_t v68 = v147;
  uint64_t v69 = v148;
  if (v83)
  {
    id v84 = v154;
    uint64_t v85 = sub_1000BB070();
    uint64_t v86 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56);
    uint64_t v87 = v136;
    v86(v136, 1, 1, v85);
    id v88 = objc_msgSend(v84, "__bdSWMentionedPersonIdentity");
    if (v88)
    {
      uint64_t v89 = v88;
      unint64_t v142 = v86;
      id v90 = [v88 rootHash];
      uint64_t v91 = sub_1000B82D0();
      uint64_t v144 = v92;
      uint64_t v145 = (char *)v91;

      id v93 = [v89 publicKeys];
      sub_1000BBA50();

      id v94 = [v89 trackingPreventionSalt];
      id v143 = v84;
      if (v94)
      {
        uint64_t v95 = v94;
        sub_1000B82D0();
      }
      uint64_t v107 = (uint64_t)v132;
      long long v108 = v150;
      sub_1000BB060();
      if (v108)
      {

        uint64_t v109 = (void *)sub_1000BBDA0();
        sub_10001295C(&qword_1000EC5C8);
        uint64_t v110 = swift_allocObject();
        *(_OWORD *)(v110 + 16) = xmmword_1000BF8A0;
        uint64_t v151 = v108;
        sub_10001295C(&qword_1000EC648);
        uint64_t v111 = sub_1000BB200();
        uint64_t v113 = v112;
        *(void *)(v110 + 56) = &type metadata for String;
        *(void *)(v110 + 64) = sub_10001824C();
        *(void *)(v110 + 32) = v111;
        *(void *)(v110 + 40) = v113;
        sub_1000BBBE0();
        sub_1000B8770();

        swift_bridgeObjectRelease();
        swift_errorRelease();
        uint64_t v106 = 0;
        uint64_t v69 = v148;
        uint64_t v87 = v136;
      }
      else
      {
        uint64_t v87 = v136;
        sub_1000184DC(v136, &qword_1000ED550);

        v142(v107, 0, 1, v85);
        sub_10005E8D0(v107, v87);
        uint64_t v69 = v148;
        uint64_t v106 = 0;
      }
      id v84 = v143;
    }
    else
    {
      uint64_t v106 = v150;
    }
    id v114 = [v84 mentionedPersonHandle];
    sub_1000BB900();

    sub_10005E868(v87, v135);
    id v115 = [v84 highlightURL];
    sub_1000B8200();

    uint64_t v116 = v133;
    sub_1000B9030();
    if (v106)
    {

      sub_1000184DC(v87, &qword_1000ED550);
      sub_100015C54((uint64_t)&v153);
      unint64_t v70 = &v152;
      return (id)sub_100015C54((uint64_t)v70);
    }
    uint64_t v150 = 0;
    sub_1000184DC(v87, &qword_1000ED550);

    uint64_t v68 = v147;
    (*(void (**)(char *, void, uint64_t))(v69 + 104))(v116, enum case for CollaborationHighlightEvent.mention(_:), v147);
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v146, v116, v68);
    goto LABEL_30;
  }
  sub_10001DAE4(0, &qword_1000ED568);
  int v96 = swift_dynamicCast();
  id v97 = v149;
  uint64_t v98 = v146;
  if (v96)
  {
    id v99 = v154;
    [v154 membershipEventTrigger];
    (*(void (**)(char *, void, uint64_t))(v129 + 104))(v128, enum case for MembershipEvent.Trigger.invalid(_:), v130);
    sub_1000B9FB0();
    id v100 = [v99 highlightURL];
    sub_1000B8200();

    uint64_t v101 = v126;
    uint64_t v102 = v150;
    sub_1000B9FA0();
    uint64_t v150 = v102;
    if (!v102)
    {

      (*(void (**)(char *, void, uint64_t))(v69 + 104))(v101, enum case for CollaborationHighlightEvent.membership(_:), v68);
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v98, v101, v68);
      goto LABEL_31;
    }
    goto LABEL_20;
  }
  sub_10001DAE4(0, &qword_1000ED570);
  if (!swift_dynamicCast())
  {
    (*(void (**)(char *, void, uint64_t))(v69 + 104))(v98, enum case for CollaborationHighlightEvent.invalid(_:), v68);
    goto LABEL_31;
  }
  id v99 = v154;
  [v154 persistenceEventTrigger];
  (*(void (**)(char *, void, uint64_t))(v123 + 104))(v122, enum case for PersistenceEvent.Trigger.invalid(_:), v124);
  sub_1000BA610();
  id v103 = [v99 highlightURL];
  sub_1000B8200();

  char v104 = v120;
  uint64_t v105 = v150;
  sub_1000BA600();
  uint64_t v150 = v105;
  if (v105)
  {
LABEL_20:
    sub_100015C54((uint64_t)&v153);

    return (id)sub_100015C54((uint64_t)&v152);
  }

  (*(void (**)(char *, void, uint64_t))(v69 + 104))(v104, enum case for CollaborationHighlightEvent.persistence(_:), v68);
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v98, v104, v68);
LABEL_31:
  sub_100015C54((uint64_t)&v152);
  [v97 version];
  id result = [v97 guidString];
  if (result)
  {
    uint64_t v117 = result;
    sub_1000BB900();

    uint64_t v118 = v146;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v137, v146, v68);
    [v97 dateAsTimeIntervalSince1970];
    sub_1000B8320();
    sub_1000BA9F0();

    (*(void (**)(char *, uint64_t))(v69 + 8))(v118, v68);
    unint64_t v70 = &v153;
    return (id)sub_100015C54((uint64_t)v70);
  }
LABEL_36:
  __break(1u);
  return result;
}

id sub_10005E808@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10005D3E4(a1, a2, a3);
}

uint64_t sub_10005E820(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005E868(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000ED550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005E8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000ED550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for AnimatedImageMetadataUnpacker()
{
  return &type metadata for AnimatedImageMetadataUnpacker;
}

uint64_t sub_10005E948()
{
  return sub_10005F204(&qword_1000ED578, (void (*)(uint64_t))&type metadata accessor for AnimatedImageMetadata);
}

uint64_t sub_10005E990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v6 = sub_10001295C(&qword_1000ED580);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10001295C(&qword_1000EC660);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1000BB470();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_1000BB3B0();
  uint64_t v29 = v16;
  uint64_t v30 = &protocol witness table for File;
  uint64_t v17 = sub_1000269C4(v28);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v17, a1, v16);
  uint64_t v18 = sub_1000BB440();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  sub_1000BB450();
  sub_1000BB460();
  sub_100014C68(v28, v29);
  uint64_t v27 = a2;
  uint64_t v24 = sub_10005F1CC;
  uint64_t v25 = &v26;
  uint64_t v19 = sub_1000BAB50();
  sub_1000B9480();
  if (v3)
  {
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    uint64_t v20 = v31;
    uint64_t v21 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v8, 1, v19) == 1)
    {
      sub_1000184DC((uint64_t)v8, &qword_1000ED580);
      sub_100015C54((uint64_t)v28);
      sub_1000BB6C0();
      sub_10005F204((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    }
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v21 + 32))(v20, v8, v19);
  }
  return sub_100015C54((uint64_t)v28);
}

uint64_t sub_10005EDC8@<X0>(CGImageSource *a1@<X0>, uint64_t a2@<X8>)
{
  v14[3] = a2;
  uint64_t v4 = sub_1000B9F80();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000BBC00();
  if (v9 && (uint64_t v10 = v8, v11 = v9, (sub_10008CDC8(v8, v9) & 1) != 0))
  {
    sub_1000BBC20();
    sub_1000B9F70();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v12 = sub_1000BAB30();
    sub_10005F968(a1, v10, v11, v12);
    if (v2) {
      return swift_bridgeObjectRelease();
    }
    else {
      return sub_1000BAB40();
    }
  }
  else
  {
    sub_1000BB6C0();
    sub_10005F204((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
}

uint64_t sub_10005F090@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1000BAB50();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = a2(a1);
  if (!v3)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a3, v10, v7);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a3, 0, 1, v7);
  }
  return result;
}

uint64_t sub_10005F1B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10005E990(a1, a2, a3);
}

uint64_t sub_10005F1CC@<X0>(CGImageSource *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005EDC8(a1, a2);
}

uint64_t sub_10005F1E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005F090(a1, *(uint64_t (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_10005F204(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_10005F24C(void *a1)
{
  double v1 = 0.1;
  if (!a1) {
    return v1;
  }
  uint64_t v3 = (id)kCGImagePropertyGIFDictionary;
  id v4 = a1;
  if (objc_msgSend(v4, "__swift_objectForKeyedSubscript:", v3))
  {
    sub_1000BBE80();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  sub_10005FC5C((uint64_t)&v12, (uint64_t)v14);
  if (v15)
  {
    sub_10005FCC4();
    if (swift_dynamicCast())
    {
      uint64_t v5 = v16;

      uint64_t v6 = (id)kCGImagePropertyGIFUnclampedDelayTime;
      if (objc_msgSend(v5, "__swift_objectForKeyedSubscript:", v6))
      {
        sub_1000BBE80();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v12 = 0u;
        long long v13 = 0u;
      }
      sub_10005FC5C((uint64_t)&v12, (uint64_t)v14);
      if (v15)
      {
        if (swift_dynamicCast())
        {

          goto LABEL_70;
        }
      }
      else
      {

        sub_1000184DC((uint64_t)v14, &qword_1000EC690);
      }
      uint64_t v6 = (id)kCGImagePropertyGIFDelayTime;
      if (!objc_msgSend(v5, "__swift_objectForKeyedSubscript:", v6)) {
        goto LABEL_67;
      }
LABEL_59:
      sub_1000BBE80();

      swift_unknownObjectRelease();
LABEL_68:
      sub_10005FC5C((uint64_t)&v12, (uint64_t)v14);
      if (v15)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {

          return v1;
        }
        goto LABEL_70;
      }

LABEL_73:
      sub_1000184DC((uint64_t)v14, &qword_1000EC690);
      return v1;
    }
  }
  else
  {

    sub_1000184DC((uint64_t)v14, &qword_1000EC690);
  }
  uint64_t v7 = (id)kCGImagePropertyPNGDictionary;
  if (objc_msgSend(v4, "__swift_objectForKeyedSubscript:", v7))
  {
    sub_1000BBE80();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  sub_10005FC5C((uint64_t)&v12, (uint64_t)v14);
  if (!v15)
  {

    sub_1000184DC((uint64_t)v14, &qword_1000EC690);
    goto LABEL_20;
  }
  sub_10005FCC4();
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_20:
    uint64_t v8 = (id)kCGImagePropertyHEICSDictionary;
    if (objc_msgSend(v4, "__swift_objectForKeyedSubscript:", v8))
    {
      sub_1000BBE80();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v12 = 0u;
      long long v13 = 0u;
    }
    sub_10005FC5C((uint64_t)&v12, (uint64_t)v14);
    if (v15)
    {
      sub_10005FCC4();
      if (swift_dynamicCast())
      {
        uint64_t v5 = v16;

        uint64_t v6 = (id)kCGImagePropertyHEICSUnclampedDelayTime;
        if (objc_msgSend(v5, "__swift_objectForKeyedSubscript:", v6))
        {
          sub_1000BBE80();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v12 = 0u;
          long long v13 = 0u;
        }
        sub_10005FC5C((uint64_t)&v12, (uint64_t)v14);
        if (v15)
        {
          if (swift_dynamicCast()) {
            goto LABEL_63;
          }
        }
        else
        {

          sub_1000184DC((uint64_t)v14, &qword_1000EC690);
        }
        uint64_t v6 = (id)kCGImagePropertyHEICSDelayTime;
        if (objc_msgSend(v5, "__swift_objectForKeyedSubscript:", v6)) {
          goto LABEL_59;
        }
        goto LABEL_67;
      }
    }
    else
    {

      sub_1000184DC((uint64_t)v14, &qword_1000EC690);
    }
    uint64_t v9 = (id)kCGImagePropertyWebPDictionary;
    if (objc_msgSend(v4, "__swift_objectForKeyedSubscript:", v9))
    {
      sub_1000BBE80();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v12 = 0u;
      long long v13 = 0u;
    }
    sub_10005FC5C((uint64_t)&v12, (uint64_t)v14);
    if (!v15)
    {

      goto LABEL_73;
    }
    sub_10005FCC4();
    if ((swift_dynamicCast() & 1) == 0)
    {

      return v1;
    }
    uint64_t v5 = v16;

    uint64_t v6 = (id)kCGImagePropertyWebPUnclampedDelayTime;
    if (objc_msgSend(v5, "__swift_objectForKeyedSubscript:", v6))
    {
      sub_1000BBE80();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v12 = 0u;
      long long v13 = 0u;
    }
    sub_10005FC5C((uint64_t)&v12, (uint64_t)v14);
    if (v15)
    {
      if (swift_dynamicCast()) {
        goto LABEL_63;
      }
    }
    else
    {

      sub_1000184DC((uint64_t)v14, &qword_1000EC690);
    }
    uint64_t v6 = (id)kCGImagePropertyWebPDelayTime;
    if (objc_msgSend(v5, "__swift_objectForKeyedSubscript:", v6)) {
      goto LABEL_59;
    }
    goto LABEL_67;
  }
  uint64_t v5 = v16;

  uint64_t v6 = (id)kCGImagePropertyAPNGUnclampedDelayTime;
  if (objc_msgSend(v5, "__swift_objectForKeyedSubscript:", v6))
  {
    sub_1000BBE80();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  sub_10005FC5C((uint64_t)&v12, (uint64_t)v14);
  if (!v15)
  {

    sub_1000184DC((uint64_t)v14, &qword_1000EC690);
LABEL_51:
    uint64_t v6 = (id)kCGImagePropertyAPNGDelayTime;
    if (objc_msgSend(v5, "__swift_objectForKeyedSubscript:", v6)) {
      goto LABEL_59;
    }
LABEL_67:

    long long v12 = 0u;
    long long v13 = 0u;
    goto LABEL_68;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_51;
  }
LABEL_63:

LABEL_70:
  double v10 = *(double *)&v16;

  if (v10 >= 0.011) {
    return v10;
  }
  return v1;
}

char *sub_10005F968(CGImageSource *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = a1;
  double v10 = (char *)a1;
  uint64_t v12 = sub_1000BBBF0();
  if ((a2 != 0x682E63696C627570 || a3 != 0xEB00000000636965) && (sub_1000BC1A0() & 1) == 0)
  {
    double v15 = 1.0;
    if (v12 > a4) {
      double v15 = (double)v12 / (double)a4;
    }
    if (v12 < 0) {
      goto LABEL_39;
    }
    if (v12)
    {
      int64_t v16 = 0;
      double v10 = (char *)&_swiftEmptyArrayStorage;
      double v17 = 0.0;
      double v5 = 0.0;
      do
      {
        if (v12 == v16)
        {
          __break(1u);
          goto LABEL_38;
        }
        double v18 = v15 + v17;
        if (v15 + v17 <= (double)v16)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v10 = sub_10003EAC0(0, *((void *)v10 + 2) + 1, 1, v10);
          }
          unint64_t v20 = *((void *)v10 + 2);
          unint64_t v19 = *((void *)v10 + 3);
          if (v20 >= v19 >> 1) {
            double v10 = sub_10003EAC0((char *)(v19 > 1), v20 + 1, 1, v10);
          }
          *((void *)v10 + 2) = v20 + 1;
          *(double *)&v10[8 * v20 + 32] = v5;
          double v5 = 0.0;
        }
        else
        {
          double v18 = v17;
        }
        CFDictionaryRef v21 = CGImageSourceCopyPropertiesAtIndex(v9, v16, 0);
        double v22 = sub_10005F24C(v21);
        if (v4)
        {

          swift_bridgeObjectRelease();
          return v10;
        }
        double v23 = v22;
        ++v16;

        double v5 = v5 + v23;
        double v17 = v18;
      }
      while (v12 != v16);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native)
      {
LABEL_34:
        uint64_t v12 = *((void *)v10 + 2);
        unint64_t v11 = *((void *)v10 + 3);
        uint64_t v9 = (CGImageSource *)(v12 + 1);
        if (v12 < v11 >> 1)
        {
LABEL_35:
          *((void *)v10 + 2) = v9;
          *(double *)&v10[8 * v12 + 32] = v5;
          return v10;
        }
LABEL_40:
        double v10 = sub_10003EAC0((char *)(v11 > 1), (int64_t)v9, 1, v10);
        goto LABEL_35;
      }
    }
    else
    {
      double v10 = (char *)&_swiftEmptyArrayStorage;
      double v5 = 0.0;
    }
    double v10 = sub_10003EAC0(0, *((void *)v10 + 2) + 1, 1, v10);
    goto LABEL_34;
  }
  if (v12 >= a4) {
    uint64_t v12 = a4;
  }
  if (v12 < 0)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (!v12) {
    return (char *)&_swiftEmptyArrayStorage;
  }
  double v10 = sub_10003EAC0(0, 1, 1, (char *)&_swiftEmptyArrayStorage);
  unint64_t v13 = *((void *)v10 + 2);
  do
  {
    unint64_t v14 = *((void *)v10 + 3);
    if (v13 >= v14 >> 1) {
      double v10 = sub_10003EAC0((char *)(v14 > 1), v13 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v13 + 1;
    *(void *)&v10[8 * v13++ + 32] = 0x3FB1111111111111;
    --v12;
  }
  while (v12);
  return v10;
}

uint64_t sub_10005FC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EC690);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10005FCC4()
{
  unint64_t result = qword_1000EC6B0;
  if (!qword_1000EC6B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000EC6B0);
  }
  return result;
}

uint64_t destroy for AttributionInfoKeyedUnarchiverSchema()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AttributionInfoKeyedUnarchiverSchema(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 138) = *(_OWORD *)(a2 + 138);
  long long v7 = *(_OWORD *)(a2 + 128);
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AttributionInfoKeyedUnarchiverSchema(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[8];
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = a2[10];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(void *)(a1 + 80) = v6;
  long long v7 = *((_OWORD *)a2 + 6);
  long long v8 = *((_OWORD *)a2 + 7);
  long long v9 = *((_OWORD *)a2 + 8);
  *(_OWORD *)(a1 + 138) = *(_OWORD *)((char *)a2 + 138);
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 128) = v9;
  *(_OWORD *)(a1 + 96) = v7;
  return a1;
}

__n128 initializeWithTake for AttributionInfoKeyedUnarchiverSchema(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 138) = *(_OWORD *)(a2 + 138);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for AttributionInfoKeyedUnarchiverSchema(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 138) = *(_OWORD *)(a2 + 138);
  return a1;
}

uint64_t getEnumTagSinglePayload for AttributionInfoKeyedUnarchiverSchema(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 154)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AttributionInfoKeyedUnarchiverSchema(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 152) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 154) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 154) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttributionInfoKeyedUnarchiverSchema()
{
  return &type metadata for AttributionInfoKeyedUnarchiverSchema;
}

uint64_t sub_10006007C()
{
  uint64_t result = 7827565;
  switch(*v0)
  {
    case 1:
      uint64_t result = 6845549;
      break;
    case 2:
      uint64_t result = 7828589;
      break;
    case 3:
      uint64_t result = 115;
      break;
    case 4:
      uint64_t result = 29811;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000600EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000605F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100060114(uint64_t a1)
{
  unint64_t v2 = sub_100061564();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100060150(uint64_t a1)
{
  unint64_t v2 = sub_100061564();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10006018C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1000607AC(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 10);
    *(_OWORD *)((char *)a2 + 42) = *(_OWORD *)((char *)v7 + 10);
  }
  return result;
}

uint64_t sub_1000601D8(unsigned __int8 *a1, char *a2)
{
  return sub_10004DD00(*a1, *a2);
}

Swift::Int sub_1000601E4()
{
  return sub_10007CE7C();
}

uint64_t sub_1000601F0()
{
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000602F4()
{
  return sub_10007CE7C();
}

uint64_t sub_1000602FC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100060A90(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10006032C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64692D6D616461;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x6C737365636361;
      goto LABEL_3;
    case 2:
      *a1 = 0x692D656C646E7562;
      a1[1] = 0xE900000000000064;
      break;
    case 3:
      *a1 = 1701667182;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 0x68736E656770;
      a1[1] = 0xE600000000000000;
      break;
    case 5:
      *a1 = 0x77736E656770;
      a1[1] = 0xE600000000000000;
      break;
    case 6:
      *a1 = 0x637A736E656770;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE700000000000000;
      break;
  }
}

uint64_t sub_100060414()
{
  uint64_t result = 0x64692D6D616461;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C737365636361;
      break;
    case 2:
      uint64_t result = 0x692D656C646E7562;
      break;
    case 3:
      uint64_t result = 1701667182;
      break;
    case 4:
      uint64_t result = 0x68736E656770;
      break;
    case 5:
      uint64_t result = 0x77736E656770;
      break;
    case 6:
      uint64_t result = 0x637A736E656770;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000604E4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100060A90(a1, a2);
  *a3 = result;
  return result;
}

void sub_10006050C(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_100060518(uint64_t a1)
{
  unint64_t v2 = sub_1000610B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100060554(uint64_t a1)
{
  unint64_t v2 = sub_1000610B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100060590@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100060ADC(a1, v9);
  if (!v2)
  {
    long long v5 = v9[7];
    a2[6] = v9[6];
    a2[7] = v5;
    a2[8] = v10[0];
    *(_OWORD *)((char *)a2 + 138) = *(_OWORD *)((char *)v10 + 10);
    long long v6 = v9[3];
    a2[2] = v9[2];
    a2[3] = v6;
    long long v7 = v9[5];
    a2[4] = v9[4];
    a2[5] = v7;
    double result = *(double *)v9;
    long long v8 = v9[1];
    *a2 = v9[0];
    a2[1] = v8;
  }
  return result;
}

uint64_t sub_1000605F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7827565 && a2 == 0xE300000000000000;
  if (v2 || (sub_1000BC1A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6845549 && a2 == 0xE300000000000000 || (sub_1000BC1A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7828589 && a2 == 0xE300000000000000 || (sub_1000BC1A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 115 && a2 == 0xE100000000000000 || (sub_1000BC1A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 29811 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1000BC1A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1000607AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000ED5B8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_100061564();
  sub_1000BC270();
  if (v2) {
    return sub_100015C54((uint64_t)a1);
  }
  char v23 = 0;
  sub_1000615B8();
  sub_1000BC070();
  uint64_t v19 = v20;
  int v9 = v21;
  char v23 = 1;
  sub_1000BC070();
  int v22 = v9;
  uint64_t v18 = v20;
  int v10 = v21;
  char v23 = 2;
  sub_1000BC070();
  int v16 = v10;
  uint64_t v17 = v20;
  LOBYTE(v10) = v21;
  char v23 = 3;
  sub_1000BC070();
  uint64_t v11 = v17;
  uint64_t v15 = v20;
  HIDWORD(v14) = v21;
  LOBYTE(v20) = 4;
  char v12 = sub_1000BC050();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = sub_100015C54((uint64_t)a1);
  *(void *)a2 = v19;
  *(unsigned char *)(a2 + 8) = v22;
  *(void *)(a2 + 16) = v18;
  *(unsigned char *)(a2 + 24) = v16;
  *(void *)(a2 + 32) = v11;
  *(unsigned char *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = v15;
  *(unsigned char *)(a2 + 56) = BYTE4(v14);
  *(unsigned char *)(a2 + 57) = v12 & 1;
  return result;
}

uint64_t sub_100060A90(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000E13E0;
  v6._object = a2;
  unint64_t v4 = sub_1000BBFA0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 7) {
    return 7;
  }
  else {
    return v4;
  }
}

uint64_t sub_100060ADC@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000ED588);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v58 = a1;
  sub_100014C68(a1, v9);
  sub_1000610B4();
  sub_1000BC270();
  if (v2) {
    return sub_100015C54((uint64_t)v58);
  }
  uint64_t v10 = v6;
  id v54 = a2;
  LOBYTE(v68) = 0;
  uint64_t v11 = sub_1000BBFF0();
  int v13 = v12;
  char v95 = v12 & 1;
  LOBYTE(v68) = 1;
  uint64_t v14 = sub_1000BBFB0();
  int v52 = v13;
  uint64_t v53 = v14;
  LOBYTE(v68) = 2;
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1000BBFB0();
  uint64_t v57 = v16;
  uint64_t v50 = v17;
  LOBYTE(v68) = 3;
  uint64_t v19 = v18;
  swift_bridgeObjectRetain();
  uint64_t v51 = sub_1000BBFB0();
  uint64_t v56 = v19;
  LOBYTE(v68) = 4;
  uint64_t v21 = v20;
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_1000BBFD0();
  uint64_t v55 = v21;
  char v94 = v22 & 1;
  LOBYTE(v68) = 5;
  LODWORD(v21) = v22;
  uint64_t v23 = sub_1000BBFD0();
  int v47 = v21;
  uint64_t v48 = v23;
  LOBYTE(v21) = v24 & 1;
  char v93 = v24 & 1;
  char v96 = 6;
  sub_100061108();
  sub_1000BC000();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
  uint64_t v45 = *((void *)&v88 + 1);
  uint64_t v46 = v88;
  uint64_t v43 = *((void *)&v89 + 1);
  uint64_t v44 = v89;
  uint64_t v41 = *((void *)&v90 + 1);
  uint64_t v42 = v90;
  uint64_t v40 = v91;
  int v39 = v92;
  *(void *)&long long v59 = v11;
  BYTE8(v59) = v52 & 1;
  uint64_t v25 = v53;
  char v26 = v21;
  uint64_t v28 = v56;
  uint64_t v27 = v57;
  *(void *)&long long v60 = v53;
  *((void *)&v60 + 1) = v57;
  uint64_t v29 = v50;
  *(void *)&long long v61 = v50;
  *((void *)&v61 + 1) = v56;
  uint64_t v30 = v55;
  *(void *)&long long v62 = v51;
  *((void *)&v62 + 1) = v55;
  uint64_t v31 = v48;
  *(void *)&long long v63 = v49;
  BYTE8(v63) = v47 & 1;
  *(void *)&long long v64 = v48;
  BYTE8(v64) = v26;
  long long v65 = v88;
  long long v66 = v89;
  v67[0] = v90;
  *(void *)&v67[1] = v91;
  WORD4(v67[1]) = v92;
  sub_10006115C((uint64_t)&v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100015C54((uint64_t)v58);
  uint64_t v68 = v11;
  char v69 = v95;
  uint64_t v70 = v25;
  uint64_t v71 = v27;
  uint64_t v72 = v29;
  uint64_t v73 = v28;
  uint64_t v74 = v51;
  uint64_t v75 = v30;
  uint64_t v76 = v49;
  char v77 = v94;
  uint64_t v78 = v31;
  char v79 = v93;
  uint64_t v80 = v46;
  uint64_t v81 = v45;
  uint64_t v82 = v44;
  uint64_t v83 = v43;
  uint64_t v84 = v42;
  uint64_t v85 = v41;
  uint64_t v86 = v40;
  __int16 v87 = v39;
  uint64_t result = sub_1000611A8((uint64_t)&v68);
  long long v33 = v66;
  uint64_t v34 = v54;
  v54[6] = v65;
  v34[7] = v33;
  v34[8] = v67[0];
  *(_OWORD *)((char *)v34 + 138) = *(_OWORD *)((char *)v67 + 10);
  long long v35 = v62;
  v34[2] = v61;
  v34[3] = v35;
  long long v36 = v64;
  v34[4] = v63;
  v34[5] = v36;
  long long v37 = v60;
  *uint64_t v34 = v59;
  v34[1] = v37;
  return result;
}

unint64_t sub_1000610B4()
{
  unint64_t result = qword_1000ED590;
  if (!qword_1000ED590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED590);
  }
  return result;
}

unint64_t sub_100061108()
{
  unint64_t result = qword_1000ED598;
  if (!qword_1000ED598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED598);
  }
  return result;
}

uint64_t sub_10006115C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000611A8(uint64_t a1)
{
  return a1;
}

uint64_t getEnumTagSinglePayload for AttributionInfoKeyedUnarchiverSchema.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AttributionInfoKeyedUnarchiverSchema.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100061350);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttributionInfoKeyedUnarchiverSchema.CodingKeys()
{
  return &type metadata for AttributionInfoKeyedUnarchiverSchema.CodingKeys;
}

__n128 initializeWithCopy for AttributionInfoKeyedUnarchiverSchema.Pgenszc(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AttributionInfoKeyedUnarchiverSchema.Pgenszc(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 58)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 57);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AttributionInfoKeyedUnarchiverSchema.Pgenszc(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 58) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 58) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 57) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttributionInfoKeyedUnarchiverSchema.Pgenszc()
{
  return &type metadata for AttributionInfoKeyedUnarchiverSchema.Pgenszc;
}

unint64_t sub_100061460()
{
  unint64_t result = qword_1000ED5A0;
  if (!qword_1000ED5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED5A0);
  }
  return result;
}

unint64_t sub_1000614B8()
{
  unint64_t result = qword_1000ED5A8;
  if (!qword_1000ED5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED5A8);
  }
  return result;
}

unint64_t sub_100061510()
{
  unint64_t result = qword_1000ED5B0;
  if (!qword_1000ED5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED5B0);
  }
  return result;
}

unint64_t sub_100061564()
{
  unint64_t result = qword_1000ED5C0;
  if (!qword_1000ED5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED5C0);
  }
  return result;
}

unint64_t sub_1000615B8()
{
  unint64_t result = qword_1000ED5C8;
  if (!qword_1000ED5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED5C8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AttributionInfoKeyedUnarchiverSchema.Pgenszc.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000616D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttributionInfoKeyedUnarchiverSchema.Pgenszc.CodingKeys()
{
  return &type metadata for AttributionInfoKeyedUnarchiverSchema.Pgenszc.CodingKeys;
}

unint64_t sub_100061714()
{
  unint64_t result = qword_1000ED5D0;
  if (!qword_1000ED5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED5D0);
  }
  return result;
}

unint64_t sub_10006176C()
{
  unint64_t result = qword_1000ED5D8;
  if (!qword_1000ED5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED5D8);
  }
  return result;
}

unint64_t sub_1000617C4()
{
  unint64_t result = qword_1000ED5E0;
  if (!qword_1000ED5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED5E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiImageMetadataUnpacker()
{
  return &type metadata for EmojiImageMetadataUnpacker;
}

uint64_t sub_100061828()
{
  return sub_10006273C(&qword_1000ED5E8, (void (*)(uint64_t))&type metadata accessor for EmojiImageMetadata);
}

uint64_t sub_100061870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v5 = sub_10001295C(&qword_1000ED5F0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  int v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = sub_10001295C(&qword_1000EC660);
  __chkstk_darwin(v11 - 8);
  int v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000BB470();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000BB3B0();
  uint64_t v33 = v18;
  uint64_t v34 = &protocol witness table for File;
  uint64_t v19 = sub_1000269C4(v32);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v19, a1, v18);
  uint64_t v20 = sub_1000BB440();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 1, 1, v20);
  sub_1000BB450();
  sub_1000BB460();
  sub_100014C68(v32, v33);
  uint64_t v31 = a2;
  uint64_t v28 = sub_10006269C;
  uint64_t v29 = &v30;
  uint64_t v21 = sub_1000BA8C0();
  uint64_t v22 = v35;
  sub_1000B9480();
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return sub_100015C54((uint64_t)v32);
  }
  else
  {
    uint64_t v24 = v27;
    sub_100015C54((uint64_t)v32);
    sub_1000626D4((uint64_t)v10, (uint64_t)v8);
    uint64_t v25 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v8, 1, v21) == 1)
    {
      sub_1000184DC((uint64_t)v8, &qword_1000ED5F0);
      sub_1000BB6C0();
      sub_10006273C((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();
      sub_1000184DC((uint64_t)v10, &qword_1000ED5F0);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    else
    {
      sub_1000184DC((uint64_t)v10, &qword_1000ED5F0);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(v24, v8, v21);
    }
  }
}

uint64_t sub_100061CE8(CGImageSource *a1)
{
  CFStringRef v2 = (id)CGImageSourceGetType(a1);
  if (!v2
    || ((v3 = (__CFString *)v2, v4 = sub_1000BB900(), uint64_t v6 = v5, v3, v4 != 0x682E63696C627570)
     || v6 != 0xEB00000000636965)
    && (sub_1000BC1A0() & 1) == 0
    || (swift_bridgeObjectRelease(), int64_t Count = CGImageSourceGetCount(a1), sub_1000BA8A0() < Count))
  {
    sub_1000BB6C0();
    sub_10006273C((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
  if (Count >= 1)
  {
    CFDictionaryRef v8 = CGImageSourceCopyPropertiesAtIndex(a1, 0, 0);
    if (v8)
    {
      uint64_t v9 = (id)kCGImagePropertyTIFFDictionary;
      CFDictionaryRef v10 = v8;
      if ([(__CFDictionary *)v10 __swift_objectForKeyedSubscript:v9])
      {
        sub_1000BBE80();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v18 = 0u;
        long long v19 = 0u;
      }
      sub_10005FC5C((uint64_t)&v18, (uint64_t)v20);
      if (v21)
      {
        sub_10005FCC4();
        if (swift_dynamicCast())
        {

          uint64_t v12 = (id)kCGImagePropertyTIFFDocumentName;
          if (objc_msgSend(v17, "__swift_objectForKeyedSubscript:", v12))
          {
            sub_1000BBE80();
            swift_unknownObjectRelease();
          }
          else
          {
            long long v18 = 0u;
            long long v19 = 0u;
          }
          sub_10005FC5C((uint64_t)&v18, (uint64_t)v20);
          if (v21)
          {
            if (swift_dynamicCast())
            {
              uint64_t v22 = v17;

LABEL_30:
              int v13 = (id)kCGImagePropertyTIFFImageDescription;
              if (objc_msgSend(v17, "__swift_objectForKeyedSubscript:", v13))
              {
                sub_1000BBE80();

                swift_unknownObjectRelease();
              }
              else
              {

                long long v18 = 0u;
                long long v19 = 0u;
              }
              sub_10005FC5C((uint64_t)&v18, (uint64_t)v20);
              if (v21)
              {
                swift_dynamicCast();
              }
              else
              {

                sub_1000184DC((uint64_t)v20, &qword_1000EC690);
              }
              goto LABEL_36;
            }
          }
          else
          {

            sub_1000184DC((uint64_t)v20, &qword_1000EC690);
          }
          uint64_t v22 = 0;
          goto LABEL_30;
        }
      }
      else
      {

        sub_1000184DC((uint64_t)v20, &qword_1000EC690);
      }
      uint64_t v22 = 0;
LABEL_36:
      uint64_t v14 = (id)kCGImagePropertyIPTCDictionary;
      if ([(__CFDictionary *)v10 __swift_objectForKeyedSubscript:v14])
      {
        sub_1000BBE80();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v18 = 0u;
        long long v19 = 0u;
      }
      sub_10005FC5C((uint64_t)&v18, (uint64_t)v20);
      if (v21)
      {
        sub_10005FCC4();
        if (swift_dynamicCast())
        {

          uint64_t v15 = (id)kCGImagePropertyIPTCCredit;
          if (objc_msgSend(v17, "__swift_objectForKeyedSubscript:", v15))
          {
            sub_1000BBE80();
            swift_unknownObjectRelease();
          }
          else
          {
            long long v18 = 0u;
            long long v19 = 0u;
          }
          sub_10005FC5C((uint64_t)&v18, (uint64_t)v20);
          if (v21)
          {
            swift_dynamicCast();
          }
          else
          {

            sub_1000184DC((uint64_t)v20, &qword_1000EC690);
          }
          uint64_t v16 = (id)kCGImagePropertyIPTCExtDigitalSourceType;
          if (objc_msgSend(v17, "__swift_objectForKeyedSubscript:"))
          {
            sub_1000BBE80();

            swift_unknownObjectRelease();
          }
          else
          {

            long long v18 = 0u;
            long long v19 = 0u;
          }
          sub_10005FC5C((uint64_t)&v18, (uint64_t)v20);
          if (v21)
          {
            swift_dynamicCast();
          }
          else
          {

            sub_1000184DC((uint64_t)v20, &qword_1000EC690);
          }
        }
        else
        {
        }
      }
      else
      {

        sub_1000184DC((uint64_t)v20, &qword_1000EC690);
      }
    }
  }
  return sub_1000BA8B0();
}

uint64_t sub_100062560@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1000BA8C0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  CFDictionaryRef v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = a2(a1);
  if (!v3)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a3, v10, v7);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a3, 0, 1, v7);
  }
  return result;
}

uint64_t sub_100062684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100061870(a1, a2, a3);
}

uint64_t sub_10006269C(CGImageSource *a1)
{
  return sub_100061CE8(a1);
}

uint64_t sub_1000626B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100062560(a1, *(uint64_t (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_1000626D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000ED5F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006273C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 initializeWithTake for RelayReachabilityResultDictionary(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for RelayReachabilityResponseDictionary()
{
  return &type metadata for RelayReachabilityResponseDictionary;
}

uint64_t sub_1000627C4()
{
  return sub_1000BB990();
}

uint64_t sub_1000627D4@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_100063328(a1, (Swift::OpaquePointer)&off_1000E14A8, a2);
}

uint64_t sub_1000627E0()
{
  return 114;
}

uint64_t sub_1000627EC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  return sub_100063394(a1, a2, (Swift::OpaquePointer)&off_1000E14E0, a3);
}

uint64_t sub_1000627F8(uint64_t a1)
{
  unint64_t v2 = sub_10006434C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100062834(uint64_t a1)
{
  unint64_t v2 = sub_10006434C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100062870@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000ED690);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_10006434C();
  sub_1000BC270();
  if (v2) {
    return sub_100015C54((uint64_t)a1);
  }
  char v9 = sub_1000BC050();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = sub_100015C54((uint64_t)a1);
  *a2 = v9 & 1;
  return result;
}

uint64_t sub_1000629D0(void *a1)
{
  uint64_t v2 = sub_10001295C(&qword_1000ED6A0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_10006434C();
  sub_1000BC280();
  sub_1000BC140();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100062B04(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001295C(&qword_1000ED660);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014C68(a1, a1[3]);
  sub_100063E24();
  sub_1000BC280();
  char v13 = 0;
  sub_1000BC130();
  if (!v2)
  {
    char v12 = 1;
    sub_1000BC0D0();
    uint64_t v11 = *(void *)(v3 + 32);
    v10[15] = 2;
    sub_10001295C(&qword_1000ED648);
    sub_100063ECC(&qword_1000ED668, (void (*)(void))sub_100063F48);
    sub_1000BC160();
    v10[14] = 3;
    sub_1000BC0B0();
    v10[13] = 4;
    sub_1000BC0B0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100062D3C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10001295C(&qword_1000ED610);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_1000639E8();
  sub_1000BC280();
  long long v8 = v2[1];
  long long v10 = *v2;
  v11[0] = v8;
  *(_OWORD *)((char *)v11 + 10) = *(long long *)((char *)v2 + 26);
  sub_100063A90();
  sub_1000BC160();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100062E8C(char *a1, char *a2)
{
  return sub_10004E1B4(*a1, *a2);
}

Swift::Int sub_100062E98()
{
  return sub_1000BC250();
}

uint64_t sub_100062F48()
{
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100062FE0()
{
  return sub_1000BC250();
}

uint64_t sub_10006308C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000634BC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1000630BC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 115;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 101;
      goto LABEL_3;
    case 2:
      *a1 = 114;
      a1[1] = 0xE100000000000000;
      break;
    case 3:
      *a1 = 102;
      a1[1] = 0xE100000000000000;
      break;
    case 4:
      *a1 = 29539;
      a1[1] = 0xE200000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE100000000000000;
      break;
  }
}

uint64_t sub_100063130()
{
  uint64_t result = 115;
  switch(*v0)
  {
    case 1:
      uint64_t result = 101;
      break;
    case 2:
      uint64_t result = 114;
      break;
    case 3:
      uint64_t result = 102;
      break;
    case 4:
      uint64_t result = 29539;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100063194@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000634BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000631BC(uint64_t a1)
{
  unint64_t v2 = sub_100063E24();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000631F8(uint64_t a1)
{
  unint64_t v2 = sub_100063E24();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100063234@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100063508(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 10);
    *(_OWORD *)((char *)a2 + 26) = *(_OWORD *)((char *)v7 + 10);
  }
  return result;
}

uint64_t sub_100063278(void *a1)
{
  return sub_100062B04(a1);
}

Swift::Int sub_100063290()
{
  return sub_1000BC250();
}

Swift::Int sub_1000632D8()
{
  return sub_1000BC250();
}

uint64_t sub_10006331C@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_100063328(a1, (Swift::OpaquePointer)&off_1000E15B0, a2);
}

uint64_t sub_100063328@<X0>(uint64_t *a1@<X0>, Swift::OpaquePointer a2@<X3>, BOOL *a3@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v4 = (void *)a1[1];
  v8._object = v4;
  Swift::Int v6 = sub_1000BBFA0(a2, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

void sub_100063378(void *a1@<X8>)
{
  *a1 = 114;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_100063388@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  return sub_100063394(a1, a2, (Swift::OpaquePointer)&off_1000E15E8, a3);
}

uint64_t sub_100063394@<X0>(uint64_t a1@<X0>, void *a2@<X1>, Swift::OpaquePointer a3@<X4>, BOOL *a4@<X8>)
{
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Swift::Int v7 = sub_1000BBFA0(a3, v9);
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v7 != 0;
  return result;
}

uint64_t sub_1000633E8(uint64_t a1)
{
  unint64_t v2 = sub_1000639E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100063424(uint64_t a1)
{
  unint64_t v2 = sub_1000639E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100063460@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100063848(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 10);
    *(_OWORD *)((char *)a2 + 26) = *(_OWORD *)((char *)v7 + 10);
  }
  return result;
}

uint64_t sub_1000634A4(void *a1)
{
  return sub_100062D3C(a1);
}

uint64_t sub_1000634BC(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000E1518;
  v6._object = a2;
  unint64_t v4 = sub_1000BBFA0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

uint64_t sub_100063508@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000ED638);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_100063E24();
  sub_1000BC270();
  if (v2) {
    return sub_100015C54((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_1000BC040();
  uint64_t v11 = v10;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1000BBFE0();
  int v20 = v13;
  uint64_t v21 = v12;
  sub_10001295C(&qword_1000ED648);
  char v25 = 2;
  sub_100063ECC(&qword_1000ED650, (void (*)(void))sub_100063E78);
  sub_1000BC070();
  char v24 = 3;
  uint64_t v19 = v22;
  swift_bridgeObjectRetain();
  int v18 = sub_1000BBFC0();
  char v23 = 4;
  char v14 = sub_1000BBFC0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100015C54((uint64_t)a1);
  uint64_t v15 = v19;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v21;
  *(unsigned char *)(a2 + 24) = v20 & 1;
  *(void *)(a2 + 32) = v15;
  *(unsigned char *)(a2 + 40) = v18;
  *(unsigned char *)(a2 + 41) = v14;
  return result;
}

uint64_t sub_100063848@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000ED5F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_1000639E8();
  sub_1000BC270();
  if (v2) {
    return sub_100015C54((uint64_t)a1);
  }
  sub_100063A3C();
  sub_1000BC070();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14[0] = v14[1];
  uint64_t v9 = v15;
  char v10 = v16;
  uint64_t v11 = v17;
  __int16 v12 = v18;
  uint64_t result = sub_100015C54((uint64_t)a1);
  *(_OWORD *)a2 = v14[0];
  *(void *)(a2 + 16) = v9;
  *(unsigned char *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = v11;
  *(_WORD *)(a2 + 40) = v12;
  return result;
}

unint64_t sub_1000639E8()
{
  unint64_t result = qword_1000ED600;
  if (!qword_1000ED600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED600);
  }
  return result;
}

unint64_t sub_100063A3C()
{
  unint64_t result = qword_1000ED608;
  if (!qword_1000ED608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED608);
  }
  return result;
}

unint64_t sub_100063A90()
{
  unint64_t result = qword_1000ED618;
  if (!qword_1000ED618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED618);
  }
  return result;
}

ValueMetadata *type metadata accessor for RelayReachabilityResponseDictionary.CodingKeys()
{
  return &type metadata for RelayReachabilityResponseDictionary.CodingKeys;
}

uint64_t _s24MessagesBlastDoorService33RelayReachabilityResultDictionaryVwxx_0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s24MessagesBlastDoorService33RelayReachabilityResultDictionaryVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s24MessagesBlastDoorService33RelayReachabilityResultDictionaryVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

uint64_t _s24MessagesBlastDoorService33RelayReachabilityResultDictionaryVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

uint64_t _s24MessagesBlastDoorService33RelayReachabilityResultDictionaryVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 42)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100063CC0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 42) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RelayReachabilityResultDictionary()
{
  return &type metadata for RelayReachabilityResultDictionary;
}

unint64_t sub_100063D20()
{
  unint64_t result = qword_1000ED620;
  if (!qword_1000ED620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED620);
  }
  return result;
}

unint64_t sub_100063D78()
{
  unint64_t result = qword_1000ED628;
  if (!qword_1000ED628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED628);
  }
  return result;
}

unint64_t sub_100063DD0()
{
  unint64_t result = qword_1000ED630;
  if (!qword_1000ED630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED630);
  }
  return result;
}

unint64_t sub_100063E24()
{
  unint64_t result = qword_1000ED640;
  if (!qword_1000ED640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED640);
  }
  return result;
}

unint64_t sub_100063E78()
{
  unint64_t result = qword_1000ED658;
  if (!qword_1000ED658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED658);
  }
  return result;
}

uint64_t sub_100063ECC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014D68(&qword_1000ED648);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100063F48()
{
  unint64_t result = qword_1000ED670;
  if (!qword_1000ED670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED670);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RelayReachabilityResultDictionary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100064068);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RelayReachabilityResultDictionary.CodingKeys()
{
  return &type metadata for RelayReachabilityResultDictionary.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RelayReachabilityHandleResultDictionary(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RelayReachabilityHandleResultDictionary(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006420CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RelayReachabilityHandleResultDictionary()
{
  return &type metadata for RelayReachabilityHandleResultDictionary;
}

unint64_t sub_100064248()
{
  unint64_t result = qword_1000ED678;
  if (!qword_1000ED678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED678);
  }
  return result;
}

unint64_t sub_1000642A0()
{
  unint64_t result = qword_1000ED680;
  if (!qword_1000ED680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED680);
  }
  return result;
}

unint64_t sub_1000642F8()
{
  unint64_t result = qword_1000ED688;
  if (!qword_1000ED688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED688);
  }
  return result;
}

unint64_t sub_10006434C()
{
  unint64_t result = qword_1000ED698;
  if (!qword_1000ED698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED698);
  }
  return result;
}

unsigned char *_s24MessagesBlastDoorService35RelayReachabilityResponseDictionaryV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10006443CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RelayReachabilityHandleResultDictionary.CodingKeys()
{
  return &type metadata for RelayReachabilityHandleResultDictionary.CodingKeys;
}

unint64_t sub_100064478()
{
  unint64_t result = qword_1000ED6A8;
  if (!qword_1000ED6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED6A8);
  }
  return result;
}

unint64_t sub_1000644D0()
{
  unint64_t result = qword_1000ED6B0;
  if (!qword_1000ED6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED6B0);
  }
  return result;
}

unint64_t sub_100064528()
{
  unint64_t result = qword_1000ED6B8;
  if (!qword_1000ED6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED6B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CombinedPluginAttachmentUnpacker()
{
  return &type metadata for CombinedPluginAttachmentUnpacker;
}

unint64_t sub_100064594()
{
  unint64_t result = qword_1000ED6C0;
  if (!qword_1000ED6C0)
  {
    sub_1000BAE80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED6C0);
  }
  return result;
}

void sub_1000645EC(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000BBBB0();
  sub_100018190();
  unsigned int v4 = (void *)sub_1000BBCF0();
  sub_10001295C(&qword_1000EC5C8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000BF8A0;
  sub_1000BAE20();
  uint64_t v6 = sub_1000BB200();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  *(void *)(v5 + 56) = &type metadata for String;
  *(void *)(v5 + 64) = sub_10001824C();
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v8;
  sub_1000B8780();

  swift_bridgeObjectRelease();
  sub_100064724(a1, a2, a3);
}

uint64_t sub_100064724@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v39[0] = sub_1000BAE20();
  v39[1] = v7;
  *(void *)&long long v36 = 58;
  *((void *)&v36 + 1) = 0xE100000000000000;
  sub_1000180E0();
  uint64_t v8 = (void *)sub_1000BBE70();
  swift_bridgeObjectRelease();
  if (!v8[2])
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_1000BBF10();
    swift_allocError();
    uint64_t v17 = v16;
    sub_10001295C(&qword_1000EC600);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1000BF8A0;
    *(void *)(v18 + 56) = &type metadata for MessageDictionary.CodingKeys;
    *(void *)(v18 + 64) = sub_10003A038();
    *(unsigned char *)(v18 + 32) = 22;
LABEL_13:
    sub_1000BBF00();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, enum case for DecodingError.dataCorrupted(_:), v15);
    return swift_willThrow();
  }
  uint64_t v9 = v8[4];
  uint64_t v10 = v8[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (qword_1000EC2D8 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1000F9390;
  if (*(void *)(qword_1000F9390 + 16) && (unint64_t v12 = sub_10008BB58(v9, v10), (v13 & 1) != 0))
  {
    sub_1000181E8(*(void *)(v11 + 56) + 40 * v12, (uint64_t)&v36);
  }
  else
  {
    uint64_t v38 = 0;
    long long v36 = 0u;
    long long v37 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v37 + 1))
  {
    sub_100064C5C((uint64_t)&v36);
    uint64_t v15 = sub_1000BBF10();
    swift_allocError();
    uint64_t v17 = v19;
    sub_10001295C(&qword_1000EC600);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1000BF8A0;
    *(void *)(v20 + 56) = &type metadata for MessageDictionary.CodingKeys;
    *(void *)(v20 + 64) = sub_10003A038();
    *(unsigned char *)(v20 + 32) = 22;
    goto LABEL_13;
  }
  uint64_t v42 = a3;
  sub_1000181D0(&v36, (uint64_t)v39);
  sub_1000B81C0();
  swift_allocObject();
  sub_1000B81B0();
  sub_100064CBC();
  sub_1000B81A0();
  if (v3)
  {
    swift_errorRelease();
    swift_release();
    sub_100017F4C(a1, a2);
    uint64_t v35 = &_swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v22 = *((void *)&v36 + 1);
    unint64_t v23 = v37;
    char v24 = &_swiftEmptyArrayStorage;
    if ((void)v36) {
      char v24 = (void *)v36;
    }
    uint64_t v35 = v24;
    swift_bridgeObjectRetain();
    sub_100017F4C(v22, v23);
    a1 = sub_1000B82C0();
    a2 = v25;
    swift_bridgeObjectRelease();
    sub_100018074(v22, v23);
    swift_release();
    sub_100018074(v22, v23);
  }
  sub_1000BBBB0();
  sub_100018190();
  char v26 = (void *)sub_1000BBCF0();
  sub_10001295C(&qword_1000EC5C8);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1000BF8A0;
  sub_1000181E8((uint64_t)v39, (uint64_t)&v36);
  sub_10001295C(&qword_1000EC5D0);
  uint64_t v28 = sub_1000BB200();
  uint64_t v30 = v29;
  sub_100064C5C((uint64_t)&v36);
  *(void *)(v27 + 56) = &type metadata for String;
  *(void *)(v27 + 64) = sub_10001824C();
  *(void *)(v27 + 32) = v28;
  *(void *)(v27 + 40) = v30;
  sub_1000B8780();

  swift_bridgeObjectRelease();
  uint64_t v31 = v40;
  uint64_t v32 = v41;
  sub_100014C68(v39, v40);
  uint64_t v33 = sub_1000BAE20();
  (*(void (**)(uint64_t, unint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8))(a1, a2, v35, v33, v34, v31, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100018074(a1, a2);
  return sub_100015C54((uint64_t)v39);
}

void sub_100064C44(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t sub_100064C5C(uint64_t a1)
{
  uint64_t v2 = sub_10001295C(&qword_1000EC5C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100064CBC()
{
  unint64_t result = qword_1000ED6C8;
  if (!qword_1000ED6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED6C8);
  }
  return result;
}

unint64_t sub_100064D10(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10001295C(&qword_1000ED6D8);
  uint64_t v2 = sub_1000BBF70();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000182A0(v6, (uint64_t)&v15, &qword_1000ED6E0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_10008BB58(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_1000181D0(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100064E54(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10001295C(&qword_1000EC698);
  uint64_t v2 = sub_1000BBF70();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000182A0(v6, (uint64_t)&v15, &qword_1000ED6F8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_10008BB58(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_10001DACC(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100064F8C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10001295C(&qword_1000ED6E8);
  uint64_t v2 = sub_1000BBF70();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000182A0(v6, (uint64_t)&v13, &qword_1000ED6F0);
    uint64_t v7 = v13;
    unint64_t result = sub_10008BC14(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_10001DACC(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000650BC()
{
  sub_10001295C(&qword_1000ED6D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000C0D00;
  *(void *)(inited + 32) = 0xD000000000000025;
  *(void *)(inited + 40) = 0x80000001000C90C0;
  *(void *)(inited + 72) = &type metadata for LinkPresentationUnpacker;
  *(void *)(inited + 80) = &off_1000E2F08;
  *(void *)(inited + 88) = 0xD000000000000032;
  *(void *)(inited + 96) = 0x80000001000CA9C0;
  *(void *)(inited + 128) = &type metadata for MessagesAppBalloonUnpacker;
  *(void *)(inited + 136) = &off_1000E2840;
  *(void *)(inited + 144) = 0xD000000000000029;
  *(void *)(inited + 152) = 0x80000001000CAA00;
  *(void *)(inited + 184) = &type metadata for HandwritingUnpacker;
  *(void *)(inited + 192) = &off_1000E4368;
  *(void *)(inited + 200) = 0xD000000000000025;
  *(void *)(inited + 208) = 0x80000001000CAA30;
  *(void *)(inited + 240) = &type metadata for DigitalTouchBalloonUnpacker;
  *(void *)(inited + 248) = &off_1000E5150;
  unint64_t result = sub_100064D10(inited);
  qword_1000F9390 = result;
  return result;
}

ValueMetadata *type metadata accessor for TextMessageUnpacker()
{
  return &type metadata for TextMessageUnpacker;
}

uint64_t sub_1000651CC()
{
  return sub_10006E2D8(&qword_1000ED700, (void (*)(uint64_t))&type metadata accessor for TextMessage);
}

uint64_t sub_100065214@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (int *)type metadata accessor for MessageDictionary();
  if (*(unsigned char *)(v1 + v3[51] + 8)) {
    goto LABEL_16;
  }
  uint64_t v4 = v3;
  uint64_t v5 = v1 + v3[54];
  if (*(unsigned char *)(v5 + 8)) {
    goto LABEL_16;
  }
  uint64_t v6 = v1 + v3[55];
  if (*(unsigned char *)(v6 + 8)) {
    goto LABEL_16;
  }
  unint64_t v7 = *(void *)v6;
  uint64_t v8 = *(void *)v5 >= 0x7FFFFFFFFFFFFFFFuLL ? 0x7FFFFFFFFFFFFFFFLL : *(void *)v5;
  uint64_t result = sub_1000B8090();
  if (v8 == result) {
    goto LABEL_16;
  }
  if (v7 >= 0x7FFFFFFFFFFFFFFFLL) {
    uint64_t v10 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v10 = v7;
  }
  uint64_t v11 = v8 + v10;
  if (__OFADD__(v8, v10))
  {
    __break(1u);
    return result;
  }
  uint64_t v12 = (uint64_t *)(v1 + v4[52]);
  uint64_t v13 = v12[1];
  if (!v13)
  {
LABEL_16:
    uint64_t v26 = _s17AssociatedMessageVMa();
    uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    return v27(a1, 1, 1, v26);
  }
  else
  {
    uint64_t v14 = *v12;
    swift_bridgeObjectRetain();
    sub_1000BB570();
    uint64_t v15 = (uint64_t *)(v1 + v4[53]);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = (uint64_t *)(v1 + v4[56]);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = (int *)_s17AssociatedMessageVMa();
    uint64_t v22 = (void *)(a1 + v21[5]);
    *uint64_t v22 = v14;
    v22[1] = v13;
    unint64_t v23 = (void *)(a1 + v21[6]);
    *unint64_t v23 = v17;
    v23[1] = v16;
    char v24 = (uint64_t *)(a1 + v21[7]);
    *char v24 = v8;
    v24[1] = v11;
    unint64_t v25 = (void *)(a1 + v21[8]);
    *unint64_t v25 = v20;
    v25[1] = v19;
    (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v21 - 1) + 56))(a1, 0, 1, v21);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1000653FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v1088 = a2;
  uint64_t v1087 = a1;
  uint64_t v1056 = a3;
  uint64_t v3 = sub_10001295C(&qword_1000EC628);
  __chkstk_darwin(v3 - 8);
  v1062 = (char *)&v925 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v1075 = sub_1000BBF10();
  unint64_t v1073 = *(void *)(v1075 - 8);
  uint64_t v5 = __chkstk_darwin(v1075);
  v1061 = (char *)&v925 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  v1074 = (char *)&v925 - v8;
  __chkstk_darwin(v7);
  *(void *)&long long v1072 = (char *)&v925 - v9;
  uint64_t v10 = sub_10001295C(&qword_1000EC588);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  v1000 = (char *)&v925 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  v1039 = (char *)&v925 - v14;
  __chkstk_darwin(v13);
  v1002 = (char *)&v925 - v15;
  uint64_t v16 = sub_10001295C(&qword_1000ED708);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v1038 = (uint64_t)&v925 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v1001 = (uint64_t)&v925 - v19;
  uint64_t v1026 = sub_1000B9450();
  uint64_t v1027 = *(void *)(v1026 - 8);
  uint64_t v20 = __chkstk_darwin(v1026);
  v1022 = (char *)&v925 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v990 = (char *)&v925 - v22;
  uint64_t v23 = sub_10001295C(&qword_1000ED710);
  __chkstk_darwin(v23 - 8);
  v966 = (char *)&v925 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v968 = sub_1000B9E50();
  uint64_t v967 = *(void *)(v968 - 8);
  uint64_t v25 = __chkstk_darwin(v968);
  v947 = (char *)&v925 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v955 = (char *)&v925 - v27;
  uint64_t v28 = sub_10001295C(&qword_1000ED718);
  __chkstk_darwin(v28 - 8);
  v970 = (char *)&v925 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v972 = sub_1000B8FB0();
  uint64_t v971 = *(void *)(v972 - 8);
  uint64_t v30 = __chkstk_darwin(v972);
  v952 = (char *)&v925 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v961 = (char *)&v925 - v32;
  uint64_t v33 = sub_10001295C(&qword_1000ED720);
  uint64_t v34 = __chkstk_darwin(v33 - 8);
  uint64_t v946 = (uint64_t)&v925 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v951 = (uint64_t)&v925 - v37;
  __chkstk_darwin(v36);
  uint64_t v981 = (uint64_t)&v925 - v38;
  uint64_t v1035 = sub_1000BB590();
  uint64_t v1034 = *(void *)(v1035 - 8);
  uint64_t v39 = __chkstk_darwin(v1035);
  v980 = (char *)&v925 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v1033 = (char *)&v925 - v41;
  uint64_t v42 = sub_10001295C(&qword_1000ED728);
  uint64_t v43 = __chkstk_darwin(v42 - 8);
  uint64_t v998 = (uint64_t)&v925 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v1044 = (uint64_t)&v925 - v45;
  v1048 = (int *)_s17AssociatedMessageVMa();
  uint64_t v1047 = *((void *)v1048 - 1);
  __chkstk_darwin(v1048);
  uint64_t v1041 = (uint64_t)&v925 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1049 = sub_1000BB500();
  uint64_t v1050 = *(void *)(v1049 - 8);
  uint64_t v47 = __chkstk_darwin(v1049);
  v945 = (char *)&v925 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  uint64_t v1057 = (uint64_t)&v925 - v49;
  uint64_t v50 = sub_10001295C(&qword_1000EC790);
  uint64_t v51 = __chkstk_darwin(v50 - 8);
  v1068 = (char *)&v925 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v950 = (uint64_t)&v925 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v1005 = (uint64_t)&v925 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v979 = (uint64_t)&v925 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v1011 = (uint64_t)&v925 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  uint64_t v1025 = (uint64_t)&v925 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  uint64_t v984 = (uint64_t)&v925 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v935 = (uint64_t)&v925 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v938 = (uint64_t)&v925 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  uint64_t v965 = (uint64_t)&v925 - v70;
  __chkstk_darwin(v69);
  uint64_t v1046 = (uint64_t)&v925 - v71;
  uint64_t v72 = sub_10001295C(&qword_1000ED730);
  uint64_t v73 = __chkstk_darwin(v72 - 8);
  v1067 = (char *)&v925 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __chkstk_darwin(v73);
  v949 = (char *)&v925 - v76;
  uint64_t v77 = __chkstk_darwin(v75);
  v1004 = (char *)&v925 - v78;
  uint64_t v79 = __chkstk_darwin(v77);
  v978 = (char *)&v925 - v80;
  uint64_t v81 = __chkstk_darwin(v79);
  v1010 = (char *)&v925 - v82;
  uint64_t v83 = __chkstk_darwin(v81);
  v1024 = (char *)&v925 - v84;
  uint64_t v85 = __chkstk_darwin(v83);
  v983 = (char *)&v925 - v86;
  uint64_t v87 = __chkstk_darwin(v85);
  v934 = (char *)&v925 - v88;
  uint64_t v89 = __chkstk_darwin(v87);
  v937 = (char *)&v925 - v90;
  uint64_t v91 = __chkstk_darwin(v89);
  v964 = (char *)&v925 - v92;
  __chkstk_darwin(v91);
  v1045 = (char *)&v925 - v93;
  uint64_t v94 = sub_10001295C(&qword_1000ED738);
  uint64_t v95 = __chkstk_darwin(v94 - 8);
  v1066 = (char *)&v925 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __chkstk_darwin(v95);
  uint64_t v948 = (uint64_t)&v925 - v98;
  uint64_t v99 = __chkstk_darwin(v97);
  v1017 = (char *)&v925 - v100;
  uint64_t v101 = __chkstk_darwin(v99);
  uint64_t v977 = (uint64_t)&v925 - v102;
  uint64_t v103 = __chkstk_darwin(v101);
  v1012 = (char *)&v925 - v104;
  uint64_t v105 = __chkstk_darwin(v103);
  v1032 = (char *)&v925 - v106;
  uint64_t v107 = __chkstk_darwin(v105);
  uint64_t v982 = (uint64_t)&v925 - v108;
  uint64_t v109 = __chkstk_darwin(v107);
  uint64_t v933 = (uint64_t)&v925 - v110;
  uint64_t v111 = __chkstk_darwin(v109);
  uint64_t v936 = (uint64_t)&v925 - v112;
  uint64_t v113 = __chkstk_darwin(v111);
  uint64_t v963 = (uint64_t)&v925 - v114;
  __chkstk_darwin(v113);
  v1043 = (char *)&v925 - v115;
  uint64_t v116 = sub_10001295C(&qword_1000ED740);
  uint64_t v117 = __chkstk_darwin(v116 - 8);
  v1065 = (char *)&v925 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = __chkstk_darwin(v117);
  uint64_t v959 = (uint64_t)&v925 - v120;
  uint64_t v121 = __chkstk_darwin(v119);
  uint64_t v1016 = (uint64_t)&v925 - v122;
  uint64_t v123 = __chkstk_darwin(v121);
  uint64_t v988 = (uint64_t)&v925 - v124;
  uint64_t v125 = __chkstk_darwin(v123);
  uint64_t v1021 = (uint64_t)&v925 - v126;
  uint64_t v127 = __chkstk_darwin(v125);
  uint64_t v1037 = (uint64_t)&v925 - v128;
  uint64_t v129 = __chkstk_darwin(v127);
  uint64_t v1031 = (uint64_t)&v925 - v130;
  uint64_t v131 = __chkstk_darwin(v129);
  uint64_t v994 = (uint64_t)&v925 - v132;
  uint64_t v133 = __chkstk_darwin(v131);
  uint64_t v996 = (uint64_t)&v925 - v134;
  uint64_t v135 = __chkstk_darwin(v133);
  uint64_t v942 = (uint64_t)&v925 - v136;
  uint64_t v137 = __chkstk_darwin(v135);
  uint64_t v944 = (uint64_t)&v925 - v138;
  uint64_t v139 = __chkstk_darwin(v137);
  uint64_t v976 = (uint64_t)&v925 - v140;
  __chkstk_darwin(v139);
  uint64_t v1052 = (uint64_t)&v925 - v141;
  uint64_t v142 = sub_10001295C(&qword_1000ED748);
  uint64_t v143 = __chkstk_darwin(v142 - 8);
  unint64_t v1078 = (unint64_t)&v925 - ((v144 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = __chkstk_darwin(v143);
  uint64_t v962 = (uint64_t)&v925 - v146;
  __chkstk_darwin(v145);
  uint64_t v1054 = (uint64_t)&v925 - v147;
  unint64_t v1070 = sub_1000B8F10();
  unint64_t v1071 = *(void *)(v1070 - 8);
  uint64_t v148 = __chkstk_darwin(v1070);
  uint64_t v1079 = (uint64_t)&v925 - ((v149 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = __chkstk_darwin(v148);
  v973 = (char *)&v925 - v151;
  uint64_t v152 = __chkstk_darwin(v150);
  v1015 = (char *)&v925 - v153;
  uint64_t v154 = __chkstk_darwin(v152);
  v997 = (char *)&v925 - v155;
  uint64_t v156 = __chkstk_darwin(v154);
  v1020 = (char *)&v925 - v157;
  uint64_t v158 = __chkstk_darwin(v156);
  v1030 = (char *)&v925 - v159;
  uint64_t v160 = __chkstk_darwin(v158);
  v993 = (char *)&v925 - v161;
  uint64_t v162 = __chkstk_darwin(v160);
  v954 = (char *)&v925 - v163;
  uint64_t v164 = __chkstk_darwin(v162);
  v957 = (char *)&v925 - v165;
  uint64_t v166 = __chkstk_darwin(v164);
  v986 = (char *)&v925 - v167;
  __chkstk_darwin(v166);
  v1060 = (char *)&v925 - v168;
  uint64_t v1055 = sub_1000B8F50();
  uint64_t v1058 = *(void *)(v1055 - 8);
  uint64_t v169 = __chkstk_darwin(v1055);
  v1064 = (char *)&v925 - ((v170 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = __chkstk_darwin(v169);
  v953 = (char *)&v925 - v172;
  uint64_t v173 = __chkstk_darwin(v171);
  v1003 = (char *)&v925 - v174;
  uint64_t v175 = __chkstk_darwin(v173);
  v985[0] = (char *)&v925 - v176;
  uint64_t v177 = __chkstk_darwin(v175);
  v1009 = (char *)&v925 - v178;
  uint64_t v179 = __chkstk_darwin(v177);
  uint64_t v1036 = (uint64_t)&v925 - v180;
  uint64_t v181 = __chkstk_darwin(v179);
  v1023 = (char *)&v925 - v182;
  uint64_t v183 = __chkstk_darwin(v181);
  v985[1] = (char *)&v925 - v184;
  uint64_t v185 = __chkstk_darwin(v183);
  uint64_t v995 = (uint64_t)&v925 - v186;
  uint64_t v187 = __chkstk_darwin(v185);
  v939 = (char *)&v925 - v188;
  uint64_t v189 = __chkstk_darwin(v187);
  v940 = (char *)&v925 - v190;
  uint64_t v191 = __chkstk_darwin(v189);
  v969 = (char *)&v925 - v192;
  uint64_t v193 = __chkstk_darwin(v191);
  v1042 = (char *)&v925 - v194;
  __chkstk_darwin(v193);
  v1040 = (char *)&v925 - v195;
  uint64_t v196 = sub_1000BB5D0();
  uint64_t v1085 = *(void *)(v196 - 8);
  *(void *)&long long v1086 = v196;
  uint64_t v197 = __chkstk_darwin(v196);
  v1077 = (char *)&v925 - ((v198 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = __chkstk_darwin(v197);
  v974 = (char *)&v925 - v200;
  uint64_t v201 = __chkstk_darwin(v199);
  v1014 = (char *)&v925 - v202;
  uint64_t v203 = __chkstk_darwin(v201);
  v999 = (char *)&v925 - v204;
  uint64_t v205 = __chkstk_darwin(v203);
  v1019 = (char *)&v925 - v206;
  uint64_t v207 = __chkstk_darwin(v205);
  v1029 = (char *)&v925 - v208;
  uint64_t v209 = __chkstk_darwin(v207);
  v992 = (char *)&v925 - v210;
  uint64_t v211 = __chkstk_darwin(v209);
  v956 = (char *)&v925 - v212;
  uint64_t v213 = __chkstk_darwin(v211);
  v960 = (char *)&v925 - v214;
  uint64_t v215 = __chkstk_darwin(v213);
  v989 = (char *)&v925 - v216;
  uint64_t v217 = __chkstk_darwin(v215);
  v1059 = (char *)&v925 - v218;
  __chkstk_darwin(v217);
  v1083 = (char *)&v925 - v219;
  uint64_t v220 = sub_10001295C(&qword_1000EC678);
  uint64_t v221 = __chkstk_darwin(v220 - 8);
  v1063 = (char *)&v925 - ((v222 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v223 = __chkstk_darwin(v221);
  v958 = (char *)&v925 - v224;
  uint64_t v225 = __chkstk_darwin(v223);
  uint64_t v1013 = (uint64_t)&v925 - v226;
  uint64_t v227 = __chkstk_darwin(v225);
  uint64_t v987 = (uint64_t)&v925 - v228;
  uint64_t v229 = __chkstk_darwin(v227);
  uint64_t v1018 = (uint64_t)&v925 - v230;
  uint64_t v231 = __chkstk_darwin(v229);
  uint64_t v1028 = (uint64_t)&v925 - v232;
  uint64_t v233 = __chkstk_darwin(v231);
  uint64_t v991 = (uint64_t)&v925 - v234;
  uint64_t v235 = __chkstk_darwin(v233);
  uint64_t v941 = (uint64_t)&v925 - v236;
  uint64_t v237 = __chkstk_darwin(v235);
  uint64_t v943 = (uint64_t)&v925 - v238;
  uint64_t v239 = __chkstk_darwin(v237);
  uint64_t v975 = (uint64_t)&v925 - v240;
  uint64_t v241 = __chkstk_darwin(v239);
  v1051 = (char *)&v925 - v242;
  __chkstk_darwin(v241);
  v1084 = (char *)&v925 - v243;
  v1080 = (int *)type metadata accessor for MessageDictionary();
  uint64_t v244 = __chkstk_darwin(v1080);
  uint64_t v1007 = (uint64_t)&v925 - ((v245 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v246 = __chkstk_darwin(v244);
  uint64_t v1006 = (uint64_t)&v925 - v247;
  uint64_t v248 = __chkstk_darwin(v246);
  uint64_t v1008 = (uint64_t)&v925 - v249;
  uint64_t v250 = __chkstk_darwin(v248);
  v1053 = (void **)((char *)&v925 - v251);
  uint64_t v252 = __chkstk_darwin(v250);
  v1076 = (char *)&v925 - v253;
  __chkstk_darwin(v252);
  uint64_t v1069 = (uint64_t)&v925 - v254;
  uint64_t v255 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v255 - 8);
  Swift::Int v257 = (char *)&v925 - ((v256 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v258 = sub_1000B86C0();
  v1081 = *(void (***)(char *, void, uint64_t))(v258 - 8);
  __chkstk_darwin(v258);
  v260 = (char *)&v925 - ((v259 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v261 = sub_1000BB6C0();
  v1082 = *(void **)(v261 - 8);
  __chkstk_darwin(v261);
  v263 = (char *)&v925 - ((v262 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v264 = sub_1000B8700();
  uint64_t v265 = *(void *)(v264 - 8);
  __chkstk_darwin(v264);
  v267 = (char *)&v925 - ((v266 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B81C0();
  swift_allocObject();
  uint64_t v268 = sub_1000B81B0();
  sub_10006E2D8(&qword_1000EC620, (void (*)(uint64_t))&type metadata accessor for TopLevelDictionary);
  uint64_t v269 = v1089;
  sub_1000B81A0();
  if (v269) {
    return swift_release();
  }
  v929 = v260;
  v927 = v257;
  v932 = v263;
  uint64_t v930 = v261;
  uint64_t v1089 = v268;
  uint64_t v931 = 0;
  uint64_t v1087 = v264;
  uint64_t v1088 = v265;
  uint64_t v271 = sub_1000B86D0();
  if (v272 >> 60 != 15)
  {
    uint64_t v292 = v271;
    unint64_t v293 = v272;
    v928 = v267;
    Class isa = sub_1000B82B0().super.isa;
    id v295 = [(objc_class *)isa _imOptionallyDecompressData];

    uint64_t v1079 = sub_1000B82D0();
    unint64_t v297 = v296;

    uint64_t v298 = v930;
    Swift::Int v299 = v1082;
    v300 = v932;
    uint64_t v301 = v258;
    unint64_t v1078 = v297;
    unint64_t v925 = v293;
    uint64_t v926 = v292;
    switch(v297 >> 62)
    {
      case 1uLL:
        LODWORD(v302) = HIDWORD(v1079) - v1079;
        if (!__OFSUB__(HIDWORD(v1079), v1079))
        {
          uint64_t v302 = (int)v302;
          goto LABEL_13;
        }
        __break(1u);
        goto LABEL_125;
      case 2uLL:
        uint64_t v310 = *(void *)(v1079 + 16);
        uint64_t v309 = *(void *)(v1079 + 24);
        BOOL v311 = __OFSUB__(v309, v310);
        uint64_t v302 = v309 - v310;
        if (!v311) {
          goto LABEL_13;
        }
LABEL_125:
        __break(1u);
        goto LABEL_126;
      case 3uLL:
        goto LABEL_17;
      default:
        uint64_t v302 = BYTE6(v297);
LABEL_13:
        if (v302 <= 0)
        {
LABEL_17:
          v341 = v929;
          v342 = v1081;
          v1081[13](v929, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v301);
          sub_1000B86B0();
          ((void (*)(char *, uint64_t))v342[1])(v341, v301);
          sub_1000BB6B0();
          sub_100018190();
          Swift::Int v343 = (void *)sub_1000BBD40();
          sub_10001295C(&qword_1000EC5C8);
          uint64_t v344 = swift_allocObject();
          *(_OWORD *)(v344 + 16) = xmmword_1000BF8A0;
          *(void *)&long long v1086 = v299[2];
          uint64_t v345 = (uint64_t)v927;
          ((void (*)(char *, char *, uint64_t))v1086)(v927, v300, v298);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v299[7])(v345, 0, 1, v298);
          uint64_t v346 = sub_1000BB200();
          uint64_t v348 = v347;
          sub_1000184DC(v345, &qword_1000EC630);
          *(void *)(v344 + 56) = &type metadata for String;
          *(void *)(v344 + 64) = sub_10001824C();
          *(void *)(v344 + 32) = v346;
          *(void *)(v344 + 40) = v348;
          sub_1000BBBE0();
          sub_1000B8770();

          swift_bridgeObjectRelease();
          sub_10006E2D8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
          swift_allocError();
          ((void (*)(uint64_t, char *, uint64_t))v1086)(v349, v300, v298);
          swift_willThrow();
          sub_1000180CC(v926, v925);
          sub_100018074(v1079, v1078);
          swift_release();
          ((void (*)(char *, uint64_t))v299[1])(v300, v298);
          return (*(uint64_t (**)(void *, uint64_t))(v1088 + 8))(v928, v1087);
        }
        sub_10006E2D8(&qword_1000ED758, (void (*)(uint64_t))type metadata accessor for MessageDictionary);
        uint64_t v312 = (uint64_t)v1076;
        uint64_t v313 = v931;
        sub_1000B81A0();
        if (v313)
        {
          uint64_t v1090 = v313;
          swift_errorRetain();
          sub_10001295C(&qword_1000EC648);
          uint64_t v314 = v1072;
          uint64_t v315 = v1075;
          if (swift_dynamicCast())
          {
            swift_errorRelease();
            unint64_t v316 = v1073;
            (*(void (**)(char *, uint64_t, uint64_t))(v1073 + 32))(v1074, v314, v315);
            v317 = v1081;
            Swift::Int v318 = v929;
            v1081[13](v929, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v258);
            sub_1000B86B0();
            *(void *)&long long v1086 = v319;
            ((void (*)(char *, uint64_t))v317[1])(v318, v258);
            uint64_t v320 = *(void (**)(char *, char *, uint64_t))(v316 + 16);
            v321 = v1074;
            v320(v1061, v1074, v315);
            sub_1000BB6A0();
            sub_100018190();
            v322 = (void *)sub_1000BBD40();
            uint64_t v1085 = sub_10001295C(&qword_1000EC5C8);
            uint64_t v323 = swift_allocObject();
            uint64_t v324 = v321;
            v325 = (void *)v323;
            long long v1086 = xmmword_1000BF8A0;
            *(_OWORD *)(v323 + 16) = xmmword_1000BF8A0;
            uint64_t v326 = (uint64_t)v1062;
            v320(v1062, v324, v315);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v316 + 56))(v326, 0, 1, v315);
            uint64_t v327 = sub_1000BB200();
            uint64_t v329 = v328;
            sub_1000184DC(v326, &qword_1000EC628);
            v325[7] = &type metadata for String;
            unint64_t v330 = sub_10001824C();
            v325[8] = v330;
            v325[4] = v327;
            v325[5] = v329;
            sub_1000BBBE0();
            sub_1000B8770();

            swift_bridgeObjectRelease();
            Swift::Int v331 = (void *)sub_1000BBD40();
            uint64_t v332 = swift_allocObject();
            *(_OWORD *)(v332 + 16) = v1086;
            Swift::Int v333 = v1082;
            *(void *)&long long v1086 = v1082[2];
            uint64_t v334 = (uint64_t)v927;
            uint64_t v335 = v930;
            ((void (*)(char *, char *, uint64_t))v1086)(v927, v932, v930);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v333[7])(v334, 0, 1, v335);
            uint64_t v336 = sub_1000BB200();
            uint64_t v338 = v337;
            sub_1000184DC(v334, &qword_1000EC630);
            *(void *)(v332 + 56) = &type metadata for String;
            *(void *)(v332 + 64) = v330;
            *(void *)(v332 + 32) = v336;
            *(void *)(v332 + 40) = v338;
            sub_1000BBBE0();
            sub_1000B8770();

            swift_bridgeObjectRelease();
            sub_10006E2D8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
            swift_allocError();
            v339 = v932;
            ((void (*)(uint64_t, char *, uint64_t))v1086)(v340, v932, v335);
            swift_willThrow();
            sub_1000180CC(v926, v925);
            sub_100018074(v1079, v1078);
            swift_release();
            ((void (*)(char *, uint64_t))v333[1])(v339, v335);
            (*(void (**)(char *, void))(v1073 + 8))(v1074, v1075);
            (*(void (**)(void *, uint64_t))(v1088 + 8))(v928, v1087);
            return swift_errorRelease();
          }
          swift_errorRelease();
          sub_100018190();
          uint64_t v374 = (void *)sub_1000BBD40();
          sub_10001295C(&qword_1000EC5C8);
          uint64_t v375 = swift_allocObject();
          *(_OWORD *)(v375 + 16) = xmmword_1000BF8A0;
          uint64_t v1090 = v313;
          uint64_t v376 = sub_1000BB200();
          uint64_t v378 = v377;
          *(void *)(v375 + 56) = &type metadata for String;
          *(void *)(v375 + 64) = sub_10001824C();
          *(void *)(v375 + 32) = v376;
          *(void *)(v375 + 40) = v378;
          sub_1000BBBE0();
          sub_1000B8770();

          swift_bridgeObjectRelease();
          swift_getErrorValue();
          swift_getDynamicType();
          uint64_t v1090 = 0;
          unint64_t v1091 = 0xE000000000000000;
          sub_1000BBED0(22);
          swift_bridgeObjectRelease();
          uint64_t v1090 = 0xD000000000000014;
          unint64_t v1091 = 0x80000001000C9380;
          v1092._countAndFlagsBits = sub_1000BC2B0();
          sub_1000BB9A0(v1092);
          swift_bridgeObjectRelease();
          sub_10006E2D8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
          swift_allocError();
          sub_1000BB6B0();
          swift_willThrow();
          sub_1000180CC(v926, v925);
          sub_100018074(v1079, v1078);
          swift_release();
          swift_errorRelease();
          goto LABEL_38;
        }
        *(void *)&long long v1075 = 0;
        uint64_t v355 = v1069;
        sub_10006E320(v312, v1069, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
        unint64_t v1073 = sub_100018190();
        v1076 = (char *)sub_1000BBD40();
        v1074 = (char *)sub_10001295C(&qword_1000EC5C8);
        uint64_t v356 = swift_allocObject();
        long long v1072 = xmmword_1000BF8A0;
        *(_OWORD *)(v356 + 16) = xmmword_1000BF8A0;
        v357 = v1083;
        sub_1000B86E0();
        uint64_t v358 = (uint64_t)v1084;
        sub_1000BB5C0();
        v359 = *(void **)(v1085 + 8);
        v1085 += 8;
        v1082 = v359;
        ((void (*)(char *, void))v359)(v357, v1086);
        uint64_t v360 = sub_1000B8380();
        uint64_t v361 = *(void *)(v360 - 8);
        v362 = *(void (***)(char *, void, uint64_t))(v361 + 56);
        v1077 = (char *)(v361 + 56);
        v1081 = v362;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v362)(v358, 0, 1, v360);
        uint64_t v363 = sub_1000BB200();
        uint64_t v365 = v364;
        sub_1000184DC(v358, &qword_1000EC678);
        *(void *)(v356 + 56) = &type metadata for String;
        unint64_t v366 = sub_10001824C();
        *(void *)(v356 + 64) = v366;
        *(void *)(v356 + 32) = v363;
        *(void *)(v356 + 40) = v365;
        uint64_t v367 = (unsigned __int8 *)v355;
        sub_1000BBBE0();
        uint64_t v368 = v1076;
        sub_1000B8770();

        swift_bridgeObjectRelease();
        if (*(unsigned char *)(v355 + 72))
        {
          uint64_t v379 = (void *)sub_1000BBD40();
          uint64_t v380 = swift_allocObject();
          *(_OWORD *)(v380 + 16) = v1072;
          sub_1000B86E0();
          sub_1000BB5C0();
          ((void (*)(char *, void))v1082)(v357, v1086);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v1081)(v358, 0, 1, v360);
          uint64_t v381 = sub_1000BB200();
          uint64_t v383 = v382;
          sub_1000184DC(v358, &qword_1000EC678);
          *(void *)(v380 + 56) = &type metadata for String;
          *(void *)(v380 + 64) = v366;
          *(void *)(v380 + 32) = v381;
          *(void *)(v380 + 40) = v383;
          sub_1000BBBE0();
          sub_1000B8770();

          swift_bridgeObjectRelease();
          v384 = v1059;
          uint64_t v385 = v928;
          sub_1000B86E0();
          sub_100019BBC(v1054);
          uint64_t v386 = v1080;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v387 = v1060;
          uint64_t v388 = v1075;
          sub_1000B9FF0();
          v390 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v1081;
          v389 = (void (*)(char *, void))v1082;
          uint64_t v931 = v388;
          if (v388)
          {
            sub_1000180CC(v926, v925);
            sub_100018074(v1079, v1078);
            swift_release();
            v389(v384, v1086);
            sub_10006E388((uint64_t)v367, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
            return (*(uint64_t (**)(void *, uint64_t))(v1088 + 8))(v385, v1087);
          }
          (*(void (**)(char *, void, unint64_t))(v1071 + 104))(v387, enum case for TextMessage.MessageType.typingIndicator(_:), v1070);
          v390(v1051, 1, 1, v360);
          v397 = &v367[v386[31]];
          uint64_t v398 = *(char **)v397;
          uint64_t v399 = *((void *)v397 + 1);
          v400 = (uint64_t *)&v367[v386[32]];
          uint64_t v401 = *v400;
          uint64_t v402 = (char *)v400[1];
          v1084 = v398;
          uint64_t v1085 = v401;
          uint64_t v403 = &v367[v386[33]];
          uint64_t v404 = (void (**)(char *, void, uint64_t))*((void *)v403 + 1);
          v1082 = *(void **)v403;
          uint64_t v405 = v386[24];
          uint64_t v406 = &v367[v386[23]];
          uint64_t v407 = (char *)*((void *)v406 + 1);
          v1077 = *(char **)v406;
          v408 = *(char **)&v367[v405 + 8];
          *(void *)&long long v1075 = *(void *)&v367[v405];
          uint64_t v409 = v386[22];
          uint64_t v410 = &v367[v386[21]];
          unint64_t v1073 = *(void *)v410;
          LODWORD(v1072) = v410[8];
          unint64_t v411 = *(void *)&v367[v409 + 8];
          *(void *)&long long v1086 = v399;
          v1083 = v402;
          v1081 = v404;
          v1076 = v407;
          v1074 = v408;
          if (v411)
          {
            uint64_t v412 = *(void *)&v367[v409];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v1071 = sub_100084288(v412, v411);
            int v414 = v413 & 1;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v1071 = 0;
            int v414 = 1;
          }
          LODWORD(v1070) = v414;
          uint64_t v442 = (uint64_t)v1043;
          v443 = &v367[v386[25]];
          v1068 = *(char **)v443;
          LODWORD(v1067) = v443[8];
          sub_1000236F8(v1052);
          uint64_t v444 = v386[46];
          uint64_t v445 = &v367[v386[45]];
          v446 = (char *)*((void *)v445 + 1);
          v1066 = *(char **)v445;
          v1063 = v446;
          v447 = *(char **)&v367[v444 + 8];
          v1065 = *(char **)&v367[v444];
          v1061 = v447;
          uint64_t v448 = v386[48];
          v449 = &v367[v386[47]];
          uint64_t v450 = *((void *)v449 + 1);
          v1064 = *(char **)v449;
          v1053 = (void **)v450;
          uint64_t v451 = *(void *)&v367[v448 + 8];
          v1062 = *(char **)&v367[v448];
          uint64_t v1050 = v451;
          uint64_t v452 = v386[50];
          LODWORD(v1057) = v367[v386[49]];
          uint64_t v1054 = *(void *)&v367[v452];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10007B260(v442);
          uint64_t v1047 = *(void *)&v367[v386[44]];
          LODWORD(v1049) = v367[97];
          LODWORD(v1048) = v367[98];
          LODWORD(v1044) = v367[99];
          swift_bridgeObjectRetain();
          sub_1000B8F20();
          sub_1000182A0((uint64_t)&v367[v386[20]], v1046, &qword_1000EC790);
          swift_bridgeObjectRetain();
          v453 = v1042;
          uint64_t v454 = v931;
          sub_1000B8F40();
          if (v454)
          {
            uint64_t v372 = v926;
            unint64_t v373 = v925;
            goto LABEL_36;
          }
          sub_1000180CC(v926, v925);
          sub_100018074(v1079, v1078);
          swift_release();
          uint64_t v456 = (uint64_t)v367;
          goto LABEL_98;
        }
        v1068 = (char *)v366;
        v1076 = (char *)v360;
        v369 = v1053;
        sub_10006E3E8(v355, (uint64_t)v1053, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
        uint64_t v370 = v1057;
        uint64_t v371 = v1075;
        Message.init(messageDictionary:)(v369, v1057);
        if (v371)
        {
          uint64_t v372 = v926;
          unint64_t v373 = v293;
LABEL_36:
          sub_1000180CC(v372, v373);
          sub_100018074(v1079, v1078);
          swift_release();
          uint64_t v455 = (uint64_t)v367;
LABEL_37:
          sub_10006E388(v455, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
LABEL_38:
          uint64_t v290 = *(uint64_t (**)(void *, uint64_t))(v1088 + 8);
          v291 = v928;
          return v290(v291, v1087);
        }
        uint64_t v931 = 0;
        int v391 = *(unsigned __int8 *)(v355 + 96);
        uint64_t v392 = v1044;
        sub_100065214(v1044);
        uint64_t v393 = v1047;
        int v394 = (*(uint64_t (**)(uint64_t, uint64_t, int *))(v1047 + 48))(v392, 1, v1048);
        v395 = v367;
        v396 = v928;
        if (v394 == 1)
        {
          sub_1000184DC(v392, &qword_1000ED728);
LABEL_42:
          unint64_t v457 = v1078;
          char v458 = sub_10007F254();
          uint64_t v459 = v1058;
          if (v458)
          {
            uint64_t v460 = (void *)sub_1000BBD40();
            uint64_t v461 = swift_allocObject();
            *(_OWORD *)(v461 + 16) = v1072;
            v462 = v1083;
            sub_1000B86E0();
            uint64_t v463 = (uint64_t)v1084;
            sub_1000BB5C0();
            ((void (*)(char *, void))v1082)(v462, v1086);
            ((void (*)(uint64_t, void, uint64_t, char *))v1081)(v463, 0, 1, v1076);
            uint64_t v464 = sub_1000BB200();
            uint64_t v466 = v465;
            sub_1000184DC(v463, &qword_1000EC678);
            v467 = v1068;
            *(void *)(v461 + 56) = &type metadata for String;
            *(void *)(v461 + 64) = v467;
            *(void *)(v461 + 32) = v464;
            *(void *)(v461 + 40) = v466;
            sub_1000BBBE0();
            sub_1000B8770();

            swift_bridgeObjectRelease();
            uint64_t v468 = v1037;
            uint64_t v469 = (void *)v1069;
            sub_1000236F8(v1037);
            uint64_t v470 = v1036;
            uint64_t v471 = v931;
            sub_10008D01C(v469, v396, v370, v468, v1036);
            if (v471)
            {
              sub_1000180CC(v926, v925);
              sub_100018074(v1079, v457);
              swift_release();
              sub_1000184DC(v468, &qword_1000ED740);
              (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v370, v1049);
LABEL_45:
              sub_10006E388((uint64_t)v469, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
              return (*(uint64_t (**)(void *, uint64_t))(v1088 + 8))(v396, v1087);
            }
            sub_1000180CC(v926, v925);
            sub_100018074(v1079, v457);
            swift_release();
            sub_1000184DC(v468, &qword_1000ED740);
            (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v370, v1049);
            sub_10006E388((uint64_t)v469, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
            (*(void (**)(void *, uint64_t))(v1088 + 8))(v396, v1087);
            uint64_t v480 = *(void (**)(char *, uint64_t, uint64_t))(v459 + 32);
            uint64_t v481 = v1040;
            uint64_t v482 = v1055;
            v480(v1040, v470, v1055);
            return ((uint64_t (*)(uint64_t, char *, uint64_t))v480)(v1056, v481, v482);
          }
          uint64_t v472 = sub_1000BB4B0();
          uint64_t v474 = v473;
          uint64_t v475 = (uint64_t)v1039;
          sub_1000BB4F0();
          uint64_t v476 = v1038;
          uint64_t v477 = v1069;
          uint64_t v478 = v931;
          sub_1000175C8(v472, v474, v475, v1038);
          if (v478)
          {
            sub_1000180CC(v926, v925);
            sub_100018074(v1079, v457);
            swift_release();
            swift_bridgeObjectRelease();
            sub_1000184DC(v475, &qword_1000EC588);
            (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v370, v1049);
            sub_10006E388(v477, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
            return (*(uint64_t (**)(void *, uint64_t))(v1088 + 8))(v928, v1087);
          }
          uint64_t v931 = 0;
          sub_1000184DC(v475, &qword_1000EC588);
          swift_bridgeObjectRelease();
          uint64_t v483 = v1027;
          uint64_t v484 = v1026;
          int v485 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1027 + 48))(v476, 1, v1026);
          LODWORD(v1075) = v391;
          if (v485 == 1)
          {
            sub_1000184DC(v476, &qword_1000ED708);
            int v486 = *(unsigned __int8 *)(v1069 + 73);
            uint64_t v487 = v1008;
            sub_10006E3E8(v1069, v1008, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
            if (v486 == 2)
            {
              sub_10006E388(v487, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
              uint64_t v488 = (uint64_t)v1084;
              goto LABEL_71;
            }
            int v564 = *(unsigned __int8 *)(v487 + 73);
            uint64_t v488 = (uint64_t)v1084;
            if (v564 == 2)
            {
              __break(1u);
              JUMPOUT(0x10006E210);
            }
            sub_10006E388(v487, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
            if ((v564 & 1) == 0)
            {
LABEL_71:
              uint64_t v565 = v1069;
              uint64_t v566 = *(void *)(v1069 + 32);
              uint64_t v567 = v1006;
              sub_10006E3E8(v1069, v1006, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
              if (v566)
              {
                sub_10006E388(v567, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
                uint64_t v568 = v565;
                uint64_t v569 = v1007;
                sub_10006E3E8(v568, v1007, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
LABEL_89:
                sub_10006E388(v569, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
                unint64_t v597 = v1071;
LABEL_90:
                v598 = (void *)sub_1000BBD40();
                uint64_t v599 = swift_allocObject();
                *(_OWORD *)(v599 + 16) = v1072;
                v600 = v1083;
                sub_1000B86E0();
                sub_1000BB5C0();
                ((void (*)(char *, void))v1082)(v600, v1086);
                ((void (*)(uint64_t, void, uint64_t, char *))v1081)(v488, 0, 1, v1076);
                uint64_t v601 = sub_1000BB200();
                uint64_t v602 = v488;
                uint64_t v604 = v603;
                sub_1000184DC(v602, &qword_1000EC678);
                v605 = v1068;
                *(void *)(v599 + 56) = &type metadata for String;
                *(void *)(v599 + 64) = v605;
                *(void *)(v599 + 32) = v601;
                *(void *)(v599 + 40) = v604;
                sub_1000BBBE0();
                sub_1000B8770();

                swift_bridgeObjectRelease();
                sub_1000B86E0();
                v606 = v1015;
                (*(void (**)(char *, uint64_t, uint64_t))(v1050 + 16))(v1015, v370, v1049);
                (*(void (**)(char *, void, unint64_t))(v597 + 104))(v606, enum case for TextMessage.MessageType.textMessage(_:), v1070);
                v607 = v1080;
                uint64_t v423 = v1069;
                sub_1000182A0(v1069 + v1080[18], v1013, &qword_1000EC678);
                v608 = (char **)(v423 + v607[31]);
                v609 = *v608;
                v610 = v608[1];
                v611 = (uint64_t *)(v423 + v607[32]);
                uint64_t v612 = *v611;
                v613 = (char *)v611[1];
                v614 = (void *)(v423 + v607[33]);
                v615 = (void *)*v614;
                v616 = (void (**)(char *, void, uint64_t))v614[1];
                v617 = (char **)(v423 + v607[23]);
                v618 = *v617;
                v619 = v617[1];
                v620 = (char **)(v423 + v607[24]);
                v622 = *v620;
                unint64_t v621 = (unint64_t)v620[1];
                uint64_t v623 = v423 + v607[21];
                uint64_t v624 = *(void *)v623;
                int v625 = *(unsigned __int8 *)(v623 + 8);
                v626 = (uint64_t *)(v423 + v607[22]);
                unint64_t v627 = v626[1];
                uint64_t v1085 = v612;
                *(void *)&long long v1086 = v610;
                v1083 = v613;
                v1084 = v609;
                v1081 = v616;
                v1082 = v615;
                v1076 = v619;
                v1077 = v618;
                v1074 = v622;
                unint64_t v1073 = v621;
                *(void *)&long long v1072 = v624;
                LODWORD(v1071) = v625;
                if (v627)
                {
                  uint64_t v628 = *v626;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v1048 = (int *)sub_100084288(v628, v627);
                  int v630 = v629 & 1;
                }
                else
                {
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v1048 = 0;
                  int v630 = 1;
                }
                LODWORD(v1047) = v630;
                uint64_t v631 = (uint64_t)v1017;
                uint64_t v632 = v423 + v607[25];
                unint64_t v1070 = *(void *)v632;
                LODWORD(v1068) = *(unsigned __int8 *)(v632 + 8);
                sub_1000236F8(v1016);
                uint64_t v633 = v607[46];
                v634 = (char **)(v423 + v607[45]);
                v635 = v634[1];
                v1067 = *v634;
                v1064 = v635;
                v636 = *(char **)(v423 + v633 + 8);
                v1066 = *(char **)(v423 + v633);
                v1062 = v636;
                uint64_t v637 = v607[48];
                v638 = (char **)(v423 + v607[47]);
                v639 = v638[1];
                v1065 = *v638;
                v1059 = v639;
                uint64_t v640 = *(void *)(v423 + v637 + 8);
                v1063 = *(char **)(v423 + v637);
                uint64_t v1054 = v640;
                uint64_t v641 = v607[50];
                LODWORD(v1061) = *(unsigned __int8 *)(v423 + v607[49]);
                v1060 = *(char **)(v423 + v641);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_10007B260(v631);
                v1051 = *(char **)(v423 + v607[44]);
                LODWORD(v1053) = *(unsigned __int8 *)(v423 + 97);
                LODWORD(v1052) = *(unsigned __int8 *)(v423 + 98);
                swift_bridgeObjectRetain();
                sub_1000B8F20();
                sub_1000182A0(v423 + v607[20], v1005, &qword_1000EC790);
                swift_bridgeObjectRetain();
                v453 = v1003;
                uint64_t v642 = v931;
                sub_1000B8F40();
                if (v642)
                {
                  sub_1000180CC(v926, v925);
                  sub_100018074(v1079, v1078);
                  swift_release();
                  goto LABEL_95;
                }
                sub_1000180CC(v926, v925);
                sub_100018074(v1079, v1078);
                swift_release();
                goto LABEL_97;
              }
              uint64_t v595 = *(void *)(v567 + 48);
              swift_bridgeObjectRetain();
              sub_10006E388(v567, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
              swift_bridgeObjectRelease();
              uint64_t v596 = v565;
              uint64_t v569 = v1007;
              sub_10006E3E8(v596, v1007, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
              if (v595) {
                goto LABEL_89;
              }
              uint64_t v697 = *(void *)(v569 + 64);
              sub_10006E388(v569, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
              unint64_t v597 = v1071;
              if (v697) {
                goto LABEL_90;
              }
              v698 = (void *)sub_1000BBD40();
              uint64_t v699 = swift_allocObject();
              *(_OWORD *)(v699 + 16) = v1072;
              v700 = v1083;
              sub_1000B86E0();
              sub_1000BB5C0();
              ((void (*)(char *, void))v1082)(v700, v1086);
              ((void (*)(uint64_t, void, uint64_t, char *))v1081)(v488, 0, 1, v1076);
              uint64_t v701 = sub_1000BB200();
              uint64_t v703 = v702;
              sub_1000184DC(v488, &qword_1000EC678);
              v704 = v1068;
              *(void *)(v699 + 56) = &type metadata for String;
              *(void *)(v699 + 64) = v704;
              *(void *)(v699 + 32) = v701;
              *(void *)(v699 + 40) = v703;
              sub_1000BBBE0();
              sub_1000B8770();

              swift_bridgeObjectRelease();
              sub_1000B86E0();
              sub_100019BBC(v962);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v705 = v931;
              sub_1000B9FF0();
              uint64_t v931 = v705;
              if (v705)
              {
                sub_1000180CC(v926, v925);
                sub_100018074(v1079, v1078);
                swift_release();
                ((void (*)(char *, void))v1082)(v974, v1086);
LABEL_155:
                (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v1057, v1049);
                sub_10006E388(v1069, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
                return (*(uint64_t (**)(void *, uint64_t))(v1088 + 8))(v928, v1087);
              }
              (*(void (**)(char *, void, unint64_t))(v1071 + 104))(v973, enum case for TextMessage.MessageType.typingIndicator(_:), v1070);
              ((void (*)(char *, uint64_t, uint64_t, char *))v1081)(v958, 1, 1, v1076);
              uint64_t v820 = v1080[32];
              v821 = (char **)(v1069 + v1080[31]);
              v822 = *v821;
              *(void *)&long long v1086 = v821[1];
              uint64_t v823 = *(void *)(v1069 + v820 + 8);
              v1081 = *(void (***)(char *, void, uint64_t))(v1069 + v820);
              uint64_t v1085 = v823;
              v824 = (char **)(v1069 + v1080[33]);
              v826 = *v824;
              v825 = v824[1];
              v1076 = v826;
              v1077 = v822;
              v1084 = v825;
              uint64_t v827 = v1080[24];
              v828 = (char **)(v1069 + v1080[23]);
              v830 = *v828;
              v829 = v828[1];
              v1074 = v830;
              v1083 = v829;
              v831 = *(void **)(v1069 + v827 + 8);
              unint64_t v1073 = *(void *)(v1069 + v827);
              v1082 = v831;
              uint64_t v832 = v1080[22];
              uint64_t v833 = v1069 + v1080[21];
              *(void *)&long long v1072 = *(void *)v833;
              LODWORD(v1071) = *(unsigned __int8 *)(v833 + 8);
              unint64_t v834 = *(void *)(v1069 + v832 + 8);
              if (v834)
              {
                uint64_t v835 = *(void *)(v1069 + v832);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v1051 = (char *)sub_100084288(v835, v834);
                int v837 = v836 & 1;
              }
              else
              {
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v1051 = 0;
                int v837 = 1;
              }
              LODWORD(v1048) = v837;
              v865 = v1080;
              uint64_t v866 = v1069;
              uint64_t v867 = v1069 + v1080[25];
              unint64_t v1070 = *(void *)v867;
              LODWORD(v1068) = *(unsigned __int8 *)(v867 + 8);
              sub_1000236F8(v959);
              uint64_t v868 = v865[46];
              v869 = (char **)(v866 + v865[45]);
              v870 = v869[1];
              v1067 = *v869;
              v1063 = v870;
              v871 = *(char **)(v866 + v868 + 8);
              v1066 = *(char **)(v866 + v868);
              v1062 = v871;
              uint64_t v872 = v865[48];
              v873 = (char **)(v866 + v865[47]);
              v874 = v873[1];
              v1065 = *v873;
              v1060 = v874;
              uint64_t v875 = *(void *)(v866 + v872 + 8);
              v1064 = *(char **)(v866 + v872);
              v1053 = (void **)v875;
              uint64_t v876 = v865[50];
              LODWORD(v1061) = *(unsigned __int8 *)(v866 + v865[49]);
              uint64_t v877 = *(void *)(v866 + v876 + 8);
              v1059 = *(char **)(v866 + v876);
              uint64_t v1054 = v877;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_10007B260(v948);
              LODWORD(v1052) = *(unsigned __int8 *)(v866 + 97);
              swift_bridgeObjectRetain();
              sub_1000B8F20();
              sub_1000182A0(v866 + v865[20], v950, &qword_1000EC790);
              uint64_t v878 = v931;
              sub_1000B8F40();
              if (!v878)
              {
                sub_1000180CC(v926, v925);
                sub_100018074(v1079, v1078);
                swift_release();
                (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v1057, v1049);
                sub_10006E388(v1069, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
                (*(void (**)(void *, uint64_t))(v1088 + 8))(v928, v1087);
                uint64_t v480 = *(void (**)(char *, uint64_t, uint64_t))(v1058 + 32);
                uint64_t v481 = v1040;
                v643 = v1040;
                v750 = v985;
                goto LABEL_176;
              }
LABEL_147:
              sub_1000180CC(v926, v925);
              sub_100018074(v1079, v1078);
              swift_release();
              goto LABEL_155;
            }
            v645 = (void *)sub_1000BBD40();
            uint64_t v646 = swift_allocObject();
            *(_OWORD *)(v646 + 16) = v1072;
            v647 = v1083;
            sub_1000B86E0();
            sub_1000BB5C0();
            ((void (*)(char *, void))v1082)(v647, v1086);
            ((void (*)(uint64_t, void, uint64_t, char *))v1081)(v488, 0, 1, v1076);
            uint64_t v648 = sub_1000BB200();
            uint64_t v650 = v649;
            sub_1000184DC(v488, &qword_1000EC678);
            v651 = v1068;
            *(void *)(v646 + 56) = &type metadata for String;
            *(void *)(v646 + 64) = v651;
            *(void *)(v646 + 32) = v648;
            *(void *)(v646 + 40) = v650;
            sub_1000BBBE0();
            sub_1000B8770();

            swift_bridgeObjectRelease();
            sub_1000B86E0();
            sub_1000BB4F0();
            sub_1000BB4D0();
            uint64_t v653 = *(void *)(v1069 + 80);
            unint64_t v652 = *(void *)(v1069 + 88);
            if (v652 >> 60 != 15)
            {
              sub_10001295C(&qword_1000ED760);
              uint64_t v658 = swift_allocObject();
              *(_OWORD *)(v658 + 16) = v1072;
              *(void *)(v658 + 32) = v653;
              *(void *)(v658 + 40) = v652;
            }
            sub_100017FA4(v653, v652);
            v659 = v997;
            uint64_t v660 = v931;
            sub_1000B8F70();
            if (v660)
            {
              sub_1000180CC(v926, v925);
              sub_100018074(v1079, v1078);
              swift_release();
              ((void (*)(char *, void))v1082)(v999, v1086);
LABEL_123:
              (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v1057, v1049);
              uint64_t v455 = v1069;
              goto LABEL_37;
            }
            uint64_t v931 = 0;
            (*(void (**)(char *, void, unint64_t))(v1071 + 104))(v659, enum case for TextMessage.MessageType.audioMessage(_:), v1070);
            v706 = v1080;
            uint64_t v707 = v1069;
            sub_1000182A0(v1069 + v1080[18], v987, &qword_1000EC678);
            v708 = (char **)(v707 + v706[31]);
            v709 = *v708;
            v710 = v708[1];
            v711 = (void *)(v707 + v706[32]);
            v713 = (void (**)(char *, void, uint64_t))*v711;
            uint64_t v712 = v711[1];
            v1081 = v713;
            uint64_t v1085 = v712;
            *(void *)&long long v1086 = v710;
            v714 = (char **)(v707 + v706[33]);
            v716 = *v714;
            v715 = v714[1];
            v1076 = v716;
            v1077 = v709;
            v1084 = v715;
            uint64_t v717 = v706[24];
            v718 = (char **)(v707 + v706[23]);
            v720 = *v718;
            v719 = v718[1];
            v1074 = v720;
            v1083 = v719;
            v721 = *(void **)(v707 + v717 + 8);
            unint64_t v1073 = *(void *)(v707 + v717);
            v1082 = v721;
            uint64_t v722 = v706[22];
            uint64_t v723 = v707 + v706[21];
            *(void *)&long long v1072 = *(void *)v723;
            LODWORD(v1071) = *(unsigned __int8 *)(v723 + 8);
            unint64_t v724 = *(void *)(v707 + v722 + 8);
            if (v724)
            {
              uint64_t v725 = *(void *)(v707 + v722);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unint64_t v1070 = sub_100084288(v725, v724);
              int v727 = v726 & 1;
            }
            else
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unint64_t v1070 = 0;
              int v727 = 1;
            }
            LODWORD(v1068) = v727;
            v789 = v1080;
            uint64_t v790 = v1069;
            v791 = (char **)(v1069 + v1080[25]);
            v1067 = *v791;
            LODWORD(v1066) = *((unsigned __int8 *)v791 + 8);
            sub_1000236F8(v988);
            uint64_t v792 = v789[46];
            v793 = (char **)(v790 + v789[45]);
            v794 = v793[1];
            v1065 = *v793;
            v1061 = v794;
            v795 = *(char **)(v790 + v792 + 8);
            v1064 = *(char **)(v790 + v792);
            v1059 = v795;
            uint64_t v796 = v789[48];
            v797 = (char **)(v790 + v789[47]);
            uint64_t v798 = (uint64_t)v797[1];
            v1063 = *v797;
            v1053 = (void **)v798;
            uint64_t v799 = *(void *)(v790 + v796 + 8);
            v1062 = *(char **)(v790 + v796);
            uint64_t v1052 = v799;
            uint64_t v800 = v789[50];
            LODWORD(v1060) = *(unsigned __int8 *)(v790 + v789[49]);
            uint64_t v1054 = *(void *)(v790 + v800);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_10007B260(v977);
            v1048 = *(int **)(v790 + v789[44]);
            LODWORD(v1051) = *(unsigned __int8 *)(v790 + 97);
            swift_bridgeObjectRetain();
            sub_1000B8F20();
            sub_1000182A0(v790 + v789[20], v979, &qword_1000EC790);
            swift_bridgeObjectRetain();
            uint64_t v801 = v931;
            sub_1000B8F40();
            if (v801) {
              goto LABEL_147;
            }
            sub_1000180CC(v926, v925);
            sub_100018074(v1079, v1078);
            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v1057, v1049);
            sub_10006E388(v1069, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
            (*(void (**)(void *, uint64_t))(v1088 + 8))(v928, v1087);
            uint64_t v480 = *(void (**)(char *, uint64_t, uint64_t))(v1058 + 32);
            uint64_t v481 = v1040;
            v643 = v1040;
            v750 = &v1016;
LABEL_176:
            uint64_t v644 = *(v750 - 32);
            goto LABEL_99;
          }
          uint64_t v505 = v1022;
          (*(void (**)(char *, uint64_t, uint64_t))(v483 + 32))(v1022, v476, v484);
          LODWORD(v1072) = sub_1000BBBB0();
          unint64_t v1073 = sub_1000BBD40();
          uint64_t v506 = swift_allocObject();
          *(_OWORD *)(v506 + 16) = xmmword_1000C0D10;
          uint64_t v1090 = sub_1000B9440();
          unint64_t v1091 = v507;
          uint64_t v508 = sub_1000BB200();
          uint64_t v510 = v509;
          swift_bridgeObjectRelease();
          *(void *)(v506 + 56) = &type metadata for String;
          v511 = v1068;
          *(void *)(v506 + 64) = v1068;
          *(void *)(v506 + 32) = v508;
          *(void *)(v506 + 40) = v510;
          uint64_t v512 = v1083;
          sub_1000B86E0();
          uint64_t v513 = (uint64_t)v1084;
          sub_1000BB5C0();
          ((void (*)(char *, void))v1082)(v512, v1086);
          ((void (*)(uint64_t, void, uint64_t, char *))v1081)(v513, 0, 1, v1076);
          uint64_t v514 = sub_1000BB200();
          uint64_t v516 = v515;
          sub_1000184DC(v513, &qword_1000EC678);
          *(void *)(v506 + 96) = &type metadata for String;
          *(void *)(v506 + 104) = v511;
          *(void *)(v506 + 72) = v514;
          *(void *)(v506 + 80) = v516;
          v517 = (void *)v1073;
          sub_1000B8780();

          swift_bridgeObjectRelease();
          sub_1000B86E0();
          v518 = v1020;
          (*(void (**)(char *, char *, uint64_t))(v1027 + 16))(v1020, v505, v484);
          (*(void (**)(char *, void, unint64_t))(v1071 + 104))(v518, enum case for TextMessage.MessageType.balloonPlugin(_:), v1070);
          v519 = v1080;
          uint64_t v423 = v1069;
          sub_1000182A0(v1069 + v1080[18], v1018, &qword_1000EC678);
          v520 = (char **)(v423 + v519[31]);
          v521 = *v520;
          v522 = v520[1];
          v523 = (uint64_t *)(v423 + v519[32]);
          uint64_t v524 = *v523;
          v525 = (char *)v523[1];
          v526 = (void *)(v423 + v519[33]);
          v527 = (void *)*v526;
          v528 = (void (**)(char *, void, uint64_t))v526[1];
          v529 = (char **)(v423 + v519[23]);
          v530 = *v529;
          v531 = v529[1];
          v532 = (char **)(v423 + v519[24]);
          v534 = *v532;
          unint64_t v533 = (unint64_t)v532[1];
          uint64_t v535 = v423 + v519[21];
          uint64_t v536 = *(void *)v535;
          int v537 = *(unsigned __int8 *)(v535 + 8);
          v538 = (uint64_t *)(v423 + v519[22]);
          unint64_t v539 = v538[1];
          uint64_t v1085 = v524;
          *(void *)&long long v1086 = v522;
          v1083 = v525;
          v1084 = v521;
          v1081 = v528;
          v1082 = v527;
          v1076 = v531;
          v1077 = v530;
          v1074 = v534;
          unint64_t v1073 = v533;
          *(void *)&long long v1072 = v536;
          LODWORD(v1071) = v537;
          if (v539)
          {
            uint64_t v540 = *v538;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v1070 = sub_100084288(v540, v539);
            int v542 = v541 & 1;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v1070 = 0;
            int v542 = 1;
          }
          LODWORD(v1068) = v542;
          uint64_t v570 = (uint64_t)v1012;
          v571 = (char **)(v423 + v519[25]);
          v1067 = *v571;
          LODWORD(v1066) = *((unsigned __int8 *)v571 + 8);
          sub_1000236F8(v1021);
          uint64_t v572 = v519[46];
          v573 = (char **)(v423 + v519[45]);
          v574 = v573[1];
          v1065 = *v573;
          v1061 = v574;
          v575 = *(char **)(v423 + v572 + 8);
          v1064 = *(char **)(v423 + v572);
          v1059 = v575;
          uint64_t v576 = v519[48];
          v577 = (char **)(v423 + v519[47]);
          uint64_t v578 = (uint64_t)v577[1];
          v1063 = *v577;
          v1053 = (void **)v578;
          uint64_t v579 = *(void *)(v423 + v576 + 8);
          v1062 = *(char **)(v423 + v576);
          uint64_t v1052 = v579;
          uint64_t v580 = v519[50];
          LODWORD(v1060) = *(unsigned __int8 *)(v423 + v519[49]);
          uint64_t v1054 = *(void *)(v423 + v580);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10007B260(v570);
          v1048 = *(int **)(v423 + v519[44]);
          LODWORD(v1051) = *(unsigned __int8 *)(v423 + 97);
          swift_bridgeObjectRetain();
          sub_1000B8F20();
          sub_1000182A0(v423 + v519[20], v1011, &qword_1000EC790);
          swift_bridgeObjectRetain();
          v453 = v1009;
          uint64_t v581 = v931;
          sub_1000B8F40();
          if (v581)
          {
            sub_1000180CC(v926, v925);
            sub_100018074(v1079, v1078);
            swift_release();
            (*(void (**)(char *, uint64_t))(v1027 + 8))(v1022, v1026);
            goto LABEL_95;
          }
          sub_1000180CC(v926, v925);
          sub_100018074(v1079, v1078);
          swift_release();
          (*(void (**)(char *, uint64_t))(v1027 + 8))(v1022, v1026);
          goto LABEL_97;
        }
        uint64_t v415 = v1041;
        sub_10006E320(v392, v1041, (uint64_t (*)(void))_s17AssociatedMessageVMa);
        if (!*(void *)v395)
        {
          sub_10006E388(v415, (uint64_t (*)(void))_s17AssociatedMessageVMa);
          goto LABEL_42;
        }
        LODWORD(v1075) = v391;
        uint64_t v416 = v1034;
        v417 = *(void (**)(char *, uint64_t, uint64_t))(v1034 + 16);
        uint64_t v418 = v1033;
        uint64_t v419 = v1035;
        v417(v1033, v415, v1035);
        int v420 = (*(uint64_t (**)(char *, uint64_t))(v416 + 88))(v418, v419);
        if (v420 == enum case for TapBack.AssociatedMessageType.unspecified(_:))
        {
          sub_1000B86E0();
          uint64_t v421 = v1030;
          (*(void (**)(char *, uint64_t, uint64_t))(v1050 + 16))(v1030, v1057, v1049);
          (*(void (**)(char *, void, unint64_t))(v1071 + 104))(v421, enum case for TextMessage.MessageType.textMessage(_:), v1070);
          v422 = v1080;
          uint64_t v423 = v1069;
          sub_1000182A0(v1069 + v1080[18], v1028, &qword_1000EC678);
          v424 = (char **)(v423 + v422[31]);
          v425 = *v424;
          v426 = v424[1];
          uint64_t v427 = (uint64_t *)(v423 + v422[32]);
          uint64_t v428 = *v427;
          v429 = (char *)v427[1];
          v1084 = v425;
          uint64_t v1085 = v428;
          v430 = (void *)(v423 + v422[33]);
          uint64_t v431 = (void (**)(char *, void, uint64_t))v430[1];
          v1082 = (void *)*v430;
          uint64_t v432 = v422[24];
          uint64_t v433 = (char **)(v423 + v422[23]);
          uint64_t v434 = v433[1];
          v1077 = *v433;
          unint64_t v435 = *(void *)(v423 + v432 + 8);
          v1074 = *(char **)(v423 + v432);
          uint64_t v436 = v422[22];
          uint64_t v437 = v423 + v422[21];
          *(void *)&long long v1072 = *(void *)v437;
          LODWORD(v1071) = *(unsigned __int8 *)(v437 + 8);
          unint64_t v438 = *(void *)(v423 + v436 + 8);
          *(void *)&long long v1086 = v426;
          v1083 = v429;
          v1081 = v431;
          v1076 = v434;
          unint64_t v1073 = v435;
          if (v438)
          {
            uint64_t v439 = *(void *)(v423 + v436);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v1070 = sub_100084288(v439, v438);
            int v441 = v440 & 1;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v1070 = 0;
            int v441 = 1;
          }
          LODWORD(v1068) = v441;
          uint64_t v543 = (uint64_t)v1032;
          v544 = (char **)(v423 + v422[25]);
          v1067 = *v544;
          LODWORD(v1066) = *((unsigned __int8 *)v544 + 8);
          sub_1000236F8(v1031);
          uint64_t v545 = v422[46];
          v546 = (char **)(v423 + v422[45]);
          v547 = v546[1];
          v1065 = *v546;
          v1062 = v547;
          v548 = *(char **)(v423 + v545 + 8);
          v1064 = *(char **)(v423 + v545);
          v1060 = v548;
          uint64_t v549 = v422[48];
          v550 = (char **)(v423 + v422[47]);
          uint64_t v551 = (uint64_t)v550[1];
          v1063 = *v550;
          v1053 = (void **)v551;
          uint64_t v552 = *(void *)(v423 + v549 + 8);
          v1061 = *(char **)(v423 + v549);
          uint64_t v1052 = v552;
          uint64_t v553 = v422[50];
          LODWORD(v1059) = *(unsigned __int8 *)(v423 + v422[49]);
          uint64_t v1054 = *(void *)(v423 + v553);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10007B260(v543);
          uint64_t v1047 = *(void *)(v423 + v422[44]);
          LODWORD(v1051) = *(unsigned __int8 *)(v423 + 97);
          LODWORD(v1048) = *(unsigned __int8 *)(v423 + 98);
          swift_bridgeObjectRetain();
          sub_1000B8F20();
          sub_1000182A0(v423 + v422[20], v1025, &qword_1000EC790);
          swift_bridgeObjectRetain();
          v453 = v1023;
          uint64_t v554 = v931;
          sub_1000B8F40();
          if (v554)
          {
            sub_1000180CC(v926, v925);
            sub_100018074(v1079, v1078);
            swift_release();
            sub_10006E388(v1041, (uint64_t (*)(void))_s17AssociatedMessageVMa);
LABEL_95:
            (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v1057, v1049);
            uint64_t v455 = v423;
            goto LABEL_37;
          }
          sub_1000180CC(v926, v925);
          sub_100018074(v1079, v1078);
          swift_release();
          sub_10006E388(v1041, (uint64_t (*)(void))_s17AssociatedMessageVMa);
LABEL_97:
          (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v1057, v1049);
          uint64_t v456 = v423;
LABEL_98:
          sub_10006E388(v456, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
          (*(void (**)(void *, uint64_t))(v1088 + 8))(v928, v1087);
          uint64_t v480 = *(void (**)(char *, uint64_t, uint64_t))(v1058 + 32);
          uint64_t v481 = v1040;
          v643 = v1040;
          uint64_t v644 = (uint64_t)v453;
LABEL_99:
          uint64_t v482 = v1055;
          v480(v643, v644, v1055);
          return ((uint64_t (*)(uint64_t, char *, uint64_t))v480)(v1056, v481, v482);
        }
        if (v420 == enum case for TapBack.AssociatedMessageType.edit(_:))
        {
          uint64_t v1090 = sub_1000BB580();
          sub_1000BC190();
          sub_10006E2D8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
          swift_allocError();
          sub_1000BB6B0();
          swift_willThrow();
          sub_1000180CC(v926, v925);
          sub_100018074(v1079, v1078);
          swift_release();
          sub_10006E388(v415, (uint64_t (*)(void))_s17AssociatedMessageVMa);
          (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v1057, v1049);
LABEL_50:
          uint64_t v479 = v1069;
LABEL_51:
          sub_10006E388(v479, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
          uint64_t v290 = *(uint64_t (**)(void *, uint64_t))(v1088 + 8);
          v291 = v396;
          return v290(v291, v1087);
        }
        if (v420 == enum case for TapBack.AssociatedMessageType.breadcrumbUnconsumed(_:)
          || v420 == enum case for TapBack.AssociatedMessageType.breadcrumbConsumed(_:))
        {
          uint64_t v555 = v1057;
          uint64_t v556 = sub_1000BB4B0();
          uint64_t v558 = v557;
          uint64_t v559 = (uint64_t)v1002;
          sub_1000BB4F0();
          uint64_t v560 = v1001;
          uint64_t v561 = v1069;
          uint64_t v562 = v931;
          sub_1000175C8(v556, v558, v559, v1001);
          unint64_t v563 = v1078;
          if (v562)
          {
            sub_1000180CC(v926, v925);
            sub_100018074(v1079, v563);
            swift_release();
            swift_bridgeObjectRelease();
            sub_1000184DC(v559, &qword_1000EC588);
            sub_10006E388(v1041, (uint64_t (*)(void))_s17AssociatedMessageVMa);
            (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v555, v1049);
            sub_10006E388(v561, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
            return (*(uint64_t (**)(void *, uint64_t))(v1088 + 8))(v396, v1087);
          }
          uint64_t v654 = v555;
          uint64_t v931 = 0;
          sub_1000184DC(v559, &qword_1000EC588);
          swift_bridgeObjectRelease();
          uint64_t v655 = v1027;
          uint64_t v656 = v1026;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1027 + 48))(v560, 1, v1026) == 1)
          {
            sub_1000184DC(v560, &qword_1000ED708);
            uint64_t v657 = v1041;
            uint64_t v1090 = sub_1000BB580();
            sub_1000BC190();
            sub_10006E2D8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
            swift_allocError();
            sub_1000BB6B0();
            swift_willThrow();
            sub_1000180CC(v926, v925);
            sub_100018074(v1079, v1078);
            swift_release();
            sub_10006E388(v657, (uint64_t (*)(void))_s17AssociatedMessageVMa);
            (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v654, v1049);
            goto LABEL_50;
          }
          v661 = v990;
          (*(void (**)(char *, uint64_t, uint64_t))(v655 + 32))(v990, v560, v656);
          LODWORD(v1072) = sub_1000BBBB0();
          unint64_t v1073 = sub_1000BBD40();
          uint64_t v662 = swift_allocObject();
          *(_OWORD *)(v662 + 16) = xmmword_1000C0D10;
          uint64_t v1090 = sub_1000B9440();
          unint64_t v1091 = v663;
          uint64_t v664 = sub_1000BB200();
          uint64_t v666 = v665;
          swift_bridgeObjectRelease();
          *(void *)(v662 + 56) = &type metadata for String;
          v667 = v1068;
          *(void *)(v662 + 64) = v1068;
          *(void *)(v662 + 32) = v664;
          *(void *)(v662 + 40) = v666;
          v668 = v1083;
          sub_1000B86E0();
          uint64_t v669 = (uint64_t)v1084;
          sub_1000BB5C0();
          ((void (*)(char *, void))v1082)(v668, v1086);
          ((void (*)(uint64_t, void, uint64_t, char *))v1081)(v669, 0, 1, v1076);
          uint64_t v670 = sub_1000BB200();
          uint64_t v672 = v671;
          sub_1000184DC(v669, &qword_1000EC678);
          *(void *)(v662 + 96) = &type metadata for String;
          *(void *)(v662 + 104) = v667;
          *(void *)(v662 + 72) = v670;
          *(void *)(v662 + 80) = v672;
          v673 = (void *)v1073;
          sub_1000B8780();

          swift_bridgeObjectRelease();
          sub_1000B86E0();
          v674 = v993;
          (*(void (**)(char *, char *, uint64_t))(v1027 + 16))(v993, v661, v656);
          (*(void (**)(char *, void, unint64_t))(v1071 + 104))(v674, enum case for TextMessage.MessageType.balloonPlugin(_:), v1070);
          v675 = v1080;
          uint64_t v676 = v1069;
          sub_1000182A0(v1069 + v1080[18], v991, &qword_1000EC678);
          v677 = (char **)(v676 + v675[31]);
          v678 = *v677;
          v679 = v677[1];
          v680 = (void *)(v676 + v675[32]);
          v682 = (void (**)(char *, void, uint64_t))*v680;
          uint64_t v681 = v680[1];
          v1081 = v682;
          uint64_t v1085 = v681;
          *(void *)&long long v1086 = v679;
          v683 = (char **)(v676 + v675[33]);
          v685 = *v683;
          v684 = v683[1];
          v1076 = v685;
          v1077 = v678;
          v1084 = v684;
          uint64_t v686 = v675[24];
          v687 = (char **)(v676 + v675[23]);
          v689 = *v687;
          v688 = v687[1];
          v1074 = v689;
          v1083 = v688;
          v690 = *(void **)(v676 + v686 + 8);
          unint64_t v1073 = *(void *)(v676 + v686);
          v1082 = v690;
          uint64_t v691 = v675[22];
          uint64_t v692 = v676 + v675[21];
          *(void *)&long long v1072 = *(void *)v692;
          LODWORD(v1071) = *(unsigned __int8 *)(v692 + 8);
          unint64_t v693 = *(void *)(v676 + v691 + 8);
          if (v693)
          {
            uint64_t v694 = *(void *)(v676 + v691);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v1070 = sub_100084288(v694, v693);
            int v696 = v695 & 1;
          }
          else
          {
LABEL_126:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v1070 = 0;
            int v696 = 1;
          }
          LODWORD(v1068) = v696;
          v737 = v1080;
          uint64_t v738 = v1069;
          v739 = (char **)(v1069 + v1080[25]);
          v1067 = *v739;
          LODWORD(v1066) = *((unsigned __int8 *)v739 + 8);
          sub_1000236F8(v994);
          uint64_t v740 = v737[46];
          v741 = (char **)(v738 + v737[45]);
          v742 = v741[1];
          v1065 = *v741;
          v1061 = v742;
          v743 = *(char **)(v738 + v740 + 8);
          v1064 = *(char **)(v738 + v740);
          v1059 = v743;
          uint64_t v744 = v737[48];
          v745 = (char **)(v738 + v737[47]);
          uint64_t v746 = (uint64_t)v745[1];
          v1063 = *v745;
          v1053 = (void **)v746;
          uint64_t v747 = *(void *)(v738 + v744 + 8);
          v1062 = *(char **)(v738 + v744);
          uint64_t v1052 = v747;
          uint64_t v748 = v737[50];
          LODWORD(v1060) = *(unsigned __int8 *)(v738 + v737[49]);
          uint64_t v1054 = *(void *)(v738 + v748);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10007B260(v982);
          v1048 = *(int **)(v738 + v737[44]);
          LODWORD(v1051) = *(unsigned __int8 *)(v738 + 97);
          swift_bridgeObjectRetain();
          sub_1000B8F20();
          sub_1000182A0(v738 + v737[20], v984, &qword_1000EC790);
          swift_bridgeObjectRetain();
          uint64_t v749 = v931;
          sub_1000B8F40();
          if (!v749)
          {
            sub_1000180CC(v926, v925);
            sub_100018074(v1079, v1078);
            swift_release();
            (*(void (**)(char *, uint64_t))(v1027 + 8))(v990, v1026);
            sub_10006E388(v1041, (uint64_t (*)(void))_s17AssociatedMessageVMa);
            (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v1057, v1049);
            sub_10006E388(v1069, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
            (*(void (**)(void *, uint64_t))(v1088 + 8))(v928, v1087);
            uint64_t v480 = *(void (**)(char *, uint64_t, uint64_t))(v1058 + 32);
            uint64_t v481 = v1040;
            v643 = v1040;
            v750 = (uint64_t *)&v1017;
            goto LABEL_176;
          }
          sub_1000180CC(v926, v925);
          sub_100018074(v1079, v1078);
          swift_release();
          (*(void (**)(char *, uint64_t))(v1027 + 8))(v990, v1026);
          goto LABEL_154;
        }
        if (v420 == enum case for TapBack.AssociatedMessageType.sticker(_:))
        {
          uint64_t v489 = (void *)sub_1000BBD40();
          uint64_t v490 = swift_allocObject();
          *(_OWORD *)(v490 + 16) = xmmword_1000C0D10;
          uint64_t v491 = v998;
          sub_10006E3E8(v415, v998, (uint64_t (*)(void))_s17AssociatedMessageVMa);
          (*(void (**)(uint64_t, void, uint64_t, int *))(v393 + 56))(v491, 0, 1, v1048);
          uint64_t v492 = sub_1000BB200();
          uint64_t v494 = v493;
          sub_1000184DC(v491, &qword_1000ED728);
          v495 = v1068;
          *(void *)(v490 + 56) = &type metadata for String;
          *(void *)(v490 + 64) = v495;
          *(void *)(v490 + 32) = v492;
          *(void *)(v490 + 40) = v494;
          uint64_t v496 = v1083;
          sub_1000B86E0();
          uint64_t v497 = (uint64_t)v1084;
          sub_1000BB5C0();
          ((void (*)(char *, void))v1082)(v496, v1086);
          ((void (*)(uint64_t, void, uint64_t, char *))v1081)(v497, 0, 1, v1076);
          uint64_t v498 = sub_1000BB200();
          uint64_t v500 = v499;
          sub_1000184DC(v497, &qword_1000EC678);
          *(void *)(v490 + 96) = &type metadata for String;
          *(void *)(v490 + 104) = v495;
          *(void *)(v490 + 72) = v498;
          *(void *)(v490 + 80) = v500;
          sub_1000BBBE0();
          sub_1000B8770();

          swift_bridgeObjectRelease();
          uint64_t v501 = v996;
          uint64_t v469 = (void *)v1069;
          sub_1000236F8(v996);
          uint64_t v502 = v995;
          uint64_t v503 = v1057;
          uint64_t v504 = v931;
          sub_10008D01C(v469, v396, v1057, v501, v995);
          if (v504)
          {
            sub_1000180CC(v926, v925);
            sub_100018074(v1079, v1078);
            swift_release();
            sub_1000184DC(v501, &qword_1000ED740);
            sub_10006E388(v415, (uint64_t (*)(void))_s17AssociatedMessageVMa);
            (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v503, v1049);
            goto LABEL_45;
          }
          sub_1000180CC(v926, v925);
          sub_100018074(v1079, v1078);
          swift_release();
          sub_1000184DC(v501, &qword_1000ED740);
          sub_10006E388(v415, (uint64_t (*)(void))_s17AssociatedMessageVMa);
          (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v503, v1049);
          sub_10006E388((uint64_t)v469, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
          (*(void (**)(void *, uint64_t))(v1088 + 8))(v396, v1087);
          uint64_t v480 = *(void (**)(char *, uint64_t, uint64_t))(v1058 + 32);
          uint64_t v481 = v1040;
          v643 = v1040;
          uint64_t v644 = v502;
          goto LABEL_99;
        }
        if (v420 == enum case for TapBack.AssociatedMessageType.tapbackHeart(_:)
          || v420 == enum case for TapBack.AssociatedMessageType.tapbackThumbsUp(_:)
          || v420 == enum case for TapBack.AssociatedMessageType.tapbackThumbsDown(_:)
          || v420 == enum case for TapBack.AssociatedMessageType.tapbackHa(_:)
          || v420 == enum case for TapBack.AssociatedMessageType.tapbackExclamation(_:)
          || v420 == enum case for TapBack.AssociatedMessageType.tapbackQuestionMark(_:))
        {
          goto LABEL_139;
        }
        if (v420 == enum case for TapBack.AssociatedMessageType.tapbackEmoji(_:)) {
          goto LABEL_84;
        }
        if (v420 == enum case for TapBack.AssociatedMessageType.tapbackSticker(_:)) {
          goto LABEL_117;
        }
        v396 = v928;
        uint64_t v415 = v1041;
        if (v420 == enum case for TapBack.AssociatedMessageType.tapbackDeselectedHeart(_:)
          || v420 == enum case for TapBack.AssociatedMessageType.tapbackDeselectedThumbsUp(_:)
          || v420 == enum case for TapBack.AssociatedMessageType.tapbackDeselectedThumbsDown(_:)
          || v420 == enum case for TapBack.AssociatedMessageType.tapbackDeselectedHa(_:)
          || v420 == enum case for TapBack.AssociatedMessageType.tapbackDeselectedExclamation(_:)
          || v420 == enum case for TapBack.AssociatedMessageType.tapbackDeselectedQuestionMark(_:))
        {
LABEL_139:
          swift_bridgeObjectRetain();
          unint64_t v1073 = sub_1000BBD40();
          uint64_t v751 = swift_allocObject();
          *(_OWORD *)(v751 + 16) = xmmword_1000C0D10;
          uint64_t v752 = v998;
          sub_10006E3E8(v415, v998, (uint64_t (*)(void))_s17AssociatedMessageVMa);
          (*(void (**)(uint64_t, void, uint64_t, int *))(v1047 + 56))(v752, 0, 1, v1048);
          uint64_t v753 = sub_1000BB200();
          uint64_t v755 = v754;
          sub_1000184DC(v752, &qword_1000ED728);
          v756 = v1068;
          *(void *)(v751 + 56) = &type metadata for String;
          *(void *)(v751 + 64) = v756;
          *(void *)(v751 + 32) = v753;
          *(void *)(v751 + 40) = v755;
          v757 = v1083;
          sub_1000B86E0();
          uint64_t v758 = (uint64_t)v1084;
          sub_1000BB5C0();
          ((void (*)(char *, void))v1082)(v757, v1086);
          ((void (*)(uint64_t, void, uint64_t, char *))v1081)(v758, 0, 1, v1076);
          uint64_t v759 = sub_1000BB200();
          uint64_t v761 = v760;
          sub_1000184DC(v758, &qword_1000EC678);
          *(void *)(v751 + 96) = &type metadata for String;
          *(void *)(v751 + 104) = v756;
          *(void *)(v751 + 72) = v759;
          *(void *)(v751 + 80) = v761;
          sub_1000BBBE0();
          v762 = (void *)v1073;
          sub_1000B8770();

          swift_bridgeObjectRelease();
          uint64_t v763 = v1069;
          if (!*(void *)(v1069 + 32))
          {
            swift_bridgeObjectRelease();
            sub_10006E2D8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
            swift_allocError();
            sub_1000BB6B0();
            swift_willThrow();
            sub_1000180CC(v926, v925);
            sub_100018074(v1079, v1078);
            swift_release();
            sub_10006E388(v1041, (uint64_t (*)(void))_s17AssociatedMessageVMa);
            (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v1057, v1049);
            uint64_t v479 = v763;
            goto LABEL_51;
          }
          v1084 = *(char **)(v1069 + 24);
          swift_bridgeObjectRetain();
          sub_1000B86E0();
          uint64_t v764 = v1041;
          v417(v980, v1041, v1035);
          uint64_t v765 = v1048[6];
          v1081 = *(void (***)(char *, void, uint64_t))(v764 + v1048[5]);
          v1083 = *(char **)(v764 + v765);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1000238D8(v981);
          uint64_t v766 = v931;
          sub_1000BB5A0();
          uint64_t v931 = v766;
          if (v766)
          {
            sub_1000180CC(v926, v925);
            sub_100018074(v1079, v1078);
            swift_release();
            ((void (*)(char *, void))v1082)(v989, v1086);
          }
          else
          {
            (*(void (**)(char *, void, unint64_t))(v1071 + 104))(v986, enum case for TextMessage.MessageType.tapback(_:), v1070);
            v767 = v1080;
            uint64_t v768 = v1069;
            sub_1000182A0(v1069 + v1080[18], v975, &qword_1000EC678);
            v769 = (char **)(v768 + v767[31]);
            v770 = *v769;
            v771 = v769[1];
            v772 = (void *)(v768 + v767[32]);
            v774 = (void (**)(char *, void, uint64_t))*v772;
            uint64_t v773 = v772[1];
            v1081 = v774;
            uint64_t v1085 = v773;
            *(void *)&long long v1086 = v771;
            v775 = (char **)(v768 + v767[33]);
            v777 = *v775;
            v776 = v775[1];
            v1076 = v777;
            v1077 = v770;
            v1084 = v776;
            uint64_t v778 = v767[24];
            v779 = (char **)(v768 + v767[23]);
            v781 = *v779;
            v780 = v779[1];
            v1074 = v781;
            v1083 = v780;
            v782 = *(void **)(v768 + v778 + 8);
            unint64_t v1073 = *(void *)(v768 + v778);
            v1082 = v782;
            uint64_t v783 = v767[22];
            uint64_t v784 = v768 + v767[21];
            *(void *)&long long v1072 = *(void *)v784;
            LODWORD(v1071) = *(unsigned __int8 *)(v784 + 8);
            unint64_t v785 = *(void *)(v768 + v783 + 8);
            if (v785)
            {
              uint64_t v786 = *(void *)(v768 + v783);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unint64_t v1070 = sub_100084288(v786, v785);
              int v788 = v787 & 1;
            }
            else
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unint64_t v1070 = 0;
              int v788 = 1;
            }
            LODWORD(v1068) = v788;
            v807 = v1080;
            uint64_t v808 = v1069;
            v809 = (char **)(v1069 + v1080[25]);
            v1067 = *v809;
            LODWORD(v1066) = *((unsigned __int8 *)v809 + 8);
            sub_1000236F8(v976);
            uint64_t v810 = v807[46];
            v811 = (char **)(v808 + v807[45]);
            v812 = v811[1];
            v1065 = *v811;
            v1061 = v812;
            v813 = *(char **)(v808 + v810 + 8);
            v1064 = *(char **)(v808 + v810);
            v1059 = v813;
            uint64_t v814 = v807[48];
            v815 = (char **)(v808 + v807[47]);
            uint64_t v816 = (uint64_t)v815[1];
            v1063 = *v815;
            v1053 = (void **)v816;
            uint64_t v817 = *(void *)(v808 + v814 + 8);
            v1062 = *(char **)(v808 + v814);
            uint64_t v1052 = v817;
            uint64_t v818 = v807[50];
            LODWORD(v1060) = *(unsigned __int8 *)(v808 + v807[49]);
            uint64_t v1054 = *(void *)(v808 + v818);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_10007B260(v963);
            v1048 = *(int **)(v808 + v807[44]);
            LODWORD(v1051) = *(unsigned __int8 *)(v808 + 97);
            swift_bridgeObjectRetain();
            sub_1000B8F20();
            sub_1000182A0(v808 + v807[20], v965, &qword_1000EC790);
            swift_bridgeObjectRetain();
            uint64_t v819 = v931;
            sub_1000B8F40();
            if (!v819)
            {
              sub_1000180CC(v926, v925);
              sub_100018074(v1079, v1078);
              swift_release();
              sub_10006E388(v1041, (uint64_t (*)(void))_s17AssociatedMessageVMa);
              (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v1057, v1049);
              sub_10006E388(v1069, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
              (*(void (**)(void *, uint64_t))(v1088 + 8))(v928, v1087);
              uint64_t v480 = *(void (**)(char *, uint64_t, uint64_t))(v1058 + 32);
              uint64_t v481 = v1040;
              v643 = v1040;
              v750 = (uint64_t *)&v1000;
              goto LABEL_176;
            }
            sub_1000180CC(v926, v925);
            sub_100018074(v1079, v1078);
            swift_release();
          }
          goto LABEL_154;
        }
        if (v420 == enum case for TapBack.AssociatedMessageType.tapbackDeselectedEmoji(_:))
        {
LABEL_84:
          swift_bridgeObjectRetain();
          v582 = (void *)sub_1000BBD40();
          uint64_t v583 = swift_allocObject();
          *(_OWORD *)(v583 + 16) = v1072;
          v584 = v1083;
          sub_1000B86E0();
          uint64_t v585 = (uint64_t)v1084;
          sub_1000BB5C0();
          ((void (*)(char *, void))v1082)(v584, v1086);
          ((void (*)(uint64_t, void, uint64_t, char *))v1081)(v585, 0, 1, v1076);
          uint64_t v586 = sub_1000BB200();
          uint64_t v588 = v587;
          sub_1000184DC(v585, &qword_1000EC678);
          v589 = v1068;
          *(void *)(v583 + 56) = &type metadata for String;
          *(void *)(v583 + 64) = v589;
          *(void *)(v583 + 32) = v586;
          *(void *)(v583 + 40) = v588;
          sub_1000BBBE0();
          sub_1000B8770();

          swift_bridgeObjectRelease();
          if (*(void *)(v1069 + 32))
          {
            v590 = (char **)(v1041 + v1048[8]);
            if (v590[1])
            {
              v591 = *v590;
              v1083 = *(char **)(v1069 + 24);
              v1084 = v591;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1000BB580();
              v592 = v970;
              sub_1000B8FA0();
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v971 + 48))(v592, 1, v972) == 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v593 = &qword_1000ED718;
                v594 = &v1001;
LABEL_120:
                sub_1000184DC(*(v594 - 32), v593);
LABEL_122:
                sub_10006E2D8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
                swift_allocError();
                sub_1000BB6B0();
                swift_willThrow();
                sub_1000180CC(v926, v925);
                sub_100018074(v1079, v1078);
                swift_release();
                sub_10006E388(v1041, (uint64_t (*)(void))_s17AssociatedMessageVMa);
                goto LABEL_123;
              }
              uint64_t v802 = v971;
              v803 = v961;
              uint64_t v804 = v972;
              (*(void (**)(char *, char *, uint64_t))(v971 + 32))(v961, v970, v972);
              sub_1000B86E0();
              (*(void (**)(char *, char *, uint64_t))(v802 + 16))(v952, v803, v804);
              v805 = *(char **)(v1041 + v1048[5]);
              v1081 = *(void (***)(char *, void, uint64_t))(v1041 + v1048[6]);
              v1076 = *(char **)(v1041 + v1048[7]);
              v1077 = v805;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1000238D8(v951);
              uint64_t v806 = v931;
              sub_1000B8FC0();
              uint64_t v931 = v806;
              if (v806)
              {
                sub_1000180CC(v926, v925);
                sub_100018074(v1079, v1078);
                swift_release();
                ((void (*)(char *, void))v1082)(v960, v1086);
                (*(void (**)(char *, uint64_t))(v971 + 8))(v961, v972);
              }
              else
              {
                (*(void (**)(char *, void, unint64_t))(v1071 + 104))(v957, enum case for TextMessage.MessageType.emojiTapback(_:), v1070);
                v843 = v1080;
                uint64_t v844 = v1069;
                sub_1000182A0(v1069 + v1080[18], v943, &qword_1000EC678);
                v845 = (char **)(v844 + v843[31]);
                v846 = *v845;
                v847 = v845[1];
                v848 = (void *)(v844 + v843[32]);
                v850 = (void (**)(char *, void, uint64_t))*v848;
                uint64_t v849 = v848[1];
                v1081 = v850;
                uint64_t v1085 = v849;
                *(void *)&long long v1086 = v847;
                v851 = (char **)(v844 + v843[33]);
                v853 = *v851;
                v852 = v851[1];
                v1076 = v853;
                v1077 = v846;
                v1084 = v852;
                uint64_t v854 = v843[24];
                v855 = (char **)(v844 + v843[23]);
                v857 = *v855;
                v856 = v855[1];
                v1074 = v857;
                v1083 = v856;
                v858 = *(void **)(v844 + v854 + 8);
                unint64_t v1073 = *(void *)(v844 + v854);
                v1082 = v858;
                uint64_t v859 = v843[22];
                uint64_t v860 = v844 + v843[21];
                *(void *)&long long v1072 = *(void *)v860;
                LODWORD(v1071) = *(unsigned __int8 *)(v860 + 8);
                unint64_t v861 = *(void *)(v844 + v859 + 8);
                if (v861)
                {
                  uint64_t v862 = *(void *)(v844 + v859);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v1051 = (char *)sub_100084288(v862, v861);
                  int v864 = v863 & 1;
                }
                else
                {
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v1051 = 0;
                  int v864 = 1;
                }
                LODWORD(v1048) = v864;
                v898 = v1080;
                uint64_t v899 = v1069;
                uint64_t v900 = v1069 + v1080[25];
                unint64_t v1070 = *(void *)v900;
                LODWORD(v1068) = *(unsigned __int8 *)(v900 + 8);
                sub_1000236F8(v944);
                uint64_t v901 = v898[46];
                v902 = (char **)(v899 + v898[45]);
                v903 = v902[1];
                v1067 = *v902;
                v1063 = v903;
                v904 = *(char **)(v899 + v901 + 8);
                v1066 = *(char **)(v899 + v901);
                v1061 = v904;
                uint64_t v905 = v898[48];
                v906 = (char **)(v899 + v898[47]);
                v907 = v906[1];
                v1065 = *v906;
                v1059 = v907;
                uint64_t v908 = *(void *)(v899 + v905 + 8);
                v1064 = *(char **)(v899 + v905);
                uint64_t v1054 = v908;
                uint64_t v909 = v898[50];
                LODWORD(v1062) = *(unsigned __int8 *)(v899 + v898[49]);
                v1060 = *(char **)(v899 + v909);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_10007B260(v936);
                uint64_t v1052 = *(void *)(v899 + v898[44]);
                LODWORD(v1053) = *(unsigned __int8 *)(v899 + 97);
                swift_bridgeObjectRetain();
                sub_1000B8F20();
                sub_1000182A0(v899 + v898[20], v938, &qword_1000EC790);
                swift_bridgeObjectRetain();
                uint64_t v910 = v931;
                sub_1000B8F40();
                if (!v910)
                {
                  sub_1000180CC(v926, v925);
                  sub_100018074(v1079, v1078);
                  swift_release();
                  (*(void (**)(char *, uint64_t))(v971 + 8))(v961, v972);
                  sub_10006E388(v1041, (uint64_t (*)(void))_s17AssociatedMessageVMa);
                  (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v1057, v1049);
                  sub_10006E388(v1069, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
                  (*(void (**)(void *, uint64_t))(v1088 + 8))(v928, v1087);
                  uint64_t v480 = *(void (**)(char *, uint64_t, uint64_t))(v1058 + 32);
                  uint64_t v481 = v1040;
                  v643 = v1040;
                  v750 = &v972;
                  goto LABEL_176;
                }
                sub_1000180CC(v926, v925);
                sub_100018074(v1079, v1078);
                swift_release();
                (*(void (**)(char *, uint64_t))(v971 + 8))(v961, v972);
              }
              goto LABEL_154;
            }
          }
        }
        else
        {
          if (v420 != enum case for TapBack.AssociatedMessageType.tapbackDeselectedSticker(_:))
          {
            sub_10006E2D8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
            swift_allocError();
            sub_1000BB6B0();
            swift_willThrow();
            sub_1000180CC(v926, v925);
            sub_100018074(v1079, v1078);
            swift_release();
            sub_10006E388(v1041, (uint64_t (*)(void))_s17AssociatedMessageVMa);
            (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v1057, v1049);
            sub_10006E388(v1069, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
            (*(void (**)(void *, uint64_t))(v1088 + 8))(v928, v1087);
            return (*(uint64_t (**)(char *, uint64_t))(v1034 + 8))(v1033, v1035);
          }
LABEL_117:
          swift_bridgeObjectRetain();
          v728 = (void *)sub_1000BBD40();
          uint64_t v729 = swift_allocObject();
          *(_OWORD *)(v729 + 16) = v1072;
          v730 = v1083;
          sub_1000B86E0();
          uint64_t v731 = (uint64_t)v1084;
          sub_1000BB5C0();
          ((void (*)(char *, void))v1082)(v730, v1086);
          ((void (*)(uint64_t, void, uint64_t, char *))v1081)(v731, 0, 1, v1076);
          uint64_t v732 = sub_1000BB200();
          uint64_t v734 = v733;
          sub_1000184DC(v731, &qword_1000EC678);
          v735 = v1068;
          *(void *)(v729 + 56) = &type metadata for String;
          *(void *)(v729 + 64) = v735;
          *(void *)(v729 + 32) = v732;
          *(void *)(v729 + 40) = v734;
          sub_1000BBBE0();
          sub_1000B8770();

          swift_bridgeObjectRelease();
          if (*(void *)(v1069 + 32))
          {
            v1084 = *(char **)(v1069 + 24);
            swift_bridgeObjectRetain();
            sub_1000BB580();
            v736 = v966;
            sub_1000B9E40();
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v967 + 48))(v736, 1, v968) == 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v593 = &qword_1000ED710;
              v594 = (uint64_t *)&v997;
              goto LABEL_120;
            }
            uint64_t v838 = v967;
            v839 = v955;
            uint64_t v840 = v968;
            (*(void (**)(char *, char *, uint64_t))(v967 + 32))(v955, v966, v968);
            sub_1000B86E0();
            (*(void (**)(char *, char *, uint64_t))(v838 + 16))(v947, v839, v840);
            uint64_t v841 = v1048[6];
            v1081 = *(void (***)(char *, void, uint64_t))(v1041 + v1048[5]);
            v1083 = *(char **)(v1041 + v841);
            v1077 = *(char **)(v1041 + v1048[7]);
            (*(void (**)(char *, uint64_t, uint64_t))(v1050 + 16))(v945, v1057, v1049);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1000238D8(v946);
            uint64_t v842 = v931;
            sub_1000B9E60();
            uint64_t v931 = v842;
            if (v842)
            {
              sub_1000180CC(v926, v925);
              sub_100018074(v1079, v1078);
              swift_release();
              ((void (*)(char *, void))v1082)(v956, v1086);
              (*(void (**)(char *, uint64_t))(v967 + 8))(v955, v968);
            }
            else
            {
              (*(void (**)(char *, void, unint64_t))(v1071 + 104))(v954, enum case for TextMessage.MessageType.stickerTapback(_:), v1070);
              v879 = v1080;
              uint64_t v880 = v1069;
              sub_1000182A0(v1069 + v1080[18], v941, &qword_1000EC678);
              v881 = (uint64_t *)(v880 + v879[31]);
              uint64_t v882 = *v881;
              v883 = (char *)v881[1];
              v884 = (uint64_t *)(v880 + v879[32]);
              uint64_t v885 = *v884;
              uint64_t v886 = v884[1];
              uint64_t v1085 = v882;
              *(void *)&long long v1086 = v885;
              v887 = (char **)(v880 + v879[33]);
              v888 = *v887;
              unint64_t v889 = (unint64_t)v887[1];
              uint64_t v890 = v879[24];
              v891 = (char **)(v880 + v879[23]);
              v892 = v891[1];
              v1083 = *v891;
              v1084 = v888;
              v893 = *(char **)(v880 + v890 + 8);
              v1082 = *(void **)(v880 + v890);
              uint64_t v894 = v879[22];
              uint64_t v895 = v880 + v879[21];
              v1081 = *(void (***)(char *, void, uint64_t))v895;
              LODWORD(v1077) = *(unsigned __int8 *)(v895 + 8);
              if (*(void *)(v880 + v894 + 8))
              {
                uint64_t v896 = *(void *)(v880 + v894);
                unint64_t v897 = *(void *)(v880 + v894 + 8);
              }
              else
              {
                unint64_t v897 = 0xE100000000000000;
                uint64_t v896 = 56;
              }
              v1074 = v893;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1076 = v883;
              swift_bridgeObjectRetain();
              *(void *)&long long v1075 = v886;
              swift_bridgeObjectRetain();
              unint64_t v1073 = v889;
              swift_bridgeObjectRetain();
              *(void *)&long long v1072 = v892;
              swift_bridgeObjectRetain();
              unint64_t v1071 = sub_100084288(v896, v897);
              LODWORD(v1070) = v911 & 1;
              v912 = v1080;
              uint64_t v913 = v1069;
              v914 = (char **)(v1069 + v1080[25]);
              v1068 = *v914;
              LODWORD(v1067) = *((unsigned __int8 *)v914 + 8);
              sub_1000236F8(v942);
              uint64_t v915 = v912[46];
              v916 = (char **)(v913 + v912[45]);
              v917 = v916[1];
              v1066 = *v916;
              v1061 = v917;
              v918 = *(char **)(v913 + v915 + 8);
              v1065 = *(char **)(v913 + v915);
              v1060 = v918;
              uint64_t v919 = v912[48];
              v920 = (char **)(v913 + v912[47]);
              uint64_t v921 = (uint64_t)v920[1];
              v1064 = *v920;
              uint64_t v1054 = v921;
              uint64_t v922 = *(void *)(v913 + v919 + 8);
              v1063 = *(char **)(v913 + v919);
              v1053 = (void **)v922;
              uint64_t v923 = v912[50];
              LODWORD(v1062) = *(unsigned __int8 *)(v913 + v912[49]);
              v1059 = *(char **)(v913 + v923);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_10007B260(v933);
              v1051 = *(char **)(v913 + v912[44]);
              LODWORD(v1052) = *(unsigned __int8 *)(v913 + 97);
              swift_bridgeObjectRetain();
              sub_1000B8F20();
              sub_1000182A0(v913 + v912[20], v935, &qword_1000EC790);
              swift_bridgeObjectRetain();
              uint64_t v924 = v931;
              sub_1000B8F40();
              if (!v924)
              {
                sub_1000180CC(v926, v925);
                sub_100018074(v1079, v1078);
                swift_release();
                (*(void (**)(char *, uint64_t))(v967 + 8))(v955, v968);
                sub_10006E388(v1041, (uint64_t (*)(void))_s17AssociatedMessageVMa);
                (*(void (**)(uint64_t, uint64_t))(v1050 + 8))(v1057, v1049);
                sub_10006E388(v1069, (uint64_t (*)(void))type metadata accessor for MessageDictionary);
                (*(void (**)(void *, uint64_t))(v1088 + 8))(v928, v1087);
                uint64_t v480 = *(void (**)(char *, uint64_t, uint64_t))(v1058 + 32);
                uint64_t v481 = v1040;
                v643 = v1040;
                v750 = &v971;
                goto LABEL_176;
              }
              sub_1000180CC(v926, v925);
              sub_100018074(v1079, v1078);
              swift_release();
              (*(void (**)(char *, uint64_t))(v967 + 8))(v955, v968);
            }
LABEL_154:
            sub_10006E388(v1041, (uint64_t (*)(void))_s17AssociatedMessageVMa);
            goto LABEL_155;
          }
        }
        swift_bridgeObjectRelease();
        goto LABEL_122;
    }
  }
  v1080 = (int *)sub_100018190();
  v273 = (void *)sub_1000BBD40();
  v1076 = (char *)sub_10001295C(&qword_1000EC5C8);
  uint64_t v274 = swift_allocObject();
  long long v1075 = xmmword_1000BF8A0;
  *(_OWORD *)(v274 + 16) = xmmword_1000BF8A0;
  Swift::Int v275 = v1083;
  sub_1000B86E0();
  v276 = v267;
  uint64_t v277 = (uint64_t)v1084;
  sub_1000BB5C0();
  uint64_t v1085 = *(void *)(v1085 + 8);
  ((void (*)(char *, void))v1085)(v275, v1086);
  uint64_t v278 = sub_1000B8380();
  uint64_t v279 = *(void *)(v278 - 8);
  v1081 = *(void (***)(char *, void, uint64_t))(v279 + 56);
  v1082 = (void *)(v279 + 56);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v1081)(v277, 0, 1, v278);
  uint64_t v280 = sub_1000BB200();
  uint64_t v282 = v281;
  sub_1000184DC(v277, &qword_1000EC678);
  *(void *)(v274 + 56) = &type metadata for String;
  v1074 = (char *)sub_10001824C();
  *(void *)(v274 + 64) = v1074;
  *(void *)(v274 + 32) = v280;
  *(void *)(v274 + 40) = v282;
  sub_1000BBBE0();
  sub_1000B8770();

  Swift::Int v283 = v276;
  swift_bridgeObjectRelease();
  if (sub_1000B86F0())
  {
    v284 = (void *)sub_1000BBD40();
    uint64_t v285 = swift_allocObject();
    *(_OWORD *)(v285 + 16) = v1075;
    sub_1000B86E0();
    sub_1000BB5C0();
    ((void (*)(char *, void))v1085)(v275, v1086);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v1081)(v277, 0, 1, v278);
    uint64_t v286 = sub_1000BB200();
    uint64_t v288 = v287;
    sub_1000184DC(v277, &qword_1000EC678);
    v289 = v1074;
    *(void *)(v285 + 56) = &type metadata for String;
    *(void *)(v285 + 64) = v289;
    *(void *)(v285 + 32) = v286;
    *(void *)(v285 + 40) = v288;
    sub_1000BBBE0();
    sub_1000B8770();

    swift_bridgeObjectRelease();
    sub_10006E284();
    swift_allocError();
    swift_willThrow();
    swift_release();
    uint64_t v290 = *(uint64_t (**)(void *, uint64_t))(v1088 + 8);
    v291 = v283;
    return v290(v291, v1087);
  }
  v303 = (void (*)(char *, uint64_t))v1085;
  uint64_t v304 = v1086;
  v305 = v1077;
  sub_1000B86E0();
  uint64_t v306 = sub_1000B9FE0();
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v306 - 8) + 56))(v1078, 1, 1, v306);
  uint64_t v307 = v1079;
  uint64_t v308 = v931;
  sub_1000B9FF0();
  if (v308)
  {
    swift_release();
    v303(v305, v304);
    return (*(uint64_t (**)(void *, uint64_t))(v1088 + 8))(v283, v1087);
  }
  else
  {
    v928 = v283;
    (*(void (**)(uint64_t, void, unint64_t))(v1071 + 104))(v307, enum case for TextMessage.MessageType.typingIndicator(_:), v1070);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v1081)(v1063, 1, 1, v278);
    uint64_t v350 = sub_1000B8F00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v350 - 8) + 56))(v1065, 1, 1, v350);
    uint64_t v351 = sub_1000BAA70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v351 - 8) + 56))(v1066, 1, 1, v351);
    uint64_t v352 = sub_1000B8F30();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v352 - 8) + 56))(v1067, 1, 1, v352);
    uint64_t v353 = sub_1000B8340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v353 - 8) + 56))(v1068, 1, 1, v353);
    v354 = v1064;
    sub_1000B8F40();
    (*(void (**)(void *, uint64_t))(v1088 + 8))(v928, v1087);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1058 + 32))(v1056, v354, v1055);
  }
}

uint64_t sub_10006E220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1000653FC(a1, a2, a3);
}

uint64_t _s17AssociatedMessageVMa()
{
  uint64_t result = qword_1000ED7C0;
  if (!qword_1000ED7C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_10006E284()
{
  unint64_t result = qword_1000ED750;
  if (!qword_1000ED750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED750);
  }
  return result;
}

uint64_t sub_10006E2D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10006E320(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006E388(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10006E3E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for TextMessageUnpacker.EncryptedMessageMissingData()
{
  return &type metadata for TextMessageUnpacker.EncryptedMessageMissingData;
}

uint64_t *sub_10006E460(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000BB590();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
    uint64_t v17 = (uint64_t *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10006E574(uint64_t a1)
{
  uint64_t v2 = sub_1000BB590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10006E60C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000BB590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10006E6D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000BB590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10006E7E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000BB590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_10006E878(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000BB590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  void *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10006E944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006E958);
}

uint64_t sub_10006E958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000BB590();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10006EA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006EA30);
}

uint64_t sub_10006EA30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000BB590();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10006EAF0()
{
  uint64_t result = sub_1000BB590();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t MessageEditingDictionary.encode(to:)(void *a1)
{
  uint64_t v3 = sub_10001295C(&qword_1000ED808);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014C68(a1, a1[3]);
  sub_10006ED7C();
  sub_1000BC280();
  v8[15] = 0;
  sub_1000BC0A0();
  if (!v1)
  {
    v8[14] = 1;
    sub_1000BC0D0();
    v8[13] = 2;
    sub_1000BC0A0();
    v8[12] = 3;
    sub_1000BC0D0();
    v8[11] = 4;
    sub_1000BC0B0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_10006ED7C()
{
  unint64_t result = qword_1000ED810;
  if (!qword_1000ED810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED810);
  }
  return result;
}

double MessageEditingDictionary.init(from:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10006F36C(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 10);
    *(_OWORD *)((char *)a2 + 42) = *(_OWORD *)((char *)v7 + 10);
  }
  return result;
}

uint64_t sub_10006EE1C(void *a1)
{
  return MessageEditingDictionary.encode(to:)(a1);
}

MessagesBlastDoorService::MessageEditingDictionary::CodingKeys_optional __swiftcall MessageEditingDictionary.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  object = stringValue._object;
  v5._countAndFlagsBits = stringValue._countAndFlagsBits;
  v2._rawValue = &off_1000E1620;
  v5._object = object;
  unint64_t v3 = sub_1000BBFA0(v2, v5);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return (MessagesBlastDoorService::MessageEditingDictionary::CodingKeys_optional)5;
  }
  else {
    return (MessagesBlastDoorService::MessageEditingDictionary::CodingKeys_optional)v3;
  }
}

uint64_t MessageEditingDictionary.CodingKeys.rawValue.getter(char a1)
{
  uint64_t result = 6778213;
  switch(a1)
  {
    case 1:
      uint64_t result = 6910053;
      break;
    case 2:
      uint64_t result = 6451301;
      break;
    case 3:
      uint64_t result = 29797;
      break;
    case 4:
      uint64_t result = 29554;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t MessageEditingDictionary.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 6778213;
  switch(a1)
  {
    case 1:
      uint64_t result = 6910053;
      break;
    case 2:
      uint64_t result = 6451301;
      break;
    case 3:
      uint64_t result = 29797;
      break;
    case 4:
      uint64_t result = 29554;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10006EF74(unsigned __int8 *a1, char *a2)
{
  return sub_10004E68C(*a1, *a2);
}

Swift::Int sub_10006EF80()
{
  return sub_1000BC250();
}

uint64_t sub_10006F040()
{
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10006F0E8()
{
  return sub_1000BC250();
}

MessagesBlastDoorService::MessageEditingDictionary::CodingKeys_optional sub_10006F1A4@<W0>(Swift::String *a1@<X0>, MessagesBlastDoorService::MessageEditingDictionary::CodingKeys_optional *a2@<X8>)
{
  result.CMTimeValue value = MessageEditingDictionary.CodingKeys.init(stringValue:)(*a1).value;
  a2->CMTimeValue value = result.value;
  return result;
}

void sub_10006F1D4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 6778213;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 6910053;
      goto LABEL_3;
    case 2:
      *a1 = 6451301;
      a1[1] = 0xE300000000000000;
      break;
    case 3:
      *a1 = 29797;
      a1[1] = 0xE200000000000000;
      break;
    case 4:
      *a1 = 29554;
      a1[1] = 0xE200000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE300000000000000;
      break;
  }
}

uint64_t sub_10006F258()
{
  uint64_t result = 6778213;
  switch(*v0)
  {
    case 1:
      uint64_t result = 6910053;
      break;
    case 2:
      uint64_t result = 6451301;
      break;
    case 3:
      uint64_t result = 29797;
      break;
    case 4:
      uint64_t result = 29554;
      break;
    default:
      return result;
  }
  return result;
}

MessagesBlastDoorService::MessageEditingDictionary::CodingKeys_optional sub_10006F2CC@<W0>(uint64_t a1@<X0>, MessagesBlastDoorService::MessageEditingDictionary::CodingKeys_optional *a2@<X8>)
{
  result.CMTimeValue value = MessageEditingDictionary.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->CMTimeValue value = result.value;
  return result;
}

uint64_t sub_10006F2F4(uint64_t a1)
{
  unint64_t v2 = sub_10006ED7C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10006F330(uint64_t a1)
{
  unint64_t v2 = sub_10006ED7C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10006F36C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000ED830);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_10006ED7C();
  sub_1000BC270();
  if (v2) {
    return sub_100015C54((uint64_t)a1);
  }
  char v30 = 0;
  uint64_t v9 = sub_1000BBFB0();
  uint64_t v11 = v10;
  char v29 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1000BBFE0();
  int v23 = v13;
  uint64_t v24 = v12;
  char v28 = 2;
  uint64_t v22 = sub_1000BBFB0();
  char v27 = 3;
  uint64_t v25 = v14;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1000BBFE0();
  HIDWORD(v20) = v16;
  uint64_t v21 = v15;
  char v26 = 4;
  char v17 = sub_1000BBFC0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100015C54((uint64_t)a1);
  uint64_t v18 = v25;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v24;
  *(unsigned char *)(a2 + 24) = v23 & 1;
  *(void *)(a2 + 32) = v22;
  *(void *)(a2 + 40) = v18;
  *(void *)(a2 + 48) = v21;
  *(unsigned char *)(a2 + 56) = BYTE4(v20) & 1;
  *(unsigned char *)(a2 + 57) = v17;
  return result;
}

unint64_t sub_10006F670()
{
  unint64_t result = qword_1000ED818;
  if (!qword_1000ED818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED818);
  }
  return result;
}

unint64_t sub_10006F6C8()
{
  unint64_t result = qword_1000ED820;
  if (!qword_1000ED820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED820);
  }
  return result;
}

unint64_t sub_10006F720()
{
  unint64_t result = qword_1000ED828;
  if (!qword_1000ED828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED828);
  }
  return result;
}

uint64_t destroy for MessageEditingDictionary()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessageEditingDictionary(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessageEditingDictionary(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  return a1;
}

uint64_t assignWithTake for MessageEditingDictionary(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageEditingDictionary(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 58)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageEditingDictionary(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 58) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 58) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageEditingDictionary()
{
  return &type metadata for MessageEditingDictionary;
}

unsigned char *storeEnumTagSinglePayload for MessageEditingDictionary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006FAACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageEditingDictionary.CodingKeys()
{
  return &type metadata for MessageEditingDictionary.CodingKeys;
}

ValueMetadata *type metadata accessor for HandwritingUnpacker()
{
  return &type metadata for HandwritingUnpacker;
}

void sub_10006FAF4(id *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v22 = sub_1000B8DD0();
  uint64_t v8 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [*a1 strokePoints];
  unint64_t v23 = 0;
  sub_10001DAE4(0, &qword_1000ED840);
  sub_1000BBA40();

  unint64_t v12 = v23;
  if (!v23)
  {
    sub_1000BB6C0();
    sub_100017E10();
    uint64_t v5 = swift_allocError();
    goto LABEL_20;
  }
  if (v23 >> 62) {
    goto LABEL_18;
  }
  uint64_t v13 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v13)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    sub_1000BB6C0();
    sub_100017E10();
    uint64_t v5 = swift_allocError();
LABEL_20:
    sub_1000BB6B0();
    swift_willThrow();
LABEL_21:
    *a2 = v5;
    return;
  }
  while (1)
  {
    uint64_t v18 = a3;
    unint64_t v23 = (unint64_t)&_swiftEmptyArrayStorage;
    sub_10007F980(0, v13 & ~(v13 >> 63), 0);
    if (v13 < 0) {
      break;
    }
    uint64_t v19 = a2;
    a2 = 0;
    a3 = (void *)v23;
    uint64_t v20 = v8 + 32;
    unint64_t v21 = v12 & 0xC000000000000001;
    while ((uint64_t *)v13 != a2)
    {
      if (v21) {
        id v14 = (id)sub_1000BBEF0();
      }
      else {
        id v14 = *(id *)(v12 + 8 * (void)a2 + 32);
      }
      uint64_t v15 = v14;
      [v14 location];
      [v15 force];
      [v15 velocity];
      sub_1000B8DC0();
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_release();

        a2 = v19;
        goto LABEL_21;
      }

      unint64_t v23 = (unint64_t)a3;
      unint64_t v17 = a3[2];
      unint64_t v16 = a3[3];
      if (v17 >= v16 >> 1)
      {
        sub_10007F980(v16 > 1, v17 + 1, 1);
        a3 = (void *)v23;
      }
      a2 = (uint64_t *)((char *)a2 + 1);
      a3[2] = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))((unint64_t)a3+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v17, v10, v22);
      if ((uint64_t *)v13 == a2)
      {
        swift_bridgeObjectRelease();
        sub_1000B8DA0();
        return;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1000BBF40();
    swift_bridgeObjectRelease();
    if (!v13) {
      goto LABEL_19;
    }
  }
  __break(1u);
}

void sub_10006FF10(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v59 = a1;
  uint64_t v61 = a3;
  id v60 = a2;
  uint64_t v50 = a4;
  uint64_t v4 = sub_1000B9430();
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v53 = v4;
  __chkstk_darwin(v4);
  uint64_t v51 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000BA950();
  __chkstk_darwin(v6 - 8);
  uint64_t v54 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000B8340();
  __chkstk_darwin(v8 - 8);
  uint64_t v56 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000B8380();
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000B8E10();
  uint64_t v55 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000B8E00();
  uint64_t v57 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  unint64_t v21 = (char *)v47 - v20;
  sub_1000BBBB0();
  sub_10001DAE4(0, (unint64_t *)&qword_1000EC5B8);
  uint64_t v22 = (void *)sub_1000BBD30();
  sub_1000B8780();

  if (*((void *)v61 + 2))
  {
    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();
    return;
  }
  unint64_t v23 = v58;
  uint64_t v48 = v19;
  v47[1] = v12;
  uint64_t v61 = v21;
  uint64_t v49 = v15;
  v47[0] = v13;
  uint64_t v24 = v57;
  uint64_t v25 = sub_1000B82C0();
  unint64_t v27 = v26;
  char v28 = self;
  Class isa = sub_1000B82B0().super.isa;
  id v30 = [v28 decodeHandwritingFromData:isa];

  if (!v30)
  {
    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();
LABEL_9:
    uint64_t v35 = v25;
    goto LABEL_10;
  }
  id v31 = [v30 drawing];
  if (!v31)
  {
    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();

    goto LABEL_9;
  }
  uint64_t v32 = v31;
  uint64_t v59 = v25;
  id v60 = v30;
  id v33 = [self decodeDrawingStrokes:v31];
  sub_10001DAE4(0, &qword_1000ED838);
  unint64_t v34 = sub_1000BBA50();

  sub_100070830(v34);
  if (v23)
  {

    swift_bridgeObjectRelease();
    uint64_t v35 = v59;
LABEL_10:
    sub_100018074(v35, v27);
    return;
  }
  swift_bridgeObjectRelease();
  [v32 canvasBounds];
  [v32 strokesFrame];
  [v32 totalPoints];
  uint64_t v36 = v61;
  sub_1000B8DF0();
  uint64_t v58 = v32;
  id v37 = v60;
  id v38 = [v60 uuid];
  sub_1000B8370();

  id v39 = [v37 creationDate];
  sub_1000B8330();

  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v48, v36, v16);
  sub_1000B8DE0();
  unint64_t v40 = v27;
  sub_1000BBBB0();
  uint64_t v41 = (void *)sub_1000BBD30();
  sub_1000B8780();

  sub_1000BA900();
  uint64_t v42 = v55;
  uint64_t v43 = v51;
  uint64_t v44 = v49;
  uint64_t v45 = v47[0];
  (*(void (**)(char *, char *, void))(v55 + 16))(v51, v49, v47[0]);
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v43, enum case for BalloonPlugin.Payload.handwriting(_:), v53);
  sub_1000BAE60();
  uint64_t v46 = v58;
  sub_100018074(v59, v40);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v45);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v61, v16);
}

void sub_100070818(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
}

uint64_t sub_100070830(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v17 = sub_1000B8DB0();
  uint64_t v4 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v6 = (void *)((char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v8 = (unint64_t *)&_swiftEmptyArrayStorage;
    if (!v7) {
      return (uint64_t)v8;
    }
    uint64_t v20 = (unint64_t *)&_swiftEmptyArrayStorage;
    uint64_t result = sub_10007F7F8(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0) {
      break;
    }
    uint64_t v10 = 0;
    uint64_t v8 = v20;
    v15[1] = v4 + 32;
    unint64_t v16 = a1 & 0xC000000000000001;
    while (v7 != v10)
    {
      if (v16) {
        id v11 = (id)sub_1000BBEF0();
      }
      else {
        id v11 = *(id *)(a1 + 8 * v10 + 32);
      }
      unint64_t v12 = v11;
      id v19 = v11;
      sub_10006FAF4(&v19, &v18, v6);
      if (v2)
      {
        swift_release();

        return (uint64_t)v8;
      }
      uint64_t v2 = 0;

      uint64_t v20 = v8;
      unint64_t v14 = v8[2];
      unint64_t v13 = v8[3];
      if (v14 >= v13 >> 1)
      {
        sub_10007F7F8(v13 > 1, v14 + 1, 1);
        uint64_t v8 = v20;
      }
      ++v10;
      _OWORD v8[2] = v14 + 1;
      (*(void (**)(unint64_t, void *, uint64_t))(v4 + 32))((unint64_t)v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v14, v6, v17);
      if (v7 == v10) {
        return (uint64_t)v8;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1000BBF40();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t PosterArchive.init(posterArchiveData:workingDirectory:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v50 = a4;
  uint64_t v7 = sub_1000BB3E0();
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  __chkstk_darwin(v7);
  uint64_t v47 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000BB3B0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000B87C0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BB310();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v52 = a3;
  v17(v12, a3, v9);
  uint64_t v53 = a1;
  uint64_t v18 = a1;
  unint64_t v19 = a2;
  sub_100017F4C(v18, a2);
  uint64_t v20 = sub_1000B87B0();
  int v21 = sub_1000BBBE0();
  BOOL v22 = os_log_type_enabled(v20, (os_log_type_t)v21);
  uint64_t v51 = v10;
  if (v22)
  {
    int v42 = v21;
    os_log_t v43 = v20;
    uint64_t v44 = v14;
    uint64_t v45 = v13;
    uint64_t v46 = v9;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v55 = v24;
    *(_DWORD *)uint64_t v23 = 134218242;
    uint64_t v25 = 0;
    switch(v19 >> 62)
    {
      case 1uLL:
        LODWORD(v25) = HIDWORD(v53) - v53;
        if (__OFSUB__(HIDWORD(v53), v53))
        {
          __break(1u);
LABEL_11:
          __break(1u);
          JUMPOUT(0x100070F44);
        }
        uint64_t v25 = (int)v25;
LABEL_8:
        uint64_t v54 = v25;
        v41[1] = v24;
        sub_1000BBE50();
        unint64_t v32 = v19;
        sub_100018074(v53, v19);
        *(_WORD *)(v23 + 12) = 2080;
        id v33 = v47;
        sub_1000BB3A0();
        uint64_t v34 = sub_1000BB3C0();
        unint64_t v36 = v35;
        (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v49);
        uint64_t v54 = sub_10007ABB4(v34, v36, &v55);
        sub_1000BBE50();
        unint64_t v19 = v32;
        swift_bridgeObjectRelease();
        unint64_t v26 = *(void (**)(char *, uint64_t))(v51 + 8);
        id v37 = v12;
        uint64_t v28 = v46;
        v26(v37, v46);
        os_log_t v38 = v43;
        _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v42, "Creating poster archive with data: (%ld bytes) using working directory: %s", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v27 = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v16, v45);
        break;
      case 2uLL:
        uint64_t v30 = *(void *)(v53 + 16);
        uint64_t v29 = *(void *)(v53 + 24);
        BOOL v31 = __OFSUB__(v29, v30);
        uint64_t v25 = v29 - v30;
        if (!v31) {
          goto LABEL_8;
        }
        goto LABEL_11;
      case 3uLL:
        goto LABEL_8;
      default:
        uint64_t v25 = BYTE6(v19);
        goto LABEL_8;
    }
  }
  else
  {
    sub_100018074(v53, v19);
    unint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
    v26(v12, v9);

    uint64_t v27 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v28 = v9;
  }
  __chkstk_darwin(v27);
  uint64_t v39 = v53;
  v41[-4] = v52;
  v41[-3] = v39;
  v41[-2] = v19;
  sub_1000B9C90();
  sub_1000BB380();
  sub_100018074(v53, v19);
  return ((uint64_t (*)(uint64_t, uint64_t))v26)(v52, v28);
}

void sub_100070F54(uint64_t a1@<X8>)
{
  v33[1] = a1;
  uint64_t v1 = sub_1000B8380();
  __chkstk_darwin(v1 - 8);
  v33[0] = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000B9C80();
  __chkstk_darwin(v3 - 8);
  uint64_t v34 = (uint64_t)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000B9C50();
  v33[2] = *(void *)(v5 - 8);
  v33[3] = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000B8240();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000BB3E0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000BAC20();
  __chkstk_darwin(v13);
  (*(void (**)(char *, void))(v15 + 104))((char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for OverridingFileManager.Override.temporaryDirectory(_:));
  sub_1000BB3A0();
  sub_1000BB3D0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v16 = objc_allocWithZone((Class)sub_1000BAC30());
  uint64_t v17 = (void *)sub_1000BAC10();
  uint64_t v18 = self;
  id v19 = [v18 archiverWithFileManager:v17];
  Class isa = sub_1000B82B0().super.isa;
  id v36 = 0;
  id v21 = [v19 unarchiveConfigurationFromData:isa error:&v36];

  if (v21)
  {
    id v22 = v36;
    id v23 = [v21 _path];
    id v24 = [v18 serverPathFromPath:v23];

    uint64_t v25 = v35;
    unint64_t v26 = (void *)sub_1000992BC(1752457584, (void *)0xE400000000000000, 0xD000000000000065, 0x80000001000CB1C0, 23, (uint64_t)v24);
    if (v25)
    {
    }
    else
    {
      id v28 = v26;

      id v29 = [v28 identity];
      id v30 = v21;
      sub_1000714F0(v30, (uint64_t)v7);
      id v21 = v30;
      id v31 = v29;
      sub_10007199C(v21, v31, v34);
      id v32 = [v31 posterUUID];
      sub_1000B8370();

      [v31 version];
      [v31 supplement];
      sub_1000B9C70();
    }
  }
  else
  {
    id v27 = v36;
    sub_1000B81D0();

    swift_willThrow();
    id v21 = v19;
  }
}

void sub_1000714F0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v39 = sub_1000B9C30();
  uint64_t v4 = *(void *)(v39 - 8);
  uint64_t v5 = __chkstk_darwin(v39);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v37 = (char *)&v35 - v8;
  uint64_t v9 = sub_10001295C(&qword_1000ED8A0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v38 = (uint64_t)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v14 = sub_10001295C(&qword_1000ED8A8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v19 = (char *)&v35 - v18;
  uint64_t v20 = self;
  id v41 = 0;
  id v21 = [v20 loadConfiguredPropertiesFromPosterConfiguration:a1 error:&v41];
  if (!v21)
  {
    unint64_t v26 = a1;
    id v27 = v41;
    sub_1000B81D0();

    swift_willThrow();
    return;
  }
  id v22 = v21;
  id v23 = v41;
  id v24 = [v22 titleStyleConfiguration];
  if (v24)
  {
    id v25 = v24;
    sub_10007435C(v25, (uint64_t)v19);
    if (v2)
    {

      return;
    }
    uint64_t v29 = sub_1000B9BD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v19, 0, 1, v29);
  }
  else
  {
    uint64_t v28 = sub_1000B9BD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v19, 1, 1, v28);
  }
  id v36 = a1;
  id v30 = [v22 renderingConfiguration];
  if (!v30)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, 1, 1, v39);
LABEL_13:
    sub_1000182A0((uint64_t)v19, (uint64_t)v17, &qword_1000ED8A8);
    sub_1000182A0((uint64_t)v13, v38, &qword_1000ED8A0);
    sub_1000B9C40();

    sub_1000184DC((uint64_t)v13, &qword_1000ED8A0);
    uint64_t v32 = (uint64_t)v19;
    goto LABEL_14;
  }
  id v31 = v30;
  [v31 isDepthEffectDisabled];
  [v31 isParallaxEnabled];
  sub_1000B9C20();
  if (!v2)
  {

    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    id v33 = v7;
    uint64_t v34 = v39;
    v35(v37, v33, v39);
    v35(v13, v37, v34);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v34);

    goto LABEL_13;
  }

  uint64_t v32 = (uint64_t)v19;
LABEL_14:
  sub_1000184DC(v32, &qword_1000ED8A8);
}

void sub_10007199C(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v34 = a3;
  uint64_t v35 = sub_1000B9C80();
  uint64_t v37 = *(void *)(v35 - 8);
  uint64_t v4 = __chkstk_darwin(v35);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v29 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = sub_1000B87C0();
  uint64_t v36 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [a2 provider];
  sub_1000BB900();

  uint64_t v16 = sub_1000B9C60();
  uint64_t v17 = v38;
  char v18 = sub_100092468(0x72656469766F7270, (void *)0xEC00000065707954, 0xD000000000000065, 0x80000001000CB1C0, 228, v16);
  if (v17)
  {
  }
  else
  {
    char v19 = v18;
    uint64_t v32 = v6;
    uint64_t v33 = v12;
    id v30 = v9;
    id v31 = v11;
    uint64_t v38 = a2;
    sub_1000BB310();
    uint64_t v20 = sub_1000B87B0();
    os_log_type_t v21 = sub_1000BBBE0();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)id v22 = 136315138;
      uint64_t v29 = v22 + 4;
      LOBYTE(v40) = v19;
      uint64_t v23 = sub_1000BB200();
      uint64_t v40 = sub_10007ABB4(v23, v24, &v41);
      sub_1000BBE50();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Unpacking poster from provider: %s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v33);
    uint64_t v25 = v37;
    unint64_t v26 = v38;
    if (v19)
    {
      if (v19 == 1)
      {
        uint64_t v27 = (uint64_t)v30;
        sub_100077174(v39, (uint64_t)v30);

        uint64_t v28 = (unsigned int *)&enum case for PosterArchive.Provider.memoji(_:);
      }
      else
      {
        uint64_t v27 = (uint64_t)v32;
        sub_100077F10(v39, (uint64_t)v32);

        uint64_t v28 = (unsigned int *)&enum case for PosterArchive.Provider.monogram(_:);
      }
    }
    else
    {
      uint64_t v27 = (uint64_t)v31;
      sub_1000764C4(v39, (uint64_t)v31);

      uint64_t v28 = (unsigned int *)&enum case for PosterArchive.Provider.photos(_:);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v25 + 104))(v27, *v28, v35);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v34, v27, v35);
  }
}

void sub_100071DC0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v141 = a2;
  uint64_t v170 = sub_1000BA5B0();
  uint64_t v171 = *(void *)(v170 - 8);
  uint64_t v4 = __chkstk_darwin(v170);
  uint64_t v136 = (uint64_t)v129 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v137 = (uint64_t)v129 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v138 = (uint64_t)v129 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v139 = (uint64_t)v129 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v140 = (uint64_t)v129 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v142 = (uint64_t)v129 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v143 = (uint64_t)v129 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v144 = (uint64_t)v129 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v145 = (uint64_t)v129 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v146 = (uint64_t)v129 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v147 = (uint64_t)v129 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v148 = (uint64_t)v129 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v149 = (uint64_t)v129 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v150 = (uint64_t)v129 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v151 = (uint64_t)v129 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v152 = (uint64_t)v129 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v153 = (uint64_t)v129 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v154 = (uint64_t)v129 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v155 = (uint64_t)v129 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v156 = (uint64_t)v129 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v157 = (uint64_t)v129 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v158 = (uint64_t)v129 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v159 = (uint64_t)v129 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v160 = (uint64_t)v129 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v161 = (uint64_t)v129 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v162 = (uint64_t)v129 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v163 = (uint64_t)v129 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v164 = (uint64_t)v129 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v165 = (uint64_t)v129 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v166 = (uint64_t)v129 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  uint64_t v167 = (uint64_t)v129 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  uint64_t v168 = (uint64_t)v129 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  uint64_t v169 = (uint64_t)v129 - v69;
  uint64_t v70 = __chkstk_darwin(v68);
  uint64_t v72 = (char *)v129 - v71;
  uint64_t v73 = __chkstk_darwin(v70);
  uint64_t v75 = (char *)v129 - v74;
  uint64_t v76 = __chkstk_darwin(v73);
  uint64_t v78 = (char *)v129 - v77;
  uint64_t v79 = __chkstk_darwin(v76);
  uint64_t v81 = (char *)v129 - v80;
  uint64_t v82 = __chkstk_darwin(v79);
  uint64_t v84 = (char *)v129 - v83;
  uint64_t v85 = __chkstk_darwin(v82);
  uint64_t v87 = (char *)v129 - v86;
  __chkstk_darwin(v85);
  uint64_t v89 = (char *)v129 - v88;
  id v90 = a1;
  sub_100073FEC(v90, 12, (uint64_t)v89);
  if (!v2)
  {
    uint64_t v130 = v72;
    uint64_t v131 = v75;
    uint64_t v132 = v78;
    uint64_t v133 = v81;
    uint64_t v134 = v84;
    uint64_t v135 = v89;
    id v91 = v90;
    sub_100073FEC(v91, 37, (uint64_t)v87);
    id v92 = v91;
    sub_100073FEC(v92, 25, (uint64_t)v134);
    id v93 = v92;
    sub_100073FEC(v93, 26, (uint64_t)v133);
    id v94 = v93;
    sub_100073FEC(v94, 27, (uint64_t)v132);
    id v95 = v94;
    sub_100073FEC(v95, 22, (uint64_t)v131);
    id v96 = v95;
    sub_100073FEC(v96, 33, (uint64_t)v130);
    id v97 = v96;
    sub_100073FEC(v97, 18, v169);
    id v98 = v97;
    sub_100073FEC(v98, 38, v168);
    v129[1] = v87;
    id v99 = v98;
    sub_100073FEC(v99, 30, v167);
    id v100 = v99;
    sub_100073FEC(v100, 31, v166);
    id v101 = v100;
    sub_100073FEC(v101, 11, v165);
    id v102 = v101;
    sub_100073FEC(v102, 8, v164);
    id v103 = v102;
    sub_100073FEC(v103, 6, v163);
    id v104 = v103;
    sub_100073FEC(v104, 23, v162);
    id v105 = v104;
    sub_100073FEC(v105, 28, v161);
    id v106 = v105;
    sub_100073FEC(v106, 7, v160);
    id v107 = v106;
    sub_100073FEC(v107, 24, v159);
    id v108 = v107;
    sub_100073FEC(v108, 5, v158);
    id v109 = v108;
    sub_100073FEC(v109, 17, v157);
    id v110 = v109;
    sub_100073FEC(v110, 32, v156);
    id v111 = v110;
    sub_100073FEC(v111, 2, v155);
    id v112 = v111;
    sub_100073FEC(v112, 16, v154);
    id v113 = v112;
    sub_100073FEC(v113, 29, v153);
    id v114 = v113;
    sub_100073FEC(v114, 13, v152);
    id v115 = v114;
    sub_100073FEC(v115, 1, v151);
    id v116 = v115;
    sub_100073FEC(v116, 0, v150);
    id v117 = v116;
    sub_100073FEC(v117, 4, v149);
    id v118 = v117;
    sub_100073FEC(v118, 15, v148);
    id v119 = v118;
    sub_100073FEC(v119, 10, v147);
    id v120 = v119;
    sub_100073FEC(v120, 20, v146);
    id v121 = v120;
    sub_100073FEC(v121, 9, v145);
    id v122 = v121;
    sub_100073FEC(v122, 19, v144);
    id v123 = v122;
    sub_100073FEC(v123, 35, v143);
    id v124 = v123;
    sub_100073FEC(v124, 34, v142);
    id v125 = v124;
    sub_100073FEC(v125, 36, v140);
    id v126 = v125;
    sub_100073FEC(v126, 3, v139);
    id v127 = v126;
    sub_100073FEC(v127, 14, v138);
    id v128 = v127;
    sub_100073FEC(v128, 21, v137);
    id v90 = v128;
    sub_100073FEC(v90, 39, v136);
    sub_1000BA5C0();
  }
}

void sub_100073FEC(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_10001295C(&qword_1000ED888);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v29 = (uint64_t)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v30 = (uint64_t)v28 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v28 - v12;
  uint64_t v14 = sub_1000BA5A0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10001295C(&qword_1000ED890);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = a1;
  uint64_t v31 = a2;
  id v22 = [v21 presetIdentifierForCategory:a2];
  if (v22)
  {
    uint64_t v23 = v22;
    v28[0] = v13;
    v28[1] = a3;
    sub_1000BB900();

    sub_1000BA590();
    if (v3)
    {

      return;
    }

    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v17, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v14);
    uint64_t v13 = (char *)v28[0];
  }
  else
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v20, 1, 1, v14);
  }
  id v24 = v21;
  uint64_t v25 = v31;
  sub_100076310(v24, v31, 0, (uint64_t)v13);
  if (v3)
  {

    sub_1000184DC((uint64_t)v20, &qword_1000ED890);
  }
  else
  {
    id v26 = v24;
    sub_100076310(v26, v25, 1, v30);
    id v27 = v26;
    sub_100076310(v27, v25, 2, v29);
    sub_1000BA560();
  }
}

void sub_10007435C(id a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v52 = a2;
  uint64_t v5 = sub_10001295C(&qword_1000ED8B0);
  __chkstk_darwin(v5 - 8);
  uint64_t v51 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001295C(&qword_1000ED8B8);
  __chkstk_darwin(v7 - 8);
  uint64_t v61 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001295C(&qword_1000ED8C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v59 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000B9AD0();
  uint64_t v57 = *(void *)(v11 - 8);
  uint64_t v58 = v11;
  __chkstk_darwin(v11);
  uint64_t v60 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000B9AF0();
  uint64_t v55 = *(void *)(v13 - 8);
  uint64_t v56 = v13;
  __chkstk_darwin(v13);
  uint64_t v62 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000B9BF0();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000B9C10();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10001295C(&qword_1000ED8C8);
  __chkstk_darwin(v20 - 8);
  id v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = self;
  id v24 = [a1 timeFontConfiguration];
  id v25 = [v23 systemTimeFontConfigurationFromTimeFontConfiguration:v24];

  id v26 = [a1 groupName];
  uint64_t v50 = sub_1000BB900();
  uint64_t v63 = v27;

  if (v25)
  {
    uint64_t v48 = v16;
    id v53 = a1;
    uint64_t v54 = v22;
    id v28 = v25;
    id v29 = [v28 timeFontIdentifier];
    sub_1000BB900();

    sub_1000B9BE0();
    [v28 weight];
    [v28 isSystemItem];
    sub_1000B9C00();
    uint64_t v3 = v2;
    if (v2)
    {

      swift_bridgeObjectRelease();
      return;
    }
    id v49 = v25;

    id v22 = v54;
    uint64_t v30 = v48;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v54, v19, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v22, 0, 1, v30);
    a1 = v53;
  }
  else
  {
    id v49 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v22, 1, 1, v16);
  }
  unint64_t v31 = (unint64_t)[a1 preferredTitleAlignment];
  uint64_t v33 = (uint64_t)v59;
  uint64_t v32 = v60;
  uint64_t v35 = (uint64_t)v61;
  uint64_t v34 = v62;
  if ((v31 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  sub_1000B9AE0();
  if (((unint64_t)[a1 preferredTitleLayout] & 0x8000000000000000) != 0)
  {
LABEL_24:
    __break(1u);
    return;
  }
  sub_1000B9AC0();
  id v36 = [a1 titleColor];
  if (v36)
  {
    id v37 = v36;
    sub_100074BFC(v37);
    if (v3)
    {

      swift_bridgeObjectRelease();
LABEL_16:
      (*(void (**)(char *, uint64_t))(v57 + 8))(v32, v58);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v34, v56);
      sub_1000184DC((uint64_t)v22, &qword_1000ED8C8);
      return;
    }
    uint64_t v39 = sub_1000B9AB0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v33, 0, 1, v39);
  }
  else
  {
    uint64_t v38 = sub_1000B9AB0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v33, 1, 1, v38);
  }
  if ([a1 titleContentStyle])
  {
    uint64_t v40 = (void *)swift_unknownObjectRetain();
    sub_100074DF4(v40, v35);
    if (v3)
    {
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      sub_1000184DC(v33, &qword_1000ED8C0);
      goto LABEL_16;
    }
    uint64_t v42 = sub_1000B9B90();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v35, 0, 1, v42);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v41 = sub_1000B9B90();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v35, 1, 1, v41);
  }
  uint64_t v54 = v22;
  id v43 = [a1 timeNumberingSystem];
  if (v43)
  {
    uint64_t v44 = v43;
    sub_1000BB900();

    swift_bridgeObjectRetain();
    uint64_t v45 = v51;
    sub_1000B9BA0();
    uint64_t v46 = sub_1000B9BB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v47 = sub_1000B9BB0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v51, 1, 1, v47);
  }
  [a1 isUserConfigured];
  [a1 contentsLuminance];
  [a1 isAlternateDateEnabled];
  sub_1000B9BC0();
}

void sub_100074BFC(void *a1)
{
  uint64_t v3 = sub_1000B9A90();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_1000BB410();
  __chkstk_darwin(v4 - 8);
  id v5 = [a1 color];
  uint64_t v6 = (void *)sub_1000992BC(0x726F6C6F63, (void *)0xE500000000000000, 0xD000000000000065, 0x80000001000CB1C0, 158, (uint64_t)v5);
  if (v1)
  {

LABEL_7:
    return;
  }
  id v7 = v6;

  id v8 = [v7 CGColor];
  sub_1000BB400();
  if (((unint64_t)[a1 preferredStyle] & 0x8000000000000000) == 0)
  {
    sub_1000B9A80();
    id v9 = [a1 localizedName];
    if (v9)
    {
      uint64_t v10 = v9;
      sub_1000BB900();
    }
    sub_1000B9AA0();
    goto LABEL_7;
  }
  __break(1u);
}

void sub_100074DF4(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_10001295C(&qword_1000ED8D0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v47 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v46 = (char *)&v45 - v6;
  uint64_t v7 = sub_10001295C(&qword_1000ED8D8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v45 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = sub_1000B9B10();
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  __chkstk_darwin(v13);
  uint64_t v14 = sub_1000B9B90();
  uint64_t v48 = *(void *)(v14 - 8);
  uint64_t v49 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v45 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v45 - v22;
  __chkstk_darwin(v21);
  id v25 = (char *)&v45 - v24;
  switch((unint64_t)[a1 type])
  {
    case 0uLL:
      id v26 = [self discreteColorsContentStyleForContentStyle:a1];
      uint64_t v27 = v51;
      id v28 = (void *)sub_1000992BC(0xD000000000000011, (void *)0x80000001000CB2E0, 0xD000000000000065, 0x80000001000CB1C0, 113, (uint64_t)v26);
      if (v27)
      {

        goto LABEL_9;
      }
      id v38 = v28;

      sub_1000755B0(v38, (uint64_t)v25);
      swift_unknownObjectRelease();
      uint64_t v17 = v25;
      goto LABEL_15;
    case 1uLL:
      id v29 = [self gradientContentStyleForContentStyle:a1];
      uint64_t v30 = v51;
      unint64_t v31 = (void *)sub_1000992BC(0xD000000000000011, (void *)0x80000001000CB2E0, 0xD000000000000065, 0x80000001000CB1C0, 116, (uint64_t)v29);
      if (v30) {
        goto LABEL_8;
      }
      id v32 = v31;

      sub_100075B90(v32, (uint64_t)v23);
      swift_unknownObjectRelease();
      uint64_t v17 = v23;
      goto LABEL_15;
    case 2uLL:
      id v29 = [self vibrantMaterialContentStyleForContentStyle:a1];
      uint64_t v33 = v51;
      uint64_t v34 = (void *)sub_1000992BC(0xD000000000000011, (void *)0x80000001000CB2E0, 0xD000000000000065, 0x80000001000CB1C0, 119, (uint64_t)v29);
      if (v33)
      {
LABEL_8:

        goto LABEL_9;
      }
      id v39 = v34;

      [v39 type];
      sub_1000B9B00();
      uint64_t v40 = sub_1000B9B30();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v11, 1, 1, v40);
      uint64_t v41 = sub_1000B9B70();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v46, 1, 1, v41);
      sub_1000B9B80();
      swift_unknownObjectRelease();

      uint64_t v17 = v20;
      goto LABEL_15;
    case 3uLL:
      id v35 = [self vibrantMonochromeContentStyleForContentStyle:a1];
      uint64_t v36 = v51;
      id v37 = (void *)sub_1000992BC(0xD000000000000011, (void *)0x80000001000CB2E0, 0xD000000000000065, 0x80000001000CB1C0, 122, (uint64_t)v35);
      if (v36)
      {

LABEL_9:
        swift_unknownObjectRelease();
      }
      else
      {
        id v42 = v37;

        [v42 type];
        sub_1000B9B00();
        uint64_t v43 = sub_1000B9B30();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v45, 1, 1, v43);
        uint64_t v44 = sub_1000B9B70();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v47, 1, 1, v44);
        sub_1000B9B80();
        swift_unknownObjectRelease();

LABEL_15:
        (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v50, v17, v49);
      }
      return;
    default:
      sub_1000BB6C0();
      sub_10007B218((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();
      goto LABEL_9;
  }
}

void sub_1000755B0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v46 = sub_1000BB410();
  uint64_t v4 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v47 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001295C(&qword_1000ED8D0);
  __chkstk_darwin(v6 - 8);
  id v42 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001295C(&qword_1000ED8D8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000B9B10();
  uint64_t v40 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v44 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000B9B30();
  uint64_t v41 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a1 isVibrant];
  [a1 allowsVariation];
  [a1 variation];
  sub_1000B9B20();
  if (v2)
  {
  }
  else
  {
    v35[1] = v11;
    uint64_t v38 = v13;
    id v39 = v10;
    id v37 = v15;
    [a1 type];
    sub_1000B9B00();
    id v16 = [a1 colors];
    sub_10001DAE4(0, &qword_1000ED8E0);
    unint64_t v17 = sub_1000BBA50();

    uint64_t v18 = a1;
    if (v17 >> 62) {
      goto LABEL_19;
    }
    uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      uint64_t v20 = v42;
      uint64_t v21 = v39;
      id v36 = v18;
      if (!v19) {
        break;
      }
      uint64_t v48 = &_swiftEmptyArrayStorage;
      sub_10007F9F8(0, v19 & ~(v19 >> 63), 0);
      if (v19 < 0)
      {
        __break(1u);
        return;
      }
      uint64_t v22 = 0;
      uint64_t v23 = v48;
      uint64_t v18 = (void *)v17;
      v17 &= 0xC000000000000001;
      uint64_t v45 = v4 + 32;
      while (v19 != v22)
      {
        if (v17) {
          id v24 = (id)sub_1000BBEF0();
        }
        else {
          id v24 = *((id *)v18 + v22 + 4);
        }
        id v25 = v24;
        id v26 = [v24 CGColor];
        sub_1000BB400();

        uint64_t v48 = v23;
        unint64_t v28 = v23[2];
        unint64_t v27 = v23[3];
        if (v28 >= v27 >> 1)
        {
          sub_10007F9F8(v27 > 1, v28 + 1, 1);
          uint64_t v23 = v48;
        }
        ++v22;
        void v23[2] = v28 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v23+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v28, v47, v46);
        if (v19 == v22)
        {
          swift_bridgeObjectRelease();
          uint64_t v20 = v42;
          uint64_t v21 = v39;
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1000BBF40();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v29 = v41;
    uint64_t v30 = v21;
    unint64_t v31 = v21;
    uint64_t v33 = v37;
    uint64_t v32 = v38;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v30, v37, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v32);
    uint64_t v34 = sub_1000B9B70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v20, 1, 1, v34);
    sub_1000B9B80();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v33, v32);
  }
}

void sub_100075B90(id a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000BB410();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  uint64_t v56 = v7;
  __chkstk_darwin(v6);
  uint64_t v57 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001295C(&qword_1000ED8D0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001295C(&qword_1000ED8D8);
  __chkstk_darwin(v12 - 8);
  uint64_t v47 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000B9B10();
  uint64_t v44 = *(void *)(v14 - 8);
  uint64_t v45 = v14;
  __chkstk_darwin(v14);
  id v53 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000B9B50();
  __chkstk_darwin(v16 - 8);
  unint64_t v18 = (unint64_t)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000B9B70();
  uint64_t v50 = *(void *)(v19 - 8);
  uint64_t v51 = v19;
  __chkstk_darwin(v19);
  uint64_t v54 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a1 gradientType];
  sub_1000B9B40();
  id v21 = [a1 locations];
  sub_10001DAE4(0, (unint64_t *)&qword_1000EC528);
  unint64_t v22 = sub_1000BBA50();

  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1000BBF40();
    swift_bridgeObjectRelease();
    uint64_t v48 = v11;
    uint64_t v49 = a2;
    if (v23) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v48 = v11;
  uint64_t v49 = a2;
  if (!v23) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v58 = &_swiftEmptyArrayStorage;
  sub_10007FA34(0, v23 & ~(v23 >> 63), 0);
  if (v23 < 0) {
    goto LABEL_31;
  }
  uint64_t v46 = v2;
  id v52 = a1;
  uint64_t v24 = 0;
  id v25 = v58;
  do
  {
    if ((v22 & 0xC000000000000001) != 0) {
      id v26 = (id)sub_1000BBEF0();
    }
    else {
      id v26 = *(id *)(v22 + 8 * v24 + 32);
    }
    unint64_t v27 = v26;
    [v26 doubleValue];
    uint64_t v29 = v28;

    uint64_t v58 = v25;
    unint64_t v31 = v25[2];
    unint64_t v30 = v25[3];
    if (v31 >= v30 >> 1)
    {
      sub_10007FA34(v30 > 1, v31 + 1, 1);
      id v25 = v58;
    }
    ++v24;
    void v25[2] = v31 + 1;
    v25[v31 + 4] = v29;
  }
  while (v23 != v24);
  swift_bridgeObjectRelease();
  a1 = v52;
  uint64_t v3 = v46;
LABEL_14:
  [a1 startPoint];
  [a1 endPoint];
  uint64_t v23 = (uint64_t)v54;
  sub_1000B9B60();
  uint64_t v11 = v3;
  if (v3)
  {
  }
  else
  {
    [a1 type];
    sub_1000B9B00();
    id v32 = [a1 colors];
    sub_10001DAE4(0, &qword_1000ED8E0);
    unint64_t v18 = sub_1000BBA50();

    if (v18 >> 62) {
      goto LABEL_32;
    }
    uint64_t v33 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v33)
    {
      while (1)
      {
        uint64_t v58 = &_swiftEmptyArrayStorage;
        sub_10007F9F8(0, v33 & ~(v33 >> 63), 0);
        if (v33 < 0) {
          break;
        }
        id v52 = a1;
        uint64_t v23 = 0;
        uint64_t v34 = v58;
        a1 = (id)(v18 & 0xC000000000000001);
        while (v33 != v23)
        {
          if (a1) {
            id v35 = (id)sub_1000BBEF0();
          }
          else {
            id v35 = *(id *)(v18 + 8 * v23 + 32);
          }
          id v36 = v35;
          id v37 = [v35 CGColor];
          sub_1000BB400();
          if (v11)
          {
            swift_bridgeObjectRelease();

            swift_release();
            (*(void (**)(char *, uint64_t))(v44 + 8))(v53, v45);
            (*(void (**)(char *, uint64_t))(v50 + 8))(v54, v51);
            return;
          }

          uint64_t v58 = v34;
          unint64_t v39 = v34[2];
          unint64_t v38 = v34[3];
          if (v39 >= v38 >> 1)
          {
            sub_10007F9F8(v38 > 1, v39 + 1, 1);
            uint64_t v34 = v58;
          }
          ++v23;
          v34[2] = v39 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v56 + 32))((unint64_t)v34+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v39, v57, v55);
          if (v33 == v23)
          {
            swift_bridgeObjectRelease();
            a1 = v52;
            uint64_t v23 = (uint64_t)v54;
            goto LABEL_34;
          }
        }
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        swift_bridgeObjectRetain();
        uint64_t v33 = sub_1000BBF40();
        swift_bridgeObjectRelease();
        if (!v33) {
          goto LABEL_33;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_33:
      swift_bridgeObjectRelease();
LABEL_34:
      uint64_t v40 = sub_1000B9B30();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v47, 1, 1, v40);
      uint64_t v42 = v50;
      uint64_t v41 = v51;
      uint64_t v43 = v48;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v48, v23, v51);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v41);
      sub_1000B9B80();

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v23, v41);
    }
  }
}

void sub_100076310(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_1000BA580();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [a1 colorPresetForCategory:a2 colorIndex:a3];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v18 = a4;
    id v15 = [v13 name];
    sub_1000BB900();

    [v14 variation];
    sub_1000BA570();

    if (!v4)
    {
      uint64_t v16 = v18;
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v18, v12, v9);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
    }
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a4, 1, 1, v9);
  }
}

uint64_t sub_1000764C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v81 = a2;
  uint64_t v4 = sub_1000B91E0();
  __chkstk_darwin(v4 - 8);
  uint64_t v82 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001295C(&qword_1000ED850);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v80 = (uint64_t)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v85 = (uint64_t)&v76 - v9;
  uint64_t v10 = sub_1000B81E0();
  uint64_t v86 = *(void *)(v10 - 8);
  id v87 = (id)v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000B90E0();
  uint64_t v84 = *(void *)(v83 - 8);
  uint64_t v13 = __chkstk_darwin(v83);
  uint64_t v79 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v90 = (uint64_t)&v76 - v15;
  uint64_t v16 = sub_1000B9160();
  uint64_t v88 = *(void *)(v16 - 8);
  uint64_t v89 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v78 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v91 = (char *)&v76 - v19;
  uint64_t v20 = sub_1000B8240();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  id v26 = (char *)&v76 - v25;
  id v27 = [a1 assetDirectory];
  sub_1000B8200();

  uint64_t v28 = self;
  sub_1000B81F0(v29);
  unint64_t v31 = v30;
  v95[0] = 0;
  id v32 = [v28 loadFromURL:v30 error:v95];

  if (!v32)
  {
    id v38 = v95[0];
    sub_1000B81D0();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v26, v20);
  }
  id v92 = a1;
  uint64_t v93 = v21;
  id v33 = v95[0];
  id v94 = v32;
  id v34 = [v32 media];
  if (v34)
  {
    id v35 = v34;
    uint64_t v36 = v20;
    sub_10001DAE4(0, &qword_1000ED858);
    uint64_t v37 = sub_1000BBA50();
  }
  else
  {
    uint64_t v36 = v20;
    uint64_t v37 = 0;
  }
  uint64_t v39 = sub_1000992BC(0x616964656DLL, (void *)0xE500000000000000, 0xD000000000000065, 0x80000001000CB1C0, 373, v37);
  if (v2)
  {

    swift_bridgeObjectRelease();
    uint64_t v20 = v36;
    uint64_t v21 = v93;
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v26, v20);
  }
  unint64_t v40 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v40 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = (void *)sub_1000BBF40();
    swift_bridgeObjectRelease();
    if (!v41) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v41 = *(void **)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v41) {
      goto LABEL_14;
    }
  }
  if ((v40 & 0xC000000000000001) != 0)
  {
    id v42 = (id)sub_1000BBEF0();
  }
  else
  {
    if (!*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v42 = *(id *)(v40 + 32);
  }
  uint64_t v41 = v42;
LABEL_14:
  swift_bridgeObjectRelease();
  id v43 = (id)sub_1000992BC(0x69662E616964656DLL, (void *)0xEB00000000747372, 0xD000000000000065, 0x80000001000CB1C0, 373, (uint64_t)v41);

  sub_100079E74(v43);
  uint64_t v44 = v36;
  v95[0] = (id)sub_1000B9150();
  v95[1] = v46;
  uint64_t v48 = v86;
  id v47 = v87;
  (*(void (**)(char *, void, id))(v86 + 104))(v12, enum case for URL.DirectoryHint.inferFromPath(_:), v87);
  sub_1000180E0();
  sub_1000B8230();
  (*(void (**)(char *, id))(v48 + 8))(v12, v47);
  swift_bridgeObjectRelease();
  sub_10007A260((unint64_t)v24, v90);
  id v49 = [v94 layoutConfiguration];
  if (v49)
  {
    id v50 = v49;
    uint64_t v51 = v85;
    sub_100079224(v50, v85);
    uint64_t v53 = sub_1000B9100();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v51, 0, 1, v53);
  }
  else
  {
    uint64_t v52 = sub_1000B9100();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v85, 1, 1, v52);
  }
  id v54 = [v94 userInfo];
  if (!v54)
  {
    long long v96 = 0u;
    long long v97 = 0u;
LABEL_29:
    sub_1000184DC((uint64_t)&v96, &qword_1000EC690);
    int v60 = 2;
    goto LABEL_30;
  }
  uint64_t v55 = v54;
  uint64_t v56 = sub_1000BB870();

  *(void *)&long long v96 = sub_1000BB900();
  *((void *)&v96 + 1) = v57;
  sub_1000BBEB0();
  if (*(void *)(v56 + 16) && (unint64_t v58 = sub_10008BBD0((uint64_t)v95), (v59 & 1) != 0))
  {
    sub_10001DA70(*(void *)(v56 + 56) + 32 * v58, (uint64_t)&v96);
  }
  else
  {
    long long v96 = 0u;
    long long v97 = 0u;
  }
  sub_10007B1C4((uint64_t)v95);
  swift_bridgeObjectRelease();
  if (!*((void *)&v97 + 1)) {
    goto LABEL_29;
  }
  if (swift_dynamicCast()) {
    int v60 = LOBYTE(v95[0]);
  }
  else {
    int v60 = 2;
  }
LABEL_30:
  LODWORD(v86) = v60;
  uint64_t v61 = v84;
  id v62 = [v94 userInfo];
  uint64_t v77 = v44;
  if (v62)
  {
    uint64_t v63 = v62;
    uint64_t v64 = sub_1000BB870();

    *(void *)&long long v96 = sub_1000BB900();
    *((void *)&v96 + 1) = v65;
    sub_1000BBEB0();
    if (*(void *)(v64 + 16) && (unint64_t v66 = sub_10008BBD0((uint64_t)v95), (v67 & 1) != 0))
    {
      sub_10001DA70(*(void *)(v64 + 56) + 32 * v66, (uint64_t)&v96);
    }
    else
    {
      long long v96 = 0u;
      long long v97 = 0u;
    }
    sub_10007B1C4((uint64_t)v95);
    swift_bridgeObjectRelease();
    uint64_t v61 = v84;
    if (*((void *)&v97 + 1))
    {
      int v68 = swift_dynamicCast();
      id v69 = v95[0];
      if (!v68) {
        id v69 = 0;
      }
      id v87 = v69;
      goto LABEL_41;
    }
  }
  else
  {
    long long v96 = 0u;
    long long v97 = 0u;
  }
  sub_1000184DC((uint64_t)&v96, &qword_1000EC690);
  id v87 = 0;
LABEL_41:
  uint64_t v70 = v89;
  id v71 = v94;
  [v94 options];
  [v71 options];
  sub_1000B91D0();
  id v72 = [v71 identifier];
  uint64_t v84 = sub_1000BB900();
  uint64_t v76 = v73;

  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v78, v91, v70);
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v79, v90, v83);
  uint64_t v74 = v85;
  sub_1000182A0(v85, v80, &qword_1000ED850);
  sub_1000B9130();
  uint64_t v75 = v77;

  sub_1000184DC(v74, &qword_1000ED850);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v90, v83);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v91, v89);
  return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v26, v75);
}

void sub_100077174(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v103 = a2;
  uint64_t v3 = sub_10001295C(&qword_1000EC660);
  __chkstk_darwin(v3 - 8);
  id v102 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000BB470();
  __chkstk_darwin(v5 - 8);
  id v101 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001295C(&qword_1000ED878);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v100 = (uint64_t)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v105 = (uint64_t)&v93 - v10;
  uint64_t v11 = sub_1000BB270();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v113 = v11;
  uint64_t v114 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  id v111 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  id v110 = (char *)&v93 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  id v109 = (char *)&v93 - v18;
  __chkstk_darwin(v17);
  id v108 = (char *)&v93 - v19;
  uint64_t v107 = sub_1000BB410();
  uint64_t v106 = *(void *)(v107 - 8);
  uint64_t v20 = __chkstk_darwin(v107);
  id v104 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  id v112 = (char *)&v93 - v22;
  uint64_t v23 = sub_1000BAF60();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  id v26 = (char *)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000BAD00();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  unint64_t v30 = (char *)&v93 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v118 = 0;
  id v31 = [a1 loadUserInfoWithError:&v118];
  id v32 = v118;
  if (v31)
  {
    id v33 = v31;
    uint64_t v99 = v23;
    uint64_t v98 = v24;
    id v34 = a1;
    uint64_t v35 = sub_1000BB870();
    id v36 = v32;

    (*(void (**)(char *, void, uint64_t))(v28 + 104))(v30, enum case for AvatarPosterUserInfoKey.dataRepresentation(_:), v27);
    uint64_t v37 = sub_1000BACF0();
    uint64_t v39 = v38;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    *(void *)&long long v122 = v37;
    *((void *)&v122 + 1) = v39;
    sub_1000BBEB0();
    if (*(void *)(v35 + 16) && (unint64_t v40 = sub_10008BBD0((uint64_t)&v118), (v41 & 1) != 0))
    {
      sub_10001DA70(*(void *)(v35 + 56) + 32 * v40, (uint64_t)&v122);
    }
    else
    {
      long long v122 = 0u;
      long long v123 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10007B1C4((uint64_t)&v118);
    if (*((void *)&v123 + 1))
    {
      int v42 = swift_dynamicCast();
      if (v42) {
        uint64_t v43 = v116;
      }
      else {
        uint64_t v43 = 0;
      }
      if (v42) {
        unint64_t v44 = v117;
      }
      else {
        unint64_t v44 = 0xF000000000000000;
      }
    }
    else
    {
      sub_1000184DC((uint64_t)&v122, &qword_1000EC690);
      uint64_t v43 = 0;
      unint64_t v44 = 0xF000000000000000;
    }
    uint64_t v46 = v26;
    uint64_t v47 = v115;
    sub_1000922E8(0xD000000000000012, (void *)0x80000001000CB250, v43, v44, v124);
    if (v47)
    {

      sub_1000180CC(v43, v44);
    }
    else
    {
      sub_1000180CC(v43, v44);
      uint64_t v49 = v124[0];
      uint64_t v48 = v124[1];
      sub_1000B81C0();
      swift_allocObject();
      sub_1000B81B0();
      sub_10007B218(&qword_1000ED880, (void (*)(uint64_t))&type metadata accessor for AvatarPosterConfiguration);
      sub_1000B81A0();
      uint64_t v95 = v49;
      unint64_t v96 = v48;
      swift_release();
      id v94 = v46;
      uint64_t v50 = sub_1000BAF40();
      uint64_t v51 = v113;
      uint64_t v52 = v114;
      uint64_t v53 = *(void (**)(char *, void, uint64_t))(v114 + 104);
      id v54 = v108;
      uint64_t v115 = v114 + 104;
      long long v97 = v53;
      v53(v108, enum case for MonogramPosterColorDescriptionKey.red(_:), v113);
      uint64_t v55 = sub_1000BB260();
      uint64_t v57 = v56;
      unint64_t v58 = *(char **)(v52 + 8);
      uint64_t v114 = v52 + 8;
      id v108 = v58;
      ((void (*)(char *, uint64_t))v58)(v54, v51);
      if (*(void *)(v50 + 16)) {
        sub_10008BB58(v55, v57);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v59 = v94;
      uint64_t v60 = sub_1000BAF40();
      uint64_t v61 = v109;
      uint64_t v62 = v113;
      v97(v109, enum case for MonogramPosterColorDescriptionKey.green(_:), v113);
      uint64_t v63 = sub_1000BB260();
      uint64_t v65 = v64;
      ((void (*)(char *, uint64_t))v108)(v61, v62);
      if (*(void *)(v60 + 16)) {
        sub_10008BB58(v63, v65);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v66 = sub_1000BAF40();
      char v67 = v110;
      uint64_t v68 = v113;
      v97(v110, enum case for MonogramPosterColorDescriptionKey.blue(_:), v113);
      uint64_t v69 = sub_1000BB260();
      uint64_t v71 = v70;
      ((void (*)(char *, uint64_t))v108)(v67, v68);
      if (*(void *)(v66 + 16)) {
        sub_10008BB58(v69, v71);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v72 = sub_1000BAF40();
      uint64_t v73 = v111;
      uint64_t v74 = v113;
      v97(v111, enum case for MonogramPosterColorDescriptionKey.alpha(_:), v113);
      uint64_t v75 = sub_1000BB260();
      uint64_t v77 = v76;
      ((void (*)(char *, uint64_t))v108)(v73, v74);
      if (*(void *)(v72 + 16)) {
        sub_10008BB58(v75, v77);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000BB3F0();
      uint64_t v78 = sub_1000BAF20();
      unint64_t v80 = v79;
      sub_1000922E8(0x6D49726174617661, (void *)0xEF61746144656761, v78, v79, (uint64_t *)&v118);
      sub_1000180CC(v78, v80);
      id v81 = v118;
      unint64_t v82 = v119;
      uint64_t v83 = (void *)sub_1000BAF30();
      if (v84 >> 60 == 15)
      {
        uint64_t v85 = sub_1000B8F90();
        uint64_t v86 = v105;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v105, 1, 1, v85);
        uint64_t v87 = v106;
      }
      else
      {
        uint64_t v88 = (uint64_t)v83;
        unint64_t v89 = v84;
        id v118 = v83;
        unint64_t v119 = v84;
        uint64_t v90 = v105;
        sub_100078FE4(&v122, v105);
        uint64_t v87 = v106;
        uint64_t v91 = sub_1000B8F90();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v90, 0, 1, v91);
        sub_1000180CC(v88, v89);
        uint64_t v86 = v90;
      }
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v104, v112, v107);
      id v120 = &type metadata for Data;
      id v121 = &protocol witness table for Data;
      id v118 = v81;
      unint64_t v119 = v82;
      uint64_t v92 = sub_1000BB440();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v102, 1, 1, v92);
      sub_100017F4C((uint64_t)v81, v82);
      sub_1000BB450();
      sub_1000182A0(v86, v100, &qword_1000ED878);
      sub_1000BAF50();
      sub_1000B9020();
      sub_100018074(v95, v96);

      sub_100018074((uint64_t)v81, v82);
      sub_1000184DC(v105, &qword_1000ED878);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v112, v107);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v59, v99);
    }
  }
  else
  {
    id v45 = v118;
    sub_1000B81D0();

    swift_willThrow();
  }
}

void sub_100077F10(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000BB270();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v131 = v4;
  uint64_t v132 = v5;
  uint64_t v6 = __chkstk_darwin(v4);
  id v120 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v119 = (char *)&v108 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  id v118 = (char *)&v108 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v117 = (char *)&v108 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  id v125 = (char *)&v108 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  id v124 = (char *)&v108 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v108 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v108 - v21;
  uint64_t v122 = sub_1000BB410();
  uint64_t v121 = *(void *)(v122 - 8);
  uint64_t v23 = __chkstk_darwin(v122);
  uint64_t v116 = (char *)&v108 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v115 = (char *)&v108 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  long long v123 = (char *)&v108 - v28;
  __chkstk_darwin(v27);
  id v127 = (char *)&v108 - v29;
  uint64_t v129 = sub_1000BB0C0();
  uint64_t v126 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  id v128 = (char *)&v108 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000BAFD0();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  id v34 = (char *)&v108 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136[0] = 0;
  id v35 = [a1 loadUserInfoWithError:v136];
  id v36 = v136[0];
  if (v35)
  {
    uint64_t v37 = v35;
    uint64_t v114 = a2;
    uint64_t v130 = a1;
    uint64_t v38 = sub_1000BB870();
    id v39 = v36;

    (*(void (**)(char *, void, uint64_t))(v32 + 104))(v34, enum case for MonogramPosterUserInfoKey.dataRepresentation(_:), v31);
    uint64_t v40 = sub_1000BAFC0();
    uint64_t v42 = v41;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    *(void *)&long long v137 = v40;
    *((void *)&v137 + 1) = v42;
    sub_1000BBEB0();
    if (*(void *)(v38 + 16) && (unint64_t v43 = sub_10008BBD0((uint64_t)v136), (v44 & 1) != 0))
    {
      sub_10001DA70(*(void *)(v38 + 56) + 32 * v43, (uint64_t)&v137);
    }
    else
    {
      long long v137 = 0u;
      long long v138 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10007B1C4((uint64_t)v136);
    if (*((void *)&v138 + 1))
    {
      int v45 = swift_dynamicCast();
      if (v45) {
        uint64_t v46 = v134;
      }
      else {
        uint64_t v46 = 0;
      }
      if (v45) {
        unint64_t v47 = v135;
      }
      else {
        unint64_t v47 = 0xF000000000000000;
      }
    }
    else
    {
      sub_1000184DC((uint64_t)&v137, &qword_1000EC690);
      uint64_t v46 = 0;
      unint64_t v47 = 0xF000000000000000;
    }
    uint64_t v49 = v130;
    uint64_t v50 = v133;
    sub_1000922E8(0xD000000000000012, (void *)0x80000001000CB250, v46, v47, v139);
    if (v50)
    {

      sub_1000180CC(v46, v47);
    }
    else
    {
      sub_1000180CC(v46, v47);
      uint64_t v52 = v139[0];
      uint64_t v51 = v139[1];
      sub_1000B81C0();
      swift_allocObject();
      sub_1000B81B0();
      sub_10007B218(&qword_1000ED898, (void (*)(uint64_t))&type metadata accessor for MonogramPosterConfiguration);
      sub_1000B81A0();
      uint64_t v110 = v52;
      unint64_t v111 = v51;
      swift_release();
      uint64_t v53 = sub_1000BB0A0();
      uint64_t v112 = sub_1000BB090();
      uint64_t v54 = v132;
      uint64_t v55 = *(void (**)(void))(v132 + 104);
      unsigned int v109 = enum case for MonogramPosterColorDescriptionKey.red(_:);
      uint64_t v56 = v131;
      uint64_t v133 = v55;
      v55(v22);
      uint64_t v57 = sub_1000BB260();
      uint64_t v59 = v58;
      uint64_t v60 = *(void (**)(char *, uint64_t))(v54 + 8);
      uint64_t v132 = v54 + 8;
      uint64_t v113 = v60;
      v60(v22, v56);
      if (*(void *)(v53 + 16)) {
        sub_10008BB58(v57, v59);
      }
      swift_bridgeObjectRelease();
      unsigned int v108 = enum case for MonogramPosterColorDescriptionKey.green(_:);
      uint64_t v61 = v131;
      v133(v20);
      uint64_t v62 = sub_1000BB260();
      uint64_t v64 = v63;
      v113(v20, v61);
      if (*(void *)(v53 + 16)) {
        sub_10008BB58(v62, v64);
      }
      swift_bridgeObjectRelease();
      uint64_t v65 = enum case for MonogramPosterColorDescriptionKey.blue(_:);
      uint64_t v66 = v124;
      uint64_t v67 = v131;
      ((void (*)(char *, void, uint64_t))v133)(v124, enum case for MonogramPosterColorDescriptionKey.blue(_:), v131);
      uint64_t v68 = sub_1000BB260();
      uint64_t v70 = v69;
      v113(v66, v67);
      if (*(void *)(v53 + 16)) {
        sub_10008BB58(v68, v70);
      }
      swift_bridgeObjectRelease();
      uint64_t v71 = enum case for MonogramPosterColorDescriptionKey.alpha(_:);
      uint64_t v72 = v125;
      uint64_t v73 = v131;
      ((void (*)(char *, void, uint64_t))v133)(v125, enum case for MonogramPosterColorDescriptionKey.alpha(_:), v131);
      uint64_t v74 = sub_1000BB260();
      uint64_t v76 = v75;
      v113(v72, v73);
      if (*(void *)(v53 + 16)) {
        sub_10008BB58(v74, v76);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000BB3F0();
      uint64_t v77 = v117;
      uint64_t v78 = v131;
      ((void (*)(char *, void, uint64_t))v133)(v117, v109, v131);
      uint64_t v79 = sub_1000BB260();
      uint64_t v81 = v80;
      uint64_t v82 = v112;
      v113(v77, v78);
      if (*(void *)(v82 + 16)) {
        sub_10008BB58(v79, v81);
      }
      swift_bridgeObjectRelease();
      uint64_t v83 = v118;
      uint64_t v84 = v131;
      ((void (*)(char *, void, uint64_t))v133)(v118, v108, v131);
      uint64_t v85 = sub_1000BB260();
      uint64_t v87 = v86;
      uint64_t v88 = v112;
      v113(v83, v84);
      if (*(void *)(v88 + 16)) {
        sub_10008BB58(v85, v87);
      }
      swift_bridgeObjectRelease();
      unint64_t v89 = v119;
      uint64_t v90 = v131;
      ((void (*)(char *, uint64_t, uint64_t))v133)(v119, v65, v131);
      uint64_t v91 = sub_1000BB260();
      uint64_t v93 = v92;
      uint64_t v94 = v112;
      v113(v89, v90);
      if (*(void *)(v94 + 16)) {
        sub_10008BB58(v91, v93);
      }
      swift_bridgeObjectRelease();
      uint64_t v95 = v120;
      uint64_t v96 = v131;
      ((void (*)(char *, uint64_t, uint64_t))v133)(v120, v71, v131);
      uint64_t v97 = sub_1000BB260();
      uint64_t v99 = v98;
      uint64_t v100 = v112;
      v113(v95, v96);
      uint64_t v101 = v121;
      if (*(void *)(v100 + 16)) {
        sub_10008BB58(v97, v99);
      }
      id v102 = v130;
      uint64_t v103 = v122;
      id v104 = v123;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000BB3F0();
      uint64_t v105 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
      v105(v115, v127, v103);
      v105(v116, v104, v103);
      uint64_t v106 = v128;
      sub_1000BB0B0();
      sub_1000BB080();
      sub_1000B9E20();
      sub_100018074(v110, v111);

      uint64_t v107 = *(void (**)(char *, uint64_t))(v101 + 8);
      v107(v123, v103);
      v107(v127, v103);
      (*(void (**)(char *, uint64_t))(v126 + 8))(v106, v129);
    }
  }
  else
  {
    id v48 = v136[0];
    sub_1000B81D0();

    swift_willThrow();
  }
}

void sub_100078CBC(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1000BA670();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    uint64_t v26 = a2;
    uint64_t v11 = swift_allocBox();
    uint64_t v25 = v12;
    id v13 = a1;
    id v14 = [v10 name];
    sub_1000BB900();

    sub_1000BA660();
    if (v2)
    {

      swift_deallocBox();
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v25, v8, v5);

      uint64_t v19 = v26;
      *uint64_t v26 = v11;
      uint64_t v20 = enum case for AvatarDescriptor.animoji(_:);
      uint64_t v21 = sub_1000BA000();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
    }
  }
  else
  {
    self;
    uint64_t v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      uint64_t v16 = (void *)v15;
      sub_1000BA5D0();
      uint64_t v17 = swift_allocBox();
      sub_100071DC0(v16, v18);
      if (v2)
      {
        swift_deallocBox();
      }
      else
      {
        *a2 = v17;
        uint64_t v22 = enum case for AvatarDescriptor.memoji(_:);
        uint64_t v23 = sub_1000BA000();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(a2, v22, v23);
      }
    }
    else
    {
      sub_1000BB6C0();
      sub_10007B218((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();
    }
  }
}

uint64_t sub_100078FE4@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v17 = a1;
  v16[1] = a2;
  uint64_t v3 = sub_1000BA000();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (void *)((char *)v16 - v8);
  blastdoor_AVTAvatarRecordSerializerGetClass();
  swift_getObjCClassMetadata();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  Class isa = sub_1000B82B0().super.isa;
  id v12 = [ObjCClassFromMetadata avatarRecordFromData:isa];

  id v13 = [v12 identifier];
  sub_1000BB900();

  blastdoor_AVTAvatarRecordRenderingGetClass();
  swift_getObjCClassMetadata();
  id v14 = [(id)swift_getObjCClassFromMetadata() avatarDescriptorForRecord:v12];
  sub_100078CBC(v14, v9);
  if (v2)
  {
    swift_unknownObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v17 = v2;
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v4 + 16))(v7, v9, v3);
    sub_1000B8F80();
    (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v9, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100079224(void *a1@<X0>, uint64_t a2@<X8>)
{
  v31[2] = a2;
  uint64_t v4 = sub_10001295C(&qword_1000ED860);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000B9120();
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  id v13 = (char *)v31 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v31 - v14;
  id v16 = [a1 portraitConfiguration];
  [v16 screenSize];
  id v35 = v17;
  id v34 = v18;
  [v16 screenScale];
  uint64_t v33 = v19;
  [v16 timeRect];
  [v16 inactiveTimeRect];
  [v16 parallaxPadding];
  sub_1000B9110();
  if (v2)
  {
  }
  else
  {
    id v34 = v6;

    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    id v35 = v15;
    uint64_t v21 = v15;
    uint64_t v22 = v20;
    v20(v21, v13, v7);
    id v23 = [a1 landscapeConfiguration];
    uint64_t v24 = a1;
    if (v23)
    {
      uint64_t v25 = v32;
      id v26 = v23;
      [v26 screenSize];
      uint64_t v33 = v27;
      v31[1] = v28;
      [v26 screenScale];
      objc_msgSend(v26, "timeRect", v29);
      [v26 inactiveTimeRect];
      [v26 parallaxPadding];
      sub_1000B9110();

      uint64_t v30 = v34;
      v22(v34, v10, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v30, 0, 1, v7);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v34, 1, 1, v7);
    }
    sub_1000B90F0();
  }
}

void sub_100079644(void *a1)
{
  uint64_t v2 = sub_1000B91A0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10001295C(&qword_1000ED870);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a1 imageSize];
  v20[8] = v7;
  v20[9] = v6;
  [a1 deviceResolution];
  v20[6] = v9;
  v20[7] = v8;
  [a1 parallaxPadding];
  v20[4] = v11;
  v20[5] = v10;
  [a1 visibleFrame];
  v20[2] = v13;
  v20[3] = v12;
  v20[0] = v15;
  v20[1] = v14;
  [a1 inactiveFrame];
  [a1 timeFrame];
  id v16 = [a1 clockLayerOrder];
  if (v16)
  {
    uint64_t v17 = v16;
    sub_1000BB900();
    sub_1000B9170();
    uint64_t v18 = sub_1000B9180();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v5, 0, 1, v18);
  }
  else
  {
    uint64_t v19 = sub_1000B9180();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 1, 1, v19);
  }
  [a1 clockIntersection];
  sub_1000B9190();
  sub_1000B91B0();
}

void sub_1000798E4(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v4 = sub_10001295C(&qword_1000EC660);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000BB470();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000B87C0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [a1 image];
  uint64_t v15 = (void *)sub_1000992BC(0x6567616D69, (void *)0xE500000000000000, 0xD000000000000065, 0x80000001000CB1C0, 347, (uint64_t)v14);
  if (v2)
  {
  }
  else
  {
    uint64_t v49 = v11;
    id v16 = v15;

    sub_1000BB310();
    id v17 = v16;
    id v18 = a1;
    uint64_t v19 = (__CVBuffer *)v17;
    id v20 = v18;
    uint64_t v21 = sub_1000B87B0();
    os_log_type_t v22 = sub_1000BBBE0();
    int v48 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      os_log_t v44 = v21;
      uint64_t v24 = v23;
      uint64_t v45 = swift_slowAlloc();
      uint64_t v51 = v45;
      *(_DWORD *)uint64_t v24 = 134218754;
      unint64_t v47 = v9;
      size_t Width = CVPixelBufferGetWidth(v19);
      uint64_t v46 = v6;
      sub_1000BBE50();
      *(_WORD *)(v24 + 12) = 2048;
      size_t Height = CVPixelBufferGetHeight(v19);
      uint64_t v43 = v10;
      size_t v26 = Height;

      size_t Width = v26;
      sub_1000BBE50();

      *(_WORD *)(v24 + 22) = 2080;
      [v20 frame];
      size_t Width = v27;
      uint64_t v53 = v28;
      uint64_t v54 = v29;
      uint64_t v55 = v30;
      LOBYTE(v56) = 0;
      type metadata accessor for CGRect(0);
      uint64_t v31 = sub_1000BB200();
      size_t Width = sub_10007ABB4(v31, v32, &v51);
      sub_1000BBE50();

      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 32) = 2080;
      v42[1] = v24 + 34;
      id v33 = [v20 identifier];
      uint64_t v34 = sub_1000BB900();
      unint64_t v36 = v35;

      size_t Width = sub_10007ABB4(v34, v36, &v51);
      sub_1000BBE50();

      uint64_t v6 = v46;
      swift_bridgeObjectRelease();
      os_log_t v37 = v44;
      _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v48, "Creating parallax image layer using image: (width: %ld, height: %ld) frame: %s identifier: %s", (uint8_t *)v24, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v43);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v10);
    }
    type metadata accessor for CVBuffer(0);
    uint64_t v55 = v38;
    uint64_t v56 = &protocol witness table for CVBufferRef;
    size_t Width = (size_t)v19;
    uint64_t v39 = sub_1000BB440();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v6, 1, 1, v39);
    uint64_t v40 = v19;
    sub_1000BB450();
    [v20 frame];
    [v20 zPosition];
    id v41 = [v20 identifier];
    sub_1000BB900();

    sub_1000B90B0();
  }
}

void sub_100079E74(void *a1)
{
  uint64_t v3 = sub_1000B9200();
  __chkstk_darwin(v3 - 8);
  unint64_t v32 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000B87C0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BB310();
  id v9 = a1;
  uint64_t v10 = sub_1000B87B0();
  os_log_type_t v11 = sub_1000BBBE0();
  int v31 = v11;
  uint64_t v12 = &selRef_membershipEventTrigger;
  uint64_t v13 = &selRef_membershipEventTrigger;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v30 = v1;
    uint64_t v15 = v14;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v35 = v28;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v29 = v5;
    id v33 = [v9 mediaType];
    char v34 = 0;
    type metadata accessor for PFPosterMediaType(0);
    uint64_t v16 = sub_1000BB200();
    id v33 = (id)sub_10007ABB4(v16, v17, &v35);
    uint64_t v27 = v6;
    sub_1000BBE50();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    v26[1] = v15 + 14;
    id v18 = [v9 subpath];
    uint64_t v19 = sub_1000BB900();
    unint64_t v21 = v20;

    uint64_t v13 = &selRef_membershipEventTrigger;
    uint64_t v22 = v19;
    uint64_t v12 = &selRef_membershipEventTrigger;
    id v33 = (id)sub_10007ABB4(v22, v21, &v35);
    sub_1000BBE50();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, (os_log_type_t)v31, "Unpacking photos poster media with type: %s at subpath: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  [v9 v12[59]];
  sub_1000B91F0();
  id v23 = [v9 assetUUID];
  if (v23)
  {
    uint64_t v24 = v23;
    sub_1000BB900();
  }
  id v25 = [v9 v13[61]];
  sub_1000BB900();

  [v9 version];
  sub_1000B9140();
}

void sub_10007A260(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = sub_1000B90C0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  uint64_t v56 = v4;
  __chkstk_darwin(v3);
  uint64_t v57 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000B91C0();
  __chkstk_darwin(v6 - 8);
  int v48 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000B8240();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  os_log_type_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000B87C0();
  uint64_t v12 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BB310();
  (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v15 = sub_1000B87B0();
  os_log_type_t v16 = sub_1000BBBE0();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v52 = v9;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    unint64_t v49 = a1;
    uint64_t v54 = v8;
    uint64_t v19 = (uint8_t *)v18;
    unint64_t v46 = swift_slowAlloc();
    unint64_t v59 = v46;
    *(_DWORD *)uint64_t v19 = 136315138;
    uint64_t v51 = (void (*)(char *, uint64_t))(v19 + 4);
    sub_10007B218(&qword_1000EC908, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v20 = sub_1000BC190();
    uint64_t v58 = sub_10007ABB4(v20, v21, (uint64_t *)&v59);
    sub_1000BBE50();
    swift_bridgeObjectRelease();
    uint64_t v51 = *(void (**)(char *, uint64_t))(v9 + 8);
    v51(v11, v54);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Loading layer stack from URL: %s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v8 = v54;
    a1 = v49;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v51 = *(void (**)(char *, uint64_t))(v9 + 8);
    v51(v11, v8);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v53);
  uint64_t v22 = self;
  sub_1000B81F0(v23);
  id v25 = v24;
  unint64_t v59 = 0;
  id v26 = [v22 loadCompoundLayerStackFromWallpaperURL:v24 options:0x1FFFFLL error:&v59];

  if (!v26)
  {
    id v31 = (id)v59;
    sub_1000B81D0();

    swift_willThrow();
    v51((char *)a1, v8);
    return;
  }
  id v27 = (id)v59;
  id v28 = [v26 portraitLayerStack];
  id v29 = v50;
  uint64_t v30 = (void *)sub_1000992BC(0xD000000000000012, (void *)0x80000001000CB230, 0xD000000000000065, 0x80000001000CB1C0, 398, (uint64_t)v28);
  if (v29)
  {

    v51((char *)a1, v8);
    return;
  }
  id v50 = v26;
  unint64_t v32 = v30;

  id v33 = [(id)v32 layers];
  sub_10001DAE4(0, &qword_1000ED868);
  uint64_t v34 = sub_1000BBA50();

  uint64_t v35 = &_swiftEmptyArrayStorage;
  unint64_t v59 = (unint64_t)&_swiftEmptyArrayStorage;
  if ((unint64_t)v34 >> 62) {
    goto LABEL_37;
  }
  uint64_t v36 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v49 = a1;
    uint64_t v53 = v32;
    uint64_t v54 = v8;
    if (v36)
    {
      if (v36 < 1)
      {
        __break(1u);
LABEL_42:
        __break(1u);
      }
      for (uint64_t i = 0; i != v36; ++i)
      {
        if ((v34 & 0xC000000000000001) != 0) {
          id v38 = (id)sub_1000BBEF0();
        }
        else {
          id v38 = *(id *)(v34 + 8 * i + 32);
        }
        uint64_t v39 = v38;
        self;
        if (swift_dynamicCastObjCClass())
        {
          sub_1000BBA30();
          if (*(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1000BBA70();
          }
          sub_1000BBA90();
          sub_1000BBA60();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v40 = v59;
      a1 = v49;
      unint64_t v32 = v53;
      uint64_t v8 = v54;
      uint64_t v35 = &_swiftEmptyArrayStorage;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v40 = (unint64_t)&_swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    if (v40 >> 62) {
      break;
    }
    uint64_t v34 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v34) {
      goto LABEL_39;
    }
LABEL_26:
    unint64_t v59 = (unint64_t)v35;
    sub_10007F9BC(0, v34 & ~(v34 >> 63), 0);
    if (v34 < 0) {
      goto LABEL_42;
    }
    uint64_t v41 = 0;
    uint64_t v35 = (void *)v59;
    a1 = v40 & 0xC000000000000001;
    uint64_t v8 = v56 + 32;
    while (v34 != v41)
    {
      if (a1) {
        id v42 = (id)sub_1000BBEF0();
      }
      else {
        id v42 = *(id *)(v40 + 8 * v41 + 32);
      }
      id v43 = v42;
      sub_1000798E4(v43, v57);

      unint64_t v59 = (unint64_t)v35;
      unint64_t v32 = v35[2];
      unint64_t v44 = v35[3];
      if (v32 >= v44 >> 1)
      {
        sub_10007F9BC(v44 > 1, v32 + 1, 1);
        uint64_t v35 = (void *)v59;
      }
      ++v41;
      void v35[2] = v32 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v56 + 32))((unint64_t)v35+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v32, v57, v55);
      if (v34 == v41)
      {
        swift_bridgeObjectRelease();
        a1 = v49;
        unint64_t v32 = v53;
        uint64_t v8 = v54;
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_1000BBF40();
  }
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_1000BBF40();
  swift_bridgeObjectRelease();
  if (v34) {
    goto LABEL_26;
  }
LABEL_39:
  swift_bridgeObjectRelease();
LABEL_40:
  sub_100079644([(id)v32 layout]);
  [(id)v32 depthEnabled];
  [(id)v32 parallaxDisabled];
  [(id)v32 clockAreaLuminance];
  [(id)v32 settlingEffectEnabled];
  sub_1000B90D0();
  v51((char *)a1, v8);
}

uint64_t sub_10007ABB4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10007AC88(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10001DA70((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10001DA70((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100015C54((uint64_t)v12);
  return v7;
}

uint64_t sub_10007AC88(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1000BBE60();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_10007AE44(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1000BBF20();
  if (!v8)
  {
    sub_1000BBF30();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1000BBF80();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10007AE44(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10007AEDC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10007B054(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10007B054(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10007AEDC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10008BA74(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1000BBEE0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1000BBF30();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1000BB9B0();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_1000BBF80();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1000BBF30();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10007B054(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001295C(&qword_1000ED848);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000BBF80();
  __break(1u);
  return result;
}

void sub_10007B1A4(uint64_t a1@<X8>)
{
}

uint64_t sub_10007B1C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_10007B218(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007B260@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10001295C(&qword_1000ED738);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = (int *)type metadata accessor for MessageDictionary();
  int64_t v7 = (uint64_t *)(v1 + v6[36]);
  if (v7[1] && (int64_t v8 = v6, v9 = (uint64_t *)(v1 + v6[37]), v10 = v9[1], v10 >> 60 != 15))
  {
    uint64_t v15 = *v7;
    uint64_t v16 = *v9;
    uint64_t v40 = v15;
    uint64_t v41 = v16;
    BOOL v17 = (void *)(v1 + v6[40]);
    uint64_t v18 = v17[1];
    uint64_t v42 = a1;
    v38[0] = v5;
    if (v18)
    {
      if (*v17 == 5457241 && v18 == 0xE300000000000000) {
        int v39 = 1;
      }
      else {
        int v39 = sub_1000BC1A0();
      }
    }
    else
    {
      int v39 = 0;
    }
    uint64_t v20 = (uint64_t *)(v1 + v8[39]);
    if (*((unsigned char *)v20 + 8)) {
      uint64_t v21 = 0;
    }
    else {
      uint64_t v21 = *v20;
    }
    uint64_t v22 = *(void *)(v1 + v8[38]);
    v38[1] = v21;
    void v38[2] = v22;
    uint64_t v23 = v8[41];
    uint64_t v24 = (uint64_t *)(v1 + v8[42]);
    uint64_t v26 = *v24;
    unint64_t v25 = v24[1];
    uint64_t v28 = *(void *)(v1 + v23);
    unint64_t v27 = *(void *)(v1 + v23 + 8);
    id v29 = (uint64_t *)(v1 + v8[43]);
    uint64_t v31 = *v29;
    unint64_t v30 = v29[1];
    uint64_t v32 = v41;
    sub_100017FA4(v41, v10);
    sub_100017FA4(v32, v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100017FA4(v26, v25);
    sub_100017FA4(v28, v27);
    sub_100017FA4(v31, v30);
    uint64_t v33 = v38[0];
    sub_1000BAA60();
    uint64_t v34 = sub_1000BAA70();
    uint64_t v35 = *(void *)(v34 - 8);
    uint64_t v36 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56);
    v36(v33, 0, 1, v34);
    sub_1000180CC(v32, v10);
    uint64_t v37 = v42;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v42, v33, v34);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v36)(v37, 0, 1, v34);
  }
  else
  {
    sub_100018190();
    size_t v11 = (void *)sub_1000BBD40();
    sub_1000BBBE0();
    sub_1000B8770();

    uint64_t v12 = sub_1000BAA70();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    return v13(a1, 1, 1, v12);
  }
}

uint64_t sub_10007B6A4(uint64_t a1)
{
  uint64_t v2 = sub_10001295C(&qword_1000ED738);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for WatchfacePreviewUnpacker()
{
  return &type metadata for WatchfacePreviewUnpacker;
}

uint64_t sub_10007B714()
{
  return sub_10007CAE4(&qword_1000ED8E8, (void (*)(uint64_t))&type metadata accessor for WatchfacePreview);
}

uint64_t sub_10007B75C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v82 = a3;
  uint64_t v85 = sub_1000BA050();
  uint64_t v86 = *(void *)(v85 - 8);
  uint64_t v4 = __chkstk_darwin(v85);
  uint64_t v87 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v88 = (char *)&v76 - v6;
  uint64_t v7 = sub_10001295C(&qword_1000EC660);
  __chkstk_darwin(v7 - 8);
  unint64_t v89 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000BB470();
  uint64_t v83 = *(void *)(v84 - 8);
  uint64_t v9 = __chkstk_darwin(v84);
  uint64_t v81 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v90 = (char *)&v76 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v94 = (char *)&v76 - v14;
  __chkstk_darwin(v13);
  uint64_t v80 = (char *)&v76 - v15;
  uint64_t v92 = sub_1000B87C0();
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v97 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1000B8E30();
  uint64_t v96 = *(void (**)(char *, uint64_t))(v95 - 8);
  uint64_t v17 = __chkstk_darwin(v95);
  uint64_t v19 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v76 - v20;
  uint64_t v22 = sub_1000BB3B0();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  unint64_t v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000BB4A0();
  uint64_t v98 = *(void *)(v26 - 8);
  uint64_t v27 = __chkstk_darwin(v26);
  id v29 = (char *)&v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v76 - v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, a1, v22);
  uint64_t v32 = v99;
  sub_1000BB480();
  if (v32)
  {
    uint64_t v106 = (uint64_t)v32;
    swift_errorRetain();
    sub_10001295C(&qword_1000EC648);
    sub_10007CAA4();
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      id v33 = v105;
      id v34 = [v105 domain];
      uint64_t v35 = sub_1000BB900();
      unint64_t v37 = v36;

      unint64_t v100 = v35;
      unint64_t v101 = v37;
      v107._countAndFlagsBits = 45;
      v107._object = (void *)0xE100000000000000;
      sub_1000BB9A0(v107);
      id v104 = [v33 code];
      v108._countAndFlagsBits = sub_1000BC190();
      sub_1000BB9A0(v108);
      swift_bridgeObjectRelease();
      sub_1000BB6C0();
      sub_10007CAE4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();
    }
    else
    {
      swift_errorRelease();
      swift_getErrorValue();
      swift_getDynamicType();
      sub_1000BC2B0();
      sub_1000BB6C0();
      sub_10007CAE4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();
    }
    return swift_errorRelease();
  }
  id v38 = v97;
  uint64_t v99 = v19;
  int v39 = v96;
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v31, v29, v26);
  uint64_t v40 = sub_1000BB490();
  unint64_t v42 = v41;
  uint64_t v79 = 0;
  uint64_t v77 = v31;
  uint64_t v78 = v26;
  uint64_t v43 = v95;
  (*((void (**)(char *, void, uint64_t))v39 + 13))(v21, enum case for ImageHeader.png(_:), v95);
  sub_100017F4C(v40, v42);
  char v44 = sub_1000B8300();
  uint64_t v45 = (void (*)(char *, uint64_t))*((void *)v39 + 1);
  v45(v21, v43);
  if ((v44 & 1) == 0)
  {
    uint64_t v96 = v45;
    sub_1000BB330();
    uint64_t v60 = sub_1000B87B0();
    os_log_type_t v61 = sub_1000BBBB0();
    unint64_t v62 = v42;
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v63 = 0;
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Failing watch face since image header was incorrect", v63, 2u);
      unint64_t v62 = v42;
      uint64_t v43 = v95;
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v91 + 8))(v38, v92);
    uint64_t v64 = v99;
    uint64_t v65 = v79;
    sub_1000B8310();
    if (v65)
    {
      uint64_t v66 = v65;
      sub_100018074(v40, v62);
    }
    else
    {
      sub_100018074(v40, v62);
      unint64_t v100 = 0;
      unint64_t v101 = 0xE000000000000000;
      sub_1000BBED0(33);
      swift_bridgeObjectRelease();
      unint64_t v100 = 0xD00000000000001FLL;
      unint64_t v101 = 0x80000001000CB3C0;
      v111._countAndFlagsBits = sub_1000B8E20();
      sub_1000BB9A0(v111);
      swift_bridgeObjectRelease();
      sub_1000BB6C0();
      sub_10007CAE4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      uint64_t v66 = swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();
      v96(v64, v43);
    }
    uint64_t v72 = v85;
    uint64_t v73 = v86;
    uint64_t v74 = v87;
    uint64_t v75 = v88;
    uint64_t v106 = v66;
    swift_errorRetain();
    sub_10001295C(&qword_1000EC648);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v74, v75, v72);
      unint64_t v100 = 0;
      unint64_t v101 = 0xE000000000000000;
      sub_1000BBED0(33);
      swift_bridgeObjectRelease();
      unint64_t v100 = 0xD00000000000001FLL;
      unint64_t v101 = 0x80000001000CB3C0;
      v112._countAndFlagsBits = sub_1000BA040();
      sub_1000BB9A0(v112);
      swift_bridgeObjectRelease();
      sub_1000BB6C0();
      sub_10007CAE4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();
      sub_100018074(v40, v62);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v72);
    }
    else
    {
      sub_100018074(v40, v62);
    }
    (*(void (**)(char *, uint64_t))(v98 + 8))(v77, v78);
    return swift_errorRelease();
  }
  id v102 = &type metadata for Data;
  uint64_t v103 = &protocol witness table for Data;
  unint64_t v100 = v40;
  unint64_t v101 = v42;
  uint64_t v46 = sub_1000BB440();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v89, 1, 1, v46);
  uint64_t v47 = v90;
  sub_1000BB450();
  sub_1000BA630();
  int v48 = v94;
  uint64_t v49 = v79;
  sub_1000BB430();
  uint64_t v50 = v40;
  unint64_t v51 = v42;
  if (!v49)
  {
    uint64_t v67 = v83;
    uint64_t v68 = *(void (**)(char *, uint64_t))(v83 + 8);
    uint64_t v69 = v84;
    v68(v47, v84);
    uint64_t v70 = v80;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v80, v48, v69);
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v81, v70, v69);
    sub_1000BA640();
    sub_100018074(v50, v51);
    v68(v70, v69);
    return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v77, v78);
  }
  unint64_t v52 = v42;
  (*(void (**)(char *, uint64_t))(v83 + 8))(v47, v84);
  uint64_t v106 = v49;
  swift_errorRetain();
  sub_10001295C(&qword_1000EC648);
  sub_10007CAA4();
  int v53 = swift_dynamicCast();
  uint64_t v54 = v98;
  if (v53)
  {
    swift_errorRelease();
    id v55 = v105;
    id v56 = [v105 domain];
    uint64_t v57 = sub_1000BB900();
    unint64_t v59 = v58;

    unint64_t v100 = v57;
    unint64_t v101 = v59;
    v109._countAndFlagsBits = 45;
    v109._object = (void *)0xE100000000000000;
    sub_1000BB9A0(v109);
    id v104 = [v55 code];
    v110._countAndFlagsBits = sub_1000BC190();
    sub_1000BB9A0(v110);
    swift_bridgeObjectRelease();
    sub_1000BB6C0();
    sub_10007CAE4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();

    sub_100018074(v50, v52);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v77, v78);
    return swift_errorRelease();
  }
  swift_errorRelease();
  swift_getErrorValue();
  swift_getDynamicType();
  sub_1000BC2B0();
  sub_1000BB6C0();
  sub_10007CAE4((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
  swift_allocError();
  sub_1000BB6B0();
  swift_willThrow();
  swift_errorRelease();
  sub_100018074(v50, v52);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v77, v78);
}

uint64_t sub_10007CA8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10007B75C(a1, a2, a3);
}

unint64_t sub_10007CAA4()
{
  unint64_t result = qword_1000ED8F0;
  if (!qword_1000ED8F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000ED8F0);
  }
  return result;
}

uint64_t sub_10007CAE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007CB2C()
{
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10007CC14()
{
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10007CC54()
{
  return sub_1000BC250();
}

Swift::Int sub_10007CD20()
{
  return sub_1000BC250();
}

Swift::Int sub_10007CD7C()
{
  return sub_1000BC250();
}

Swift::Int sub_10007CE7C()
{
  return sub_1000BC250();
}

uint64_t SyndicationActionDictionary.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001295C(&qword_1000ED8F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014C68(a1, a1[3]);
  sub_10007D214();
  sub_1000BC280();
  LOBYTE(v13) = 0;
  sub_1000BC170();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1000BC120();
    LOBYTE(v13) = 2;
    sub_1000BC120();
    LOBYTE(v13) = 3;
    sub_1000BC170();
    LOBYTE(v13) = 4;
    sub_1000BC180();
    LOBYTE(v13) = 5;
    sub_1000BC0A0();
    long long v9 = *(_OWORD *)(v3 + 112);
    long long v15 = *(_OWORD *)(v3 + 96);
    long long v16 = v9;
    char v17 = *(unsigned char *)(v3 + 128);
    long long v10 = *(_OWORD *)(v3 + 80);
    long long v13 = *(_OWORD *)(v3 + 64);
    long long v14 = v10;
    v12[15] = 6;
    sub_10007D268();
    sub_1000BC160();
    LOBYTE(v13) = 7;
    sub_1000BC170();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_10007D214()
{
  unint64_t result = qword_1000ED900;
  if (!qword_1000ED900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED900);
  }
  return result;
}

unint64_t sub_10007D268()
{
  unint64_t result = qword_1000ED908;
  if (!qword_1000ED908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED908);
  }
  return result;
}

__n128 SyndicationActionDictionary.init(from:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10007D488(a1, (uint64_t)v8);
  if (!v2)
  {
    long long v5 = v8[7];
    *(_OWORD *)(a2 + 96) = v8[6];
    *(_OWORD *)(a2 + 112) = v5;
    *(unsigned char *)(a2 + 128) = v9;
    long long v6 = v8[3];
    *(_OWORD *)(a2 + 32) = v8[2];
    *(_OWORD *)(a2 + 48) = v6;
    long long v7 = v8[5];
    *(_OWORD *)(a2 + 64) = v8[4];
    *(_OWORD *)(a2 + 80) = v7;
    __n128 result = (__n128)v8[1];
    *(_OWORD *)a2 = v8[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_10007D328(void *a1)
{
  return SyndicationActionDictionary.encode(to:)(a1);
}

uint64_t SyndicationActionDictionary.CodingKeys.rawValue.getter(char a1)
{
  return *(void *)&aSait_1[8 * a1];
}

uint64_t sub_10007D35C(char *a1, char *a2)
{
  return sub_10004E624(*a1, *a2);
}

Swift::Int sub_10007D368()
{
  return sub_10007CD20();
}

uint64_t sub_10007D374()
{
  return sub_10007CC14();
}

Swift::Int sub_10007D37C()
{
  return sub_10007CD20();
}

uint64_t sub_10007D384@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s24MessagesBlastDoorService27SyndicationActionDictionaryV10CodingKeysO8rawValueAESgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10007D3B4(void *a1@<X8>)
{
  *a1 = *(void *)&aSait_1[8 * *v1];
  a1[1] = 0xE400000000000000;
}

uint64_t sub_10007D3D0()
{
  return *(void *)&aSait_1[8 * *v0];
}

uint64_t sub_10007D3E8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = _s24MessagesBlastDoorService27SyndicationActionDictionaryV10CodingKeysO8rawValueAESgSS_tcfC_0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10007D410(uint64_t a1)
{
  unint64_t v2 = sub_10007D214();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10007D44C(uint64_t a1)
{
  unint64_t v2 = sub_10007D214();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10007D488@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000ED928);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v50 = a1;
  sub_100014C68(a1, v9);
  sub_10007D214();
  sub_1000BC270();
  if (v2) {
    return sub_100015C54((uint64_t)v50);
  }
  uint64_t v10 = v6;
  LOBYTE(v60) = 0;
  uint64_t v11 = v5;
  char v12 = sub_1000BC080();
  LOBYTE(v60) = 1;
  uint64_t v49 = sub_1000BC030();
  char v80 = v13 & 1;
  LOBYTE(v60) = 2;
  int v14 = v13;
  uint64_t v15 = sub_1000BC030();
  int v47 = v14;
  uint64_t v48 = v15;
  char v79 = v16 & 1;
  LOBYTE(v60) = 3;
  int v17 = v16;
  int v18 = sub_1000BC080();
  int v45 = v17;
  int v46 = v18;
  LOBYTE(v60) = 4;
  uint64_t v19 = sub_1000BC090();
  LOBYTE(v60) = 5;
  uint64_t v20 = sub_1000BBFB0();
  uint64_t v22 = v21;
  *(void *)&long long v44 = v20;
  LOBYTE(v51) = 6;
  sub_10007DFD0();
  swift_bridgeObjectRetain();
  *((void *)&v44 + 1) = v22;
  sub_1000BC070();
  uint64_t v23 = v60;
  uint64_t v24 = v62;
  uint64_t v39 = v63;
  uint64_t v40 = v61;
  uint64_t v37 = v65;
  uint64_t v38 = v67;
  int v34 = v68;
  int v35 = v66;
  char v78 = v66;
  char v77 = v68;
  char v81 = 7;
  uint64_t v41 = v64;
  swift_bridgeObjectRetain();
  uint64_t v43 = v23;
  swift_bridgeObjectRetain();
  uint64_t v42 = v24;
  swift_bridgeObjectRetain();
  uint64_t v36 = 0;
  LOBYTE(v24) = sub_1000BC080();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v11);
  LOBYTE(v51) = v24;
  BYTE1(v51) = v12;
  BYTE2(v51) = v46;
  uint64_t v36 = v19;
  *((void *)&v51 + 1) = v19;
  *(void *)&long long v52 = v49;
  BYTE8(v52) = v47 & 1;
  *(void *)&long long v53 = v48;
  BYTE8(v53) = v45 & 1;
  uint64_t v25 = *((void *)&v44 + 1);
  long long v54 = v44;
  uint64_t v27 = v42;
  uint64_t v26 = v43;
  uint64_t v28 = v41;
  *(void *)&long long v55 = v43;
  *((void *)&v55 + 1) = v40;
  *(void *)&long long v56 = v42;
  *((void *)&v56 + 1) = v39;
  *(void *)&long long v57 = v41;
  *((void *)&v57 + 1) = v37;
  LOBYTE(v58) = v35;
  *((void *)&v58 + 1) = v38;
  char v59 = v34;
  sub_10007E024((uint64_t)&v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100015C54((uint64_t)v50);
  LOBYTE(v60) = v24;
  BYTE1(v60) = v12;
  BYTE2(v60) = v46;
  uint64_t v61 = v36;
  uint64_t v62 = v49;
  LOBYTE(v63) = v80;
  uint64_t v64 = v48;
  LOBYTE(v65) = v79;
  uint64_t v66 = v44;
  uint64_t v67 = v25;
  uint64_t v68 = v26;
  uint64_t v69 = v40;
  uint64_t v70 = v27;
  uint64_t v71 = v39;
  uint64_t v72 = v28;
  uint64_t v73 = v37;
  char v74 = v78;
  uint64_t v75 = v38;
  char v76 = v77;
  uint64_t result = sub_10004DA50((uint64_t)&v60);
  long long v30 = v58;
  *(_OWORD *)(a2 + 96) = v57;
  *(_OWORD *)(a2 + 112) = v30;
  *(unsigned char *)(a2 + 128) = v59;
  long long v31 = v54;
  *(_OWORD *)(a2 + 32) = v53;
  *(_OWORD *)(a2 + 48) = v31;
  long long v32 = v56;
  *(_OWORD *)(a2 + 64) = v55;
  *(_OWORD *)(a2 + 80) = v32;
  long long v33 = v52;
  *(_OWORD *)a2 = v51;
  *(_OWORD *)(a2 + 16) = v33;
  return result;
}

uint64_t _s24MessagesBlastDoorService27SyndicationActionDictionaryV10CodingKeysO8rawValueAESgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000E16B8;
  v6._object = a2;
  unint64_t v4 = sub_1000BBFA0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 8) {
    return 8;
  }
  else {
    return v4;
  }
}

unint64_t sub_10007D9F4()
{
  unint64_t result = qword_1000ED910;
  if (!qword_1000ED910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED910);
  }
  return result;
}

unint64_t sub_10007DA4C()
{
  unint64_t result = qword_1000ED918;
  if (!qword_1000ED918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED918);
  }
  return result;
}

unint64_t sub_10007DAA4()
{
  unint64_t result = qword_1000ED920;
  if (!qword_1000ED920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED920);
  }
  return result;
}

uint64_t destroy for SyndicationActionDictionary()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SyndicationActionDictionary(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SyndicationActionDictionary(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = v6;
  uint64_t v7 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = v7;
  return a1;
}

__n128 initializeWithTake for SyndicationActionDictionary(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for SyndicationActionDictionary(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for SyndicationActionDictionary(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 129)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 56);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SyndicationActionDictionary(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 128) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 129) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 129) = 0;
    }
    if (a2) {
      *(void *)(result + 56) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyndicationActionDictionary()
{
  return &type metadata for SyndicationActionDictionary;
}

unsigned char *storeEnumTagSinglePayload for SyndicationActionDictionary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007DF98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyndicationActionDictionary.CodingKeys()
{
  return &type metadata for SyndicationActionDictionary.CodingKeys;
}

unint64_t sub_10007DFD0()
{
  unint64_t result = qword_1000ED930;
  if (!qword_1000ED930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED930);
  }
  return result;
}

uint64_t sub_10007E024(uint64_t a1)
{
  return a1;
}

uint64_t SyndicationActionDictionary.messagePartRange()()
{
  sub_10007E140(v0 + 16, (uint64_t)v6);
  sub_10007E140((uint64_t)v6, (uint64_t)&v7);
  if ((v8 & 1) != 0
    || (unint64_t v1 = v7, sub_10007E140(v0 + 32, (uint64_t)v5), sub_10007E140((uint64_t)v5, (uint64_t)&v9), (v10 & 1) != 0))
  {
    uint64_t result = sub_1000B8090();
    if (result) {
      return 0;
    }
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v3 = v9;
  if (v1 >= 0x7FFFFFFFFFFFFFFFLL) {
    unint64_t v1 = 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t result = sub_1000B8090();
  if (v1 == result)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v3 >= 0x7FFFFFFFFFFFFFFFLL) {
    uint64_t v4 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v4 = v3;
  }
  if (__OFADD__(v1, v4)) {
    goto LABEL_16;
  }
  if (((v1 + v4) & 0x8000000000000000) == 0) {
    return v1;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_10007E140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000ED938);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for LargeImageUnpacker()
{
  return &type metadata for LargeImageUnpacker;
}

uint64_t sub_10007E1B8()
{
  return sub_10007F20C(&qword_1000ED940, (void (*)(uint64_t))&type metadata accessor for LargeImage);
}

uint64_t sub_10007E200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v59[4] = a1;
  v59[3] = a2;
  uint64_t v2 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v2 - 8);
  uint64_t v68 = (char *)v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000BB6C0();
  uint64_t v69 = *(void *)(v4 - 8);
  uint64_t v70 = v4;
  __chkstk_darwin(v4);
  uint64_t v71 = (char *)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000B9D80();
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v65 = (void (*)(char *, char *, uint64_t))v6;
  __chkstk_darwin(v6);
  uint64_t v63 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000B9D60();
  uint64_t v61 = *(void *)(v8 - 8);
  uint64_t v62 = v8;
  __chkstk_darwin(v8);
  uint64_t v60 = (char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000B9A60();
  __chkstk_darwin(v10 - 8);
  v59[2] = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000B9DC0();
  uint64_t v67 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  v59[1] = (char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v66 = (char *)v59 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v59 - v18;
  uint64_t v20 = sub_1000BB5B0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)v59 - v25;
  sub_1000BB510();
  sub_1000B8AB0();
  sub_1000B8AA0();
  uint64_t v72 = v26;
  uint64_t v73 = v21;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  uint64_t v74 = v20;
  v27(v24, v26, v20);
  sub_1000BB710();
  swift_allocObject();
  uint64_t v28 = v75;
  sub_1000BB700();
  if (!v28)
  {
    uint64_t v75 = (void (*)(void, void, void))v12;
    swift_retain();
    sub_1000BB6E0();
    sub_1000B8AC0();
    sub_1000B8A90();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v72, v74);
  }
  char v79 = v28;
  swift_errorRetain();
  sub_10001295C(&qword_1000EC648);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_errorRelease();
    uint64_t v49 = v71;
    sub_1000BB6B0();
    sub_100018190();
    uint64_t v67 = sub_1000BBD20();
    sub_10001295C(&qword_1000EC5C8);
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_1000BF8A0;
    uint64_t v51 = (uint64_t)v68;
    uint64_t v52 = v69;
    uint64_t v75 = *(void (**)(void, void, void))(v69 + 16);
    uint64_t v53 = v70;
    v75(v68, v49, v70);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v51, 0, 1, v53);
    uint64_t v54 = sub_1000BB200();
    uint64_t v56 = v55;
    sub_100057A30(v51);
    *(void *)(v50 + 56) = &type metadata for String;
    *(void *)(v50 + 64) = sub_10001824C();
    *(void *)(v50 + 32) = v54;
    *(void *)(v50 + 40) = v56;
    sub_1000BBBE0();
    long long v57 = (void *)v67;
    sub_1000B8770();

    swift_bridgeObjectRelease();
    sub_10007F20C((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    v75(v58, v49, v53);
    swift_willThrow();
    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v49, v53);
    return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v72, v74);
  }
  swift_errorRelease();
  id v29 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
  uint64_t v75 = (void (*)(void, void, void))v12;
  v29(v66, v19, v12);
  uint64_t v77 = 0;
  unint64_t v78 = 0xE000000000000000;
  long long v30 = v60;
  sub_1000B9DA0();
  uint64_t v31 = sub_1000B9D50();
  unint64_t v33 = v32;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v30, v62);
  swift_bridgeObjectRelease();
  uint64_t v77 = v31;
  unint64_t v78 = v33;
  v80._countAndFlagsBits = 8250;
  v80._object = (void *)0xE200000000000000;
  sub_1000BB9A0(v80);
  int v34 = v63;
  sub_1000B9D90();
  uint64_t v35 = sub_1000B9D70();
  uint64_t v37 = v36;
  (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v64 + 8))(v34, v65);
  v81._countAndFlagsBits = v35;
  v81._object = v37;
  sub_1000BB9A0(v81);
  swift_bridgeObjectRelease();
  if (sub_1000B9DB0())
  {
    v76._countAndFlagsBits = 0;
    v76._object = (void *)0xE000000000000000;
    sub_1000BBED0(16);
    swift_bridgeObjectRelease();
    strcpy((char *)&v76, ". Extra Info: ");
    HIBYTE(v76._object) = -18;
    v82._countAndFlagsBits = sub_1000BB880();
    sub_1000BB9A0(v82);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000BB9A0(v76);
    swift_bridgeObjectRelease();
  }
  uint64_t v38 = v71;
  sub_1000BB6B0();
  sub_100018190();
  uint64_t v39 = (void *)sub_1000BBD20();
  sub_10001295C(&qword_1000EC5C8);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1000BF8A0;
  uint64_t v41 = (uint64_t)v68;
  uint64_t v42 = v69;
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  uint64_t v43 = v70;
  v65(v68, v38, v70);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v41, 0, 1, v43);
  uint64_t v44 = sub_1000BB200();
  uint64_t v46 = v45;
  sub_100057A30(v41);
  *(void *)(v40 + 56) = &type metadata for String;
  *(void *)(v40 + 64) = sub_10001824C();
  *(void *)(v40 + 32) = v44;
  *(void *)(v40 + 40) = v46;
  sub_1000BBBE0();
  sub_1000B8770();

  swift_bridgeObjectRelease();
  sub_10007F20C((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
  swift_allocError();
  v65(v47, v38, v43);
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v38, v43);
  (*(void (**)(char *, void (*)(void, void, void)))(v67 + 8))(v66, v75);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v74);
  return swift_errorRelease();
}

uint64_t sub_10007F1F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007E200(a1, a2);
}

uint64_t sub_10007F20C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007F254()
{
  uint64_t v0 = sub_1000BAB80();
  uint64_t v44 = *(void (***)(char *, uint64_t))(v0 - 8);
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v41 - v4;
  uint64_t v6 = sub_10001295C(&qword_1000ED948);
  __chkstk_darwin(v6 - 8);
  uint64_t v56 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000BABD0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001295C(&qword_1000EC588);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BB4F0();
  uint64_t v15 = sub_1000BA7D0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1000184DC((uint64_t)v14, &qword_1000EC588);
    uint64_t v17 = &_swiftEmptyArrayStorage;
LABEL_19:
    uint64_t v40 = v17[2];
    swift_bridgeObjectRelease();
    return v40 != 0;
  }
  uint64_t v54 = v3;
  uint64_t v18 = sub_1000BA7B0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v14, v15);
  uint64_t v17 = &_swiftEmptyArrayStorage;
  char v59 = &_swiftEmptyArrayStorage;
  uint64_t v55 = v18;
  uint64_t v20 = *(void *)(v18 + 16);
  if (!v20)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v51 = v11;
  uint64_t v52 = v0;
  uint64_t v53 = v5;
  unint64_t v21 = 0;
  uint64_t v22 = v55 + 32;
  uint64_t v23 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v48 = (void (**)(char *, char *, uint64_t))(v9 + 32);
  int v47 = (void (**)(char *, char *, uint64_t))(v44 + 2);
  uint64_t v46 = (uint64_t (**)(char *, uint64_t))(v44 + 11);
  int v45 = enum case for FileTransferAttribute.AttachmentSubtype.sticker(_:);
  ++v44;
  uint64_t v43 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v49 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v50 = v8;
  uint64_t v42 = v20;
  while (v21 < *(void *)(v55 + 16))
  {
    sub_1000181E8(v22, (uint64_t)v58);
    sub_1000181E8((uint64_t)v58, (uint64_t)v57);
    sub_10001295C(&qword_1000ECAF8);
    int v25 = swift_dynamicCast();
    uint64_t v26 = *v23;
    if (v25)
    {
      uint64_t v27 = v56;
      v26(v56, 0, 1, v8);
      uint64_t v28 = v51;
      (*v48)(v51, v27, v8);
      id v29 = v53;
      sub_1000BAB90();
      long long v30 = v54;
      uint64_t v31 = v52;
      (*v47)(v54, v29, v52);
      int v32 = (*v46)(v30, v31);
      unint64_t v33 = *v44;
      (*v44)(v30, v31);
      int v34 = v29;
      uint64_t v35 = v31;
      uint64_t v23 = v49;
      uint64_t v8 = v50;
      v33(v34, v35);
      (*v43)(v28, v8);
      BOOL v36 = v32 == v45;
      uint64_t v20 = v42;
      if (v36)
      {
        sub_1000181D0(v58, (uint64_t)v57);
        uint64_t v37 = v59;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10007F960(0, v37[2] + 1, 1);
          uint64_t v37 = v59;
        }
        unint64_t v39 = v37[2];
        unint64_t v38 = v37[3];
        if (v39 >= v38 >> 1)
        {
          sub_10007F960(v38 > 1, v39 + 1, 1);
          uint64_t v37 = v59;
        }
        v37[2] = v39 + 1;
        uint64_t result = sub_1000181D0(v57, (uint64_t)&v37[5 * v39 + 4]);
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v24 = (uint64_t)v56;
      v26(v56, 1, 1, v8);
      sub_1000184DC(v24, &qword_1000ED948);
    }
    uint64_t result = sub_100015C54((uint64_t)v58);
LABEL_7:
    ++v21;
    v22 += 40;
    if (v20 == v21)
    {
      uint64_t v17 = v59;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10007F7D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007FA54(a1, a2, a3, *v3);
  char *v3 = (char *)result;
  return result;
}

uint64_t sub_10007F7F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007FD58(a1, a2, a3, (void *)*v3, &qword_1000ED988, (uint64_t (*)(void))&type metadata accessor for Handwriting.DrawingStroke);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_10007F834(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007FD58(a1, a2, a3, (void *)*v3, &qword_1000ED980, (uint64_t (*)(void))&type metadata accessor for EncodedAttachments.Content);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_10007F870(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007FD58(a1, a2, a3, (void *)*v3, &qword_1000ED998, (uint64_t (*)(void))&type metadata accessor for StrokePoint);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_10007F8AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007FD58(a1, a2, a3, (void *)*v3, &qword_1000ED958, (uint64_t (*)(void))&type metadata accessor for RelayReachabilityHandleResult);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_10007F8E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007FD58(a1, a2, a3, (void *)*v3, &qword_1000ED950, (uint64_t (*)(void))&type metadata accessor for SMSCTPart);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_10007F924(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007FD58(a1, a2, a3, (void *)*v3, &qword_1000ED960, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_10007F960(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007FBB4(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_10007F980(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007FD58(a1, a2, a3, (void *)*v3, &qword_1000ED990, (uint64_t (*)(void))&type metadata accessor for Handwriting.DrawingStrokePoint);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_10007F9BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007FD58(a1, a2, a3, (void *)*v3, &qword_1000ED970, (uint64_t (*)(void))&type metadata accessor for PhotosPoster.ParallaxLayer);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_10007F9F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007FD58(a1, a2, a3, (void *)*v3, &qword_1000ED978, (uint64_t (*)(void))&type metadata accessor for Color);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_10007FA34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10007FFA0(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_10007FA54(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001295C(&qword_1000ED968);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000BBF80();
  __break(1u);
  return result;
}

uint64_t sub_10007FBB4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001295C(&qword_1000ECAF0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = &_swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_10001295C(&qword_1000ECAF8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000BBF80();
  __break(1u);
  return result;
}

uint64_t sub_10007FD58(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10001295C(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1000BBF80();
  __break(1u);
  return result;
}

uint64_t sub_10007FFA0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001295C(&qword_1000ECAD8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000BBF80();
  __break(1u);
  return result;
}

uint64_t Optional.tryUnwrap(_:file:line:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v20 = a5;
  v21._countAndFlagsBits = a1;
  v21._object = a2;
  uint64_t v11 = *(void *)(a6 - 8);
  __chkstk_darwin(a1);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v15, v14);
  uint64_t v16 = *(void *)(a6 + 16);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a7, v13, v16);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a6);
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  swift_bridgeObjectRetain();
  v25._countAndFlagsBits = 58;
  v25._object = (void *)0xE100000000000000;
  sub_1000BB9A0(v25);
  uint64_t v24 = v20;
  v26._countAndFlagsBits = sub_1000BC190();
  sub_1000BB9A0(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 58;
  v27._object = (void *)0xE100000000000000;
  sub_1000BB9A0(v27);
  sub_1000BB9A0(v21);
  sub_1000BB6C0();
  sub_100017E10();
  swift_allocError();
  sub_1000BB6B0();
  return swift_willThrow();
}

ValueMetadata *type metadata accessor for NotifyRecipientCommandUnpacker()
{
  return &type metadata for NotifyRecipientCommandUnpacker;
}

unint64_t sub_100080378(uint64_t a1)
{
  unint64_t result = sub_100012BEC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000803A4()
{
  unint64_t result = qword_1000ED9A0;
  if (!qword_1000ED9A0)
  {
    sub_1000BAC60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED9A0);
  }
  return result;
}

uint64_t sub_1000803FC(uint64_t a1, uint64_t a2)
{
  return sub_1000A1450(a1, a2);
}

ValueMetadata *type metadata accessor for StyleSheetUnpacker()
{
  return &type metadata for StyleSheetUnpacker;
}

unint64_t sub_100080428()
{
  unint64_t result = qword_1000ED9A8;
  if (!qword_1000ED9A8)
  {
    sub_1000B8D30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED9A8);
  }
  return result;
}

uint64_t sub_100080480@<X0>(uint64_t a1@<X8>)
{
  uint64_t v87 = a1;
  uint64_t v96 = sub_1000B87C0();
  uint64_t v118 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  Swift::String v107 = (char *)&v81 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_1000B8CD0();
  uint64_t v125 = *(void *)(v119 - 8);
  uint64_t v2 = __chkstk_darwin(v119);
  unint64_t v117 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v121 = (char *)&v81 - v4;
  uint64_t v126 = sub_1000B8920();
  uint64_t v97 = *(void *)(v126 - 8);
  uint64_t v5 = __chkstk_darwin(v126);
  uint64_t v116 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v120 = (char *)&v81 - v7;
  uint64_t v109 = sub_1000B8CE0();
  uint64_t v98 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  Swift::String v108 = (char **)((char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1000B8930();
  uint64_t v111 = *(void *)(v9 - 8);
  uint64_t v112 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v115 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  Swift::String v110 = (char *)&v81 - v12;
  uint64_t v13 = sub_1000B89A0();
  uint64_t v86 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000BB950();
  __chkstk_darwin(v16 - 8);
  long long v123 = (void (**)(char *, uint64_t))sub_1000B8240();
  uint64_t v17 = (uint64_t)*(v123 - 1);
  __chkstk_darwin(v123);
  uint64_t v19 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000BB3E0();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BB3A0();
  sub_1000BB3D0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  sub_1000BB930();
  uint64_t v24 = v124;
  sub_1000BB8C0();
  if (v24) {
    return (*(uint64_t (**)(char *, void))(v17 + 8))(v19, v123);
  }
  uint64_t v26 = v118;
  uint64_t v82 = v13;
  (*(void (**)(char *, void))(v17 + 8))(v19, v123);
  sub_1000B87D0();
  uint64_t result = sub_1000B8980();
  uint64_t v27 = result;
  uint64_t v105 = *(void *)(result + 16);
  if (v105)
  {
    Swift::String v81 = v15;
    unint64_t v28 = 0;
    uint64_t v29 = v111;
    unint64_t v104 = result + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    uint64_t v103 = v111 + 16;
    uint64_t v102 = v111 + 88;
    int v101 = enum case for StyleSheet.Rule.qualified(_:);
    int v90 = enum case for StyleSheet.Rule.atKeyword(_:);
    uint64_t v106 = (void (**)(char *, uint64_t))(v111 + 8);
    uint64_t v94 = (void (**)(char *, uint64_t))(v111 + 96);
    uint64_t v122 = v125 + 32;
    long long v123 = (void (**)(char *, uint64_t))(v97 + 8);
    uint64_t v124 = v97 + 16;
    int v83 = enum case for StyleSheet.Rule.atKeyword(_:);
    uint64_t v92 = (void (**)(void))(v98 + 104);
    unint64_t v89 = (void (**)(char *, uint64_t))(v26 + 8);
    int v85 = enum case for StyleSheet.Rule.qualified(_:);
    uint64_t v91 = v98 + 32;
    uint64_t v113 = &_swiftEmptyArrayStorage;
    uint64_t v30 = v119;
    uint64_t v31 = v117;
    int v32 = v121;
    uint64_t v33 = v112;
    int v34 = v110;
    uint64_t v100 = result;
    while (1)
    {
      if (v28 >= *(void *)(v27 + 16))
      {
        __break(1u);
        return result;
      }
      uint64_t v36 = *(void *)(v29 + 72);
      unint64_t v114 = v28;
      unint64_t v37 = v104 + v36 * v28;
      unint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v29 + 16);
      uint64_t v39 = v29;
      v38(v34, v37, v33);
      v38(v115, (unint64_t)v34, v33);
      uint64_t v40 = v115;
      int v41 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v115, v33);
      if (v41 == v101)
      {
        (*v94)(v40, v33);
        uint64_t v95 = *(void *)v40;
        uint64_t v42 = *((void *)v40 + 2);
        uint64_t v99 = *((void *)v40 + 1);
        uint64_t v43 = *(void *)(v42 + 16);
        if (v43)
        {
          uint64_t v44 = v42 + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80));
          uint64_t v118 = *(void *)(v97 + 72);
          int v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16);
          uint64_t v93 = v42;
          swift_bridgeObjectRetain();
          uint64_t v46 = &_swiftEmptyArrayStorage;
          uint64_t v47 = v126;
          uint64_t v48 = (uint64_t)v120;
          do
          {
            v45(v48, v44, v47);
            sub_100081304(v48, v32);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v46 = (void *)sub_10003EBD0(0, v46[2] + 1, 1, (unint64_t)v46);
            }
            uint64_t v49 = v125;
            unint64_t v51 = v46[2];
            unint64_t v50 = v46[3];
            if (v51 >= v50 >> 1) {
              uint64_t v46 = (void *)sub_10003EBD0(v50 > 1, v51 + 1, 1, (unint64_t)v46);
            }
            v46[2] = v51 + 1;
            unint64_t v52 = (unint64_t)v46
                + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))
                + *(void *)(v49 + 72) * v51;
            int v32 = v121;
            uint64_t v30 = v119;
            (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v52, v121, v119);
            uint64_t v48 = (uint64_t)v120;
            uint64_t v47 = v126;
            (*v123)(v120, v126);
            v44 += v118;
            --v43;
          }
          while (v43);
          swift_bridgeObjectRelease_n();
          uint64_t v31 = v117;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v46 = &_swiftEmptyArrayStorage;
        }
        uint64_t v65 = v108;
        int v34 = v110;
        unint64_t v66 = (unint64_t)v113;
        unint64_t v35 = v114;
        uint64_t v67 = v99;
        *Swift::String v108 = v95;
        v65[1] = v67;
        v65[2] = v46;
      }
      else
      {
        uint64_t v53 = v107;
        if (v41 != v90)
        {
          sub_100083C1C();
          swift_allocError();
          *uint64_t v64 = 0;
          swift_willThrow();
          (*v106)(v40, v33);
          int v34 = v110;
          uint64_t v27 = v100;
          sub_1000BB320();
          uint64_t v68 = sub_1000B87B0();
          os_log_type_t v69 = sub_1000BBBB0();
          if (os_log_type_enabled(v68, v69))
          {
            uint64_t v70 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v70 = 0;
            _os_log_impl((void *)&_mh_execute_header, v68, v69, "Failed to unpack rule from LinkPresentation StyleSheet", v70, 2u);
            uint64_t v53 = v107;
            swift_slowDealloc();
          }
          swift_errorRelease();

          (*v89)(v53, v96);
          int v32 = v121;
          unint64_t v35 = v114;
          goto LABEL_6;
        }
        (*v94)(v40, v33);
        uint64_t v93 = *(void *)v40;
        uint64_t v95 = *((void *)v40 + 1);
        uint64_t v88 = *((void *)v40 + 2);
        uint64_t v54 = *((void *)v40 + 4);
        uint64_t v99 = *((void *)v40 + 3);
        uint64_t v55 = *(void *)(v54 + 16);
        if (v55)
        {
          uint64_t v56 = v54 + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80));
          uint64_t v118 = *(void *)(v97 + 72);
          long long v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16);
          uint64_t v84 = v54;
          swift_bridgeObjectRetain();
          uint64_t v58 = &_swiftEmptyArrayStorage;
          uint64_t v59 = v126;
          uint64_t v60 = (uint64_t)v116;
          do
          {
            v57(v60, v56, v59);
            sub_100081304(v60, v31);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v58 = (void *)sub_10003EBD0(0, v58[2] + 1, 1, (unint64_t)v58);
            }
            unint64_t v62 = v58[2];
            unint64_t v61 = v58[3];
            if (v62 >= v61 >> 1) {
              uint64_t v58 = (void *)sub_10003EBD0(v61 > 1, v62 + 1, 1, (unint64_t)v58);
            }
            long long v58[2] = v62 + 1;
            unint64_t v63 = (unint64_t)v58
                + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))
                + *(void *)(v125 + 72) * v62;
            uint64_t v31 = v117;
            (*(void (**)(unint64_t, char *, uint64_t))(v125 + 32))(v63, v117, v30);
            uint64_t v60 = (uint64_t)v116;
            uint64_t v59 = v126;
            (*v123)(v116, v126);
            v56 += v118;
            --v55;
          }
          while (v55);
          swift_bridgeObjectRelease_n();
          int v32 = v121;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v58 = &_swiftEmptyArrayStorage;
        }
        uint64_t v71 = v108;
        int v34 = v110;
        uint64_t v72 = v99;
        uint64_t v73 = v95;
        uint64_t v74 = v88;
        *Swift::String v108 = v93;
        v71[1] = v73;
        v71[2] = v74;
        v71[3] = v72;
        v71[4] = v58;
        unint64_t v66 = (unint64_t)v113;
        unint64_t v35 = v114;
      }
      (*v92)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v66 = sub_10003EC04(0, *(void *)(v66 + 16) + 1, 1, v66);
      }
      unint64_t v76 = *(void *)(v66 + 16);
      unint64_t v75 = *(void *)(v66 + 24);
      uint64_t v113 = (void *)v66;
      if (v76 >= v75 >> 1) {
        uint64_t v113 = (void *)sub_10003EC04(v75 > 1, v76 + 1, 1, (unint64_t)v113);
      }
      uint64_t v77 = v113;
      *((void *)v113 + 2) = v76 + 1;
      (*(void (**)(unint64_t, void *, uint64_t))(v98 + 32))((unint64_t)v77+ ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80))+ *(void *)(v98 + 72) * v76, v108, v109);
      uint64_t v27 = v100;
LABEL_6:
      unint64_t v28 = v35 + 1;
      uint64_t v33 = v112;
      uint64_t result = ((uint64_t (*)(char *, uint64_t))*v106)(v34, v112);
      uint64_t v29 = v111;
      if (v28 == v105)
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = v81;
        unint64_t v78 = v113;
        goto LABEL_40;
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v78 = &_swiftEmptyArrayStorage;
LABEL_40:
  uint64_t v79 = v82;
  uint64_t v80 = v86;
  if (!v78[2]) {
    swift_bridgeObjectRelease();
  }
  sub_1000B8D10();
  return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v15, v79);
}

uint64_t sub_100081304@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v112 = a2;
  unint64_t v114 = (char *)a1;
  uint64_t v2 = sub_10001295C(&qword_1000ED9B8);
  __chkstk_darwin(v2 - 8);
  uint64_t v97 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001295C(&qword_1000ED9C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v99 = (uint64_t)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000B8C60();
  uint64_t v95 = *(void *)(v6 - 8);
  uint64_t v96 = v6;
  __chkstk_darwin(v6);
  uint64_t v94 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1000B8860();
  uint64_t v98 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  int v101 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000B8900();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v103 = v9;
  uint64_t v104 = v10;
  __chkstk_darwin(v9);
  uint64_t v102 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_1000B8910();
  uint64_t v107 = *(void *)(v105 - 8);
  uint64_t v12 = __chkstk_darwin(v105);
  uint64_t v106 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  Swift::String v108 = (char *)&v93 - v14;
  uint64_t v111 = sub_1000B8990();
  uint64_t v109 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v16 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10001295C(&qword_1000ED9C8);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v93 - v21;
  uint64_t v23 = sub_1000B8970();
  uint64_t v110 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  unint64_t v28 = (char *)&v93 - v27;
  uint64_t v29 = sub_1000B8920();
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  int v32 = (char *)&v93 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v32, v114, v29);
  int v33 = (*(uint64_t (**)(char *, uint64_t))(v30 + 88))(v32, v29);
  if (v33 == enum case for StyleSheet.Rule.Declaration.invalid(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v32, v29);
    uint64_t v34 = *((void *)v32 + 2);
    uint64_t v35 = *((void *)v32 + 3);
    uint64_t v36 = v112;
    *uint64_t v112 = *(_OWORD *)v32;
    *((void *)v36 + 2) = v34;
    *((void *)v36 + 3) = v35;
    unint64_t v37 = (unsigned int *)&enum case for StyleSheet.Rule.Declaration.invalid(_:);
LABEL_5:
    uint64_t v40 = *v37;
    uint64_t v41 = sub_1000B8CD0();
    return (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v36, v40, v41);
  }
  uint64_t v93 = v26;
  unint64_t v114 = v22;
  uint64_t v39 = v110;
  uint64_t v38 = v111;
  if (v33 == enum case for StyleSheet.Rule.Declaration.color(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v32, v29);
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v28, v32, v23);
    sub_1000B8940();
    sub_1000B8960();
    sub_1000B8950();
    uint64_t v36 = v112;
    sub_1000B8CF0();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v23);
    unint64_t v37 = (unsigned int *)&enum case for StyleSheet.Rule.Declaration.color(_:);
    goto LABEL_5;
  }
  if (v33 == enum case for StyleSheet.Rule.Declaration.backgroundColor(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v32, v29);
    uint64_t v43 = (uint64_t)v114;
    sub_100083C70((uint64_t)v32, (uint64_t)v114);
    sub_1000182A0(v43, (uint64_t)v20, &qword_1000ED9C8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v20, 1, v23) == 1)
    {
      sub_1000184DC(v43, &qword_1000ED9C8);
      sub_1000184DC((uint64_t)v20, &qword_1000ED9C8);
      uint64_t v44 = sub_1000B8D00();
      uint64_t v36 = v112;
      (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v112, 1, 1, v44);
      unint64_t v37 = (unsigned int *)&enum case for StyleSheet.Rule.Declaration.backgroundColor(_:);
      goto LABEL_5;
    }
    uint64_t v49 = v93;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v93, v20, v23);
    sub_1000B8940();
    sub_1000B8960();
    sub_1000B8950();
    unint64_t v50 = v112;
    sub_1000B8CF0();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v49, v23);
    sub_1000184DC(v43, &qword_1000ED9C8);
    uint64_t v51 = sub_1000B8D00();
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v50, 0, 1, v51);
    uint64_t v52 = enum case for StyleSheet.Rule.Declaration.backgroundColor(_:);
    uint64_t v53 = sub_1000B8CD0();
    return (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 104))(v50, v52, v53);
  }
  if (v33 == enum case for StyleSheet.Rule.Declaration.textAlign(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v32, v29);
    uint64_t v45 = v109;
    uint64_t v46 = v38;
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v16, v32, v38);
    int v47 = (*(uint64_t (**)(char *, uint64_t))(v45 + 88))(v16, v38);
    if (v47 == enum case for StyleSheet.TextAlign.left(_:))
    {
      uint64_t v48 = (unsigned int *)&enum case for StyleSheet.TextAlign.left(_:);
    }
    else
    {
      int v63 = v47;
      if (v47 != enum case for StyleSheet.TextAlign.center(_:))
      {
        int v74 = enum case for StyleSheet.TextAlign.right(_:);
        uint64_t v65 = sub_1000B8D20();
        unint64_t v66 = *(void (**)(_OWORD *, uint64_t, uint64_t))(*(void *)(v65 - 8) + 104);
        if (v63 != v74)
        {
          unint64_t v78 = v112;
          v66(v112, enum case for StyleSheet.TextAlign.left(_:), v65);
          uint64_t v79 = enum case for StyleSheet.Rule.Declaration.textAlign(_:);
          uint64_t v80 = sub_1000B8CD0();
          (*(void (**)(_OWORD *, uint64_t, uint64_t))(*(void *)(v80 - 8) + 104))(v78, v79, v80);
          return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v16, v46);
        }
        uint64_t v68 = enum case for StyleSheet.TextAlign.right(_:);
        uint64_t v36 = v112;
        uint64_t v67 = v112;
LABEL_20:
        v66(v67, v68, v65);
        unint64_t v37 = (unsigned int *)&enum case for StyleSheet.Rule.Declaration.textAlign(_:);
        goto LABEL_5;
      }
      uint64_t v48 = (unsigned int *)&enum case for StyleSheet.TextAlign.center(_:);
    }
    uint64_t v64 = *v48;
    uint64_t v65 = sub_1000B8D20();
    unint64_t v66 = *(void (**)(_OWORD *, uint64_t, uint64_t))(*(void *)(v65 - 8) + 104);
    uint64_t v36 = v112;
    uint64_t v67 = v112;
    uint64_t v68 = v64;
    goto LABEL_20;
  }
  uint64_t v54 = v113;
  if (v33 == enum case for StyleSheet.Rule.Declaration.font(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v32, v29);
    uint64_t v56 = v107;
    uint64_t v55 = v108;
    uint64_t v57 = v105;
    (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v108, v32, v105);
    uint64_t v58 = v106;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v106, v55, v57);
    int v59 = (*(uint64_t (**)(char *, uint64_t))(v56 + 88))(v58, v57);
    if (v59 != enum case for StyleSheet.Font.specified(_:))
    {
      if (v59 != enum case for StyleSheet.Font.system(_:))
      {
        sub_100083C1C();
        swift_allocError();
        unsigned char *v76 = 2;
        swift_willThrow();
        uint64_t v77 = *(void (**)(char *, uint64_t))(v56 + 8);
        v77(v55, v57);
        return ((uint64_t (*)(char *, uint64_t))v77)(v58, v57);
      }
      (*(void (**)(char *, uint64_t))(v56 + 96))(v58, v57);
      uint64_t v69 = v98;
      uint64_t v70 = v100;
      uint64_t v71 = v101;
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v101, v58, v100);
      uint64_t v72 = (uint64_t)v97;
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v97, v71, v70);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v72, 0, 1, v70);
      uint64_t v73 = v99;
      sub_100082628(v72, v99);
      if (v54)
      {
        sub_1000184DC(v72, &qword_1000ED9B8);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v70);
      }
      else
      {
        sub_1000184DC(v72, &qword_1000ED9B8);
        uint64_t v83 = v95;
        uint64_t v84 = v96;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v73, 1, v96) != 1)
        {
          (*(void (**)(char *, uint64_t))(v69 + 8))(v101, v70);
          (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v57);
          uint64_t v86 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 32);
          uint64_t v87 = v94;
          v86(v94, v73, v84);
          uint64_t v88 = v112;
          v86((char *)v112, (uint64_t)v87, v84);
          uint64_t v89 = enum case for StyleSheet.Font.system(_:);
          uint64_t v90 = sub_1000B8CC0();
          (*(void (**)(_OWORD *, uint64_t, uint64_t))(*(void *)(v90 - 8) + 104))(v88, v89, v90);
          uint64_t v91 = enum case for StyleSheet.Rule.Declaration.font(_:);
          uint64_t v92 = sub_1000B8CD0();
          return (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 104))(v88, v91, v92);
        }
        sub_1000184DC(v73, &qword_1000ED9C0);
        sub_100083C1C();
        swift_allocError();
        unsigned char *v85 = 7;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v69 + 8))(v101, v70);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v55, v57);
    }
    (*(void (**)(char *, uint64_t))(v56 + 96))(v58, v57);
    uint64_t v60 = v103;
    uint64_t v61 = v104;
    unint64_t v62 = v102;
    (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v102, v58, v103);
    uint64_t v36 = v112;
    sub_100082264((uint64_t)v112);
    if (!v54)
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v60);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v108, v57);
      uint64_t v81 = enum case for StyleSheet.Font.specified(_:);
      uint64_t v82 = sub_1000B8CC0();
      (*(void (**)(_OWORD *, uint64_t, uint64_t))(*(void *)(v82 - 8) + 104))(v36, v81, v82);
      unint64_t v37 = (unsigned int *)&enum case for StyleSheet.Rule.Declaration.font(_:);
      goto LABEL_5;
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v60);
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v108, v57);
  }
  else
  {
    if (v33 == enum case for StyleSheet.Rule.Declaration.backgroundImage(_:))
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v32, v29);
      uint64_t v36 = v112;
      *uint64_t v112 = *(_OWORD *)v32;
      unint64_t v37 = (unsigned int *)&enum case for StyleSheet.Rule.Declaration.backgroundImage(_:);
      goto LABEL_5;
    }
    sub_100083C1C();
    swift_allocError();
    *unint64_t v75 = 1;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  }
}

uint64_t sub_100082264@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v2 = sub_10001295C(&qword_1000ED9D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v30 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001295C(&qword_1000ED9D8);
  __chkstk_darwin(v4 - 8);
  uint64_t v29 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001295C(&qword_1000ED9E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001295C(&qword_1000ED9E8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001295C(&qword_1000ED9F0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10001295C(&qword_1000ED9F8);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10001295C(&qword_1000EDA00);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10001295C(&qword_1000EDA08);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (uint64_t *)((char *)&v28 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000B88B0();
  sub_100082950((uint64_t)v20, v23);
  uint64_t result = sub_1000184DC((uint64_t)v20, &qword_1000EDA00);
  if (!v1)
  {
    uint64_t v25 = (uint64_t)v11;
    uint64_t v26 = (uint64_t)v29;
    uint64_t v27 = (uint64_t)v30;
    sub_1000B88E0();
    sub_10008321C((uint64_t)v14, (uint64_t)v17);
    sub_1000184DC((uint64_t)v14, &qword_1000ED9F0);
    sub_1000B88C0();
    sub_100083544((uint64_t)v8, v25);
    sub_1000184DC((uint64_t)v8, &qword_1000ED9E0);
    sub_1000B88F0();
    sub_10008386C(v27, v26);
    sub_1000184DC(v27, &qword_1000ED9D0);
    sub_1000B88D0();
    return sub_1000B8CB0();
  }
  return result;
}

uint64_t sub_100082628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10001295C(&qword_1000ED9C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001295C(&qword_1000ED9B8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000B8860();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182A0(a1, (uint64_t)v9, &qword_1000ED9B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1000184DC((uint64_t)v9, &qword_1000ED9B8);
    uint64_t v14 = sub_1000B8C60();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_1000B8850();
    sub_1000B8C50();
    uint64_t v16 = sub_1000B8C60();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1)
    {
      sub_1000184DC((uint64_t)v6, &qword_1000ED9C0);
      sub_100083C1C();
      swift_allocError();
      unsigned char *v18 = 7;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v6, v16);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a2, 0, 1, v16);
    }
  }
}

uint64_t sub_100082950@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v76 = (char *)a1;
  unint64_t v75 = a2;
  uint64_t v2 = sub_10001295C(&qword_1000EDA10);
  __chkstk_darwin(v2 - 8);
  uint64_t v69 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000B8C10();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v70 = v4;
  uint64_t v71 = v5;
  __chkstk_darwin(v4);
  uint64_t v68 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000B8810();
  uint64_t v73 = *(void *)(v7 - 8);
  uint64_t v74 = v7;
  __chkstk_darwin(v7);
  uint64_t v72 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001295C(&qword_1000EDA18);
  __chkstk_darwin(v9 - 8);
  uint64_t v64 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000B8C30();
  uint64_t v66 = *(void *)(v11 - 8);
  uint64_t v67 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000B8830();
  uint64_t v65 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10001295C(&qword_1000EDA00);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000B8840();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v62 - v25;
  sub_1000182A0((uint64_t)v76, (uint64_t)v19, &qword_1000EDA00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1000184DC((uint64_t)v19, &qword_1000EDA00);
    uint64_t v27 = sub_1000B8C40();
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v75, 1, 1, v27);
  }
  int v63 = v13;
  unint64_t v76 = (char *)v14;
  uint64_t v29 = v72;
  uint64_t v30 = v73;
  uint64_t v31 = v74;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v19, v20);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v24, v26, v20);
  int v32 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v24, v20);
  uint64_t v33 = v20;
  if (v32 == enum case for StyleSheet.Font.Size.specified(_:))
  {
    unint64_t v76 = v26;
    (*(void (**)(char *, uint64_t))(v21 + 96))(v24, v20);
    uint64_t v34 = *(void *)v24;
    uint64_t v35 = sub_10001295C(&qword_1000EDA20);
    uint64_t v36 = v31;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v29, &v24[*(int *)(v35 + 48)], v31);
    sub_1000B8800();
    uint64_t v37 = v33;
    uint64_t v38 = (uint64_t)v69;
    sub_1000B8C00();
    uint64_t v39 = v70;
    uint64_t v40 = v71;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v38, 1, v70) == 1)
    {
      sub_1000184DC(v38, &qword_1000EDA10);
      sub_100083C1C();
      swift_allocError();
      unsigned char *v41 = 4;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v36);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v76, v37);
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v36);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v76, v37);
    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 32);
    unint64_t v50 = v68;
    v49(v68, v38, v39);
    uint64_t v51 = sub_10001295C(&qword_1000EDA28);
    uint64_t v52 = v75;
    uint64_t v53 = (char *)v75 + *(int *)(v51 + 48);
    *unint64_t v75 = v34;
    v49(v53, (uint64_t)v50, v39);
    uint64_t v54 = (unsigned int *)&enum case for StyleSheet.Font.Size.specified(_:);
  }
  else
  {
    if (v32 != enum case for StyleSheet.Font.Size.absolute(_:))
    {
      sub_100083C1C();
      swift_allocError();
      *uint64_t v55 = 5;
      swift_willThrow();
      uint64_t v56 = *(void (**)(char *, uint64_t))(v21 + 8);
      v56(v26, v20);
      return ((uint64_t (*)(char *, uint64_t))v56)(v24, v20);
    }
    (*(void (**)(char *, uint64_t))(v21 + 96))(v24, v20);
    uint64_t v42 = v65;
    uint64_t v43 = (uint64_t)v76;
    (*(void (**)(char *, char *, char *))(v65 + 32))(v16, v24, v76);
    sub_1000B8820();
    uint64_t v44 = (uint64_t)v64;
    sub_1000B8C20();
    uint64_t v45 = v20;
    uint64_t v47 = v66;
    uint64_t v46 = v67;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v44, 1, v67) == 1)
    {
      sub_1000184DC(v44, &qword_1000EDA18);
      sub_100083C1C();
      swift_allocError();
      *uint64_t v48 = 3;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v43);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v26, v45);
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v43);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v45);
    uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 32);
    uint64_t v58 = v63;
    v57(v63, v44, v46);
    uint64_t v52 = v75;
    v57((char *)v75, (uint64_t)v58, v46);
    uint64_t v54 = (unsigned int *)&enum case for StyleSheet.Font.Size.absolute(_:);
  }
  uint64_t v59 = *v54;
  uint64_t v60 = sub_1000B8C40();
  uint64_t v61 = *(void *)(v60 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v61 + 104))(v52, v59, v60);
  return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v52, 0, 1, v60);
}

uint64_t sub_10008321C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10001295C(&qword_1000ED9F8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001295C(&qword_1000ED9F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000B8880();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182A0(a1, (uint64_t)v9, &qword_1000ED9F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1000184DC((uint64_t)v9, &qword_1000ED9F0);
    uint64_t v14 = sub_1000B8C80();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_1000B8870();
    sub_1000B8C70();
    uint64_t v16 = sub_1000B8C80();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1)
    {
      sub_1000184DC((uint64_t)v6, &qword_1000ED9F8);
      sub_100083C1C();
      swift_allocError();
      unsigned char *v18 = 9;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v6, v16);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a2, 0, 1, v16);
    }
  }
}

uint64_t sub_100083544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10001295C(&qword_1000ED9E8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001295C(&qword_1000ED9E0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000B87F0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182A0(a1, (uint64_t)v9, &qword_1000ED9E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1000184DC((uint64_t)v9, &qword_1000ED9E0);
    uint64_t v14 = sub_1000B8BF0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_1000B87E0();
    sub_1000B8BE0();
    uint64_t v16 = sub_1000B8BF0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1)
    {
      sub_1000184DC((uint64_t)v6, &qword_1000ED9E8);
      sub_100083C1C();
      swift_allocError();
      unsigned char *v18 = 9;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v6, v16);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a2, 0, 1, v16);
    }
  }
}

uint64_t sub_10008386C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10001295C(&qword_1000ED9D8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001295C(&qword_1000ED9D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000B88A0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182A0(a1, (uint64_t)v9, &qword_1000ED9D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1000184DC((uint64_t)v9, &qword_1000ED9D0);
    uint64_t v14 = sub_1000B8CA0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_1000B8890();
    sub_1000B8C90();
    uint64_t v16 = sub_1000B8CA0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1)
    {
      sub_1000184DC((uint64_t)v6, &qword_1000ED9D8);
      sub_100083C1C();
      swift_allocError();
      unsigned char *v18 = 8;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v6, v16);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a2, 0, 1, v16);
    }
  }
}

uint64_t sub_100083B94()
{
  return sub_1000BB380();
}

uint64_t sub_100083C00@<X0>(uint64_t a1@<X8>)
{
  return sub_100080480(a1);
}

unint64_t sub_100083C1C()
{
  unint64_t result = qword_1000ED9B0;
  if (!qword_1000ED9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000ED9B0);
  }
  return result;
}

uint64_t sub_100083C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000ED9C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for StyleSheetUnpackerErrors(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StyleSheetUnpackerErrors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100083E34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StyleSheetUnpackerErrors()
{
  return &type metadata for StyleSheetUnpackerErrors;
}

unint64_t sub_100083E70()
{
  unint64_t result = qword_1000EDA30;
  if (!qword_1000EDA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDA30);
  }
  return result;
}

double sub_100083EC4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_10008BB58(a1, a2), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(a3 + 56) + 32 * v6;
    sub_10001DA70(v8, (uint64_t)a4);
  }
  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_100083F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_10008BB58(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(void *)(*(void *)(a3 + 56) + 16 * v4);
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t _AttributedString.init(fromNSAttributedString:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000BA7D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v18 = v5;
  uint64_t v19 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v9 = [a1 string];
  if (!v9)
  {
    sub_1000BB900();
    NSString v9 = sub_1000BB8D0();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = sub_1000BB900();
  uint64_t v23 = &_swiftEmptyArrayStorage;
  uint64_t v22 = 0;
  uint64_t result = (uint64_t)[v9 length];
  if (result < 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v12 = result;
  uint64_t v20 = v10;
  uint64_t v17 = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &v22;
  *(void *)(v13 + 24) = &v23;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_10008BA1C;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = sub_10008BA34;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000884D4;
  aBlock[3] = &unk_1000E4618;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, "enumerateAttributesInRange:options:usingBlock:", 0, v12, 0, v15);
  _Block_release(v15);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v12)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!v22)
  {
    swift_bridgeObjectRetain();
    sub_1000BA7C0();

    if (!v2) {
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v17, v8, v18);
    }
    goto LABEL_10;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v22)
  {
    swift_errorRetain();
    swift_willThrow();

LABEL_10:
    swift_errorRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_100084288(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v8 = sub_10008C06C(a1, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10008C164);
    char v10 = v22;
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      uint64_t v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v7 = (unsigned __int8 *)sub_1000BBF20();
    }
    unint64_t v8 = (unint64_t)sub_10008C164(v7, v5, 10);
    char v10 = v9 & 1;
    goto LABEL_39;
  }
  v23[0] = a1;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v4) {
      goto LABEL_52;
    }
    if (v4 == 1 || (BYTE1(a1) - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (BYTE1(a1) - 48);
    uint64_t v15 = v4 - 2;
    if (v15)
    {
      uint64_t v16 = (unsigned __int8 *)v23 + 2;
      while (1)
      {
        unsigned int v17 = *v16 - 48;
        if (v17 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v17);
        unint64_t v8 = 10 * v8 + v17;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v16;
        if (!--v15) {
          goto LABEL_39;
        }
      }
    }
LABEL_38:
    char v10 = 0;
    goto LABEL_39;
  }
  if (a1 != 45)
  {
    if (!v4 || (a1 - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (a1 - 48);
    uint64_t v18 = v4 - 1;
    if (v18)
    {
      uint64_t v20 = (unsigned __int8 *)v23 + 1;
      while (1)
      {
        unsigned int v21 = *v20 - 48;
        if (v21 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v21);
        unint64_t v8 = 10 * v8 + v21;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v20;
        if (!--v18) {
          goto LABEL_39;
        }
      }
    }
    goto LABEL_38;
  }
  if (v4)
  {
    if (v4 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      unint64_t v2 = 0;
      unint64_t v8 = -(uint64_t)(BYTE1(a1) - 48);
      if (BYTE1(a1) == 48)
      {
        uint64_t v11 = v4 - 2;
        if (v11)
        {
          uint64_t v12 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            unsigned int v13 = *v12 - 48;
            if (v13 > 9) {
              goto LABEL_36;
            }
            if (!is_mul_ok(v8, 0xAuLL)) {
              goto LABEL_36;
            }
            BOOL v14 = 10 * v8 >= v13;
            unint64_t v8 = 10 * v8 - v13;
            if (!v14) {
              goto LABEL_36;
            }
            char v10 = 0;
            ++v12;
            if (!--v11) {
              goto LABEL_39;
            }
          }
        }
        goto LABEL_38;
      }
      goto LABEL_53;
    }
LABEL_36:
    unint64_t v8 = 0;
    char v10 = 1;
    goto LABEL_39;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  char v10 = 1;
  unint64_t v8 = v2;
LABEL_39:
  swift_bridgeObjectRelease();
  if (v10) {
    return 0;
  }
  else {
    return v8;
  }
}

uint64_t sub_1000844FC(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_1000BBF20();
      }
      uint64_t v7 = (uint64_t)sub_10008C3E0(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = sub_10008C06C(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10008C3E0);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t sub_100084760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char **a6)
{
  uint64_t v160 = a5;
  uint64_t v159 = a4;
  uint64_t v10 = sub_10001295C(&qword_1000EC5E0);
  __chkstk_darwin(v10 - 8);
  unsigned int v12 = (char *)&v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000B8240();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v132 - v18;
  uint64_t v20 = sub_10001295C(&qword_1000ED948);
  __chkstk_darwin(v20 - 8);
  char v22 = (char *)&v132 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1000B8090();
  if (result != a2)
  {
    uint64_t v164 = a2 + a3;
    if (!__OFADD__(a2, a3))
    {
      uint64_t v161 = v22;
      long long v138 = v19;
      uint64_t v139 = v17;
      uint64_t v144 = v13;
      uint64_t v145 = v12;
      uint64_t v163 = a2;
      uint64_t v24 = *(void *)(a1 + 64);
      uint64_t v157 = a1 + 64;
      uint64_t v25 = 1 << *(unsigned char *)(a1 + 32);
      uint64_t v26 = -1;
      uint64_t v168 = MBDIMFileTransferAttributeName;
      if (v25 < 64) {
        uint64_t v26 = ~(-1 << v25);
      }
      unint64_t v27 = v26 & v24;
      uint64_t v158 = MBDIMLivePhotoAttributeName;
      uint64_t v156 = MBDIMBaseWritingDirectionAttributeName;
      uint64_t v165 = (uint64_t)&v174 + 8;
      uint64_t v167 = &v178;
      uint64_t v155 = MBDIMMessagePartAttributeName;
      uint64_t v154 = MBDIMBreadcrumbTextOptionFlags;
      uint64_t v153 = MBDIMBreadcrumbTextMarkerAttributeName;
      uint64_t v152 = MBDIMMentionConfirmedMention;
      uint64_t v150 = MBDIMTextEffectAttributeName;
      uint64_t v149 = MBDIMTextBoldAttributeName;
      uint64_t v148 = MBDIMTextItalicAttributeName;
      uint64_t v147 = MBDIMTextUnderlineAttributeName;
      uint64_t v146 = MBDIMTextStrikethroughAttributeName;
      uint64_t v143 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      uint64_t v141 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      long long v137 = (void (**)(char *, char *, uint64_t))(v14 + 32);
      uint64_t v142 = MBDIMLinkAttributeName;
      uint64_t v136 = (void (**)(char *, char *, uint64_t))(v14 + 16);
      unint64_t v135 = (void (**)(char *, uint64_t))(v14 + 8);
      int64_t v162 = (unint64_t)(v25 + 63) >> 6;
      int64_t v151 = v162 - 1;
      uint64_t v140 = MBDIMLinkIsRichLinkAttributeName;
      uint64_t result = swift_bridgeObjectRetain();
      int64_t v28 = 0;
      uint64_t v166 = (char *)&type metadata for Any + 8;
      long long v134 = xmmword_1000C03C0;
      while (1)
      {
        if (v27)
        {
          unint64_t v29 = __clz(__rbit64(v27));
          v27 &= v27 - 1;
          unint64_t v30 = v29 | (v28 << 6);
        }
        else
        {
          int64_t v34 = v28 + 1;
          if (__OFADD__(v28, 1))
          {
            __break(1u);
            break;
          }
          if (v34 >= v162) {
            goto LABEL_19;
          }
          unint64_t v35 = *(void *)(v157 + 8 * v34);
          if (!v35)
          {
            v28 += 2;
            if (v34 + 1 >= v162)
            {
              int64_t v28 = v34;
LABEL_19:
              unint64_t v27 = 0;
              uint64_t v176 = 0;
              long long v174 = 0u;
              long long v175 = 0u;
              goto LABEL_20;
            }
            unint64_t v35 = *(void *)(v157 + 8 * v28);
            if (v35)
            {
              ++v34;
            }
            else
            {
              if (v34 + 2 >= v162) {
                goto LABEL_19;
              }
              unint64_t v35 = *(void *)(v157 + 8 * (v34 + 2));
              if (v35)
              {
                v34 += 2;
              }
              else
              {
                int64_t v71 = v34 + 3;
                if (v34 + 3 >= v162)
                {
                  int64_t v28 = v34 + 2;
                  goto LABEL_19;
                }
                unint64_t v35 = *(void *)(v157 + 8 * v71);
                if (!v35)
                {
                  while (1)
                  {
                    int64_t v34 = v71 + 1;
                    if (__OFADD__(v71, 1)) {
                      goto LABEL_131;
                    }
                    if (v34 >= v162)
                    {
                      int64_t v28 = v151;
                      goto LABEL_19;
                    }
                    unint64_t v35 = *(void *)(v157 + 8 * v34);
                    ++v71;
                    if (v35) {
                      goto LABEL_14;
                    }
                  }
                }
                v34 += 3;
              }
            }
          }
LABEL_14:
          unint64_t v27 = (v35 - 1) & v35;
          unint64_t v30 = __clz(__rbit64(v35)) + (v34 << 6);
          int64_t v28 = v34;
        }
        uint64_t v31 = *(void *)(a1 + 56);
        *(void *)&long long v174 = *(void *)(*(void *)(a1 + 48) + 8 * v30);
        int v32 = (void *)v174;
        sub_10001DA70(v31 + 32 * v30, v165);
        id v33 = v32;
LABEL_20:
        sub_10001836C((uint64_t)&v174, (uint64_t)&v177, &qword_1000EDA70);
        uint64_t v36 = v177;
        if (!v177) {
          return swift_release();
        }
        sub_10001DACC(v167, &v173);
        uint64_t v176 = 0;
        long long v174 = 0u;
        long long v175 = 0u;
        uint64_t v37 = sub_1000BB900();
        uint64_t v39 = v38;
        if (v37 == sub_1000BB900() && v39 == v40) {
          goto LABEL_26;
        }
        char v41 = sub_1000BC1A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v41) {
          goto LABEL_27;
        }
        uint64_t v42 = sub_1000BB900();
        uint64_t v44 = v43;
        if (v42 == sub_1000BB900() && v44 == v45)
        {
LABEL_26:
          swift_bridgeObjectRelease_n();
LABEL_27:
          sub_10001DA70((uint64_t)&v173, (uint64_t)&v170);
          sub_10001295C(&qword_1000EC6A8);
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_37;
          }
          uint64_t v46 = (uint64_t)v161;
          FileTransferAttribute.init(fileTransferDict:range:)((uint64_t)v169, v163, v164, (uint64_t)v161);
          uint64_t v47 = sub_1000BABD0();
          uint64_t v48 = *(void *)(v47 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47) != 1)
          {
            *((void *)&v171 + 1) = v47;
            uint64_t v172 = sub_10008CD80(&qword_1000EDAE0, (void (*)(uint64_t))&type metadata accessor for FileTransferAttribute);
            uint64_t v54 = sub_1000269C4((uint64_t *)&v170);
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(v48 + 32))(v54, v46, v47);
            goto LABEL_35;
          }
          sub_1000184DC((uint64_t)&v174, &qword_1000EDA78);
          sub_1000184DC(v46, &qword_1000ED948);
          long long v170 = 0u;
          long long v171 = 0u;
          uint64_t v172 = 0;
          goto LABEL_36;
        }
        char v49 = sub_1000BC1A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v49) {
          goto LABEL_27;
        }
        uint64_t v50 = sub_1000BB900();
        uint64_t v52 = v51;
        if (v50 == sub_1000BB900() && v52 == v53)
        {
          swift_bridgeObjectRelease_n();
LABEL_45:
          sub_10001DA70((uint64_t)&v173, (uint64_t)&v170);
          sub_10001DAE4(0, (unint64_t *)&qword_1000EC528);
          if (swift_dynamicCast())
          {
            id v60 = v169;
            sub_1000BBB60();
            *((void *)&v171 + 1) = sub_1000BB180();
            uint64_t v172 = sub_10008CD80(&qword_1000EDAD8, (void (*)(uint64_t))&type metadata accessor for BaseWritingDirectionAttribute);
            sub_1000269C4((uint64_t *)&v170);
            sub_1000BB170();
            sub_1000184DC((uint64_t)&v174, &qword_1000EDA78);

            goto LABEL_36;
          }
          goto LABEL_37;
        }
        char v59 = sub_1000BC1A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v59) {
          goto LABEL_45;
        }
        uint64_t v61 = sub_1000BB900();
        uint64_t v63 = v62;
        if (v61 == sub_1000BB900() && v63 == v64)
        {
          swift_bridgeObjectRelease_n();
LABEL_54:
          sub_10001DA70((uint64_t)&v173, (uint64_t)&v170);
          sub_10001DAE4(0, (unint64_t *)&qword_1000EC528);
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_37;
          }
          id v66 = v169;
          sub_1000BBE40();
          *((void *)&v171 + 1) = sub_1000BAB10();
          uint64_t v172 = sub_10008CD80(&qword_1000EDAD0, (void (*)(uint64_t))&type metadata accessor for MessagePartAttribute);
          sub_1000269C4((uint64_t *)&v170);
          sub_1000BAB00();
LABEL_56:

LABEL_57:
          sub_1000184DC((uint64_t)&v174, &qword_1000EDA78);
          sub_1000181D0(&v170, (uint64_t)&v174);
          goto LABEL_37;
        }
        char v65 = sub_1000BC1A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v65) {
          goto LABEL_54;
        }
        uint64_t v67 = sub_1000BB900();
        uint64_t v69 = v68;
        if (v67 == sub_1000BB900() && v69 == v70)
        {
          swift_bridgeObjectRelease_n();
LABEL_69:
          sub_10001DA70((uint64_t)&v173, (uint64_t)&v170);
          sub_10001DAE4(0, (unint64_t *)&qword_1000EC528);
          if (swift_dynamicCast())
          {
            id v66 = v169;
            sub_1000BBE40();
            *((void *)&v171 + 1) = sub_1000BB2A0();
            uint64_t v172 = sub_10008CD80(&qword_1000EDAC8, (void (*)(uint64_t))&type metadata accessor for BreadcrumbTextOptionFlagsAttribute);
            sub_1000269C4((uint64_t *)&v170);
            sub_1000BB290();
            goto LABEL_56;
          }
          goto LABEL_37;
        }
        char v72 = sub_1000BC1A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v72) {
          goto LABEL_69;
        }
        uint64_t v73 = sub_1000BB900();
        uint64_t v75 = v74;
        if (v73 == sub_1000BB900() && v75 == v76)
        {
          swift_bridgeObjectRelease_n();
LABEL_76:
          sub_10001DA70((uint64_t)&v173, (uint64_t)&v170);
          if (swift_dynamicCast())
          {
            *((void *)&v171 + 1) = sub_1000BB1A0();
            uint64_t v172 = sub_10008CD80(&qword_1000EDAC0, (void (*)(uint64_t))&type metadata accessor for BreadcrumbTextMarkerAttribute);
            sub_1000269C4((uint64_t *)&v170);
            sub_1000BB190();
            goto LABEL_57;
          }
          goto LABEL_37;
        }
        char v77 = sub_1000BC1A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v77) {
          goto LABEL_76;
        }
        uint64_t v78 = sub_1000BB900();
        uint64_t v80 = v79;
        if (v78 == sub_1000BB900() && v80 == v81)
        {
          swift_bridgeObjectRelease_n();
LABEL_83:
          sub_10001DA70((uint64_t)&v173, (uint64_t)&v170);
          if (swift_dynamicCast())
          {
            *((void *)&v171 + 1) = sub_1000BA5F0();
            uint64_t v172 = sub_10008CD80(&qword_1000EDAB8, (void (*)(uint64_t))&type metadata accessor for MentionAttribute);
            sub_1000269C4((uint64_t *)&v170);
            sub_1000BA5E0();
            goto LABEL_57;
          }
          goto LABEL_37;
        }
        char v82 = sub_1000BC1A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v82) {
          goto LABEL_83;
        }
        uint64_t v83 = sub_1000BB900();
        uint64_t v85 = v84;
        if (v83 == sub_1000BB900() && v85 == v86)
        {
          swift_bridgeObjectRelease_n();
LABEL_89:
          sub_10001DA70((uint64_t)&v173, (uint64_t)&v170);
          sub_10001DAE4(0, (unint64_t *)&qword_1000EC528);
          if (swift_dynamicCast())
          {
            id v66 = v169;
            sub_1000BBE40();
            *((void *)&v171 + 1) = sub_1000BAAB0();
            uint64_t v172 = sub_10008CD80(&qword_1000EDAB0, (void (*)(uint64_t))&type metadata accessor for TextEffectAttribute);
            sub_1000269C4((uint64_t *)&v170);
            sub_1000BAAA0();
            goto LABEL_56;
          }
          goto LABEL_37;
        }
        char v87 = sub_1000BC1A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v87) {
          goto LABEL_89;
        }
        uint64_t v88 = sub_1000BB900();
        uint64_t v90 = v89;
        if (v88 == sub_1000BB900() && v90 == v91)
        {
          swift_bridgeObjectRelease_n();
LABEL_95:
          *((void *)&v171 + 1) = sub_1000BA7A0();
          uint64_t v172 = sub_10008CD80(&qword_1000EDAA8, (void (*)(uint64_t))&type metadata accessor for TextBoldAttribute);
          sub_1000269C4((uint64_t *)&v170);
          sub_1000BA790();
          goto LABEL_35;
        }
        char v92 = sub_1000BC1A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v92) {
          goto LABEL_95;
        }
        uint64_t v93 = sub_1000BB900();
        uint64_t v95 = v94;
        if (v93 == sub_1000BB900() && v95 == v96)
        {
          swift_bridgeObjectRelease_n();
LABEL_100:
          *((void *)&v171 + 1) = sub_1000BAAD0();
          uint64_t v172 = sub_10008CD80(&qword_1000EDAA0, (void (*)(uint64_t))&type metadata accessor for TextItalicAttribute);
          sub_1000269C4((uint64_t *)&v170);
          sub_1000BAAC0();
          goto LABEL_35;
        }
        char v97 = sub_1000BC1A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v97) {
          goto LABEL_100;
        }
        uint64_t v98 = sub_1000BB900();
        uint64_t v100 = v99;
        if (v98 == sub_1000BB900() && v100 == v101)
        {
          swift_bridgeObjectRelease_n();
LABEL_105:
          *((void *)&v171 + 1) = sub_1000BACE0();
          uint64_t v172 = sub_10008CD80(&qword_1000EDA98, (void (*)(uint64_t))&type metadata accessor for TextUnderlineAttribute);
          sub_1000269C4((uint64_t *)&v170);
          sub_1000BACD0();
          goto LABEL_35;
        }
        char v102 = sub_1000BC1A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v102) {
          goto LABEL_105;
        }
        uint64_t v103 = sub_1000BB900();
        uint64_t v105 = v104;
        if (v103 == sub_1000BB900() && v105 == v106)
        {
          swift_bridgeObjectRelease_n();
LABEL_110:
          *((void *)&v171 + 1) = sub_1000BB040();
          uint64_t v172 = sub_10008CD80(&qword_1000EDA90, (void (*)(uint64_t))&type metadata accessor for TextStrikethroughAttribute);
          sub_1000269C4((uint64_t *)&v170);
          sub_1000BB030();
LABEL_35:
          sub_1000184DC((uint64_t)&v174, &qword_1000EDA78);
LABEL_36:
          sub_10001836C((uint64_t)&v170, (uint64_t)&v174, &qword_1000EDA78);
          goto LABEL_37;
        }
        char v107 = sub_1000BC1A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v107) {
          goto LABEL_110;
        }
        uint64_t v108 = sub_1000BB900();
        uint64_t v110 = v109;
        if (v108 == sub_1000BB900() && v110 == v111)
        {
          swift_bridgeObjectRelease_n();
LABEL_115:
          sub_10001DA70((uint64_t)&v173, (uint64_t)&v170);
          int v113 = swift_dynamicCast();
          unint64_t v114 = *v143;
          if (v113)
          {
            uint64_t v115 = (uint64_t)v145;
            uint64_t v116 = v144;
            v114(v145, 0, 1, v144);
            if ((*v141)(v115, 1, v116) != 1)
            {
              unint64_t v117 = v138;
              uint64_t v118 = v144;
              (*v137)(v138, v145, v144);
              (*v136)(v139, v117, v118);
              *((void *)&v171 + 1) = sub_1000B94A0();
              uint64_t v172 = sub_10008CD80(&qword_1000EDA88, (void (*)(uint64_t))&type metadata accessor for LinkAttribute);
              sub_1000269C4((uint64_t *)&v170);
              sub_1000B9490();
              (*v135)(v117, v118);
              goto LABEL_57;
            }
          }
          else
          {
            v114(v145, 1, 1, v144);
          }
          sub_1000184DC((uint64_t)v145, &qword_1000EC5E0);
          goto LABEL_37;
        }
        char v112 = sub_1000BC1A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v112) {
          goto LABEL_115;
        }
        uint64_t v119 = sub_1000BB900();
        uint64_t v121 = v120;
        if (v119 == sub_1000BB900() && v121 == v122)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v123 = sub_1000BC1A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v123 & 1) == 0)
          {
            sub_10001DAE4(0, (unint64_t *)&qword_1000EC5B8);
            uint64_t v133 = sub_1000BBD40();
            sub_10001295C(&qword_1000EC5C8);
            uint64_t v124 = swift_allocObject();
            *(_OWORD *)(v124 + 16) = v134;
            uint64_t v125 = sub_1000BB900();
            uint64_t v127 = v126;
            *(void *)(v124 + 56) = &type metadata for String;
            unint64_t v128 = sub_10001824C();
            *(void *)(v124 + 32) = v125;
            *(void *)(v124 + 40) = v127;
            *(void *)(v124 + 96) = &type metadata for Int;
            uint64_t v129 = v163;
            *(void *)(v124 + 64) = v128;
            *(void *)(v124 + 72) = v129;
            *(void *)(v124 + 136) = &type metadata for Int;
            *(void *)(v124 + 144) = &protocol witness table for Int;
            uint64_t v130 = v164;
            *(void *)(v124 + 104) = &protocol witness table for Int;
            *(void *)(v124 + 112) = v130;
            sub_1000BBBE0();
            uint64_t v131 = (void *)v133;
            sub_1000B8770();

            swift_bridgeObjectRelease();
            goto LABEL_37;
          }
        }
        sub_10001DA70((uint64_t)&v173, (uint64_t)&v170);
        sub_10001DAE4(0, (unint64_t *)&qword_1000EC528);
        if (swift_dynamicCast())
        {
          id v66 = v169;
          [v169 BOOLValue];
          *((void *)&v171 + 1) = sub_1000B89C0();
          uint64_t v172 = sub_10008CD80(&qword_1000EDA80, (void (*)(uint64_t))&type metadata accessor for LinkIsRichLinkAttribute);
          sub_1000269C4((uint64_t *)&v170);
          sub_1000B89B0();
          goto LABEL_56;
        }
LABEL_37:
        sub_1000182A0((uint64_t)&v174, (uint64_t)&v170, &qword_1000EDA78);
        if (*((void *)&v171 + 1))
        {
          sub_1000184DC((uint64_t)&v170, &qword_1000EDA78);
          uint64_t result = sub_1000182A0((uint64_t)&v174, (uint64_t)&v170, &qword_1000EDA78);
          if (!*((void *)&v171 + 1)) {
            goto LABEL_132;
          }
          uint64_t v55 = *a6;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *a6 = v55;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v55 = sub_10003EC6C(0, *((void *)v55 + 2) + 1, 1, v55);
            *a6 = v55;
          }
          unint64_t v58 = *((void *)v55 + 2);
          unint64_t v57 = *((void *)v55 + 3);
          if (v58 >= v57 >> 1)
          {
            uint64_t v55 = sub_10003EC6C((char *)(v57 > 1), v58 + 1, 1, v55);
            *a6 = v55;
          }
          *((void *)v55 + 2) = v58 + 1;
          sub_1000181D0(&v170, (uint64_t)&v55[40 * v58 + 32]);
        }
        else
        {

          sub_1000184DC((uint64_t)&v170, &qword_1000EDA78);
        }
        sub_1000184DC((uint64_t)&v174, &qword_1000EDA78);
        uint64_t result = sub_100015C54((uint64_t)&v173);
      }
    }
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
  }
  return result;
}

uint64_t FileTransferAttribute.init(fileTransferDict:range:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v260 = a3;
  uint64_t v259 = a2;
  uint64_t v281 = a4;
  uint64_t v5 = sub_1000BABD0();
  uint64_t v279 = *(void *)(v5 - 8);
  uint64_t v280 = v5;
  __chkstk_darwin(v5);
  uint64_t v261 = (char *)&v226 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001295C(&qword_1000EDA38);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v258 = (uint64_t)&v226 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v252 = (uint64_t)&v226 - v11;
  __chkstk_darwin(v10);
  uint64_t v262 = (char *)&v226 - v12;
  uint64_t v246 = sub_1000BABF0();
  uint64_t v245 = *(void *)(v246 - 8);
  __chkstk_darwin(v246);
  uint64_t v248 = (char *)&v226 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v272 = sub_1000BAD30();
  uint64_t v269 = *(void *)(v272 - 8);
  __chkstk_darwin(v272);
  uint64_t v247 = (char *)&v226 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v268 = sub_1000BAC50();
  uint64_t v267 = *(void *)(v268 - 8);
  __chkstk_darwin(v268);
  uint64_t v250 = (char *)&v226 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v265 = sub_1000BAEA0();
  uint64_t v266 = *(void *)(v265 - 8);
  __chkstk_darwin(v265);
  uint64_t v254 = (char *)&v226 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10001295C(&qword_1000EDA40);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v264 = (char *)&v226 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v256 = (char *)&v226 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v226 - v22;
  uint64_t v24 = sub_10001295C(&qword_1000EDA48);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v253 = (uint64_t)&v226 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  unint64_t v29 = (char *)&v226 - v28;
  __chkstk_darwin(v27);
  uint64_t v270 = (uint64_t)&v226 - v30;
  uint64_t v31 = sub_10001295C(&qword_1000EDA50);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v249 = (uint64_t)&v226 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v226 - v35;
  __chkstk_darwin(v34);
  uint64_t v273 = (uint64_t)&v226 - v37;
  uint64_t v38 = sub_10001295C(&qword_1000EDA58);
  uint64_t v39 = __chkstk_darwin(v38 - 8);
  uint64_t v263 = (uint64_t)&v226 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v251 = (char *)&v226 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v271 = (uint64_t)&v226 - v44;
  __chkstk_darwin(v43);
  uint64_t v46 = (char *)&v226 - v45;
  uint64_t v47 = sub_1000BB020();
  uint64_t v277 = *(void *)(v47 - 8);
  unint64_t v278 = v47;
  uint64_t v48 = __chkstk_darwin(v47);
  uint64_t v255 = (char *)&v226 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v52 = (char *)&v226 - v51;
  __chkstk_darwin(v50);
  uint64_t v54 = (char *)&v226 - v53;
  uint64_t v55 = sub_1000BAB80();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v274 = v55;
  uint64_t v275 = v56;
  uint64_t v57 = __chkstk_darwin(v55);
  Swift::Int v257 = (char *)&v226 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57);
  v276 = (char *)&v226 - v59;
  uint64_t v60 = sub_1000BB900();
  if (!*(void *)(a1 + 16) || (v244 = v23, unint64_t v62 = sub_10008BB58(v60, v61), (v63 & 1) == 0))
  {
    long long v284 = 0u;
    long long v285 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10001DA70(*(void *)(a1 + 56) + 32 * v62, (uint64_t)&v284);
  swift_bridgeObjectRelease();
  if (!*((void *)&v285 + 1))
  {
LABEL_10:
    swift_bridgeObjectRelease();
    sub_1000184DC((uint64_t)&v284, &qword_1000EC690);
LABEL_11:
    sub_1000BBBD0();
    sub_10001DAE4(0, (unint64_t *)&qword_1000EC5B8);
    char v72 = (void *)sub_1000BBD40();
    sub_1000B8780();

    uint64_t v73 = 1;
    uint64_t v75 = v280;
    uint64_t v74 = v281;
    uint64_t v76 = v279;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v74, v73, 1, v75);
  }
  sub_10001295C(&qword_1000EDA60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (!*(void *)(v282 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000BB6C0();
    sub_10008CD80((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
  uint64_t v242 = v282;
  uint64_t v64 = *(void *)(v282 + 32);
  uint64_t v65 = sub_1000BB900();
  uint64_t v67 = v66;
  uint64_t v68 = *(void *)(v64 + 16);
  uint64_t v243 = v64;
  if (v68)
  {
    uint64_t v69 = v65;
    swift_bridgeObjectRetain();
    unint64_t v70 = sub_10008BB58(v69, v67);
    if (v71)
    {
      sub_10001DA70(*(void *)(v64 + 56) + 32 * v70, (uint64_t)&v284);
    }
    else
    {
      long long v284 = 0u;
      long long v285 = 0u;
    }
  }
  else
  {
    long long v284 = 0u;
    long long v285 = 0u;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v285 + 1))
  {
    int v78 = swift_dynamicCast();
    uint64_t v79 = v282;
    if (!v78) {
      uint64_t v79 = 0;
    }
    uint64_t v234 = v79;
    if (v78) {
      unint64_t v80 = v283;
    }
    else {
      unint64_t v80 = 0;
    }
    unint64_t v236 = v80;
  }
  else
  {
    sub_1000184DC((uint64_t)&v284, &qword_1000EC690);
    uint64_t v234 = 0;
    unint64_t v236 = 0;
  }
  uint64_t v81 = sub_1000BB900();
  uint64_t v83 = v243;
  if (*(void *)(v243 + 16) && (unint64_t v84 = sub_10008BB58(v81, v82), (v85 & 1) != 0))
  {
    sub_10001DA70(*(void *)(v83 + 56) + 32 * v84, (uint64_t)&v284);
  }
  else
  {
    long long v284 = 0u;
    long long v285 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v285 + 1))
  {
    int v86 = swift_dynamicCast();
    uint64_t v87 = v282;
    if (!v86) {
      uint64_t v87 = 0;
    }
    uint64_t v232 = v87;
    if (v86) {
      unint64_t v88 = v283;
    }
    else {
      unint64_t v88 = 0;
    }
    unint64_t v238 = v88;
  }
  else
  {
    sub_1000184DC((uint64_t)&v284, &qword_1000EC690);
    uint64_t v232 = 0;
    unint64_t v238 = 0;
  }
  uint64_t v89 = sub_1000BB900();
  uint64_t v91 = v243;
  if (*(void *)(v243 + 16) && (unint64_t v92 = sub_10008BB58(v89, v90), (v93 & 1) != 0))
  {
    sub_10001DA70(*(void *)(v91 + 56) + 32 * v92, (uint64_t)&v284);
  }
  else
  {
    long long v284 = 0u;
    long long v285 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v285 + 1))
  {
    int v94 = swift_dynamicCast();
    uint64_t v95 = v282;
    if (!v94) {
      uint64_t v95 = 0;
    }
    uint64_t v231 = v95;
    if (v94) {
      unint64_t v96 = v283;
    }
    else {
      unint64_t v96 = 0;
    }
    unint64_t v237 = v96;
  }
  else
  {
    sub_1000184DC((uint64_t)&v284, &qword_1000EC690);
    uint64_t v231 = 0;
    unint64_t v237 = 0;
  }
  uint64_t v97 = sub_1000BB900();
  uint64_t v99 = v243;
  if (*(void *)(v243 + 16) && (unint64_t v100 = sub_10008BB58(v97, v98), (v101 & 1) != 0))
  {
    sub_10001DA70(*(void *)(v99 + 56) + 32 * v100, (uint64_t)&v284);
  }
  else
  {
    long long v284 = 0u;
    long long v285 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v285 + 1))
  {
    int v102 = swift_dynamicCast();
    uint64_t v103 = v282;
    if (!v102) {
      uint64_t v103 = 0;
    }
    uint64_t v235 = v103;
    if (v102) {
      unint64_t v104 = v283;
    }
    else {
      unint64_t v104 = 0;
    }
    unint64_t v241 = v104;
  }
  else
  {
    sub_1000184DC((uint64_t)&v284, &qword_1000EC690);
    uint64_t v235 = 0;
    unint64_t v241 = 0;
  }
  uint64_t v105 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v107 = sub_10008BB58(v105, v106), (v108 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v107, (uint64_t)&v284);
  }
  else
  {
    long long v284 = 0u;
    long long v285 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v285 + 1))
  {
    int v109 = swift_dynamicCast();
    uint64_t v110 = v282;
    if (!v109) {
      uint64_t v110 = 0;
    }
    uint64_t v230 = v110;
    if (v109) {
      unint64_t v111 = v283;
    }
    else {
      unint64_t v111 = 0;
    }
    uint64_t v240 = v111;
  }
  else
  {
    sub_1000184DC((uint64_t)&v284, &qword_1000EC690);
    uint64_t v230 = 0;
    uint64_t v240 = 0;
  }
  uint64_t v112 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v114 = sub_10008BB58(v112, v113), (v115 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v114, (uint64_t)&v284);
  }
  else
  {
    long long v284 = 0u;
    long long v285 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v285 + 1))
  {
    int v116 = swift_dynamicCast();
    uint64_t v117 = v282;
    if (!v116) {
      uint64_t v117 = 0;
    }
    uint64_t v229 = v117;
    if (v116) {
      unint64_t v118 = v283;
    }
    else {
      unint64_t v118 = 0;
    }
    uint64_t v239 = v118;
  }
  else
  {
    sub_1000184DC((uint64_t)&v284, &qword_1000EC690);
    uint64_t v229 = 0;
    uint64_t v239 = 0;
  }
  uint64_t v119 = sub_1000BB900();
  uint64_t v121 = v243;
  if (*(void *)(v243 + 16) && (unint64_t v122 = sub_10008BB58(v119, v120), (v123 & 1) != 0))
  {
    sub_10001DA70(*(void *)(v121 + 56) + 32 * v122, (uint64_t)&v284);
  }
  else
  {
    long long v284 = 0u;
    long long v285 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v285 + 1))
  {
    int v124 = swift_dynamicCast();
    uint64_t v125 = v282;
    if (!v124) {
      uint64_t v125 = 0;
    }
    uint64_t v233 = v125;
    if (v124) {
      unint64_t v126 = v283;
    }
    else {
      unint64_t v126 = 0;
    }
  }
  else
  {
    sub_1000184DC((uint64_t)&v284, &qword_1000EC690);
    uint64_t v233 = 0;
    unint64_t v126 = 0;
  }
  uint64_t v127 = v286;
  uint64_t v128 = swift_bridgeObjectRetain();
  AudioMessageAttachmentInfo.init(audioMessageDict:)(v128, (uint64_t)v46);
  if (v127)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  unint64_t v228 = v126;
  uint64_t v286 = 0;
  uint64_t v129 = v277;
  unint64_t v130 = v278;
  uint64_t v131 = v277 + 48;
  uint64_t v227 = *(unsigned int (**)(char *, uint64_t, unint64_t))(v277 + 48);
  if (v227(v46, 1, v278) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, unint64_t))(v129 + 32))(v54, v46, v130);
    long long v134 = v276;
    (*(void (**)(char *, char *, unint64_t))(v129 + 16))(v276, v54, v130);
    uint64_t v135 = v274;
    uint64_t v136 = v275;
    (*(void (**)(char *, void, uint64_t))(v275 + 104))(v134, enum case for FileTransferAttribute.AttachmentSubtype.audioMessage(_:), v274);
    (*(void (**)(char *, unint64_t))(v129 + 8))(v54, v130);
    long long v137 = &_swiftEmptyArrayStorage;
    unint64_t v138 = v236;
    goto LABEL_104;
  }
  sub_1000184DC((uint64_t)v46, &qword_1000EDA58);
  uint64_t v132 = v286;
  uint64_t v133 = sub_100088824(v242);
  uint64_t v286 = v132;
  if (v132)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_101:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v226 = v133;
  swift_bridgeObjectRelease();
  uint64_t v143 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v269 + 56);
  uint64_t v144 = v273;
  v143(v273, 1, 1, v272);
  uint64_t v242 = v131;
  if (v241)
  {
    uint64_t v145 = v286;
    sub_1000BAD20();
    uint64_t v286 = v145;
    if (v145)
    {
      sub_1000184DC(v144, &qword_1000EDA50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_101;
    }
    sub_1000184DC(v144, &qword_1000EDA50);
    v143((uint64_t)v36, 0, 1, v272);
    sub_10001836C((uint64_t)v36, v144, &qword_1000EDA50);
  }
  uint64_t v151 = v270;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v267 + 56))(v270, 1, 1, v268);
  uint64_t v152 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v154 = sub_10008BB58(v152, v153), (v155 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v154, (uint64_t)&v284);
  }
  else
  {
    long long v284 = 0u;
    long long v285 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v285 + 1))
  {
    sub_1000184DC((uint64_t)&v284, &qword_1000EC690);
    uint64_t v157 = v277;
    goto LABEL_141;
  }
  sub_10001295C(&qword_1000EC6A8);
  char v156 = swift_dynamicCast();
  uint64_t v157 = v277;
  if ((v156 & 1) == 0) {
    goto LABEL_141;
  }
  uint64_t v158 = v286;
  StickerAttachmentInfo.init(stickerDict:)(v282, (uint64_t)v29);
  uint64_t v286 = v158;
  if (!v158)
  {
    sub_1000184DC(v151, &qword_1000EDA48);
    sub_10001836C((uint64_t)v29, v151, &qword_1000EDA48);
LABEL_141:
    uint64_t v164 = *(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v157 + 56);
    v164(v271, 1, 1, v278);
    uint64_t v165 = sub_1000BB900();
    uint64_t v167 = v243;
    if (*(void *)(v243 + 16) && (unint64_t v168 = sub_10008BB58(v165, v166), (v169 & 1) != 0))
    {
      sub_10001DA70(*(void *)(v167 + 56) + 32 * v168, (uint64_t)&v284);
    }
    else
    {
      long long v284 = 0u;
      long long v285 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v285 + 1))
    {
      char v170 = swift_dynamicCast();
      uint64_t v171 = v266;
      if (v170)
      {
        uint64_t v172 = v286;
        sub_1000BB010();
        uint64_t v286 = v172;
        if (v172)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1000184DC(v271, &qword_1000EDA58);
          uint64_t v159 = v270;
          goto LABEL_149;
        }
        unint64_t v185 = v278;
        uint64_t v186 = (uint64_t)v251;
        (*(void (**)(char *, char *, unint64_t))(v277 + 32))(v251, v52, v278);
        v164(v186, 0, 1, v185);
        uint64_t v174 = v271;
        sub_1000184DC(v271, &qword_1000EDA58);
        sub_10001836C(v186, v174, &qword_1000EDA58);
      }
      else
      {
        uint64_t v174 = v271;
      }
    }
    else
    {
      sub_1000184DC((uint64_t)&v284, &qword_1000EC690);
      uint64_t v174 = v271;
      uint64_t v171 = v266;
    }
    uint64_t v187 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v171 + 56);
    v187(v244, 1, 1, v265);
    uint64_t v136 = v275;
    uint64_t v188 = v240;
    uint64_t v189 = v239;
    if (v240 && v239)
    {
      uint64_t v190 = sub_1000BB900();
      if (*(void *)(a1 + 16) && (unint64_t v192 = sub_10008BB58(v190, v191), (v193 & 1) != 0))
      {
        sub_10001DA70(*(void *)(a1 + 56) + 32 * v192, (uint64_t)&v284);
      }
      else
      {
        long long v284 = 0u;
        long long v285 = 0u;
      }
      uint64_t v194 = (uint64_t)v256;
      swift_bridgeObjectRelease();
      if (*((void *)&v285 + 1))
      {
        sub_10001295C(&qword_1000EC6A8);
        if (swift_dynamicCast()) {
          uint64_t v195 = v282;
        }
        else {
          uint64_t v195 = 0;
        }
      }
      else
      {
        sub_1000184DC((uint64_t)&v284, &qword_1000EC690);
        uint64_t v195 = 0;
      }
      unint64_t v138 = v236;
      uint64_t v219 = v286;
      EmojiImageAttachmentInfo.init(contentIdentifier:shortDescription:stickerDict:)(v230, v188, v229, v189, v195);
      uint64_t v286 = v219;
      if (v219)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000184DC((uint64_t)v244, &qword_1000EDA40);
        sub_1000184DC(v174, &qword_1000EDA58);
        sub_1000184DC(v270, &qword_1000EDA48);
        uint64_t v173 = v273;
        return sub_1000184DC(v173, &qword_1000EDA50);
      }
      uint64_t v220 = (uint64_t)v244;
      sub_1000184DC((uint64_t)v244, &qword_1000EDA40);
      v187((char *)v194, 0, 1, v265);
      uint64_t v174 = v271;
      sub_10001836C(v194, v220, &qword_1000EDA40);
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v138 = v236;
    }
    uint64_t v196 = v263;
    sub_1000182A0(v174, v263, &qword_1000EDA58);
    unint64_t v197 = v278;
    unsigned int v198 = v227((char *)v196, 1, v278);
    long long v134 = v276;
    uint64_t v199 = v273;
    uint64_t v200 = (uint64_t)v264;
    if (v198 == 1)
    {
      sub_1000184DC(v196, &qword_1000EDA58);
      uint64_t v201 = (uint64_t)v244;
      sub_1000182A0((uint64_t)v244, v200, &qword_1000EDA40);
      uint64_t v202 = v266;
      uint64_t v203 = v200;
      uint64_t v204 = v200;
      uint64_t v205 = v265;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v266 + 48))(v203, 1, v265) == 1)
      {
        sub_1000184DC(v204, &qword_1000EDA40);
        uint64_t v206 = v270;
        uint64_t v207 = v253;
        sub_1000182A0(v270, v253, &qword_1000EDA48);
        uint64_t v208 = v267;
        uint64_t v209 = v268;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v267 + 48))(v207, 1, v268) == 1)
        {
          sub_1000184DC(v207, &qword_1000EDA48);
          uint64_t v210 = v249;
          sub_1000182A0(v199, v249, &qword_1000EDA50);
          uint64_t v211 = v269;
          uint64_t v212 = v272;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v269 + 48))(v210, 1, v272) == 1)
          {
            sub_1000184DC(v210, &qword_1000EDA50);
            uint64_t v213 = v286;
            sub_1000BABE0();
            if (v213)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1000184DC((uint64_t)v244, &qword_1000EDA40);
              sub_1000184DC(v271, &qword_1000EDA58);
              sub_1000184DC(v206, &qword_1000EDA48);
              return sub_1000184DC(v273, &qword_1000EDA50);
            }
            uint64_t v286 = 0;
            sub_1000184DC((uint64_t)v244, &qword_1000EDA40);
            sub_1000184DC(v271, &qword_1000EDA58);
            sub_1000184DC(v206, &qword_1000EDA48);
            sub_1000184DC(v273, &qword_1000EDA50);
            long long v134 = v276;
            (*(void (**)(char *, char *, uint64_t))(v245 + 32))(v276, v248, v246);
            uint64_t v216 = enum case for FileTransferAttribute.AttachmentSubtype.unspecified(_:);
            uint64_t v136 = v275;
          }
          else
          {
            sub_1000184DC((uint64_t)v244, &qword_1000EDA40);
            sub_1000184DC(v271, &qword_1000EDA58);
            sub_1000184DC(v206, &qword_1000EDA48);
            sub_1000184DC(v199, &qword_1000EDA50);
            uint64_t v224 = *(void (**)(char *, uint64_t, uint64_t))(v211 + 32);
            uint64_t v225 = v247;
            v224(v247, v210, v212);
            v224(v134, (uint64_t)v225, v212);
            uint64_t v216 = enum case for FileTransferAttribute.AttachmentSubtype.livePhoto(_:);
          }
        }
        else
        {
          sub_1000184DC((uint64_t)v244, &qword_1000EDA40);
          sub_1000184DC(v271, &qword_1000EDA58);
          sub_1000184DC(v206, &qword_1000EDA48);
          sub_1000184DC(v199, &qword_1000EDA50);
          uint64_t v221 = *(void (**)(char *, uint64_t, uint64_t))(v208 + 32);
          uint64_t v222 = v207;
          uint64_t v223 = v250;
          v221(v250, v222, v209);
          v221(v134, (uint64_t)v223, v209);
          uint64_t v216 = enum case for FileTransferAttribute.AttachmentSubtype.sticker(_:);
        }
      }
      else
      {
        sub_1000184DC(v201, &qword_1000EDA40);
        sub_1000184DC(v271, &qword_1000EDA58);
        sub_1000184DC(v270, &qword_1000EDA48);
        sub_1000184DC(v199, &qword_1000EDA50);
        uint64_t v217 = *(void (**)(char *, uint64_t, uint64_t))(v202 + 32);
        uint64_t v218 = v254;
        v217(v254, v204, v205);
        v217(v134, (uint64_t)v218, v205);
        uint64_t v216 = enum case for FileTransferAttribute.AttachmentSubtype.emojiImage(_:);
      }
    }
    else
    {
      sub_1000184DC((uint64_t)v244, &qword_1000EDA40);
      sub_1000184DC(v174, &qword_1000EDA58);
      sub_1000184DC(v270, &qword_1000EDA48);
      sub_1000184DC(v199, &qword_1000EDA50);
      uint64_t v214 = *(void (**)(char *, uint64_t, unint64_t))(v277 + 32);
      uint64_t v215 = v255;
      v214(v255, v196, v197);
      v214(v134, (uint64_t)v215, v197);
      uint64_t v216 = enum case for FileTransferAttribute.AttachmentSubtype.audioMessage(_:);
    }
    uint64_t v135 = v274;
    (*(void (**)(char *, uint64_t, uint64_t))(v136 + 104))(v134, v216, v274);
    long long v137 = v226;
LABEL_104:
    uint64_t v139 = sub_1000BB900();
    if (*(void *)(a1 + 16))
    {
      unint64_t v141 = sub_10008BB58(v139, v140);
      if (v142)
      {
        sub_10001DA70(*(void *)(a1 + 56) + 32 * v141, (uint64_t)&v284);
      }
      else
      {
        long long v284 = 0u;
        long long v285 = 0u;
      }
    }
    else
    {
      long long v284 = 0u;
      long long v285 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v285 + 1))
    {
      if (swift_dynamicCast())
      {
        if (v138)
        {
          uint64_t v146 = v282;
          unint64_t v147 = sub_100084288(v234, v138);
          if ((v148 & 1) == 0)
          {
            unint64_t v149 = v147;
            if (v228)
            {
              sub_1000844FC(v233, v228);
              if (v150)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1000BB6C0();
                sub_10008CD80((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
                swift_allocError();
                sub_1000BB6B0();
                swift_willThrow();
                return (*(uint64_t (**)(char *, uint64_t))(v136 + 8))(v276, v135);
              }
              unint64_t v278 = v149;
              uint64_t v226 = v137;
            }
            else
            {
              unint64_t v278 = v147;
              uint64_t v226 = v137;
            }
            uint64_t v160 = sub_1000BB900();
            if (*(void *)(a1 + 16))
            {
              unint64_t v162 = sub_10008BB58(v160, v161);
              if (v163)
              {
                sub_10001DA70(*(void *)(a1 + 56) + 32 * v162, (uint64_t)&v284);
              }
              else
              {
                long long v284 = 0u;
                long long v285 = 0u;
              }
            }
            else
            {
              long long v284 = 0u;
              long long v285 = 0u;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*((void *)&v285 + 1))
            {
              sub_10001295C(&qword_1000EC6A8);
              char v175 = swift_dynamicCast();
              uint64_t v176 = (uint64_t)v262;
              if (v175)
              {
                uint64_t v177 = v135;
                uint64_t v178 = v252;
                uint64_t v179 = v286;
                FileTransferAttribute.ImageInfo.init(imageDict:)(v282, v252);
                uint64_t v286 = v179;
                if (v179)
                {
                  (*(void (**)(char *, uint64_t))(v136 + 8))(v276, v177);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  return swift_bridgeObjectRelease();
                }
                uint64_t v277 = v146;
                sub_10001836C(v178, v176, &qword_1000EDA38);
                goto LABEL_160;
              }
              uint64_t v277 = v146;
              uint64_t v177 = v135;
            }
            else
            {
              uint64_t v277 = v146;
              uint64_t v177 = v135;
              sub_1000184DC((uint64_t)&v284, &qword_1000EC690);
              uint64_t v176 = (uint64_t)v262;
            }
            uint64_t v180 = sub_1000BABC0();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v180 - 8) + 56))(v176, 1, 1, v180);
LABEL_160:
            sub_1000182A0(v176, v258, &qword_1000EDA38);
            uint64_t v181 = v276;
            (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v257, v276, v177);
            uint64_t v182 = v261;
            uint64_t v183 = v286;
            sub_1000BABA0();
            if (v183)
            {
              sub_1000184DC(v176, &qword_1000EDA38);
              return (*(uint64_t (**)(char *, uint64_t))(v136 + 8))(v181, v177);
            }
            sub_1000184DC(v176, &qword_1000EDA38);
            (*(void (**)(char *, uint64_t))(v136 + 8))(v181, v177);
            uint64_t v76 = v279;
            uint64_t v74 = v281;
            uint64_t v184 = v182;
            uint64_t v75 = v280;
            (*(void (**)(uint64_t, char *, uint64_t))(v279 + 32))(v281, v184, v280);
            uint64_t v73 = 0;
            return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v74, v73, 1, v75);
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000BB6C0();
        sub_10008CD80((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
LABEL_123:
        sub_1000BB6B0();
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v136 + 8))(v134, v135);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000184DC((uint64_t)&v284, &qword_1000EC690);
    }
    sub_1000BB6C0();
    sub_10008CD80((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    goto LABEL_123;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v159 = v151;
LABEL_149:
  sub_1000184DC(v159, &qword_1000EDA48);
  uint64_t v173 = v144;
  return sub_1000184DC(v173, &qword_1000EDA50);
}

uint64_t sub_1000884D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  type metadata accessor for Key(0);
  sub_10008CD80(&qword_1000EC490, type metadata accessor for Key);
  uint64_t v9 = sub_1000BB870();
  v8(v9, a3, a4, a5);

  return swift_bridgeObjectRelease();
}

uint64_t AudioMessageAttachmentInfo.init(audioMessageDict:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000BB020();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000BB900();
  if (!*(void *)(a1 + 16) || (unint64_t v11 = sub_10008BB58(v9, v10), (v12 & 1) == 0))
  {
    long long v20 = 0u;
    long long v21 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_10001DA70(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v20);
  swift_bridgeObjectRelease();
  if (!*((void *)&v21 + 1))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1000184DC((uint64_t)&v20, &qword_1000EC690);
LABEL_10:
    uint64_t v17 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v17, 1, v5);
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v22 = v19;
  uint64_t v13 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v15 = sub_10008BB58(v13, v14), (v16 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v15, (uint64_t)&v20);
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v21 + 1)) {
    swift_dynamicCast();
  }
  else {
    sub_1000184DC((uint64_t)&v20, &qword_1000EC690);
  }
  uint64_t result = sub_1000BB010();
  if (!v2)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
    uint64_t v17 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v17, 1, v5);
  }
  return result;
}

void *sub_100088824(uint64_t a1)
{
  uint64_t v3 = sub_1000BAB70();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v16 - v8;
  uint64_t v19 = *(void *)(a1 + 16);
  if (!v19) {
    return &_swiftEmptyArrayStorage;
  }
  v16[0] = v4 + 8;
  v16[1] = v4 + 32;
  swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  unint64_t v11 = &_swiftEmptyArrayStorage;
  uint64_t v17 = v7;
  uint64_t v18 = a1;
  while (1)
  {
    uint64_t v12 = swift_bridgeObjectRetain();
    FileTransferAttribute.AttachmentInfo.init(attributes:)(v12);
    if (v1) {
      break;
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = (void *)sub_10003EC38(0, v11[2] + 1, 1, (unint64_t)v11);
    }
    unint64_t v14 = v11[2];
    unint64_t v13 = v11[3];
    if (v14 >= v13 >> 1) {
      unint64_t v11 = (void *)sub_10003EC38(v13 > 1, v14 + 1, 1, (unint64_t)v11);
    }
    ++v10;
    _OWORD v11[2] = v14 + 1;
    uint64_t v7 = v17;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v11+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v14, v17, v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    if (v19 == v10)
    {
      swift_bridgeObjectRelease();
      return v11;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t StickerAttachmentInfo.init(stickerDict:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000BAC50();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v135 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, 1, 1, v5);
  }
  uint64_t v9 = sub_1000BB900();
  if (!*(void *)(a1 + 16) || (unint64_t v11 = sub_10008BB58(v9, v10), (v12 & 1) == 0))
  {
    long long v160 = 0u;
    long long v161 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10001DA70(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v160);
  swift_bridgeObjectRelease();
  if (!*((void *)&v161 + 1))
  {
LABEL_10:
    swift_bridgeObjectRelease();
    sub_1000184DC((uint64_t)&v160, &qword_1000EC690);
LABEL_11:
    sub_1000BB900();
    sub_1000BB6C0();
    sub_10008CD80((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  unint64_t v13 = v159;
  uint64_t v156 = a2;
  uint64_t v157 = v158;
  uint64_t v14 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v16 = sub_10008BB58(v14, v15), (v17 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v16, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v161 + 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000184DC((uint64_t)&v160, &qword_1000EC690);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v154 = v158;
  unint64_t v155 = v159;
  uint64_t v19 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v21 = sub_10008BB58(v19, v20), (v22 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v21, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v161 + 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000184DC((uint64_t)&v160, &qword_1000EC690);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  unint64_t v151 = v159;
  uint64_t v152 = v158;
  uint64_t v23 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v25 = sub_10008BB58(v23, v24), (v26 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v25, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v161 + 1))
  {
    int v27 = swift_dynamicCast();
    if (v27) {
      uint64_t v28 = v158;
    }
    else {
      uint64_t v28 = 0;
    }
    if (v27) {
      unint64_t v29 = v159;
    }
    else {
      unint64_t v29 = 0;
    }
    unint64_t v149 = v29;
    uint64_t v150 = v28;
  }
  else
  {
    sub_1000184DC((uint64_t)&v160, &qword_1000EC690);
    unint64_t v149 = 0;
    uint64_t v150 = 0;
  }
  uint64_t v30 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v32 = sub_10008BB58(v30, v31), (v33 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v32, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v161 + 1))
  {
    int v34 = swift_dynamicCast();
    if (v34) {
      uint64_t v35 = v158;
    }
    else {
      uint64_t v35 = 0;
    }
    if (v34) {
      unint64_t v36 = v159;
    }
    else {
      unint64_t v36 = 0;
    }
    unint64_t v147 = v36;
    uint64_t v148 = v35;
  }
  else
  {
    sub_1000184DC((uint64_t)&v160, &qword_1000EC690);
    unint64_t v147 = 0;
    uint64_t v148 = 0;
  }
  uint64_t v37 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v39 = sub_10008BB58(v37, v38), (v40 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v39, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v161 + 1))
  {
    sub_1000184DC((uint64_t)&v160, &qword_1000EC690);
    goto LABEL_62;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_62:
    unint64_t v146 = 0;
    int v42 = 1;
    goto LABEL_63;
  }
  unint64_t v146 = sub_100084288(v158, v159);
  int v42 = v41 & 1;
LABEL_63:
  int v162 = v42;
  uint64_t v43 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v45 = sub_10008BB58(v43, v44), (v46 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v45, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v161 + 1))
  {
    sub_1000184DC((uint64_t)&v160, &qword_1000EC690);
    goto LABEL_71;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_71:
    unint64_t v145 = 0;
    int v48 = 1;
    goto LABEL_72;
  }
  unint64_t v145 = sub_100084288(v158, v159);
  int v48 = v47 & 1;
LABEL_72:
  int v144 = v48;
  uint64_t v49 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v51 = sub_10008BB58(v49, v50), (v52 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v51, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }
  swift_bridgeObjectRelease();
  unint64_t v153 = v13;
  if (!*((void *)&v161 + 1))
  {
    sub_1000184DC((uint64_t)&v160, &qword_1000EC690);
    goto LABEL_86;
  }
  uint64_t v53 = swift_dynamicCast();
  if ((v53 & 1) == 0)
  {
LABEL_86:
    uint64_t v143 = 0;
    int v60 = 1;
    goto LABEL_96;
  }
  uint64_t v143 = v135;
  unint64_t v54 = v159;
  uint64_t v158 = 0;
  uint64_t v55 = __chkstk_darwin(v53);
  if ((v54 & 0x1000000000000000) != 0 || !(v54 & 0x2000000000000000 | v56 & 0x1000000000000000))
  {
    sub_1000BBEC0();
  }
  else
  {
    __chkstk_darwin(v55);
    if ((v54 & 0x2000000000000000) != 0)
    {
      *(void *)&long long v160 = v57;
      *((void *)&v160 + 1) = v54 & 0xFFFFFFFFFFFFFFLL;
      BOOL v62 = (v57 >= 0x21u || ((0x100003E01uLL >> v57) & 1) == 0)
         && (uint64_t v61 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
         && *v61 == 0;
      unsigned __int8 v163 = v62;
      swift_bridgeObjectRelease();
      goto LABEL_93;
    }
    if ((v57 & 0x1000000000000000) != 0)
    {
      uint64_t v58 = (v54 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v59 = v57 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v58 = sub_1000BBF20();
    }
    unsigned __int8 v163 = sub_10008CB48(v58, v59, (void (*)(uint64_t *__return_ptr))sub_10008CC04) & 1;
  }
  swift_bridgeObjectRelease();
LABEL_93:
  uint64_t v63 = v158;
  if (!v163) {
    uint64_t v63 = 0;
  }
  uint64_t v143 = (_DWORD *)v63;
  int v60 = v163 ^ 1;
LABEL_96:
  int v142 = v60;
  uint64_t v64 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v66 = sub_10008BB58(v64, v65), (v67 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v66, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v161 + 1))
  {
    uint64_t v68 = swift_dynamicCast();
    if (v68)
    {
      unint64_t v141 = v135;
      unint64_t v69 = v159;
      uint64_t v158 = 0;
      uint64_t v70 = __chkstk_darwin(v68);
      if ((v69 & 0x1000000000000000) != 0 || !(v69 & 0x2000000000000000 | v71 & 0x1000000000000000))
      {
        sub_1000BBEC0();
      }
      else
      {
        __chkstk_darwin(v70);
        if ((v69 & 0x2000000000000000) != 0)
        {
          *(void *)&long long v160 = v72;
          *((void *)&v160 + 1) = v69 & 0xFFFFFFFFFFFFFFLL;
          BOOL v78 = (v72 >= 0x21u || ((0x100003E01uLL >> v72) & 1) == 0)
             && (char v77 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
             && *v77 == 0;
          unsigned __int8 v163 = v78;
          swift_bridgeObjectRelease();
          goto LABEL_117;
        }
        if ((v72 & 0x1000000000000000) != 0)
        {
          uint64_t v73 = (v69 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v74 = v72 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v73 = sub_1000BBF20();
        }
        unsigned __int8 v163 = sub_10008CB48(v73, v74, (void (*)(uint64_t *__return_ptr))sub_10008CC04) & 1;
      }
      swift_bridgeObjectRelease();
LABEL_117:
      if (v163) {
        uint64_t v75 = v158;
      }
      else {
        uint64_t v75 = 0;
      }
      int v76 = v163 ^ 1;
      goto LABEL_121;
    }
  }
  else
  {
    sub_1000184DC((uint64_t)&v160, &qword_1000EC690);
  }
  uint64_t v75 = 0;
  int v76 = 1;
LABEL_121:
  uint64_t v79 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v81 = sub_10008BB58(v79, v80), (v82 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v81, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v161 + 1))
  {
    sub_1000184DC((uint64_t)&v160, &qword_1000EC690);
LABEL_136:
    uint64_t v90 = 0;
    int v91 = 1;
    goto LABEL_146;
  }
  LODWORD(v141) = v76;
  uint64_t v83 = swift_dynamicCast();
  if ((v83 & 1) == 0)
  {
    int v76 = (int)v141;
    goto LABEL_136;
  }
  uint64_t v140 = v75;
  uint64_t v139 = v135;
  unint64_t v84 = v159;
  uint64_t v158 = 0;
  uint64_t v85 = __chkstk_darwin(v83);
  if ((v84 & 0x1000000000000000) != 0 || !(v84 & 0x2000000000000000 | v86 & 0x1000000000000000))
  {
    sub_1000BBEC0();
  }
  else
  {
    __chkstk_darwin(v85);
    if ((v84 & 0x2000000000000000) != 0)
    {
      *(void *)&long long v160 = v87;
      *((void *)&v160 + 1) = v84 & 0xFFFFFFFFFFFFFFLL;
      BOOL v93 = (v87 >= 0x21u || ((0x100003E01uLL >> v87) & 1) == 0)
         && (unint64_t v92 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
         && *v92 == 0;
      unsigned __int8 v163 = v93;
      swift_bridgeObjectRelease();
      goto LABEL_143;
    }
    if ((v87 & 0x1000000000000000) != 0)
    {
      uint64_t v88 = (v84 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v89 = v87 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v88 = sub_1000BBF20();
    }
    unsigned __int8 v163 = sub_10008CB48(v88, v89, (void (*)(uint64_t *__return_ptr))sub_10008CC04) & 1;
  }
  swift_bridgeObjectRelease();
LABEL_143:
  uint64_t v90 = v158;
  if (!v163) {
    uint64_t v90 = 0;
  }
  int v91 = v163 ^ 1;
  uint64_t v75 = v140;
  int v76 = (int)v141;
LABEL_146:
  LODWORD(v141) = v76 | v91;
  BOOL v94 = (v76 | v91) == 0;
  if (v76 | v91) {
    uint64_t v95 = 0;
  }
  else {
    uint64_t v95 = v75;
  }
  uint64_t v140 = v95;
  if (!v94) {
    uint64_t v90 = 0;
  }
  uint64_t v139 = (_DWORD *)v90;
  uint64_t v96 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v98 = sub_10008BB58(v96, v97), (v99 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v98, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v161 + 1))
  {
    sub_1000184DC((uint64_t)&v160, &qword_1000EC690);
    goto LABEL_165;
  }
  uint64_t v100 = swift_dynamicCast();
  if ((v100 & 1) == 0)
  {
LABEL_165:
    unint64_t v138 = 0;
    int v107 = 1;
    goto LABEL_175;
  }
  unint64_t v138 = v135;
  unint64_t v101 = v159;
  uint64_t v158 = 0;
  uint64_t v102 = __chkstk_darwin(v100);
  if ((v101 & 0x1000000000000000) != 0 || !(v101 & 0x2000000000000000 | v103 & 0x1000000000000000))
  {
    sub_1000BBEC0();
  }
  else
  {
    __chkstk_darwin(v102);
    if ((v101 & 0x2000000000000000) != 0)
    {
      *(void *)&long long v160 = v104;
      *((void *)&v160 + 1) = v101 & 0xFFFFFFFFFFFFFFLL;
      BOOL v109 = (v104 >= 0x21u || ((0x100003E01uLL >> v104) & 1) == 0)
          && (char v108 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
          && *v108 == 0;
      unsigned __int8 v163 = v109;
      swift_bridgeObjectRelease();
      goto LABEL_172;
    }
    if ((v104 & 0x1000000000000000) != 0)
    {
      uint64_t v105 = (v101 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v106 = v104 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v105 = sub_1000BBF20();
    }
    unsigned __int8 v163 = sub_10008CB48(v105, v106, (void (*)(uint64_t *__return_ptr))sub_10008CC04) & 1;
  }
  swift_bridgeObjectRelease();
LABEL_172:
  uint64_t v110 = v158;
  if (!v163) {
    uint64_t v110 = 0;
  }
  unint64_t v138 = (_DWORD *)v110;
  int v107 = v163 ^ 1;
LABEL_175:
  int v137 = v107;
  uint64_t v111 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v113 = sub_10008BB58(v111, v112), (v114 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v113, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v161 + 1))
  {
    uint64_t v115 = swift_dynamicCast();
    if (v115)
    {
      uint64_t v136 = v135;
      unint64_t v116 = v159;
      uint64_t v158 = 0;
      uint64_t v117 = __chkstk_darwin(v115);
      if ((v116 & 0x1000000000000000) != 0 || !(v116 & 0x2000000000000000 | v118 & 0x1000000000000000))
      {
        sub_1000BBEC0();
      }
      else
      {
        __chkstk_darwin(v117);
        if ((v116 & 0x2000000000000000) != 0)
        {
          *(void *)&long long v160 = v119;
          *((void *)&v160 + 1) = v116 & 0xFFFFFFFFFFFFFFLL;
          BOOL v124 = (v119 >= 0x21u || ((0x100003E01uLL >> v119) & 1) == 0)
              && (char v123 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
              && *v123 == 0;
          unsigned __int8 v163 = v124;
          swift_bridgeObjectRelease();
          goto LABEL_196;
        }
        if ((v119 & 0x1000000000000000) != 0)
        {
          uint64_t v120 = (v116 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v121 = v119 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v120 = sub_1000BBF20();
        }
        unsigned __int8 v163 = sub_10008CB48(v120, v121, (void (*)(uint64_t *__return_ptr))sub_10008CC04) & 1;
      }
      swift_bridgeObjectRelease();
LABEL_196:
      uint64_t v125 = v158;
      if (!v163) {
        uint64_t v125 = 0;
      }
      uint64_t v136 = (_DWORD *)v125;
      int v122 = v163 ^ 1;
      goto LABEL_199;
    }
  }
  else
  {
    sub_1000184DC((uint64_t)&v160, &qword_1000EC690);
  }
  uint64_t v136 = 0;
  int v122 = 1;
LABEL_199:
  v135[3] = v122;
  uint64_t v126 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v128 = sub_10008BB58(v126, v127), (v129 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v128, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v161 + 1))
  {
    if (swift_dynamicCast()) {
      sub_100084288(v158, v159);
    }
  }
  else
  {
    sub_1000184DC((uint64_t)&v160, &qword_1000EC690);
  }
  uint64_t v130 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v132 = sub_10008BB58(v130, v131), (v133 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v132, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v161 + 1))
  {
    if (swift_dynamicCast())
    {
      if (v158 == 49 && v159 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1000BC1A0();
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    sub_1000184DC((uint64_t)&v160, &qword_1000EC690);
  }
  uint64_t result = sub_1000BAC40();
  if (!v2)
  {
    uint64_t v134 = v156;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v156, v8, v5);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v134, 0, 1, v5);
  }
  return result;
}

uint64_t AudioMessageAttachmentInfo.init(transcription:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000BB020();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1000BB010();
  if (!v1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v6, v3);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
  }
  return result;
}

uint64_t EmojiImageAttachmentInfo.init(contentIdentifier:shortDescription:stickerDict:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000BB6C0();
    sub_10008CD80((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    goto LABEL_13;
  }
  uint64_t v6 = sub_1000BB900();
  if (!*(void *)(a5 + 16) || (unint64_t v8 = sub_10008BB58(v6, v7), (v9 & 1) == 0))
  {
    long long v28 = 0u;
    long long v29 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10001DA70(*(void *)(a5 + 56) + 32 * v8, (uint64_t)&v28);
  swift_bridgeObjectRelease();
  if (!*((void *)&v29 + 1))
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000184DC((uint64_t)&v28, &qword_1000EC690);
LABEL_11:
    sub_1000BB900();
    sub_1000BB6C0();
    sub_10008CD80((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
LABEL_13:
    sub_1000BB6B0();
    return swift_willThrow();
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v30 = v27;
  uint64_t v10 = sub_1000BB900();
  if (*(void *)(a5 + 16) && (unint64_t v12 = sub_10008BB58(v10, v11), (v13 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a5 + 56) + 32 * v12, (uint64_t)&v28);
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v29 + 1)) {
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v15 = sub_1000BB900();
  if (*(void *)(a5 + 16) && (unint64_t v17 = sub_10008BB58(v15, v16), (v18 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a5 + 56) + 32 * v17, (uint64_t)&v28);
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v29 + 1))
  {
    swift_bridgeObjectRelease();
LABEL_28:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000184DC((uint64_t)&v28, &qword_1000EC690);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  uint64_t v19 = sub_1000BB900();
  if (*(void *)(a5 + 16))
  {
    unint64_t v21 = sub_10008BB58(v19, v20);
    if (v22)
    {
      sub_10001DA70(*(void *)(a5 + 56) + 32 * v21, (uint64_t)&v28);
    }
    else
    {
      long long v28 = 0u;
      long long v29 = 0u;
    }
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v29 + 1)) {
    swift_dynamicCast();
  }
  else {
    sub_1000184DC((uint64_t)&v28, &qword_1000EC690);
  }
  uint64_t v23 = sub_1000BB900();
  if (*(void *)(a5 + 16) && (unint64_t v25 = sub_10008BB58(v23, v24), (v26 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a5 + 56) + 32 * v25, (uint64_t)&v28);
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v29 + 1)) {
    swift_dynamicCast();
  }
  else {
    sub_1000184DC((uint64_t)&v28, &qword_1000EC690);
  }
  return sub_1000BAE90();
}

uint64_t FileTransferAttribute.ImageInfo.init(imageDict:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000BABC0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000BB900();
  if (!*(void *)(a1 + 16) || (unint64_t v11 = sub_10008BB58(v9, v10), (v12 & 1) == 0))
  {
    long long v46 = 0u;
    long long v47 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_10001DA70(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v46);
  swift_bridgeObjectRelease();
  if (!*((void *)&v47 + 1)) {
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_32;
  }
  uint64_t v13 = v45;
  unint64_t v42 = (unint64_t)v44;
  uint64_t v14 = sub_1000BB900();
  if (*(void *)(a1 + 16) && (unint64_t v16 = sub_10008BB58(v14, v15), (v17 & 1) != 0))
  {
    sub_10001DA70(*(void *)(a1 + 56) + 32 * v16, (uint64_t)&v46);
  }
  else
  {
    long long v46 = 0u;
    long long v47 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v47 + 1))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1000184DC((uint64_t)&v46, &qword_1000EC690);
LABEL_10:
    uint64_t v18 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v18, 1, v5);
  }
  uint64_t v20 = swift_dynamicCast();
  if ((v20 & 1) == 0)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  unint64_t v21 = v44;
  uint64_t v41 = v45;
  uint64_t v44 = 0;
  uint64_t v22 = __chkstk_darwin(v20);
  *(&v40 - 2) = (uint64_t)&v44;
  if ((v13 & 0x1000000000000000) != 0 || !(v13 & 0x2000000000000000 | v42 & 0x1000000000000000))
  {
    uint64_t v40 = (uint64_t)v21;
    sub_1000BBEC0();
    uint64_t v28 = swift_bridgeObjectRelease();
    if ((v43 & 1) == 0) {
      goto LABEL_36;
    }
  }
  else
  {
    __chkstk_darwin(v22);
    *(&v40 - 2) = (uint64_t)sub_10008CBEC;
    *(&v40 - 1) = v24;
    if ((v13 & 0x2000000000000000) != 0)
    {
      *(void *)&long long v46 = v23;
      *((void *)&v46 + 1) = v13 & 0xFFFFFFFFFFFFFFLL;
      if (v23 <= 0x20u && ((1 << v23) & 0x100003E01) != 0
        || (unint64_t v36 = (unsigned __int8 *)_swift_stdlib_strtod_clocale()) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
      uint64_t v40 = (uint64_t)v21;
      int v37 = *v36;
      uint64_t v28 = swift_bridgeObjectRelease();
      if (v37) {
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v40 = (uint64_t)v21;
      if ((v23 & 0x1000000000000000) != 0)
      {
        uint64_t v25 = (v13 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v26 = v23 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v25 = sub_1000BBF20();
      }
      char v27 = sub_10008CB48(v25, v26, (void (*)(uint64_t *__return_ptr))sub_10008CC04);
      uint64_t v28 = swift_bridgeObjectRelease();
      if ((v27 & 1) == 0) {
        goto LABEL_36;
      }
    }
  }
  uint64_t v44 = 0;
  uint64_t v29 = __chkstk_darwin(v28);
  *(&v40 - 2) = (uint64_t)&v44;
  uint64_t v30 = v41;
  if ((v41 & 0x1000000000000000) != 0 || !(v41 & 0x2000000000000000 | v40 & 0x1000000000000000))
  {
    sub_1000BBEC0();
    swift_bridgeObjectRelease();
    if (v43) {
      goto LABEL_29;
    }
    goto LABEL_37;
  }
  __chkstk_darwin(v29);
  *(&v40 - 2) = (uint64_t)sub_10008CBEC;
  *(&v40 - 1) = v32;
  if ((v30 & 0x2000000000000000) != 0)
  {
    *(void *)&long long v46 = v31;
    *((void *)&v46 + 1) = v30 & 0xFFFFFFFFFFFFFFLL;
    if (v31 > 0x20u || ((1 << v31) & 0x100003E01) == 0)
    {
      uint64_t v38 = (unsigned __int8 *)_swift_stdlib_strtod_clocale();
      if (v38)
      {
        int v39 = *v38;
        swift_bridgeObjectRelease();
        if (!v39) {
          goto LABEL_29;
        }
LABEL_37:
        sub_1000BB6C0();
        sub_10008CD80((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
        sub_1000BB6B0();
        return swift_willThrow();
      }
    }
LABEL_36:
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  unint64_t v42 = (unint64_t)&v40;
  if ((v31 & 0x1000000000000000) != 0)
  {
    uint64_t v33 = (v30 & 0xFFFFFFFFFFFFFFFLL) + 32;
    uint64_t v34 = v31 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v33 = sub_1000BBF20();
  }
  char v35 = sub_10008CB48(v33, v34, (void (*)(uint64_t *__return_ptr))sub_10008CC04);
  swift_bridgeObjectRelease();
  if ((v35 & 1) == 0) {
    goto LABEL_37;
  }
LABEL_29:
  uint64_t result = sub_1000BABB0();
  if (!v2)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
    uint64_t v18 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v18, 1, v5);
  }
  return result;
}

uint64_t FileTransferAttribute.AttachmentInfo.init(attributes:)(uint64_t a1)
{
  uint64_t v2 = sub_10001295C(&qword_1000EC5E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000B8240();
  uint64_t v70 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v57 - v9;
  uint64_t v11 = sub_1000BB900();
  if (!*(void *)(a1 + 16) || (unint64_t v13 = sub_10008BB58(v11, v12), (v14 & 1) == 0))
  {
    long long v67 = 0u;
    long long v68 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_10001DA70(*(void *)(a1 + 56) + 32 * v13, (uint64_t)&v67);
  swift_bridgeObjectRelease();
  if (!*((void *)&v68 + 1))
  {
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1000184DC((uint64_t)&v67, &qword_1000EC690);
    sub_1000BB900();
    sub_1000BB6C0();
    sub_10008CD80((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
  sub_10001DACC(&v67, v69);
  sub_10001DA70((uint64_t)v69, (uint64_t)&v67);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_1000B8220();
  swift_bridgeObjectRelease();
  uint64_t v15 = v70;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v4, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v10, v4, v5);
    uint64_t v17 = sub_1000BB900();
    if (*(void *)(a1 + 16) && (unint64_t v19 = sub_10008BB58(v17, v18), (v20 & 1) != 0))
    {
      sub_10001DA70(*(void *)(a1 + 56) + 32 * v19, (uint64_t)&v67);
    }
    else
    {
      long long v67 = 0u;
      long long v68 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v68 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v62 = v65;
        uint64_t v21 = sub_1000BB900();
        if (*(void *)(a1 + 16) && (unint64_t v23 = sub_10008BB58(v21, v22), (v24 & 1) != 0))
        {
          sub_10001DA70(*(void *)(a1 + 56) + 32 * v23, (uint64_t)&v67);
        }
        else
        {
          long long v67 = 0u;
          long long v68 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v68 + 1))
        {
          if (swift_dynamicCast())
          {
            uint64_t v25 = *((void *)&v65 + 1);
            uint64_t v60 = v65;
            uint64_t v61 = MBDIMFileTransferSizeKey;
            uint64_t v26 = sub_1000BB900();
            if (*(void *)(a1 + 16) && (unint64_t v28 = sub_10008BB58(v26, v27), (v29 & 1) != 0))
            {
              sub_10001DA70(*(void *)(a1 + 56) + 32 * v28, (uint64_t)&v65);
            }
            else
            {
              long long v65 = 0u;
              long long v66 = 0u;
            }
            swift_bridgeObjectRelease();
            if (*((void *)&v66 + 1))
            {
              sub_10001DACC(&v65, &v67);
              sub_10001DA70((uint64_t)&v67, (uint64_t)&v65);
              if ((swift_dynamicCast() & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
LABEL_81:
                swift_bridgeObjectRelease();
                uint64_t v47 = v70;
                sub_1000BB900();
                sub_1000BB6C0();
                sub_10008CD80((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
                swift_allocError();
                sub_1000BB6B0();
                swift_willThrow();
                sub_100015C54((uint64_t)&v67);
                (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v5);
                return sub_100015C54((uint64_t)v69);
              }
              unint64_t v31 = HIBYTE(v64) & 0xF;
              uint64_t v32 = v63 & 0xFFFFFFFFFFFFLL;
              if ((v64 & 0x2000000000000000) != 0) {
                unint64_t v33 = HIBYTE(v64) & 0xF;
              }
              else {
                unint64_t v33 = v63 & 0xFFFFFFFFFFFFLL;
              }
              if (!v33)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
LABEL_80:
                swift_bridgeObjectRelease();
                goto LABEL_81;
              }
              if ((v64 & 0x1000000000000000) != 0)
              {
                uint64_t v58 = sub_10008C06C(v63, v64, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10008C164);
                int v59 = v56;
                goto LABEL_75;
              }
              if ((v64 & 0x2000000000000000) == 0)
              {
                if ((v63 & 0x1000000000000000) != 0) {
                  uint64_t v34 = (unsigned __int8 *)((v64 & 0xFFFFFFFFFFFFFFFLL) + 32);
                }
                else {
                  uint64_t v34 = (unsigned __int8 *)sub_1000BBF20();
                }
                uint64_t v58 = (uint64_t)sub_10008C164(v34, v32, 10);
                LODWORD(v31) = v35 & 1;
                goto LABEL_74;
              }
              *(void *)&long long v65 = v63;
              *((void *)&v65 + 1) = v64 & 0xFFFFFFFFFFFFFFLL;
              if (v63 == 43)
              {
                if (!v31) {
                  goto LABEL_116;
                }
                if (v31 == 1) {
                  goto LABEL_114;
                }
                if ((BYTE1(v63) - 48) > 9u) {
                  goto LABEL_72;
                }
                unint64_t v39 = (BYTE1(v63) - 48);
                if (v31 == 2) {
                  goto LABEL_90;
                }
                if ((BYTE2(v63) - 48) > 9u) {
                  goto LABEL_72;
                }
                uint64_t v58 = 10 * (BYTE1(v63) - 48) + (BYTE2(v63) - 48);
                unint64_t v40 = v31 - 3;
                if (v40)
                {
                  uint64_t v41 = (unsigned __int8 *)&v65 + 3;
                  while (1)
                  {
                    unsigned int v42 = *v41 - 48;
                    if (v42 > 9) {
                      goto LABEL_72;
                    }
                    if (!is_mul_ok(v58, 0xAuLL)) {
                      goto LABEL_72;
                    }
                    BOOL v37 = __CFADD__(10 * v58, v42);
                    uint64_t v58 = 10 * v58 + v42;
                    if (v37) {
                      goto LABEL_72;
                    }
                    int v59 = 0;
                    ++v41;
                    if (!--v40) {
                      goto LABEL_75;
                    }
                  }
                }
              }
              else
              {
                if (v63 == 45)
                {
                  if (v31)
                  {
                    if (v31 != 1)
                    {
                      unsigned __int8 v36 = BYTE1(v63) - 48;
                      if ((BYTE1(v63) - 48) <= 9u)
                      {
                        unint64_t v30 = 0;
                        BOOL v37 = v36 == 0;
                        unint64_t v38 = -(uint64_t)v36;
                        if (!v37) {
                          goto LABEL_117;
                        }
                        if (v31 == 2)
                        {
                          int v59 = 0;
                          uint64_t v58 = v38;
LABEL_75:
                          swift_bridgeObjectRelease();
                          if ((v59 & 1) == 0)
                          {
                            uint64_t v61 = v25;
                            uint64_t v43 = sub_1000BB900();
                            if (*(void *)(a1 + 16) && (unint64_t v45 = sub_10008BB58(v43, v44), (v46 & 1) != 0))
                            {
                              sub_10001DA70(*(void *)(a1 + 56) + 32 * v45, (uint64_t)&v65);
                            }
                            else
                            {
                              long long v65 = 0u;
                              long long v66 = 0u;
                            }
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            if (*((void *)&v66 + 1))
                            {
                              if (swift_dynamicCast())
                              {
                                uint64_t v15 = v70;
                                (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v8, v10, v5);
                                sub_1000BAB60();
                                sub_100015C54((uint64_t)&v67);
                                goto LABEL_24;
                              }
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                            }
                            else
                            {
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                              sub_1000184DC((uint64_t)&v65, &qword_1000EC690);
                            }
                            sub_1000BB900();
                            sub_1000BB6C0();
                            sub_10008CD80((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
                            swift_allocError();
                            sub_1000BB6B0();
                            swift_willThrow();
                            sub_100015C54((uint64_t)&v67);
LABEL_34:
                            (*(void (**)(char *, uint64_t))(v70 + 8))(v10, v5);
                            return sub_100015C54((uint64_t)v69);
                          }
                          swift_bridgeObjectRelease();
                          goto LABEL_80;
                        }
                        unsigned __int8 v51 = BYTE2(v63) - 48;
                        if ((BYTE2(v63) - 48) <= 9u && is_mul_ok(v38, 0xAuLL))
                        {
                          unint64_t v52 = 10 * v38;
                          uint64_t v58 = v52 - v51;
                          if (v52 >= v51)
                          {
                            unint64_t v53 = v31 - 3;
                            if (!v53) {
                              goto LABEL_103;
                            }
                            unint64_t v54 = (unsigned __int8 *)&v65 + 3;
                            while (1)
                            {
                              unsigned int v55 = *v54 - 48;
                              if (v55 > 9) {
                                break;
                              }
                              if (!is_mul_ok(v58, 0xAuLL)) {
                                break;
                              }
                              BOOL v37 = 10 * v58 >= (unint64_t)v55;
                              uint64_t v58 = 10 * v58 - v55;
                              if (!v37) {
                                break;
                              }
                              int v59 = 0;
                              ++v54;
                              if (!--v53) {
                                goto LABEL_75;
                              }
                            }
                          }
                        }
                      }
LABEL_72:
                      uint64_t v58 = 0;
LABEL_73:
                      LODWORD(v31) = 1;
LABEL_74:
                      int v59 = v31;
                      goto LABEL_75;
                    }
LABEL_114:
                    uint64_t v58 = 0;
                    goto LABEL_74;
                  }
                  __break(1u);
LABEL_116:
                  __break(1u);
LABEL_117:
                  uint64_t v58 = v30;
                  goto LABEL_73;
                }
                if (!v31 || (v63 - 48) > 9u) {
                  goto LABEL_72;
                }
                unint64_t v39 = (v63 - 48);
                if (v31 == 1)
                {
LABEL_90:
                  uint64_t v58 = v39;
                  int v59 = 0;
                  goto LABEL_75;
                }
                if ((BYTE1(v63) - 48) > 9u) {
                  goto LABEL_72;
                }
                uint64_t v58 = 10 * (v63 - 48) + (BYTE1(v63) - 48);
                unint64_t v48 = v31 - 2;
                if (v48)
                {
                  uint64_t v49 = (unsigned __int8 *)&v65 + 2;
                  while (1)
                  {
                    unsigned int v50 = *v49 - 48;
                    if (v50 > 9) {
                      goto LABEL_72;
                    }
                    if (!is_mul_ok(v58, 0xAuLL)) {
                      goto LABEL_72;
                    }
                    BOOL v37 = __CFADD__(10 * v58, v50);
                    uint64_t v58 = 10 * v58 + v50;
                    if (v37) {
                      goto LABEL_72;
                    }
                    int v59 = 0;
                    ++v49;
                    if (!--v48) {
                      goto LABEL_75;
                    }
                  }
                }
              }
LABEL_103:
              int v59 = 0;
              goto LABEL_75;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1000184DC((uint64_t)&v65, &qword_1000EC690);
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1000184DC((uint64_t)&v67, &qword_1000EC690);
        }
        sub_1000BB900();
        sub_1000BB6C0();
        sub_10008CD80((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
        sub_1000BB6B0();
        swift_willThrow();
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1000184DC((uint64_t)&v67, &qword_1000EC690);
    }
    sub_1000BB900();
    sub_1000BB6C0();
    sub_10008CD80((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();
LABEL_24:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v5);
    return sub_100015C54((uint64_t)v69);
  }
  swift_bridgeObjectRelease();
  sub_1000184DC((uint64_t)v4, &qword_1000EC5E0);
LABEL_10:
  sub_1000BB900();
  sub_1000BB6C0();
  sub_10008CD80((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
  swift_allocError();
  sub_1000BB6B0();
  swift_willThrow();
  return sub_100015C54((uint64_t)v69);
}

uint64_t sub_10008BA0C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008BA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100084760(a1, a2, a3, a4, *(void *)(v4 + 16), *(char ***)(v4 + 24));
}

uint64_t sub_10008BA24()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008BA34()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10008BA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008BA6C()
{
  return swift_release();
}

void *sub_10008BA74(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10001295C(&qword_1000ED848);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10008BADC(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1000BBA00();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_1000BB9D0();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unint64_t sub_10008BB58(uint64_t a1, uint64_t a2)
{
  sub_1000BC230();
  sub_1000BB990();
  Swift::Int v4 = sub_1000BC250();

  return sub_10008BCC8(a1, a2, v4);
}

unint64_t sub_10008BBD0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1000BBE90(*(void *)(v2 + 40));

  return sub_10008BDAC(a1, v4);
}

unint64_t sub_10008BC14(uint64_t a1)
{
  sub_1000BC230();
  type metadata accessor for CFString(0);
  sub_10008CD80(&qword_1000EDA68, type metadata accessor for CFString);
  sub_1000B8440();
  Swift::Int v2 = sub_1000BC250();

  return sub_10008BE74(a1, v2);
}

unint64_t sub_10008BCC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1000BC1A0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1000BC1A0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10008BDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10008CCD0(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_1000BBEA0();
      sub_10007B1C4((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10008BE74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    char v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_10008CD80(&qword_1000EDA68, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_1000B8430();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_1000B8430();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unsigned char *sub_10008BFD0@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (uint64_t result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

unsigned __int8 *sub_10008C03C(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_10008C164(a1, a2, a3);
}

uint64_t sub_10008C054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008C06C(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10008C164);
}

uint64_t sub_10008C06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1000BBA10();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_10008C65C();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (void *)sub_1000BBF20();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_10008C164(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  char v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_10008C3E0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_10008C65C()
{
  unint64_t v0 = sub_1000BBA20();
  uint64_t v4 = sub_10008C6DC(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10008C6DC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10008C834(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_10008BA74(v9, 0),
          unint64_t v12 = sub_10008C934((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_1000BB980();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_1000BB980();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_1000BBF20();
LABEL_4:

  return sub_1000BB980();
}

uint64_t sub_10008C834(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_10008BADC(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_10008BADC(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_10008C934(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_10008BADC(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1000BB9F0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_1000BBF20();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_10008BADC(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1000BB9C0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_10008CB48(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

void *sub_10008CBA8@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X2>, unsigned char *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

unsigned char *sub_10008CBEC@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_10008CC1C(a1, a2);
}

void *sub_10008CC04@<X0>(unsigned char *a1@<X8>)
{
  return sub_10008CC8C(a1);
}

unsigned char *sub_10008CC1C@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (uint64_t result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_10008CC8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_10008CCD0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10008CD2C(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    return swift_slowDealloc();
  }
  return result;
}

uint64_t sub_10008CD80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008CDC8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001000C8D90) {
    return 1;
  }
  if ((sub_1000BC1A0() & 1) != 0 || a1 == 0x702E63696C627570 && a2 == 0xEA0000000000676ELL) {
    return 1;
  }
  if ((sub_1000BC1A0() & 1) != 0 || a1 == 0xD000000000000014 && a2 == 0x80000001000C89D0) {
    return 1;
  }
  if ((sub_1000BC1A0() & 1) != 0 || a1 == 0x682E63696C627570 && a2 == 0xEB00000000666965) {
    return 1;
  }
  char v4 = sub_1000BC1A0();
  BOOL v5 = a1 == 0x682E63696C627570 && a2 == 0xEB00000000636965;
  BOOL v6 = v5;
  if ((v4 & 1) != 0 || v6) {
    return 1;
  }
  char v7 = sub_1000BC1A0();
  BOOL v8 = a1 == 0x682E63696C627570 && a2 == 0xEC00000073636965;
  BOOL v9 = v8;
  if ((v7 & 1) != 0 || v9) {
    return 1;
  }
  char v10 = sub_1000BC1A0();
  BOOL v11 = a1 == 0xD000000000000014 && a2 == 0x80000001000CB710;
  BOOL v12 = v11;
  if ((v10 & 1) != 0 || v12) {
    return 1;
  }

  return sub_1000BC1A0();
}

uint64_t sub_10008D01C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v132 = a4;
  unint64_t v138 = a2;
  uint64_t v8 = sub_10001295C(&qword_1000EC790);
  __chkstk_darwin(v8 - 8);
  char v10 = (char *)v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001295C(&qword_1000ED730);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10001295C(&qword_1000ED738);
  __chkstk_darwin(v14 - 8);
  uint64_t v133 = (uint64_t)v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10001295C(&qword_1000ED740);
  __chkstk_darwin(v16 - 8);
  uint64_t v136 = (uint64_t)v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10001295C(&qword_1000EC678);
  __chkstk_darwin(v18 - 8);
  uint64_t v137 = (uint64_t)v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000BB500();
  uint64_t v139 = *(void *)(v20 - 8);
  uint64_t v140 = v20;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v106 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10001295C(&qword_1000ED728);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)v106 - v27;
  uint64_t v29 = sub_1000B8F10();
  uint64_t v134 = *(void *)(v29 - 8);
  uint64_t v135 = v29;
  __chkstk_darwin(v29);
  int v142 = (char *)v106 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000BB5D0();
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v143 = (char *)v106 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*a1)
  {
    sub_100018190();
    unint64_t v40 = (void *)sub_1000BBD40();
    sub_1000BBBE0();
    sub_1000B8770();

    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
LABEL_7:
    sub_1000BB6B0();
    return swift_willThrow();
  }
  uint64_t v129 = v33;
  uint64_t v130 = v32;
  char v123 = v13;
  BOOL v124 = v10;
  swift_bridgeObjectRetain();
  uint64_t v131 = a3;
  uint64_t v35 = *(void *)(sub_1000BB4C0() + 16);
  swift_bridgeObjectRelease();
  if (!v35)
  {
    swift_bridgeObjectRelease();
    sub_100018190();
    uint64_t v41 = (void *)sub_1000BBD40();
    sub_1000BBBE0();
    sub_1000B8770();

    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
    goto LABEL_7;
  }
  uint64_t v121 = a5;
  sub_1000B86E0();
  int v122 = (int *)type metadata accessor for MessageDictionary();
  unsigned __int8 v36 = (void *)((char *)a1 + v122[52]);
  uint64_t v37 = *v36;
  uint64_t v127 = v36[1];
  uint64_t v128 = v37;
  swift_bridgeObjectRetain();
  unint64_t v138 = a1;
  sub_100065214((uint64_t)v28);
  uint64_t v38 = _s17AssociatedMessageVMa();
  unint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48);
  if (v39(v28, 1, v38) == 1)
  {
    sub_10008DE48((uint64_t)v28);
    uint64_t v125 = 0;
    uint64_t v126 = 0;
  }
  else
  {
    uint64_t v43 = &v28[*(int *)(v38 + 28)];
    uint64_t v44 = *(void *)v43;
    uint64_t v125 = *((void *)v43 + 1);
    uint64_t v126 = v44;
    sub_10008DEA8((uint64_t)v28);
  }
  sub_100065214((uint64_t)v26);
  unsigned int v45 = v39(v26, 1, v38);
  char v46 = v142;
  if (v45 == 1)
  {
    sub_10008DE48((uint64_t)v26);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_10008DEA8((uint64_t)v26);
  }
  uint64_t v47 = v141;
  (*(void (**)(char *, uint64_t, uint64_t))(v139 + 16))(v22, v131, v140);
  sub_1000BB520();
  unint64_t v48 = v138;
  if (v47) {
    return (*(uint64_t (**)(char *, uint64_t))(v129 + 8))(v143, v130);
  }
  (*(void (**)(char *, void, uint64_t))(v134 + 104))(v46, enum case for TextMessage.MessageType.sticker(_:), v135);
  uint64_t v49 = v122;
  sub_1000182A0((uint64_t)v48 + v122[18], v137, &qword_1000EC678);
  unsigned int v50 = (void *)((char *)v48 + v49[31]);
  uint64_t v51 = v50[1];
  unint64_t v52 = (void *)((char *)v48 + v49[32]);
  uint64_t v53 = v52[1];
  unint64_t v54 = (void *)((char *)v48 + v49[33]);
  unsigned int v55 = (void *)((char *)v48 + v49[23]);
  int v56 = (void *)((char *)v48 + v49[24]);
  uint64_t v57 = (void *)((char *)v48 + v49[21]);
  uint64_t v58 = (void *)((char *)v48 + v49[22]);
  uint64_t result = v58[1];
  if (result)
  {
    uint64_t v59 = *v58;
    unint64_t v60 = v58[1];
  }
  else
  {
    unint64_t v60 = 0xE100000000000000;
    uint64_t v59 = 56;
  }
  uint64_t v61 = *v50;
  uint64_t v62 = *v52;
  uint64_t v63 = *v54;
  uint64_t v64 = v54[1];
  uint64_t v65 = *v55;
  uint64_t v66 = v55[1];
  uint64_t v67 = *v56;
  uint64_t v68 = v56[1];
  uint64_t v69 = HIBYTE(v60) & 0xF;
  uint64_t v70 = *v57;
  uint64_t v71 = v59 & 0xFFFFFFFFFFFFLL;
  if ((v60 & 0x2000000000000000) != 0) {
    uint64_t v72 = HIBYTE(v60) & 0xF;
  }
  else {
    uint64_t v72 = v59 & 0xFFFFFFFFFFFFLL;
  }
  int v73 = *((unsigned __int8 *)v57 + 8);
  uint64_t v140 = v51;
  uint64_t v141 = v53;
  uint64_t v139 = v63;
  uint64_t v134 = v61;
  uint64_t v135 = v62;
  uint64_t v130 = v65;
  uint64_t v131 = v64;
  uint64_t v128 = v67;
  uint64_t v129 = v66;
  uint64_t v126 = v70;
  uint64_t v127 = v68;
  LODWORD(v125) = v73;
  if (!v72)
  {
    uint64_t v120 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v119 = 0;
    int v117 = 1;
LABEL_58:
    uint64_t v86 = v122;
    uint64_t v87 = (void *)((char *)v48 + v122[25]);
    uint64_t v118 = *v87;
    int v145 = *((unsigned __int8 *)v87 + 8);
    sub_1000182A0(v132, v136, &qword_1000ED740);
    uint64_t v88 = v86[46];
    uint64_t v89 = (void *)((char *)v48 + v86[45]);
    uint64_t v90 = v89[1];
    uint64_t v132 = *v89;
    uint64_t v113 = v90;
    uint64_t v91 = *(void *)((char *)v48 + v88 + 8);
    uint64_t v116 = *(void *)((char *)v48 + v88);
    uint64_t v111 = v91;
    uint64_t v92 = v86[48];
    BOOL v93 = (void *)((char *)v48 + v86[47]);
    uint64_t v94 = v93[1];
    uint64_t v115 = *v93;
    uint64_t v109 = v94;
    uint64_t v95 = *(void *)((char *)v48 + v92 + 8);
    uint64_t v114 = *(void *)((char *)v48 + v92);
    uint64_t v108 = v95;
    uint64_t v96 = v86[50];
    int v112 = *((unsigned __int8 *)v48 + v86[49]);
    uint64_t v110 = *(void *)((char *)v48 + v96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10007B260(v133);
    v106[1] = *(void *)((char *)v48 + v86[44]);
    int v107 = *((unsigned __int8 *)v48 + 97);
    swift_bridgeObjectRetain();
    sub_1000B8F20();
    sub_1000182A0((uint64_t)v48 + v86[20], (uint64_t)v124, &qword_1000EC790);
    swift_bridgeObjectRetain();
    return sub_1000B8F40();
  }
  if ((v60 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v78 = sub_10008C054(v59, v60, 10);
    char v77 = v105;
    goto LABEL_54;
  }
  unint64_t v119 = v60;
  if ((v60 & 0x2000000000000000) == 0)
  {
    if ((v59 & 0x1000000000000000) != 0) {
      uint64_t v74 = (unsigned __int8 *)((v60 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v74 = (unsigned __int8 *)sub_1000BBF20();
    }
    uint64_t v75 = sub_10008C03C(v74, v71, 10);
    char v77 = v76 & 1;
    unint64_t v78 = (unint64_t)v75;
    goto LABEL_53;
  }
  v144[0] = v59;
  v144[1] = v60 & 0xFFFFFFFFFFFFFFLL;
  if (v59 == 43)
  {
    if (v69)
    {
      if (v69 != 1 && (BYTE1(v59) - 48) <= 9u)
      {
        unint64_t v78 = (BYTE1(v59) - 48);
        if (v69 == 2) {
          goto LABEL_52;
        }
        if ((BYTE2(v59) - 48) <= 9u)
        {
          unint64_t v78 = 10 * (BYTE1(v59) - 48) + (BYTE2(v59) - 48);
          uint64_t v82 = v69 - 3;
          if (v82)
          {
            uint64_t v83 = (unsigned __int8 *)v144 + 3;
            while (1)
            {
              unsigned int v84 = *v83 - 48;
              if (v84 > 9) {
                goto LABEL_49;
              }
              if (!is_mul_ok(v78, 0xAuLL)) {
                goto LABEL_49;
              }
              BOOL v80 = __CFADD__(10 * v78, v84);
              unint64_t v78 = 10 * v78 + v84;
              if (v80) {
                goto LABEL_49;
              }
              char v77 = 0;
              ++v83;
              if (!--v82) {
                goto LABEL_53;
              }
            }
          }
          goto LABEL_52;
        }
      }
      goto LABEL_49;
    }
  }
  else
  {
    if (v59 != 45)
    {
      if (v69 && (v59 - 48) <= 9u)
      {
        unint64_t v78 = (v59 - 48);
        if (v69 == 1) {
          goto LABEL_52;
        }
        if ((BYTE1(v59) - 48) <= 9u)
        {
          unint64_t v78 = 10 * (v59 - 48) + (BYTE1(v59) - 48);
          uint64_t v97 = v69 - 2;
          if (v97)
          {
            unint64_t v98 = (unsigned __int8 *)v144 + 2;
            while (1)
            {
              unsigned int v99 = *v98 - 48;
              if (v99 > 9) {
                goto LABEL_49;
              }
              if (!is_mul_ok(v78, 0xAuLL)) {
                goto LABEL_49;
              }
              BOOL v80 = __CFADD__(10 * v78, v99);
              unint64_t v78 = 10 * v78 + v99;
              if (v80) {
                goto LABEL_49;
              }
              char v77 = 0;
              ++v98;
              if (!--v97) {
                goto LABEL_53;
              }
            }
          }
          goto LABEL_52;
        }
      }
LABEL_49:
      unint64_t v78 = 0;
LABEL_50:
      char v77 = 1;
      goto LABEL_53;
    }
    if (v69)
    {
      if (v69 != 1)
      {
        unsigned __int8 v79 = BYTE1(v59) - 48;
        if ((BYTE1(v59) - 48) <= 9u)
        {
          unint64_t v78 = 0;
          BOOL v80 = v79 == 0;
          unint64_t v81 = -(uint64_t)v79;
          if (!v80) {
            goto LABEL_50;
          }
          if (v69 == 2)
          {
            char v77 = 0;
            unint64_t v78 = v81;
LABEL_53:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_54:
            swift_bridgeObjectRelease();
            uint64_t v120 = 0;
            int v117 = v77 & 1;
            if (v77) {
              unint64_t v85 = 0;
            }
            else {
              unint64_t v85 = v78;
            }
            unint64_t v119 = v85;
            goto LABEL_58;
          }
          unsigned __int8 v100 = BYTE2(v59) - 48;
          if ((BYTE2(v59) - 48) <= 9u && is_mul_ok(v81, 0xAuLL))
          {
            unint64_t v101 = 10 * v81;
            unint64_t v78 = v101 - v100;
            if (v101 >= v100)
            {
              uint64_t v102 = v69 - 3;
              if (v102)
              {
                uint64_t v103 = (unsigned __int8 *)v144 + 3;
                while (1)
                {
                  unsigned int v104 = *v103 - 48;
                  if (v104 > 9) {
                    goto LABEL_49;
                  }
                  if (!is_mul_ok(v78, 0xAuLL)) {
                    goto LABEL_49;
                  }
                  BOOL v80 = 10 * v78 >= v104;
                  unint64_t v78 = 10 * v78 - v104;
                  if (!v80) {
                    goto LABEL_49;
                  }
                  char v77 = 0;
                  ++v103;
                  if (!--v102) {
                    goto LABEL_53;
                  }
                }
              }
LABEL_52:
              char v77 = 0;
              goto LABEL_53;
            }
          }
        }
      }
      goto LABEL_49;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10008DE48(uint64_t a1)
{
  uint64_t v2 = sub_10001295C(&qword_1000ED728);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008DEA8(uint64_t a1)
{
  uint64_t v2 = _s17AssociatedMessageVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008DF04(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_10008E264(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_10008E264(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1000BC1A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10008DF90()
{
  char v1 = *v0;
  sub_1000BC230();
  sub_10008E264(v1);
  sub_1000BB990();
  swift_bridgeObjectRelease();
  return sub_1000BC250();
}

uint64_t sub_10008DFF4()
{
  sub_10008E264(*v0);
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10008E048()
{
  char v1 = *v0;
  sub_1000BC230();
  sub_10008E264(v1);
  sub_1000BB990();
  swift_bridgeObjectRelease();
  return sub_1000BC250();
}

void sub_10008E0A8(void *a1@<X8>)
{
  *a1 = &off_1000E1798;
}

uint64_t sub_10008E0B8()
{
  uint64_t v0 = 86;
  char v1 = &byte_1000E17B8;
  while (1)
  {
    char v4 = *v1++;
    char v3 = v4;
    uint64_t v5 = sub_10008E264(v4);
    uint64_t v7 = v6;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v10 = sub_10008BB58(v5, v7);
    uint64_t v11 = _swiftEmptyDictionarySingleton[2];
    BOOL v12 = (v9 & 1) == 0;
    uint64_t v13 = v11 + v12;
    if (__OFADD__(v11, v12)) {
      break;
    }
    char v14 = v9;
    if (_swiftEmptyDictionarySingleton[3] >= v13)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v9) {
          goto LABEL_2;
        }
      }
      else
      {
        sub_100091C3C();
        if (v14) {
          goto LABEL_2;
        }
      }
    }
    else
    {
      sub_100091650(v13, isUniquelyReferenced_nonNull_native);
      unint64_t v15 = sub_10008BB58(v5, v7);
      if ((v14 & 1) != (v16 & 1)) {
        goto LABEL_18;
      }
      unint64_t v10 = v15;
      if (v14)
      {
LABEL_2:
        *(unsigned char *)(_swiftEmptyDictionarySingleton[7] + v10) = v3;
        goto LABEL_3;
      }
    }
    _swiftEmptyDictionarySingleton[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v17 = (uint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v10);
    *uint64_t v17 = v5;
    v17[1] = v7;
    *(unsigned char *)(_swiftEmptyDictionarySingleton[7] + v10) = v3;
    uint64_t v18 = _swiftEmptyDictionarySingleton[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_17;
    }
    _swiftEmptyDictionarySingleton[2] = v20;
    swift_bridgeObjectRetain();
LABEL_3:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (!--v0)
    {
      off_1000EDAE8 = _swiftEmptyDictionarySingleton;
      return result;
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  uint64_t result = sub_1000BC1E0();
  __break(1u);
  return result;
}

uint64_t sub_10008E264(char a1)
{
  uint64_t result = 0x6974617275447661;
  switch(a1)
  {
    case 1:
      goto LABEL_4;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 29:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 50:
    case 51:
    case 52:
    case 58:
    case 79:
    case 85:
      return sub_1000BB900();
    case 9:
      if (!kPFImagePropertyCustomPhotoProcessingFlags) {
        goto LABEL_101;
      }
      return sub_1000BB900();
    case 24:
      if (kPFVideoPropertyVideoDynamicRange) {
        return sub_1000BB900();
      }
      __break(1u);
LABEL_10:
      if (!kPFImagePropertyHDRGain)
      {
        __break(1u);
LABEL_12:
        if (!kPFImagePropertyHasHDRGainMap)
        {
          __break(1u);
LABEL_14:
          if (!kPFVideoPropertyVideoContainsCinematicData)
          {
            __break(1u);
LABEL_16:
            if (!kPFMediaPropertyLivePhotoPairingIdentifier) {
              goto LABEL_101;
            }
          }
        }
      }
      return sub_1000BB900();
    case 25:
      goto LABEL_10;
    case 26:
      goto LABEL_12;
    case 27:
      goto LABEL_14;
    case 28:
      goto LABEL_16;
    case 30:
      if (kPFVideoPropertyPlaybackVariationIdentifier) {
        return sub_1000BB900();
      }
      __break(1u);
LABEL_20:
      if (!kPFVideoPropertyVideoComplVideoDurationValue)
      {
        __break(1u);
LABEL_22:
        if (!kPFVideoPropertyVideoComplVideoDurationTimescale)
        {
          __break(1u);
LABEL_24:
          if (!kPFVideoPropertyVideoComplVideoImageDisplayValue)
          {
            __break(1u);
LABEL_26:
            if (!kPFVideoPropertyVideoComplVideoImageDisplayTimescale)
            {
              __break(1u);
LABEL_28:
              if (!kPFVideoPropertyAVFPS)
              {
                __break(1u);
LABEL_30:
                if (!kPFVideoPropertyCustomCodecFourCharCode)
                {
                  __break(1u);
LABEL_32:
                  if (!kPFVideoPropertyCaptureMode)
                  {
                    __break(1u);
LABEL_34:
                    if (!kPFVideoPropertyVideoIsMontage)
                    {
                      __break(1u);
LABEL_36:
                      if (!kPFVideoPropertyIsProRes)
                      {
                        __break(1u);
LABEL_38:
                        if (!kPFVideoPropertyVideoDurationValue)
                        {
                          __break(1u);
LABEL_40:
                          if (!kPFVideoPropertyVideoDurationTimescale)
                          {
                            __break(1u);
LABEL_42:
                            if (!kPFMediaPropertyOriginatingAssetIdentifier) {
                              goto LABEL_101;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      return sub_1000BB900();
    case 31:
      goto LABEL_20;
    case 32:
      goto LABEL_22;
    case 33:
      goto LABEL_24;
    case 34:
      goto LABEL_26;
    case 35:
      return result;
    case 36:
      goto LABEL_28;
    case 37:
      goto LABEL_30;
    case 38:
      goto LABEL_32;
    case 39:
      goto LABEL_34;
    case 40:
      goto LABEL_36;
    case 41:
      goto LABEL_38;
    case 42:
      goto LABEL_40;
    case 43:
      goto LABEL_42;
    case 49:
      return 0x5465746144737067;
    case 53:
      return 0x6953656C6946534ELL;
    case 54:
      if (kPFFilePropertyUniformTypeIdentifier) {
        return sub_1000BB900();
      }
      __break(1u);
LABEL_48:
      if (!kPFFilePropertyOriginalFilename)
      {
        __break(1u);
LABEL_50:
        if (!kPFImagePropertyIsPhotoBooth)
        {
          __break(1u);
LABEL_52:
          if (!kPFImagePropertyBurstUuid) {
            goto LABEL_101;
          }
        }
      }
      return sub_1000BB900();
    case 55:
      goto LABEL_48;
    case 56:
      goto LABEL_50;
    case 57:
      goto LABEL_52;
    case 59:
      if (kPFImagePropertyFrontFacingCamera) {
        return sub_1000BB900();
      }
      __break(1u);
LABEL_56:
      if (!kPFImagePropertySpatialOverCaptureIdentifier)
      {
        __break(1u);
LABEL_58:
        if (!kPFImagePropertySemanticStyleSceneBias)
        {
          __break(1u);
LABEL_60:
          if (!kPFImagePropertySemanticStyleWarmthBias)
          {
            __break(1u);
LABEL_62:
            if (!kPFImagePropertySemanticStyleRenderingVersion)
            {
              __break(1u);
LABEL_64:
              if (!kPFImagePropertySemanticStylePreset)
              {
                __break(1u);
LABEL_66:
                if (!kPFImagePropertySmartStyleHasSmartStyle)
                {
                  __break(1u);
LABEL_68:
                  if (!kPFImagePropertySmartStyleToneBias)
                  {
                    __break(1u);
LABEL_70:
                    if (!kPFImagePropertySmartStyleColorBias)
                    {
                      __break(1u);
LABEL_72:
                      if (!kPFImagePropertySmartStyleCast)
                      {
                        __break(1u);
LABEL_74:
                        if (!kPFImagePropertySmartStyleRenderingVersion)
                        {
                          __break(1u);
LABEL_76:
                          if (!kPFImagePropertySmartStyleIsReversible)
                          {
                            __break(1u);
LABEL_78:
                            if (!kPFImagePropertySmartStyleVideoCastValue)
                            {
                              __break(1u);
LABEL_80:
                              if (!kPFImagePropertyIsHDR)
                              {
                                __break(1u);
LABEL_82:
                                if (!kPFImagePropertyHasISOGainMap)
                                {
                                  __break(1u);
LABEL_84:
                                  if (!kPFImagePropertyIsAnimatedImage)
                                  {
                                    __break(1u);
LABEL_86:
                                    if (!kPFImagePropertyStillImageCaptureFlags)
                                    {
                                      __break(1u);
LABEL_88:
                                      if (!kPFImagePropertyCameraUsedForCapture)
                                      {
                                        __break(1u);
LABEL_90:
                                        if (!kPFImagePropertyExifFlashFired) {
                                          goto LABEL_101;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      return sub_1000BB900();
    case 60:
      goto LABEL_56;
    case 61:
      goto LABEL_58;
    case 62:
      goto LABEL_60;
    case 63:
      goto LABEL_62;
    case 64:
      goto LABEL_64;
    case 65:
      goto LABEL_66;
    case 66:
      goto LABEL_68;
    case 67:
      goto LABEL_70;
    case 68:
      if (!kPFImagePropertySmartStyleIntensity)
      {
        __break(1u);
        JUMPOUT(0x10008E878);
      }
      return sub_1000BB900();
    case 69:
      goto LABEL_72;
    case 70:
      goto LABEL_74;
    case 71:
      goto LABEL_76;
    case 72:
      goto LABEL_78;
    case 73:
      goto LABEL_80;
    case 74:
      goto LABEL_82;
    case 75:
      goto LABEL_84;
    case 76:
      goto LABEL_86;
    case 77:
      goto LABEL_88;
    case 78:
      goto LABEL_90;
    case 80:
      if (kPFVideoPropertyCaptureModeTimelapse) {
        return sub_1000BB900();
      }
      __break(1u);
LABEL_94:
      if (!kPFImagePropertyHasSpatialAudio)
      {
        __break(1u);
LABEL_96:
        if (!kPFImagePropertyIsAlchemist)
        {
          __break(1u);
LABEL_98:
          if (!kPFImagePropertyIsThreeImageStereoHEIC)
          {
            __break(1u);
LABEL_100:
            if (!kPFImagePropertyGenerativeAIImageType) {
LABEL_101:
            }
              __break(1u);
          }
        }
      }
      return sub_1000BB900();
    case 81:
      goto LABEL_94;
    case 82:
      goto LABEL_96;
    case 83:
      goto LABEL_98;
    case 84:
      goto LABEL_100;
    default:
      if (!kPFMediaPropertyCreationDate)
      {
        __break(1u);
LABEL_4:
        if (!kPFMediaPropertyTimeZoneOffsetSeconds) {
          goto LABEL_101;
        }
      }
      return sub_1000BB900();
  }
}

uint64_t sub_10008E9D0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  char v3 = sub_100091FB8(*a1, a1[1]);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_10008EA18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10008E264(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id sub_10008EA44(void *a1)
{
  uint64_t v2 = sub_1000B97A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v112 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001295C(&qword_1000EDAF0);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001295C(&qword_1000EC678);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001295C(&qword_1000EC790);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  unint64_t v15 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v112 - v16;
  id result = [a1 syndicationProperties];
  if (result)
  {
    BOOL v19 = result;
    int v117 = v17;
    uint64_t v118 = v15;
    unint64_t v119 = v5;
    uint64_t v120 = v2;
    uint64_t v20 = sub_1000BB870();

    int64_t v21 = 0;
    uint64_t v22 = *(void *)(v20 + 64);
    uint64_t v121 = v20 + 64;
    uint64_t v23 = 1 << *(unsigned char *)(v20 + 32);
    uint64_t v24 = -1;
    if (v23 < 64) {
      uint64_t v24 = ~(-1 << v23);
    }
    unint64_t v25 = v24 & v22;
    unsigned int v116 = enum case for MediaMetadata.AppleMakerNoteCamera.unknown(_:);
    uint64_t v115 = (void (**)(char *, void, uint64_t))(v3 + 104);
    uint64_t v114 = (void (**)(char *, void, uint64_t, uint64_t))(v3 + 56);
    int64_t v122 = (unint64_t)(v23 + 63) >> 6;
    int64_t v113 = v122 - 1;
    if ((v24 & v22) == 0) {
      goto LABEL_7;
    }
LABEL_5:
    unint64_t v26 = __clz(__rbit64(v25));
    v25 &= v25 - 1;
    unint64_t v27 = v26 | (v21 << 6);
LABEL_6:
    uint64_t v28 = *(void *)(v20 + 56);
    uint64_t v29 = (void *)(*(void *)(v20 + 48) + 16 * v27);
    uint64_t v30 = v29[1];
    *(void *)&long long v125 = *v29;
    *((void *)&v125 + 1) = v30;
    sub_10001DA70(v28 + 32 * v27, (uint64_t)v126);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1000915E8((uint64_t)&v125, (uint64_t)&v127);
      uint64_t v34 = v128;
      if (!v128) {
        return (id)swift_release();
      }
      uint64_t v35 = v127;
      sub_10001DACC(&v129, &v125);
      if (qword_1000EC2E0 != -1) {
        swift_once();
      }
      unsigned __int8 v36 = off_1000EDAE8;
      if (*((void *)off_1000EDAE8 + 2))
      {
        unint64_t v37 = sub_10008BB58(v35, v34);
        if (v38)
        {
          uint64_t v39 = *(unsigned __int8 *)(v36[7] + v37);
          swift_bridgeObjectRelease();
          switch(v39)
          {
            case 1:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v44 = v123;
                [v123 integerValue];
              }
              sub_1000B9670();
              goto LABEL_34;
            case 2:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v45 = v123;
                [v123 doubleValue];
              }
              sub_1000B9720();
              goto LABEL_34;
            case 3:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v46 = v123;
                [v123 integerValue];
              }
              sub_1000B9640();
              goto LABEL_34;
            case 4:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v47 = v123;
                [v123 unsignedIntegerValue];
              }
              sub_1000B95F0();
              goto LABEL_34;
            case 5:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v48 = v123;
                [v123 unsignedIntegerValue];
              }
              sub_1000B9650();
              goto LABEL_34;
            case 6:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B9A40();
              goto LABEL_34;
            case 7:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B9A10();
              goto LABEL_34;
            case 8:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B9530();
              goto LABEL_34;
            case 9:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v49 = v123;
                [v123 unsignedIntegerValue];
              }
              sub_1000B9690();
              goto LABEL_34;
            case 10:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v50 = v123;
                [v123 BOOLValue];
              }
              sub_1000B96A0();
              goto LABEL_34;
            case 11:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v51 = v123;
                [v123 doubleValue];
              }
              sub_1000B95B0();
              goto LABEL_34;
            case 12:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v52 = v123;
                [v123 integerValue];
              }
              sub_1000B96D0();
              goto LABEL_34;
            case 13:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v53 = v123;
                [v123 integerValue];
              }
              sub_1000B9970();
              goto LABEL_34;
            case 14:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v54 = v123;
                [v123 doubleValue];
              }
              sub_1000B94F0();
              goto LABEL_34;
            case 15:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v55 = v123;
                [v123 doubleValue];
              }
              sub_1000B9700();
              goto LABEL_34;
            case 16:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v56 = v123;
                [v123 integerValue];
              }
              sub_1000B9630();
              goto LABEL_34;
            case 17:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v57 = v123;
                [v123 integerValue];
              }
              sub_1000B9580();
              goto LABEL_34;
            case 18:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v58 = v123;
                [v123 doubleValue];
              }
              sub_1000B9590();
              goto LABEL_34;
            case 19:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B9990();
              goto LABEL_34;
            case 20:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B9950();
              goto LABEL_34;
            case 21:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v59 = v123;
                [v123 integerValue];
              }
              sub_1000B95A0();
              goto LABEL_34;
            case 22:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v60 = v123;
                [v123 integerValue];
              }
              sub_1000B9520();
              goto LABEL_34;
            case 23:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v61 = v123;
                [v123 integerValue];
              }
              sub_1000B97E0();
              goto LABEL_34;
            case 24:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v62 = v123;
                [v123 integerValue];
              }
              sub_1000B96F0();
              goto LABEL_34;
            case 25:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v63 = v123;
                [v123 doubleValue];
              }
              sub_1000B99B0();
              goto LABEL_34;
            case 26:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v64 = v123;
                [v123 BOOLValue];
              }
              sub_1000B95C0();
              goto LABEL_34;
            case 27:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v65 = v123;
                [v123 BOOLValue];
              }
              sub_1000B98E0();
              goto LABEL_34;
            case 28:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B94B0();
              goto LABEL_34;
            case 29:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v66 = v123;
                [v123 doubleValue];
              }
              sub_1000B9550();
              goto LABEL_34;
            case 30:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v67 = v123;
                [v123 unsignedIntegerValue];
              }
              sub_1000B9780();
              goto LABEL_34;
            case 31:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v68 = v123;
                [v123 doubleValue];
              }
              sub_1000B9900();
              goto LABEL_34;
            case 32:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v69 = v123;
                [v123 doubleValue];
              }
              sub_1000B9920();
              goto LABEL_34;
            case 33:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v70 = v123;
                [v123 doubleValue];
              }
              sub_1000B9930();
              goto LABEL_34;
            case 34:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v71 = v123;
                [v123 doubleValue];
              }
              sub_1000B9940();
              goto LABEL_34;
            case 35:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v72 = v123;
                [v123 doubleValue];
              }
              sub_1000B94D0();
              goto LABEL_34;
            case 36:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v73 = v123;
                [v123 doubleValue];
              }
              sub_1000B9960();
              goto LABEL_34;
            case 37:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B96C0();
              goto LABEL_34;
            case 38:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B94E0();
              goto LABEL_34;
            case 39:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B9620();
              goto LABEL_34;
            case 40:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v74 = v123;
                [v123 BOOLValue];
              }
              sub_1000B99F0();
              goto LABEL_34;
            case 41:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v75 = v123;
                [v123 doubleValue];
              }
              sub_1000B9730();
              goto LABEL_34;
            case 42:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v76 = v123;
                [v123 doubleValue];
              }
              sub_1000B9850();
              goto LABEL_34;
            case 43:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B98C0();
              goto LABEL_34;
            case 44:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v77 = v123;
                [v123 doubleValue];
              }
              sub_1000B9A50();
              goto LABEL_34;
            case 45:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v78 = v123;
                [v123 doubleValue];
              }
              sub_1000B9A00();
              goto LABEL_34;
            case 46:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v79 = v123;
                [v123 doubleValue];
              }
              sub_1000B99C0();
              goto LABEL_34;
            case 47:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v80 = v123;
                [v123 doubleValue];
              }
              sub_1000B99E0();
              goto LABEL_34;
            case 48:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B9500();
              goto LABEL_34;
            case 49:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              uint64_t v81 = sub_1000B8340();
              uint64_t v82 = v118;
              int v83 = swift_dynamicCast();
              (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v82, v83 ^ 1u, 1, v81);
              sub_1000B9560();
              goto LABEL_34;
            case 50:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v84 = v123;
                [v123 doubleValue];
              }
              sub_1000B97D0();
              goto LABEL_34;
            case 51:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v85 = v123;
                [v123 doubleValue];
              }
              sub_1000B9610();
              goto LABEL_34;
            case 52:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B96E0();
              goto LABEL_34;
            case 53:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v86 = v123;
                [v123 unsignedIntegerValue];
              }
              sub_1000B99D0();
              goto LABEL_34;
            case 54:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B9800();
              goto LABEL_34;
            case 55:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B96B0();
              goto LABEL_34;
            case 56:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v87 = v123;
                [v123 BOOLValue];
              }
              sub_1000B9570();
              goto LABEL_34;
            case 57:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B8350();
              swift_bridgeObjectRelease();
              sub_1000B9A20();
              goto LABEL_34;
            case 58:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B9540();
              goto LABEL_34;
            case 59:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v88 = v123;
                [v123 BOOLValue];
              }
              sub_1000B9740();
              goto LABEL_34;
            case 60:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B98F0();
              goto LABEL_34;
            case 61:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v89 = v123;
                [v123 doubleValue];
              }
              sub_1000B9820();
              goto LABEL_34;
            case 62:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v90 = v123;
                [v123 doubleValue];
              }
              sub_1000B9860();
              goto LABEL_34;
            case 63:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v91 = v123;
                [v123 integerValue];
              }
              sub_1000B9910();
              goto LABEL_34;
            case 64:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v92 = v123;
                [v123 integerValue];
              }
              sub_1000B9750();
              goto LABEL_34;
            case 65:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v93 = v123;
                [v123 BOOLValue];
              }
              sub_1000B95E0();
              goto LABEL_34;
            case 66:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v94 = v123;
                [v123 doubleValue];
              }
              sub_1000B9710();
              goto LABEL_34;
            case 67:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v95 = v123;
                [v123 doubleValue];
              }
              sub_1000B9760();
              goto LABEL_34;
            case 68:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v96 = v123;
                [v123 doubleValue];
              }
              sub_1000B9770();
              goto LABEL_34;
            case 69:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v97 = v123;
                [v123 doubleValue];
              }
              sub_1000B9660();
              goto LABEL_34;
            case 70:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v98 = v123;
                [v123 integerValue];
              }
              sub_1000B98D0();
              goto LABEL_34;
            case 71:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v99 = v123;
                [v123 BOOLValue];
              }
              sub_1000B9830();
              goto LABEL_34;
            case 72:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v100 = v123;
                [v123 doubleValue];
              }
              sub_1000B98B0();
              goto LABEL_34;
            case 73:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v101 = v123;
                [v123 BOOLValue];
              }
              sub_1000B9980();
              goto LABEL_34;
            case 74:
            case 75:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v40 = v123;
                [v123 BOOLValue];
              }
              sub_1000B95D0();
              goto LABEL_34;
            case 76:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v102 = v123;
                [v123 unsignedIntegerValue];
              }
              sub_1000B9840();
              goto LABEL_34;
            case 77:
              int v112 = v11;
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v103 = v123;
                [v123 integerValue];
              }
              uint64_t v111 = v120;
              (*v115)(v119, v116, v120);
              sub_1000B9790();
              (*v114)(v8, 0, 1, v111);
              sub_1000B97B0();
              sub_100015C54((uint64_t)&v125);
              uint64_t v11 = v112;
              if (!v25) {
                goto LABEL_7;
              }
              goto LABEL_5;
            case 78:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v104 = v123;
                [v123 BOOLValue];
              }
              sub_1000B9600();
              goto LABEL_34;
            case 79:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v105 = v123;
                [v123 doubleValue];
              }
              sub_1000B9890();
              goto LABEL_34;
            case 80:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v106 = v123;
                [v123 BOOLValue];
              }
              sub_1000B97C0();
              goto LABEL_34;
            case 81:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v107 = v123;
                [v123 BOOLValue];
              }
              sub_1000B9680();
              goto LABEL_34;
            case 82:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v108 = v123;
                [v123 BOOLValue];
              }
              sub_1000B9510();
              goto LABEL_34;
            case 83:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v109 = v123;
                [v123 BOOLValue];
              }
              sub_1000B9810();
              goto LABEL_34;
            case 84:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              sub_100014864();
              if (swift_dynamicCast())
              {
                id v110 = v123;
                [v123 doubleValue];
              }
              sub_1000B97F0();
              goto LABEL_34;
            case 85:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              swift_dynamicCast();
              sub_1000B94C0();
              goto LABEL_34;
            default:
              sub_10001DA70((uint64_t)&v125, (uint64_t)v124);
              uint64_t v41 = sub_1000B8340();
              unsigned int v42 = v117;
              int v43 = swift_dynamicCast();
              (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v42, v43 ^ 1u, 1, v41);
              sub_1000B9A30();
              goto LABEL_34;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_34:
      sub_100015C54((uint64_t)&v125);
      if (v25) {
        goto LABEL_5;
      }
LABEL_7:
      int64_t v31 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
LABEL_253:
        __break(1u);
        JUMPOUT(0x100091490);
      }
      if (v31 < v122)
      {
        unint64_t v32 = *(void *)(v121 + 8 * v31);
        if (v32) {
          goto LABEL_10;
        }
        int64_t v33 = v21 + 2;
        ++v21;
        if (v31 + 1 < v122)
        {
          unint64_t v32 = *(void *)(v121 + 8 * v33);
          if (v32) {
            goto LABEL_13;
          }
          int64_t v21 = v31 + 1;
          if (v31 + 2 < v122)
          {
            unint64_t v32 = *(void *)(v121 + 8 * (v31 + 2));
            if (v32)
            {
              v31 += 2;
              goto LABEL_10;
            }
            int64_t v33 = v31 + 3;
            int64_t v21 = v31 + 2;
            if (v31 + 3 < v122)
            {
              unint64_t v32 = *(void *)(v121 + 8 * v33);
              if (v32)
              {
LABEL_13:
                int64_t v31 = v33;
LABEL_10:
                unint64_t v25 = (v32 - 1) & v32;
                unint64_t v27 = __clz(__rbit64(v32)) + (v31 << 6);
                int64_t v21 = v31;
                goto LABEL_6;
              }
              while (1)
              {
                int64_t v31 = v33 + 1;
                if (__OFADD__(v33, 1)) {
                  goto LABEL_253;
                }
                if (v31 >= v122) {
                  break;
                }
                unint64_t v32 = *(void *)(v121 + 8 * v31);
                ++v33;
                if (v32) {
                  goto LABEL_10;
                }
              }
              int64_t v21 = v113;
            }
          }
        }
      }
      unint64_t v25 = 0;
      memset(v126, 0, sizeof(v126));
      long long v125 = 0u;
    }
  }
  return result;
}

uint64_t sub_1000915E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EDAF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100091650(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10001295C(&qword_1000EDB00);
  char v37 = a2;
  uint64_t v6 = sub_1000BBF60();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v14++, 1)) {
      goto LABEL_40;
    }
    if (v14 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v14);
    if (!v24)
    {
      int64_t v25 = v14 + 1;
      if (v14 + 1 >= v11)
      {
LABEL_31:
        swift_release();
        uint64_t v3 = v35;
        if ((v37 & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_34;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v25);
      if (!v24)
      {
        while (1)
        {
          int64_t v14 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            break;
          }
          if (v14 >= v11) {
            goto LABEL_31;
          }
          unint64_t v24 = *(void *)(v36 + 8 * v14);
          ++v25;
          if (v24) {
            goto LABEL_20;
          }
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v14;
    }
LABEL_20:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_21:
    unint64_t v26 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    char v29 = *(unsigned char *)(*(void *)(v5 + 56) + v21);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1000BC230();
    sub_1000BB990();
    uint64_t result = sub_1000BC250();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v32 = v17 == v31;
        if (v17 == v31) {
          unint64_t v17 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v12 + 8 * v17);
      }
      while (v33 == -1);
      unint64_t v18 = __clz(__rbit64(~v33)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    BOOL v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *BOOL v19 = v28;
    v19[1] = v27;
    *(unsigned char *)(*(void *)(v7 + 56) + v18) = v29;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_10009193C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10001295C(&qword_1000EC698);
  uint64_t v6 = sub_1000BBF60();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      unint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_10001DACC(v24, v35);
      }
      else
      {
        sub_10001DA70((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1000BC230();
      sub_1000BB990();
      uint64_t result = sub_1000BC250();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_10001DACC(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

void *sub_100091C3C()
{
  char v1 = v0;
  sub_10001295C(&qword_1000EDB00);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000BBF50();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    if (!v21) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *unint64_t v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_100091DD0()
{
  char v1 = v0;
  sub_10001295C(&qword_1000EC698);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000BBF50();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_10001DA70(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_10001DACC(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    char v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100091FB8(uint64_t a1, uint64_t a2)
{
  if (qword_1000EC2E0 != -1) {
    swift_once();
  }
  uint64_t v4 = off_1000EDAE8;
  if (*((void *)off_1000EDAE8 + 2) && (unint64_t v5 = sub_10008BB58(a1, a2), (v6 & 1) != 0)) {
    return *(unsigned __int8 *)(v4[7] + v5);
  }
  else {
    return 86;
  }
}

uint64_t getEnumTagSinglePayload for MetadataKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xAB) {
    goto LABEL_17;
  }
  if (a2 + 85 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 85) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 85;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 85;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 85;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x56;
  int v8 = v6 - 86;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MetadataKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 85 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 85) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xAB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xAA)
  {
    unsigned int v6 = ((a2 - 171) >> 8) + 1;
    *uint64_t result = a2 + 85;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000921A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 85;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetadataKey()
{
  return &type metadata for MetadataKey;
}

unint64_t sub_1000921DC()
{
  unint64_t result = qword_1000EDB08;
  if (!qword_1000EDB08)
  {
    sub_100014D68(&qword_1000EDB10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDB08);
  }
  return result;
}

unint64_t sub_10009223C()
{
  unint64_t result = qword_1000EDB18;
  if (!qword_1000EDB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDB18);
  }
  return result;
}

ValueMetadata *type metadata accessor for NicknameDataUnpacker()
{
  return &type metadata for NicknameDataUnpacker;
}

uint64_t sub_1000922A0()
{
  return sub_10009AB34(&qword_1000EDB20, (void (*)(uint64_t))&type metadata accessor for Nickname);
}

uint64_t sub_1000922E8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X5>, unint64_t a4@<X6>, uint64_t *a5@<X8>)
{
  if (a4 >> 60 == 15)
  {
    swift_bridgeObjectRetain();
    v8._countAndFlagsBits = 58;
    v8._object = (void *)0xE100000000000000;
    sub_1000BB9A0(v8);
    v9._countAndFlagsBits = sub_1000BC190();
    sub_1000BB9A0(v9);
    swift_bridgeObjectRelease();
    v10._countAndFlagsBits = 58;
    v10._object = (void *)0xE100000000000000;
    sub_1000BB9A0(v10);
    v11._countAndFlagsBits = a1;
    v11._object = a2;
    sub_1000BB9A0(v11);
    sub_1000BB6C0();
    sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
  else
  {
    *a5 = a3;
    a5[1] = a4;
    return sub_100017F4C(a3, a4);
  }
}

uint64_t sub_100092468(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6 == 3)
  {
    swift_bridgeObjectRetain();
    v10._countAndFlagsBits = 58;
    v10._object = (void *)0xE100000000000000;
    sub_1000BB9A0(v10);
    v11._countAndFlagsBits = sub_1000BC190();
    sub_1000BB9A0(v11);
    swift_bridgeObjectRelease();
    v12._countAndFlagsBits = 58;
    v12._object = (void *)0xE100000000000000;
    sub_1000BB9A0(v12);
    v13._countAndFlagsBits = a1;
    v13._object = a2;
    sub_1000BB9A0(v13);
    sub_1000BB6C0();
    sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();
  }
  return a6;
}

void sub_1000925E0(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v497 = a3;
  unint64_t v496 = a2;
  uint64_t v485 = sub_1000BA050();
  uint64_t v484 = *(void *)(v485 - 8);
  uint64_t v6 = __chkstk_darwin(v485);
  uint64_t v483 = (char *)v386 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v476 = (char *)v386 - v8;
  uint64_t v9 = sub_10001295C(&qword_1000EDB28);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  Swift::String v12 = (char *)v386 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v488 = (char *)v386 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v386 - v15;
  uint64_t v17 = sub_10001295C(&qword_1000EDB30);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v487 = (uint64_t)v386 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)v386 - v20;
  uint64_t v22 = sub_1000BB3B0();
  __chkstk_darwin(v22 - 8);
  uint64_t v475 = (char *)v386 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10001295C(&qword_1000EDB38);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v486 = (uint64_t)v386 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v477 = (uint64_t)v386 - v28;
  __chkstk_darwin(v27);
  BOOL v30 = (char *)v386 - v29;
  uint64_t v31 = sub_10001295C(&qword_1000EC660);
  __chkstk_darwin(v31 - 8);
  uint64_t v482 = (char *)v386 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000BB470();
  uint64_t v34 = __chkstk_darwin(v33 - 8);
  uint64_t v480 = (char *)v386 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v471 = (char *)v386 - v36;
  uint64_t v479 = sub_1000BB440();
  uint64_t v478 = *(void *)(v479 - 8);
  __chkstk_darwin(v479);
  uint64_t v472 = (char *)v386 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v474 = sub_1000B8E30();
  uint64_t v473 = *(void *)(v474 - 8);
  uint64_t v38 = __chkstk_darwin(v474);
  uint64_t v470 = (char *)v386 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v469 = (char *)v386 - v40;
  uint64_t v493 = sub_1000B8B50();
  uint64_t v492 = *(void **)(v493 - 8);
  __chkstk_darwin(v493);
  uint64_t v489 = (uint64_t)v386 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10001295C(&qword_1000EDB40);
  __chkstk_darwin(v42 - 8);
  uint64_t v491 = (char *)v386 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10001295C(&qword_1000EDB48);
  uint64_t v45 = __chkstk_darwin(v44 - 8);
  uint64_t v481 = (char *)v386 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  uint64_t v490 = (char *)v386 - v47;
  uint64_t v48 = sub_10001295C(&qword_1000EDB50);
  __chkstk_darwin(v48 - 8);
  uint64_t v494 = (char *)v386 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v50 = sub_1000BB640();
  unint64_t v52 = v50;
  char v53 = BYTE6(v51);
  switch(v51 >> 62)
  {
    case 1uLL:
      v467 = v30;
      id v61 = v16;
      id v62 = v12;
      id v63 = v21;
      uint64_t v64 = a4;
      uint64_t v58 = HIDWORD(v50);
      sub_100018074(v50, v51);
      int v65 = v58 - v52;
      if (__OFSUB__(v58, v52)) {
        goto LABEL_75;
      }
      a4 = v64;
      unint64_t v21 = v63;
      Swift::String v12 = v62;
      uint64_t v16 = v61;
      BOOL v30 = v467;
      if (v65 == 16) {
        goto LABEL_10;
      }
      goto LABEL_26;
    case 2uLL:
      uint64_t v468 = a1;
      uint64_t v466 = v12;
      id v54 = v16;
      id v55 = v21;
      id v56 = v30;
      uint64_t v57 = a4;
      uint64_t v59 = *(void *)(v50 + 16);
      uint64_t v58 = *(void *)(v50 + 24);
      sub_100018074(v50, v51);
      uint64_t v60 = v58 - v59;
      if (__OFSUB__(v58, v59))
      {
        __break(1u);
LABEL_75:
        __break(1u);
        goto LABEL_76;
      }
      a4 = v57;
      BOOL v30 = v56;
      unint64_t v21 = v55;
      uint64_t v16 = v54;
      Swift::String v12 = v466;
      a1 = v468;
      if (v60 != 16) {
        goto LABEL_26;
      }
LABEL_10:
      uint64_t v66 = a4;
      v467 = v30;
      uint64_t v468 = a1;
      sub_1000BB650();
      uint64_t v67 = sub_1000B8280();
      unint64_t v69 = v68;
      swift_bridgeObjectRelease();
      if (v69 >> 60 == 15)
      {
LABEL_26:
        sub_1000BB6C0();
        sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
        sub_1000BB6B0();
        swift_willThrow();
        return;
      }
      break;
    case 3uLL:
      sub_100018074(v50, v51);
      goto LABEL_26;
    default:
      sub_100018074(v50, v51);
      if (v53 != 16) {
        goto LABEL_26;
      }
      goto LABEL_10;
  }
  switch(v69 >> 62)
  {
    case 1uLL:
      LODWORD(v70) = HIDWORD(v67) - v67;
      if (!__OFSUB__(HIDWORD(v67), v67))
      {
        uint64_t v70 = (int)v70;
        goto LABEL_17;
      }
      __break(1u);
      goto LABEL_98;
    case 2uLL:
      uint64_t v72 = *(void *)(v67 + 16);
      uint64_t v71 = *(void *)(v67 + 24);
      BOOL v73 = __OFSUB__(v71, v72);
      uint64_t v70 = v71 - v72;
      if (!v73) {
        goto LABEL_17;
      }
LABEL_98:
      __break(1u);
      goto LABEL_99;
    case 3uLL:
      goto LABEL_25;
    default:
      uint64_t v70 = BYTE6(v69);
LABEL_17:
      if (v70 != 16)
      {
LABEL_25:
        sub_1000180CC(v67, v69);
        goto LABEL_26;
      }
      id v74 = self;
      Class isa = sub_1000B82B0().super.isa;
      *(void *)&long long v500 = 0;
      id v465 = v74;
      id v76 = [v74 propertyListWithData:isa options:0 format:0 error:&v500];

      if (!v76)
      {
        id v89 = (id)v500;
        sub_1000B81D0();

LABEL_31:
        swift_willThrow();
        uint64_t v90 = v67;
LABEL_32:
        sub_1000180CC(v90, v69);
        return;
      }
      id v77 = (id)v500;
      sub_1000BBE80();
      swift_unknownObjectRelease();
      sub_10001295C(&qword_1000EDB58);
      if ((swift_dynamicCast() & 1) == 0)
      {
        sub_1000BB6C0();
        sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
LABEL_30:
        sub_1000BB6B0();
        goto LABEL_31;
      }
      uint64_t v78 = v498;
      if (!*(void *)(v498 + 16) || (unint64_t v79 = sub_10008BB58(110, 0xE100000000000000), (v80 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        sub_1000BB6C0();
        sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
        goto LABEL_30;
      }
      uint64_t v456 = v66;
      uint64_t v81 = (uint64_t *)(*(void *)(v78 + 56) + 16 * v79);
      unint64_t v82 = v81[1];
      uint64_t v83 = *(void *)(v78 + 16);
      uint64_t v497 = *v81;
      unint64_t v496 = v82;
      sub_100017F4C(v497, v82);
      uint64_t v464 = v67;
      if (v83 && (unint64_t v84 = sub_10008BB58(28001, 0xE200000000000000), (v85 & 1) != 0))
      {
        id v86 = (uint64_t *)(*(void *)(v78 + 56) + 16 * v84);
        unint64_t v87 = v86[1];
        uint64_t v463 = *v86;
        unint64_t v88 = v87;
        sub_100017F4C(v463, v87);
      }
      else
      {
        uint64_t v463 = 0;
        unint64_t v88 = 0xF000000000000000;
      }
      uint64_t v91 = *(void *)(v78 + 16);
      uint64_t v455 = v16;
      uint64_t v466 = v12;
      if (v91 && (unint64_t v92 = sub_10008BB58(25697, 0xE200000000000000), (v93 & 1) != 0))
      {
        id v94 = (uint64_t *)(*(void *)(v78 + 56) + 16 * v92);
        uint64_t v95 = *v94;
        unint64_t v96 = v94[1];
        sub_100017F4C(*v94, v96);
      }
      else
      {
        uint64_t v95 = 0;
        unint64_t v96 = 0xF000000000000000;
      }
      unint64_t v97 = v88 >> 60;
      if (v88 >> 60 == 15)
      {
        if (v96 >> 60 != 15)
        {
LABEL_40:
          swift_bridgeObjectRelease();
          sub_1000BB6C0();
          sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
          swift_allocError();
          sub_1000BB6B0();
          swift_willThrow();
          sub_1000180CC(v95, v96);
          sub_1000180CC(v463, v88);
          sub_100018074(v497, v496);
          uint64_t v90 = v464;
          goto LABEL_32;
        }
      }
      else if (v96 >> 60 == 15)
      {
        goto LABEL_40;
      }
      uint64_t v98 = *(void *)(v78 + 16);
      unint64_t v461 = v88;
      unint64_t v462 = v96;
      unint64_t v458 = v69;
      uint64_t v460 = v95;
      if (!v98)
      {
        uint64_t v104 = 0;
        uint64_t v103 = 0;
        uint64_t v459 = 0;
        unint64_t v105 = 0xF000000000000000;
        unint64_t v102 = 0xF000000000000000;
LABEL_56:
        unint64_t v112 = 0xF000000000000000;
        goto LABEL_57;
      }
      unint64_t v99 = sub_10008BB58(28023, 0xE200000000000000);
      if (v100)
      {
        id v101 = (uint64_t *)(*(void *)(v78 + 56) + 16 * v99);
        uint64_t v103 = *v101;
        unint64_t v102 = v101[1];
        sub_100017F4C(*v101, v102);
      }
      else
      {
        uint64_t v103 = 0;
        unint64_t v102 = 0xF000000000000000;
      }
      if (!*(void *)(v78 + 16))
      {
        uint64_t v104 = 0;
        uint64_t v459 = 0;
        unint64_t v105 = 0xF000000000000000;
        goto LABEL_56;
      }
      unint64_t v106 = sub_10008BB58(25719, 0xE200000000000000);
      if (v107)
      {
        id v108 = (uint64_t *)(*(void *)(v78 + 56) + 16 * v106);
        uint64_t v104 = *v108;
        unint64_t v105 = v108[1];
        sub_100017F4C(*v108, v105);
      }
      else
      {
        uint64_t v104 = 0;
        unint64_t v105 = 0xF000000000000000;
      }
      if (!*(void *)(v78 + 16) || (unint64_t v109 = sub_10008BB58(1685549676, 0xE400000000000000), (v110 & 1) == 0))
      {
        uint64_t v459 = 0;
        goto LABEL_56;
      }
      uint64_t v111 = (uint64_t *)(*(void *)(v78 + 56) + 16 * v109);
      unint64_t v112 = v111[1];
      uint64_t v459 = *v111;
      sub_100017F4C(v459, v112);
LABEL_57:
      swift_bridgeObjectRelease();
      BOOL v114 = v105 >> 60 == 15 && v112 >> 60 == 15;
      uint64_t v457 = v104;
      if (v102 >> 60 == 15)
      {
        if (!v114)
        {
LABEL_65:
          sub_1000BB6C0();
          sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
          swift_allocError();
          sub_1000BB6B0();
          swift_willThrow();
          sub_1000180CC(v459, v112);
          sub_1000180CC(v457, v105);
          sub_1000180CC(v103, v102);
          uint64_t v115 = v460;
          unint64_t v116 = v462;
LABEL_66:
          sub_1000180CC(v115, v116);
          sub_1000180CC(v463, v461);
          uint64_t v117 = v497;
          unint64_t v118 = v496;
LABEL_70:
          sub_100018074(v117, v118);
          sub_1000180CC(v464, v458);
          return;
        }
      }
      else if (v114)
      {
        goto LABEL_65;
      }
      unint64_t v448 = v102 >> 60;
      unint64_t v446 = v112 >> 60;
      unint64_t v447 = v105 >> 60;
      unint64_t v454 = v105;
      unint64_t v453 = v112;
      uint64_t v451 = v103;
      unint64_t v452 = v102;
      uint64_t v119 = sub_1000BB640();
      unint64_t v121 = v120;
      sub_10009943C(v119, v120, &v500);
      uint64_t v449 = *((void *)&v500 + 1);
      uint64_t v450 = (void *)v500;
      unint64_t v122 = v501;
      uint64_t v123 = (uint64_t)v502;
      unint64_t v124 = (unint64_t)v503;
      sub_100018074(v119, v121);
      uint64_t v125 = v497;
      unint64_t v126 = v496;
      sub_100017F4C(v497, v496);
      uint64_t v127 = v495;
      sub_100099778(110, 0xE100000000000000, v125, v126, 0, 0xF000000000000000, v504);
      unint64_t v52 = v127;
      if (v127)
      {
        sub_100018074(v123, v124);
        sub_100018074(v449, v122);

        sub_1000180CC(v459, v453);
        sub_1000180CC(v457, v454);
        sub_1000180CC(v451, v452);
        sub_1000180CC(v460, v462);
        sub_1000180CC(v463, v461);
        uint64_t v117 = v125;
        unint64_t v118 = v126;
        goto LABEL_70;
      }
      unint64_t v435 = v21;
      uint64_t v495 = v123;
      unint64_t v444 = v122;
      unint64_t v445 = v124;
      if (v97 > 0xE)
      {
        uint64_t v440 = 0;
        unint64_t v441 = 0;
        uint64_t v128 = 0;
        uint64_t v129 = 0;
        uint64_t v442 = 0;
        unint64_t v130 = 0;
        uint64_t v131 = 0;
        unint64_t v132 = 0;
        uint64_t v58 = v495;
        goto LABEL_77;
      }
      uint64_t v133 = v463;
      unint64_t v134 = v461;
      sub_100017F4C(v463, v461);
      sub_100099778(28001, 0xE200000000000000, v133, v134, 0, 0xF000000000000000, v505);
      uint64_t v58 = v495;
LABEL_76:
      uint64_t v128 = v505[1];
      uint64_t v129 = v505[2];
      uint64_t v440 = v505[0];
      unint64_t v441 = v505[3];
      uint64_t v442 = v505[4];
      unint64_t v130 = v505[5];
      uint64_t v131 = v505[6];
      unint64_t v132 = v505[7];
LABEL_77:
      unint64_t v135 = v462;
      unint64_t v443 = v132;
      if (v462 >> 60 == 15)
      {
        uint64_t v430 = 0;
        uint64_t v431 = 0;
        unint64_t v437 = 0;
        uint64_t v438 = 0;
        unint64_t v136 = 0;
        unint64_t v69 = 0;
        unint64_t v432 = 0;
        uint64_t v436 = 0;
      }
      else
      {
        uint64_t v137 = v460;
        sub_100017F4C(v460, v462);
        sub_100099778(25697, 0xE200000000000000, v137, v135, 0, 0xF000000000000000, v506);
        if (v52)
        {
          sub_10009A148(v440, v128, v129, v441, v442, v130, v131, v443);
          sub_10009A1CC(v504);
          sub_100018074(v58, v445);
          sub_100018074(v449, v444);

          sub_1000180CC(v459, v453);
          sub_1000180CC(v457, v454);
          sub_1000180CC(v451, v452);
          uint64_t v115 = v137;
          unint64_t v116 = v135;
          goto LABEL_66;
        }
        uint64_t v430 = v506[0];
        uint64_t v431 = v506[2];
        unint64_t v136 = v506[3];
        unint64_t v69 = v506[4];
        unint64_t v432 = v506[5];
        uint64_t v436 = v506[6];
        unint64_t v437 = v506[7];
        uint64_t v438 = v506[1];
      }
      unint64_t v138 = v448;
      unint64_t v448 = v131;
      uint64_t v433 = v129;
      unint64_t v434 = v130;
      uint64_t v439 = v128;
      if (v138 <= 0xE)
      {
        uint64_t v146 = v451;
        unint64_t v147 = v452;
        sub_100017F4C(v451, v452);
        uint64_t v148 = sub_1000BB610();
        unint64_t v150 = v149;
        sub_1000922E8(0xD000000000000014, (void *)0x80000001000CBAA0, v148, v149, (uint64_t *)&v500);
        unint64_t v151 = v450;
        if (v52)
        {
          sub_1000180CC(v464, v458);
          sub_1000180CC(v460, v462);
          sub_1000180CC(v463, v461);
          sub_100018074(v497, v496);
          sub_1000180CC(v459, v453);
          sub_1000180CC(v457, v454);
          sub_1000180CC(v146, v147);
          sub_10009A148(v430, v438, v431, v136, v69, v432, v436, v437);
          sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
          sub_100018074(v495, v445);
          sub_100018074(v449, v444);

          sub_1000180CC(v146, v147);
          sub_10009A1CC(v504);
          sub_1000180CC(v148, v150);
          return;
        }
        unint64_t v429 = v136;
        sub_1000180CC(v148, v150);
        sub_100099778(28023, 0xE200000000000000, v146, v147, v500, *((unint64_t *)&v500 + 1), v507);
LABEL_99:
        uint64_t v423 = v507[0];
        uint64_t v424 = v507[2];
        unint64_t v139 = v507[3];
        uint64_t v140 = v507[4];
        unint64_t v141 = v507[5];
        uint64_t v425 = v507[6];
        unint64_t v426 = v507[7];
        uint64_t v427 = v507[1];
        unint64_t v136 = v429;
      }
      else
      {
        uint64_t v423 = 0;
        uint64_t v424 = 0;
        unint64_t v426 = 0;
        uint64_t v427 = 0;
        unint64_t v139 = 0;
        uint64_t v140 = 0;
        unint64_t v141 = 0;
        uint64_t v425 = 0;
      }
      unint64_t v428 = v69;
      if (v447 <= 0xE)
      {
        uint64_t v152 = v457;
        unint64_t v153 = v454;
        sub_100017F4C(v457, v454);
        uint64_t v154 = sub_1000BB5F0();
        unint64_t v420 = v155;
        sub_1000922E8(0xD000000000000010, (void *)0x80000001000CBA80, v154, v155, (uint64_t *)&v500);
        if (v52)
        {
          sub_1000180CC(v464, v458);
          sub_1000180CC(v460, v462);
          sub_1000180CC(v463, v461);
          sub_100018074(v497, v496);
          sub_1000180CC(v459, v453);
          sub_1000180CC(v152, v153);
          sub_1000180CC(v451, v452);
          sub_10009A148(v430, v438, v431, v136, v428, v432, v436, v437);
          sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
          sub_10009A148(v423, v427, v424, v139, v140, v141, v425, v426);
          sub_100018074(v495, v445);
          sub_100018074(v449, v444);

          sub_1000180CC(v152, v153);
          sub_10009A1CC(v504);
          sub_1000180CC(v154, v420);
          return;
        }
        unint64_t v429 = v136;
        unint64_t v421 = v139;
        uint64_t v422 = v140;
        unint64_t v447 = v141;
        unint64_t v142 = v496;
        sub_1000180CC(v154, v420);
        sub_100099778(25719, 0xE200000000000000, v152, v153, v500, *((unint64_t *)&v500 + 1), v508);
        unint64_t v143 = 0;
        uint64_t v413 = v508[0];
        uint64_t v414 = v508[2];
        unint64_t v415 = v508[3];
        uint64_t v416 = v508[4];
        unint64_t v417 = v508[5];
        uint64_t v418 = v508[6];
        unint64_t v419 = v508[7];
        unint64_t v420 = v508[1];
      }
      else
      {
        unint64_t v429 = v136;
        unint64_t v421 = v139;
        uint64_t v422 = v140;
        unint64_t v447 = v141;
        unint64_t v142 = v496;
        unint64_t v143 = v52;
        uint64_t v413 = 0;
        uint64_t v414 = 0;
        unint64_t v419 = 0;
        unint64_t v420 = 0;
        unint64_t v415 = 0;
        uint64_t v416 = 0;
        unint64_t v417 = 0;
        uint64_t v418 = 0;
      }
      if (v446 <= 0xE)
      {
        sub_100017F4C(v459, v453);
        uint64_t v156 = sub_1000BB620();
        unint64_t v158 = v157;
        sub_1000922E8(0xD000000000000016, (void *)0x80000001000CB9F0, v156, v157, (uint64_t *)&v500);
        if (v143)
        {
          sub_1000180CC(v464, v458);
          sub_1000180CC(v460, v462);
          sub_1000180CC(v463, v461);
          sub_100018074(v497, v142);
          uint64_t v159 = v459;
          unint64_t v160 = v453;
          sub_1000180CC(v459, v453);
          sub_1000180CC(v457, v454);
          sub_1000180CC(v451, v452);
          sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
          sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
          sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
          sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
          sub_100018074(v495, v445);
          sub_100018074(v449, v444);

          sub_1000180CC(v159, v160);
          sub_10009A1CC(v504);
          sub_1000180CC(v156, v158);
          return;
        }
        sub_1000180CC(v156, v158);
        sub_100099778(1685549676, 0xE400000000000000, v459, v453, v500, *((unint64_t *)&v500 + 1), v509);
        unint64_t v496 = v509[1];
        uint64_t v407 = v509[0];
        uint64_t v408 = v509[2];
        unint64_t v409 = v509[3];
        uint64_t v410 = v509[4];
        unint64_t v411 = v509[5];
        uint64_t v412 = v509[6];
        unint64_t v446 = v509[7];
        if (v438) {
          goto LABEL_88;
        }
      }
      else
      {
        uint64_t v407 = 0;
        uint64_t v408 = 0;
        unint64_t v496 = 0;
        unint64_t v409 = 0;
        uint64_t v410 = 0;
        unint64_t v411 = 0;
        uint64_t v412 = 0;
        unint64_t v446 = 0;
        if (v438)
        {
LABEL_88:
          uint64_t v144 = v436;
          unint64_t v145 = v437;
          sub_100017F4C(v436, v437);
          goto LABEL_102;
        }
      }
      uint64_t v144 = 0;
      unint64_t v145 = 0xF000000000000000;
LABEL_102:
      if (v439)
      {
        uint64_t v161 = v448;
        unint64_t v162 = v443;
        sub_100017F4C(v448, v443);
      }
      else
      {
        uint64_t v161 = 0;
        unint64_t v162 = 0xF000000000000000;
      }
      sub_100099E60(v464, v458, v495, v445, v144, v145, v161, v162, v504[6], v504[7]);
      if (v143)
      {
        sub_1000180CC(v161, v162);
        sub_1000180CC(v144, v145);
        sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
        sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
        sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
        sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
        sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
        sub_10009A1CC(v504);
        sub_100018074(v495, v445);
        sub_100018074(v449, v444);

        sub_1000180CC(v459, v453);
        sub_1000180CC(v457, v454);
        sub_1000180CC(v451, v452);
        sub_1000180CC(v460, v462);
        sub_1000180CC(v463, v461);
        sub_100018074(v497, v142);
        sub_1000180CC(v464, v458);
        return;
      }
      sub_1000180CC(v161, v162);
      sub_1000180CC(v144, v145);
      uint64_t v404 = sub_10009A3A4(v504, v450, v449, v444);
      unint64_t v405 = v163;
      uint64_t v406 = 0;
      if (sub_1000BB600())
      {
        if (v439)
        {
          v514[0] = v440;
          v514[1] = v439;
          uint64_t v165 = v433;
          unint64_t v164 = v434;
          unint64_t v166 = v441;
          uint64_t v167 = v442;
          v514[2] = v433;
          v514[3] = v441;
          v514[4] = v442;
          v514[5] = v434;
          uint64_t v168 = v448;
          unint64_t v169 = v443;
          v514[6] = v448;
          v514[7] = v443;
          swift_bridgeObjectRetain();
          sub_100017F4C(v165, v166);
          sub_100017F4C(v167, v164);
          sub_100017F4C(v168, v169);
          uint64_t v170 = v406;
          uint64_t v402 = sub_10009A3A4(v514, v450, v449, v444);
          unint64_t v403 = v171;
          uint64_t v406 = v170;
          if (v170)
          {
            sub_1000180CC(v464, v458);
            sub_1000180CC(v460, v462);
            sub_1000180CC(v463, v461);
            sub_100018074(v497, v142);
            sub_1000180CC(v457, v454);
            sub_1000180CC(v459, v453);
            sub_1000180CC(v451, v452);
            sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
            uint64_t v173 = v439;
            uint64_t v172 = v440;
            uint64_t v175 = v433;
            unint64_t v174 = v434;
            unint64_t v177 = v441;
            uint64_t v176 = v442;
            uint64_t v178 = v448;
            unint64_t v179 = v443;
            sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
            sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
            sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
            sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
            sub_100018074(v404, v405);
            sub_100018074(v495, v445);
            sub_100018074(v449, v444);

            sub_10009A1CC(v504);
            sub_10009A148(v172, v173, v175, v177, v176, v174, v178, v179);
            return;
          }
          sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
        }
        else
        {
          uint64_t v402 = 0;
          unint64_t v403 = 0xF000000000000000;
        }
        if (v438)
        {
          uint64_t v188 = v431;
          unint64_t v189 = v437;
          v513[0] = v430;
          v513[1] = v438;
          uint64_t v191 = v428;
          unint64_t v190 = v429;
          v513[2] = v431;
          v513[3] = v429;
          unint64_t v192 = v432;
          v513[4] = v428;
          v513[5] = v432;
          uint64_t v193 = v436;
          v513[6] = v436;
          v513[7] = v437;
          swift_bridgeObjectRetain();
          sub_100017F4C(v188, v190);
          sub_100017F4C(v191, v192);
          sub_100017F4C(v193, v189);
          uint64_t v194 = v406;
          *(void *)&long long v401 = sub_10009A3A4(v513, v450, v449, v444);
          *((void *)&v401 + 1) = v195;
          uint64_t v406 = v194;
          if (v194)
          {
            sub_1000180CC(v402, v403);
            sub_1000180CC(v464, v458);
            sub_1000180CC(v460, v462);
            sub_1000180CC(v463, v461);
            sub_100018074(v497, v142);
            sub_1000180CC(v457, v454);
            sub_1000180CC(v459, v453);
            sub_1000180CC(v451, v452);
            uint64_t v197 = v430;
            uint64_t v196 = v431;
            unint64_t v198 = v437;
            uint64_t v199 = v438;
            uint64_t v200 = v428;
            unint64_t v201 = v429;
            unint64_t v202 = v432;
            uint64_t v203 = v436;
            sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
            sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
            uint64_t v204 = v197;
            uint64_t v205 = v199;
            uint64_t v206 = v196;
            unint64_t v207 = v201;
            uint64_t v208 = v200;
            unint64_t v209 = v202;
            uint64_t v210 = v203;
            unint64_t v211 = v198;
LABEL_130:
            sub_10009A148(v204, v205, v206, v207, v208, v209, v210, v211);
            uint64_t v212 = v413;
            uint64_t v213 = v414;
            unint64_t v215 = v419;
            uint64_t v214 = v420;
            unint64_t v216 = v415;
            uint64_t v217 = v416;
            unint64_t v218 = v417;
            uint64_t v219 = v418;
LABEL_136:
            sub_10009A148(v212, v214, v213, v216, v217, v218, v219, v215);
            uint64_t v236 = v407;
            uint64_t v237 = v408;
            uint64_t v238 = v496;
            unint64_t v239 = v409;
            uint64_t v240 = v410;
            unint64_t v241 = v411;
            uint64_t v242 = v412;
            unint64_t v243 = v446;
LABEL_137:
            sub_10009A148(v236, v238, v237, v239, v240, v241, v242, v243);
            uint64_t v244 = v423;
            uint64_t v245 = v424;
            unint64_t v247 = v426;
            uint64_t v246 = v427;
            unint64_t v248 = v421;
            uint64_t v249 = v422;
            unint64_t v250 = v447;
            uint64_t v251 = v425;
LABEL_138:
            sub_10009A148(v244, v246, v245, v248, v249, v250, v251, v247);
            sub_100018074(v404, v405);
            sub_100018074(v495, v445);
            sub_100018074(v449, v444);

LABEL_139:
            sub_10009A1CC(v504);
            return;
          }
          sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
        }
        else
        {
          *(void *)&long long v401 = 0;
          *((void *)&v401 + 1) = 0xF000000000000000;
        }
        if (v420)
        {
          uint64_t v220 = v414;
          v512[0] = v413;
          unint64_t v221 = v419;
          v512[1] = v420;
          v512[2] = v414;
          unint64_t v222 = v415;
          uint64_t v223 = v416;
          v512[3] = v415;
          v512[4] = v416;
          unint64_t v225 = v417;
          uint64_t v224 = v418;
          v512[5] = v417;
          v512[6] = v418;
          v512[7] = v419;
          swift_bridgeObjectRetain();
          sub_100017F4C(v220, v222);
          sub_100017F4C(v223, v225);
          sub_100017F4C(v224, v221);
          uint64_t v226 = v406;
          uint64_t v399 = sub_10009A3A4(v512, v450, v449, v444);
          unint64_t v400 = v227;
          uint64_t v406 = v226;
          if (v226)
          {
            sub_1000180CC(v401, *((unint64_t *)&v401 + 1));
            sub_1000180CC(v402, v403);
            sub_1000180CC(v464, v458);
            sub_1000180CC(v460, v462);
            sub_1000180CC(v463, v461);
            sub_100018074(v497, v142);
            sub_1000180CC(v457, v454);
            sub_1000180CC(v459, v453);
            sub_1000180CC(v451, v452);
            sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
            sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
            uint64_t v229 = v413;
            uint64_t v228 = v414;
            unint64_t v230 = v419;
            unint64_t v231 = v420;
            unint64_t v233 = v415;
            uint64_t v232 = v416;
            unint64_t v235 = v417;
            uint64_t v234 = v418;
            sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
            uint64_t v212 = v229;
            uint64_t v214 = v231;
            uint64_t v213 = v228;
            unint64_t v216 = v233;
            uint64_t v217 = v232;
            unint64_t v218 = v235;
            uint64_t v219 = v234;
            unint64_t v215 = v230;
            goto LABEL_136;
          }
          sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
        }
        else
        {
          uint64_t v399 = 0;
          unint64_t v400 = 0xF000000000000000;
        }
        if (v496)
        {
          uint64_t v277 = v408;
          v511[0] = v407;
          v511[1] = v496;
          v511[2] = v408;
          unint64_t v278 = v409;
          uint64_t v279 = v410;
          v511[3] = v409;
          v511[4] = v410;
          unint64_t v281 = v411;
          uint64_t v280 = v412;
          v511[5] = v411;
          v511[6] = v412;
          unint64_t v282 = v446;
          v511[7] = v446;
          swift_bridgeObjectRetain();
          sub_100017F4C(v277, v278);
          sub_100017F4C(v279, v281);
          sub_100017F4C(v280, v282);
          uint64_t v283 = v406;
          *(void *)&long long v398 = sub_10009A3A4(v511, v450, v449, v444);
          *((void *)&v398 + 1) = v284;
          uint64_t v406 = v283;
          if (v283)
          {
            sub_1000180CC(v399, v400);
            sub_1000180CC(v401, *((unint64_t *)&v401 + 1));
            sub_1000180CC(v402, v403);
            sub_1000180CC(v464, v458);
            sub_1000180CC(v460, v462);
            sub_1000180CC(v463, v461);
            sub_100018074(v497, v142);
            sub_1000180CC(v457, v454);
            sub_1000180CC(v459, v453);
            sub_1000180CC(v451, v452);
            sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
            sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
            sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
            uint64_t v286 = v407;
            uint64_t v285 = v408;
            unint64_t v287 = v496;
            unint64_t v289 = v409;
            uint64_t v288 = v410;
            unint64_t v291 = v411;
            uint64_t v290 = v412;
            unint64_t v292 = v446;
            sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
            uint64_t v236 = v286;
            uint64_t v238 = v287;
            uint64_t v237 = v285;
            unint64_t v239 = v289;
            uint64_t v240 = v288;
            unint64_t v241 = v291;
            uint64_t v242 = v290;
            unint64_t v243 = v292;
            goto LABEL_137;
          }
          sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
        }
        else
        {
          *(void *)&long long v398 = 0;
          *((void *)&v398 + 1) = 0xF000000000000000;
        }
        if (v427)
        {
          uint64_t v295 = v424;
          v510[0] = v423;
          unint64_t v296 = v426;
          v510[1] = v427;
          v510[2] = v424;
          unint64_t v297 = v421;
          uint64_t v298 = v422;
          v510[3] = v421;
          v510[4] = v422;
          unint64_t v299 = v447;
          v510[5] = v447;
          uint64_t v300 = v425;
          v510[6] = v425;
          v510[7] = v426;
          swift_bridgeObjectRetain();
          sub_100017F4C(v295, v297);
          sub_100017F4C(v298, v299);
          sub_100017F4C(v300, v296);
          uint64_t v301 = v406;
          uint64_t v396 = sub_10009A3A4(v510, v450, v449, v444);
          unint64_t v397 = v302;
          uint64_t v406 = v301;
          if (v301)
          {
            sub_1000180CC(v398, *((unint64_t *)&v398 + 1));
            sub_1000180CC(v399, v400);
            sub_1000180CC(v401, *((unint64_t *)&v401 + 1));
            sub_1000180CC(v402, v403);
            sub_1000180CC(v464, v458);
            sub_1000180CC(v460, v462);
            sub_1000180CC(v463, v461);
            sub_100018074(v497, v142);
            sub_1000180CC(v457, v454);
            sub_1000180CC(v459, v453);
            sub_1000180CC(v451, v452);
            sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
            sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
            sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
            sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
            uint64_t v303 = v423;
            uint64_t v304 = v424;
            unint64_t v305 = v426;
            uint64_t v306 = v427;
            unint64_t v308 = v421;
            uint64_t v307 = v422;
            unint64_t v309 = v447;
            uint64_t v310 = v425;
            sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
            uint64_t v244 = v303;
            uint64_t v246 = v306;
            uint64_t v245 = v304;
            unint64_t v248 = v308;
            uint64_t v249 = v307;
            unint64_t v250 = v309;
            uint64_t v251 = v310;
            unint64_t v247 = v305;
            goto LABEL_138;
          }
          sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
        }
        else
        {
          uint64_t v396 = 0;
          unint64_t v397 = 0xF000000000000000;
        }
        if (v403 >> 60 == 15)
        {
          if (*((void *)&v401 + 1) >> 60 != 15) {
            goto LABEL_124;
          }
        }
        else if (*((void *)&v401 + 1) >> 60 == 15)
        {
          goto LABEL_124;
        }
        BOOL v312 = v400 >> 60 == 15 && *((void *)&v398 + 1) >> 60 == 15;
        if (v397 >> 60 == 15)
        {
          if (!v312) {
            goto LABEL_124;
          }
        }
        else if (v312)
        {
          goto LABEL_124;
        }
      }
      else
      {
        uint64_t v396 = 0;
        unint64_t v397 = 0xF000000000000000;
        *(void *)&long long v398 = 0;
        *((void *)&v398 + 1) = 0xF000000000000000;
        uint64_t v399 = 0;
        unint64_t v400 = 0xF000000000000000;
        *(void *)&long long v401 = 0;
        *((void *)&v401 + 1) = 0xF000000000000000;
        uint64_t v402 = 0;
        unint64_t v403 = 0xF000000000000000;
      }
      Class v180 = sub_1000B82B0().super.isa;
      *(void *)&long long v500 = 0;
      id v181 = [v465 propertyListWithData:v180 options:0 format:0 error:&v500];

      if (!v181)
      {
        id v187 = (id)v500;
        sub_1000B81D0();

LABEL_125:
        swift_willThrow();
        sub_1000180CC(v396, v397);
        sub_1000180CC(v398, *((unint64_t *)&v398 + 1));
        sub_1000180CC(v399, v400);
        sub_1000180CC(v401, *((unint64_t *)&v401 + 1));
        sub_1000180CC(v402, v403);
        sub_1000180CC(v464, v458);
        sub_1000180CC(v460, v462);
        sub_1000180CC(v463, v461);
        sub_100018074(v497, v142);
        sub_1000180CC(v457, v454);
        sub_1000180CC(v459, v453);
        sub_1000180CC(v451, v452);
        sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
        sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
        sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
        sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
        sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
        sub_100018074(v404, v405);
        sub_100018074(v495, v445);
        sub_100018074(v449, v444);

        sub_10009A1CC(v504);
        return;
      }
      id v182 = (id)v500;
      sub_1000BBE80();
      swift_unknownObjectRelease();
      uint64_t v395 = sub_10001295C(&qword_1000EC6A8);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_124:
        sub_1000BB6C0();
        sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
        sub_1000BB6B0();
        goto LABEL_125;
      }
      uint64_t v183 = v498;
      sub_100083EC4(28262, 0xE200000000000000, v498, &v500);
      if (v502)
      {
        int v184 = swift_dynamicCast();
        if (v184) {
          uint64_t v185 = v498;
        }
        else {
          uint64_t v185 = 0;
        }
        if (v184) {
          uint64_t v186 = v499;
        }
        else {
          uint64_t v186 = 0;
        }
        uint64_t v393 = v186;
        uint64_t v394 = v185;
      }
      else
      {
        sub_1000184DC((uint64_t)&v500, &qword_1000EC690);
        uint64_t v393 = 0;
        uint64_t v394 = 0;
      }
      sub_100083EC4(28268, 0xE200000000000000, v183, &v500);
      if (v502) {
        swift_dynamicCast();
      }
      else {
        sub_1000184DC((uint64_t)&v500, &qword_1000EC690);
      }
      uint64_t v252 = sub_1000B8D50();
      uint64_t v253 = *(void *)(v252 - 8);
      v390 = *(void (**)(char *, uint64_t, uint64_t))(v253 + 56);
      uint64_t v391 = v252;
      uint64_t v389 = v253 + 56;
      v390(v494, 1, 1);
      uint64_t v254 = sub_1000BB7D0();
      uint64_t v255 = *(void *)(v254 - 8);
      v387 = *(void (**)(char *, uint64_t, uint64_t))(v255 + 56);
      uint64_t v388 = v254;
      v386[1] = v255 + 56;
      v387(v490, 1, 1);
      uint64_t v392 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v492[7];
      v392(v491, 1, 1, v493);
      sub_1000BB690();
      sub_100083EC4(28272, 0xE200000000000000, v183, &v500);
      if (!v502)
      {
        swift_bridgeObjectRelease();
        sub_1000184DC((uint64_t)&v500, &qword_1000EC690);
        goto LABEL_152;
      }
      sub_1000184DC((uint64_t)&v500, &qword_1000EC690);
      sub_100083EC4(28272, 0xE200000000000000, v183, &v500);
      swift_bridgeObjectRelease();
      if (!v502)
      {
        sub_1000184DC((uint64_t)&v500, &qword_1000EC690);
        goto LABEL_166;
      }
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_166:
        sub_1000BB6C0();
        sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
        sub_1000BB6B0();
LABEL_167:
        swift_willThrow();
        sub_1000180CC(v464, v458);
        sub_100018074(v404, v405);
        sub_100018074(v495, v445);
        sub_100018074(v449, v444);

        sub_10009A1CC(v504);
        sub_1000180CC(v463, v461);
        sub_1000180CC(v460, v462);
        sub_1000180CC(v451, v452);
        sub_1000180CC(v457, v454);
        sub_1000180CC(v459, v453);
        sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
        sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
        sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
        sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
        sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
        sub_100018074(v497, v142);
        sub_1000180CC(v402, v403);
        unint64_t v294 = *((void *)&v401 + 1);
        uint64_t v293 = v401;
LABEL_191:
        sub_1000180CC(v293, v294);
        sub_1000180CC(v399, v400);
        sub_1000180CC(v398, *((unint64_t *)&v398 + 1));
        uint64_t v317 = v396;
        unint64_t v318 = v397;
LABEL_192:
        sub_1000180CC(v317, v318);
LABEL_193:
        uint64_t v319 = sub_1000BB680();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v319 - 8) + 8))(v456, v319);
        return;
      }
      Class v256 = sub_1000BB850().super.isa;
      swift_bridgeObjectRelease();
      *(void *)&long long v500 = 0;
      id v257 = [v465 dataWithPropertyList:v256 format:200 options:0 error:&v500];

      id v258 = (id)v500;
      if (!v257)
      {
        uint64_t v320 = v258;
        sub_1000B81D0();

        goto LABEL_167;
      }
      uint64_t v259 = sub_1000B82D0();
      unint64_t v261 = v260;

      uint64_t v262 = v406;
      sub_10005C338(v489);
      uint64_t v406 = v262;
      if (v262)
      {
        uint64_t v263 = sub_1000BB680();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v263 - 8) + 8))(v456, v263);
        sub_1000180CC(v396, v397);
        sub_1000180CC(v398, *((unint64_t *)&v398 + 1));
        sub_1000180CC(v399, v400);
        sub_1000180CC(v401, *((unint64_t *)&v401 + 1));
        sub_1000180CC(v402, v403);
        sub_1000180CC(v464, v458);
        sub_1000180CC(v460, v462);
        sub_1000180CC(v463, v461);
        sub_100018074(v497, v142);
        sub_1000180CC(v457, v454);
        sub_1000180CC(v459, v453);
        sub_1000180CC(v451, v452);
        sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
        sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
        sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
        sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
        sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
        sub_100018074(v404, v405);
        sub_100018074(v495, v445);
        sub_100018074(v449, v444);

        sub_100018074(v259, v261);
        goto LABEL_139;
      }
      sub_100018074(v259, v261);
      v321 = v492;
      v322 = v491;
      uint64_t v323 = v489;
      uint64_t v324 = v493;
      ((void (*)(char *, uint64_t, uint64_t))v492[2])(v491, v489, v493);
      v392(v322, 0, 1, v324);
      sub_1000BB660();
      ((void (*)(uint64_t, uint64_t))v321[1])(v323, v324);
LABEL_152:
      if (v403 >> 60 != 15 && *((void *)&v401 + 1) >> 60 != 15)
      {
        sub_100017FA4(v402, v403);
        sub_100017FA4(v401, *((unint64_t *)&v401 + 1));
        Class v264 = sub_1000B82B0().super.isa;
        *(void *)&long long v500 = 0;
        id v265 = [v465 propertyListWithData:v264 options:0 format:0 error:&v500];

        if (!v265)
        {
          id v313 = (id)v500;
          sub_1000B81D0();

          goto LABEL_190;
        }
        id v266 = (id)v500;
        sub_1000BBE80();
        swift_unknownObjectRelease();
        sub_10001295C(&qword_1000EDB60);
        if ((swift_dynamicCast() & 1) == 0
          || (uint64_t v394 = sub_100083F28(0x6D614E6567616D69, 0xE900000000000065, v498),
              uint64_t v268 = v267,
              swift_bridgeObjectRelease(),
              (uint64_t v493 = v268) == 0))
        {
          sub_1000BB6C0();
          sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
          swift_allocError();
          goto LABEL_188;
        }
        uint64_t v269 = v473;
        uint64_t v271 = (char *)(v473 + 104);
        uint64_t v270 = *(char **)(v473 + 104);
        uint64_t v272 = v469;
        uint64_t v273 = v474;
        ((void (*)(char *, void, uint64_t))v270)(v469, enum case for ImageHeader.png(_:), v474);
        LODWORD(v489) = sub_1000B8300();
        uint64_t v274 = *(void (**)(char *, uint64_t))(v269 + 8);
        v274(v272, v273);
        uint64_t v491 = v271;
        uint64_t v490 = v270;
        ((void (*)(char *, void, uint64_t))v270)(v272, enum case for ImageHeader.jpeg(_:), v273);
        int v275 = sub_1000B8300();
        uint64_t v473 = v269 + 8;
        uint64_t v492 = v274;
        v274(v272, v273);
        int v276 = v489;
        if ((v489 & 1) != 0 && sub_1000B82F0())
        {
          swift_bridgeObjectRelease();
          sub_1000BB6C0();
          sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
          swift_allocError();
LABEL_188:
          sub_1000BB6B0();
LABEL_190:
          swift_willThrow();
          sub_1000180CC(v464, v458);
          sub_100018074(v404, v405);
          sub_100018074(v495, v445);
          sub_100018074(v449, v444);

          uint64_t v315 = v402;
          unint64_t v314 = v403;
          sub_1000180CC(v402, v403);
          sub_10009A1CC(v504);
          sub_1000180CC(v463, v461);
          sub_1000180CC(v460, v462);
          sub_1000180CC(v451, v452);
          sub_1000180CC(v457, v454);
          sub_1000180CC(v459, v453);
          sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
          sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
          sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
          long long v316 = v401;
          sub_1000180CC(v401, *((unint64_t *)&v401 + 1));
          sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
          sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
          sub_100018074(v497, v142);
          sub_1000180CC(v315, v314);
          unint64_t v294 = *((void *)&v316 + 1);
          uint64_t v293 = v316;
          goto LABEL_191;
        }
        v325 = v469;
        uint64_t v326 = v474;
        ((void (*)(char *, void, uint64_t))v490)(v469, enum case for ImageHeader.heif_jpeg(_:), v474);
        char v327 = sub_1000B8300();
        ((void (*)(char *, uint64_t))v492)(v325, v326);
        if ((v327 & 1) != 0
          || (uint64_t v328 = v469,
              uint64_t v329 = v474,
              ((void (*)(char *, void, uint64_t))v490)(v469, enum case for ImageHeader.mpo(_:), v474),
              char v330 = sub_1000B8300(),
              ((void (*)(char *, uint64_t))v492)(v328, v329),
              ((v276 | v275) & 1) == 0)
          || (v330 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v344 = v406;
          sub_1000B8310();
          if (v344)
          {
            uint64_t v345 = v344;
          }
          else
          {
            *(void *)&long long v500 = 0;
            *((void *)&v500 + 1) = 0xE000000000000000;
            sub_1000BBED0(41);
            swift_bridgeObjectRelease();
            *(void *)&long long v500 = 0xD000000000000027;
            *((void *)&v500 + 1) = 0x80000001000CB930;
            uint64_t v348 = v470;
            v515._countAndFlagsBits = sub_1000B8E20();
            sub_1000BB9A0(v515);
            swift_bridgeObjectRelease();
            sub_1000BB6C0();
            sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
            uint64_t v349 = swift_allocError();
            sub_1000BB6B0();
            uint64_t v345 = v349;
            swift_willThrow();
            ((void (*)(char *, uint64_t))v492)(v348, v474);
          }
          uint64_t v498 = v345;
          swift_errorRetain();
          sub_10001295C(&qword_1000EC648);
          if (swift_dynamicCast())
          {
            swift_errorRelease();
            uint64_t v350 = v484;
            uint64_t v351 = v483;
            (*(void (**)(char *, char *, uint64_t))(v484 + 32))(v483, v476, v485);
            *(void *)&long long v500 = 0;
            *((void *)&v500 + 1) = 0xE000000000000000;
            sub_1000BBED0(41);
            swift_bridgeObjectRelease();
            *(void *)&long long v500 = 0xD000000000000027;
            *((void *)&v500 + 1) = 0x80000001000CB930;
            v516._countAndFlagsBits = sub_1000BA040();
            sub_1000BB9A0(v516);
            swift_bridgeObjectRelease();
            sub_1000BB6C0();
            sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
            swift_allocError();
            sub_1000BB6B0();
            swift_willThrow();
            sub_1000180CC(v464, v458);
            sub_100018074(v404, v405);
            sub_100018074(v495, v445);
            sub_100018074(v449, v444);

            uint64_t v353 = v402;
            unint64_t v352 = v403;
            sub_1000180CC(v402, v403);
            sub_10009A1CC(v504);
            sub_1000180CC(v463, v461);
            sub_1000180CC(v460, v462);
            sub_1000180CC(v451, v452);
            sub_1000180CC(v457, v454);
            sub_1000180CC(v459, v453);
            sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
            sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
            sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
            long long v354 = v401;
            sub_1000180CC(v401, *((unint64_t *)&v401 + 1));
            sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
            sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
            sub_100018074(v497, v142);
            sub_1000180CC(v353, v352);
            sub_1000180CC(v354, *((unint64_t *)&v354 + 1));
            sub_1000180CC(v399, v400);
            sub_1000180CC(v398, *((unint64_t *)&v398 + 1));
            sub_1000180CC(v396, v397);
            (*(void (**)(char *, uint64_t))(v350 + 8))(v351, v485);
            uint64_t v355 = sub_1000BB680();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v355 - 8) + 8))(v456, v355);
          }
          else
          {
            uint64_t v356 = sub_1000BB680();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v356 - 8) + 8))(v456, v356);
            sub_1000180CC(v396, v397);
            sub_1000180CC(v398, *((unint64_t *)&v398 + 1));
            sub_1000180CC(v399, v400);
            long long v357 = v401;
            sub_1000180CC(v401, *((unint64_t *)&v401 + 1));
            uint64_t v359 = v402;
            unint64_t v358 = v403;
            sub_1000180CC(v402, v403);
            sub_1000180CC(v464, v458);
            sub_1000180CC(v460, v462);
            sub_1000180CC(v463, v461);
            sub_100018074(v497, v142);
            sub_1000180CC(v457, v454);
            sub_1000180CC(v459, v453);
            sub_1000180CC(v451, v452);
            sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
            sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
            sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
            sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
            sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
            sub_100018074(v404, v405);
            sub_100018074(v495, v445);
            sub_100018074(v449, v444);

            sub_1000180CC(v359, v358);
            sub_1000180CC(v357, *((unint64_t *)&v357 + 1));
            sub_10009A1CC(v504);
          }
          swift_errorRelease();
          return;
        }
        uint64_t v331 = v478;
        uint64_t v332 = (unsigned int *)&enum case for Image.Encoding.png(_:);
        if ((v276 & 1) == 0) {
          uint64_t v332 = (unsigned int *)&enum case for Image.Encoding.jpeg(_:);
        }
        Swift::Int v333 = v472;
        uint64_t v334 = v479;
        (*(void (**)(char *, void, uint64_t))(v478 + 104))(v472, *v332, v479);
        uint64_t v502 = &type metadata for Data;
        uint64_t v503 = &protocol witness table for Data;
        long long v335 = v401;
        long long v500 = v401;
        uint64_t v336 = v482;
        (*(void (**)(char *, char *, uint64_t))(v331 + 16))(v482, v333, v334);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v331 + 56))(v336, 0, 1, v334);
        sub_100017F4C(v335, *((unint64_t *)&v335 + 1));
        sub_1000BB450();
        uint64_t v337 = v494;
        sub_1000B8D60();
        ((void (*)(char *, void, uint64_t, uint64_t))v390)(v337, 0, 1, v391);
        sub_1000BB5E0();
        sub_1000180CC(v402, v403);
        sub_1000180CC(v335, *((unint64_t *)&v335 + 1));
        (*(void (**)(char *, uint64_t))(v331 + 8))(v333, v334);
      }
      if (v397 >> 60 == 15)
      {
        sub_1000180CC(v398, *((unint64_t *)&v398 + 1));
        sub_1000180CC(v399, v400);
        sub_1000180CC(v401, *((unint64_t *)&v401 + 1));
        sub_1000180CC(v402, v403);
        sub_1000180CC(v464, v458);
        sub_1000180CC(v460, v462);
        sub_1000180CC(v463, v461);
        sub_100018074(v497, v142);
        sub_1000180CC(v457, v454);
        sub_1000180CC(v459, v453);
        sub_1000180CC(v451, v452);
        sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
        uint64_t v205 = v439;
        uint64_t v204 = v440;
        uint64_t v206 = v433;
        unint64_t v209 = v434;
        unint64_t v207 = v441;
        uint64_t v208 = v442;
        uint64_t v210 = v448;
        unint64_t v211 = v443;
        goto LABEL_130;
      }
      sub_100017F4C(v396, v397);
      Class v338 = sub_1000B82B0().super.isa;
      *(void *)&long long v500 = 0;
      id v339 = [v465 propertyListWithData:v338 options:0 format:0 error:&v500];

      if (!v339)
      {
        id v343 = (id)v500;
        sub_1000B81D0();

LABEL_218:
        swift_willThrow();
        sub_1000180CC(v464, v458);
        sub_100018074(v404, v405);
        sub_100018074(v495, v445);
        sub_100018074(v449, v444);

        uint64_t v346 = v396;
        unint64_t v347 = v397;
        sub_1000180CC(v396, v397);
        sub_10009A1CC(v504);
        sub_1000180CC(v463, v461);
        sub_1000180CC(v460, v462);
        sub_1000180CC(v451, v452);
        sub_1000180CC(v457, v454);
        sub_1000180CC(v459, v453);
        sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
        sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
        sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
        sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
        sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
        sub_100018074(v497, v142);
        sub_1000180CC(v402, v403);
        sub_1000180CC(v401, *((unint64_t *)&v401 + 1));
        sub_1000180CC(v399, v400);
        sub_1000180CC(v398, *((unint64_t *)&v398 + 1));
        uint64_t v317 = v346;
        unint64_t v318 = v347;
        goto LABEL_192;
      }
      id v340 = (id)v500;
      sub_1000BBE80();
      swift_unknownObjectRelease();
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_217:
        sub_1000BB6C0();
        sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
        sub_1000BB6B0();
        goto LABEL_218;
      }
      uint64_t v341 = v498;
      sub_100083EC4(0xD000000000000013, 0x80000001000CB880, v498, &v500);
      if (!v502)
      {
        swift_bridgeObjectRelease();
        sub_1000184DC((uint64_t)&v500, &qword_1000EC690);
        goto LABEL_217;
      }
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_217;
      }
      uint64_t v493 = v498;
      if (v400 >> 60 == 15)
      {
        uint64_t v342 = sub_1000B9C90();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v342 - 8) + 56))(v477, 1, 1, v342);
      }
      else
      {
        uint64_t v361 = v399;
        unint64_t v360 = v400;
        sub_100017F4C(v399, v400);
        sub_100017F4C(v361, v360);
        uint64_t v362 = (uint64_t)v475;
        sub_1000BB630();
        uint64_t v363 = v406;
        PosterArchive.init(posterArchiveData:workingDirectory:)(v361, v360, v362, v477);
        uint64_t v406 = v363;
        if (v363)
        {
          sub_1000180CC(v464, v458);
          sub_1000180CC(v460, v462);
          sub_1000180CC(v463, v461);
          sub_100018074(v497, v142);
          sub_1000180CC(v459, v453);
          sub_1000180CC(v457, v454);
          sub_1000180CC(v451, v452);
          sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
          sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
          sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
          sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
          sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
          sub_1000180CC(v402, v403);
          sub_1000180CC(v401, *((unint64_t *)&v401 + 1));
          uint64_t v365 = v396;
          unint64_t v364 = v397;
          sub_1000180CC(v396, v397);
          sub_1000180CC(v398, *((unint64_t *)&v398 + 1));
          uint64_t v367 = v399;
          unint64_t v366 = v400;
          sub_1000180CC(v399, v400);
          sub_100018074(v404, v405);
          sub_100018074(v495, v445);
          sub_100018074(v449, v444);
          swift_bridgeObjectRelease();

          sub_1000180CC(v365, v364);
          sub_10009A1CC(v504);
          sub_1000180CC(v367, v366);
          goto LABEL_193;
        }
        uint64_t v368 = sub_1000B9C90();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v368 - 8) + 56))(v477, 0, 1, v368);
        sub_1000180CC(v399, v400);
      }
      sub_10009AACC(v477, (uint64_t)v467);
      sub_100083EC4(0xD000000000000014, 0x80000001000CB8A0, v341, &v500);
      if (v502)
      {
        int v369 = swift_dynamicCast();
        uint64_t v370 = v498;
        if (!v369) {
          uint64_t v370 = 0;
        }
        uint64_t v492 = (void *)v370;
        if (v369) {
          uint64_t v371 = v499;
        }
        else {
          uint64_t v371 = 0;
        }
        uint64_t v494 = v371;
      }
      else
      {
        sub_1000184DC((uint64_t)&v500, &qword_1000EC690);
        uint64_t v492 = 0;
        uint64_t v494 = 0;
      }
      sub_100083EC4(0xD00000000000001ALL, 0x80000001000CB8C0, v341, &v500);
      if (v502) {
        swift_dynamicCast();
      }
      else {
        sub_1000184DC((uint64_t)&v500, &qword_1000EC690);
      }
      sub_100083EC4(0xD000000000000014, 0x80000001000CB8E0, v341, &v500);
      swift_bridgeObjectRelease();
      if (v502)
      {
        if (swift_dynamicCast()) {
          uint64_t v372 = v498;
        }
        else {
          uint64_t v372 = 0;
        }
      }
      else
      {
        sub_1000184DC((uint64_t)&v500, &qword_1000EC690);
        uint64_t v372 = 0;
      }
      uint64_t v373 = v406;
      sub_100097294(v372, (uint64_t)v435);
      uint64_t v406 = v373;
      if (v373)
      {
        sub_1000180CC(v464, v458);
        sub_100018074(v404, v405);
        sub_100018074(v495, v445);
        sub_100018074(v449, v444);

        swift_bridgeObjectRelease();
        uint64_t v374 = v396;
        unint64_t v375 = v397;
        sub_1000180CC(v396, v397);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10009A1CC(v504);
        sub_1000180CC(v463, v461);
        sub_1000180CC(v460, v462);
        sub_1000180CC(v451, v452);
        sub_1000180CC(v457, v454);
        sub_1000180CC(v459, v453);
        sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
        sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
        sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
        sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
        sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
        sub_100018074(v497, v142);
        sub_1000180CC(v402, v403);
        sub_1000180CC(v401, *((unint64_t *)&v401 + 1));
        sub_1000180CC(v399, v400);
        sub_1000180CC(v398, *((unint64_t *)&v398 + 1));
        sub_1000180CC(v374, v375);
LABEL_245:
        sub_1000184DC((uint64_t)v467, &qword_1000EDB38);
        goto LABEL_193;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v398 + 1) >> 60 == 15)
      {
        uint64_t v376 = sub_1000BB790();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v376 - 8) + 56))(v455, 1, 1, v376);
      }
      else
      {
        uint64_t v502 = &type metadata for Data;
        uint64_t v503 = &protocol witness table for Data;
        long long v377 = v398;
        long long v500 = v398;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v478 + 56))(v482, 1, 1, v479);
        sub_100017F4C(v377, *((unint64_t *)&v377 + 1));
        sub_1000BB450();
        uint64_t v378 = v406;
        sub_1000BB780();
        uint64_t v406 = v378;
        if (v378)
        {
          sub_1000180CC(v464, v458);
          sub_100018074(v404, v405);
          sub_100018074(v495, v445);
          sub_100018074(v449, v444);

          uint64_t v379 = v396;
          unint64_t v380 = v397;
          sub_1000180CC(v396, v397);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10009A1CC(v504);
          sub_1000180CC(v463, v461);
          sub_1000180CC(v460, v462);
          sub_1000180CC(v451, v452);
          sub_1000180CC(v457, v454);
          sub_1000180CC(v459, v453);
          sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
          sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
          sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
          sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
          sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
          sub_100018074(v497, v142);
          sub_1000180CC(v402, v403);
          sub_1000180CC(v401, *((unint64_t *)&v401 + 1));
          sub_1000180CC(v399, v400);
          sub_1000180CC(v398, *((unint64_t *)&v398 + 1));
          sub_1000180CC(v379, v380);
          sub_1000184DC((uint64_t)v435, &qword_1000EDB30);
          goto LABEL_245;
        }
        uint64_t v376 = sub_1000BB790();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v376 - 8) + 56))(v455, 0, 1, v376);
      }
      sub_1000182A0((uint64_t)v467, v486, &qword_1000EDB38);
      sub_1000BB790();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v376 - 8) + 56))(v488, 1, 1, v376);
      sub_1000182A0((uint64_t)v455, (uint64_t)v466, &qword_1000EDB28);
      sub_1000182A0((uint64_t)v435, v487, &qword_1000EDB30);
      uint64_t v381 = v406;
      sub_1000BB7C0();
      if (v381)
      {
        sub_1000180CC(v464, v458);
        sub_100018074(v404, v405);
        sub_100018074(v495, v445);
        sub_100018074(v449, v444);

        uint64_t v382 = v396;
        unint64_t v383 = v397;
        sub_1000180CC(v396, v397);
        sub_10009A1CC(v504);
        sub_1000180CC(v463, v461);
        sub_1000180CC(v460, v462);
        sub_1000180CC(v451, v452);
        sub_1000180CC(v457, v454);
        sub_1000180CC(v459, v453);
        sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
        sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
        sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
        sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
        sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
        sub_100018074(v497, v142);
        sub_1000180CC(v402, v403);
        sub_1000180CC(v401, *((unint64_t *)&v401 + 1));
        sub_1000180CC(v399, v400);
        sub_1000180CC(v398, *((unint64_t *)&v398 + 1));
        sub_1000180CC(v382, v383);
        sub_1000184DC((uint64_t)v455, &qword_1000EDB28);
        sub_1000184DC((uint64_t)v435, &qword_1000EDB30);
        sub_1000184DC((uint64_t)v467, &qword_1000EDB38);
        goto LABEL_193;
      }
      ((void (*)(char *, void, uint64_t, uint64_t))v387)(v481, 0, 1, v388);
      sub_1000BB670();
      sub_1000180CC(v464, v458);
      sub_100018074(v404, v405);
      sub_100018074(v495, v445);
      sub_100018074(v449, v444);

      uint64_t v384 = v396;
      unint64_t v385 = v397;
      sub_1000180CC(v396, v397);
      sub_10009A1CC(v504);
      sub_1000180CC(v463, v461);
      sub_1000180CC(v460, v462);
      sub_1000180CC(v451, v452);
      sub_1000180CC(v457, v454);
      sub_1000180CC(v459, v453);
      sub_10009A148(v413, v420, v414, v415, v416, v417, v418, v419);
      sub_10009A148(v407, v496, v408, v409, v410, v411, v412, v446);
      sub_10009A148(v423, v427, v424, v421, v422, v447, v425, v426);
      sub_10009A148(v440, v439, v433, v441, v442, v434, v448, v443);
      sub_10009A148(v430, v438, v431, v429, v428, v432, v436, v437);
      sub_100018074(v497, v142);
      sub_1000180CC(v402, v403);
      sub_1000180CC(v401, *((unint64_t *)&v401 + 1));
      sub_1000180CC(v399, v400);
      sub_1000180CC(v398, *((unint64_t *)&v398 + 1));
      sub_1000180CC(v384, v385);
      sub_1000184DC((uint64_t)v455, &qword_1000EDB28);
      sub_1000184DC((uint64_t)v435, &qword_1000EDB30);
      sub_1000184DC((uint64_t)v467, &qword_1000EDB38);
      return;
  }
}

uint64_t sub_100097294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = sub_1000B9CF0();
  uint64_t v44 = *(void *)(v47 - 8);
  uint64_t v5 = __chkstk_darwin(v47);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = sub_10001295C(&qword_1000EC7F8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v39 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = sub_1000BB410();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  if (!a1)
  {
    uint64_t v33 = sub_1000BB7B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a2, 1, 1, v33);
  }
  uint64_t v40 = a2;
  uint64_t v41 = (char *)&v39 - v24;
  uint64_t v42 = v25;
  uint64_t v43 = v23;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_18;
  }
  unint64_t v26 = sub_10008BB58(0x656D614E746E6F66, 0xEB0000000079654BLL);
  if ((v27 & 1) == 0) {
    goto LABEL_18;
  }
  sub_10001DA70(*(void *)(a1 + 56) + 32 * v26, (uint64_t)v46);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_18;
  }
  if (!*(void *)(a1 + 16)
    || (v39 = v45, unint64_t v28 = sub_10008BB58(0x657A6953746E6F66, 0xEB0000000079654BLL), (v29 & 1) == 0)
    || (sub_10001DA70(*(void *)(a1 + 56) + 32 * v28, (uint64_t)v46), (swift_dynamicCast() & 1) == 0)
    || !*(void *)(a1 + 16)
    || (unint64_t v30 = sub_10008BB58(0x67696557746E6F66, 0xED000079654B7468), (v31 & 1) == 0)
    || (sub_10001DA70(*(void *)(a1 + 56) + 32 * v30, (uint64_t)v46), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    sub_1000BB6C0();
    sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
LABEL_19:
    sub_1000BB6B0();
    return swift_willThrow();
  }
  sub_100097BD0(a1, 0x6F6C6F43746E6F66, 0xEC00000079654B72, (uint64_t)v18);
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v18, 1, v43) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1000184DC((uint64_t)v18, &qword_1000EC7F8);
LABEL_18:
    sub_1000BB6C0();
    sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v18, v43);
  if (*(void *)(a1 + 16))
  {
    unint64_t v34 = sub_10008BB58(0x6369747265567369, 0xED000079654B6C61);
    if (v35)
    {
      sub_10001DA70(*(void *)(a1 + 56) + 32 * v34, (uint64_t)v46);
      swift_dynamicCast();
    }
  }
  if (*(void *)(a1 + 16)
    && (unint64_t v36 = sub_10008BB58(0x79654B65707974, 0xE700000000000000), (v37 & 1) != 0)
    && (sub_10001DA70(*(void *)(a1 + 56) + 32 * v36, (uint64_t)v46), (swift_dynamicCast() & 1) != 0))
  {
    sub_1000B9D00();
    sub_100097BD0(a1, 0xD000000000000012, 0x80000001000CBBE0, (uint64_t)v16);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v22, v41, v43);
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v7, v9, v47);
    sub_1000182A0((uint64_t)v16, (uint64_t)v13, &qword_1000EC7F8);
    sub_1000BB7A0();
    sub_1000184DC((uint64_t)v16, &qword_1000EC7F8);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v47);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
    uint64_t v38 = sub_1000BB7B0();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v40, 0, 1, v38);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1000BB6C0();
    sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v41, v43);
  }
}

uint64_t sub_100097BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  if (!a1) {
    goto LABEL_23;
  }
  if (!*(void *)(a1 + 16))
  {
    long long v31 = 0u;
    long long v32 = 0u;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_10008BB58(a2, a3);
  if ((v11 & 1) == 0)
  {
    long long v31 = 0u;
    long long v32 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  sub_10001DA70(*(void *)(a1 + 56) + 32 * v10, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  if (!*((void *)&v32 + 1))
  {
LABEL_22:
    sub_1000184DC((uint64_t)&v31, &qword_1000EC690);
    goto LABEL_23;
  }
  sub_10001295C(&qword_1000EDB68);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    uint64_t v30 = sub_1000BB410();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a4, 1, 1, v30);
  }
  uint64_t v12 = v33;
  if (!*(void *)(v33 + 16)) {
    goto LABEL_25;
  }
  unint64_t v13 = sub_10008BB58(6579570, 0xE300000000000000);
  if ((v14 & 1) == 0) {
    goto LABEL_25;
  }
  uint64_t v15 = *(void **)(*(void *)(v12 + 56) + 8 * v13);
  *(void *)&long long v31 = 0;
  BYTE8(v31) = 1;
  id v16 = v15;
  sub_1000BBB00();

  if (BYTE8(v31)) {
    goto LABEL_25;
  }
  if (!*(void *)(v12 + 16)) {
    goto LABEL_25;
  }
  unint64_t v17 = sub_10008BB58(0x6E65657267, 0xE500000000000000);
  if ((v18 & 1) == 0) {
    goto LABEL_25;
  }
  uint64_t v19 = *(void **)(*(void *)(v12 + 56) + 8 * v17);
  *(void *)&long long v31 = 0;
  BYTE8(v31) = 1;
  id v20 = v19;
  sub_1000BBB00();

  if (BYTE8(v31)) {
    goto LABEL_25;
  }
  if (!*(void *)(v12 + 16)) {
    goto LABEL_25;
  }
  unint64_t v21 = sub_10008BB58(1702194274, 0xE400000000000000);
  if ((v22 & 1) == 0
    || (uint64_t v23 = *(void **)(*(void *)(v12 + 56) + 8 * v21),
        *(void *)&long long v31 = 0,
        BYTE8(v31) = 1,
        id v24 = v23,
        sub_1000BBB00(),
        v24,
        (BYTE8(v31) & 1) != 0)
    || !*(void *)(v12 + 16)
    || (unint64_t v25 = sub_10008BB58(0x6168706C61, 0xE500000000000000), (v26 & 1) == 0))
  {
LABEL_25:
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  id v27 = *(id *)(*(void *)(v12 + 56) + 8 * v25);
  swift_bridgeObjectRelease();
  *(void *)&long long v31 = 0;
  BYTE8(v31) = 1;
  sub_1000BBB00();

  if (BYTE8(v31))
  {
LABEL_26:
    sub_1000BB6C0();
    sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
  uint64_t result = sub_1000BB3F0();
  if (!v5)
  {
    uint64_t v29 = sub_1000BB410();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(a4, 0, 1, v29);
  }
  return result;
}

void sub_100097F70(uint64_t a1, uint64_t a2, void **a3, uint64_t *a4, uint64_t *a5)
{
  id v9 = [objc_allocWithZone((Class)NSData) initWithBytes:a1 length:16];
  unint64_t v10 = *a3;
  *a3 = v9;

  if (a1)
  {
    uint64_t v11 = sub_10009AD40((unsigned char *)(a1 + 16), 16);
    uint64_t v12 = *a4;
    unint64_t v13 = a4[1];
    *a4 = v11;
    a4[1] = v14;
    sub_100018074(v12, v13);
    uint64_t v15 = sub_10009AD40((unsigned char *)(a1 + 32), 16);
    uint64_t v16 = *a5;
    unint64_t v17 = a5[1];
    *a5 = v15;
    a5[1] = v18;
    sub_100018074(v16, v17);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100098028(void *__b1, int a2, uint64_t a3, unint64_t a4, size_t __len)
{
  switch(a4 >> 62)
  {
    case 1uLL:
      if ((int)a3 > a3 >> 32)
      {
        __break(1u);
        goto LABEL_21;
      }
      sub_100017F4C(a3, a4);
      id v9 = (char *)sub_1000B8150();
      if (v9)
      {
        uint64_t v10 = sub_1000B8180();
        if (!__OFSUB__((int)a3, v10))
        {
          v9 += (int)a3 - v10;
          goto LABEL_7;
        }
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
      }
LABEL_7:
      sub_1000B8170();
      if (timingsafe_bcmp(__b1, v9, __len))
      {
        sub_1000BB6C0();
        sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
        sub_1000BB6B0();
        swift_willThrow();
      }
      return sub_100018074(a3, a4);
    case 2uLL:
      uint64_t v12 = *(void *)(a3 + 16);
      swift_retain();
      swift_retain();
      unint64_t v13 = (char *)sub_1000B8150();
      if (!v13) {
        goto LABEL_13;
      }
      uint64_t v14 = sub_1000B8180();
      if (__OFSUB__(v12, v14)) {
        goto LABEL_22;
      }
      v13 += v12 - v14;
LABEL_13:
      sub_1000B8170();
      if (timingsafe_bcmp(__b1, v13, __len))
      {
        sub_1000BB6C0();
        sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
        sub_1000BB6B0();
        swift_willThrow();
      }
      swift_release();
      return swift_release();
    case 3uLL:
      memset(__b2, 0, 14);
      goto LABEL_17;
    default:
      __b2[0] = a3;
      LOWORD(__b2[1]) = a4;
      BYTE2(__b2[1]) = BYTE2(a4);
      BYTE3(__b2[1]) = BYTE3(a4);
      BYTE4(__b2[1]) = BYTE4(a4);
      BYTE5(__b2[1]) = BYTE5(a4);
LABEL_17:
      uint64_t result = timingsafe_bcmp(__b1, __b2, __len);
      if (result)
      {
        sub_1000BB6C0();
        sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
        sub_1000BB6B0();
        return swift_willThrow();
      }
      return result;
  }
}

void *sub_100098458(const void *a1, int a2, id a3, uint64_t a4, uint64_t *a5)
{
  CCCryptorRef cryptorRef = 0;
  id v8 = a3;
  id v9 = [v8 bytes];
  id v10 = v8;
  uint64_t v11 = sub_1000BBCB0();
  uint64_t v12 = sub_1000BBCC0();
  uint64_t v13 = sub_1000BBCB0();
  uint64_t v14 = sub_1000BBCC0();
  if (v11 < v13 || v14 < v11)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v15 = sub_1000BBCB0();
  uint64_t v16 = sub_1000BBCC0();

  if (v12 < v15 || v16 < v12) {
    goto LABEL_16;
  }
  if (__OFSUB__(v12, v11))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  if (CCCryptorCreateWithMode(1u, 4u, 0, 0, a1, v9, v12 - v11, 0, 0, 0, 0, &cryptorRef)
    || (uint64_t v18 = cryptorRef) == 0)
  {
    sub_1000BB6C0();
    sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    return (void *)swift_willThrow();
  }
  else
  {
    long long v30 = *(_OWORD *)(a4 + 16);
    sub_10009AC44((uint64_t)&v30, (uint64_t)v31);
    sub_10009AC44((uint64_t)v31, (uint64_t)&v32);
    unsigned __int8 v19 = BYTE6(v33);
    size_t v20 = 0;
    switch(v33 >> 62)
    {
      case 1uLL:
        v33 &= 0x3FFFFFFFFFFFFFFFuLL;
        if (__OFSUB__(HIDWORD(v32), v32)) {
          goto LABEL_18;
        }
        size_t v20 = HIDWORD(v32) - (int)v32;
LABEL_14:
        size_t OutputLength = CCCryptorGetOutputLength(v18, v20, 1);
        size_t v28 = 0;
        uint64_t v24 = sub_10009A304(OutputLength);
        uint64_t v25 = *a5;
        unint64_t v26 = a5[1];
        *a5 = v24;
        a5[1] = v27;
        sub_100018074(v25, v26);
        sub_10009ABD0((void *)a4);
        uint64_t result = sub_100098CFC(a5, (void *)a4, &cryptorRef, OutputLength, &v28);
        break;
      case 2uLL:
        v33 &= 0x3FFFFFFFFFFFFFFFuLL;
        uint64_t v21 = *(void *)(v32 + 16);
        uint64_t v22 = *(void *)(v32 + 24);
        size_t v20 = v22 - v21;
        if (!__OFSUB__(v22, v21)) {
          goto LABEL_14;
        }
        goto LABEL_19;
      case 3uLL:
        goto LABEL_14;
      default:
        v33 &= 0x3FFFFFFFFFFFFFFFuLL;
        size_t v20 = v19;
        goto LABEL_14;
    }
  }
  return result;
}

uint64_t sub_100098764(void *a1, int a2, uint64_t a3, _CCCryptor **a4, size_t a5, size_t *a6)
{
  long long v33 = *(_OWORD *)(a3 + 16);
  sub_10009AC44((uint64_t)&v33, (uint64_t)v34);
  sub_10009AC44((uint64_t)v34, (uint64_t)&v35);
  unsigned __int8 v11 = BYTE14(v35);
  switch(*((void *)&v35 + 1) >> 62)
  {
    case 1:
      *((void *)&v35 + 1) &= 0x3FFFFFFFFFFFFFFFuLL;
      uint64_t v14 = (int)v35;
      uint64_t v13 = SDWORD1(v35);
      if (SDWORD1(v35) < (int)v35)
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      sub_10009ACA0((uint64_t)&v33);
      uint64_t v15 = (char *)sub_1000B8150();
      if (v15)
      {
        uint64_t v16 = sub_1000B8180();
        if (!__OFSUB__(v14, v16))
        {
          v15 += v14 - v16;
          goto LABEL_7;
        }
LABEL_29:
        __break(1u);
      }
LABEL_7:
      uint64_t v17 = sub_1000B8170();
      uint64_t v18 = v13 - v14;
      if (v17 < v13 - v14) {
        uint64_t v18 = v17;
      }
      unsigned __int8 v19 = &v15[v18];
      if (v15) {
        uint64_t v20 = (uint64_t)v19;
      }
      else {
        uint64_t v20 = 0;
      }
      sub_1000989E8(v15, v20, a4, a1, a2, a5, a6);
      return sub_10009ACD0((uint64_t)&v33);
    case 2:
      *((void *)&v35 + 1) &= 0x3FFFFFFFFFFFFFFFuLL;
      uint64_t v22 = *(void *)(v35 + 16);
      uint64_t v31 = *(void *)(v35 + 24);
      swift_retain();
      swift_retain();
      uint64_t v23 = (char *)sub_1000B8150();
      if (!v23) {
        goto LABEL_16;
      }
      uint64_t v24 = sub_1000B8180();
      if (__OFSUB__(v22, v24)) {
        goto LABEL_28;
      }
      v23 += v22 - v24;
LABEL_16:
      BOOL v25 = __OFSUB__(v31, v22);
      uint64_t v26 = v31 - v22;
      if (v25) {
        goto LABEL_27;
      }
      uint64_t v27 = sub_1000B8170();
      if (v27 >= v26) {
        uint64_t v28 = v26;
      }
      else {
        uint64_t v28 = v27;
      }
      uint64_t v29 = &v23[v28];
      if (v23) {
        uint64_t v30 = (uint64_t)v29;
      }
      else {
        uint64_t v30 = 0;
      }
      sub_1000989E8(v23, v30, a4, a1, a2, a5, a6);
      swift_release();
      return swift_release();
    case 3:
      memset(dataIn, 0, 14);
      uint64_t v12 = (char *)dataIn;
      return sub_1000989E8(dataIn, (uint64_t)v12, a4, a1, a2, a5, a6);
    default:
      *((void *)&v35 + 1) &= 0x3FFFFFFFFFFFFFFFuLL;
      dataIn[0] = v35;
      *(void *)((char *)dataIn + 6) = *(void *)((char *)&v35 + 6);
      uint64_t v12 = (char *)dataIn + v11;
      return sub_1000989E8(dataIn, (uint64_t)v12, a4, a1, a2, a5, a6);
  }
}

uint64_t sub_1000989E8(void *dataIn, uint64_t a2, _CCCryptor **a3, void *a4, int a5, size_t dataOutAvailable, size_t *dataOutMoved)
{
  id v10 = *a3;
  if (dataIn) {
    size_t v11 = a2 - (void)dataIn;
  }
  else {
    size_t v11 = 0;
  }
  uint64_t result = CCCryptorUpdate(v10, dataIn, v11, a4, dataOutAvailable, dataOutMoved);
  if (result || *dataOutMoved != dataOutAvailable)
  {
    sub_1000BB6C0();
    sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
  return result;
}

void sub_100098B10(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1000B8A80();
  sub_1000B89D0();
  sub_1000925E0(a3, a1, a2, a4);
}

uint64_t sub_100098B98(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1000B8150();
  if (!result || (uint64_t result = sub_1000B8180(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1000B8170();
      return sub_1000B82A0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

char *sub_100098C2C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t *a6)
{
  uint64_t result = (char *)sub_1000B8150();
  uint64_t v12 = result;
  if (result)
  {
    uint64_t result = (char *)sub_1000B8180();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v12 += a1 - (void)result;
  }
  BOOL v13 = __OFSUB__(a2, a1);
  uint64_t v14 = a2 - a1;
  if (v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v15 = sub_1000B8170();
  if (v15 >= v14) {
    int v16 = v14;
  }
  else {
    int v16 = v15;
  }
  int v17 = v12 + v16;
  if (v12) {
    int v18 = v17;
  }
  else {
    int v18 = 0;
  }
  sub_100098458(v12, v18, a4, (uint64_t)a5, a6);

  return (char *)sub_10009A1CC(a5);
}

void *sub_100098CFC(void *a1, void *a2, _CCCryptor **a3, size_t a4, size_t *a5)
{
  unint64_t v5 = a1[1];
  switch(v5 >> 62)
  {
    case 1uLL:
      *(void *)&long long v31 = *a1;
      *((void *)&v31 + 1) = v5 & 0x3FFFFFFFFFFFFFFFLL;
      sub_10009ABD0(a2);
      sub_100098FB4((int *)&v31, a2, a3, a4, a5);
      uint64_t result = sub_10009A1CC(a2);
      uint64_t v17 = *((void *)&v31 + 1) | 0x4000000000000000;
      *a1 = v31;
      a1[1] = v17;
      return result;
    case 2uLL:
      *(void *)&long long v31 = *a1;
      *((void *)&v31 + 1) = v5 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1000B8250();
      uint64_t v18 = *((void *)&v31 + 1);
      uint64_t v19 = *(void *)(v31 + 16);
      uint64_t v30 = *(void *)(v31 + 24);
      uint64_t v20 = sub_1000B8150();
      if (!v20)
      {
        __break(1u);
        JUMPOUT(0x100098FA4);
      }
      uint64_t v21 = v20;
      uint64_t v22 = sub_1000B8180();
      uint64_t v23 = v19 - v22;
      if (__OFSUB__(v19, v22))
      {
        __break(1u);
LABEL_14:
        __break(1u);
      }
      BOOL v24 = __OFSUB__(v30, v19);
      uint64_t v25 = v30 - v19;
      if (v24) {
        goto LABEL_14;
      }
      uint64_t v26 = sub_1000B8170();
      if (v26 >= v25) {
        int v27 = v25;
      }
      else {
        int v27 = v26;
      }
      sub_100098764((void *)(v21 + v23), v21 + v23 + v27, (uint64_t)a2, a3, a4, a5);
      uint64_t result = sub_10009A1CC(a2);
      *a1 = v31;
      a1[1] = v18 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v31 + 7) = 0;
      *(void *)&long long v31 = 0;
      sub_100098764(&v31, (int)&v31, (uint64_t)a2, a3, a4, a5);
      return sub_10009A1CC(a2);
    default:
      *(void *)&long long v31 = *a1;
      WORD4(v31) = v5;
      BYTE10(v31) = BYTE2(v5);
      BYTE11(v31) = BYTE3(v5);
      BYTE12(v31) = BYTE4(v5);
      BYTE13(v31) = BYTE5(v5);
      BYTE14(v31) = BYTE6(v5);
      sub_100098764(&v31, (int)&v31 + BYTE6(v5), (uint64_t)a2, a3, a4, a5);
      uint64_t v11 = v31;
      uint64_t v12 = DWORD2(v31);
      uint64_t v13 = BYTE12(v31);
      uint64_t v14 = BYTE13(v31);
      uint64_t v15 = BYTE14(v31);
      uint64_t result = sub_10009A1CC(a2);
      *a1 = v11;
      a1[1] = v12 | (v13 << 32) | (v14 << 40) | (v15 << 48);
      return result;
  }
}

void sub_100098FB4(int *a1, void *a2, _CCCryptor **a3, size_t a4, size_t *a5)
{
  sub_1000B8270();
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  if ((int)v10 < (int)v11)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v19 = a3;
  uint64_t v12 = sub_1000B8150();
  if (!v12)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v13 = v12;
  uint64_t v14 = sub_1000B8180();
  uint64_t v15 = v11 - v14;
  if (__OFSUB__(v11, v14))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v16 = v10 - v11;
  uint64_t v17 = sub_1000B8170();
  if (v17 >= v16) {
    int v18 = v16;
  }
  else {
    int v18 = v17;
  }
  sub_100098764((void *)(v13 + v15), v13 + v15 + v18, (uint64_t)a2, v19, a4, a5);
  sub_10009A1CC(a2);
}

uint64_t sub_100099098(uint64_t a1, unint64_t a2)
{
  v10[3] = &type metadata for Data;
  v10[4] = &protocol witness table for Data;
  v10[0] = a1;
  v10[1] = a2;
  uint64_t v4 = sub_100014C68(v10, (uint64_t)&type metadata for Data);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_100017F4C(a1, a2);
      sub_100017F4C(v5, v6);
      sub_100098B98((int)v5, v5 >> 32);
      sub_100018074(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_100017F4C(a1, a2);
      swift_retain();
      swift_retain();
      sub_100098B98(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_100017F4C(a1, a2);
      sub_1000B82A0();
      break;
  }
  return sub_100015C54((uint64_t)v10);
}

uint64_t sub_1000992BC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1000992D4(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1000992D4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!a6)
  {
    swift_bridgeObjectRetain();
    v9._countAndFlagsBits = 58;
    v9._object = (void *)0xE100000000000000;
    sub_1000BB9A0(v9);
    v10._countAndFlagsBits = sub_1000BC190();
    sub_1000BB9A0(v10);
    swift_bridgeObjectRelease();
    v11._countAndFlagsBits = 58;
    v11._object = (void *)0xE100000000000000;
    sub_1000BB9A0(v11);
    v12._countAndFlagsBits = a1;
    v12._object = a2;
    sub_1000BB9A0(v12);
    sub_1000BB6C0();
    sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();
  }
  return a6;
}

uint64_t sub_10009943C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v27 = sub_1000BB800();
  uint64_t v5 = *(void *)(v27 - 8);
  uint64_t v6 = __chkstk_darwin(v27);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  Swift::String v10 = (char *)&v27 - v9;
  uint64_t v11 = sub_1000BB950();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BB940();
  uint64_t v15 = sub_1000BB910();
  unint64_t v17 = v16;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v17 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    *(void *)&long long v31 = a1;
    *((void *)&v31 + 1) = a2;
    sub_100017F4C(a1, a2);
    sub_1000BB7F0();
    *(void *)&long long v31 = v15;
    *((void *)&v31 + 1) = v17;
    *(void *)&long long v30 = v15;
    *((void *)&v30 + 1) = v17;
    sub_1000BB840();
    sub_10009AB34(&qword_1000EDB78, (void (*)(uint64_t))&type metadata accessor for SHA256);
    unint64_t v26 = sub_10009AB7C();
    sub_1000BB820();
    id v29 = [objc_allocWithZone((Class)NSData) init];
    long long v30 = xmmword_1000C3BD0;
    long long v31 = xmmword_1000C3BD0;
    __chkstk_darwin(v29);
    *(&v27 - 4) = (uint64_t)&v29;
    *(&v27 - 3) = (uint64_t)&v31;
    uint64_t v25 = &v30;
    sub_1000BB7E0();
    sub_1000180CC(v15, v17);
    uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v20 = v8;
    uint64_t v21 = v27;
    v19(v20, v27);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v19)(v10, v21);
    long long v22 = v30;
    long long v23 = v31;
    BOOL v24 = v28;
    *uint64_t v28 = v29;
    *(_OWORD *)(v24 + 1) = v23;
    *(_OWORD *)(v24 + 3) = v22;
  }
  return result;
}

uint64_t sub_100099778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v13 = self;
  Class isa = sub_1000B82B0().super.isa;
  *(void *)&long long v30 = 0;
  id v15 = [v13 propertyListWithData:isa options:0 format:0 error:&v30];

  if (!v15)
  {
    id v19 = (id)v30;
    swift_bridgeObjectRelease();
    sub_1000B81D0();

LABEL_20:
    swift_willThrow();
    sub_1000180CC(a5, a6);
    return sub_100018074(a3, a4);
  }
  id v16 = (id)v30;
  sub_1000BBE80();
  swift_unknownObjectRelease();
  sub_10001295C(&qword_1000EC6A8);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_17;
  }
  if (*(void *)(v28 + 16))
  {
    unint64_t v17 = sub_10008BB58(118, 0xE100000000000000);
    if (v18)
    {
      sub_10001DA70(*(void *)(v28 + 56) + 32 * v17, (uint64_t)&v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000184DC((uint64_t)&v30, &qword_1000EC690);
      sub_1000BB6C0();
      sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
LABEL_19:
      sub_1000BB6B0();
      goto LABEL_20;
    }
  }
  long long v30 = 0u;
  long long v31 = 0u;
  sub_1000184DC((uint64_t)&v30, &qword_1000EC690);
  if (!*(void *)(v28 + 16)
    || (unint64_t v20 = sub_10008BB58(105, 0xE100000000000000), (v21 & 1) == 0)
    || (sub_10001DA70(*(void *)(v28 + 56) + 32 * v20, (uint64_t)&v30), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_17:
    swift_bridgeObjectRelease();
LABEL_18:
    sub_1000BB6C0();
    sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    goto LABEL_19;
  }
  if (!*(void *)(v28 + 16)
    || (unint64_t v22 = sub_10008BB58(100, 0xE100000000000000), (v23 & 1) == 0)
    || (sub_10001DA70(*(void *)(v28 + 56) + 32 * v22, (uint64_t)&v30), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100018074(v28, v29);
    goto LABEL_18;
  }
  if (*(void *)(v28 + 16) && (unint64_t v24 = sub_10008BB58(116, 0xE100000000000000), (v25 & 1) != 0))
  {
    sub_10001DA70(*(void *)(v28 + 56) + 32 * v24, (uint64_t)&v30);
  }
  else
  {
    long long v30 = 0u;
    long long v31 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v31 + 1))
  {
    swift_bridgeObjectRelease();
    sub_100018074(v28, v29);
    sub_100018074(v28, v29);
    sub_1000184DC((uint64_t)&v30, &qword_1000EC690);
    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_100018074(v28, v29);
    sub_100018074(v28, v29);
    goto LABEL_18;
  }
  sub_100018074(a3, a4);
  uint64_t result = v28;
  if (a6 >> 60 == 15)
  {
    a5 = v28;
    a6 = v29;
  }
  else
  {
    uint64_t result = sub_100018074(v28, v29);
  }
  *a7 = a1;
  a7[1] = a2;
  a7[2] = v28;
  a7[3] = v29;
  a7[4] = v28;
  a7[5] = v29;
  a7[6] = a5;
  a7[7] = a6;
  return result;
}

uint64_t sub_100099C94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  switch(a3 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a2) - a2;
      if (__OFSUB__(HIDWORD(a2), a2))
      {
        __break(1u);
LABEL_11:
        __break(1u);
        JUMPOUT(0x100099E50);
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if (v4 == a4)
      {
LABEL_7:
        __chkstk_darwin(a1);
        sub_10001295C(&qword_1000EDB70);
        return sub_1000BB810();
      }
      else
      {
LABEL_9:
        sub_1000BB6C0();
        sub_10009AB34((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
        swift_allocError();
        sub_1000BB6B0();
        return swift_willThrow();
      }
    case 2uLL:
      uint64_t v6 = *(void *)(a2 + 16);
      uint64_t v5 = *(void *)(a2 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_11;
    case 3uLL:
      if (a4) {
        goto LABEL_9;
      }
      goto LABEL_7;
    default:
      uint64_t v4 = BYTE6(a3);
      goto LABEL_6;
  }
}

uint64_t sub_100099E60(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v27 = a1;
  unint64_t v28 = a2;
  void v23[2] = a10;
  unint64_t v24 = a4;
  v23[0] = a7;
  v23[1] = a9;
  uint64_t v25 = sub_1000BB800();
  uint64_t v14 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  id v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10001295C(&qword_1000EDB70);
  uint64_t v17 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v32 = xmmword_1000C3BD0;
  if (a6 >> 60 != 15)
  {
    sub_100017F4C(a5, a6);
    sub_1000B82E0();
    sub_1000180CC(a5, a6);
  }
  if (a8 >> 60 != 15)
  {
    uint64_t v20 = v23[0];
    sub_100017F4C(v23[0], a8);
    sub_1000B82E0();
    sub_1000180CC(v20, a8);
  }
  sub_1000B82E0();
  long long v31 = v32;
  unint64_t v21 = v24;
  uint64_t v29 = a3;
  unint64_t v30 = v24;
  sub_100017F4C(v32, *((unint64_t *)&v32 + 1));
  sub_100017F4C(a3, v21);
  sub_1000BB7F0();
  sub_1000BB840();
  sub_10009AB34(&qword_1000EDB78, (void (*)(uint64_t))&type metadata accessor for SHA256);
  sub_10009AB7C();
  sub_1000BB830();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v25);
  sub_100018074(v31, *((unint64_t *)&v31 + 1));
  sub_100099C94((uint64_t)v19, v27, v28, 16);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v26);
  return sub_100018074(v32, *((unint64_t *)&v32 + 1));
}

void sub_10009A148(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_100018074(a3, a4);
    sub_100018074(a5, a6);
    sub_100018074(a7, a8);
  }
}

void *sub_10009A1CC(void *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t v7 = a1[7];
  swift_bridgeObjectRelease();
  sub_100018074(v2, v3);
  sub_100018074(v4, v5);
  sub_100018074(v6, v7);
  return a1;
}

uint64_t sub_10009A240(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_10009A304(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_1000B8190();
      swift_allocObject();
      sub_1000B8160();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1000B8290();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_10009A3A4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&long long v58 = a3;
  *((void *)&v58 + 1) = a4;
  id v55 = a2;
  uint64_t v5 = sub_1000BB800();
  unint64_t v59 = *(void *)(v5 - 8);
  unint64_t v60 = v5;
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001295C(&qword_1000EDB70);
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v57 = v8;
  __chkstk_darwin(v8);
  id v62 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000BB950();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BB930();
  uint64_t v14 = sub_1000BB910();
  unint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v16 >> 60 == 15) {
LABEL_13:
  }
    __break(1u);
  uint64_t v18 = a1[4];
  unint64_t v17 = a1[5];
  *(void *)&long long v63 = v14;
  *((void *)&v63 + 1) = v16;
  sub_100017F4C(v18, v17);
  sub_100017FA4(v14, v16);
  sub_100099098(v18, v17);
  sub_100018074(v18, v17);
  sub_1000180CC(v14, v16);
  long long v19 = v63;
  uint64_t v20 = a1;
  uint64_t v21 = a1[2];
  unint64_t v22 = a1[3];
  long long v64 = v63;
  sub_100017F4C(v21, v22);
  sub_100017F4C(v19, *((unint64_t *)&v19 + 1));
  sub_100099098(v21, v22);
  sub_100018074(v21, v22);
  sub_100018074(v19, *((unint64_t *)&v19 + 1));
  long long v23 = v64;
  long long v63 = v58;
  sub_100017F4C(v58, *((unint64_t *)&v58 + 1));
  unint64_t v24 = v7;
  sub_1000BB7F0();
  sub_1000BB840();
  sub_10009AB34(&qword_1000EDB78, (void (*)(uint64_t))&type metadata accessor for SHA256);
  sub_10009AB7C();
  uint64_t v25 = (uint64_t)v62;
  sub_1000BB830();
  (*(void (**)(char *, unint64_t))(v59 + 8))(v24, v60);
  uint64_t v26 = v61;
  sub_100099C94(v25, v20[6], v20[7], 32);
  if (v26)
  {
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v25, v57);
    return sub_100018074(v23, *((unint64_t *)&v23 + 1));
  }
  unint64_t v60 = *((void *)&v23 + 1);
  uint64_t v61 = v23;
  long long v64 = xmmword_1000C3BD0;
  uint64_t v27 = v20;
  unint64_t v28 = v17;
  switch(v17 >> 62)
  {
    case 1uLL:
      uint64_t v37 = (int)v18;
      uint64_t v38 = v18 >> 32;
      if (v18 >> 32 < (int)v18)
      {
        __break(1u);
        goto LABEL_13;
      }
      uint64_t v39 = v18;
      unint64_t v59 = v28 & 0x3FFFFFFFFFFFFFFFLL;
      id v40 = v55;
      unint64_t v41 = v28;
      id v42 = v55;
      sub_10009ABD0(v27);
      id v43 = v42;
      sub_10009ABD0(v27);
      sub_100017F4C(v39, v41);
      id v44 = v43;
      sub_10009ABD0(v27);
      sub_100098C2C(v37, v38, v59, v44, v27, (uint64_t *)&v64);
      unint64_t v45 = v41;
      id v30 = v40;
      sub_100018074(v39, v45);
      uint64_t v34 = v56;
      uint64_t v33 = v57;
      uint64_t v36 = v61;
      uint64_t v25 = (uint64_t)v62;
      unint64_t v35 = v60;
LABEL_11:
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v25, v33);
      sub_100018074(v36, v35);

      sub_10009A1CC(v27);
      sub_10009A1CC(v27);
      return v64;
    case 2uLL:
      uint64_t v47 = *(void *)(v18 + 16);
      uint64_t v46 = *(void *)(v18 + 24);
      id v30 = v55;
      id v48 = v55;
      sub_10009ABD0(v20);
      id v49 = v48;
      sub_10009ABD0(v20);
      id v50 = v49;
      sub_10009ABD0(v20);
      swift_retain();
      swift_retain();
      sub_100098C2C(v47, v46, v17 & 0x3FFFFFFFFFFFFFFFLL, v50, v20, (uint64_t *)&v64);
      swift_release();
      swift_release();
      uint64_t v34 = v56;
      uint64_t v33 = v57;
      uint64_t v25 = (uint64_t)v62;
      goto LABEL_10;
    case 3uLL:
      *(void *)((char *)&v63 + 6) = 0;
      *(void *)&long long v63 = 0;
      id v30 = v55;
      id v51 = v55;
      sub_10009ABD0(v20);
      id v52 = v51;
      sub_10009ABD0(v20);
      sub_100098458(&v63, (int)&v63, v52, (uint64_t)v20, (uint64_t *)&v64);
      uint64_t v34 = v56;
      uint64_t v33 = v57;
LABEL_10:
      unint64_t v35 = v60;
      uint64_t v36 = v61;
      goto LABEL_11;
    default:
      *(void *)&long long v63 = v18;
      WORD4(v63) = v17;
      BYTE10(v63) = BYTE2(v17);
      BYTE11(v63) = BYTE3(v17);
      BYTE12(v63) = BYTE4(v17);
      BYTE13(v63) = BYTE5(v17);
      uint64_t v29 = (char *)&v63 + BYTE6(v17);
      id v30 = v55;
      id v31 = v55;
      sub_10009ABD0(v20);
      id v32 = v31;
      sub_10009ABD0(v20);
      sub_100098458(&v63, (int)v29, v32, (uint64_t)v20, (uint64_t *)&v64);
      uint64_t v34 = v56;
      uint64_t v33 = v57;
      unint64_t v35 = v60;
      uint64_t v36 = v61;
      goto LABEL_11;
  }
}

uint64_t sub_10009AACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EDB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009AB34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10009AB7C()
{
  unint64_t result = qword_1000EDB80;
  if (!qword_1000EDB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDB80);
  }
  return result;
}

void *sub_10009ABD0(void *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t v7 = a1[7];
  swift_bridgeObjectRetain();
  sub_100017F4C(v2, v3);
  sub_100017F4C(v4, v5);
  sub_100017F4C(v6, v7);
  return a1;
}

uint64_t sub_10009AC44(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10009ACA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009ACD0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009AD00(void *a1, int a2)
{
  return sub_100098028(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_10009AD20(uint64_t a1, uint64_t a2)
{
  sub_100097F70(a1, a2, *(void ***)(v2 + 16), *(uint64_t **)(v2 + 24), *(uint64_t **)(v2 + 32));
}

uint64_t sub_10009AD40(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_10009A240(__src, &__src[a2]);
  }
  sub_1000B8190();
  swift_allocObject();
  sub_1000B8140();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_1000B8290();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CrossServiceAssociationMessageUnpacker()
{
  return &type metadata for CrossServiceAssociationMessageUnpacker;
}

unint64_t sub_10009AE04(uint64_t a1)
{
  unint64_t result = sub_100012E2C();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10009AE2C()
{
  return sub_10009CBF0(&qword_1000EDB88, (void (*)(uint64_t))&type metadata accessor for CrossServiceAssociationMessage);
}

uint64_t sub_10009AE74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v106 = a1;
  uint64_t v1 = sub_10001295C(&qword_1000EC628);
  __chkstk_darwin(v1 - 8);
  char v100 = (char *)&v97 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1000BBF10();
  uint64_t v108 = *(void *)(v110 - 8);
  uint64_t v3 = __chkstk_darwin(v110);
  id v101 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  char v107 = (char *)&v97 - v6;
  __chkstk_darwin(v5);
  unint64_t v109 = (char *)&v97 - v7;
  uint64_t v8 = sub_10001295C(&qword_1000EC678);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000B8380();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  *(void *)&long long v105 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1000BB5D0();
  uint64_t v14 = *(void *)(v120 - 8);
  uint64_t v15 = __chkstk_darwin(v120);
  unint64_t v17 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v104 = (char *)&v97 - v18;
  uint64_t v19 = type metadata accessor for CrossServiceAssociationMessageContents();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v102 = (uint64_t)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  unint64_t v24 = (char *)&v97 - v23;
  __chkstk_darwin(v22);
  uint64_t v103 = (void (*)(char *, char *, uint64_t))((char *)&v97 - v25);
  uint64_t v26 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v26 - 8);
  uint64_t v115 = (char *)&v97 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000B86C0();
  uint64_t v113 = *(void *)(v28 - 8);
  BOOL v114 = (void (*)(void, void, void))v28;
  __chkstk_darwin(v28);
  unint64_t v112 = (char *)&v97 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_1000BB6C0();
  uint64_t v117 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  unint64_t v116 = (char *)&v97 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000B86D0();
  if (v32 >> 60 == 15)
  {
    sub_100018190();
    uint64_t v33 = (void *)sub_1000BBDD0();
    sub_10001295C(&qword_1000EC5C8);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1000BF8A0;
    sub_1000B86E0();
    sub_1000BB5C0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v120);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    uint64_t v35 = sub_1000BB200();
    uint64_t v37 = v36;
    sub_1000184DC((uint64_t)v10, &qword_1000EC678);
    *(void *)(v34 + 56) = &type metadata for String;
    *(void *)(v34 + 64) = sub_10001824C();
    *(void *)(v34 + 32) = v35;
    *(void *)(v34 + 40) = v37;
    sub_1000BBBE0();
    sub_1000B8770();

    swift_bridgeObjectRelease();
    sub_10009C2C0();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    uint64_t v98 = v31;
    unint64_t v99 = v32;
    Class isa = sub_1000B82B0().super.isa;
    id v40 = [(objc_class *)isa _imOptionallyDecompressData];

    uint64_t v120 = sub_1000B82D0();
    unint64_t v42 = v41;

    unint64_t v118 = v42;
    uint64_t v43 = v12;
    switch(v42 >> 62)
    {
      case 1uLL:
        LODWORD(v44) = HIDWORD(v120) - v120;
        if (__OFSUB__(HIDWORD(v120), v120))
        {
          __break(1u);
LABEL_18:
          __break(1u);
          JUMPOUT(0x10009BE64);
        }
        uint64_t v44 = (int)v44;
LABEL_8:
        if (v44 <= 0)
        {
LABEL_12:
          uint64_t v78 = v112;
          uint64_t v77 = v113;
          unint64_t v79 = v114;
          (*(void (**)(char *, void, void))(v113 + 104))(v112, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v114);
          sub_1000B86B0();
          (*(void (**)(char *, void (*)(void, void, void)))(v77 + 8))(v78, v79);
          char v80 = v116;
          sub_1000BB6B0();
          sub_100018190();
          uint64_t v81 = (void *)sub_1000BBDD0();
          sub_10001295C(&qword_1000EC5C8);
          uint64_t v82 = swift_allocObject();
          *(_OWORD *)(v82 + 16) = xmmword_1000BF8A0;
          uint64_t v83 = v117;
          BOOL v114 = *(void (**)(void, void, void))(v117 + 16);
          uint64_t v84 = (uint64_t)v115;
          uint64_t v85 = v119;
          v114(v115, v80, v119);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56))(v84, 0, 1, v85);
          uint64_t v86 = sub_1000BB200();
          uint64_t v88 = v87;
          sub_1000184DC(v84, &qword_1000EC630);
          *(void *)(v82 + 56) = &type metadata for String;
          *(void *)(v82 + 64) = sub_10001824C();
          *(void *)(v82 + 32) = v86;
          *(void *)(v82 + 40) = v88;
          sub_1000BBBE0();
          sub_1000B8770();

          swift_bridgeObjectRelease();
          sub_10009CBF0((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
          swift_allocError();
          v114(v89, v80, v85);
          swift_willThrow();
          sub_1000180CC(v98, v99);
          sub_100018074(v120, v118);
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v80, v85);
        }
        else
        {
          sub_1000B81C0();
          swift_allocObject();
          uint64_t v48 = sub_1000B81B0();
          sub_10009CBF0(&qword_1000EDB98, (void (*)(uint64_t))type metadata accessor for CrossServiceAssociationMessageContents);
          unint64_t v49 = v111;
          sub_1000B81A0();
          if (v49)
          {
            unint64_t v121 = v49;
            swift_errorRetain();
            sub_10001295C(&qword_1000EC648);
            id v50 = v109;
            uint64_t v51 = v110;
            if (swift_dynamicCast())
            {
              swift_errorRelease();
              id v52 = v107;
              uint64_t v53 = v108;
              (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v107, v50, v51);
              unint64_t v109 = (char *)sub_100018190();
              uint64_t v54 = (void *)sub_1000BBDD0();
              uint64_t v55 = sub_10001295C(&qword_1000EC5C8);
              uint64_t v111 = v48;
              uint64_t v106 = v55;
              uint64_t v56 = swift_allocObject();
              long long v105 = xmmword_1000BF8A0;
              *(_OWORD *)(v56 + 16) = xmmword_1000BF8A0;
              uint64_t v57 = v51;
              uint64_t v103 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
              uint64_t v58 = (uint64_t)v100;
              unint64_t v59 = v52;
              v103(v100, v52, v57);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v58, 0, 1, v57);
              uint64_t v60 = sub_1000BB200();
              uint64_t v62 = v61;
              sub_1000184DC(v58, &qword_1000EC628);
              *(void *)(v56 + 56) = &type metadata for String;
              uint64_t v104 = (char *)sub_10001824C();
              *(void *)(v56 + 64) = v104;
              *(void *)(v56 + 32) = v60;
              *(void *)(v56 + 40) = v62;
              sub_1000BBBE0();
              sub_1000B8770();

              swift_bridgeObjectRelease();
              long long v64 = v112;
              uint64_t v63 = v113;
              int v65 = v114;
              (*(void (**)(char *, void, void))(v113 + 104))(v112, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v114);
              sub_1000B86B0();
              (*(void (**)(char *, void (*)(void, void, void)))(v63 + 8))(v64, v65);
              v103(v101, v59, v57);
              uint64_t v66 = v116;
              sub_1000BB6A0();
              uint64_t v67 = (void *)sub_1000BBDD0();
              uint64_t v68 = swift_allocObject();
              *(_OWORD *)(v68 + 16) = v105;
              uint64_t v69 = v117;
              BOOL v114 = *(void (**)(void, void, void))(v117 + 16);
              uint64_t v70 = (uint64_t)v115;
              uint64_t v71 = v119;
              v114(v115, v66, v119);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v70, 0, 1, v71);
              uint64_t v72 = sub_1000BB200();
              uint64_t v74 = v73;
              sub_1000184DC(v70, &qword_1000EC630);
              id v75 = v104;
              *(void *)(v68 + 56) = &type metadata for String;
              *(void *)(v68 + 64) = v75;
              *(void *)(v68 + 32) = v72;
              *(void *)(v68 + 40) = v74;
              sub_1000BBBE0();
              sub_1000B8770();

              swift_bridgeObjectRelease();
              sub_10009CBF0((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
              swift_allocError();
              v114(v76, v66, v71);
              swift_willThrow();
              sub_1000180CC(v98, v99);
              sub_100018074(v120, v118);
              swift_release();
              (*(void (**)(char *, uint64_t))(v69 + 8))(v66, v71);
              (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v110);
            }
            else
            {
              swift_errorRelease();
              sub_100018190();
              unint64_t v92 = (void *)sub_1000BBDD0();
              sub_10001295C(&qword_1000EC5C8);
              uint64_t v93 = swift_allocObject();
              *(_OWORD *)(v93 + 16) = xmmword_1000BF8A0;
              unint64_t v121 = v49;
              uint64_t v94 = sub_1000BB200();
              uint64_t v96 = v95;
              *(void *)(v93 + 56) = &type metadata for String;
              *(void *)(v93 + 64) = sub_10001824C();
              *(void *)(v93 + 32) = v94;
              *(void *)(v93 + 40) = v96;
              sub_1000BBBE0();
              sub_1000B8770();

              swift_bridgeObjectRelease();
              swift_getErrorValue();
              swift_getDynamicType();
              unint64_t v121 = 0;
              unint64_t v122 = 0xE000000000000000;
              sub_1000BBED0(22);
              swift_bridgeObjectRelease();
              unint64_t v121 = 0xD000000000000014;
              unint64_t v122 = 0x80000001000C9380;
              v123._countAndFlagsBits = sub_1000BC2B0();
              sub_1000BB9A0(v123);
              swift_bridgeObjectRelease();
              sub_10009CBF0((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
              swift_allocError();
              sub_1000BB6B0();
              swift_willThrow();
              sub_1000180CC(v98, v99);
              sub_100018074(v120, v118);
              swift_release();
            }
            uint64_t result = swift_errorRelease();
          }
          else
          {
            uint64_t v90 = v103;
            sub_10009C314((uint64_t)v24, (uint64_t)v103);
            sub_1000B86E0();
            uint64_t v91 = v102;
            sub_10009C378((uint64_t)v90, v102);
            (*(void (**)(void, uint64_t, uint64_t))(v43 + 32))(v105, v91, v11);
            sub_1000BB210();
            sub_10009C3DC((uint64_t)v90);
            sub_1000180CC(v98, v99);
            sub_100018074(v120, v118);
            uint64_t result = swift_release();
          }
        }
        break;
      case 2uLL:
        uint64_t v46 = *(void *)(v120 + 16);
        uint64_t v45 = *(void *)(v120 + 24);
        BOOL v47 = __OFSUB__(v45, v46);
        uint64_t v44 = v45 - v46;
        if (!v47) {
          goto LABEL_8;
        }
        goto LABEL_18;
      case 3uLL:
        goto LABEL_12;
      default:
        uint64_t v44 = BYTE6(v118);
        goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_10009BE74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_1000B8380();
  uint64_t v14 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001295C(&qword_1000EDC30);
  uint64_t v16 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CrossServiceAssociationMessageContents();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_10009CB9C();
  sub_1000BC270();
  if (!v2)
  {
    sub_10009CBF0(&qword_1000EDC40, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_1000BC070();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_10009C314((uint64_t)v11, v15);
  }
  return sub_100015C54((uint64_t)a1);
}

uint64_t sub_10009C0F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000B8700();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B81C0();
  swift_allocObject();
  sub_1000B81B0();
  sub_10009CBF0(&qword_1000EC620, (void (*)(uint64_t))&type metadata accessor for TopLevelDictionary);
  sub_1000B81A0();
  uint64_t result = swift_release();
  if (!v1)
  {
    sub_10009AE74(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

uint64_t type metadata accessor for CrossServiceAssociationMessageContents()
{
  uint64_t result = qword_1000EDBF8;
  if (!qword_1000EDBF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_10009C2C0()
{
  unint64_t result = qword_1000EDB90;
  if (!qword_1000EDB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDB90);
  }
  return result;
}

uint64_t sub_10009C314(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CrossServiceAssociationMessageContents();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009C378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CrossServiceAssociationMessageContents();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009C3DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CrossServiceAssociationMessageContents();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for CrossServiceAssociationMessageUnpacker.EncryptedMessageMissingData()
{
  return &type metadata for CrossServiceAssociationMessageUnpacker.EncryptedMessageMissingData;
}

uint64_t sub_10009C448(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B8380();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_10009C4B4(uint64_t a1)
{
  uint64_t v2 = sub_1000B8380();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10009C518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B8380();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10009C57C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B8380();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10009C5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B8380();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10009C644(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B8380();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10009C6A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009C6BC);
}

uint64_t sub_10009C6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B8380();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10009C728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009C73C);
}

uint64_t sub_10009C73C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B8380();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_10009C7AC()
{
  uint64_t result = sub_1000B8380();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

Swift::Int sub_10009C838()
{
  return sub_1000BC250();
}

uint64_t sub_10009C880()
{
  return sub_1000BB990();
}

Swift::Int sub_10009C88C()
{
  return sub_1000BC250();
}

uint64_t sub_10009C8D0@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_1000E1810;
  v7._object = v3;
  Swift::Int v5 = sub_1000BBFA0(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_10009C924(void *a1@<X8>)
{
  *a1 = 29269;
  a1[1] = 0xE200000000000000;
}

uint64_t sub_10009C934()
{
  return 29269;
}

uint64_t sub_10009C940@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  v8._countAndFlagsBits = a1;
  v5._rawValue = &off_1000E1848;
  v8._object = a2;
  Swift::Int v6 = sub_1000BBFA0(v5, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

uint64_t sub_10009C998(uint64_t a1)
{
  unint64_t v2 = sub_10009CB9C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10009C9D4(uint64_t a1)
{
  unint64_t v2 = sub_10009CB9C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10009CA10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10009BE74(a1, a2);
}

uint64_t sub_10009CA28(void *a1)
{
  uint64_t v2 = sub_10001295C(&qword_1000EDC48);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::OpaquePointer v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_10009CB9C();
  sub_1000BC280();
  sub_1000B8380();
  sub_10009CBF0(&qword_1000EDC50, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_1000BC160();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_10009CB9C()
{
  unint64_t result = qword_1000EDC38;
  if (!qword_1000EDC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDC38);
  }
  return result;
}

uint64_t sub_10009CBF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CrossServiceAssociationMessageContents.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10009CCD4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CrossServiceAssociationMessageContents.CodingKeys()
{
  return &type metadata for CrossServiceAssociationMessageContents.CodingKeys;
}

unint64_t sub_10009CD10()
{
  unint64_t result = qword_1000EDC58;
  if (!qword_1000EDC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDC58);
  }
  return result;
}

unint64_t sub_10009CD68()
{
  unint64_t result = qword_1000EDC60;
  if (!qword_1000EDC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDC60);
  }
  return result;
}

unint64_t sub_10009CDC0()
{
  unint64_t result = qword_1000EDC68;
  if (!qword_1000EDC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDC68);
  }
  return result;
}

char *sub_10009CE14()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_10001295C(&qword_1000EDC70);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  Swift::Int v6 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v80 - v8;
  __chkstk_darwin(v7);
  uint64_t v107 = (uint64_t)&v80 - v10;
  uint64_t v11 = sub_10001295C(&qword_1000EDC78);
  __chkstk_darwin(v11 - 8);
  unint64_t v109 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1000B9F00();
  uint64_t v13 = *(void *)(v108 - 8);
  uint64_t v14 = __chkstk_darwin(v108);
  uint64_t v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v80 - v17;
  uint64_t v19 = (uint64_t *)(v0 + *(int *)(type metadata accessor for MessageDictionary() + 116));
  unint64_t v20 = v19[1];
  if (v20 >> 60 == 15) {
    return (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v89 = v18;
  uint64_t v103 = v16;
  uint64_t v93 = v13;
  uint64_t v91 = v9;
  uint64_t v21 = *v19;
  sub_100017F4C(*v19, v20);
  Class isa = sub_1000B82B0().super.isa;
  id v23 = [(objc_class *)isa _imOptionallyDecompressData];

  uint64_t v24 = sub_1000B82D0();
  unint64_t v26 = v25;

  sub_10001295C(&qword_1000EC6B8);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1000C0CE0;
  uint64_t v28 = sub_10001DAE4(0, &qword_1000EDC80);
  *(void *)(v27 + 56) = sub_10001295C(&qword_1000EDC88);
  *(void *)(v27 + 32) = v28;
  uint64_t v29 = sub_10001DAE4(0, &qword_1000EC6C8);
  *(void *)(v27 + 88) = sub_10001295C(&qword_1000EC6D0);
  *(void *)(v27 + 64) = v29;
  uint64_t v30 = sub_10001DAE4(0, (unint64_t *)&qword_1000EC528);
  *(void *)(v27 + 120) = sub_10001295C(&qword_1000EC6E8);
  *(void *)(v27 + 96) = v30;
  uint64_t v31 = sub_10001DAE4(0, (unint64_t *)&qword_1000EC6B0);
  *(void *)(v27 + 152) = sub_10001295C(&qword_1000EC6C0);
  *(void *)(v27 + 128) = v31;
  uint64_t v32 = sub_10001DAE4(0, &qword_1000EDC90);
  *(void *)(v27 + 184) = sub_10001295C(&qword_1000EDC98);
  *(void *)(v27 + 160) = v32;
  uint64_t v33 = sub_10001DAE4(0, &qword_1000EC718);
  *(void *)(v27 + 216) = sub_10001295C(&qword_1000EC720);
  *(void *)(v27 + 192) = v33;
  uint64_t v34 = sub_10001DAE4(0, &qword_1000EC738);
  *(void *)(v27 + 248) = sub_10001295C(&qword_1000EC740);
  *(void *)(v27 + 224) = v34;
  uint64_t v35 = sub_10001DAE4(0, &qword_1000EDCA0);
  *(void *)(v27 + 280) = sub_10001295C(&qword_1000EDCA8);
  *(void *)(v27 + 256) = v35;
  sub_10001DAE4(0, &qword_1000EC748);
  uint64_t v36 = (void *)sub_1000BBC70();
  *(void *)&v119[0] = 0;
  sub_1000BBB50();
  uint64_t v104 = v24;
  unint64_t v105 = v26;
  uint64_t v106 = v21;
  if (!*(void *)&v119[0])
  {
    sub_1000BB6C0();
    sub_100017E10();
    uint64_t v55 = swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();

    goto LABEL_27;
  }
  id v86 = v36;
  uint64_t v90 = v6;
  uint64_t v37 = self;
  Class v38 = sub_1000BBB30().super.isa;
  swift_bridgeObjectRelease();
  Class v39 = sub_1000B82B0().super.isa;
  *(void *)&v119[0] = 0;
  id v40 = [v37 _strictlyUnarchivedObjectOfClasses:v38 fromData:v39 error:v119];

  id v41 = *(id *)&v119[0];
  if (!v40)
  {
    uint64_t v70 = v41;
    uint64_t v55 = sub_1000B81D0();

    swift_willThrow();
    goto LABEL_27;
  }
  sub_1000BBE80();
  swift_unknownObjectRelease();
  sub_10001DA70((uint64_t)v121, (uint64_t)v119);
  sub_10001295C(&qword_1000EDCB0);
  if (!swift_dynamicCast())
  {
    sub_1000BB6C0();
    sub_100017E10();
    uint64_t v55 = swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();

    sub_100015C54((uint64_t)v121);
    goto LABEL_27;
  }
  uint64_t v42 = v110;
  uint64_t v92 = *(void *)(v110 + 16);
  if (!v92)
  {
    uint64_t v76 = (char *)&_swiftEmptyArrayStorage;
LABEL_32:
    uint64_t v78 = v104;
    sub_1000180CC(v21, v20);

    sub_100018074(v78, v26);
    sub_100015C54((uint64_t)v121);
    swift_bridgeObjectRelease();
    return v76;
  }
  uint64_t v88 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56);
  uint64_t v81 = (void (**)(char *, uint64_t, uint64_t))(v93 + 32);
  uint64_t v82 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 48);
  swift_bridgeObjectRetain();
  uint64_t v43 = 0;
  uint64_t v87 = (char *)&_swiftEmptyArrayStorage;
  unint64_t v84 = v20;
  uint64_t v85 = (char *)&type metadata for Any + 8;
  uint64_t v44 = v108;
  uint64_t v45 = (uint64_t)v109;
  uint64_t v83 = v42;
  while (1)
  {
    uint64_t v46 = *(void *)(v42 + 8 * v43 + 32);
    if (!v46)
    {
      (*v88)(v45, 1, 1, v44);
      goto LABEL_8;
    }
    uint64_t v101 = v43;
    uint64_t v47 = v46;
    sub_1000B80C0();
    swift_allocObject();
    swift_bridgeObjectRetain_n();
    sub_1000B80B0();
    uint64_t v48 = self;
    Class v49 = sub_1000BB850().super.isa;
    uint64_t v102 = v47;
    swift_bridgeObjectRelease();
    *(void *)&long long v110 = 0;
    id v50 = [v48 dataWithJSONObject:v49 options:0 error:&v110];

    id v51 = (id)v110;
    if (!v50)
    {
      unint64_t v79 = v51;
      swift_release();
      uint64_t v55 = sub_1000B81D0();

      swift_willThrow();
LABEL_35:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_37;
    }
    uint64_t v52 = sub_1000B82D0();
    unint64_t v54 = v53;

    sub_10009DBB4();
    sub_1000B80A0();
    uint64_t v55 = v2;
    if (v2)
    {
      swift_release();
      sub_100018074(v52, v54);
      goto LABEL_35;
    }
    swift_release();
    sub_100018074(v52, v54);
    long long v116 = v119[6];
    long long v117 = v119[7];
    v118[0] = v120[0];
    *(_OWORD *)((char *)v118 + 10) = *(_OWORD *)((char *)v120 + 10);
    long long v112 = v119[2];
    long long v113 = v119[3];
    long long v114 = v119[4];
    long long v115 = v119[5];
    long long v110 = v119[0];
    long long v111 = v119[1];
    if ((WORD4(v120[1]) & 0xFF00) == 0x200)
    {
      uint64_t v94 = 0;
      uint64_t v56 = sub_1000B9EE0();
      uint64_t v57 = v107;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v107, 1, 1, v56);
    }
    else
    {
      uint64_t v58 = (uint64_t)v91;
      sub_1000B9ED0();
      uint64_t v94 = 0;
      uint64_t v59 = sub_1000B9EE0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 0, 1, v59);
      uint64_t v60 = v58;
      uint64_t v57 = v107;
      sub_10009DC70(v60, v107);
    }
    uint64_t v100 = v110;
    int v99 = BYTE8(v110);
    uint64_t v97 = v112;
    uint64_t v98 = v111;
    uint64_t v95 = v114;
    uint64_t v96 = v113;
    sub_10009DC08(v57, (uint64_t)v90);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v45 = (uint64_t)v109;
    uint64_t v61 = v94;
    sub_1000B9EF0();
    uint64_t v2 = v61;
    if (v61) {
      break;
    }
    sub_1000611A8((uint64_t)&v110);
    sub_1000184DC(v57, &qword_1000EDC70);
    uint64_t v44 = v108;
    (*v88)(v45, 0, 1, v108);
    swift_bridgeObjectRelease();
    int v62 = (*v82)(v45, 1, v44);
    unint64_t v20 = v84;
    unint64_t v26 = v105;
    uint64_t v21 = v106;
    if (v62 != 1)
    {
      uint64_t v63 = v45;
      long long v64 = *v81;
      int v65 = v89;
      (*v81)(v89, v63, v44);
      v64(v103, (uint64_t)v65, v44);
      unint64_t v66 = (unint64_t)v87;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v66 = sub_10003EA58(0, *(void *)(v66 + 16) + 1, 1, v66);
      }
      unint64_t v68 = *(void *)(v66 + 16);
      unint64_t v67 = *(void *)(v66 + 24);
      uint64_t v87 = (char *)v66;
      uint64_t v43 = v101;
      if (v68 >= v67 >> 1) {
        uint64_t v87 = (char *)sub_10003EA58(v67 > 1, v68 + 1, 1, (unint64_t)v87);
      }
      uint64_t v69 = v87;
      *((void *)v87 + 2) = v68 + 1;
      uint64_t v44 = v108;
      v64(&v69[((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80))+ *(void *)(v93 + 72) * v68], (uint64_t)v103, v108);
      uint64_t v45 = (uint64_t)v109;
      uint64_t v42 = v83;
      goto LABEL_9;
    }
    uint64_t v42 = v83;
    uint64_t v43 = v101;
LABEL_8:
    sub_1000184DC(v45, &qword_1000EDC78);
LABEL_9:
    if (v92 == ++v43)
    {
      swift_bridgeObjectRelease();
      uint64_t v76 = v87;
      goto LABEL_32;
    }
  }
  sub_1000611A8((uint64_t)&v110);
  sub_1000184DC(v57, &qword_1000EDC70);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v55 = v61;
  unint64_t v20 = v84;
LABEL_37:
  sub_100015C54((uint64_t)v121);
  swift_bridgeObjectRelease();
LABEL_27:
  sub_10001DAE4(0, (unint64_t *)&qword_1000EC5B8);
  uint64_t v71 = (void *)sub_1000BBD40();
  sub_10001295C(&qword_1000EC5C8);
  uint64_t v72 = swift_allocObject();
  *(_OWORD *)(v72 + 16) = xmmword_1000BF8A0;
  *(void *)&v119[0] = v55;
  sub_10001295C(&qword_1000EC648);
  uint64_t v73 = sub_1000BB200();
  uint64_t v75 = v74;
  *(void *)(v72 + 56) = &type metadata for String;
  *(void *)(v72 + 64) = sub_10001824C();
  *(void *)(v72 + 32) = v73;
  *(void *)(v72 + 40) = v75;
  sub_1000BBBE0();
  sub_1000B8770();

  swift_bridgeObjectRelease();
  sub_1000180CC(v106, v20);
  sub_100018074(v104, v105);
  swift_errorRelease();
  return (char *)&_swiftEmptyArrayStorage;
}

unint64_t sub_10009DBB4()
{
  unint64_t result = qword_1000EDCB8;
  if (!qword_1000EDCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDCB8);
  }
  return result;
}

uint64_t sub_10009DC08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EDC70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009DC70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EDC70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for OrderPreviewUnpacker()
{
  return &type metadata for OrderPreviewUnpacker;
}

uint64_t sub_10009DCE8()
{
  return sub_10009F888(&qword_1000EDCC0, (void (*)(uint64_t))&type metadata accessor for OrderPreview);
}

uint64_t sub_10009DD30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v144 = a2;
  uint64_t v141 = a1;
  uint64_t v119 = a3;
  uint64_t v3 = sub_10001295C(&qword_1000EDCC8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unint64_t v118 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v122 = (char *)&v117 - v6;
  uint64_t v121 = sub_1000B9050();
  uint64_t v124 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v125 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001295C(&qword_1000EC7F8);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  long long v117 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v120 = (char *)&v117 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  Swift::String v123 = (char *)&v117 - v14;
  __chkstk_darwin(v13);
  unint64_t v134 = (char *)&v117 - v15;
  uint64_t v131 = sub_10001295C(&qword_1000EDCD0);
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v127 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10001295C(&qword_1000EDCD8);
  __chkstk_darwin(v17 - 8);
  uint64_t v133 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10001295C(&qword_1000EC660);
  __chkstk_darwin(v19 - 8);
  uint64_t v129 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10001295C(&qword_1000EDCE0);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v126 = (uint64_t)&v117 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v128 = (char *)&v117 - v25;
  __chkstk_darwin(v24);
  uint64_t v132 = (uint64_t)&v117 - v26;
  uint64_t v142 = sub_1000BB3B0();
  uint64_t v152 = *(void **)(v142 - 8);
  uint64_t v27 = __chkstk_darwin(v142);
  unint64_t v143 = (char *)&v117 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v117 - v29;
  uint64_t v31 = sub_1000BB3E0();
  uint64_t v139 = v31;
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v117 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v136 = sub_1000BBBE0();
  uint64_t v140 = (uint64_t (*)(char *, uint64_t))sub_10001DAE4(0, (unint64_t *)&qword_1000EC5B8);
  uint64_t v35 = (void *)sub_1000BBCF0();
  uint64_t v137 = sub_10001295C(&qword_1000EC5C8);
  uint64_t v36 = swift_allocObject();
  long long v135 = xmmword_1000BF8A0;
  *(_OWORD *)(v36 + 16) = xmmword_1000BF8A0;
  sub_1000BB3A0();
  uint64_t v37 = sub_1000BB3C0();
  unint64_t v39 = v38;
  unint64_t v138 = *(void (**)(char *, uint64_t))(v32 + 8);
  v138(v34, v31);
  uint64_t v148 = (void *)v37;
  unint64_t v149 = v39;
  uint64_t v40 = sub_1000BB200();
  uint64_t v42 = v41;
  swift_bridgeObjectRelease();
  *(void *)(v36 + 56) = &type metadata for String;
  unint64_t v43 = sub_10001824C();
  *(void *)(v36 + 64) = v43;
  *(void *)(v36 + 32) = v40;
  *(void *)(v36 + 40) = v42;
  sub_1000B8780();

  swift_bridgeObjectRelease();
  int v136 = sub_1000BBBC0();
  uint64_t v44 = (void *)sub_1000BBCF0();
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = v135;
  sub_1000B9080();
  sub_1000BB3A0();
  uint64_t v46 = (uint64_t (*)(char *, uint64_t))v152[1];
  uint64_t v47 = v30;
  uint64_t v48 = v142;
  ++v152;
  uint64_t v140 = v46;
  v46(v47, v142);
  uint64_t v49 = sub_1000BB3C0();
  unint64_t v51 = v50;
  v138(v34, v139);
  uint64_t v148 = (void *)v49;
  unint64_t v149 = v51;
  uint64_t v52 = sub_1000BB200();
  uint64_t v54 = v53;
  swift_bridgeObjectRelease();
  *(void *)(v45 + 56) = &type metadata for String;
  *(void *)(v45 + 64) = v43;
  uint64_t v55 = v143;
  *(void *)(v45 + 32) = v52;
  *(void *)(v45 + 40) = v54;
  sub_1000B8780();

  swift_bridgeObjectRelease();
  sub_1000B9080();
  uint64_t v146 = v141;
  unint64_t v147 = v55;
  sub_10001DAE4(0, &qword_1000EDCE8);
  uint64_t v56 = v145;
  sub_1000BB380();
  if (v56) {
    return v140(v55, v48);
  }
  uint64_t v58 = v129;
  uint64_t v59 = v48;
  uint64_t v60 = (uint64_t)v128;
  uint64_t v61 = v130;
  uint64_t v62 = v131;
  uint64_t v63 = v148;
  v140(v55, v59);
  uint64_t v152 = v63;
  id v64 = [v63 headerImage];
  int v65 = v134;
  if (!v64) {
    goto LABEL_7;
  }
  unint64_t v66 = v64;
  id v67 = [v64 data];
  if (!v67)
  {

LABEL_7:
    uint64_t v92 = v132;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v132, 1, 1, v62);
    goto LABEL_8;
  }
  unint64_t v68 = v67;
  uint64_t v69 = sub_1000B82D0();
  unint64_t v71 = v70;

  uint64_t v72 = v60 + *(int *)(v62 + 48);
  unint64_t v150 = &type metadata for Data;
  unint64_t v151 = &protocol witness table for Data;
  uint64_t v148 = (void *)v69;
  unint64_t v149 = v71;
  uint64_t v73 = sub_1000BB440();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v58, 1, 1, v73);
  sub_100017F4C(v69, v71);
  sub_1000BB450();
  sub_10009EEBC((uint64_t)[v66 kind], v72);

  sub_100018074(v69, v71);
  uint64_t v91 = v131;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v60, 0, 1, v131);
  uint64_t v92 = v132;
  sub_10001836C(v60, v132, &qword_1000EDCE0);
  int v65 = v134;
  uint64_t v62 = v91;
LABEL_8:
  uint64_t v74 = (uint64_t)v127;
  uint64_t v75 = v126;
  uint64_t v76 = v133;
  sub_10009F394(v92, v126);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v75, 1, v62) == 1)
  {
    uint64_t v77 = sub_1000B9070();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v76, 1, 1, v77);
  }
  else
  {
    sub_10001836C(v75, v74, &qword_1000EDCD0);
    sub_1000B9060();
    sub_1000184DC(v74, &qword_1000EDCD0);
    uint64_t v78 = sub_1000B9070();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v76, 0, 1, v78);
  }
  id v79 = v152;
  id v80 = [v152 backgroundColor];
  if (v80)
  {
    id v81 = v80;
    sub_1000BB400();
    uint64_t v83 = sub_1000BB410();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v65, 0, 1, v83);
  }
  else
  {
    uint64_t v82 = sub_1000BB410();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v65, 1, 1, v82);
  }
  unint64_t v84 = v123;
  id v85 = [v79 primaryText];
  id v86 = [v85 text];

  sub_1000BB900();
  id v87 = [v79 primaryText];
  id v88 = [v87 overrideColor];

  if (v88)
  {
    id v89 = v88;
    sub_1000BB400();
    uint64_t v93 = sub_1000BB410();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v84, 0, 1, v93);
  }
  else
  {
    uint64_t v90 = sub_1000BB410();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v84, 1, 1, v90);
  }
  sub_1000B9040();
  id v94 = [v79 secondaryText];
  if (v94)
  {
    uint64_t v95 = v94;
    id v96 = [v94 text];
    uint64_t v97 = (void *)sub_1000BB900();

    id v98 = [v95 overrideColor];
    if (v98)
    {
      uint64_t v152 = v97;
      id v99 = v98;
      uint64_t v100 = v120;
      sub_1000BB400();
      uint64_t v104 = sub_1000BB410();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v100, 0, 1, v104);
    }
    else
    {
      uint64_t v103 = sub_1000BB410();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v120, 1, 1, v103);
    }
    uint64_t v105 = v124;
    uint64_t v106 = v122;
    sub_1000B9040();
    uint64_t v101 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v105 + 56);
    uint64_t v102 = v121;
    v101(v106, 0, 1, v121);
  }
  else
  {
    uint64_t v101 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v124 + 56);
    uint64_t v102 = v121;
    v101(v122, 1, 1, v121);
  }
  id v107 = [v79 tertiaryText];
  if (v107)
  {
    uint64_t v108 = v107;
    id v109 = [v107 text];
    long long v110 = (void *)sub_1000BB900();

    id v111 = [v108 overrideColor];
    if (v111)
    {
      id v112 = v111;
      long long v113 = v117;
      sub_1000BB400();
      uint64_t v152 = v110;
      uint64_t v115 = sub_1000BB410();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56))(v113, 0, 1, v115);
    }
    else
    {
      uint64_t v152 = v110;
      uint64_t v114 = sub_1000BB410();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v117, 1, 1, v114);
    }
    long long v116 = v118;
    sub_1000B9040();
    v101(v116, 0, 1, v121);
  }
  else
  {
    v101(v118, 1, 1, v102);
  }
  sub_1000B9090();

  return sub_1000184DC(v132, &qword_1000EDCE0);
}

uint64_t sub_10009EEBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 == 1)
  {
    uint64_t v3 = (unsigned int *)&enum case for OrderPreviewImageType.merchantLogo(_:);
    goto LABEL_5;
  }
  if (!a1)
  {
    uint64_t v3 = (unsigned int *)&enum case for OrderPreviewImageType.productPhoto(_:);
LABEL_5:
    uint64_t v4 = *v3;
    uint64_t v5 = sub_1000BAC00();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  }
  sub_1000BBBE0();
  sub_10001DAE4(0, (unint64_t *)&qword_1000EC5B8);
  uint64_t v7 = (void *)sub_1000BBCF0();
  sub_10001295C(&qword_1000EC5C8);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1000BF8A0;
  type metadata accessor for BDOrderPreviewMetadataImageKind(0);
  uint64_t v9 = sub_1000BB960();
  uint64_t v11 = v10;
  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 64) = sub_10001824C();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v11;
  sub_1000B8780();

  swift_bridgeObjectRelease();
  uint64_t v12 = sub_1000BB960();
  uint64_t v14 = v13;
  sub_10009F834();
  swift_allocError();
  *uint64_t v15 = v12;
  v15[1] = v14;
  sub_1000BB6C0();
  sub_10009F888((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
  swift_allocError();
  sub_1000BB6D0();
  return swift_willThrow();
}

uint64_t sub_10009F0DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10009DD30(a1, a2, a3);
}

uint64_t sub_10009F0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000BB3E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [self defaultManager];
  sub_1000BB3A0();
  sub_1000BB3C0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  NSString v9 = sub_1000BB8D0();
  swift_bridgeObjectRelease();
  LOBYTE(v4) = [v8 fileExistsAtPath:v9 isDirectory:0];

  if (v4)
  {
    __chkstk_darwin(v10);
    *(&v12 - 2) = a2;
    *(&v12 - 1) = a1;
    sub_10001DAE4(0, &qword_1000EDCE8);
    return sub_1000BB380();
  }
  else
  {
    sub_1000BB6C0();
    sub_10009F888((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
}

uint64_t sub_10009F378()
{
  return sub_10009F0F4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10009F394(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EDCE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009F3FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v35 = a3;
  uint64_t v4 = sub_10001295C(&qword_1000EC5E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v36 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000B8240();
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  __chkstk_darwin(v6);
  uint64_t v40 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000BB3E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v35 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v35 - v16;
  id v18 = [self defaultManager];
  uint64_t v39 = a1;
  sub_1000BB3A0();
  sub_1000BB3C0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v43 = v8;
  v19(v17, v8);
  NSString v20 = sub_1000BB8D0();
  swift_bridgeObjectRelease();
  unsigned __int8 v21 = [v18 isWritableFileAtPath:v20];

  if (v21)
  {
    uint64_t v23 = v37;
    uint64_t v22 = v38;
    sub_1000BB3A0();
    uint64_t v24 = v40;
    sub_1000BB3D0();
    v19(v15, v43);
    uint64_t v25 = v42;
    uint64_t v26 = sub_1000B8260();
    if (v25)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v24, v22);
    }
    else
    {
      uint64_t v29 = *(void (**)(char *, uint64_t))(v23 + 8);
      uint64_t v41 = v27;
      uint64_t v42 = v26;
      v29(v24, v22);
      sub_1000BB3A0();
      uint64_t v30 = (uint64_t)v36;
      sub_1000BB3D0();
      v19(v12, v43);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v30, 0, 1, v22);
      id v31 = objc_allocWithZone((Class)BDOrderPreviewMetadata);
      unint64_t v33 = v41;
      uint64_t v32 = v42;
      id v34 = sub_10009F8EC(v42, v41, v30);
      uint64_t result = sub_100018074(v32, v33);
      *uint64_t v35 = v34;
    }
  }
  else
  {
    sub_1000BB6C0();
    sub_10009F888((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_10009F834()
{
  unint64_t result = qword_1000EDCF0;
  if (!qword_1000EDCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDCF0);
  }
  return result;
}

uint64_t sub_10009F888(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10009F8D0@<X0>(void *a1@<X8>)
{
  return sub_10009F3FC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

id sub_10009F8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v6.super.Class isa = sub_1000B82B0().super.isa;
  uint64_t v7 = sub_1000B8240();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a3, 1, v7) != 1)
  {
    sub_1000B81F0(v9);
    uint64_t v10 = v11;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a3, v7);
  }
  id v16 = 0;
  id v12 = [v4 initWithOrderData:v6.super.isa workingDirectory:v10 error:&v16];

  if (v12)
  {
    id v13 = v16;
  }
  else
  {
    id v14 = v16;
    sub_1000B81D0();

    swift_willThrow();
  }
  return v12;
}

ValueMetadata *_s12MappingErrorOMa()
{
  return &_s12MappingErrorON;
}

uint64_t sub_10009FA60(void *a1)
{
  if (*a1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000B8FE0();
    return sub_10009FBB0((uint64_t)a1);
  }
  else
  {
    sub_10009FBB0((uint64_t)a1);
    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
}

uint64_t sub_10009FBB0(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for PreviewImageUnpacker()
{
  return &type metadata for PreviewImageUnpacker;
}

uint64_t sub_10009FC0C()
{
  return sub_1000A0F20(&qword_1000EDCF8, (void (*)(uint64_t))&type metadata accessor for PreviewImage);
}

uint64_t sub_10009FC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v125 = a2;
  uint64_t v114 = a1;
  uint64_t v110 = a3;
  uint64_t v103 = sub_1000B9CE0();
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  id v107 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001295C(&qword_1000EDD00);
  __chkstk_darwin(v4 - 8);
  uint64_t v120 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_1000B9F80();
  uint64_t v113 = *(void *)(v117 - 8);
  uint64_t v6 = __chkstk_darwin(v117);
  id v112 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v111 = (char *)&v95 - v8;
  uint64_t v9 = sub_10001295C(&qword_1000EDD08);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  id v109 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v100 = (char *)&v95 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v106 = (char *)&v95 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v95 - v16;
  uint64_t v18 = sub_10001295C(&qword_1000EC660);
  __chkstk_darwin(v18 - 8);
  uint64_t v115 = (uint64_t)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000BB470();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v118 = v20;
  uint64_t v119 = v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v101 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v105 = (char *)&v95 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v104 = (char *)&v95 - v27;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v95 - v28;
  uint64_t v30 = sub_1000BB3E0();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  unint64_t v33 = (char *)&v95 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B8A80();
  sub_1000B89D0();
  unint64_t v108 = sub_100018190();
  id v34 = (void *)sub_1000BBE20();
  sub_10001295C(&qword_1000EC5C8);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1000BF8A0;
  sub_1000BB3A0();
  uint64_t v36 = sub_1000BB3C0();
  uint64_t v38 = v37;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  uint64_t v121 = v36;
  uint64_t v122 = v38;
  uint64_t v39 = sub_1000BB200();
  uint64_t v41 = v40;
  swift_bridgeObjectRelease();
  *(void *)(v35 + 56) = &type metadata for String;
  *(void *)(v35 + 64) = sub_10001824C();
  *(void *)(v35 + 32) = v39;
  *(void *)(v35 + 40) = v41;
  sub_1000BBBE0();
  sub_1000B8770();

  swift_bridgeObjectRelease();
  uint64_t v42 = sub_1000BB3B0();
  uint64_t v123 = v42;
  uint64_t v124 = &protocol witness table for File;
  uint64_t v43 = sub_1000269C4(&v121);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v43, v114, v42);
  sub_1000B9240();
  uint64_t v44 = sub_1000BB440();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v115, 1, 1, v44);
  sub_1000BB450();
  uint64_t v45 = sub_1000B9280();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
  uint64_t v48 = (uint64_t)v17;
  v47(v17, 1, 1, v45);
  sub_1000BB460();
  sub_100014C68(&v121, v123);
  uint64_t v49 = v116;
  uint64_t v50 = v117;
  sub_1000B9480();
  if (v49)
  {
    sub_1000184DC(v48, &qword_1000EDD08);
    (*(void (**)(char *, uint64_t))(v119 + 8))(v29, v118);
    return sub_100015C54((uint64_t)&v121);
  }
  uint64_t v97 = v46 + 56;
  uint64_t v98 = v45;
  uint64_t v114 = 0;
  uint64_t v99 = v46;
  id v96 = v47;
  uint64_t v115 = v48;
  long long v116 = v29;
  uint64_t v53 = v112;
  uint64_t v52 = v113;
  uint64_t v54 = (uint64_t)v120;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v120, 1, v50) == 1)
  {
    sub_1000184DC(v54, &qword_1000EDD00);
    sub_100015C54((uint64_t)&v121);
    uint64_t v56 = v118;
    uint64_t v55 = v119;
    uint64_t v57 = v115;
    uint64_t v59 = (uint64_t)v109;
    uint64_t v58 = v110;
    uint64_t v60 = v99;
    uint64_t v61 = v98;
    goto LABEL_24;
  }
  uint64_t v62 = v111;
  uint64_t v63 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v111, v54, v50);
  sub_100015C54((uint64_t)&v121);
  uint64_t v64 = sub_1000B9F40();
  uint64_t v67 = v118;
  uint64_t v66 = v119;
  if (!v65)
  {
    sub_1000BB6C0();
    sub_1000A0F20((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v62, v50);
    sub_1000184DC(v115, &qword_1000EDD08);
    return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v116, v67);
  }
  uint64_t v68 = v64;
  uint64_t v69 = v65;
  if (sub_1000B9230())
  {
    if ((v68 != 0x682E63696C627570 || v69 != 0xEB00000000636965) && (sub_1000BC1A0() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1000BB6C0();
      sub_1000A0F20((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v111, v63);
      sub_1000184DC(v115, &qword_1000EDD08);
      return (*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v116, v118);
    }
    sub_1000B9250();
    sub_1000B9240();
    uint64_t v121 = 0;
    uint64_t v122 = 0;
    unint64_t v70 = v104;
    unint64_t v71 = v116;
    uint64_t v72 = v114;
    sub_1000BB420();
    uint64_t v114 = v72;
    if (v72)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v111, v117);
      sub_1000184DC(v115, &qword_1000EDD08);
      return (*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v71, v118);
    }
    uint64_t v56 = v118;
    uint64_t v55 = v119;
    (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v105, v70, v118);
    (*(void (**)(char *, void, uint64_t))(v102 + 104))(v107, enum case for StickerEffect.none(_:), v103);
    uint64_t v89 = (uint64_t)v106;
    sub_1000B9270();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v70, v56);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v111, v117);
    uint64_t v57 = v115;
    sub_1000184DC(v115, &qword_1000EDD08);
    uint64_t v61 = v98;
    v96((char *)v89, 0, 1, v98);
  }
  else
  {
    char v73 = sub_10008CDC8(v68, v69);
    uint64_t v74 = v113;
    (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v53, v111, v63);
    if (v73)
    {
      uint64_t v75 = sub_1000B9F20();
      uint64_t v78 = *(void (**)(char *, uint64_t))(v74 + 8);
      uint64_t v76 = v74 + 8;
      uint64_t v77 = v78;
      v78(v53, v63);
      if (v75 > 1)
      {
        uint64_t v113 = v76;
        id v79 = (void *)sub_1000BBE20();
        sub_1000BBBE0();
        sub_1000B8770();

        uint64_t v80 = sub_1000B9250();
        id v81 = v111;
        uint64_t v82 = sub_1000B9F20();
        uint64_t v83 = sub_1000B9260();
        uint64_t v84 = v114;
        sub_1000A0FD0(v80, v82, v83);
        if (v84)
        {
          swift_bridgeObjectRelease();
          v77(v81, v117);
          sub_1000184DC(v115, &qword_1000EDD08);
          return (*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v116, v118);
        }
        sub_1000B9240();
        sub_1000BB430();
        uint64_t v114 = 0;
        uint64_t v93 = v111;
        sub_1000B9F20();
        sub_1000B9F60();
        (*(void (**)(char *, void, uint64_t))(v102 + 104))(v107, enum case for StickerEffect.none(_:), v103);
        uint64_t v94 = (uint64_t)v100;
        uint64_t v55 = v119;
        sub_1000B9270();
        v77(v93, v117);
        uint64_t v57 = v115;
        sub_1000184DC(v115, &qword_1000EDD08);
        uint64_t v61 = v98;
        v96((char *)v94, 0, 1, v98);
        sub_1000A0F68(v94, v57);
        uint64_t v56 = v118;
        goto LABEL_23;
      }
      uint64_t v120 = (char *)v68;
      uint64_t v63 = v117;
      uint64_t v88 = v118;
      id v86 = v105;
      id v87 = v96;
      id v85 = v77;
    }
    else
    {
      uint64_t v120 = (char *)v68;
      id v85 = *(void (**)(char *, uint64_t))(v74 + 8);
      v85(v53, v63);
      id v86 = v105;
      id v87 = v96;
      uint64_t v88 = v118;
    }
    uint64_t v90 = (void *)sub_1000BBE20();
    sub_1000BBBE0();
    sub_1000B8770();

    (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v86, v116, v88);
    uint64_t v91 = v111;
    sub_1000B9F20();
    LODWORD(v125) = sub_1000B9F30();
    sub_1000B9F50();
    sub_1000B9CD0();
    sub_1000B9F60();
    uint64_t v89 = (uint64_t)v106;
    uint64_t v56 = v118;
    sub_1000B9270();
    v85(v91, v63);
    uint64_t v55 = v119;
    uint64_t v57 = v115;
    sub_1000184DC(v115, &qword_1000EDD08);
    uint64_t v61 = v98;
    v87((char *)v89, 0, 1, v98);
  }
  sub_1000A0F68(v89, v57);
LABEL_23:
  uint64_t v59 = (uint64_t)v109;
  uint64_t v58 = v110;
  uint64_t v60 = v99;
LABEL_24:
  sub_1000A0EB8(v57, v59);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v59, 1, v61) == 1)
  {
    sub_1000184DC(v59, &qword_1000EDD08);
    uint64_t v92 = (void *)sub_1000BBE20();
    sub_1000BBBE0();
    sub_1000B8770();

    sub_1000BB6C0();
    sub_1000A0F20((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();
    sub_1000184DC(v57, &qword_1000EDD08);
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v116, v56);
  }
  else
  {
    sub_1000184DC(v57, &qword_1000EDD08);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v116, v56);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v58, v59, v61);
  }
}

uint64_t sub_1000A0E28@<X0>(uint64_t a1@<X8>)
{
  sub_1000BBC20();
  uint64_t v2 = sub_1000B9F80();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_1000A0EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10009FC54(a1, a2, a3);
}

uint64_t sub_1000A0EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EDD08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A0F20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A0F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EDD08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A0FD0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result >= a3)
  {
    sub_1000BB6C0();
    sub_1000A0F20((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
  else if (a3 < a2)
  {
    double v3 = (double)a2 / (double)a3 * (double)result;
    if ((~*(void *)&v3 & 0x7FF0000000000000) != 0)
    {
      if (v3 > -9.22337204e18)
      {
        if (v3 < 9.22337204e18) {
          return (uint64_t)v3;
        }
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
  return result;
}

ValueMetadata *type metadata accessor for MarkUnreadRequestUnpacker()
{
  return &type metadata for MarkUnreadRequestUnpacker;
}

unint64_t sub_1000A112C(uint64_t a1)
{
  unint64_t result = sub_1000129A0();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000A1154()
{
  return sub_1000A14A8(&qword_1000EDD10, (void (*)(uint64_t))&type metadata accessor for MarkUnreadRequest);
}

uint64_t sub_1000A119C(uint64_t a1, uint64_t a2)
{
  return sub_1000A11F4(a1, a2, (void (*)(char *))&DeliveryReceipt.init(with:));
}

uint64_t sub_1000A11C8(uint64_t a1, uint64_t a2)
{
  return sub_1000A11F4(a1, a2, (void (*)(char *))&PlayedReceipt.init(with:));
}

uint64_t sub_1000A11F4(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  uint64_t v13 = a3;
  uint64_t v4 = sub_1000BB5D0();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000B8700();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B81C0();
  swift_allocObject();
  sub_1000B81B0();
  sub_1000A14A8(&qword_1000EC620, (void (*)(uint64_t))&type metadata accessor for TopLevelDictionary);
  sub_1000B81A0();
  uint64_t result = swift_release();
  if (!v3)
  {
    sub_1000B86E0();
    v13(v6);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

uint64_t sub_1000A13CC(uint64_t a1, uint64_t a2)
{
  return sub_1000A11F4(a1, a2, (void (*)(char *))&ReadReceipt.init(with:));
}

uint64_t sub_1000A13F8(uint64_t a1, uint64_t a2)
{
  return sub_1000A11F4(a1, a2, (void (*)(char *))&DeliveredQuietlyReceipt.init(with:));
}

uint64_t sub_1000A1424(uint64_t a1, uint64_t a2)
{
  return sub_1000A11F4(a1, a2, (void (*)(char *))&RecoverJunkCommand.init(with:));
}

uint64_t sub_1000A1450(uint64_t a1, uint64_t a2)
{
  return sub_1000A11F4(a1, a2, (void (*)(char *))&NotifyRecipientCommand.init(with:));
}

uint64_t sub_1000A147C(uint64_t a1, uint64_t a2)
{
  return sub_1000A11F4(a1, a2, (void (*)(char *))&MarkUnreadRequest.init(with:));
}

uint64_t sub_1000A14A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeWithCopy for SMSFilteringSettingsDictionary(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SMSFilteringSettingsDictionary(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for SMSFilteringSettingsDictionary(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SMSFilteringSettingsDictionary(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SMSFilteringSettingsDictionary(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SMSFilteringSettingsDictionary()
{
  return &type metadata for SMSFilteringSettingsDictionary;
}

uint64_t sub_1000A169C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v13 = a5;
  v12[1] = a4;
  uint64_t v7 = sub_10001295C(&qword_1000EDD28);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_1000A1D08();
  sub_1000BC280();
  char v15 = 0;
  sub_1000BC0A0();
  if (!v5)
  {
    char v14 = 1;
    sub_1000BC120();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1000A181C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1000A1B24(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7 & 1;
  }
  return result;
}

uint64_t sub_1000A1854(void *a1)
{
  return sub_1000A169C(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1000A1878(char *a1, char *a2)
{
  return sub_10004E364(*a1, *a2);
}

Swift::Int sub_1000A1884()
{
  return sub_1000BC250();
}

uint64_t sub_1000A18EC()
{
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000A1938()
{
  return sub_1000BC250();
}

uint64_t sub_1000A199C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  unint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_1000E1880;
  v8._object = v3;
  Swift::Int v5 = sub_1000BBFA0(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_1000A19FC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7234918;
  if (*v1) {
    uint64_t v2 = 7299942;
  }
  *a1 = v2;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1000A1A24()
{
  if (*v0) {
    return 7299942;
  }
  else {
    return 7234918;
  }
}

uint64_t sub_1000A1A48@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_1000E1880;
  v9._object = a2;
  Swift::Int v6 = sub_1000BBFA0(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

uint64_t sub_1000A1AAC(uint64_t a1)
{
  unint64_t v2 = sub_1000A1D08();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000A1AE8(uint64_t a1)
{
  unint64_t v2 = sub_1000A1D08();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000A1B24(void *a1)
{
  uint64_t v3 = sub_10001295C(&qword_1000EDD18);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::Int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  sub_100014C68(a1, a1[3]);
  sub_1000A1D08();
  sub_1000BC270();
  if (v1)
  {
    sub_100015C54((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = sub_1000BBFB0();
    char v10 = 1;
    sub_1000BC030();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_100015C54((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1000A1D08()
{
  unint64_t result = qword_1000EDD20;
  if (!qword_1000EDD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDD20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SMSFilteringSettingsDictionary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A1E28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SMSFilteringSettingsDictionary.CodingKeys()
{
  return &type metadata for SMSFilteringSettingsDictionary.CodingKeys;
}

unint64_t sub_1000A1E64()
{
  unint64_t result = qword_1000EDD30;
  if (!qword_1000EDD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDD30);
  }
  return result;
}

unint64_t sub_1000A1EBC()
{
  unint64_t result = qword_1000EDD38;
  if (!qword_1000EDD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDD38);
  }
  return result;
}

unint64_t sub_1000A1F14()
{
  unint64_t result = qword_1000EDD40;
  if (!qword_1000EDD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDD40);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPreviewUnpacker()
{
  return &type metadata for WorkoutPreviewUnpacker;
}

uint64_t sub_1000A1F78()
{
  return sub_1000A2FB8((unint64_t *)&unk_1000EDD48, (void (*)(uint64_t))&type metadata accessor for WorkoutPreview);
}

uint64_t sub_1000A1FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a1;
  v5[5] = a2;
  uint64_t v6 = sub_1000BB3B0();
  v5[8] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[9] = v7;
  v5[10] = *(void *)(v7 + 64);
  v5[11] = swift_task_alloc();
  uint64_t v8 = sub_1000BB3E0();
  v5[12] = v8;
  uint64_t v5[13] = *(void *)(v8 - 8);
  v5[14] = swift_task_alloc();
  return _swift_task_switch(sub_1000A20E8, 0, 0);
}

uint64_t sub_1000A20E8()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[9];
  uint64_t v22 = v0[11];
  uint64_t v23 = v0[10];
  uint64_t v21 = v0[8];
  uint64_t v5 = v0[5];
  uint64_t v24 = v0[6];
  uint64_t v25 = v0[7];
  sub_1000BBBE0();
  sub_100018190();
  uint64_t v6 = (void *)sub_1000BBCF0();
  sub_10001295C(&qword_1000EC5C8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1000BF8A0;
  sub_1000BB3A0();
  uint64_t v8 = sub_1000BB3C0();
  uint64_t v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  v0[2] = v8;
  v0[3] = v10;
  uint64_t v11 = sub_1000BB200();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = sub_10001824C();
  *(void *)(v7 + 32) = v11;
  *(void *)(v7 + 40) = v13;
  sub_1000B8780();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v22, v5, v21);
  unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = swift_allocObject();
  v0[15] = v15;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v15 + v14, v22, v21);
  uint64_t v16 = (void *)(v15 + ((v23 + v14 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v16 = v24;
  v16[1] = v25;
  swift_bridgeObjectRetain();
  uint64_t v17 = (void *)swift_task_alloc();
  v0[16] = v17;
  uint64_t v18 = sub_1000B9EC0();
  *uint64_t v17 = v0;
  v17[1] = sub_1000A2360;
  uint64_t v19 = v0[4];
  return File.withResource<A>(_:)(v19, &unk_1000EDD68, v15, v18);
}

uint64_t sub_1000A2360()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1000A24B4, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1000A24B4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000A252C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  sub_1000B9EA0();
  v4[20] = swift_task_alloc();
  sub_1000B9E80();
  v4[21] = swift_task_alloc();
  uint64_t v5 = sub_1000B8240();
  v4[22] = v5;
  v4[23] = *(void *)(v5 - 8);
  v4[24] = swift_task_alloc();
  uint64_t v6 = sub_1000BB3E0();
  v4[25] = v6;
  v4[26] = *(void *)(v6 - 8);
  v4[27] = swift_task_alloc();
  return _swift_task_switch(sub_1000A26A4, 0, 0);
}

uint64_t sub_1000A26A4()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[25];
  sub_1000BB3A0();
  sub_1000BB3D0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[28] = sub_1000B8260();
  v0[29] = v4;
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  uint64_t v5 = self;
  Class isa = sub_1000B82B0().super.isa;
  v0[30] = isa;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1000A2980;
  uint64_t v7 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000A2CE8;
  v0[13] = &unk_1000E4A98;
  v0[14] = v7;
  [v5 getPreviewMetadata:isa withCompletion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000A2980()
{
  return _swift_task_switch(sub_1000A2A60, 0, 0);
}

id sub_1000A2A60()
{
  uint64_t v1 = *(void **)(v0 + 120);

  if (v1)
  {
    [v1 activityType];
    [v1 isIndoor];
    [v1 configurationType];
    sub_1000B9E90();
    id result = [v1 configurationName];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v3 = result;
    uint64_t v5 = *(void *)(v0 + 224);
    unint64_t v4 = *(void *)(v0 + 232);
    sub_1000BB900();

    [v1 goalTypeIdentifier];
    sub_1000B9EB0();
    sub_1000B9E70();
    sub_100018074(v5, v4);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 224);
    unint64_t v8 = *(void *)(v0 + 232);
    sub_1000BB6C0();
    sub_1000A2FB8((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    swift_bridgeObjectRetain();
    sub_1000BB6B0();
    swift_willThrow();
    sub_100018074(v7, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  }
  return (id)v6();
}

uint64_t sub_1000A2CE8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v6 = a2;
  uint64_t v3 = *(void *)(*(void *)(v2 + 64) + 40);
  id v4 = a2;
  sub_1000A3000((uint64_t)&v6, v3);
  return swift_continuation_resume();
}

uint64_t sub_1000A2D44(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_100033238;
  return sub_1000A1FC0(a1, a2, v8, v7, v6);
}

uint64_t sub_1000A2DF8()
{
  uint64_t v1 = sub_1000BB3B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1000A2EA0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000BB3B0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1 + v5;
  uint64_t v7 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100033238;
  return sub_1000A252C(a1, v6, v8, v9);
}

uint64_t sub_1000A2FB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A3000(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EDD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for MediaMetadataUnpacker()
{
  return &type metadata for MediaMetadataUnpacker;
}

uint64_t sub_1000A3078()
{
  return sub_1000A3F38(&qword_1000EDD78, (void (*)(uint64_t))&type metadata accessor for MediaMetadata);
}

void sub_1000A30C0(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v5 - 8);
  uint64_t v69 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)sub_1000BB6C0();
  unint64_t v71 = (void *)*(v7 - 1);
  id v72 = v7;
  __chkstk_darwin(v7);
  unint64_t v70 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001295C(&qword_1000EDD80);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v64 - v13;
  sub_1000BB510();
  uint64_t v15 = sub_1000B9880();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  if ((sub_1000B99A0() & 1) == 0) {
    goto LABEL_19;
  }
  sub_1000BB3B0();
  type metadata accessor for CGImageSource(0);
  sub_1000B9480();
  if (v2)
  {
    sub_1000184DC((uint64_t)v14, &qword_1000EDD80);
    return;
  }
  uint64_t v68 = v14;
  if (!v73)
  {
    unint64_t v33 = v70;
    sub_1000BB6B0();
    sub_100018190();
    uint64_t v42 = (void *)sub_1000BBD60();
    sub_10001295C(&qword_1000EC5C8);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1000BF8A0;
    uint64_t v37 = v71;
    id v36 = v72;
    uint64_t v67 = (CGImageSource *)v71[2];
    uint64_t v44 = (uint64_t)v69;
    ((void (*)(char *, char *, id))v67)(v69, v33, v72);
    ((void (*)(uint64_t, void, uint64_t, id))v37[7])(v44, 0, 1, v36);
    uint64_t v45 = sub_1000BB200();
    uint64_t v47 = v46;
    sub_1000184DC(v44, &qword_1000EC630);
    *(void *)(v43 + 56) = &type metadata for String;
    *(void *)(v43 + 64) = sub_10001824C();
    *(void *)(v43 + 32) = v45;
    *(void *)(v43 + 40) = v47;
    sub_1000BBBE0();
    sub_1000B8770();

    swift_bridgeObjectRelease();
    sub_1000A3F38((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    ((void (*)(uint64_t, char *, id))v67)(v48, v33, v36);
    swift_willThrow();
LABEL_17:
    ((void (*)(char *, id))v37[1])(v33, v36);
    sub_1000184DC((uint64_t)v68, &qword_1000EDD80);
    return;
  }
  uint64_t v67 = v73;
  sub_10001295C(&qword_1000EDD88);
  uint64_t inited = swift_initStackObject();
  long long v66 = xmmword_1000BF8A0;
  *(_OWORD *)(inited + 16) = xmmword_1000BF8A0;
  *(void *)(inited + 32) = kCGImageSourceShouldCache;
  *(void *)(inited + 64) = &type metadata for Bool;
  *(unsigned char *)(inited + 40) = 0;
  CFStringRef v18 = (id)kCGImageSourceShouldCache;
  sub_100064F8C(inited);
  type metadata accessor for CFString(0);
  sub_1000A3F38(&qword_1000EC4F8, type metadata accessor for CFString);
  CFDictionaryRef isa = sub_1000BB850().super.isa;
  swift_bridgeObjectRelease();
  CFDictionaryRef v20 = CGImageSourceCopyPropertiesAtIndex(v67, 0, isa);

  if (!v20
    || (v73 = 0, type metadata accessor for CFNumber(0), sub_1000BB860(), v20, (uint64_t v21 = v73) == 0))
  {
    unint64_t v33 = v70;
    sub_1000BB6B0();
    sub_100018190();
    id v34 = (void *)sub_1000BBD60();
    sub_10001295C(&qword_1000EC5C8);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v66;
    uint64_t v37 = v71;
    id v36 = v72;
    *(void *)&long long v66 = v71[2];
    uint64_t v38 = (uint64_t)v69;
    ((void (*)(char *, char *, id))v66)(v69, v33, v72);
    ((void (*)(uint64_t, void, uint64_t, id))v37[7])(v38, 0, 1, v36);
    uint64_t v39 = sub_1000BB200();
    uint64_t v41 = v40;
    sub_1000184DC(v38, &qword_1000EC630);
    *(void *)(v35 + 56) = &type metadata for String;
    *(void *)(v35 + 64) = sub_10001824C();
    *(void *)(v35 + 32) = v39;
    *(void *)(v35 + 40) = v41;
    sub_1000BBBE0();
LABEL_15:
    sub_1000B8770();

    swift_bridgeObjectRelease();
    sub_1000A3F38((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    ((void (*)(uint64_t, char *, id))v66)(v54, v33, v36);
    swift_willThrow();
LABEL_16:

    goto LABEL_17;
  }
  uint64_t v22 = sub_1000BB900();
  uint64_t v65 = (void *)v23;
  if (!*((void *)v21 + 2) || (unint64_t v24 = sub_10008BB58(v22, (uint64_t)v65), (v25 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v33 = v70;
    sub_1000BB6B0();
    sub_100018190();
    uint64_t v65 = (void *)sub_1000BBD60();
    sub_10001295C(&qword_1000EC5C8);
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = v66;
    uint64_t v37 = v71;
    id v36 = v72;
    *(void *)&long long v66 = v71[2];
    uint64_t v50 = (uint64_t)v69;
    ((void (*)(char *, char *, id))v66)(v69, v33, v72);
    ((void (*)(uint64_t, void, uint64_t, id))v37[7])(v50, 0, 1, v36);
    uint64_t v51 = sub_1000BB200();
    uint64_t v53 = v52;
    sub_1000184DC(v50, &qword_1000EC630);
    *(void *)(v49 + 56) = &type metadata for String;
    *(void *)(v49 + 64) = sub_10001824C();
    *(void *)(v49 + 32) = v51;
    *(void *)(v49 + 40) = v53;
    sub_1000BBBE0();
    id v34 = v65;
    goto LABEL_15;
  }
  id v64 = *(id *)(*((void *)v21 + 7) + 8 * v24);
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1000BB900();
  if (!*((void *)v21 + 2) || (unint64_t v28 = sub_10008BB58(v26, v27), (v29 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v33 = v70;
    sub_1000BB6B0();
    sub_100018190();
    uint64_t v65 = (void *)sub_1000BBD60();
    sub_10001295C(&qword_1000EC5C8);
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = v66;
    uint64_t v37 = v71;
    id v36 = v72;
    *(void *)&long long v66 = v71[2];
    uint64_t v56 = (uint64_t)v69;
    ((void (*)(char *, char *, id))v66)(v69, v33, v72);
    ((void (*)(uint64_t, void, uint64_t, id))v37[7])(v56, 0, 1, v36);
    uint64_t v57 = sub_1000BB200();
    uint64_t v59 = v58;
    sub_1000184DC(v56, &qword_1000EC630);
    *(void *)(v55 + 56) = &type metadata for String;
    *(void *)(v55 + 64) = sub_10001824C();
    *(void *)(v55 + 32) = v57;
    *(void *)(v55 + 40) = v59;
    sub_1000BBBE0();
    uint64_t v60 = v65;
    sub_1000B8770();

    swift_bridgeObjectRelease();
    sub_1000A3F38((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    ((void (*)(uint64_t, char *, id))v66)(v61, v33, v36);
    swift_willThrow();

    goto LABEL_16;
  }
  id v72 = *(id *)(*((void *)v21 + 7) + 8 * v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v64;
  uint64_t v31 = sub_1000BBB60();
  unint64_t v71 = v30;

  uint64_t v32 = (char *)v72;
  id v72 = (id)sub_1000BBB60();
  unint64_t v70 = v32;

  sub_1000BB710();
  uint64_t v69 = (char *)v31;
  sub_1000BB6F0();
  sub_1000B9870();

  unint64_t v14 = v68;
  sub_1000184DC((uint64_t)v68, &qword_1000EDD80);
  v16(v12, 0, 1, v15);
  sub_1000A3F80((uint64_t)v12, (uint64_t)v14);
LABEL_19:
  sub_1000A3EB4((uint64_t)v14, (uint64_t)v12);
  uint64_t v62 = sub_1000B98A0();
  __chkstk_darwin(v62);
  *(&v64 - 2) = a1;
  *(&v64 - 1) = a2;
  sub_1000BB380();
  sub_1000184DC((uint64_t)v14, &qword_1000EDD80);
  if (v2)
  {
    uint64_t v63 = sub_1000B9A60();
    (*(void (**)(void *, uint64_t))(*(void *)(v63 - 8) + 8))(a2, v63);
  }
}

id sub_1000A3D28@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  return a1;
}

void sub_1000A3D54()
{
  uint64_t v0 = sub_1000BB3E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BB3A0();
  sub_1000BB3C0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v4 = objc_allocWithZone((Class)PFMetadata);
  NSString v5 = sub_1000BB8D0();
  swift_bridgeObjectRelease();
  id v6 = [v4 initForLimitedPropertiesWithPath:v5];

  if (v6)
  {
    sub_10008EA44(v6);
  }
}

void sub_1000A3E9C(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_1000A3EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EDD80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1000A3F1C()
{
}

uint64_t sub_1000A3F38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A3F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EDD80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for SMSFilteringSettingsMessageUnpacker()
{
  return &type metadata for SMSFilteringSettingsMessageUnpacker;
}

unint64_t sub_1000A3FF8(uint64_t a1)
{
  unint64_t result = sub_100012D90();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000A4020()
{
  return sub_1000A4F08(&qword_1000EDD90, (void (*)(uint64_t))&type metadata accessor for SMSFilteringSettingsMessage);
}

uint64_t sub_1000A4068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v79 = a1;
  uint64_t v1 = sub_10001295C(&qword_1000EC628);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000BBF10();
  uint64_t v80 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v82 = (char *)v70 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v70 - v10;
  uint64_t v12 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v12 - 8);
  uint64_t v83 = (char *)v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000B86C0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000BB6C0();
  uint64_t v85 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v84 = (char *)v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000B86D0();
  if (v21 >> 60 == 15)
  {
    sub_100018190();
    uint64_t v22 = (void *)sub_1000BBE10();
    sub_1000BBBE0();
    sub_1000B8770();

    sub_1000A4EB4();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    uint64_t v76 = v18;
    uint64_t v77 = v20;
    unint64_t v78 = v21;
    Class isa = sub_1000B82B0().super.isa;
    id v25 = [(objc_class *)isa _imOptionallyDecompressData];

    uint64_t v87 = sub_1000B82D0();
    unint64_t v27 = v26;

    unint64_t v86 = v27;
    switch(v27 >> 62)
    {
      case 1uLL:
        LODWORD(v28) = HIDWORD(v87) - v87;
        if (__OFSUB__(HIDWORD(v87), v87))
        {
          __break(1u);
LABEL_17:
          __break(1u);
          JUMPOUT(0x1000A4D24);
        }
        uint64_t v28 = (int)v28;
LABEL_8:
        if (v28 <= 0)
        {
LABEL_12:
          (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v14);
          sub_1000B86B0();
          (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
          uint64_t v54 = v84;
          sub_1000BB6B0();
          sub_100018190();
          uint64_t v55 = (void *)sub_1000BBE10();
          sub_10001295C(&qword_1000EC5C8);
          uint64_t v56 = swift_allocObject();
          *(_OWORD *)(v56 + 16) = xmmword_1000BF8A0;
          uint64_t v57 = v85;
          uint64_t v82 = *(char **)(v85 + 16);
          uint64_t v58 = (uint64_t)v83;
          uint64_t v59 = v76;
          ((void (*)(char *, char *, uint64_t))v82)(v83, v54, v76);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v58, 0, 1, v59);
          uint64_t v60 = sub_1000BB200();
          uint64_t v62 = v61;
          sub_1000184DC(v58, &qword_1000EC630);
          *(void *)(v56 + 56) = &type metadata for String;
          *(void *)(v56 + 64) = sub_10001824C();
          *(void *)(v56 + 32) = v60;
          *(void *)(v56 + 40) = v62;
          sub_1000BBBE0();
          sub_1000B8770();

          swift_bridgeObjectRelease();
          sub_1000A4F08((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
          swift_allocError();
          ((void (*)(uint64_t, char *, uint64_t))v82)(v63, v54, v59);
          swift_willThrow();
          sub_1000180CC(v77, v78);
          sub_100018074(v87, v86);
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v54, v59);
        }
        else
        {
          sub_1000B81C0();
          swift_allocObject();
          uint64_t v32 = sub_1000B81B0();
          sub_1000A4F50();
          uint64_t v75 = v32;
          unint64_t v33 = v81;
          sub_1000B81A0();
          if (v33)
          {
            unint64_t v88 = (unint64_t)v33;
            swift_errorRetain();
            id v81 = (void (*)(void, void, void))sub_10001295C(&qword_1000EC648);
            uint64_t v34 = v4;
            if (swift_dynamicCast())
            {
              swift_errorRelease();
              uint64_t v35 = v80;
              (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v82, v11, v34);
              id v81 = (void (*)(void, void, void))sub_100018190();
              v70[0] = sub_1000BBE10();
              uint64_t v79 = sub_10001295C(&qword_1000EC5C8);
              uint64_t v36 = swift_allocObject();
              long long v73 = xmmword_1000BF8A0;
              *(_OWORD *)(v36 + 16) = xmmword_1000BF8A0;
              uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
              v70[1] = v35 + 16;
              unint64_t v71 = v37;
              v37(v3, v82, v34);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v3, 0, 1, v34);
              uint64_t v38 = v34;
              uint64_t v74 = v34;
              uint64_t v39 = sub_1000BB200();
              uint64_t v41 = v40;
              sub_1000184DC((uint64_t)v3, &qword_1000EC628);
              *(void *)(v36 + 56) = &type metadata for String;
              unint64_t v72 = sub_10001824C();
              *(void *)(v36 + 64) = v72;
              *(void *)(v36 + 32) = v39;
              *(void *)(v36 + 40) = v41;
              sub_1000BBBE0();
              uint64_t v42 = (void *)v70[0];
              sub_1000B8770();

              swift_bridgeObjectRelease();
              (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v14);
              sub_1000B86B0();
              (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
              v71(v7, v82, v38);
              uint64_t v43 = v84;
              sub_1000BB6A0();
              uint64_t v44 = (void *)sub_1000BBE10();
              uint64_t v45 = swift_allocObject();
              *(_OWORD *)(v45 + 16) = v73;
              uint64_t v46 = v85;
              id v81 = *(void (**)(void, void, void))(v85 + 16);
              uint64_t v47 = (uint64_t)v83;
              uint64_t v48 = v76;
              v81(v83, v43, v76);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v48);
              uint64_t v49 = sub_1000BB200();
              uint64_t v51 = v50;
              sub_1000184DC(v47, &qword_1000EC630);
              unint64_t v52 = v72;
              *(void *)(v45 + 56) = &type metadata for String;
              *(void *)(v45 + 64) = v52;
              *(void *)(v45 + 32) = v49;
              *(void *)(v45 + 40) = v51;
              sub_1000BBBE0();
              sub_1000B8770();

              swift_bridgeObjectRelease();
              sub_1000A4F08((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
              swift_allocError();
              v81(v53, v43, v48);
              swift_willThrow();
              sub_1000180CC(v77, v78);
              sub_100018074(v87, v86);
              swift_release();
              (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v48);
              (*(void (**)(char *, uint64_t))(v80 + 8))(v82, v74);
              uint64_t result = swift_errorRelease();
            }
            else
            {
              swift_errorRelease();
              sub_100018190();
              uint64_t v65 = (void *)sub_1000BBE10();
              sub_10001295C(&qword_1000EC5C8);
              uint64_t v66 = swift_allocObject();
              *(_OWORD *)(v66 + 16) = xmmword_1000BF8A0;
              unint64_t v88 = (unint64_t)v33;
              uint64_t v67 = sub_1000BB200();
              uint64_t v69 = v68;
              *(void *)(v66 + 56) = &type metadata for String;
              *(void *)(v66 + 64) = sub_10001824C();
              *(void *)(v66 + 32) = v67;
              *(void *)(v66 + 40) = v69;
              sub_1000BBBE0();
              sub_1000B8770();

              swift_bridgeObjectRelease();
              swift_getErrorValue();
              swift_getDynamicType();
              unint64_t v88 = 0;
              unint64_t v89 = 0xE000000000000000;
              sub_1000BBED0(22);
              swift_bridgeObjectRelease();
              unint64_t v88 = 0xD000000000000014;
              unint64_t v89 = 0x80000001000C9380;
              v90._countAndFlagsBits = sub_1000BC2B0();
              sub_1000BB9A0(v90);
              swift_bridgeObjectRelease();
              sub_1000A4F08((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
              swift_allocError();
              sub_1000BB6B0();
              swift_willThrow();
              swift_errorRelease();
              swift_release();
              sub_100018074(v87, v86);
              uint64_t result = sub_1000180CC(v77, v78);
            }
          }
          else
          {
            sub_100018190();
            swift_bridgeObjectRetain();
            id v64 = (void *)sub_1000BBE10();
            sub_1000BBBE0();
            sub_1000B8770();

            sub_1000BB0F0();
            swift_bridgeObjectRelease();
            sub_1000BB100();
            sub_1000180CC(v77, v78);
            sub_100018074(v87, v86);
            uint64_t result = swift_release();
          }
        }
        break;
      case 2uLL:
        uint64_t v30 = *(void *)(v87 + 16);
        uint64_t v29 = *(void *)(v87 + 24);
        BOOL v31 = __OFSUB__(v29, v30);
        uint64_t v28 = v29 - v30;
        if (!v31) {
          goto LABEL_8;
        }
        goto LABEL_17;
      case 3uLL:
        goto LABEL_12;
      default:
        uint64_t v28 = BYTE6(v86);
        goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1000A4D34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000B8700();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B81C0();
  swift_allocObject();
  sub_1000B81B0();
  sub_1000A4F08(&qword_1000EC620, (void (*)(uint64_t))&type metadata accessor for TopLevelDictionary);
  sub_1000B81A0();
  uint64_t result = swift_release();
  if (!v1)
  {
    sub_1000A4068(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

unint64_t sub_1000A4EB4()
{
  unint64_t result = qword_1000EDD98;
  if (!qword_1000EDD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDD98);
  }
  return result;
}

uint64_t sub_1000A4F08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000A4F50()
{
  unint64_t result = qword_1000EDDA0;
  if (!qword_1000EDDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDDA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SMSFilteringSettingsMessageUnpacker.EncryptedMessageMissingData()
{
  return &type metadata for SMSFilteringSettingsMessageUnpacker.EncryptedMessageMissingData;
}

uint64_t sub_1000A4FB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v4 = sub_1000B9E10();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  __chkstk_darwin(v4);
  uint64_t v44 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001295C(&qword_1000EC588);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v39 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  sub_100014C68(a1, v15);
  uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  uint64_t v45 = v17;
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  sub_100014C68(a1, v18);
  uint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
  uint64_t v49 = v20;
  id v21 = [self sharedInstance];
  uint64_t v23 = a1[3];
  uint64_t v22 = a1[4];
  sub_100014C68(a1, v23);
  (*(void (**)(uint64_t, uint64_t))(v22 + 32))(v23, v22);
  uint64_t v25 = v24;
  sub_1000181E8((uint64_t)a1, (uint64_t)v46);
  if (v25)
  {
    sub_100015C54((uint64_t)v46);
  }
  else
  {
    uint64_t v26 = v47;
    uint64_t v27 = v48;
    sub_100014C68(v46, v47);
    (*(void (**)(uint64_t, uint64_t))(v27 + 24))(v26, v27);
    uint64_t v29 = v28;
    sub_100015C54((uint64_t)v46);
    if (!v29)
    {
      uint64_t v34 = a1[3];
      uint64_t v35 = a1[4];
      sub_100014C68(a1, v34);
      (*(void (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
      swift_bridgeObjectRelease();
      uint64_t v36 = sub_1000BA7D0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v14, 1, 1, v36);
      goto LABEL_10;
    }
  }
  id v30 = objc_allocWithZone((Class)MBDMessageToSuperParserContext);
  NSString v31 = sub_1000BB8D0();
  swift_bridgeObjectRelease();
  id v32 = [v30 initWithContent:v31];

  if (![v21 parseContext:v32])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000BB6C0();
    sub_100017E10();
    swift_allocError();
    sub_1000BB6B0();
    swift_willThrow();

    return sub_100015C54((uint64_t)a1);
  }
  _AttributedString.init(fromNSAttributedString:)([v32 body], (uint64_t)v12);
  if (v2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_100015C54((uint64_t)a1);
  }

  uint64_t v33 = sub_1000BA7D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v12, 0, 1, v33);
  sub_1000A636C((uint64_t)v12, (uint64_t)v14);
LABEL_10:
  uint64_t v37 = v44;
  sub_1000A6304((uint64_t)v14, (uint64_t)v9);
  sub_1000B9DF0();
  sub_100026A28((uint64_t)v14);

  if (!v2) {
    (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v41, v37, v40);
  }
  return sub_100015C54((uint64_t)a1);
}

void __swiftcall MessageEditedPartDictionary.init(xhtmlBody:)(MessagesBlastDoorService::MessageEditedPartDictionary *__return_ptr retstr, Swift::String_optional xhtmlBody)
{
  retstr->xhtmlBody = xhtmlBody;
  retstr->plainTextSubject = 0u;
  retstr->plainTextBody = 0u;
  retstr->auxXHTMLBody = 0u;
}

uint64_t MessageContent.init(messageEditedPartDictionary:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  v8[3] = &type metadata for MessageEditedPartDictionary;
  v8[4] = &off_1000E4B78;
  uint64_t v4 = (_OWORD *)swift_allocObject();
  v8[0] = v4;
  long long v5 = a1[1];
  v4[1] = *a1;
  v4[2] = v5;
  long long v6 = a1[3];
  v4[3] = a1[2];
  v4[4] = v6;
  return sub_1000A4FB4(v8, a2);
}

uint64_t sub_1000A553C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

unint64_t sub_1000A558C()
{
  unint64_t result = 0x646F426C6D746878;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x7865546E69616C70;
      break;
    case 3:
      unint64_t result = 0x4C4D544858787561;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000A5638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000A59F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000A5660(uint64_t a1)
{
  unint64_t v2 = sub_1000A5888();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000A569C(uint64_t a1)
{
  unint64_t v2 = sub_1000A5888();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t MessageEditedPartDictionary.encode(to:)(void *a1)
{
  uint64_t v3 = sub_10001295C(&qword_1000EDDA8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  long long v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014C68(a1, a1[3]);
  sub_1000A5888();
  sub_1000BC280();
  v8[15] = 0;
  sub_1000BC0A0();
  if (!v1)
  {
    v8[14] = 1;
    sub_1000BC0A0();
    v8[13] = 2;
    sub_1000BC0A0();
    v8[12] = 3;
    sub_1000BC0A0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1000A5888()
{
  unint64_t result = qword_1000EDDB0;
  if (!qword_1000EDDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDDB0);
  }
  return result;
}

double MessageEditedPartDictionary.init(from:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1000A5BF4(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1000A5920(void *a1)
{
  return MessageEditedPartDictionary.encode(to:)(a1);
}

uint64_t sub_1000A5938()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000A5968()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000A5998()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000A59C8()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000A59F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x646F426C6D746878 && a2 == 0xE900000000000079;
  if (v2 || (sub_1000BC1A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001000CC3C0 || (sub_1000BC1A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7865546E69616C70 && a2 == 0xED000079646F4274 || (sub_1000BC1A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C4D544858787561 && a2 == 0xEC00000079646F42)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1000BC1A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1000A5BF4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000EDDD0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_1000A5888();
  sub_1000BC270();
  if (v2)
  {
    sub_100015C54((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v33 = 0;
    uint64_t v9 = sub_1000BBFB0();
    uint64_t v11 = v10;
    uint64_t v29 = v9;
    char v32 = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1000BBFB0();
    uint64_t v14 = v13;
    uint64_t v27 = v12;
    uint64_t v28 = a2;
    char v31 = 2;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1000BBFB0();
    uint64_t v17 = v16;
    uint64_t v26 = v15;
    char v30 = 3;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1000BBFB0();
    uint64_t v20 = v19;
    id v21 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v25 = v18;
    v21(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_100015C54((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v23 = v28;
    *uint64_t v28 = v29;
    v23[1] = v11;
    void v23[2] = v27;
    uint64_t v23[3] = v14;
    v23[4] = v26;
    v23[5] = v17;
    v23[6] = v25;
    v23[7] = v20;
  }
  return result;
}

uint64_t destroy for MessageEditedPartDictionary()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MessageEditedPartDictionary(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MessageEditedPartDictionary(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for MessageEditedPartDictionary(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MessageEditedPartDictionary()
{
  return &type metadata for MessageEditedPartDictionary;
}

unsigned char *storeEnumTagSinglePayload for MessageEditedPartDictionary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A61C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageEditedPartDictionary.CodingKeys()
{
  return &type metadata for MessageEditedPartDictionary.CodingKeys;
}

unint64_t sub_1000A6200()
{
  unint64_t result = qword_1000EDDB8;
  if (!qword_1000EDDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDDB8);
  }
  return result;
}

unint64_t sub_1000A6258()
{
  unint64_t result = qword_1000EDDC0;
  if (!qword_1000EDDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDDC0);
  }
  return result;
}

unint64_t sub_1000A62B0()
{
  unint64_t result = qword_1000EDDC8;
  if (!qword_1000EDDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDDC8);
  }
  return result;
}

uint64_t sub_1000A6304(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EC588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A636C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EC588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A63D8()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000A6408()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000A6438()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000A6468()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

void MessageDictionary.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000EC790);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v185 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001295C(&qword_1000EC678);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v185 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = sub_10001295C(&qword_1000EDDD8);
  uint64_t v11 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  uint64_t v13 = (char *)&v185 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = (int *)type metadata accessor for MessageDictionary();
  __chkstk_darwin(v203);
  uint64_t v204 = (char *)&v185 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  unint64_t v200 = (unint64_t)a1;
  sub_100014C68(a1, v15);
  sub_10003A038();
  uint64_t v199 = (uint64_t)v13;
  sub_1000BC270();
  uint64_t v202 = v2;
  if (v2)
  {
    LODWORD(v201) = 0;
    unint64_t v23 = 0;
    goto LABEL_4;
  }
  uint64_t v16 = (uint64_t)v7;
  LOBYTE(v205) = 0;
  uint64_t v17 = sub_1000BBFF0();
  uint64_t v19 = v203;
  uint64_t v18 = v204;
  uint64_t v20 = &v204[v203[21]];
  *(void *)uint64_t v20 = v17;
  v20[8] = v21 & 1;
  LOBYTE(v205) = 1;
  uint64_t v22 = sub_1000BBFB0();
  char v31 = (void *)((char *)v18 + v19[22]);
  *char v31 = v22;
  v31[1] = v32;
  sub_1000B8380();
  LOBYTE(v205) = 2;
  sub_1000A91DC(&qword_1000EDC40, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_1000BC000();
  sub_10001836C((uint64_t)v10, (uint64_t)v18 + v19[18], &qword_1000EC678);
  LOBYTE(v205) = 3;
  uint64_t v33 = sub_1000BBFB0();
  uint64_t v34 = (void *)((char *)v18 + v19[23]);
  *uint64_t v34 = v33;
  v34[1] = v35;
  LOBYTE(v205) = 4;
  uint64_t v36 = sub_1000BBFB0();
  uint64_t v37 = (void *)((char *)v18 + v19[24]);
  uint64_t *v37 = v36;
  v37[1] = v38;
  LOBYTE(v205) = 5;
  uint64_t v39 = sub_1000BC030();
  uint64_t v40 = (char *)v18 + v19[25];
  *(void *)uint64_t v40 = v39;
  v40[8] = v41 & 1;
  sub_10001295C(&qword_1000EC550);
  char v212 = 6;
  sub_100015CA4(&qword_1000EC580);
  sub_1000BC000();
  void *v18 = v205;
  LOBYTE(v205) = 7;
  uint64_t v42 = sub_1000BBFB0();
  uint64_t v202 = 0;
  uint64_t v44 = v204;
  *((void *)v204 + 1) = v42;
  *((void *)v44 + 2) = v43;
  LOBYTE(v205) = 8;
  uint64_t v45 = v202;
  uint64_t v46 = sub_1000BBFB0();
  uint64_t v202 = v45;
  if (v45)
  {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
    LODWORD(v201) = 0;
    uint64_t v48 = -28;
LABEL_89:
    unint64_t v23 = (v48 & 0xFFFFFFFFFFFFLL | 0x3F000000000000) + 1851423;
    goto LABEL_4;
  }
  uint64_t v49 = v204;
  *((void *)v204 + 3) = v46;
  *((void *)v49 + 4) = v47;
  LOBYTE(v205) = 9;
  uint64_t v50 = v202;
  uint64_t v51 = sub_1000BBFB0();
  uint64_t v202 = v50;
  if (v50)
  {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
    LODWORD(v201) = 0;
    uint64_t v48 = -24;
    goto LABEL_89;
  }
  uint64_t v53 = v204;
  *((void *)v204 + 5) = v51;
  *((void *)v53 + 6) = v52;
  LOBYTE(v205) = 10;
  uint64_t v54 = v202;
  uint64_t v55 = sub_1000BBFB0();
  uint64_t v202 = v54;
  if (v54)
  {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
    LODWORD(v201) = 0;
    unint64_t v23 = 0x400000001C400FLL;
    goto LABEL_4;
  }
  uint64_t v57 = v204;
  *((void *)v204 + 7) = v55;
  *((void *)v57 + 8) = v56;
  LOBYTE(v205) = 11;
  uint64_t v58 = v202;
  char v59 = sub_1000BBFC0();
  uint64_t v202 = v58;
  if (v58) {
    goto LABEL_98;
  }
  v204[72] = v59;
  LOBYTE(v205) = 12;
  uint64_t v60 = v202;
  char v61 = sub_1000BBFC0();
  uint64_t v202 = v60;
  if (v60) {
    goto LABEL_98;
  }
  v204[73] = v61;
  LOBYTE(v205) = 13;
  uint64_t v62 = v202;
  char v63 = sub_1000BBFC0();
  uint64_t v202 = v62;
  if (v62) {
    goto LABEL_98;
  }
  v204[96] = v63;
  LOBYTE(v205) = 14;
  uint64_t v64 = v202;
  char v65 = sub_1000BBFC0();
  uint64_t v202 = v64;
  if (v64) {
    goto LABEL_98;
  }
  v204[98] = v65;
  LOBYTE(v205) = 15;
  uint64_t v66 = v202;
  char v67 = sub_1000BBFC0();
  uint64_t v202 = v66;
  if (v66 || (v204[99] = v67, v212 = 16, sub_10003ACC8(), uint64_t v68 = v202, sub_1000BC000(), (v202 = v68) != 0))
  {
LABEL_98:
    unsigned __int16 v69 = 16415;
LABEL_83:
    unint64_t v23 = v69 | 0x1C0000u;
LABEL_84:
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
    LODWORD(v201) = 0;
    goto LABEL_4;
  }
  *((_OWORD *)v204 + 5) = v205;
  LOBYTE(v205) = 17;
  uint64_t v70 = v202;
  char v71 = sub_1000BBFC0();
  uint64_t v202 = v70;
  if (v70) {
    goto LABEL_102;
  }
  v204[97] = v71;
  LOBYTE(v205) = 18;
  uint64_t v72 = v202;
  uint64_t v73 = sub_1000BBFE0();
  uint64_t v202 = v72;
  if (v72
    || (uint64_t v75 = v204,
        *((void *)v204 + 13) = v73,
        v75[112] = v74 & 1,
        LOBYTE(v205) = 19,
        uint64_t v76 = v202,
        uint64_t v77 = sub_1000BBFB0(),
        (uint64_t v202 = v76) != 0))
  {
LABEL_102:
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
    LODWORD(v201) = 0;
    unint64_t v23 = 1851551;
  }
  else
  {
    uint64_t v79 = v204;
    *((void *)v204 + 15) = v77;
    *((void *)v79 + 16) = v78;
    LOBYTE(v205) = 22;
    uint64_t v80 = v202;
    uint64_t v81 = sub_1000BBFB0();
    uint64_t v202 = v80;
    if (v80)
    {
      unsigned __int16 v69 = 24735;
      goto LABEL_83;
    }
    uint64_t v83 = (uint64_t *)&v204[v203[26]];
    *uint64_t v83 = v81;
    v83[1] = v82;
    char v212 = 23;
    uint64_t v84 = v202;
    sub_1000BC000();
    uint64_t v202 = v84;
    if (v84)
    {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
      LODWORD(v201) = 0;
      unint64_t v23 = 6054047;
    }
    else
    {
      *(_OWORD *)&v204[v203[27]] = v205;
      char v212 = 24;
      sub_1000A9188();
      uint64_t v85 = v202;
      sub_1000BC000();
      uint64_t v202 = v85;
      if (v85)
      {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
        LODWORD(v201) = 0;
        unint64_t v23 = 14442655;
      }
      else
      {
        int v86 = v209;
        char v87 = v210;
        unint64_t v88 = &v204[v203[28]];
        long long v89 = v206;
        *(_OWORD *)unint64_t v88 = v205;
        *((_OWORD *)v88 + 1) = v89;
        long long v90 = v208;
        *((_OWORD *)v88 + 2) = v207;
        *((_OWORD *)v88 + 3) = v90;
        v88[68] = v87;
        *((_DWORD *)v88 + 16) = v86;
        LOBYTE(v205) = 25;
        uint64_t v91 = v202;
        uint64_t v92 = sub_1000BBFB0();
        uint64_t v202 = v91;
        if (v91)
        {
          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
          LODWORD(v201) = 0;
          unint64_t v23 = 31219871;
        }
        else
        {
          uint64_t v94 = (uint64_t *)&v204[v203[31]];
          *uint64_t v94 = v92;
          v94[1] = v93;
          LOBYTE(v205) = 26;
          uint64_t v95 = v202;
          uint64_t v96 = sub_1000BBFB0();
          uint64_t v202 = v95;
          if (v95)
          {
            (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
            LODWORD(v201) = 0;
            unint64_t v23 = 165437599;
          }
          else
          {
            uint64_t v98 = (uint64_t *)&v204[v203[32]];
            *uint64_t v98 = v96;
            v98[1] = v97;
            LOBYTE(v205) = 27;
            uint64_t v99 = v202;
            uint64_t v100 = sub_1000BBFB0();
            uint64_t v202 = v99;
            if (v99)
            {
              (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
              LODWORD(v201) = 0;
              unint64_t v23 = 433873055;
            }
            else
            {
              uint64_t v102 = (uint64_t *)&v204[v203[33]];
              *uint64_t v102 = v100;
              v102[1] = v101;
              char v212 = 28;
              uint64_t v103 = v202;
              sub_1000BC000();
              uint64_t v202 = v103;
              if (v103)
              {
                (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                LODWORD(v201) = 0;
                unint64_t v23 = 970743967;
              }
              else
              {
                *(_OWORD *)&v204[v203[30]] = v205;
                char v212 = 29;
                uint64_t v104 = v202;
                sub_1000BC000();
                uint64_t v202 = v104;
                if (v104)
                {
                  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                  LODWORD(v201) = 0;
                  unint64_t v23 = 1037852831;
                }
                else
                {
                  *(_OWORD *)&v204[v203[34]] = v205;
                  char v212 = 30;
                  uint64_t v105 = v202;
                  sub_1000BC000();
                  uint64_t v202 = v105;
                  if (v105)
                  {
                    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                    LODWORD(v201) = 0;
                    unint64_t v23 = 2111594655;
                  }
                  else
                  {
                    *(_OWORD *)&v204[v203[29]] = v205;
                    char v212 = 31;
                    uint64_t v106 = v202;
                    sub_1000BC000();
                    uint64_t v202 = v106;
                    if (v106)
                    {
                      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                      LODWORD(v201) = 0;
                      unint64_t v23 = 2145149087;
                    }
                    else
                    {
                      *(_OWORD *)&v204[v203[35]] = v205;
                      LOBYTE(v205) = 32;
                      uint64_t v107 = v202;
                      uint64_t v108 = sub_1000BBFB0();
                      uint64_t v202 = v107;
                      if (v107)
                      {
                        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                        LODWORD(v201) = 0;
                        unint64_t v23 = 4292632735;
                      }
                      else
                      {
                        uint64_t v110 = (uint64_t *)&v204[v203[36]];
                        *uint64_t v110 = v108;
                        v110[1] = v109;
                        char v212 = 33;
                        uint64_t v111 = v202;
                        sub_1000BC000();
                        uint64_t v202 = v111;
                        if (v111)
                        {
                          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                          LODWORD(v201) = 0;
                          unint64_t v23 = 0x1FFDC609FLL;
                        }
                        else
                        {
                          *(_OWORD *)&v204[v203[37]] = v205;
                          LOBYTE(v205) = 20;
                          uint64_t v112 = v202;
                          uint64_t v113 = sub_1000BBFE0();
                          uint64_t v202 = v112;
                          if (v112) {
                            goto LABEL_129;
                          }
                          uint64_t v115 = &v204[v203[19]];
                          *(void *)uint64_t v115 = v113;
                          v115[8] = v114 & 1;
                          sub_1000B8340();
                          LOBYTE(v205) = 21;
                          sub_1000A91DC(&qword_1000ED4D8, (void (*)(uint64_t))&type metadata accessor for Date);
                          uint64_t v116 = v202;
                          sub_1000BC000();
                          uint64_t v202 = v116;
                          if (v116)
                          {
LABEL_129:
                            unint64_t v23 = 0x3FFDC609FLL;
                            goto LABEL_84;
                          }
                          sub_10001836C(v16, (uint64_t)&v204[v203[20]], &qword_1000EC790);
                          LOBYTE(v205) = 36;
                          uint64_t v117 = v202;
                          uint64_t v118 = sub_1000BBFB0();
                          uint64_t v202 = v117;
                          if (v117)
                          {
                            (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                            LODWORD(v201) = 0;
                            unint64_t v23 = 0x3FFDD609FLL;
                          }
                          else
                          {
                            uint64_t v120 = (uint64_t *)&v204[v203[40]];
                            *uint64_t v120 = v118;
                            v120[1] = v119;
                            LOBYTE(v205) = 35;
                            uint64_t v121 = v202;
                            uint64_t v122 = sub_1000BBFE0();
                            uint64_t v202 = v121;
                            if (v121
                              || (uint64_t v124 = &v204[v203[39]],
                                  *(void *)uint64_t v124 = v122,
                                  v124[8] = v123 & 1,
                                  LOBYTE(v205) = 34,
                                  uint64_t v125 = v202,
                                  uint64_t v126 = sub_1000BBFB0(),
                                  (uint64_t v202 = v125) != 0))
                            {
                              unint64_t v23 = 0x13FFDD609FLL;
                              goto LABEL_84;
                            }
                            uint64_t v128 = (uint64_t *)&v204[v203[38]];
                            *uint64_t v128 = v126;
                            v128[1] = v127;
                            char v212 = 38;
                            uint64_t v129 = v202;
                            sub_1000BC000();
                            uint64_t v202 = v129;
                            if (v129)
                            {
                              (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                              LODWORD(v201) = 0;
                              unint64_t v23 = 0x17FFDD609FLL;
                            }
                            else
                            {
                              *(_OWORD *)&v204[v203[42]] = v205;
                              char v212 = 37;
                              uint64_t v130 = v202;
                              sub_1000BC000();
                              uint64_t v202 = v130;
                              if (v130)
                              {
                                (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                                LODWORD(v201) = 0;
                                unint64_t v23 = 0x57FFDD609FLL;
                              }
                              else
                              {
                                *(_OWORD *)&v204[v203[41]] = v205;
                                char v212 = 39;
                                uint64_t v131 = v202;
                                sub_1000BC000();
                                uint64_t v202 = v131;
                                if (v131)
                                {
                                  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                                  LODWORD(v201) = 0;
                                  unint64_t v23 = 0x77FFDD609FLL;
                                }
                                else
                                {
                                  *(_OWORD *)&v204[v203[43]] = v205;
                                  LOBYTE(v205) = 40;
                                  uint64_t v132 = v202;
                                  uint64_t v133 = sub_1000BBFB0();
                                  uint64_t v202 = v132;
                                  if (v132)
                                  {
                                    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                                    LODWORD(v201) = 0;
                                    unint64_t v23 = 0xF7FFDD609FLL;
                                  }
                                  else
                                  {
                                    long long v135 = (uint64_t *)&v204[v203[44]];
                                    *long long v135 = v133;
                                    v135[1] = v134;
                                    LOBYTE(v205) = 41;
                                    uint64_t v136 = v202;
                                    uint64_t v137 = sub_1000BBFB0();
                                    uint64_t v202 = v136;
                                    if (v136)
                                    {
                                      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                                      LODWORD(v201) = 0;
                                      unint64_t v23 = 0x1F7FFDD609FLL;
                                    }
                                    else
                                    {
                                      uint64_t v139 = (uint64_t *)&v204[v203[45]];
                                      *uint64_t v139 = v137;
                                      v139[1] = v138;
                                      LOBYTE(v205) = 42;
                                      uint64_t v140 = v202;
                                      uint64_t v141 = sub_1000BBFB0();
                                      uint64_t v202 = v140;
                                      if (v140)
                                      {
                                        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                                        LODWORD(v201) = 0;
                                        unint64_t v23 = 0x3F7FFDD609FLL;
                                      }
                                      else
                                      {
                                        unint64_t v143 = (uint64_t *)&v204[v203[46]];
                                        uint64_t *v143 = v141;
                                        v143[1] = v142;
                                        LOBYTE(v205) = 43;
                                        uint64_t v144 = v202;
                                        uint64_t v145 = sub_1000BBFB0();
                                        uint64_t v202 = v144;
                                        if (v144)
                                        {
                                          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                                          LODWORD(v201) = 0;
                                          unint64_t v23 = 0x7F7FFDD609FLL;
                                        }
                                        else
                                        {
                                          unint64_t v147 = (uint64_t *)&v204[v203[47]];
                                          *unint64_t v147 = v145;
                                          v147[1] = v146;
                                          LOBYTE(v205) = 44;
                                          uint64_t v148 = v202;
                                          uint64_t v149 = sub_1000BBFB0();
                                          uint64_t v202 = v148;
                                          if (v148)
                                          {
                                            (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                                            LODWORD(v201) = 0;
                                            unint64_t v23 = 0xFF7FFDD609FLL;
                                          }
                                          else
                                          {
                                            unint64_t v23 = 0x1FF7FFDD609FLL;
                                            unint64_t v151 = (uint64_t *)&v204[v203[48]];
                                            uint64_t *v151 = v149;
                                            v151[1] = v150;
                                            LOBYTE(v205) = 45;
                                            uint64_t v152 = v202;
                                            char v153 = sub_1000BBFC0();
                                            uint64_t v202 = v152;
                                            if (v152) {
                                              goto LABEL_84;
                                            }
                                            v204[v203[49]] = v153;
                                            LOBYTE(v205) = 46;
                                            uint64_t v154 = v202;
                                            uint64_t v155 = sub_1000BBFB0();
                                            uint64_t v202 = v154;
                                            if (v154) {
                                              goto LABEL_84;
                                            }
                                            unint64_t v23 = 0x5FF7FFDD609FLL;
                                            unint64_t v157 = (uint64_t *)&v204[v203[50]];
                                            uint64_t *v157 = v155;
                                            v157[1] = v156;
                                            LOBYTE(v205) = 47;
                                            uint64_t v158 = v202;
                                            uint64_t v159 = sub_1000BBFE0();
                                            uint64_t v202 = v158;
                                            if (v158) {
                                              goto LABEL_84;
                                            }
                                            uint64_t v161 = &v204[v203[51]];
                                            *(void *)uint64_t v161 = v159;
                                            v161[8] = v160 & 1;
                                            LOBYTE(v205) = 48;
                                            uint64_t v162 = v202;
                                            uint64_t v163 = sub_1000BBFB0();
                                            uint64_t v202 = v162;
                                            if (v162) {
                                              goto LABEL_84;
                                            }
                                            uint64_t v165 = (uint64_t *)&v204[v203[52]];
                                            *uint64_t v165 = v163;
                                            v165[1] = v164;
                                            LOBYTE(v205) = 52;
                                            uint64_t v166 = v202;
                                            uint64_t v167 = sub_1000BBFB0();
                                            uint64_t v202 = v166;
                                            if (!v166)
                                            {
                                              unint64_t v169 = (uint64_t *)&v204[v203[56]];
                                              uint64_t *v169 = v167;
                                              v169[1] = v168;
                                              LOBYTE(v205) = 49;
                                              uint64_t v170 = v202;
                                              uint64_t v171 = sub_1000BBFB0();
                                              BOOL v211 = v170 == 0;
                                              uint64_t v202 = v170;
                                              if (!v170)
                                              {
                                                uint64_t v173 = (uint64_t *)&v204[v203[53]];
                                                uint64_t *v173 = v171;
                                                v173[1] = v172;
                                                LOBYTE(v205) = 50;
                                                uint64_t v174 = v202;
                                                uint64_t v175 = sub_1000BBFF0();
                                                uint64_t v202 = v174;
                                                if (!v174)
                                                {
                                                  unint64_t v177 = &v204[v203[54]];
                                                  *(void *)unint64_t v177 = v175;
                                                  v177[8] = v176 & 1;
                                                  LOBYTE(v205) = 51;
                                                  uint64_t v178 = v202;
                                                  uint64_t v179 = sub_1000BC030();
                                                  uint64_t v202 = v178;
                                                  if (!v178)
                                                  {
                                                    id v181 = &v204[v203[55]];
                                                    *(void *)id v181 = v179;
                                                    v181[8] = v180 & 1;
                                                    char v212 = 53;
                                                    uint64_t v182 = v202;
                                                    sub_1000BC000();
                                                    uint64_t v202 = v182;
                                                    if (!v182)
                                                    {
                                                      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                                                      uint64_t v184 = (uint64_t)v204;
                                                      *(void *)&v204[v203[57]] = v205;
                                                      sub_100018538(v184, a2);
                                                      sub_100015C54(v200);
                                                      sub_10001861C(v184);
                                                      return;
                                                    }
                                                  }
                                                }
                                              }
                                              (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                                              sub_100015C54(v200);
                                              uint64_t v183 = v204;
                                              swift_bridgeObjectRelease();
                                              swift_bridgeObjectRelease();
                                              swift_bridgeObjectRelease();
                                              swift_bridgeObjectRelease();
                                              swift_bridgeObjectRelease();
                                              sub_1000180CC(*((void *)v183 + 10), *((void *)v183 + 11));
                                              swift_bridgeObjectRelease();
                                              uint64_t v27 = (uint64_t)v203;
                                              sub_1000184DC((uint64_t)&v183[v203[18]], &qword_1000EC678);
                                              sub_1000184DC((uint64_t)&v183[*(int *)(v27 + 80)], &qword_1000EC790);
                                              swift_bridgeObjectRelease();
                                              swift_bridgeObjectRelease();
                                              swift_bridgeObjectRelease();
                                              swift_bridgeObjectRelease();
                                              int v195 = 1;
                                              LODWORD(v201) = 1;
                                              unint64_t v200 = 1;
                                              uint64_t v199 = 1;
                                              uint64_t v198 = 1;
                                              uint64_t v197 = 1;
                                              uint64_t v196 = 1;
                                              uint64_t v194 = 1;
                                              uint64_t v193 = 1;
                                              LODWORD(v29) = 1;
                                              uint64_t v192 = 1;
                                              uint64_t v191 = 1;
                                              uint64_t v190 = 1;
                                              uint64_t v189 = 1;
                                              uint64_t v188 = 1;
                                              uint64_t v187 = 1;
                                              uint64_t v186 = 1;
                                              LODWORD(v28) = 1;
                                              LODWORD(v27) = 1;
                                              LODWORD(v26) = 1;
                                              LODWORD(v11) = 1;
                                              LODWORD(v25) = 1;
                                              LOBYTE(v24) = 1;
LABEL_19:
                                              sub_1000180CC(*(void *)&v204[v203[27]], *(void *)&v204[v203[27] + 8]);
                                              if ((v24 & 1) == 0) {
                                                goto LABEL_20;
                                              }
                                              goto LABEL_58;
                                            }
                                            (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v199, v201);
                                            unint64_t v23 = 0x15FF7FFDD609FLL;
                                            LODWORD(v201) = 1;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_4:
  sub_100015C54(v200);
  uint64_t v24 = (v23 >> 24) & 1;
  uint64_t v25 = (v23 >> 25) & 1;
  uint64_t v11 = (v23 >> 26) & 1;
  uint64_t v26 = (v23 >> 27) & 1;
  uint64_t v27 = (v23 >> 28) & 1;
  uint64_t v28 = (v23 >> 29) & 1;
  uint64_t v186 = (v23 >> 30) & 1;
  uint64_t v187 = (v23 >> 31) & 1;
  uint64_t v188 = HIDWORD(v23) & 1;
  uint64_t v189 = (v23 >> 33) & 1;
  uint64_t v190 = (v23 >> 34) & 1;
  uint64_t v191 = (v23 >> 36) & 1;
  uint64_t v192 = (v23 >> 37) & 1;
  uint64_t v29 = (v23 >> 38) & 1;
  uint64_t v193 = (v23 >> 39) & 1;
  uint64_t v194 = (v23 >> 40) & 1;
  uint64_t v196 = (v23 >> 41) & 1;
  uint64_t v197 = (v23 >> 42) & 1;
  uint64_t v198 = (v23 >> 43) & 1;
  uint64_t v199 = (v23 >> 44) & 1;
  unint64_t v200 = (v23 >> 46) & 1;
  if (v23)
  {
    swift_bridgeObjectRelease();
    if ((v23 & 2) == 0)
    {
LABEL_6:
      if ((v23 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_46;
    }
  }
  else if ((v23 & 2) == 0)
  {
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  if ((v23 & 4) == 0)
  {
LABEL_7:
    if ((v23 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_47;
  }
LABEL_46:
  swift_bridgeObjectRelease();
  if ((v23 & 8) == 0)
  {
LABEL_8:
    if ((v23 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_48;
  }
LABEL_47:
  swift_bridgeObjectRelease();
  if ((v23 & 0x10) == 0)
  {
LABEL_9:
    if ((v23 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_49;
  }
LABEL_48:
  swift_bridgeObjectRelease();
  if ((v23 & 0x80) == 0)
  {
LABEL_10:
    if ((v23 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_50;
  }
LABEL_49:
  sub_1000180CC(*((void *)v204 + 10), *((void *)v204 + 11));
  if ((v23 & 0x2000) == 0)
  {
LABEL_11:
    if ((v23 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_51;
  }
LABEL_50:
  swift_bridgeObjectRelease();
  if ((v23 & 0x4000) == 0)
  {
LABEL_12:
    if ((v23 & 0x10000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_52;
  }
LABEL_51:
  sub_1000184DC((uint64_t)&v204[v203[18]], &qword_1000EC678);
  if ((v23 & 0x10000) == 0)
  {
LABEL_13:
    if ((v23 & 0x40000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_53;
  }
LABEL_52:
  sub_1000184DC((uint64_t)&v204[v203[20]], &qword_1000EC790);
  if ((v23 & 0x40000) == 0)
  {
LABEL_14:
    if ((v23 & 0x80000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_54;
  }
LABEL_53:
  swift_bridgeObjectRelease();
  if ((v23 & 0x80000) == 0)
  {
LABEL_15:
    if ((v23 & 0x100000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_55;
  }
LABEL_54:
  swift_bridgeObjectRelease();
  if ((v23 & 0x100000) == 0)
  {
LABEL_16:
    if ((v23 & 0x400000) == 0) {
      goto LABEL_17;
    }
LABEL_56:
    swift_bridgeObjectRelease();
    if ((v23 & 0x800000) != 0) {
      goto LABEL_18;
    }
    goto LABEL_57;
  }
LABEL_55:
  swift_bridgeObjectRelease();
  if ((v23 & 0x400000) != 0) {
    goto LABEL_56;
  }
LABEL_17:
  if ((v23 & 0x800000) != 0)
  {
LABEL_18:
    int v195 = 0;
    BOOL v211 = 0;
    goto LABEL_19;
  }
LABEL_57:
  BOOL v211 = 0;
  int v195 = 0;
  if ((v23 & 0x1000000) == 0)
  {
LABEL_20:
    if (v25) {
      goto LABEL_21;
    }
    goto LABEL_59;
  }
LABEL_58:
  char v30 = &v204[v203[28]];
  sub_1000A9108(*(void *)v30, *((void *)v30 + 1), *((void *)v30 + 2), *((void *)v30 + 3), *((void *)v30 + 4), *((void *)v30 + 5), *((void *)v30 + 6), *((void *)v30 + 7));
  if (v25)
  {
LABEL_21:
    sub_1000180CC(*(void *)&v204[v203[29]], *(void *)&v204[v203[29] + 8]);
    if ((v11 & 1) == 0) {
      goto LABEL_22;
    }
    goto LABEL_60;
  }
LABEL_59:
  if (!v11)
  {
LABEL_22:
    if (v26) {
      goto LABEL_23;
    }
    goto LABEL_61;
  }
LABEL_60:
  sub_1000180CC(*(void *)&v204[v203[30]], *(void *)&v204[v203[30] + 8]);
  if (v26)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0) {
      goto LABEL_24;
    }
    goto LABEL_62;
  }
LABEL_61:
  if (!v27)
  {
LABEL_24:
    if (v28) {
      goto LABEL_25;
    }
    goto LABEL_63;
  }
LABEL_62:
  swift_bridgeObjectRelease();
  if (v28)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    if ((v186 & 1) == 0) {
      goto LABEL_26;
    }
    goto LABEL_64;
  }
LABEL_63:
  if (!v186)
  {
LABEL_26:
    if (v187) {
      goto LABEL_27;
    }
    goto LABEL_65;
  }
LABEL_64:
  sub_1000180CC(*(void *)&v204[v203[34]], *(void *)&v204[v203[34] + 8]);
  if (v187)
  {
LABEL_27:
    sub_1000180CC(*(void *)&v204[v203[35]], *(void *)&v204[v203[35] + 8]);
    if ((v188 & 1) == 0) {
      goto LABEL_28;
    }
    goto LABEL_66;
  }
LABEL_65:
  if (!v188)
  {
LABEL_28:
    if (v189) {
      goto LABEL_29;
    }
    goto LABEL_67;
  }
LABEL_66:
  swift_bridgeObjectRelease();
  if (v189)
  {
LABEL_29:
    sub_1000180CC(*(void *)&v204[v203[37]], *(void *)&v204[v203[37] + 8]);
    if ((v190 & 1) == 0) {
      goto LABEL_30;
    }
    goto LABEL_68;
  }
LABEL_67:
  if (!v190)
  {
LABEL_30:
    if (v191) {
      goto LABEL_31;
    }
    goto LABEL_69;
  }
LABEL_68:
  swift_bridgeObjectRelease();
  if (v191)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    if ((v192 & 1) == 0) {
      goto LABEL_32;
    }
    goto LABEL_70;
  }
LABEL_69:
  if (!v192)
  {
LABEL_32:
    if (v29) {
      goto LABEL_33;
    }
    goto LABEL_71;
  }
LABEL_70:
  sub_1000180CC(*(void *)&v204[v203[41]], *(void *)&v204[v203[41] + 8]);
  if (v29)
  {
LABEL_33:
    sub_1000180CC(*(void *)&v204[v203[42]], *(void *)&v204[v203[42] + 8]);
    if ((v193 & 1) == 0) {
      goto LABEL_34;
    }
    goto LABEL_72;
  }
LABEL_71:
  if (!v193)
  {
LABEL_34:
    if (v194) {
      goto LABEL_35;
    }
    goto LABEL_73;
  }
LABEL_72:
  sub_1000180CC(*(void *)&v204[v203[43]], *(void *)&v204[v203[43] + 8]);
  if (v194)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    if ((v196 & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_74;
  }
LABEL_73:
  if (!v196)
  {
LABEL_36:
    if (v197) {
      goto LABEL_37;
    }
    goto LABEL_75;
  }
LABEL_74:
  swift_bridgeObjectRelease();
  if (v197)
  {
LABEL_37:
    swift_bridgeObjectRelease();
    if ((v198 & 1) == 0) {
      goto LABEL_38;
    }
    goto LABEL_76;
  }
LABEL_75:
  if (!v198)
  {
LABEL_38:
    if (v199) {
      goto LABEL_39;
    }
    goto LABEL_77;
  }
LABEL_76:
  swift_bridgeObjectRelease();
  if (v199)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    if ((v200 & 1) == 0) {
      goto LABEL_40;
    }
    goto LABEL_78;
  }
LABEL_77:
  if (!v200)
  {
LABEL_40:
    if (v201) {
      goto LABEL_41;
    }
    goto LABEL_79;
  }
LABEL_78:
  swift_bridgeObjectRelease();
  if (v201)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    if (!v211) {
      goto LABEL_42;
    }
LABEL_80:
    swift_bridgeObjectRelease();
    if ((v195 & 1) == 0) {
      return;
    }
    goto LABEL_81;
  }
LABEL_79:
  if (v211) {
    goto LABEL_80;
  }
LABEL_42:
  if (!v195) {
    return;
  }
LABEL_81:
  swift_bridgeObjectRelease();
}

uint64_t MessageDictionary.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001295C(&qword_1000EDDE8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_10003A038();
  sub_1000BC280();
  uint64_t v9 = (int *)type metadata accessor for MessageDictionary();
  LOBYTE(v17) = 0;
  sub_1000BC0E0();
  if (!v2)
  {
    LOBYTE(v17) = 1;
    sub_1000BC0A0();
    LOBYTE(v17) = 2;
    sub_1000B8380();
    sub_1000A91DC(&qword_1000EDC50, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_1000BC0F0();
    LOBYTE(v17) = 3;
    sub_1000BC0A0();
    LOBYTE(v17) = 4;
    sub_1000BC0A0();
    LOBYTE(v17) = 5;
    sub_1000BC120();
    *(void *)&long long v17 = *(void *)v3;
    char v23 = 6;
    sub_10001295C(&qword_1000EC550);
    sub_100015CA4(&qword_1000EC558);
    sub_1000BC0F0();
    LOBYTE(v17) = 7;
    sub_1000BC0A0();
    LOBYTE(v17) = 8;
    sub_1000BC0A0();
    LOBYTE(v17) = 9;
    sub_1000BC0A0();
    LOBYTE(v17) = 10;
    sub_1000BC0A0();
    LOBYTE(v17) = 11;
    sub_1000BC0B0();
    LOBYTE(v17) = 12;
    sub_1000BC0B0();
    LOBYTE(v17) = 13;
    sub_1000BC0B0();
    LOBYTE(v17) = 14;
    sub_1000BC0B0();
    LOBYTE(v17) = 15;
    sub_1000BC0B0();
    long long v17 = *(_OWORD *)(v3 + 80);
    char v23 = 16;
    v16[1] = sub_10003AD8C();
    sub_1000BC0F0();
    LOBYTE(v17) = 17;
    sub_1000BC0B0();
    LOBYTE(v17) = 18;
    sub_1000BC0D0();
    LOBYTE(v17) = 19;
    sub_1000BC0A0();
    LOBYTE(v17) = 20;
    sub_1000BC0D0();
    v16[0] = v3 + v9[20];
    LOBYTE(v17) = 21;
    sub_1000B8340();
    sub_1000A91DC(&qword_1000ED508, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000BC0F0();
    LOBYTE(v17) = 22;
    sub_1000BC0A0();
    long long v17 = *(_OWORD *)(v3 + v9[27]);
    char v23 = 23;
    sub_1000BC0F0();
    uint64_t v10 = (long long *)(v3 + v9[28]);
    int v11 = *((_DWORD *)v10 + 16);
    char v12 = *((unsigned char *)v10 + 68);
    long long v13 = v10[1];
    long long v17 = *v10;
    long long v18 = v13;
    long long v14 = v10[3];
    long long v19 = v10[2];
    long long v20 = v14;
    char v22 = v12;
    int v21 = v11;
    char v23 = 24;
    sub_1000A9224();
    sub_1000BC0F0();
    LOBYTE(v17) = 25;
    sub_1000BC0A0();
    LOBYTE(v17) = 26;
    sub_1000BC0A0();
    LOBYTE(v17) = 27;
    sub_1000BC0A0();
    long long v17 = *(_OWORD *)(v3 + v9[30]);
    char v23 = 28;
    sub_1000BC0F0();
    long long v17 = *(_OWORD *)(v3 + v9[34]);
    char v23 = 29;
    sub_1000BC0F0();
    long long v17 = *(_OWORD *)(v3 + v9[29]);
    char v23 = 30;
    sub_1000BC0F0();
    long long v17 = *(_OWORD *)(v3 + v9[35]);
    char v23 = 31;
    sub_1000BC0F0();
    LOBYTE(v17) = 32;
    sub_1000BC0A0();
    long long v17 = *(_OWORD *)(v3 + v9[37]);
    char v23 = 33;
    sub_1000BC0F0();
    LOBYTE(v17) = 34;
    sub_1000BC0A0();
    LOBYTE(v17) = 35;
    sub_1000BC0D0();
    LOBYTE(v17) = 36;
    sub_1000BC0A0();
    long long v17 = *(_OWORD *)(v3 + v9[41]);
    char v23 = 37;
    sub_1000BC0F0();
    long long v17 = *(_OWORD *)(v3 + v9[42]);
    char v23 = 38;
    sub_1000BC0F0();
    long long v17 = *(_OWORD *)(v3 + v9[43]);
    char v23 = 39;
    sub_1000BC0F0();
    LOBYTE(v17) = 40;
    sub_1000BC0A0();
    LOBYTE(v17) = 41;
    sub_1000BC0A0();
    LOBYTE(v17) = 42;
    sub_1000BC0A0();
    LOBYTE(v17) = 43;
    sub_1000BC0A0();
    LOBYTE(v17) = 44;
    sub_1000BC0A0();
    LOBYTE(v17) = 45;
    sub_1000BC0B0();
    LOBYTE(v17) = 46;
    sub_1000BC0A0();
    LOBYTE(v17) = 47;
    sub_1000BC0D0();
    LOBYTE(v17) = 48;
    sub_1000BC0A0();
    LOBYTE(v17) = 49;
    sub_1000BC0A0();
    LOBYTE(v17) = 50;
    sub_1000BC0E0();
    LOBYTE(v17) = 51;
    sub_1000BC120();
    LOBYTE(v17) = 52;
    sub_1000BC0A0();
    *(void *)&long long v17 = *(void *)(v3 + v9[57]);
    char v23 = 53;
    sub_1000BC0F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1000A8C2C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1000A8C44(void *a1)
{
  return MessageDictionary.encode(to:)(a1);
}

MessagesBlastDoorService::MessageDictionary::CodingKeys_optional __swiftcall MessageDictionary.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  return (MessagesBlastDoorService::MessageDictionary::CodingKeys_optional)54;
}

unint64_t MessageDictionary.CodingKeys.rawValue.getter(char a1)
{
  unint64_t result = 30320;
  switch(a1)
  {
    case 1:
      unint64_t result = 30311;
      break;
    case 2:
      unint64_t result = 114;
      break;
    case 3:
      unint64_t result = 6580583;
      break;
    case 4:
      unint64_t result = 110;
      break;
    case 5:
      unint64_t result = 1970434151;
      break;
    case 6:
      unint64_t result = 112;
      break;
    case 7:
      unint64_t result = 115;
      break;
    case 8:
      unint64_t result = 116;
      break;
    case 9:
      unint64_t result = 120;
      break;
    case 10:
      unint64_t result = 30825;
      break;
    case 11:
      unint64_t result = 117;
      break;
    case 12:
      unint64_t result = 97;
      break;
    case 13:
      unint64_t result = 29281;
      break;
    case 14:
      unint64_t result = 7565171;
      break;
    case 15:
      unint64_t result = 99;
      break;
    case 16:
      unint64_t result = 808280425;
      break;
    case 17:
      unint64_t result = 101;
      break;
    case 18:
      unint64_t result = 28786;
      break;
    case 19:
      unint64_t result = 29549;
      break;
    case 20:
      unint64_t result = 29811;
      break;
    case 21:
      unint64_t result = 25715;
      break;
    case 22:
      unint64_t result = 6580578;
      break;
    case 23:
      unint64_t result = 28770;
      break;
    case 24:
      unint64_t result = 1768190050;
      break;
    case 25:
      unint64_t result = 26484;
      break;
    case 26:
      unint64_t result = 6711156;
      break;
    case 27:
      unint64_t result = 6580585;
      break;
    case 28:
      unint64_t result = 6515060;
      break;
    case 29:
      unint64_t result = 6910829;
      break;
    case 30:
      unint64_t result = 6911073;
      break;
    case 31:
      unint64_t result = 6581363;
      break;
    case 32:
      unint64_t result = 0xD000000000000011;
      break;
    case 33:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 34:
      unint64_t result = 0x546567617373654DLL;
      break;
    case 35:
    case 36:
      unint64_t result = 0xD000000000000012;
      break;
    case 37:
      unint64_t result = 0x4B4457524C6ELL;
      break;
    case 38:
      unint64_t result = 1262770030;
      break;
    case 39:
      unint64_t result = 1263359854;
      break;
    case 40:
      unint64_t result = 1145655920;
      break;
    case 41:
      unint64_t result = 6517345;
      break;
    case 42:
      unint64_t result = 6648417;
      break;
    case 43:
      unint64_t result = 0x7372676F61;
      break;
    case 44:
      unint64_t result = 0x6572676F61;
      break;
    case 45:
      unint64_t result = 1734766451;
      break;
    case 46:
      unint64_t result = 0x646967666F73;
      break;
    case 47:
      unint64_t result = 7630177;
      break;
    case 48:
      unint64_t result = 7040353;
      break;
    case 49:
      unint64_t result = 6712673;
      break;
    case 50:
      unint64_t result = 0x636C726D61;
      break;
    case 51:
      unint64_t result = 0x6E6C726D61;
      break;
    case 52:
      unint64_t result = 6647137;
      break;
    case 53:
      unint64_t result = 26226;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for MessageDictionary()
{
  uint64_t result = qword_1000EDE88;
  if (!qword_1000EDE88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000A9108(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_1000180CC(a3, a4);
    swift_bridgeObjectRelease();
    sub_1000180CC(a7, a8);
  }
}

unint64_t sub_1000A9188()
{
  unint64_t result = qword_1000EDDE0;
  if (!qword_1000EDDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDDE0);
  }
  return result;
}

uint64_t sub_1000A91DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000A9224()
{
  unint64_t result = qword_1000EDDF0;
  if (!qword_1000EDDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDDF0);
  }
  return result;
}

uint64_t sub_1000A9278(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = MessageDictionary.CodingKeys.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == MessageDictionary.CodingKeys.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1000BC1A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1000A9304()
{
  char v1 = *v0;
  sub_1000BC230();
  MessageDictionary.CodingKeys.rawValue.getter(v1);
  sub_1000BB990();
  swift_bridgeObjectRelease();
  return sub_1000BC250();
}

uint64_t sub_1000A9368()
{
  MessageDictionary.CodingKeys.rawValue.getter(*v0);
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000A93BC()
{
  char v1 = *v0;
  sub_1000BC230();
  MessageDictionary.CodingKeys.rawValue.getter(v1);
  sub_1000BB990();
  swift_bridgeObjectRelease();
  return sub_1000BC250();
}

uint64_t sub_1000A941C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s24MessagesBlastDoorService17MessageDictionaryV10CodingKeysO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_1000A944C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = MessageDictionary.CodingKeys.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000A9478()
{
  return MessageDictionary.CodingKeys.rawValue.getter(*v0);
}

uint64_t sub_1000A9480@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s24MessagesBlastDoorService17MessageDictionaryV10CodingKeysO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1000A94A8(unsigned char *a1@<X8>)
{
  *a1 = 54;
}

uint64_t sub_1000A94B4(uint64_t a1)
{
  unint64_t v2 = sub_10003A038();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000A94F0(uint64_t a1)
{
  unint64_t v2 = sub_10003A038();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BalloonPluginPayloadAttachment.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001295C(&qword_1000EDDF8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_100018458();
  sub_1000BC280();
  v13[0] = 0;
  sub_1000BC0A0();
  if (!v2)
  {
    sub_10001836C(v3 + 16, (uint64_t)v15, &qword_1000EC5F0);
    sub_10001836C((uint64_t)v15, (uint64_t)v13, &qword_1000EC5F0);
    char v12 = 1;
    sub_10003AD8C();
    sub_1000BC0F0();
    v13[0] = 2;
    sub_1000BC0A0();
    sub_10001836C(v3 + 48, (uint64_t)v14, &qword_1000EC5F0);
    sub_10001836C((uint64_t)v14, (uint64_t)v13, &qword_1000EC5F0);
    char v12 = 3;
    sub_1000BC0F0();
    char v9 = *(unsigned char *)(v3 + 68);
    v13[0] = 4;
    char v12 = v9;
    sub_1000BC100();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

__n128 BalloonPluginPayloadAttachment.init(from:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000A9ADC(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = *(_OWORD *)v7;
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 61) = *(void *)&v7[13];
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1000A97D8(void *a1)
{
  return BalloonPluginPayloadAttachment.encode(to:)(a1);
}

MessagesBlastDoorService::BalloonPluginPayloadAttachment::CodingKeys_optional __swiftcall BalloonPluginPayloadAttachment.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  object = stringValue._object;
  v5._countAndFlagsBits = stringValue._countAndFlagsBits;
  v2._rawValue = &off_1000E1E00;
  v5._object = object;
  unint64_t v3 = sub_1000BBFA0(v2, v5);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return (MessagesBlastDoorService::BalloonPluginPayloadAttachment::CodingKeys_optional)5;
  }
  else {
    return (MessagesBlastDoorService::BalloonPluginPayloadAttachment::CodingKeys_optional)v3;
  }
}

uint64_t BalloonPluginPayloadAttachment.CodingKeys.rawValue.getter(char a1)
{
  return *(void *)&aO_0[8 * a1];
}

uint64_t sub_1000A9884(char *a1, char *a2)
{
  return sub_10004E3D4(*a1, *a2);
}

Swift::Int sub_1000A9890()
{
  return sub_1000BC250();
}

uint64_t sub_1000A98EC()
{
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000A992C()
{
  return sub_1000BC250();
}

MessagesBlastDoorService::BalloonPluginPayloadAttachment::CodingKeys_optional sub_1000A9984@<W0>(Swift::String *a1@<X0>, MessagesBlastDoorService::BalloonPluginPayloadAttachment::CodingKeys_optional *a2@<X8>)
{
  result.CMTimeValue value = BalloonPluginPayloadAttachment.CodingKeys.init(stringValue:)(*a1).value;
  a2->CMTimeValue value = result.value;
  return result;
}

void sub_1000A99B4(void *a1@<X8>)
{
  *a1 = *(void *)&aO_0[8 * *v1];
  a1[1] = 0xE100000000000000;
}

uint64_t sub_1000A99D0()
{
  return *(void *)&aO_0[8 * *v0];
}

MessagesBlastDoorService::BalloonPluginPayloadAttachment::CodingKeys_optional sub_1000A99E8@<W0>(uint64_t a1@<X0>, MessagesBlastDoorService::BalloonPluginPayloadAttachment::CodingKeys_optional *a2@<X8>)
{
  result.CMTimeValue value = BalloonPluginPayloadAttachment.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->CMTimeValue value = result.value;
  return result;
}

uint64_t sub_1000A9A10(uint64_t a1)
{
  unint64_t v2 = sub_100018458();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000A9A4C(uint64_t a1)
{
  unint64_t v2 = sub_100018458();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t _s24MessagesBlastDoorService17MessageDictionaryV10CodingKeysO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0 = sub_1000BC1D0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x36) {
    return 54;
  }
  else {
    return v0;
  }
}

uint64_t sub_1000A9ADC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000EDF98);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_100018458();
  sub_1000BC270();
  if (v2) {
    return sub_100015C54((uint64_t)a1);
  }
  LOBYTE(v37) = 0;
  uint64_t v9 = sub_1000BBFB0();
  uint64_t v11 = v10;
  uint64_t v36 = v9;
  char v39 = 1;
  sub_10003ACC8();
  swift_bridgeObjectRetain();
  sub_1000BC000();
  uint64_t v34 = v11;
  uint64_t v12 = v37;
  unint64_t v13 = v38;
  LOBYTE(v37) = 2;
  uint64_t v33 = v12;
  sub_100017FA4(v12, v38);
  uint64_t v32 = 0;
  uint64_t v14 = sub_1000BBFB0();
  unint64_t v35 = v13;
  uint64_t v30 = v14;
  char v39 = 3;
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  sub_1000BC000();
  uint64_t v31 = v16;
  uint64_t v17 = v37;
  unint64_t v18 = v38;
  LOBYTE(v37) = 4;
  uint64_t v29 = v17;
  sub_100017FA4(v17, v38);
  uint64_t v19 = sub_1000BC010();
  unint64_t v20 = v35;
  int v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v32 = v19;
  v21(v8, v5);
  unint64_t v22 = v18;
  uint64_t v23 = v34;
  swift_bridgeObjectRetain();
  uint64_t v24 = v33;
  sub_100017FA4(v33, v20);
  uint64_t v25 = v31;
  swift_bridgeObjectRetain();
  uint64_t v26 = v29;
  sub_100017FA4(v29, v22);
  sub_1000180CC(v26, v22);
  swift_bridgeObjectRelease();
  sub_1000180CC(v24, v20);
  swift_bridgeObjectRelease();
  sub_100015C54((uint64_t)a1);
  swift_bridgeObjectRelease();
  sub_1000180CC(v24, v20);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1000180CC(v26, v22);
  *(void *)a2 = v36;
  *(void *)(a2 + 8) = v23;
  *(void *)(a2 + 16) = v24;
  *(void *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v30;
  *(void *)(a2 + 40) = v25;
  *(void *)(a2 + 48) = v26;
  *(void *)(a2 + 56) = v22;
  char v28 = BYTE4(v32);
  *(_DWORD *)(a2 + 64) = v32;
  *(unsigned char *)(a2 + 68) = v28 & 1;
  return result;
}

unint64_t sub_1000A9F90()
{
  unint64_t result = qword_1000EDE00;
  if (!qword_1000EDE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDE00);
  }
  return result;
}

unint64_t sub_1000A9FE8()
{
  unint64_t result = qword_1000EDE08;
  if (!qword_1000EDE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDE08);
  }
  return result;
}

unint64_t sub_1000AA040()
{
  unint64_t result = qword_1000EDE10;
  if (!qword_1000EDE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDE10);
  }
  return result;
}

unint64_t sub_1000AA098()
{
  unint64_t result = qword_1000EDE18;
  if (!qword_1000EDE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDE18);
  }
  return result;
}

unint64_t sub_1000AA0F0()
{
  unint64_t result = qword_1000EDE20;
  if (!qword_1000EDE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDE20);
  }
  return result;
}

unint64_t sub_1000AA148()
{
  unint64_t result = qword_1000EDE28;
  if (!qword_1000EDE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDE28);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MessageDictionary(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    uint64_t v9 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v9;
    uint64_t v10 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v10;
    uint64_t v11 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v11;
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(unsigned char *)(a1 + 73) = *((unsigned char *)a2 + 73);
    uint64_t v12 = a2 + 10;
    unint64_t v13 = a2[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 80) = *(_OWORD *)v12;
    }
    else
    {
      uint64_t v14 = *v12;
      sub_100017F4C(*v12, v13);
      *(void *)(a1 + 80) = v14;
      *(void *)(a1 + 88) = v13;
    }
    *(_DWORD *)(a1 + 96) = *((_DWORD *)a2 + 24);
    *(void *)(a1 + 104) = a2[13];
    *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    uint64_t v15 = a2[16];
    uint64_t v16 = a3[18];
    uint64_t v17 = (void *)(a1 + v16);
    unint64_t v18 = (char *)a2 + v16;
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v15;
    uint64_t v19 = sub_1000B8380();
    uint64_t v20 = *(void *)(v19 - 8);
    int v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    if (v21(v18, 1, v19))
    {
      uint64_t v22 = sub_10001295C(&qword_1000EC678);
      memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v23 = a3[19];
    uint64_t v24 = a3[20];
    uint64_t v25 = a1 + v23;
    uint64_t v26 = (uint64_t)a2 + v23;
    *(void *)uint64_t v25 = *(void *)v26;
    *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
    uint64_t v27 = (void *)(a1 + v24);
    char v28 = (char *)a2 + v24;
    uint64_t v29 = sub_1000B8340();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = sub_10001295C(&qword_1000EC790);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    uint64_t v32 = a3[21];
    uint64_t v33 = a3[22];
    uint64_t v34 = a1 + v32;
    uint64_t v35 = (uint64_t)a2 + v32;
    *(void *)uint64_t v34 = *(void *)v35;
    *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
    uint64_t v36 = (void *)(a1 + v33);
    uint64_t v37 = (uint64_t *)((char *)a2 + v33);
    uint64_t v38 = v37[1];
    void *v36 = *v37;
    v36[1] = v38;
    uint64_t v39 = a3[23];
    uint64_t v40 = a3[24];
    char v41 = (void *)(a1 + v39);
    uint64_t v42 = (uint64_t *)((char *)a2 + v39);
    uint64_t v43 = v42[1];
    void *v41 = *v42;
    v41[1] = v43;
    uint64_t v44 = (void *)(a1 + v40);
    uint64_t v45 = (uint64_t *)((char *)a2 + v40);
    uint64_t v46 = v45[1];
    void *v44 = *v45;
    v44[1] = v46;
    uint64_t v47 = a3[25];
    uint64_t v48 = a3[26];
    uint64_t v49 = a1 + v47;
    uint64_t v50 = (uint64_t)a2 + v47;
    *(void *)uint64_t v49 = *(void *)v50;
    *(unsigned char *)(v49 + 8) = *(unsigned char *)(v50 + 8);
    uint64_t v51 = (void *)(a1 + v48);
    uint64_t v52 = (uint64_t *)((char *)a2 + v48);
    uint64_t v53 = v52[1];
    *uint64_t v51 = *v52;
    v51[1] = v53;
    uint64_t v54 = a3[27];
    uint64_t v55 = a1 + v54;
    uint64_t v56 = (uint64_t *)((char *)a2 + v54);
    unint64_t v57 = *(uint64_t *)((char *)a2 + v54 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v57 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
    }
    else
    {
      uint64_t v58 = *v56;
      sub_100017F4C(*v56, v57);
      *(void *)uint64_t v55 = v58;
      *(void *)(v55 + 8) = v57;
    }
    uint64_t v59 = a3[28];
    uint64_t v60 = a1 + v59;
    uint64_t v61 = (uint64_t)a2 + v59;
    uint64_t v62 = *(uint64_t *)((char *)a2 + v59 + 8);
    if (v62 == 1)
    {
      long long v63 = *(_OWORD *)(v61 + 48);
      *(_OWORD *)(v60 + 32) = *(_OWORD *)(v61 + 32);
      *(_OWORD *)(v60 + 48) = v63;
      *(void *)(v60 + 61) = *(void *)(v61 + 61);
      long long v64 = *(_OWORD *)(v61 + 16);
      *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
      *(_OWORD *)(v60 + 16) = v64;
    }
    else
    {
      *(void *)uint64_t v60 = *(void *)v61;
      *(void *)(v60 + 8) = v62;
      char v65 = (_OWORD *)(v61 + 16);
      unint64_t v66 = *(void *)(v61 + 24);
      swift_bridgeObjectRetain();
      if (v66 >> 60 == 15)
      {
        *(_OWORD *)(v60 + 16) = *v65;
      }
      else
      {
        uint64_t v67 = *(void *)v65;
        sub_100017F4C(v67, v66);
        *(void *)(v60 + 16) = v67;
        *(void *)(v60 + 24) = v66;
      }
      uint64_t v68 = *(void *)(v61 + 40);
      *(void *)(v60 + 32) = *(void *)(v61 + 32);
      *(void *)(v60 + 40) = v68;
      unsigned __int16 v69 = (_OWORD *)(v61 + 48);
      unint64_t v70 = *(void *)(v61 + 56);
      swift_bridgeObjectRetain();
      if (v70 >> 60 == 15)
      {
        *(_OWORD *)(v60 + 48) = *v69;
      }
      else
      {
        uint64_t v71 = *(void *)v69;
        sub_100017F4C(v71, v70);
        *(void *)(v60 + 48) = v71;
        *(void *)(v60 + 56) = v70;
      }
      *(_DWORD *)(v60 + 64) = *(_DWORD *)(v61 + 64);
      *(unsigned char *)(v60 + 68) = *(unsigned char *)(v61 + 68);
    }
    uint64_t v72 = a3[29];
    uint64_t v73 = a1 + v72;
    char v74 = (uint64_t *)((char *)a2 + v72);
    unint64_t v75 = v74[1];
    if (v75 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
    }
    else
    {
      uint64_t v76 = *v74;
      sub_100017F4C(*v74, v74[1]);
      *(void *)uint64_t v73 = v76;
      *(void *)(v73 + 8) = v75;
    }
    uint64_t v77 = a3[30];
    uint64_t v78 = a1 + v77;
    uint64_t v79 = (uint64_t *)((char *)a2 + v77);
    unint64_t v80 = v79[1];
    if (v80 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
    }
    else
    {
      uint64_t v81 = *v79;
      sub_100017F4C(*v79, v79[1]);
      *(void *)uint64_t v78 = v81;
      *(void *)(v78 + 8) = v80;
    }
    uint64_t v82 = a3[31];
    uint64_t v83 = a3[32];
    uint64_t v84 = (void *)(a1 + v82);
    uint64_t v85 = (uint64_t *)((char *)a2 + v82);
    uint64_t v86 = v85[1];
    *uint64_t v84 = *v85;
    v84[1] = v86;
    char v87 = (void *)(a1 + v83);
    unint64_t v88 = (uint64_t *)((char *)a2 + v83);
    uint64_t v89 = v88[1];
    *char v87 = *v88;
    v87[1] = v89;
    uint64_t v90 = a3[33];
    uint64_t v91 = a3[34];
    uint64_t v92 = (void *)(a1 + v90);
    uint64_t v93 = (uint64_t *)((char *)a2 + v90);
    uint64_t v94 = v93[1];
    *uint64_t v92 = *v93;
    v92[1] = v94;
    uint64_t v95 = a1 + v91;
    uint64_t v96 = (uint64_t *)((char *)a2 + v91);
    unint64_t v97 = *(uint64_t *)((char *)a2 + v91 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v97 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v95 = *(_OWORD *)v96;
    }
    else
    {
      uint64_t v98 = *v96;
      sub_100017F4C(*v96, v97);
      *(void *)uint64_t v95 = v98;
      *(void *)(v95 + 8) = v97;
    }
    uint64_t v99 = a3[35];
    uint64_t v100 = a1 + v99;
    uint64_t v101 = (uint64_t *)((char *)a2 + v99);
    unint64_t v102 = v101[1];
    if (v102 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
    }
    else
    {
      uint64_t v103 = *v101;
      sub_100017F4C(*v101, v101[1]);
      *(void *)uint64_t v100 = v103;
      *(void *)(v100 + 8) = v102;
    }
    uint64_t v104 = a3[36];
    uint64_t v105 = a3[37];
    uint64_t v106 = (void *)(a1 + v104);
    uint64_t v107 = (uint64_t *)((char *)a2 + v104);
    uint64_t v108 = v107[1];
    *uint64_t v106 = *v107;
    v106[1] = v108;
    uint64_t v109 = a1 + v105;
    uint64_t v110 = (_OWORD *)((char *)a2 + v105);
    unint64_t v111 = *(uint64_t *)((char *)a2 + v105 + 8);
    swift_bridgeObjectRetain();
    if (v111 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v109 = *v110;
    }
    else
    {
      uint64_t v112 = *(void *)v110;
      sub_100017F4C(v112, v111);
      *(void *)uint64_t v109 = v112;
      *(void *)(v109 + 8) = v111;
    }
    uint64_t v113 = a3[38];
    uint64_t v114 = a3[39];
    uint64_t v115 = (void *)(a1 + v113);
    uint64_t v116 = (uint64_t *)((char *)a2 + v113);
    uint64_t v117 = v116[1];
    *uint64_t v115 = *v116;
    v115[1] = v117;
    uint64_t v118 = a1 + v114;
    uint64_t v119 = (uint64_t)a2 + v114;
    *(unsigned char *)(v118 + 8) = *(unsigned char *)(v119 + 8);
    *(void *)uint64_t v118 = *(void *)v119;
    uint64_t v120 = a3[40];
    uint64_t v121 = a3[41];
    uint64_t v122 = (void *)(a1 + v120);
    char v123 = (uint64_t *)((char *)a2 + v120);
    uint64_t v124 = v123[1];
    void *v122 = *v123;
    v122[1] = v124;
    uint64_t v125 = a1 + v121;
    uint64_t v126 = (uint64_t *)((char *)a2 + v121);
    unint64_t v127 = *(uint64_t *)((char *)a2 + v121 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v127 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v125 = *(_OWORD *)v126;
    }
    else
    {
      uint64_t v128 = *v126;
      sub_100017F4C(*v126, v127);
      *(void *)uint64_t v125 = v128;
      *(void *)(v125 + 8) = v127;
    }
    uint64_t v129 = a3[42];
    uint64_t v130 = a1 + v129;
    uint64_t v131 = (uint64_t *)((char *)a2 + v129);
    unint64_t v132 = v131[1];
    if (v132 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v130 = *(_OWORD *)v131;
    }
    else
    {
      uint64_t v133 = *v131;
      sub_100017F4C(*v131, v131[1]);
      *(void *)uint64_t v130 = v133;
      *(void *)(v130 + 8) = v132;
    }
    uint64_t v134 = a3[43];
    uint64_t v135 = a1 + v134;
    uint64_t v136 = (uint64_t *)((char *)a2 + v134);
    unint64_t v137 = v136[1];
    if (v137 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v135 = *(_OWORD *)v136;
    }
    else
    {
      uint64_t v138 = *v136;
      sub_100017F4C(*v136, v136[1]);
      *(void *)uint64_t v135 = v138;
      *(void *)(v135 + 8) = v137;
    }
    uint64_t v139 = a3[44];
    uint64_t v140 = a3[45];
    uint64_t v141 = (void *)(a1 + v139);
    uint64_t v142 = (uint64_t *)((char *)a2 + v139);
    uint64_t v143 = v142[1];
    void *v141 = *v142;
    v141[1] = v143;
    uint64_t v144 = (void *)(a1 + v140);
    uint64_t v145 = (uint64_t *)((char *)a2 + v140);
    uint64_t v146 = v145[1];
    *uint64_t v144 = *v145;
    v144[1] = v146;
    uint64_t v147 = a3[46];
    uint64_t v148 = a3[47];
    uint64_t v149 = (void *)(a1 + v147);
    uint64_t v150 = (uint64_t *)((char *)a2 + v147);
    uint64_t v151 = v150[1];
    *uint64_t v149 = *v150;
    v149[1] = v151;
    uint64_t v152 = (void *)(a1 + v148);
    char v153 = (uint64_t *)((char *)a2 + v148);
    uint64_t v154 = v153[1];
    *uint64_t v152 = *v153;
    v152[1] = v154;
    uint64_t v155 = a3[48];
    uint64_t v156 = a3[49];
    unint64_t v157 = (void *)(a1 + v155);
    uint64_t v158 = (uint64_t *)((char *)a2 + v155);
    uint64_t v159 = v158[1];
    void *v157 = *v158;
    v157[1] = v159;
    *(unsigned char *)(a1 + v156) = *((unsigned char *)a2 + v156);
    uint64_t v160 = a3[50];
    uint64_t v161 = a3[51];
    uint64_t v162 = (void *)(a1 + v160);
    uint64_t v163 = (uint64_t *)((char *)a2 + v160);
    uint64_t v164 = v163[1];
    *uint64_t v162 = *v163;
    v162[1] = v164;
    uint64_t v165 = a1 + v161;
    uint64_t v166 = (uint64_t)a2 + v161;
    *(void *)uint64_t v165 = *(void *)v166;
    *(unsigned char *)(v165 + 8) = *(unsigned char *)(v166 + 8);
    uint64_t v167 = a3[52];
    uint64_t v168 = a3[53];
    unint64_t v169 = (void *)(a1 + v167);
    uint64_t v170 = (uint64_t *)((char *)a2 + v167);
    uint64_t v171 = v170[1];
    void *v169 = *v170;
    v169[1] = v171;
    uint64_t v172 = (void *)(a1 + v168);
    uint64_t v173 = (uint64_t *)((char *)a2 + v168);
    uint64_t v174 = v173[1];
    *uint64_t v172 = *v173;
    v172[1] = v174;
    uint64_t v175 = a3[54];
    uint64_t v176 = a3[55];
    uint64_t v177 = a1 + v175;
    uint64_t v178 = (uint64_t)a2 + v175;
    *(void *)uint64_t v177 = *(void *)v178;
    *(unsigned char *)(v177 + 8) = *(unsigned char *)(v178 + 8);
    uint64_t v179 = a1 + v176;
    uint64_t v180 = (uint64_t)a2 + v176;
    *(void *)uint64_t v179 = *(void *)v180;
    *(unsigned char *)(v179 + 8) = *(unsigned char *)(v180 + 8);
    uint64_t v181 = a3[56];
    uint64_t v182 = a3[57];
    uint64_t v183 = (void *)(a1 + v181);
    uint64_t v184 = (uint64_t *)((char *)a2 + v181);
    uint64_t v185 = v184[1];
    *uint64_t v183 = *v184;
    v183[1] = v185;
    *(void *)(a1 + v182) = *(uint64_t *)((char *)a2 + v182);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MessageDictionary(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(a1 + 88);
  if (v4 >> 60 != 15) {
    sub_100018074(*(void *)(a1 + 80), v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[18];
  uint64_t v6 = sub_1000B8380();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + a2[20];
  uint64_t v9 = sub_1000B8340();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = (uint64_t *)(a1 + a2[27]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_100018074(*v11, v12);
  }
  unint64_t v13 = (void *)(a1 + a2[28]);
  if (v13[1] != 1)
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = v13[3];
    if (v14 >> 60 != 15) {
      sub_100018074(v13[2], v14);
    }
    swift_bridgeObjectRelease();
    unint64_t v15 = v13[7];
    if (v15 >> 60 != 15) {
      sub_100018074(v13[6], v15);
    }
  }
  uint64_t v16 = (uint64_t *)(a1 + a2[29]);
  unint64_t v17 = v16[1];
  if (v17 >> 60 != 15) {
    sub_100018074(*v16, v17);
  }
  unint64_t v18 = (uint64_t *)(a1 + a2[30]);
  unint64_t v19 = v18[1];
  if (v19 >> 60 != 15) {
    sub_100018074(*v18, v19);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = (uint64_t *)(a1 + a2[34]);
  unint64_t v21 = v20[1];
  if (v21 >> 60 != 15) {
    sub_100018074(*v20, v21);
  }
  uint64_t v22 = (uint64_t *)(a1 + a2[35]);
  unint64_t v23 = v22[1];
  if (v23 >> 60 != 15) {
    sub_100018074(*v22, v23);
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = (uint64_t *)(a1 + a2[37]);
  unint64_t v25 = v24[1];
  if (v25 >> 60 != 15) {
    sub_100018074(*v24, v25);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = (uint64_t *)(a1 + a2[41]);
  unint64_t v27 = v26[1];
  if (v27 >> 60 != 15) {
    sub_100018074(*v26, v27);
  }
  char v28 = (uint64_t *)(a1 + a2[42]);
  unint64_t v29 = v28[1];
  if (v29 >> 60 != 15) {
    sub_100018074(*v28, v29);
  }
  uint64_t v30 = (uint64_t *)(a1 + a2[43]);
  unint64_t v31 = v30[1];
  if (v31 >> 60 != 15) {
    sub_100018074(*v30, v31);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessageDictionary(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  uint64_t v10 = (uint64_t *)(a2 + 80);
  unint64_t v11 = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v10;
  }
  else
  {
    uint64_t v12 = *v10;
    sub_100017F4C(*v10, v11);
    *(void *)(a1 + 80) = v12;
    *(void *)(a1 + 88) = v11;
  }
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v13 = *(void *)(a2 + 128);
  uint64_t v14 = a3[18];
  unint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v13;
  uint64_t v17 = sub_1000B8380();
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = sub_10001295C(&qword_1000EC678);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v21 = a3[19];
  uint64_t v22 = a3[20];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  unint64_t v25 = (void *)(a1 + v22);
  uint64_t v26 = (const void *)(a2 + v22);
  uint64_t v27 = sub_1000B8340();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = sub_10001295C(&qword_1000EC790);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  uint64_t v30 = a3[21];
  uint64_t v31 = a3[22];
  uint64_t v32 = a1 + v30;
  uint64_t v33 = a2 + v30;
  *(void *)uint64_t v32 = *(void *)v33;
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
  uint64_t v34 = (void *)(a1 + v31);
  uint64_t v35 = (void *)(a2 + v31);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = a3[23];
  uint64_t v38 = a3[24];
  uint64_t v39 = (void *)(a1 + v37);
  uint64_t v40 = (void *)(a2 + v37);
  uint64_t v41 = v40[1];
  void *v39 = *v40;
  v39[1] = v41;
  uint64_t v42 = (void *)(a1 + v38);
  uint64_t v43 = (void *)(a2 + v38);
  uint64_t v44 = v43[1];
  *uint64_t v42 = *v43;
  v42[1] = v44;
  uint64_t v45 = a3[25];
  uint64_t v46 = a3[26];
  uint64_t v47 = a1 + v45;
  uint64_t v48 = a2 + v45;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  uint64_t v49 = (void *)(a1 + v46);
  uint64_t v50 = (void *)(a2 + v46);
  uint64_t v51 = v50[1];
  void *v49 = *v50;
  v49[1] = v51;
  uint64_t v52 = a3[27];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = (uint64_t *)(a2 + v52);
  unint64_t v55 = *(void *)(a2 + v52 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v55 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
  }
  else
  {
    uint64_t v56 = *v54;
    sub_100017F4C(*v54, v55);
    *(void *)uint64_t v53 = v56;
    *(void *)(v53 + 8) = v55;
  }
  uint64_t v57 = a3[28];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  uint64_t v60 = *(void *)(a2 + v57 + 8);
  if (v60 == 1)
  {
    long long v61 = *(_OWORD *)(v59 + 48);
    *(_OWORD *)(v58 + 32) = *(_OWORD *)(v59 + 32);
    *(_OWORD *)(v58 + 48) = v61;
    *(void *)(v58 + 61) = *(void *)(v59 + 61);
    long long v62 = *(_OWORD *)(v59 + 16);
    *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
    *(_OWORD *)(v58 + 16) = v62;
  }
  else
  {
    *(void *)uint64_t v58 = *(void *)v59;
    *(void *)(v58 + 8) = v60;
    long long v63 = (_OWORD *)(v59 + 16);
    unint64_t v64 = *(void *)(v59 + 24);
    swift_bridgeObjectRetain();
    if (v64 >> 60 == 15)
    {
      *(_OWORD *)(v58 + 16) = *v63;
    }
    else
    {
      uint64_t v65 = *(void *)v63;
      sub_100017F4C(v65, v64);
      *(void *)(v58 + 16) = v65;
      *(void *)(v58 + 24) = v64;
    }
    uint64_t v66 = *(void *)(v59 + 40);
    *(void *)(v58 + 32) = *(void *)(v59 + 32);
    *(void *)(v58 + 40) = v66;
    uint64_t v67 = (_OWORD *)(v59 + 48);
    unint64_t v68 = *(void *)(v59 + 56);
    swift_bridgeObjectRetain();
    if (v68 >> 60 == 15)
    {
      *(_OWORD *)(v58 + 48) = *v67;
    }
    else
    {
      uint64_t v69 = *(void *)v67;
      sub_100017F4C(v69, v68);
      *(void *)(v58 + 48) = v69;
      *(void *)(v58 + 56) = v68;
    }
    *(_DWORD *)(v58 + 64) = *(_DWORD *)(v59 + 64);
    *(unsigned char *)(v58 + 68) = *(unsigned char *)(v59 + 68);
  }
  uint64_t v70 = a3[29];
  uint64_t v71 = a1 + v70;
  uint64_t v72 = (uint64_t *)(a2 + v70);
  unint64_t v73 = v72[1];
  if (v73 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
  }
  else
  {
    uint64_t v74 = *v72;
    sub_100017F4C(*v72, v72[1]);
    *(void *)uint64_t v71 = v74;
    *(void *)(v71 + 8) = v73;
  }
  uint64_t v75 = a3[30];
  uint64_t v76 = a1 + v75;
  uint64_t v77 = (uint64_t *)(a2 + v75);
  unint64_t v78 = v77[1];
  if (v78 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v76 = *(_OWORD *)v77;
  }
  else
  {
    uint64_t v79 = *v77;
    sub_100017F4C(*v77, v77[1]);
    *(void *)uint64_t v76 = v79;
    *(void *)(v76 + 8) = v78;
  }
  uint64_t v80 = a3[31];
  uint64_t v81 = a3[32];
  uint64_t v82 = (void *)(a1 + v80);
  uint64_t v83 = (void *)(a2 + v80);
  uint64_t v84 = v83[1];
  void *v82 = *v83;
  v82[1] = v84;
  uint64_t v85 = (void *)(a1 + v81);
  uint64_t v86 = (void *)(a2 + v81);
  uint64_t v87 = v86[1];
  void *v85 = *v86;
  v85[1] = v87;
  uint64_t v88 = a3[33];
  uint64_t v89 = a3[34];
  uint64_t v90 = (void *)(a1 + v88);
  uint64_t v91 = (void *)(a2 + v88);
  uint64_t v92 = v91[1];
  *uint64_t v90 = *v91;
  v90[1] = v92;
  uint64_t v93 = a1 + v89;
  uint64_t v94 = (uint64_t *)(a2 + v89);
  unint64_t v95 = *(void *)(a2 + v89 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v95 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
  }
  else
  {
    uint64_t v96 = *v94;
    sub_100017F4C(*v94, v95);
    *(void *)uint64_t v93 = v96;
    *(void *)(v93 + 8) = v95;
  }
  uint64_t v97 = a3[35];
  uint64_t v98 = a1 + v97;
  uint64_t v99 = (uint64_t *)(a2 + v97);
  unint64_t v100 = v99[1];
  if (v100 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v98 = *(_OWORD *)v99;
  }
  else
  {
    uint64_t v101 = *v99;
    sub_100017F4C(*v99, v99[1]);
    *(void *)uint64_t v98 = v101;
    *(void *)(v98 + 8) = v100;
  }
  uint64_t v102 = a3[36];
  uint64_t v103 = a3[37];
  uint64_t v104 = (void *)(a1 + v102);
  uint64_t v105 = (void *)(a2 + v102);
  uint64_t v106 = v105[1];
  *uint64_t v104 = *v105;
  v104[1] = v106;
  uint64_t v107 = a1 + v103;
  uint64_t v108 = (_OWORD *)(a2 + v103);
  unint64_t v109 = *(void *)(a2 + v103 + 8);
  swift_bridgeObjectRetain();
  if (v109 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v107 = *v108;
  }
  else
  {
    uint64_t v110 = *(void *)v108;
    sub_100017F4C(v110, v109);
    *(void *)uint64_t v107 = v110;
    *(void *)(v107 + 8) = v109;
  }
  uint64_t v111 = a3[38];
  uint64_t v112 = a3[39];
  uint64_t v113 = (void *)(a1 + v111);
  uint64_t v114 = (void *)(a2 + v111);
  uint64_t v115 = v114[1];
  void *v113 = *v114;
  v113[1] = v115;
  uint64_t v116 = a1 + v112;
  uint64_t v117 = a2 + v112;
  *(unsigned char *)(v116 + 8) = *(unsigned char *)(v117 + 8);
  *(void *)uint64_t v116 = *(void *)v117;
  uint64_t v118 = a3[40];
  uint64_t v119 = a3[41];
  uint64_t v120 = (void *)(a1 + v118);
  uint64_t v121 = (void *)(a2 + v118);
  uint64_t v122 = v121[1];
  *uint64_t v120 = *v121;
  v120[1] = v122;
  uint64_t v123 = a1 + v119;
  uint64_t v124 = (uint64_t *)(a2 + v119);
  unint64_t v125 = *(void *)(a2 + v119 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v125 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v123 = *(_OWORD *)v124;
  }
  else
  {
    uint64_t v126 = *v124;
    sub_100017F4C(*v124, v125);
    *(void *)uint64_t v123 = v126;
    *(void *)(v123 + 8) = v125;
  }
  uint64_t v127 = a3[42];
  uint64_t v128 = a1 + v127;
  uint64_t v129 = (uint64_t *)(a2 + v127);
  unint64_t v130 = v129[1];
  if (v130 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
  }
  else
  {
    uint64_t v131 = *v129;
    sub_100017F4C(*v129, v129[1]);
    *(void *)uint64_t v128 = v131;
    *(void *)(v128 + 8) = v130;
  }
  uint64_t v132 = a3[43];
  uint64_t v133 = a1 + v132;
  uint64_t v134 = (uint64_t *)(a2 + v132);
  unint64_t v135 = v134[1];
  if (v135 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v133 = *(_OWORD *)v134;
  }
  else
  {
    uint64_t v136 = *v134;
    sub_100017F4C(*v134, v134[1]);
    *(void *)uint64_t v133 = v136;
    *(void *)(v133 + 8) = v135;
  }
  uint64_t v137 = a3[44];
  uint64_t v138 = a3[45];
  uint64_t v139 = (void *)(a1 + v137);
  uint64_t v140 = (void *)(a2 + v137);
  uint64_t v141 = v140[1];
  *uint64_t v139 = *v140;
  v139[1] = v141;
  uint64_t v142 = (void *)(a1 + v138);
  uint64_t v143 = (void *)(a2 + v138);
  uint64_t v144 = v143[1];
  void *v142 = *v143;
  v142[1] = v144;
  uint64_t v145 = a3[46];
  uint64_t v146 = a3[47];
  uint64_t v147 = (void *)(a1 + v145);
  uint64_t v148 = (void *)(a2 + v145);
  uint64_t v149 = v148[1];
  *uint64_t v147 = *v148;
  v147[1] = v149;
  uint64_t v150 = (void *)(a1 + v146);
  uint64_t v151 = (void *)(a2 + v146);
  uint64_t v152 = v151[1];
  *uint64_t v150 = *v151;
  v150[1] = v152;
  uint64_t v153 = a3[48];
  uint64_t v154 = a3[49];
  uint64_t v155 = (void *)(a1 + v153);
  uint64_t v156 = (void *)(a2 + v153);
  uint64_t v157 = v156[1];
  *uint64_t v155 = *v156;
  v155[1] = v157;
  *(unsigned char *)(a1 + v154) = *(unsigned char *)(a2 + v154);
  uint64_t v158 = a3[50];
  uint64_t v159 = a3[51];
  uint64_t v160 = (void *)(a1 + v158);
  uint64_t v161 = (void *)(a2 + v158);
  uint64_t v162 = v161[1];
  *uint64_t v160 = *v161;
  v160[1] = v162;
  uint64_t v163 = a1 + v159;
  uint64_t v164 = a2 + v159;
  *(void *)uint64_t v163 = *(void *)v164;
  *(unsigned char *)(v163 + 8) = *(unsigned char *)(v164 + 8);
  uint64_t v165 = a3[52];
  uint64_t v166 = a3[53];
  uint64_t v167 = (void *)(a1 + v165);
  uint64_t v168 = (void *)(a2 + v165);
  uint64_t v169 = v168[1];
  void *v167 = *v168;
  v167[1] = v169;
  uint64_t v170 = (void *)(a1 + v166);
  uint64_t v171 = (void *)(a2 + v166);
  uint64_t v172 = v171[1];
  *uint64_t v170 = *v171;
  v170[1] = v172;
  uint64_t v173 = a3[54];
  uint64_t v174 = a3[55];
  uint64_t v175 = a1 + v173;
  uint64_t v176 = a2 + v173;
  *(void *)uint64_t v175 = *(void *)v176;
  *(unsigned char *)(v175 + 8) = *(unsigned char *)(v176 + 8);
  uint64_t v177 = a1 + v174;
  uint64_t v178 = a2 + v174;
  *(void *)uint64_t v177 = *(void *)v178;
  *(unsigned char *)(v177 + 8) = *(unsigned char *)(v178 + 8);
  uint64_t v179 = a3[56];
  uint64_t v180 = a3[57];
  uint64_t v181 = (void *)(a1 + v179);
  uint64_t v182 = (void *)(a2 + v179);
  uint64_t v183 = v182[1];
  *uint64_t v181 = *v182;
  v181[1] = v183;
  *(void *)(a1 + v180) = *(void *)(a2 + v180);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessageDictionary(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  uint64_t v6 = (uint64_t *)(a2 + 80);
  unint64_t v7 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88) >> 60 == 15)
  {
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *v6;
      sub_100017F4C(*v6, *(void *)(a2 + 88));
      *(void *)(a1 + 80) = v8;
      *(void *)(a1 + 88) = v7;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
    sub_10003F900(a1 + 80);
LABEL_6:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  uint64_t v9 = *v6;
  sub_100017F4C(*v6, *(void *)(a2 + 88));
  uint64_t v10 = *(void *)(a1 + 80);
  unint64_t v11 = *(void *)(a1 + 88);
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = v7;
  sub_100018074(v10, v11);
LABEL_8:
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  *(unsigned char *)(a1 + 99) = *(unsigned char *)(a2 + 99);
  uint64_t v12 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = v12;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[18];
  uint64_t v14 = (void *)(a1 + v13);
  unint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = sub_1000B8380();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_13:
    uint64_t v21 = sub_10001295C(&qword_1000EC678);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
LABEL_14:
  uint64_t v22 = a3[19];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  *(unsigned char *)(v23 + 8) = *((unsigned char *)v24 + 8);
  *(void *)uint64_t v23 = v25;
  uint64_t v26 = a3[20];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  uint64_t v29 = sub_1000B8340();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  int v32 = v31(v27, 1, v29);
  int v33 = v31(v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v30 + 8))(v27, v29);
LABEL_19:
    uint64_t v34 = sub_10001295C(&qword_1000EC790);
    memcpy(v27, v28, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, void *, uint64_t))(v30 + 24))(v27, v28, v29);
LABEL_20:
  uint64_t v35 = a3[21];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v38 = *v37;
  *(unsigned char *)(v36 + 8) = *((unsigned char *)v37 + 8);
  *(void *)uint64_t v36 = v38;
  uint64_t v39 = a3[22];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  *uint64_t v40 = *v41;
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[23];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  *uint64_t v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[24];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  *uint64_t v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[25];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = (uint64_t *)(a2 + v48);
  uint64_t v51 = *v50;
  *(unsigned char *)(v49 + 8) = *((unsigned char *)v50 + 8);
  *(void *)uint64_t v49 = v51;
  uint64_t v52 = a3[26];
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (void *)(a2 + v52);
  *uint64_t v53 = *v54;
  v53[1] = v54[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v55 = a3[27];
  uint64_t v56 = (uint64_t *)(a1 + v55);
  uint64_t v57 = (uint64_t *)(a2 + v55);
  unint64_t v58 = *(void *)(a2 + v55 + 8);
  if (*(void *)(a1 + v55 + 8) >> 60 == 15)
  {
    if (v58 >> 60 != 15)
    {
      uint64_t v59 = *v57;
      sub_100017F4C(v59, v58);
      *uint64_t v56 = v59;
      v56[1] = v58;
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  if (v58 >> 60 == 15)
  {
    sub_10003F900((uint64_t)v56);
LABEL_25:
    *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
    goto LABEL_27;
  }
  uint64_t v60 = *v57;
  sub_100017F4C(v60, v58);
  uint64_t v61 = *v56;
  unint64_t v62 = v56[1];
  *uint64_t v56 = v60;
  v56[1] = v58;
  sub_100018074(v61, v62);
LABEL_27:
  uint64_t v63 = a3[28];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  uint64_t v66 = *(void *)(a1 + v63 + 8);
  uint64_t v67 = *(void *)(a2 + v63 + 8);
  if (v66 != 1)
  {
    if (v67 == 1)
    {
      sub_1000AC5B0((uint64_t *)v64);
      *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
      long long v72 = *(_OWORD *)(v65 + 32);
      long long v71 = *(_OWORD *)(v65 + 48);
      long long v73 = *(_OWORD *)(v65 + 16);
      *(void *)(v64 + 61) = *(void *)(v65 + 61);
      *(_OWORD *)(v64 + 32) = v72;
      *(_OWORD *)(v64 + 48) = v71;
      *(_OWORD *)(v64 + 16) = v73;
      goto LABEL_56;
    }
    *(void *)uint64_t v64 = *(void *)v65;
    *(void *)(v64 + 8) = *(void *)(v65 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v76 = (uint64_t *)(v65 + 16);
    unint64_t v77 = *(void *)(v65 + 24);
    if (*(void *)(v64 + 24) >> 60 == 15)
    {
      if (v77 >> 60 != 15)
      {
        uint64_t v78 = *v76;
        sub_100017F4C(*v76, *(void *)(v65 + 24));
        *(void *)(v64 + 16) = v78;
        *(void *)(v64 + 24) = v77;
        goto LABEL_47;
      }
    }
    else
    {
      if (v77 >> 60 != 15)
      {
        uint64_t v83 = *v76;
        sub_100017F4C(*v76, *(void *)(v65 + 24));
        uint64_t v84 = *(void *)(v64 + 16);
        unint64_t v85 = *(void *)(v64 + 24);
        *(void *)(v64 + 16) = v83;
        *(void *)(v64 + 24) = v77;
        sub_100018074(v84, v85);
LABEL_47:
        *(void *)(v64 + 32) = *(void *)(v65 + 32);
        *(void *)(v64 + 40) = *(void *)(v65 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v86 = (uint64_t *)(v65 + 48);
        unint64_t v81 = *(void *)(v65 + 56);
        if (*(void *)(v64 + 56) >> 60 == 15)
        {
          if (v81 >> 60 != 15)
          {
            uint64_t v82 = *v86;
            goto LABEL_50;
          }
        }
        else
        {
          if (v81 >> 60 != 15)
          {
            uint64_t v87 = *v86;
            sub_100017F4C(*v86, *(void *)(v65 + 56));
            uint64_t v88 = *(void *)(v64 + 48);
            unint64_t v89 = *(void *)(v64 + 56);
            *(void *)(v64 + 48) = v87;
            *(void *)(v64 + 56) = v81;
            sub_100018074(v88, v89);
            goto LABEL_55;
          }
          sub_10003F900(v64 + 48);
        }
        *(_OWORD *)(v64 + 48) = *(_OWORD *)v86;
        goto LABEL_55;
      }
      sub_10003F900(v64 + 16);
    }
    *(_OWORD *)(v64 + 16) = *(_OWORD *)v76;
    goto LABEL_47;
  }
  if (v67 == 1)
  {
    *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
    long long v68 = *(_OWORD *)(v65 + 16);
    long long v69 = *(_OWORD *)(v65 + 32);
    long long v70 = *(_OWORD *)(v65 + 48);
    *(void *)(v64 + 61) = *(void *)(v65 + 61);
    *(_OWORD *)(v64 + 32) = v69;
    *(_OWORD *)(v64 + 48) = v70;
    *(_OWORD *)(v64 + 16) = v68;
    goto LABEL_56;
  }
  *(void *)uint64_t v64 = *(void *)v65;
  *(void *)(v64 + 8) = *(void *)(v65 + 8);
  uint64_t v74 = (_OWORD *)(v65 + 16);
  unint64_t v75 = *(void *)(v65 + 24);
  swift_bridgeObjectRetain();
  if (v75 >> 60 == 15)
  {
    *(_OWORD *)(v64 + 16) = *v74;
  }
  else
  {
    uint64_t v79 = *(void *)v74;
    sub_100017F4C(v79, v75);
    *(void *)(v64 + 16) = v79;
    *(void *)(v64 + 24) = v75;
  }
  *(void *)(v64 + 32) = *(void *)(v65 + 32);
  *(void *)(v64 + 40) = *(void *)(v65 + 40);
  uint64_t v80 = (uint64_t *)(v65 + 48);
  unint64_t v81 = *(void *)(v65 + 56);
  swift_bridgeObjectRetain();
  if (v81 >> 60 != 15)
  {
    uint64_t v82 = *v80;
LABEL_50:
    sub_100017F4C(v82, v81);
    *(void *)(v64 + 48) = v82;
    *(void *)(v64 + 56) = v81;
    goto LABEL_55;
  }
  *(_OWORD *)(v64 + 48) = *(_OWORD *)v80;
LABEL_55:
  int v90 = *(_DWORD *)(v65 + 64);
  *(unsigned char *)(v64 + 68) = *(unsigned char *)(v65 + 68);
  *(_DWORD *)(v64 + 64) = v90;
LABEL_56:
  uint64_t v91 = a3[29];
  uint64_t v92 = (uint64_t *)(a1 + v91);
  uint64_t v93 = (uint64_t *)(a2 + v91);
  unint64_t v94 = *(void *)(a2 + v91 + 8);
  if (*(void *)(a1 + v91 + 8) >> 60 == 15)
  {
    if (v94 >> 60 != 15)
    {
      uint64_t v95 = *v93;
      sub_100017F4C(v95, v94);
      *uint64_t v92 = v95;
      v92[1] = v94;
      goto LABEL_63;
    }
    goto LABEL_61;
  }
  if (v94 >> 60 == 15)
  {
    sub_10003F900((uint64_t)v92);
LABEL_61:
    *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
    goto LABEL_63;
  }
  uint64_t v96 = *v93;
  sub_100017F4C(v96, v94);
  uint64_t v97 = *v92;
  unint64_t v98 = v92[1];
  *uint64_t v92 = v96;
  v92[1] = v94;
  sub_100018074(v97, v98);
LABEL_63:
  uint64_t v99 = a3[30];
  unint64_t v100 = (uint64_t *)(a1 + v99);
  uint64_t v101 = (uint64_t *)(a2 + v99);
  unint64_t v102 = *(void *)(a2 + v99 + 8);
  if (*(void *)(a1 + v99 + 8) >> 60 == 15)
  {
    if (v102 >> 60 != 15)
    {
      uint64_t v103 = *v101;
      sub_100017F4C(v103, v102);
      uint64_t *v100 = v103;
      v100[1] = v102;
      goto LABEL_70;
    }
    goto LABEL_68;
  }
  if (v102 >> 60 == 15)
  {
    sub_10003F900((uint64_t)v100);
LABEL_68:
    *(_OWORD *)unint64_t v100 = *(_OWORD *)v101;
    goto LABEL_70;
  }
  uint64_t v104 = *v101;
  sub_100017F4C(v104, v102);
  uint64_t v105 = *v100;
  unint64_t v106 = v100[1];
  uint64_t *v100 = v104;
  v100[1] = v102;
  sub_100018074(v105, v106);
LABEL_70:
  uint64_t v107 = a3[31];
  uint64_t v108 = (void *)(a1 + v107);
  unint64_t v109 = (void *)(a2 + v107);
  *uint64_t v108 = *v109;
  v108[1] = v109[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v110 = a3[32];
  uint64_t v111 = (void *)(a1 + v110);
  uint64_t v112 = (void *)(a2 + v110);
  *uint64_t v111 = *v112;
  v111[1] = v112[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v113 = a3[33];
  uint64_t v114 = (void *)(a1 + v113);
  uint64_t v115 = (void *)(a2 + v113);
  *uint64_t v114 = *v115;
  v114[1] = v115[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v116 = a3[34];
  uint64_t v117 = (uint64_t *)(a1 + v116);
  uint64_t v118 = (uint64_t *)(a2 + v116);
  unint64_t v119 = *(void *)(a2 + v116 + 8);
  if (*(void *)(a1 + v116 + 8) >> 60 == 15)
  {
    if (v119 >> 60 != 15)
    {
      uint64_t v120 = *v118;
      sub_100017F4C(v120, v119);
      *uint64_t v117 = v120;
      v117[1] = v119;
      goto LABEL_77;
    }
    goto LABEL_75;
  }
  if (v119 >> 60 == 15)
  {
    sub_10003F900((uint64_t)v117);
LABEL_75:
    *(_OWORD *)uint64_t v117 = *(_OWORD *)v118;
    goto LABEL_77;
  }
  uint64_t v121 = *v118;
  sub_100017F4C(v121, v119);
  uint64_t v122 = *v117;
  unint64_t v123 = v117[1];
  *uint64_t v117 = v121;
  v117[1] = v119;
  sub_100018074(v122, v123);
LABEL_77:
  uint64_t v124 = a3[35];
  unint64_t v125 = (uint64_t *)(a1 + v124);
  uint64_t v126 = (uint64_t *)(a2 + v124);
  unint64_t v127 = *(void *)(a2 + v124 + 8);
  if (*(void *)(a1 + v124 + 8) >> 60 == 15)
  {
    if (v127 >> 60 != 15)
    {
      uint64_t v128 = *v126;
      sub_100017F4C(v128, v127);
      uint64_t *v125 = v128;
      v125[1] = v127;
      goto LABEL_84;
    }
    goto LABEL_82;
  }
  if (v127 >> 60 == 15)
  {
    sub_10003F900((uint64_t)v125);
LABEL_82:
    *(_OWORD *)unint64_t v125 = *(_OWORD *)v126;
    goto LABEL_84;
  }
  uint64_t v129 = *v126;
  sub_100017F4C(v129, v127);
  uint64_t v130 = *v125;
  unint64_t v131 = v125[1];
  uint64_t *v125 = v129;
  v125[1] = v127;
  sub_100018074(v130, v131);
LABEL_84:
  uint64_t v132 = a3[36];
  uint64_t v133 = (void *)(a1 + v132);
  uint64_t v134 = (void *)(a2 + v132);
  *uint64_t v133 = *v134;
  v133[1] = v134[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v135 = a3[37];
  uint64_t v136 = (uint64_t *)(a1 + v135);
  uint64_t v137 = (uint64_t *)(a2 + v135);
  unint64_t v138 = *(void *)(a2 + v135 + 8);
  if (*(void *)(a1 + v135 + 8) >> 60 == 15)
  {
    if (v138 >> 60 != 15)
    {
      uint64_t v139 = *v137;
      sub_100017F4C(v139, v138);
      *uint64_t v136 = v139;
      v136[1] = v138;
      goto LABEL_91;
    }
    goto LABEL_89;
  }
  if (v138 >> 60 == 15)
  {
    sub_10003F900((uint64_t)v136);
LABEL_89:
    *(_OWORD *)uint64_t v136 = *(_OWORD *)v137;
    goto LABEL_91;
  }
  uint64_t v140 = *v137;
  sub_100017F4C(v140, v138);
  uint64_t v141 = *v136;
  unint64_t v142 = v136[1];
  *uint64_t v136 = v140;
  v136[1] = v138;
  sub_100018074(v141, v142);
LABEL_91:
  uint64_t v143 = a3[38];
  uint64_t v144 = (void *)(a1 + v143);
  uint64_t v145 = (void *)(a2 + v143);
  *uint64_t v144 = *v145;
  v144[1] = v145[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v146 = a3[39];
  uint64_t v147 = a1 + v146;
  uint64_t v148 = (uint64_t *)(a2 + v146);
  uint64_t v149 = *v148;
  *(unsigned char *)(v147 + 8) = *((unsigned char *)v148 + 8);
  *(void *)uint64_t v147 = v149;
  uint64_t v150 = a3[40];
  uint64_t v151 = (void *)(a1 + v150);
  uint64_t v152 = (void *)(a2 + v150);
  void *v151 = *v152;
  v151[1] = v152[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v153 = a3[41];
  uint64_t v154 = (uint64_t *)(a1 + v153);
  uint64_t v155 = (uint64_t *)(a2 + v153);
  unint64_t v156 = *(void *)(a2 + v153 + 8);
  if (*(void *)(a1 + v153 + 8) >> 60 == 15)
  {
    if (v156 >> 60 != 15)
    {
      uint64_t v157 = *v155;
      sub_100017F4C(v157, v156);
      *uint64_t v154 = v157;
      v154[1] = v156;
      goto LABEL_98;
    }
    goto LABEL_96;
  }
  if (v156 >> 60 == 15)
  {
    sub_10003F900((uint64_t)v154);
LABEL_96:
    *(_OWORD *)uint64_t v154 = *(_OWORD *)v155;
    goto LABEL_98;
  }
  uint64_t v158 = *v155;
  sub_100017F4C(v158, v156);
  uint64_t v159 = *v154;
  unint64_t v160 = v154[1];
  *uint64_t v154 = v158;
  v154[1] = v156;
  sub_100018074(v159, v160);
LABEL_98:
  uint64_t v161 = a3[42];
  uint64_t v162 = (uint64_t *)(a1 + v161);
  uint64_t v163 = (uint64_t *)(a2 + v161);
  unint64_t v164 = *(void *)(a2 + v161 + 8);
  if (*(void *)(a1 + v161 + 8) >> 60 == 15)
  {
    if (v164 >> 60 != 15)
    {
      uint64_t v165 = *v163;
      sub_100017F4C(v165, v164);
      *uint64_t v162 = v165;
      v162[1] = v164;
      goto LABEL_105;
    }
    goto LABEL_103;
  }
  if (v164 >> 60 == 15)
  {
    sub_10003F900((uint64_t)v162);
LABEL_103:
    *(_OWORD *)uint64_t v162 = *(_OWORD *)v163;
    goto LABEL_105;
  }
  uint64_t v166 = *v163;
  sub_100017F4C(v166, v164);
  uint64_t v167 = *v162;
  unint64_t v168 = v162[1];
  *uint64_t v162 = v166;
  v162[1] = v164;
  sub_100018074(v167, v168);
LABEL_105:
  uint64_t v169 = a3[43];
  uint64_t v170 = (uint64_t *)(a1 + v169);
  uint64_t v171 = (uint64_t *)(a2 + v169);
  unint64_t v172 = *(void *)(a2 + v169 + 8);
  if (*(void *)(a1 + v169 + 8) >> 60 != 15)
  {
    if (v172 >> 60 != 15)
    {
      uint64_t v174 = *v171;
      sub_100017F4C(v174, v172);
      uint64_t v175 = *v170;
      unint64_t v176 = v170[1];
      *uint64_t v170 = v174;
      v170[1] = v172;
      sub_100018074(v175, v176);
      goto LABEL_112;
    }
    sub_10003F900((uint64_t)v170);
    goto LABEL_110;
  }
  if (v172 >> 60 == 15)
  {
LABEL_110:
    *(_OWORD *)uint64_t v170 = *(_OWORD *)v171;
    goto LABEL_112;
  }
  uint64_t v173 = *v171;
  sub_100017F4C(v173, v172);
  *uint64_t v170 = v173;
  v170[1] = v172;
LABEL_112:
  uint64_t v177 = a3[44];
  uint64_t v178 = (void *)(a1 + v177);
  uint64_t v179 = (void *)(a2 + v177);
  *uint64_t v178 = *v179;
  v178[1] = v179[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v180 = a3[45];
  uint64_t v181 = (void *)(a1 + v180);
  uint64_t v182 = (void *)(a2 + v180);
  *uint64_t v181 = *v182;
  v181[1] = v182[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v183 = a3[46];
  uint64_t v184 = (void *)(a1 + v183);
  uint64_t v185 = (void *)(a2 + v183);
  void *v184 = *v185;
  v184[1] = v185[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v186 = a3[47];
  uint64_t v187 = (void *)(a1 + v186);
  uint64_t v188 = (void *)(a2 + v186);
  *uint64_t v187 = *v188;
  v187[1] = v188[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v189 = a3[48];
  uint64_t v190 = (void *)(a1 + v189);
  uint64_t v191 = (void *)(a2 + v189);
  *uint64_t v190 = *v191;
  v190[1] = v191[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[49]) = *(unsigned char *)(a2 + a3[49]);
  uint64_t v192 = a3[50];
  uint64_t v193 = (void *)(a1 + v192);
  uint64_t v194 = (void *)(a2 + v192);
  *uint64_t v193 = *v194;
  v193[1] = v194[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v195 = a3[51];
  uint64_t v196 = a1 + v195;
  uint64_t v197 = (uint64_t *)(a2 + v195);
  uint64_t v198 = *v197;
  *(unsigned char *)(v196 + 8) = *((unsigned char *)v197 + 8);
  *(void *)uint64_t v196 = v198;
  uint64_t v199 = a3[52];
  unint64_t v200 = (void *)(a1 + v199);
  uint64_t v201 = (void *)(a2 + v199);
  void *v200 = *v201;
  v200[1] = v201[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v202 = a3[53];
  uint64_t v203 = (void *)(a1 + v202);
  uint64_t v204 = (void *)(a2 + v202);
  *uint64_t v203 = *v204;
  v203[1] = v204[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v205 = a3[54];
  uint64_t v206 = a1 + v205;
  long long v207 = (uint64_t *)(a2 + v205);
  uint64_t v208 = *v207;
  *(unsigned char *)(v206 + 8) = *((unsigned char *)v207 + 8);
  *(void *)uint64_t v206 = v208;
  uint64_t v209 = a3[55];
  uint64_t v210 = a1 + v209;
  BOOL v211 = (uint64_t *)(a2 + v209);
  uint64_t v212 = *v211;
  *(unsigned char *)(v210 + 8) = *((unsigned char *)v211 + 8);
  *(void *)uint64_t v210 = v212;
  uint64_t v213 = a3[56];
  uint64_t v214 = (void *)(a1 + v213);
  unint64_t v215 = (void *)(a2 + v213);
  *uint64_t v214 = *v215;
  v214[1] = v215[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[57]) = *(void *)(a2 + a3[57]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *sub_1000AC5B0(uint64_t *a1)
{
  return a1;
}

uint64_t initializeWithTake for MessageDictionary(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  uint64_t v6 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = v6;
  uint64_t v7 = a3[18];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  uint64_t v10 = sub_1000B8380();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10001295C(&qword_1000EC678);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[19];
  uint64_t v14 = a3[20];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = (void *)(a1 + v14);
  uint64_t v18 = (const void *)(a2 + v14);
  uint64_t v19 = sub_1000B8340();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_10001295C(&qword_1000EC790);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v22 = a3[21];
  uint64_t v23 = a3[22];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  uint64_t v26 = a3[24];
  *(_OWORD *)(a1 + a3[23]) = *(_OWORD *)(a2 + a3[23]);
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  uint64_t v27 = a3[25];
  uint64_t v28 = a3[26];
  uint64_t v29 = a1 + v27;
  uint64_t v30 = a2 + v27;
  *(void *)uint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  *(_OWORD *)(a1 + v28) = *(_OWORD *)(a2 + v28);
  uint64_t v31 = a3[28];
  *(_OWORD *)(a1 + a3[27]) = *(_OWORD *)(a2 + a3[27]);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(void *)(v32 + 61) = *(void *)(v33 + 61);
  long long v34 = *(_OWORD *)(v33 + 48);
  *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
  *(_OWORD *)(v32 + 48) = v34;
  long long v35 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v35;
  uint64_t v36 = a3[30];
  *(_OWORD *)(a1 + a3[29]) = *(_OWORD *)(a2 + a3[29]);
  *(_OWORD *)(a1 + v36) = *(_OWORD *)(a2 + v36);
  uint64_t v37 = a3[32];
  *(_OWORD *)(a1 + a3[31]) = *(_OWORD *)(a2 + a3[31]);
  *(_OWORD *)(a1 + v37) = *(_OWORD *)(a2 + v37);
  uint64_t v38 = a3[34];
  *(_OWORD *)(a1 + a3[33]) = *(_OWORD *)(a2 + a3[33]);
  *(_OWORD *)(a1 + v38) = *(_OWORD *)(a2 + v38);
  uint64_t v39 = a3[36];
  *(_OWORD *)(a1 + a3[35]) = *(_OWORD *)(a2 + a3[35]);
  *(_OWORD *)(a1 + v39) = *(_OWORD *)(a2 + v39);
  uint64_t v40 = a3[38];
  *(_OWORD *)(a1 + a3[37]) = *(_OWORD *)(a2 + a3[37]);
  *(_OWORD *)(a1 + v40) = *(_OWORD *)(a2 + v40);
  uint64_t v41 = a3[39];
  uint64_t v42 = a3[40];
  uint64_t v43 = a1 + v41;
  uint64_t v44 = a2 + v41;
  *(void *)uint64_t v43 = *(void *)v44;
  *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
  *(_OWORD *)(a1 + v42) = *(_OWORD *)(a2 + v42);
  uint64_t v45 = a3[42];
  *(_OWORD *)(a1 + a3[41]) = *(_OWORD *)(a2 + a3[41]);
  *(_OWORD *)(a1 + v45) = *(_OWORD *)(a2 + v45);
  uint64_t v46 = a3[44];
  *(_OWORD *)(a1 + a3[43]) = *(_OWORD *)(a2 + a3[43]);
  *(_OWORD *)(a1 + v46) = *(_OWORD *)(a2 + v46);
  uint64_t v47 = a3[46];
  *(_OWORD *)(a1 + a3[45]) = *(_OWORD *)(a2 + a3[45]);
  *(_OWORD *)(a1 + v47) = *(_OWORD *)(a2 + v47);
  uint64_t v48 = a3[48];
  *(_OWORD *)(a1 + a3[47]) = *(_OWORD *)(a2 + a3[47]);
  *(_OWORD *)(a1 + v48) = *(_OWORD *)(a2 + v48);
  uint64_t v49 = a3[50];
  *(unsigned char *)(a1 + a3[49]) = *(unsigned char *)(a2 + a3[49]);
  *(_OWORD *)(a1 + v49) = *(_OWORD *)(a2 + v49);
  uint64_t v50 = a3[51];
  uint64_t v51 = a3[52];
  uint64_t v52 = a1 + v50;
  uint64_t v53 = a2 + v50;
  *(void *)uint64_t v52 = *(void *)v53;
  *(unsigned char *)(v52 + 8) = *(unsigned char *)(v53 + 8);
  *(_OWORD *)(a1 + v51) = *(_OWORD *)(a2 + v51);
  uint64_t v54 = a3[54];
  *(_OWORD *)(a1 + a3[53]) = *(_OWORD *)(a2 + a3[53]);
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  *(void *)uint64_t v55 = *(void *)v56;
  *(unsigned char *)(v55 + 8) = *(unsigned char *)(v56 + 8);
  uint64_t v57 = a3[55];
  uint64_t v58 = a3[56];
  uint64_t v59 = a1 + v57;
  uint64_t v60 = a2 + v57;
  *(unsigned char *)(v59 + 8) = *(unsigned char *)(v60 + 8);
  *(void *)uint64_t v59 = *(void *)v60;
  *(_OWORD *)(a1 + v58) = *(_OWORD *)(a2 + v58);
  *(void *)(a1 + a3[57]) = *(void *)(a2 + a3[57]);
  return a1;
}

uint64_t assignWithTake for MessageDictionary(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  uint64_t v10 = (_OWORD *)(a2 + 80);
  unint64_t v11 = *(void *)(a1 + 88);
  if (v11 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v12 = *(void *)(a2 + 88);
  if (v12 >> 60 == 15)
  {
    sub_10003F900(a1 + 80);
LABEL_4:
    *(_OWORD *)(a1 + 80) = *v10;
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)v10;
  *(void *)(a1 + 88) = v12;
  sub_100018074(v13, v11);
LABEL_6:
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v14 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[18];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = sub_1000B8380();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_11:
    uint64_t v23 = sub_10001295C(&qword_1000EC678);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v16, v17, v18);
LABEL_12:
  uint64_t v24 = a3[19];
  uint64_t v25 = a3[20];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = (void *)(a1 + v25);
  uint64_t v29 = (void *)(a2 + v25);
  uint64_t v30 = sub_1000B8340();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
LABEL_17:
    uint64_t v35 = sub_10001295C(&qword_1000EC790);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v31 + 40))(v28, v29, v30);
LABEL_18:
  uint64_t v36 = a3[21];
  uint64_t v37 = a3[22];
  uint64_t v38 = a1 + v36;
  uint64_t v39 = a2 + v36;
  *(void *)uint64_t v38 = *(void *)v39;
  *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
  uint64_t v40 = (void *)(a1 + v37);
  uint64_t v41 = (uint64_t *)(a2 + v37);
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  *uint64_t v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[23];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (uint64_t *)(a2 + v44);
  uint64_t v48 = *v46;
  uint64_t v47 = v46[1];
  void *v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
  uint64_t v49 = a3[24];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (uint64_t *)(a2 + v49);
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  void *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  uint64_t v54 = a3[25];
  uint64_t v55 = a3[26];
  uint64_t v56 = a1 + v54;
  uint64_t v57 = a2 + v54;
  *(void *)uint64_t v56 = *(void *)v57;
  *(unsigned char *)(v56 + 8) = *(unsigned char *)(v57 + 8);
  uint64_t v58 = (void *)(a1 + v55);
  uint64_t v59 = (uint64_t *)(a2 + v55);
  uint64_t v61 = *v59;
  uint64_t v60 = v59[1];
  *uint64_t v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  uint64_t v62 = a3[27];
  uint64_t v63 = a1 + v62;
  uint64_t v64 = a2 + v62;
  unint64_t v65 = *(void *)(a1 + v62 + 8);
  if (v65 >> 60 == 15)
  {
LABEL_21:
    *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
    goto LABEL_23;
  }
  unint64_t v66 = *(void *)(v64 + 8);
  if (v66 >> 60 == 15)
  {
    sub_10003F900(v63);
    goto LABEL_21;
  }
  uint64_t v67 = *(void *)v63;
  *(void *)uint64_t v63 = *(void *)v64;
  *(void *)(v63 + 8) = v66;
  sub_100018074(v67, v65);
LABEL_23:
  uint64_t v68 = a3[28];
  uint64_t v69 = a1 + v68;
  uint64_t v70 = a2 + v68;
  if (*(void *)(a1 + v68 + 8) == 1)
  {
LABEL_26:
    long long v72 = *(_OWORD *)(v70 + 48);
    *(_OWORD *)(v69 + 32) = *(_OWORD *)(v70 + 32);
    *(_OWORD *)(v69 + 48) = v72;
    *(void *)(v69 + 61) = *(void *)(v70 + 61);
    long long v73 = *(_OWORD *)(v70 + 16);
    *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
    *(_OWORD *)(v69 + 16) = v73;
    goto LABEL_40;
  }
  uint64_t v71 = *(void *)(v70 + 8);
  if (v71 == 1)
  {
    sub_1000AC5B0((uint64_t *)v69);
    goto LABEL_26;
  }
  *(void *)uint64_t v69 = *(void *)v70;
  *(void *)(v69 + 8) = v71;
  swift_bridgeObjectRelease();
  uint64_t v74 = (_OWORD *)(v70 + 16);
  unint64_t v75 = *(void *)(v69 + 24);
  if (v75 >> 60 == 15) {
    goto LABEL_30;
  }
  unint64_t v76 = *(void *)(v70 + 24);
  if (v76 >> 60 == 15)
  {
    sub_10003F900(v69 + 16);
LABEL_30:
    *(_OWORD *)(v69 + 16) = *v74;
    goto LABEL_34;
  }
  uint64_t v77 = *(void *)(v69 + 16);
  *(void *)(v69 + 16) = *(void *)v74;
  *(void *)(v69 + 24) = v76;
  sub_100018074(v77, v75);
LABEL_34:
  uint64_t v78 = *(void *)(v70 + 40);
  *(void *)(v69 + 32) = *(void *)(v70 + 32);
  *(void *)(v69 + 40) = v78;
  swift_bridgeObjectRelease();
  uint64_t v79 = (void *)(v70 + 48);
  unint64_t v80 = *(void *)(v69 + 56);
  if (v80 >> 60 != 15)
  {
    unint64_t v81 = *(void *)(v70 + 56);
    if (v81 >> 60 != 15)
    {
      uint64_t v82 = *(void *)(v69 + 48);
      *(void *)(v69 + 48) = *v79;
      *(void *)(v69 + 56) = v81;
      sub_100018074(v82, v80);
      goto LABEL_39;
    }
    sub_10003F900(v69 + 48);
  }
  *(_OWORD *)(v69 + 48) = *(_OWORD *)v79;
LABEL_39:
  *(_DWORD *)(v69 + 64) = *(_DWORD *)(v70 + 64);
  *(unsigned char *)(v69 + 68) = *(unsigned char *)(v70 + 68);
LABEL_40:
  uint64_t v83 = a3[29];
  uint64_t v84 = a1 + v83;
  uint64_t v85 = a2 + v83;
  unint64_t v86 = *(void *)(a1 + v83 + 8);
  if (v86 >> 60 == 15)
  {
LABEL_43:
    *(_OWORD *)uint64_t v84 = *(_OWORD *)v85;
    goto LABEL_45;
  }
  unint64_t v87 = *(void *)(v85 + 8);
  if (v87 >> 60 == 15)
  {
    sub_10003F900(v84);
    goto LABEL_43;
  }
  uint64_t v88 = *(void *)v84;
  *(void *)uint64_t v84 = *(void *)v85;
  *(void *)(v84 + 8) = v87;
  sub_100018074(v88, v86);
LABEL_45:
  uint64_t v89 = a3[30];
  uint64_t v90 = a1 + v89;
  uint64_t v91 = a2 + v89;
  unint64_t v92 = *(void *)(a1 + v89 + 8);
  if (v92 >> 60 == 15)
  {
LABEL_48:
    *(_OWORD *)uint64_t v90 = *(_OWORD *)v91;
    goto LABEL_50;
  }
  unint64_t v93 = *(void *)(v91 + 8);
  if (v93 >> 60 == 15)
  {
    sub_10003F900(v90);
    goto LABEL_48;
  }
  uint64_t v94 = *(void *)v90;
  *(void *)uint64_t v90 = *(void *)v91;
  *(void *)(v90 + 8) = v93;
  sub_100018074(v94, v92);
LABEL_50:
  uint64_t v95 = a3[31];
  uint64_t v96 = (void *)(a1 + v95);
  uint64_t v97 = (uint64_t *)(a2 + v95);
  uint64_t v99 = *v97;
  uint64_t v98 = v97[1];
  *uint64_t v96 = v99;
  v96[1] = v98;
  swift_bridgeObjectRelease();
  uint64_t v100 = a3[32];
  uint64_t v101 = (void *)(a1 + v100);
  unint64_t v102 = (uint64_t *)(a2 + v100);
  uint64_t v104 = *v102;
  uint64_t v103 = v102[1];
  *uint64_t v101 = v104;
  v101[1] = v103;
  swift_bridgeObjectRelease();
  uint64_t v105 = a3[33];
  unint64_t v106 = (void *)(a1 + v105);
  uint64_t v107 = (uint64_t *)(a2 + v105);
  uint64_t v109 = *v107;
  uint64_t v108 = v107[1];
  *unint64_t v106 = v109;
  v106[1] = v108;
  swift_bridgeObjectRelease();
  uint64_t v110 = a3[34];
  uint64_t v111 = a1 + v110;
  uint64_t v112 = a2 + v110;
  unint64_t v113 = *(void *)(a1 + v110 + 8);
  if (v113 >> 60 == 15)
  {
LABEL_53:
    *(_OWORD *)uint64_t v111 = *(_OWORD *)v112;
    goto LABEL_55;
  }
  unint64_t v114 = *(void *)(v112 + 8);
  if (v114 >> 60 == 15)
  {
    sub_10003F900(v111);
    goto LABEL_53;
  }
  uint64_t v115 = *(void *)v111;
  *(void *)uint64_t v111 = *(void *)v112;
  *(void *)(v111 + 8) = v114;
  sub_100018074(v115, v113);
LABEL_55:
  uint64_t v116 = a3[35];
  uint64_t v117 = a1 + v116;
  uint64_t v118 = a2 + v116;
  unint64_t v119 = *(void *)(a1 + v116 + 8);
  if (v119 >> 60 == 15)
  {
LABEL_58:
    *(_OWORD *)uint64_t v117 = *(_OWORD *)v118;
    goto LABEL_60;
  }
  unint64_t v120 = *(void *)(v118 + 8);
  if (v120 >> 60 == 15)
  {
    sub_10003F900(v117);
    goto LABEL_58;
  }
  uint64_t v121 = *(void *)v117;
  *(void *)uint64_t v117 = *(void *)v118;
  *(void *)(v117 + 8) = v120;
  sub_100018074(v121, v119);
LABEL_60:
  uint64_t v122 = a3[36];
  unint64_t v123 = (void *)(a1 + v122);
  uint64_t v124 = (uint64_t *)(a2 + v122);
  uint64_t v126 = *v124;
  uint64_t v125 = v124[1];
  *unint64_t v123 = v126;
  v123[1] = v125;
  swift_bridgeObjectRelease();
  uint64_t v127 = a3[37];
  uint64_t v128 = a1 + v127;
  uint64_t v129 = a2 + v127;
  unint64_t v130 = *(void *)(a1 + v127 + 8);
  if (v130 >> 60 == 15)
  {
LABEL_63:
    *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
    goto LABEL_65;
  }
  unint64_t v131 = *(void *)(v129 + 8);
  if (v131 >> 60 == 15)
  {
    sub_10003F900(v128);
    goto LABEL_63;
  }
  uint64_t v132 = *(void *)v128;
  *(void *)uint64_t v128 = *(void *)v129;
  *(void *)(v128 + 8) = v131;
  sub_100018074(v132, v130);
LABEL_65:
  uint64_t v133 = a3[38];
  uint64_t v134 = (void *)(a1 + v133);
  uint64_t v135 = (uint64_t *)(a2 + v133);
  uint64_t v137 = *v135;
  uint64_t v136 = v135[1];
  void *v134 = v137;
  v134[1] = v136;
  swift_bridgeObjectRelease();
  uint64_t v138 = a3[39];
  uint64_t v139 = a3[40];
  uint64_t v140 = a1 + v138;
  uint64_t v141 = a2 + v138;
  *(void *)uint64_t v140 = *(void *)v141;
  *(unsigned char *)(v140 + 8) = *(unsigned char *)(v141 + 8);
  unint64_t v142 = (void *)(a1 + v139);
  uint64_t v143 = (uint64_t *)(a2 + v139);
  uint64_t v145 = *v143;
  uint64_t v144 = v143[1];
  void *v142 = v145;
  v142[1] = v144;
  swift_bridgeObjectRelease();
  uint64_t v146 = a3[41];
  uint64_t v147 = a1 + v146;
  uint64_t v148 = a2 + v146;
  unint64_t v149 = *(void *)(a1 + v146 + 8);
  if (v149 >> 60 == 15)
  {
LABEL_68:
    *(_OWORD *)uint64_t v147 = *(_OWORD *)v148;
    goto LABEL_70;
  }
  unint64_t v150 = *(void *)(v148 + 8);
  if (v150 >> 60 == 15)
  {
    sub_10003F900(v147);
    goto LABEL_68;
  }
  uint64_t v151 = *(void *)v147;
  *(void *)uint64_t v147 = *(void *)v148;
  *(void *)(v147 + 8) = v150;
  sub_100018074(v151, v149);
LABEL_70:
  uint64_t v152 = a3[42];
  uint64_t v153 = a1 + v152;
  uint64_t v154 = a2 + v152;
  unint64_t v155 = *(void *)(a1 + v152 + 8);
  if (v155 >> 60 == 15)
  {
LABEL_73:
    *(_OWORD *)uint64_t v153 = *(_OWORD *)v154;
    goto LABEL_75;
  }
  unint64_t v156 = *(void *)(v154 + 8);
  if (v156 >> 60 == 15)
  {
    sub_10003F900(v153);
    goto LABEL_73;
  }
  uint64_t v157 = *(void *)v153;
  *(void *)uint64_t v153 = *(void *)v154;
  *(void *)(v153 + 8) = v156;
  sub_100018074(v157, v155);
LABEL_75:
  uint64_t v158 = a3[43];
  uint64_t v159 = (uint64_t *)(a1 + v158);
  unint64_t v160 = (uint64_t *)(a2 + v158);
  unint64_t v161 = *(void *)(a1 + v158 + 8);
  if (v161 >> 60 != 15)
  {
    unint64_t v162 = v160[1];
    if (v162 >> 60 != 15)
    {
      uint64_t v163 = *v159;
      *uint64_t v159 = *v160;
      v159[1] = v162;
      sub_100018074(v163, v161);
      goto LABEL_80;
    }
    sub_10003F900((uint64_t)v159);
  }
  *(_OWORD *)uint64_t v159 = *(_OWORD *)v160;
LABEL_80:
  uint64_t v164 = a3[44];
  uint64_t v165 = (void *)(a1 + v164);
  uint64_t v166 = (uint64_t *)(a2 + v164);
  uint64_t v168 = *v166;
  uint64_t v167 = v166[1];
  *uint64_t v165 = v168;
  v165[1] = v167;
  swift_bridgeObjectRelease();
  uint64_t v169 = a3[45];
  uint64_t v170 = (void *)(a1 + v169);
  uint64_t v171 = (uint64_t *)(a2 + v169);
  uint64_t v173 = *v171;
  uint64_t v172 = v171[1];
  *uint64_t v170 = v173;
  v170[1] = v172;
  swift_bridgeObjectRelease();
  uint64_t v174 = a3[46];
  uint64_t v175 = (void *)(a1 + v174);
  unint64_t v176 = (uint64_t *)(a2 + v174);
  uint64_t v178 = *v176;
  uint64_t v177 = v176[1];
  void *v175 = v178;
  v175[1] = v177;
  swift_bridgeObjectRelease();
  uint64_t v179 = a3[47];
  uint64_t v180 = (void *)(a1 + v179);
  uint64_t v181 = (uint64_t *)(a2 + v179);
  uint64_t v183 = *v181;
  uint64_t v182 = v181[1];
  void *v180 = v183;
  v180[1] = v182;
  swift_bridgeObjectRelease();
  uint64_t v184 = a3[48];
  uint64_t v185 = (void *)(a1 + v184);
  uint64_t v186 = (uint64_t *)(a2 + v184);
  uint64_t v188 = *v186;
  uint64_t v187 = v186[1];
  *uint64_t v185 = v188;
  v185[1] = v187;
  swift_bridgeObjectRelease();
  uint64_t v189 = a3[50];
  *(unsigned char *)(a1 + a3[49]) = *(unsigned char *)(a2 + a3[49]);
  uint64_t v190 = (void *)(a1 + v189);
  uint64_t v191 = (uint64_t *)(a2 + v189);
  uint64_t v193 = *v191;
  uint64_t v192 = v191[1];
  *uint64_t v190 = v193;
  v190[1] = v192;
  swift_bridgeObjectRelease();
  uint64_t v194 = a3[51];
  uint64_t v195 = a3[52];
  uint64_t v196 = a1 + v194;
  uint64_t v197 = a2 + v194;
  *(void *)uint64_t v196 = *(void *)v197;
  *(unsigned char *)(v196 + 8) = *(unsigned char *)(v197 + 8);
  uint64_t v198 = (void *)(a1 + v195);
  uint64_t v199 = (uint64_t *)(a2 + v195);
  uint64_t v201 = *v199;
  uint64_t v200 = v199[1];
  *uint64_t v198 = v201;
  v198[1] = v200;
  swift_bridgeObjectRelease();
  uint64_t v202 = a3[53];
  uint64_t v203 = (void *)(a1 + v202);
  uint64_t v204 = (uint64_t *)(a2 + v202);
  uint64_t v206 = *v204;
  uint64_t v205 = v204[1];
  *uint64_t v203 = v206;
  v203[1] = v205;
  swift_bridgeObjectRelease();
  uint64_t v207 = a3[54];
  uint64_t v208 = a3[55];
  uint64_t v209 = a1 + v207;
  uint64_t v210 = a2 + v207;
  *(void *)uint64_t v209 = *(void *)v210;
  *(unsigned char *)(v209 + 8) = *(unsigned char *)(v210 + 8);
  uint64_t v211 = a1 + v208;
  uint64_t v212 = a2 + v208;
  *(void *)uint64_t v211 = *(void *)v212;
  *(unsigned char *)(v211 + 8) = *(unsigned char *)(v212 + 8);
  uint64_t v213 = a3[56];
  uint64_t v214 = (void *)(a1 + v213);
  unint64_t v215 = (uint64_t *)(a2 + v213);
  uint64_t v217 = *v215;
  uint64_t v216 = v215[1];
  *uint64_t v214 = v217;
  v214[1] = v216;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[57]) = *(void *)(a2 + a3[57]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageDictionary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000AD47C);
}

uint64_t sub_1000AD47C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_10001295C(&qword_1000EC678);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      unint64_t v12 = (char *)a1 + *(int *)(a3 + 72);
      uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_10001295C(&qword_1000EC790);
      uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = (char *)a1 + *(int *)(a3 + 80);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for MessageDictionary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000AD5D0);
}

void *sub_1000AD5D0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *unint64_t result = a2;
  }
  else
  {
    uint64_t v8 = sub_10001295C(&qword_1000EC678);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 72);
      unint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10001295C(&qword_1000EC790);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 80);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1000AD704()
{
  sub_1000AD8AC(319, (unint64_t *)&unk_1000EDE98, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (v0 <= 0x3F)
  {
    sub_1000AD8AC(319, (unint64_t *)&unk_1000ED428, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000AD8AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000BBE30();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for MessageDictionary.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xCB) {
    goto LABEL_17;
  }
  if (a2 + 53 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 53) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 53;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 53;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 53;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x36;
  int v8 = v6 - 54;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MessageDictionary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 53 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 53) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xCB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xCA)
  {
    unsigned int v6 = ((a2 - 203) >> 8) + 1;
    *unint64_t result = a2 + 53;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000ADA5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 53;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageDictionary.CodingKeys()
{
  return &type metadata for MessageDictionary.CodingKeys;
}

uint64_t destroy for BalloonPluginPayloadAttachment(uint64_t *a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = a1[3];
  if (v2 >> 60 != 15) {
    sub_100018074(a1[2], v2);
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v4 = a1[7];
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = a1[6];
    return sub_100018074(v5, v4);
  }
  return result;
}

uint64_t initializeWithCopy for BalloonPluginPayloadAttachment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = (_OWORD *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_100017F4C(v7, v6);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v6;
  }
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = (_OWORD *)(a2 + 48);
  unint64_t v10 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 48) = *v9;
  }
  else
  {
    uint64_t v11 = *(void *)v9;
    sub_100017F4C(v11, v10);
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = v10;
  }
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  return a1;
}

uint64_t assignWithCopy for BalloonPluginPayloadAttachment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) >> 60 == 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *v4;
      sub_100017F4C(*v4, *(void *)(a2 + 24));
      *(void *)(a1 + 16) = v6;
      *(void *)(a1 + 24) = v5;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
    sub_10003F900(a1 + 16);
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v7 = *v4;
  sub_100017F4C(*v4, *(void *)(a2 + 24));
  uint64_t v8 = *(void *)(a1 + 16);
  unint64_t v9 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v5;
  sub_100018074(v8, v9);
LABEL_8:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v10 = (uint64_t *)(a2 + 48);
  unint64_t v11 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56) >> 60 != 15)
  {
    if (v11 >> 60 != 15)
    {
      uint64_t v13 = *v10;
      sub_100017F4C(*v10, *(void *)(a2 + 56));
      uint64_t v14 = *(void *)(a1 + 48);
      unint64_t v15 = *(void *)(a1 + 56);
      *(void *)(a1 + 48) = v13;
      *(void *)(a1 + 56) = v11;
      sub_100018074(v14, v15);
      goto LABEL_15;
    }
    sub_10003F900(a1 + 48);
    goto LABEL_13;
  }
  if (v11 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v10;
    goto LABEL_15;
  }
  uint64_t v12 = *v10;
  sub_100017F4C(*v10, *(void *)(a2 + 56));
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
LABEL_15:
  int v16 = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = v16;
  return a1;
}

uint64_t assignWithTake for BalloonPluginPayloadAttachment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = (_OWORD *)(a2 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 24);
  if (v7 >> 60 == 15)
  {
    sub_10003F900(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *v5;
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)v5;
  *(void *)(a1 + 24) = v7;
  sub_100018074(v8, v6);
LABEL_6:
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v9;
  swift_bridgeObjectRelease();
  unint64_t v10 = (void *)(a2 + 48);
  unint64_t v11 = *(void *)(a1 + 56);
  if (v11 >> 60 != 15)
  {
    unint64_t v12 = *(void *)(a2 + 56);
    if (v12 >> 60 != 15)
    {
      uint64_t v13 = *(void *)(a1 + 48);
      *(void *)(a1 + 48) = *v10;
      *(void *)(a1 + 56) = v12;
      sub_100018074(v13, v11);
      goto LABEL_11;
    }
    sub_10003F900(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v10;
LABEL_11:
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  return a1;
}

uint64_t getEnumTagSinglePayload for BalloonPluginPayloadAttachment(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 69)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BalloonPluginPayloadAttachment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 68) = 0;
    *(_DWORD *)(result + 64) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 69) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 69) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BalloonPluginPayloadAttachment()
{
  return &type metadata for BalloonPluginPayloadAttachment;
}

unsigned char *storeEnumTagSinglePayload for BalloonPluginPayloadAttachment.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000ADFF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BalloonPluginPayloadAttachment.CodingKeys()
{
  return &type metadata for BalloonPluginPayloadAttachment.CodingKeys;
}

ValueMetadata *type metadata accessor for RepositionStickerCommandUnpacker()
{
  return &type metadata for RepositionStickerCommandUnpacker;
}

unint64_t sub_1000AE038(uint64_t a1)
{
  unint64_t result = sub_100012A48();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000AE060()
{
  return sub_1000AF714(&qword_1000EDFA0, (void (*)(uint64_t))&type metadata accessor for RepositionStickerCommand);
}

uint64_t sub_1000AE0A8@<X0>(uint64_t a1@<X8>)
{
  *(void *)&long long v103 = a1;
  uint64_t v1 = sub_10001295C(&qword_1000EC628);
  __chkstk_darwin(v1 - 8);
  uint64_t v104 = (char *)v96 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1000BBF10();
  uint64_t v107 = *(void *)(v111 - 8);
  uint64_t v3 = __chkstk_darwin(v111);
  uint64_t v105 = (char *)v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v109 = (char *)v96 - v6;
  __chkstk_darwin(v5);
  uint64_t v108 = (char *)v96 - v7;
  uint64_t v8 = sub_10001295C(&qword_1000EC678);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000BB5D0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v15 = (char *)v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v100 = (char *)v96 - v16;
  uint64_t v17 = sub_1000BAC50();
  uint64_t v101 = *(void *)(v17 - 8);
  unint64_t v102 = (void (*)(char *, char *, uint64_t))v17;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v99 = (char *)v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  unint64_t v106 = (char *)v96 - v20;
  uint64_t v21 = sub_10001295C(&qword_1000EC630);
  __chkstk_darwin(v21 - 8);
  unint64_t v113 = (char *)v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000B86C0();
  uint64_t v112 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)v96 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_1000BB6C0();
  uint64_t v114 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v116 = (char *)v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000B86D0();
  if (v28 >> 60 == 15)
  {
    sub_100018190();
    uint64_t v29 = (void *)sub_1000BBD40();
    sub_10001295C(&qword_1000EC5C8);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1000BF8A0;
    sub_1000B86E0();
    sub_1000BB5C0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t v31 = sub_1000B8380();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v10, 0, 1, v31);
    uint64_t v32 = sub_1000BB200();
    uint64_t v34 = v33;
    sub_1000184DC((uint64_t)v10, &qword_1000EC678);
    *(void *)(v30 + 56) = &type metadata for String;
    *(void *)(v30 + 64) = sub_10001824C();
    *(void *)(v30 + 32) = v32;
    *(void *)(v30 + 40) = v34;
    sub_1000BBBE0();
    sub_1000B8770();

    swift_bridgeObjectRelease();
    sub_1000AF6C0();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    uint64_t v97 = v27;
    unint64_t v98 = v28;
    Class isa = sub_1000B82B0().super.isa;
    id v37 = [(objc_class *)isa _imOptionallyDecompressData];

    uint64_t v38 = sub_1000B82D0();
    unint64_t v40 = v39;

    unint64_t v115 = v40;
    switch(v40 >> 62)
    {
      case 1uLL:
        LODWORD(v41) = HIDWORD(v38) - v38;
        if (__OFSUB__(HIDWORD(v38), v38))
        {
          __break(1u);
LABEL_17:
          __break(1u);
          JUMPOUT(0x1000AF0F4);
        }
        uint64_t v41 = (int)v41;
LABEL_8:
        if (v41 <= 0)
        {
LABEL_12:
          uint64_t v74 = v112;
          (*(void (**)(char *, void, uint64_t))(v112 + 104))(v25, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v23);
          sub_1000B86B0();
          (*(void (**)(char *, uint64_t))(v74 + 8))(v25, v23);
          unint64_t v75 = v116;
          sub_1000BB6B0();
          sub_100018190();
          uint64_t v111 = sub_1000BBDC0();
          sub_10001295C(&qword_1000EC5C8);
          uint64_t v76 = swift_allocObject();
          *(_OWORD *)(v76 + 16) = xmmword_1000BF8A0;
          uint64_t v77 = (uint64_t)v113;
          uint64_t v78 = v114;
          uint64_t v112 = *(void *)(v114 + 16);
          uint64_t v79 = v117;
          ((void (*)(char *, char *, uint64_t))v112)(v113, v75, v117);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56))(v77, 0, 1, v79);
          uint64_t v80 = sub_1000BB200();
          uint64_t v110 = v38;
          uint64_t v82 = v81;
          sub_1000184DC(v77, &qword_1000EC630);
          *(void *)(v76 + 56) = &type metadata for String;
          *(void *)(v76 + 64) = sub_10001824C();
          *(void *)(v76 + 32) = v80;
          *(void *)(v76 + 40) = v82;
          sub_1000BBBE0();
          uint64_t v83 = (void *)v111;
          sub_1000B8770();

          swift_bridgeObjectRelease();
          sub_1000AF714((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
          swift_allocError();
          ((void (*)(uint64_t, char *, uint64_t))v112)(v84, v75, v79);
          swift_willThrow();
          sub_1000180CC(v97, v98);
          sub_100018074(v110, v115);
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v75, v79);
        }
        else
        {
          sub_1000B81C0();
          swift_allocObject();
          uint64_t v45 = sub_1000B81B0();
          sub_1000AF75C();
          v96[1] = v45;
          uint64_t v46 = v110;
          sub_1000B81A0();
          if (v46)
          {
            *(void *)&long long v119 = v46;
            swift_errorRetain();
            sub_10001295C(&qword_1000EC648);
            uint64_t v47 = v108;
            uint64_t v48 = v111;
            if (swift_dynamicCast())
            {
              swift_errorRelease();
              uint64_t v49 = v107;
              uint64_t v50 = v109;
              (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v109, v47, v48);
              uint64_t v108 = (char *)sub_100018190();
              uint64_t v51 = (void *)sub_1000BBDC0();
              unint64_t v106 = (char *)sub_10001295C(&qword_1000EC5C8);
              uint64_t v52 = swift_allocObject();
              uint64_t v110 = v38;
              uint64_t v53 = (void *)v52;
              long long v103 = xmmword_1000BF8A0;
              *(_OWORD *)(v52 + 16) = xmmword_1000BF8A0;
              uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
              uint64_t v101 = v49 + 16;
              unint64_t v102 = v54;
              uint64_t v55 = (uint64_t)v104;
              uint64_t v56 = v50;
              uint64_t v57 = v111;
              v54(v104, v56, v111);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v55, 0, 1, v57);
              uint64_t v58 = sub_1000BB200();
              uint64_t v60 = v59;
              sub_1000184DC(v55, &qword_1000EC628);
              v53[7] = &type metadata for String;
              uint64_t v104 = (char *)sub_10001824C();
              v53[8] = v104;
              v53[4] = v58;
              v53[5] = v60;
              sub_1000BBBE0();
              sub_1000B8770();

              swift_bridgeObjectRelease();
              uint64_t v61 = v112;
              (*(void (**)(char *, void, uint64_t))(v112 + 104))(v25, enum case for TopLevelDictionary.CodingKeys.decryptedData(_:), v23);
              sub_1000B86B0();
              (*(void (**)(char *, uint64_t))(v61 + 8))(v25, v23);
              v102(v105, v109, v57);
              uint64_t v62 = v116;
              sub_1000BB6A0();
              uint64_t v63 = (void *)sub_1000BBDC0();
              uint64_t v64 = swift_allocObject();
              *(_OWORD *)(v64 + 16) = v103;
              uint64_t v65 = (uint64_t)v113;
              uint64_t v66 = v114;
              uint64_t v112 = *(void *)(v114 + 16);
              uint64_t v67 = v117;
              ((void (*)(char *, char *, uint64_t))v112)(v113, v62, v117);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v66 + 56))(v65, 0, 1, v67);
              uint64_t v68 = sub_1000BB200();
              uint64_t v70 = v69;
              sub_1000184DC(v65, &qword_1000EC630);
              uint64_t v71 = v104;
              *(void *)(v64 + 56) = &type metadata for String;
              *(void *)(v64 + 64) = v71;
              *(void *)(v64 + 32) = v68;
              *(void *)(v64 + 40) = v70;
              sub_1000BBBE0();
              sub_1000B8770();

              swift_bridgeObjectRelease();
              sub_1000AF714((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
              swift_allocError();
              long long v72 = v116;
              ((void (*)(uint64_t, char *, uint64_t))v112)(v73, v116, v67);
              swift_willThrow();
              sub_1000180CC(v97, v98);
              sub_100018074(v110, v115);
              swift_release();
              (*(void (**)(char *, uint64_t))(v66 + 8))(v72, v67);
              (*(void (**)(char *, uint64_t))(v107 + 8))(v109, v111);
              uint64_t result = swift_errorRelease();
            }
            else
            {
              swift_errorRelease();
              sub_100018190();
              unint64_t v86 = (void *)sub_1000BBDC0();
              sub_10001295C(&qword_1000EC5C8);
              uint64_t v87 = swift_allocObject();
              *(_OWORD *)(v87 + 16) = xmmword_1000BF8A0;
              *(void *)&long long v119 = v46;
              uint64_t v88 = sub_1000BB200();
              uint64_t v90 = v89;
              *(void *)(v87 + 56) = &type metadata for String;
              *(void *)(v87 + 64) = sub_10001824C();
              *(void *)(v87 + 32) = v88;
              *(void *)(v87 + 40) = v90;
              sub_1000BBBE0();
              sub_1000B8770();

              swift_bridgeObjectRelease();
              swift_getErrorValue();
              swift_getDynamicType();
              *(void *)&long long v119 = 0;
              *((void *)&v119 + 1) = 0xE000000000000000;
              sub_1000BBED0(22);
              swift_bridgeObjectRelease();
              *(void *)&long long v119 = 0xD000000000000014;
              *((void *)&v119 + 1) = 0x80000001000C9380;
              v146._countAndFlagsBits = sub_1000BC2B0();
              sub_1000BB9A0(v146);
              swift_bridgeObjectRelease();
              sub_1000AF714((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
              swift_allocError();
              sub_1000BB6B0();
              swift_willThrow();
              swift_errorRelease();
              swift_release();
              sub_100018074(v38, v115);
              uint64_t result = sub_1000180CC(v97, v98);
            }
          }
          else
          {
            uint64_t v110 = v38;
            v118[10] = v129;
            v118[11] = v130;
            v118[12] = v131;
            v118[13] = v132;
            v118[6] = v125;
            v118[7] = v126;
            v118[8] = v127;
            v118[9] = v128;
            _OWORD v118[2] = v121;
            v118[3] = v122;
            v118[4] = v123;
            v118[5] = v124;
            v118[0] = v119;
            v118[1] = v120;
            long long v143 = v129;
            long long v144 = v130;
            long long v145 = v131;
            long long v139 = v125;
            long long v140 = v126;
            long long v141 = v127;
            long long v142 = v128;
            long long v135 = v121;
            long long v136 = v122;
            long long v137 = v123;
            long long v138 = v124;
            long long v133 = v119;
            long long v134 = v120;
            uint64_t v117 = v132;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1000AF7B0((uint64_t)v118);
            sub_1000AF828((uint64_t)v118);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v85 = v106;
            sub_1000AF104();
            sub_1000AF894((uint64_t)v118);
            sub_1000B86E0();
            uint64_t v91 = v101;
            unint64_t v92 = v85;
            unint64_t v93 = v85;
            uint64_t v94 = v102;
            (*(void (**)(char *, char *, void))(v101 + 16))(v99, v92, v102);
            sub_1000BAF00();
            uint64_t v95 = v110;
            (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v91 + 8))(v93, v94);
            sub_1000180CC(v97, v98);
            sub_100018074(v95, v115);
            uint64_t result = swift_release();
          }
        }
        break;
      case 2uLL:
        uint64_t v43 = *(void *)(v38 + 16);
        uint64_t v42 = *(void *)(v38 + 24);
        BOOL v44 = __OFSUB__(v42, v43);
        uint64_t v41 = v42 - v43;
        if (!v44) {
          goto LABEL_8;
        }
        goto LABEL_17;
      case 3uLL:
        goto LABEL_12;
      default:
        uint64_t v41 = BYTE6(v115);
        goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1000AF104()
{
  if (*((unsigned char *)v0 + 72)) {
    uint64_t v1 = 0;
  }
  else {
    uint64_t v1 = v0[8];
  }
  if (v1 < 0 || (v0[11] & 1) == 0 && v0[10] < 0)
  {
    uint64_t result = sub_1000BBF30();
    __break(1u);
  }
  else
  {
    sub_1000AF900((uint64_t)(v0 + 14), (uint64_t)v6);
    sub_1000AF900((uint64_t)v6, (uint64_t)&v7);
    if ((v8 & 1) != 0
      || (sub_1000AF900((uint64_t)(v0 + 16), (uint64_t)v5), sub_1000AF900((uint64_t)v5, (uint64_t)&v9), (v10 & 1) != 0)
      || (sub_1000AF900((uint64_t)(v0 + 18), (uint64_t)v4), sub_1000AF900((uint64_t)v4, (uint64_t)&v11), (v12 & 1) != 0)
      || (sub_1000AF900((uint64_t)(v0 + 20), (uint64_t)v3), sub_1000AF900((uint64_t)v3, (uint64_t)&v13), (v14 & 1) != 0)
      || (v0[23] & 1) != 0)
    {
      sub_1000AF968();
      swift_allocError();
      return swift_willThrow();
    }
    else
    {
      uint64_t v15 = *v0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_1000BAC40();
    }
  }
  return result;
}

uint64_t sub_1000AF370(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001295C(&qword_1000EDFE0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014C68(a1, a1[3]);
  sub_1000B0E6C();
  sub_1000BC280();
  long long v9 = v3[11];
  long long v27 = v3[10];
  long long v28 = v9;
  long long v29 = v3[12];
  long long v10 = v3[7];
  long long v23 = v3[6];
  long long v24 = v10;
  long long v11 = v3[9];
  long long v25 = v3[8];
  long long v26 = v11;
  long long v12 = v3[3];
  long long v19 = v3[2];
  long long v13 = v3[4];
  long long v22 = v3[5];
  long long v20 = v12;
  long long v21 = v13;
  long long v14 = *v3;
  long long v18 = v3[1];
  long long v17 = v14;
  v16[15] = 0;
  sub_1000B0F8C();
  sub_1000BC160();
  if (!v2)
  {
    LOBYTE(v17) = 1;
    sub_1000BC130();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000AF540@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000B8700();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B81C0();
  swift_allocObject();
  sub_1000B81B0();
  sub_1000AF714(&qword_1000EC620, (void (*)(uint64_t))&type metadata accessor for TopLevelDictionary);
  sub_1000B81A0();
  uint64_t result = swift_release();
  if (!v1)
  {
    sub_1000AE0A8(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

unint64_t sub_1000AF6C0()
{
  unint64_t result = qword_1000EDFA8;
  if (!qword_1000EDFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDFA8);
  }
  return result;
}

uint64_t sub_1000AF714(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000AF75C()
{
  unint64_t result = qword_1000EDFB0;
  if (!qword_1000EDFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDFB0);
  }
  return result;
}

uint64_t sub_1000AF7B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000AF828(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000AF894(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000AF900(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001295C(&qword_1000EDFB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000AF968()
{
  unint64_t result = qword_1000EDFC0;
  if (!qword_1000EDFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDFC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for RepositionStickerCommandContents.UnpackingError()
{
  return &type metadata for RepositionStickerCommandContents.UnpackingError;
}

uint64_t destroy for RepositionStickerCommandContents()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RepositionStickerCommandContents(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  uint64_t v8 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v8;
  uint64_t v9 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RepositionStickerCommandContents(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  uint64_t v5 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v5;
  uint64_t v6 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v6;
  uint64_t v7 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v7;
  uint64_t v8 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v8;
  uint64_t v9 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v9;
  uint64_t v10 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v10;
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  uint64_t v11 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v11;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for RepositionStickerCommandContents(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(__n128 *)(a1 + 160) = result;
  *(_OWORD *)(a1 + 176) = v10;
  return result;
}

uint64_t assignWithTake for RepositionStickerCommandContents(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v8 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v8;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v9 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RepositionStickerCommandContents(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 224)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RepositionStickerCommandContents(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 224) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 224) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepositionStickerCommandContents()
{
  return &type metadata for RepositionStickerCommandContents;
}

ValueMetadata *type metadata accessor for RepositionStickerCommandUnpacker.EncryptedMessageMissingData()
{
  return &type metadata for RepositionStickerCommandUnpacker.EncryptedMessageMissingData;
}

uint64_t sub_1000AFED4(char *a1, char *a2)
{
  return sub_10004E2F4(*a1, *a2);
}

Swift::Int sub_1000AFEE0()
{
  return sub_1000BC250();
}

uint64_t sub_1000AFF48()
{
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000AFF94()
{
  return sub_1000BC250();
}

uint64_t sub_1000AFFF8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  long long v3 = (void *)a1[1];
  v4._rawValue = &off_1000E1E98;
  v8._object = v3;
  Swift::Int v5 = sub_1000BBFA0(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_1000B0058(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1768977011;
  if (*v1) {
    uint64_t v2 = 1734959987;
  }
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1000B0080()
{
  if (*v0) {
    return 1734959987;
  }
  else {
    return 1768977011;
  }
}

uint64_t sub_1000B00A4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_1000E1E98;
  v9._object = a2;
  Swift::Int v6 = sub_1000BBFA0(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

uint64_t sub_1000B0108(uint64_t a1)
{
  unint64_t v2 = sub_1000B0E6C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B0144(uint64_t a1)
{
  unint64_t v2 = sub_1000B0E6C();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1000B0180@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1000B0AEC(a1, v12);
  if (!v2)
  {
    long long v5 = v12[11];
    a2[10] = v12[10];
    a2[11] = v5;
    long long v6 = v12[13];
    a2[12] = v12[12];
    a2[13] = v6;
    long long v7 = v12[7];
    a2[6] = v12[6];
    a2[7] = v7;
    long long v8 = v12[9];
    a2[8] = v12[8];
    a2[9] = v8;
    long long v9 = v12[3];
    a2[2] = v12[2];
    a2[3] = v9;
    long long v10 = v12[5];
    a2[4] = v12[4];
    a2[5] = v10;
    double result = *(double *)v12;
    long long v11 = v12[1];
    *a2 = v12[0];
    a2[1] = v11;
  }
  return result;
}

uint64_t sub_1000B01EC(void *a1)
{
  return sub_1000AF370(a1);
}

uint64_t sub_1000B0204(char a1)
{
  uint64_t result = 6580595;
  switch(a1)
  {
    case 1:
      uint64_t result = 6580592;
      break;
    case 2:
      uint64_t result = 0x6873616873;
      break;
    case 3:
      uint64_t result = 1684628083;
      break;
    case 4:
      uint64_t result = 6909043;
      break;
    case 5:
      uint64_t result = 6906227;
      break;
    case 6:
      uint64_t result = 7827571;
      break;
    case 7:
      uint64_t result = 7567475;
      break;
    case 8:
      uint64_t result = 7567731;
      break;
    case 9:
      uint64_t result = 6386547;
      break;
    case 10:
      uint64_t result = 7303795;
      break;
    case 11:
      uint64_t result = 7498099;
      break;
    case 12:
      uint64_t result = 7762035;
      break;
    case 13:
      uint64_t result = 1769108851;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000B032C(char a1)
{
  uint64_t result = 6580595;
  switch(a1)
  {
    case 1:
      uint64_t result = 6580592;
      break;
    case 2:
      uint64_t result = 0x6873616873;
      break;
    case 3:
      uint64_t result = 1684628083;
      break;
    case 4:
      uint64_t result = 6909043;
      break;
    case 5:
      uint64_t result = 6906227;
      break;
    case 6:
      uint64_t result = 7827571;
      break;
    case 7:
      uint64_t result = 7567475;
      break;
    case 8:
      uint64_t result = 7567731;
      break;
    case 9:
      uint64_t result = 6386547;
      break;
    case 10:
      uint64_t result = 7303795;
      break;
    case 11:
      uint64_t result = 7498099;
      break;
    case 12:
      uint64_t result = 7762035;
      break;
    case 13:
      uint64_t result = 1769108851;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000B0454(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1000B0204(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1000B0204(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1000BC1A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1000B04E0()
{
  char v1 = *v0;
  sub_1000BC230();
  sub_1000B0204(v1);
  sub_1000BB990();
  swift_bridgeObjectRelease();
  return sub_1000BC250();
}

uint64_t sub_1000B0544()
{
  sub_1000B0204(*v0);
  sub_1000BB990();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000B0598()
{
  char v1 = *v0;
  sub_1000BC230();
  sub_1000B0204(v1);
  sub_1000BB990();
  swift_bridgeObjectRelease();
  return sub_1000BC250();
}

uint64_t sub_1000B05F8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000B1698(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1000B0628@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000B0204(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000B0654()
{
  return sub_1000B032C(*v0);
}

uint64_t sub_1000B065C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000B1698(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000B0684(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_1000B0690(uint64_t a1)
{
  unint64_t v2 = sub_1000B1F3C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B06CC(uint64_t a1)
{
  unint64_t v2 = sub_1000B1F3C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B0708(void *a1)
{
  uint64_t v3 = sub_10001295C(&qword_1000EE018);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014C68(a1, a1[3]);
  sub_1000B1F3C();
  sub_1000BC280();
  v8[15] = 0;
  sub_1000BC130();
  if (!v1)
  {
    v8[14] = 1;
    sub_1000BC130();
    v8[13] = 2;
    sub_1000BC130();
    v8[12] = 3;
    sub_1000BC0A0();
    v8[11] = 4;
    sub_1000BC0D0();
    v8[10] = 5;
    sub_1000BC0D0();
    v8[9] = 6;
    sub_1000BC0C0();
    _OWORD v8[8] = 7;
    sub_1000BC0C0();
    v8[7] = 8;
    sub_1000BC0C0();
    v8[6] = 9;
    sub_1000BC0C0();
    void v8[5] = 10;
    sub_1000BC0C0();
    v8[4] = 11;
    sub_1000BC0B0();
    v8[3] = 12;
    sub_1000BC0E0();
    _OWORD v8[2] = 13;
    sub_1000BC0A0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

__n128 sub_1000B0A68@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000B16E4(a1, v10);
  if (!v2)
  {
    long long v5 = v10[11];
    *(_OWORD *)(a2 + 160) = v10[10];
    *(_OWORD *)(a2 + 176) = v5;
    *(_OWORD *)(a2 + 192) = v10[12];
    long long v6 = v10[7];
    *(_OWORD *)(a2 + 96) = v10[6];
    *(_OWORD *)(a2 + 112) = v6;
    long long v7 = v10[9];
    *(_OWORD *)(a2 + 128) = v10[8];
    *(_OWORD *)(a2 + 144) = v7;
    long long v8 = v10[3];
    *(_OWORD *)(a2 + 32) = v10[2];
    *(_OWORD *)(a2 + 48) = v8;
    long long v9 = v10[5];
    *(_OWORD *)(a2 + 64) = v10[4];
    *(_OWORD *)(a2 + 80) = v9;
    __n128 result = (__n128)v10[1];
    *(_OWORD *)a2 = v10[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1000B0AD4(void *a1)
{
  return sub_1000B0708(a1);
}

uint64_t sub_1000B0AEC@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v22 = sub_10001295C(&qword_1000EDFC8);
  uint64_t v5 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  long long v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014C68(a1, a1[3]);
  sub_1000B0E6C();
  sub_1000BC270();
  if (v2) {
    return sub_100015C54((uint64_t)a1);
  }
  uint64_t v8 = v5;
  char v80 = 0;
  sub_1000B0EC0();
  uint64_t v9 = v22;
  sub_1000BC070();
  long long v50 = v63;
  long long v51 = v64;
  long long v52 = v65;
  long long v46 = v59;
  long long v47 = v60;
  long long v48 = v61;
  long long v49 = v62;
  long long v42 = v55;
  long long v43 = v56;
  long long v44 = v57;
  long long v45 = v58;
  long long v40 = v53;
  long long v41 = v54;
  long long v76 = v63;
  long long v77 = v64;
  long long v78 = v65;
  long long v72 = v59;
  long long v73 = v60;
  long long v74 = v61;
  long long v75 = v62;
  long long v68 = v55;
  long long v69 = v56;
  long long v70 = v57;
  long long v71 = v58;
  long long v66 = v53;
  long long v67 = v54;
  char v79 = 1;
  sub_1000AF828((uint64_t)&v40);
  uint64_t v10 = sub_1000BC040();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
  long long v33 = v50;
  long long v34 = v51;
  long long v35 = v52;
  long long v29 = v46;
  long long v30 = v47;
  long long v31 = v48;
  long long v32 = v49;
  long long v25 = v42;
  long long v26 = v43;
  long long v27 = v44;
  long long v28 = v45;
  long long v23 = v40;
  long long v24 = v41;
  *(void *)&long long v36 = v10;
  *((void *)&v36 + 1) = v12;
  sub_1000B0F14((uint64_t)&v23);
  sub_1000AF894((uint64_t)&v40);
  sub_100015C54((uint64_t)a1);
  v37[10] = v76;
  v37[11] = v77;
  v37[12] = v78;
  v37[6] = v72;
  v37[7] = v73;
  v37[8] = v74;
  v37[9] = v75;
  v37[2] = v68;
  v37[3] = v69;
  v37[4] = v70;
  v37[5] = v71;
  v37[0] = v66;
  v37[1] = v67;
  uint64_t v38 = v10;
  uint64_t v39 = v12;
  uint64_t result = sub_1000AF7B0((uint64_t)v37);
  long long v14 = v34;
  a2[10] = v33;
  a2[11] = v14;
  long long v15 = v36;
  a2[12] = v35;
  a2[13] = v15;
  long long v16 = v30;
  a2[6] = v29;
  a2[7] = v16;
  long long v17 = v32;
  a2[8] = v31;
  a2[9] = v17;
  long long v18 = v26;
  a2[2] = v25;
  a2[3] = v18;
  long long v19 = v28;
  a2[4] = v27;
  a2[5] = v19;
  long long v20 = v24;
  *a2 = v23;
  a2[1] = v20;
  return result;
}

unint64_t sub_1000B0E6C()
{
  unint64_t result = qword_1000EDFD0;
  if (!qword_1000EDFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDFD0);
  }
  return result;
}

unint64_t sub_1000B0EC0()
{
  unint64_t result = qword_1000EDFD8;
  if (!qword_1000EDFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDFD8);
  }
  return result;
}

uint64_t sub_1000B0F14(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000B0F8C()
{
  unint64_t result = qword_1000EDFE8;
  if (!qword_1000EDFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDFE8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RepositionStickerCommandContents.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B10ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepositionStickerCommandContents.CodingKeys()
{
  return &type metadata for RepositionStickerCommandContents.CodingKeys;
}

uint64_t destroy for RepositionStickerCommandStickerContents()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RepositionStickerCommandStickerContents(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  uint64_t v8 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RepositionStickerCommandStickerContents(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  uint64_t v5 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v5;
  uint64_t v6 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v6;
  uint64_t v7 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v7;
  uint64_t v8 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v8;
  uint64_t v9 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v9;
  uint64_t v10 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v10;
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  uint64_t v11 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v11;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for RepositionStickerCommandStickerContents(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for RepositionStickerCommandStickerContents(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v8 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v8;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v9 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RepositionStickerCommandStickerContents(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RepositionStickerCommandStickerContents(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepositionStickerCommandStickerContents()
{
  return &type metadata for RepositionStickerCommandStickerContents;
}

unint64_t sub_1000B1594()
{
  unint64_t result = qword_1000EDFF0;
  if (!qword_1000EDFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDFF0);
  }
  return result;
}

unint64_t sub_1000B15EC()
{
  unint64_t result = qword_1000EDFF8;
  if (!qword_1000EDFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDFF8);
  }
  return result;
}

unint64_t sub_1000B1644()
{
  unint64_t result = qword_1000EE000;
  if (!qword_1000EE000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EE000);
  }
  return result;
}

uint64_t sub_1000B1698(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000E1EE8;
  v6._object = a2;
  unint64_t v4 = sub_1000BBFA0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xE) {
    return 14;
  }
  else {
    return v4;
  }
}

uint64_t sub_1000B16E4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = sub_10001295C(&qword_1000EE008);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v124 = 1;
  char v122 = 1;
  char v120 = 1;
  char v118 = 1;
  char v116 = 1;
  char v114 = 1;
  char v112 = 1;
  char v109 = 1;
  uint64_t v9 = a1[3];
  long long v125 = a1;
  sub_100014C68(a1, v9);
  sub_1000B1F3C();
  sub_1000BC270();
  if (v2)
  {
    sub_100015C54((uint64_t)v125);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = v6;
    long long v63 = a2;
    LOBYTE(v79[0]) = 0;
    uint64_t v11 = sub_1000BC040();
    uint64_t v13 = v12;
    LOBYTE(v79[0]) = 1;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_1000BC040();
    LOBYTE(v79[0]) = 2;
    uint64_t v15 = v14;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1000BC040();
    uint64_t v65 = v15;
    uint64_t v61 = v16;
    LOBYTE(v79[0]) = 3;
    uint64_t v64 = v17;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1000BBFB0();
    uint64_t v20 = v19;
    uint64_t v60 = v18;
    LOBYTE(v79[0]) = 4;
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_1000BBFE0();
    char v124 = v21 & 1;
    LOBYTE(v79[0]) = 5;
    int v58 = v21;
    uint64_t v57 = sub_1000BBFE0();
    char v122 = v22 & 1;
    LOBYTE(v79[0]) = 6;
    int v56 = v22;
    uint64_t v55 = sub_1000BBFD0();
    int v54 = v23;
    char v120 = v23 & 1;
    LOBYTE(v79[0]) = 7;
    uint64_t v53 = sub_1000BBFD0();
    int v51 = v24;
    char v118 = v24 & 1;
    LOBYTE(v79[0]) = 8;
    uint64_t v52 = sub_1000BBFD0();
    int v48 = v25;
    char v116 = v25 & 1;
    LOBYTE(v79[0]) = 9;
    uint64_t v49 = sub_1000BBFD0();
    int v50 = v26;
    char v114 = v26 & 1;
    LOBYTE(v79[0]) = 10;
    uint64_t v46 = sub_1000BBFD0();
    int v47 = v27;
    char v112 = v27 & 1;
    LOBYTE(v79[0]) = 11;
    int v45 = sub_1000BBFC0();
    LOBYTE(v79[0]) = 12;
    uint64_t v44 = sub_1000BBFF0();
    HIDWORD(v42) = v28 & 1;
    char v109 = v28 & 1;
    char v107 = 13;
    uint64_t v43 = sub_1000BBFB0();
    uint64_t v30 = v29;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&long long v66 = v11;
    *((void *)&v66 + 1) = v13;
    uint64_t v31 = v62;
    uint64_t v33 = v64;
    uint64_t v32 = v65;
    *(void *)&long long v67 = v62;
    *((void *)&v67 + 1) = v65;
    *(void *)&long long v68 = v61;
    *((void *)&v68 + 1) = v64;
    *(void *)&long long v69 = v60;
    *((void *)&v69 + 1) = v20;
    *(void *)&long long v70 = v59;
    BYTE8(v70) = v58 & 1;
    *(void *)&long long v71 = v57;
    BYTE8(v71) = v56 & 1;
    *(void *)&long long v72 = v55;
    BYTE8(v72) = v54 & 1;
    *(void *)&long long v73 = v53;
    BYTE8(v73) = v51 & 1;
    *(void *)&long long v74 = v52;
    BYTE8(v74) = v48 & 1;
    *(void *)&long long v75 = v49;
    BYTE8(v75) = v50 & 1;
    *(void *)&long long v76 = v46;
    BYTE8(v76) = v47 & 1;
    BYTE9(v76) = v45;
    *(void *)&long long v77 = v44;
    BYTE8(v77) = BYTE4(v42);
    *(void *)&long long v78 = v43;
    *((void *)&v78 + 1) = v30;
    sub_1000AF828((uint64_t)&v66);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100015C54((uint64_t)v125);
    v79[0] = v11;
    v79[1] = v13;
    v79[2] = v31;
    v79[3] = v32;
    v79[4] = v61;
    v79[5] = v33;
    v79[6] = v60;
    v79[7] = v20;
    v79[8] = v59;
    char v80 = v124;
    *(_DWORD *)uint64_t v81 = *(_DWORD *)v123;
    *(_DWORD *)&v81[3] = *(_DWORD *)&v123[3];
    uint64_t v82 = v57;
    char v83 = v122;
    *(_DWORD *)&v84[3] = *(_DWORD *)&v121[3];
    *(_DWORD *)uint64_t v84 = *(_DWORD *)v121;
    uint64_t v85 = v55;
    char v86 = v120;
    *(_DWORD *)uint64_t v87 = *(_DWORD *)v119;
    *(_DWORD *)&v87[3] = *(_DWORD *)&v119[3];
    uint64_t v88 = v53;
    char v89 = v118;
    *(_DWORD *)uint64_t v90 = *(_DWORD *)v117;
    *(_DWORD *)&v90[3] = *(_DWORD *)&v117[3];
    uint64_t v91 = v52;
    char v92 = v116;
    *(_DWORD *)&v93[3] = *(_DWORD *)&v115[3];
    *(_DWORD *)unint64_t v93 = *(_DWORD *)v115;
    uint64_t v94 = v49;
    char v95 = v114;
    *(_DWORD *)&v96[3] = *(_DWORD *)&v113[3];
    *(_DWORD *)uint64_t v96 = *(_DWORD *)v113;
    uint64_t v97 = v46;
    char v98 = v112;
    char v99 = v45;
    __int16 v101 = v111;
    int v100 = v110;
    uint64_t v102 = v44;
    char v103 = v109;
    *(_DWORD *)&v104[3] = *(_DWORD *)&v108[3];
    *(_DWORD *)uint64_t v104 = *(_DWORD *)v108;
    uint64_t v105 = v43;
    uint64_t v106 = v30;
    uint64_t result = sub_1000AF894((uint64_t)v79);
    long long v35 = v77;
    long long v36 = v63;
    v63[10] = v76;
    v36[11] = v35;
    v36[12] = v78;
    long long v37 = v73;
    v36[6] = v72;
    v36[7] = v37;
    long long v38 = v75;
    v36[8] = v74;
    v36[9] = v38;
    long long v39 = v69;
    v36[2] = v68;
    v36[3] = v39;
    long long v40 = v71;
    v36[4] = v70;
    v36[5] = v40;
    long long v41 = v67;
    _OWORD *v36 = v66;
    v36[1] = v41;
  }
  return result;
}

unint64_t sub_1000B1F3C()
{
  unint64_t result = qword_1000EE010;
  if (!qword_1000EE010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EE010);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RepositionStickerCommandStickerContents.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RepositionStickerCommandStickerContents.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B20ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepositionStickerCommandStickerContents.CodingKeys()
{
  return &type metadata for RepositionStickerCommandStickerContents.CodingKeys;
}

unint64_t sub_1000B2128()
{
  unint64_t result = qword_1000EE020;
  if (!qword_1000EE020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EE020);
  }
  return result;
}

unint64_t sub_1000B2180()
{
  unint64_t result = qword_1000EE028;
  if (!qword_1000EE028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EE028);
  }
  return result;
}

unint64_t sub_1000B21D8()
{
  unint64_t result = qword_1000EE030;
  if (!qword_1000EE030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EE030);
  }
  return result;
}

ValueMetadata *type metadata accessor for DigitalTouchBalloonUnpacker()
{
  return &type metadata for DigitalTouchBalloonUnpacker;
}

uint64_t sub_1000B223C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v16 = a1;
  unint64_t v17 = a2;
  uint64_t v4 = sub_1000B9430();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000BA950();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_10001DAE4(0, (unint64_t *)&qword_1000EC5B8);
  uint64_t v10 = (void *)sub_1000BBDB0();
  sub_1000BBBE0();
  sub_1000B8770();

  if (*(void *)(a3 + 16))
  {
    sub_1000BB6C0();
    sub_1000B7BD0((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    sub_1000BB6B0();
    return swift_willThrow();
  }
  else
  {
    v15[1] = v9;
    uint64_t v12 = v16;
    unint64_t v13 = v17;
    uint64_t v14 = v18;
    uint64_t result = sub_1000BA900();
    if (!v14)
    {
      sub_1000B2540(v12, v13, (uint64_t)v7);
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for BalloonPlugin.Payload.digitalTouchBalloon(_:), v4);
      return sub_1000BAE60();
    }
  }
  return result;
}

uint64_t sub_1000B2540@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v6 = sub_1000BAA50();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000BA850();
  v15[1] = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v10 = sub_1000B84C0();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for ETP_Header(0);
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1;
  unint64_t v20 = a2;
  uint64_t v18 = 0;
  long long v16 = 0u;
  long long v17 = 0u;
  sub_100017F4C(a1, a2);
  sub_1000B84B0();
  sub_1000B7BD0(&qword_1000ECC58, (void (*)(uint64_t))type metadata accessor for ETP_Header);
  uint64_t result = sub_1000B85B0();
  if (!v3)
  {
    if (v13[*(int *)(v11 + 20)] == 8)
    {
      sub_1000BB6C0();
      sub_1000B7BD0((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();
    }
    else
    {
      sub_1000B28D8((uint64_t)v13);
      sub_1000B2CA4((uint64_t)v13, (uint64_t)v8);
      sub_1000BAA10();
    }
    return sub_1000B7C18((uint64_t)v13, type metadata accessor for ETP_Header);
  }
  return result;
}

uint64_t sub_1000B28D8(uint64_t a1)
{
  uint64_t v2 = sub_10001295C(&qword_1000EC678);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000B8380();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v16 - v10;
  uint64_t v12 = (int *)type metadata accessor for ETP_Header(0);
  unint64_t v13 = (uint64_t *)(a1 + v12[6]);
  if ((v13[1] & 1) != 0
    || (uint64_t v14 = v12, !*(void *)(a1 + v12[9] + 8))
    || (*(unsigned char *)(a1 + v12[11] + 8) & 1) != 0
    || *(unsigned char *)(a1 + v12[10]) == 2)
  {
    sub_1000BB6C0();
    sub_1000B7BD0((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
LABEL_6:
    sub_1000BB6B0();
    return swift_willThrow();
  }
  v16[1] = *(unsigned __int8 *)(a1 + v12[10]);
  uint64_t v17 = *v13;
  swift_bridgeObjectRetain();
  sub_1000B8350();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1000184DC((uint64_t)v4, &qword_1000EC678);
    sub_1000BB6C0();
    sub_1000B7BD0((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
    swift_allocError();
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  char v18 = *(unsigned char *)(a1 + v14[8] + 4);
  sub_1000BA840();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
}

uint64_t sub_1000B2CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000B9470();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ETP_Header(0);
  if (*(unsigned char *)(a1 + *(int *)(v9 + 20)) == 4)
  {
    uint64_t v10 = (unsigned int *)&enum case for DigitalTouchMessage.readreceipt(_:);
LABEL_3:
    uint64_t v11 = *v10;
    uint64_t v12 = sub_1000BAA50();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(a2, v11, v12);
  }
  uint64_t v14 = a1 + *(int *)(v9 + 28);
  unint64_t v15 = *(void *)(v14 + 8);
  if (v15 >> 60 != 15)
  {
    uint64_t v16 = *(void *)v14;
    switch(*(unsigned char *)(a1 + *(int *)(v9 + 20)))
    {
      case 1:
        sub_10001DAE4(0, (unint64_t *)&qword_1000EC5B8);
        char v18 = (void *)sub_1000BBDB0();
        sub_1000BBBE0();
        sub_1000B8770();

        uint64_t result = sub_1000B5E9C(a1);
        if (v2) {
          return result;
        }
        uint64_t v10 = (unsigned int *)&enum case for DigitalTouchMessage.quicktap(_:);
        break;
      case 2:
        return sub_1000B30A4(a1, a2);
      case 3:
        sub_100017F4C(*(void *)v14, *(void *)(v14 + 8));
        sub_1000B6890(v16, v15, (uint64_t)v8);
        uint64_t result = sub_1000180CC(v16, v15);
        if (v2) {
          return result;
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
        uint64_t v10 = (unsigned int *)&enum case for DigitalTouchMessage.doodle(_:);
        break;
      case 4:
        __break(1u);
        JUMPOUT(0x1000B3080);
      case 5:
        return sub_1000B3468(a1, a2);
      case 6:
        return sub_1000B4BFC(a1, a2);
      case 7:
        return sub_1000B52FC(a1, a2);
      default:
        sub_10001DAE4(0, (unint64_t *)&qword_1000EC5B8);
        uint64_t v17 = (void *)sub_1000BBDB0();
        sub_1000BBBE0();
        sub_1000B8770();

        uint64_t result = sub_1000B5E9C(a1);
        if (v2) {
          return result;
        }
        uint64_t v10 = (unsigned int *)&enum case for DigitalTouchMessage.tap(_:);
        break;
    }
    goto LABEL_3;
  }
  sub_1000BB6C0();
  sub_1000B7BD0((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
  swift_allocError();
  sub_1000BB6B0();
  return swift_willThrow();
}

uint64_t sub_1000B30A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000B84C0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = (int *)type metadata accessor for ETP_Heartbeat(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001DAE4(0, (unint64_t *)&qword_1000EC5B8);
  uint64_t v9 = (void *)sub_1000BBDB0();
  sub_1000BBBE0();
  sub_1000B8770();

  uint64_t v10 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ETP_Header(0) + 28));
  uint64_t v11 = *v10;
  unint64_t v12 = v10[1];
  if (v12 >> 60 == 15) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = *v10;
  }
  unint64_t v14 = 0xC000000000000000;
  if (v12 >> 60 != 15) {
    unint64_t v14 = v12;
  }
  uint64_t v20 = v13;
  unint64_t v21 = v14;
  uint64_t v19 = 0;
  memset(v18, 0, sizeof(v18));
  sub_100017FA4(v11, v12);
  sub_1000B84B0();
  sub_1000B7BD0(&qword_1000ECC18, (void (*)(uint64_t))type metadata accessor for ETP_Heartbeat);
  uint64_t result = sub_1000B85B0();
  if (!v2)
  {
    if ((v8[v6[5] + 4] & 1) != 0
      || (v8[v6[6] + 4] & 1) != 0
      || (v8[v6[7] + 4] & 1) != 0
      || (v8[v6[8] + 4] & 1) != 0
      || (v8[v6[10] + 4] & 1) != 0)
    {
      sub_1000BB6C0();
      sub_1000B7BD0((unint64_t *)&qword_1000EC5A0, (void (*)(uint64_t))&type metadata accessor for Explosion);
      swift_allocError();
      sub_1000BB6B0();
      swift_willThrow();
      return sub_1000B7C18((uint64_t)v8, type metadata accessor for ETP_Heartbeat);
    }
    else
    {
      sub_1000BA030();
      sub_1000B7C18((uint64_t)v8, type metadata accessor for ETP_Heartbeat);
      uint64_t v16 = enum case for DigitalTouchMessage.heartbeat(_:);
      uint64_t v17 = sub_1000BAA50();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(a2, v16, v17);
    }
  }
  return result;
}