uint64_t ActivitySnidgetCurrentValueVisualizationView.viewModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(0);
  return sub_1C29C5994(a1, v1 + *(int *)(v3 + 20), type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel);
}

uint64_t (*ActivitySnidgetCurrentValueVisualizationView.viewModel.modify())(void)
{
  return nullsub_1;
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.previousViewModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(0);
  return sub_1C29CE868(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))sub_1C29C592C);
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.previousViewModel.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(0);
  return sub_1C29C5994(a1, v1 + *(int *)(v3 + 24), (uint64_t (*)(void))sub_1C29C592C);
}

uint64_t (*ActivitySnidgetCurrentValueVisualizationView.previousViewModel.modify())(void)
{
  return nullsub_1;
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C29C592C(0);
  MEMORY[0x1F4188790](v4 - 8);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A9CC28();
  sub_1C29C71F0(&qword_1EBB8FB98, MEMORY[0x1E4F66428]);
  *a2 = sub_1C2A9D608();
  a2[1] = v7;
  v8 = (int *)type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(0);
  uint64_t v9 = (uint64_t)a2 + v8[6];
  uint64_t v10 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  objc_msgSend(self, sel_hk_currentDeviceHas4InchScreen);
  sub_1C29376D4(0, (unint64_t *)&qword_1EBB91BA8);
  *(uint64_t *)((char *)a2 + v8[7]) = sub_1C2A9E258();
  uint64_t v11 = v8[8];
  *(uint64_t *)((char *)a2 + v11) = sub_1C2A9E258();
  uint64_t v12 = v8[9];
  if (qword_1EBB8FBC8 != -1) {
    swift_once();
  }
  v13 = (char *)a2 + v12;
  *(void *)v13 = qword_1EBB8FBC0;
  v13[8] = 0;
  sub_1C29CE930(0, &qword_1EBB8FAF8, type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel, MEMORY[0x1E4F66310]);
  uint64_t v15 = v14;
  sub_1C2A9CB28();
  sub_1C2A9CB38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
  return sub_1C29C5994((uint64_t)v6, v9, (uint64_t (*)(void))sub_1C29C592C);
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.isMoveRingOnly.getter()
{
  return *v0;
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.isMoveRingOnly.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ActivitySnidgetCurrentValueVisualizationView.ViewModel.isMoveRingOnly.modify())()
{
  return nullsub_1;
}

id ActivitySnidgetCurrentValueVisualizationView.ViewModel.activitySummary.getter()
{
  return *(id *)(v0 + 8);
}

void ActivitySnidgetCurrentValueVisualizationView.ViewModel.activitySummary.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*ActivitySnidgetCurrentValueVisualizationView.ViewModel.activitySummary.modify())()
{
  return nullsub_1;
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.moveTitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0) + 24);
  uint64_t v4 = sub_1C2A9C4F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.moveTitle.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0) + 24);
  uint64_t v4 = sub_1C2A9C4F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*ActivitySnidgetCurrentValueVisualizationView.ViewModel.moveTitle.modify())(void)
{
  return nullsub_1;
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.moveValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  return sub_1C29CE868(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(void))sub_1C29C5960);
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.moveValue.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  return sub_1C29C5994(a1, v1 + *(int *)(v3 + 28), (uint64_t (*)(void))sub_1C29C5960);
}

uint64_t (*ActivitySnidgetCurrentValueVisualizationView.ViewModel.moveValue.modify())(void)
{
  return nullsub_1;
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.exerciseTitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0) + 32);
  uint64_t v4 = sub_1C2A9C4F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.exerciseTitle.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0) + 32);
  uint64_t v4 = sub_1C2A9C4F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*ActivitySnidgetCurrentValueVisualizationView.ViewModel.exerciseTitle.modify())(void)
{
  return nullsub_1;
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.exerciseValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  return sub_1C29CE868(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(void))sub_1C29C5960);
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.exerciseValue.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  return sub_1C29C5994(a1, v1 + *(int *)(v3 + 36), (uint64_t (*)(void))sub_1C29C5960);
}

uint64_t (*ActivitySnidgetCurrentValueVisualizationView.ViewModel.exerciseValue.modify())(void)
{
  return nullsub_1;
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.standTitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0) + 40);
  uint64_t v4 = sub_1C2A9C4F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.standTitle.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0) + 40);
  uint64_t v4 = sub_1C2A9C4F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*ActivitySnidgetCurrentValueVisualizationView.ViewModel.standTitle.modify())(void)
{
  return nullsub_1;
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.standValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  return sub_1C29CE868(v1 + *(int *)(v3 + 44), a1, (uint64_t (*)(void))sub_1C29C5960);
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.standValue.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  return sub_1C29C5994(a1, v1 + *(int *)(v3 + 44), (uint64_t (*)(void))sub_1C29C5960);
}

uint64_t (*ActivitySnidgetCurrentValueVisualizationView.ViewModel.standValue.modify())(void)
{
  return nullsub_1;
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.hasEverHadAWatch.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0)
                                     + 48));
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.hasEverHadAWatch.setter(char a1)
{
  uint64_t result = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  *(unsigned char *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*ActivitySnidgetCurrentValueVisualizationView.ViewModel.hasEverHadAWatch.modify())(void)
{
  return nullsub_1;
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.pausedRingsTitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0) + 52);
  uint64_t v4 = sub_1C2A9C4F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.pausedRingsTitle.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0) + 52);
  uint64_t v4 = sub_1C2A9C4F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*ActivitySnidgetCurrentValueVisualizationView.ViewModel.pausedRingsTitle.modify())(void)
{
  return nullsub_1;
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.pausedRingsDetail.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  return sub_1C29CE868(v1 + *(int *)(v3 + 56), a1, (uint64_t (*)(void))sub_1C29C5960);
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.pausedRingsDetail.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  return sub_1C29C5994(a1, v1 + *(int *)(v3 + 56), (uint64_t (*)(void))sub_1C29C5960);
}

uint64_t (*ActivitySnidgetCurrentValueVisualizationView.ViewModel.pausedRingsDetail.modify())(void)
{
  return nullsub_1;
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.init(isMoveRingOnly:activitySummary:moveTitle:moveValue:exerciseTitle:exerciseValue:standTitle:standValue:hasEverHadAWatch:pausedRingsTitle:pausedRingsDetail:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, uint64_t a12)
{
  v13 = (int *)type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  uint64_t v14 = a9 + v13[7];
  uint64_t v24 = v14;
  uint64_t v15 = sub_1C2A9C4F8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v17(v14, 1, 1, v15);
  uint64_t v18 = a9 + v13[9];
  v17(v18, 1, 1, v15);
  uint64_t v19 = a9 + v13[11];
  v17(v19, 1, 1, v15);
  uint64_t v20 = v13[12];
  *(unsigned char *)(a9 + v20) = 2;
  uint64_t v21 = a9 + v13[14];
  v17(v21, 1, 1, v15);
  *(unsigned char *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
  v22(a9 + v13[6], a3, v15);
  sub_1C29C5994(a4, v24, (uint64_t (*)(void))sub_1C29C5960);
  v22(a9 + v13[8], a5, v15);
  sub_1C29C5994(a6, v18, (uint64_t (*)(void))sub_1C29C5960);
  v22(a9 + v13[10], a7, v15);
  sub_1C29C5994(a8, v19, (uint64_t (*)(void))sub_1C29C5960);
  *(unsigned char *)(a9 + v20) = a10;
  v22(a9 + v13[13], a11, v15);
  return sub_1C29C5994(a12, v21, (uint64_t (*)(void))sub_1C29C5960);
}

unint64_t sub_1C29BFA7C(char a1)
{
  unint64_t result = 0x695265766F4D7369;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7974697669746361;
      break;
    case 2:
      unint64_t result = 0x6C74695465766F6DLL;
      break;
    case 3:
      unint64_t result = 0x756C615665766F6DLL;
      break;
    case 4:
    case 5:
      unint64_t result = 0x6573696372657865;
      break;
    case 6:
      unint64_t result = 0x746954646E617473;
      break;
    case 7:
      unint64_t result = 0x6C6156646E617473;
      break;
    case 8:
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C29BFBF8()
{
  return sub_1C29BFA7C(*v0);
}

uint64_t sub_1C29BFC00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C29CE0D4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C29BFC28(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1C29BFC34(uint64_t a1)
{
  unint64_t v2 = sub_1C29C59FC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C29BFC70(uint64_t a1)
{
  unint64_t v2 = sub_1C29C59FC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v115 = a2;
  sub_1C29C5960(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v116 = (uint64_t)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  v120 = (char *)&v104 - v6;
  MEMORY[0x1F4188790](v7);
  v118 = (char *)&v104 - v8;
  MEMORY[0x1F4188790](v9);
  v124 = (char *)&v104 - v10;
  MEMORY[0x1F4188790](v11);
  v122 = (char *)&v104 - v12;
  MEMORY[0x1F4188790](v13);
  v127 = (char *)&v104 - v14;
  MEMORY[0x1F4188790](v15);
  v126 = (char *)&v104 - v16;
  uint64_t v17 = sub_1C2A9C4F8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  v117 = (char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  v121 = (char *)&v104 - v21;
  MEMORY[0x1F4188790](v22);
  v119 = (char *)&v104 - v23;
  MEMORY[0x1F4188790](v24);
  v125 = (char *)&v104 - v25;
  MEMORY[0x1F4188790](v26);
  v123 = (char *)&v104 - v27;
  MEMORY[0x1F4188790](v28);
  v129 = (char *)&v104 - v29;
  MEMORY[0x1F4188790](v30);
  v128 = (char *)&v104 - v31;
  sub_1C29C5AA4(0, &qword_1EBB8FD80, (uint64_t (*)(void))sub_1C29C59FC, (uint64_t)&type metadata for ActivitySnidgetCurrentValueVisualizationView.ViewModel.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v33 = v32;
  uint64_t v130 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  v35 = (char *)&v104 - v34;
  v36 = (int *)type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  __n128 v37 = MEMORY[0x1F4188790](v36);
  v39 = (char *)&v104 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = *(int *)(v40 + 28);
  uint64_t v139 = v18;
  v44 = *(void (**)(__n128))(v18 + 56);
  uint64_t v43 = v18 + 56;
  v42 = v44;
  v136 = &v39[v41];
  v44(v37);
  v135 = &v39[v36[9]];
  ((void (*)(void))v44)();
  v133 = &v39[v36[11]];
  ((void (*)(void))v44)();
  uint64_t v45 = v36[12];
  v39[v45] = 2;
  v138 = v36;
  uint64_t v46 = v36[14];
  v140 = v39;
  v132 = &v39[v46];
  uint64_t v134 = v17;
  ((void (*)(void))v44)();
  uint64_t v47 = a1[3];
  v131 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v47);
  sub_1C29C59FC();
  uint64_t v48 = v137;
  sub_1C2A9EA08();
  if (v48)
  {
    uint64_t v137 = v48;
    unsigned int v51 = 1192;
LABEL_4:
    uint64_t v65 = v134;
    v53 = v138;
    uint64_t v52 = v139;
    uint64_t v54 = (uint64_t)v131;
    uint64_t v71 = (uint64_t)v140;
    goto LABEL_5;
  }
  v49 = v128;
  v50 = v129;
  uint64_t v113 = v43;
  v114 = v42;
  uint64_t v112 = v45;
  LOBYTE(v141) = 0;
  char *v140 = sub_1C2A9E778() & 1;
  LOBYTE(v141) = 2;
  uint64_t v63 = sub_1C29C71F0(&qword_1EBB8FB78, MEMORY[0x1E4F273A8]);
  v64 = v50;
  uint64_t v65 = v134;
  sub_1C2A9E7A8();
  v66 = v64;
  v67 = v49;
  sub_1C2A9C4E8();
  uint64_t v110 = v33;
  v111 = v35;
  v68 = (char *)v63;
  uint64_t v69 = v139;
  uint64_t v70 = v139 + 8;
  v109 = *(void (**)(char *, uint64_t))(v139 + 8);
  v109(v66, v65);
  uint64_t v71 = (uint64_t)v140;
  v72 = &v140[v138[6]];
  v128 = *(char **)(v69 + 32);
  ((void (*)(char *, char *, uint64_t))v128)(v72, v67, v65);
  LOBYTE(v141) = 3;
  uint64_t v73 = (uint64_t)v127;
  v129 = v68;
  sub_1C2A9E758();
  uint64_t v137 = 0;
  uint64_t v108 = v70;
  uint64_t v107 = v69 + 32;
  v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v139 + 48);
  uint64_t v106 = v139 + 48;
  v105 = v74;
  if (v74(v73, 1, v65) == 1)
  {
    sub_1C29CE8D0(v73, (uint64_t (*)(void))sub_1C29C5960);
    uint64_t v75 = 1;
    uint64_t v76 = v110;
    v77 = v114;
    uint64_t v78 = (uint64_t)v126;
  }
  else
  {
    uint64_t v78 = (uint64_t)v126;
    sub_1C2A9C4E8();
    v109((char *)v73, v65);
    uint64_t v75 = 0;
    uint64_t v76 = v110;
    v77 = v114;
  }
  v79 = v125;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v77)(v78, v75, 1, v65);
  sub_1C29C5994(v78, (uint64_t)v136, (uint64_t (*)(void))sub_1C29C5960);
  LOBYTE(v141) = 4;
  v80 = v111;
  uint64_t v81 = v137;
  sub_1C2A9E7A8();
  if (v81)
  {
    uint64_t v137 = v81;
    (*(void (**)(char *, uint64_t))(v130 + 8))(v80, v76);
    unsigned int v51 = 1196;
LABEL_31:
    v53 = v138;
    uint64_t v52 = v139;
    uint64_t v54 = (uint64_t)v131;
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1(v54);
    LODWORD(v55) = (v51 >> 4) & 1;
    int v56 = (v51 >> 6) & 1;
    if ((v51 & 2) != 0)
    {

      if ((v51 & 4) != 0) {
        goto LABEL_7;
      }
    }
    else if ((v51 & 4) != 0)
    {
LABEL_7:
      int v57 = 0;
      goto LABEL_8;
    }
    sub_1C29CE8D0((uint64_t)v136, (uint64_t (*)(void))sub_1C29C5960);
    if ((v51 & 0x10) == 0)
    {
      int v57 = 0;
      goto LABEL_16;
    }
    int v57 = 0;
    v58 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
LABEL_13:
    v58(v71 + v53[8], v65);
    sub_1C29CE8D0((uint64_t)v135, (uint64_t (*)(void))sub_1C29C5960);
    if (v56) {
      goto LABEL_18;
    }
    goto LABEL_20;
  }
  v82 = v123;
  sub_1C2A9C4E8();
  v109(v79, v65);
  ((void (*)(uint64_t, char *, uint64_t))v128)(v71 + v138[8], v82, v65);
  LOBYTE(v141) = 5;
  uint64_t v83 = v65;
  uint64_t v84 = (uint64_t)v124;
  sub_1C2A9E758();
  uint64_t v137 = 0;
  if (v105(v84, 1, v83) == 1)
  {
    sub_1C29CE8D0(v84, (uint64_t (*)(void))sub_1C29C5960);
    uint64_t v85 = 1;
    uint64_t v86 = (uint64_t)v122;
  }
  else
  {
    uint64_t v86 = (uint64_t)v122;
    sub_1C2A9C4E8();
    v109((char *)v84, v83);
    uint64_t v85 = 0;
  }
  v87 = v121;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v114)(v86, v85, 1, v83);
  sub_1C29C5994(v86, (uint64_t)v135, (uint64_t (*)(void))sub_1C29C5960);
  LOBYTE(v141) = 6;
  v88 = v111;
  uint64_t v89 = v137;
  sub_1C2A9E7A8();
  if (v89)
  {
    uint64_t v137 = v89;
    (*(void (**)(char *, uint64_t))(v130 + 8))(v88, v76);
    unsigned int v51 = 1212;
    uint64_t v65 = v83;
    goto LABEL_31;
  }
  v90 = v119;
  sub_1C2A9C4E8();
  v109(v87, v83);
  ((void (*)(uint64_t, char *, uint64_t))v128)(v71 + v138[10], v90, v83);
  LOBYTE(v141) = 7;
  sub_1C2A9E758();
  uint64_t v137 = 0;
  v91 = (void (*)(uint64_t, uint64_t))v109;
  uint64_t v92 = (uint64_t)v120;
  if (v105((uint64_t)v120, 1, v83) == 1)
  {
    sub_1C29CE8D0(v92, (uint64_t (*)(void))sub_1C29C5960);
    uint64_t v93 = 1;
    uint64_t v94 = (uint64_t)v118;
  }
  else
  {
    uint64_t v94 = (uint64_t)v118;
    sub_1C2A9C4E8();
    v91(v92, v83);
    uint64_t v93 = 0;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v114)(v94, v93, 1, v83);
  sub_1C29C5994(v94, (uint64_t)v133, (uint64_t (*)(void))sub_1C29C5960);
  char v143 = 1;
  sub_1C29C5A50();
  v95 = v111;
  uint64_t v96 = v137;
  sub_1C2A9E7A8();
  if (v96)
  {
    uint64_t v137 = v96;
    (*(void (**)(char *, uint64_t))(v130 + 8))(v95, v76);
    unsigned int v51 = 1276;
    uint64_t v65 = v134;
    goto LABEL_31;
  }
  uint64_t v55 = v141;
  unint64_t v97 = v142;
  sub_1C29376D4(0, (unint64_t *)&unk_1EBB92810);
  sub_1C29376D4(0, (unint64_t *)&qword_1EBB927D0);
  id v98 = (id)sub_1C2A9E148();
  uint64_t v137 = 0;
  if (!v98) {
    id v98 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2ABA8]), sel_init);
  }
  *((void *)v140 + 1) = v98;
  LOBYTE(v141) = 8;
  uint64_t v99 = v137;
  char v100 = sub_1C2A9E728();
  uint64_t v137 = v99;
  if (v99 || (v140[v112] = v100, LOBYTE(v141) = 9, uint64_t v101 = v137, sub_1C2A9E7A8(), (v137 = v101) != 0))
  {
    (*(void (**)(char *, uint64_t))(v130 + 8))(v111, v110);
    sub_1C2991910(v55, v97);
    unsigned int v51 = 1278;
    goto LABEL_4;
  }
  ((void (*)(char *, char *, uint64_t))v128)(&v140[v138[13]], v117, v134);
  LOBYTE(v141) = 10;
  uint64_t v102 = v137;
  sub_1C2A9E758();
  uint64_t v137 = v102;
  if (!v102)
  {
    (*(void (**)(char *, uint64_t))(v130 + 8))(v111, v110);
    sub_1C2991910(v55, v97);
    sub_1C29C5994(v116, (uint64_t)v132, (uint64_t (*)(void))sub_1C29C5960);
    uint64_t v103 = (uint64_t)v140;
    sub_1C29CE868((uint64_t)v140, v115, type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v131);
    v60 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel;
    uint64_t v61 = v103;
    return sub_1C29CE8D0(v61, v60);
  }
  (*(void (**)(char *, uint64_t))(v130 + 8))(v111, v110);
  sub_1C2991910(v55, v97);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v131);
  uint64_t v71 = (uint64_t)v140;

  int v57 = 1;
  int v56 = 1;
  LOBYTE(v55) = 1;
  uint64_t v65 = v134;
  v53 = v138;
  uint64_t v52 = v139;
LABEL_8:
  v58 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
  v58(v71 + v53[6], v65);
  sub_1C29CE8D0((uint64_t)v136, (uint64_t (*)(void))sub_1C29C5960);
  if (v55) {
    goto LABEL_13;
  }
LABEL_16:
  sub_1C29CE8D0((uint64_t)v135, (uint64_t (*)(void))sub_1C29C5960);
  if (v56)
  {
    v58 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
LABEL_18:
    v58(v71 + v53[10], v65);
    sub_1C29CE8D0((uint64_t)v133, (uint64_t (*)(void))sub_1C29C5960);
    uint64_t v59 = (uint64_t)v132;
    if ((v57 & 1) == 0) {
      goto LABEL_24;
    }
    goto LABEL_22;
  }
LABEL_20:
  sub_1C29CE8D0((uint64_t)v133, (uint64_t (*)(void))sub_1C29C5960);
  if (!v57)
  {
    uint64_t v59 = (uint64_t)v132;
    goto LABEL_24;
  }
  v58 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
  uint64_t v59 = (uint64_t)v132;
LABEL_22:
  v58(v71 + v53[13], v65);
LABEL_24:
  v60 = (uint64_t (*)(void))sub_1C29C5960;
  uint64_t v61 = v59;
  return sub_1C29CE8D0(v61, v60);
}

uint64_t ActivitySnidgetCurrentValueVisualizationView.ViewModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  v20[2] = *(id *)MEMORY[0x1E4F143B8];
  sub_1C29C5AA4(0, &qword_1EBB8FFD8, (uint64_t (*)(void))sub_1C29C59FC, (uint64_t)&type metadata for ActivitySnidgetCurrentValueVisualizationView.ViewModel.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C29C59FC();
  sub_1C2A9EA18();
  LOBYTE(v20[0]) = 0;
  sub_1C2A9E838();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  LOBYTE(v20[0]) = 2;
  sub_1C2A9C4F8();
  sub_1C29C71F0(&qword_1EBB8FDC8, MEMORY[0x1E4F273A8]);
  sub_1C2A9E868();
  LOBYTE(v20[0]) = 3;
  sub_1C2A9E818();
  LOBYTE(v20[0]) = 4;
  sub_1C2A9E868();
  LOBYTE(v20[0]) = 5;
  sub_1C2A9E818();
  LOBYTE(v20[0]) = 6;
  sub_1C2A9E868();
  LOBYTE(v20[0]) = 7;
  sub_1C2A9E818();
  uint64_t v11 = self;
  uint64_t v12 = *(void *)(v3 + 8);
  v20[0] = 0;
  id v13 = objc_msgSend(v11, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v12, 0, v20);
  id v14 = v20[0];
  if (!v13)
  {
    uint64_t v16 = v14;
    sub_1C2A9C578();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v17 = (void *)sub_1C2A9C5C8();
  uint64_t v18 = v15;

  v20[0] = v17;
  v20[1] = v18;
  char v19 = 1;
  sub_1C29C5B0C();
  sub_1C2A9E868();
  LOBYTE(v20[0]) = 8;
  sub_1C2A9E7E8();
  LOBYTE(v20[0]) = 9;
  sub_1C2A9E868();
  LOBYTE(v20[0]) = 10;
  sub_1C2A9E818();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_1C2991910((uint64_t)v17, (unint64_t)v18);
}

uint64_t sub_1C29C11FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivitySnidgetCurrentValueVisualizationView.ViewModel.init(from:)(a1, a2);
}

uint64_t sub_1C29C1214(void *a1)
{
  return ActivitySnidgetCurrentValueVisualizationView.ViewModel.encode(to:)(a1);
}

void sub_1C29C122C()
{
  qword_1EBB902E8 = 0x4028000000000000;
}

void sub_1C29C123C()
{
  qword_1EBB8FBC0 = 0x4030000000000000;
}

void sub_1C29C124C()
{
  qword_1EBB902F8 = 0x4000000000000000;
}

uint64_t sub_1C29C125C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v2 = sub_1C2A9DB78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29C5FC0();
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29C5F34(0);
  uint64_t v47 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29C5F0C(0);
  uint64_t v48 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(0);
  objc_msgSend(*(id *)(v1 + *(int *)(v16 + 28)), sel_ascender);
  uint64_t v17 = *(void **)(v1 + *(int *)(v16 + 32));
  objc_msgSend(v17, sel_lineHeight);
  objc_msgSend(v17, sel_ascender);
  objc_msgSend(v17, sel_capHeight);
  sub_1C2A9DB68();
  uint64_t v18 = sub_1C2A9DAA8();
  char v19 = sub_1C2A9D878();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v2);
  uint64_t v20 = &v9[*(int *)(v7 + 44)];
  *(void *)uint64_t v20 = v18;
  v20[8] = v19;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (qword_1EBB90300 != -1) {
    swift_once();
  }
  sub_1C2A9DBA8();
  sub_1C2A9D568();
  sub_1C29CE868((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(void))sub_1C29C5FC0);
  uint64_t v21 = &v12[*(int *)(v47 + 36)];
  long long v22 = v51;
  *(_OWORD *)uint64_t v21 = v50;
  *((_OWORD *)v21 + 1) = v22;
  *((_OWORD *)v21 + 2) = v52;
  sub_1C29CE8D0((uint64_t)v9, (uint64_t (*)(void))sub_1C29C5FC0);
  char v23 = sub_1C2A9D898();
  sub_1C2A9D508();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  sub_1C29CE868((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))sub_1C29C5F34);
  uint64_t v32 = &v15[*(int *)(v48 + 36)];
  *uint64_t v32 = v23;
  *((void *)v32 + 1) = v25;
  *((void *)v32 + 2) = v27;
  *((void *)v32 + 3) = v29;
  *((void *)v32 + 4) = v31;
  v32[40] = 0;
  sub_1C29CE8D0((uint64_t)v12, (uint64_t (*)(void))sub_1C29C5F34);
  char v33 = sub_1C2A9D868();
  if (qword_1EBB902F0 != -1) {
    swift_once();
  }
  sub_1C2A9D508();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v42 = v49;
  sub_1C29CE868((uint64_t)v15, v49, (uint64_t (*)(void))sub_1C29C5F0C);
  sub_1C29C5EE4(0);
  uint64_t v44 = v42 + *(int *)(v43 + 36);
  *(unsigned char *)uint64_t v44 = v33;
  *(void *)(v44 + 8) = v35;
  *(void *)(v44 + 16) = v37;
  *(void *)(v44 + 24) = v39;
  *(void *)(v44 + 32) = v41;
  *(unsigned char *)(v44 + 40) = 0;
  return sub_1C29CE8D0((uint64_t)v15, (uint64_t (*)(void))sub_1C29C5F0C);
}

uint64_t sub_1C29C16C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1C29C592C(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (id *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C29C5960(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C2A9C4F8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(0);
  uint64_t v15 = v1 + *(int *)(v14 + 20);
  uint64_t v16 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v15 + *(int *)(v16 + 24), v10);
  sub_1C29CE868(v15 + *(int *)(v16 + 28), (uint64_t)v9, (uint64_t (*)(void))sub_1C29C5960);
  sub_1C29C1A60();
  uint64_t v18 = v17;
  sub_1C29CE868(v2 + *(int *)(v14 + 24), (uint64_t)v6, (uint64_t (*)(void))sub_1C29C592C);
  int v19 = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v6, 1, v16);
  if (v19 == 1)
  {
    sub_1C29CE8D0((uint64_t)v6, (uint64_t (*)(void))sub_1C29C592C);
    uint64_t v20 = 0;
  }
  else
  {
    id v21 = v6[1];
    sub_1C29CE8D0((uint64_t)v6, type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel);
    sub_1C29C1A60();
    uint64_t v20 = v22;
  }
  sub_1C2A9CC28();
  sub_1C29C71F0(&qword_1EBB8FB98, MEMORY[0x1E4F66428]);
  *(void *)a1 = sub_1C2A9D608();
  *(void *)(a1 + 8) = v23;
  uint64_t v24 = (int *)type metadata accessor for ActivitySummarySnidgetValueView();
  uint64_t v25 = a1 + v24[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v25, 1, 1, v10);
  uint64_t v26 = a1 + v24[9];
  *(void *)uint64_t v26 = 0;
  *(unsigned char *)(v26 + 8) = 1;
  uint64_t v27 = (void *)(a1 + v24[10]);
  *uint64_t v27 = 0xD000000000000017;
  v27[1] = 0x80000001C2AB8660;
  *(unsigned char *)(a1 + 16) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1 + v24[6], v13, v10);
  uint64_t result = sub_1C29C5994((uint64_t)v9, v25, (uint64_t (*)(void))sub_1C29C5960);
  *(void *)(a1 + v24[8]) = v18;
  *(void *)uint64_t v26 = v20;
  *(unsigned char *)(v26 + 8) = v19 == 1;
  return result;
}

void sub_1C29C1A60()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1C2A9CFE8();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = MEMORY[0x1F4188790](v2).n128_u64[0];
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(v1, sel_activityMoveMode, v4);
  if (v7 == (id)2)
  {
    id v8 = objc_msgSend(v1, sel_appleMoveTime);
    goto LABEL_5;
  }
  if (v7 == (id)1)
  {
    id v8 = objc_msgSend(v1, sel_activeEnergyBurned);
LABEL_5:
    id v9 = v8;
    objc_msgSend(v9, sel__value);

    return;
  }
  sub_1C2A9CFB8();
  id v10 = v1;
  uint64_t v11 = sub_1C2A9CFC8();
  os_log_type_t v12 = sub_1C2A9E0A8();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    HIDWORD(v21) = v13;
    uint64_t v15 = v14;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v24 = v22;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = sub_1C2A9EA58();
    uint64_t v23 = sub_1C2957168(v16, v17, &v24);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    objc_msgSend(v10, sel_activityMoveMode);
    uint64_t v18 = sub_1C2A9E198();
    uint64_t v23 = sub_1C2957168(v18, v19, &v24);
    sub_1C2A9E358();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C292A000, v11, BYTE4(v21), "[%s]: Unhandled move mode for animation: %s", (uint8_t *)v15, 0x16u);
    uint64_t v20 = v22;
    swift_arrayDestroy();
    MEMORY[0x1C87656F0](v20, -1, -1);
    MEMORY[0x1C87656F0](v15, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1C29C1D30@<X0>(uint64_t a1@<X8>)
{
  sub_1C29C592C(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (id *)((char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C29C5960(0);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C2A9C4F8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  os_log_type_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(0);
  uint64_t v14 = v1 + *(int *)(v13 + 20);
  uint64_t v15 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14 + *(int *)(v15 + 32), v9);
  sub_1C29CE868(v14 + *(int *)(v15 + 36), (uint64_t)v8, (uint64_t (*)(void))sub_1C29C5960);
  id v16 = objc_msgSend(*(id *)(v14 + 8), sel_appleExerciseTime);
  objc_msgSend(v16, sel__value);
  uint64_t v18 = v17;

  sub_1C29CE868(v1 + *(int *)(v13 + 24), (uint64_t)v5, (uint64_t (*)(void))sub_1C29C592C);
  int v19 = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v5, 1, v15);
  if (v19 == 1)
  {
    sub_1C29CE8D0((uint64_t)v5, (uint64_t (*)(void))sub_1C29C592C);
    uint64_t v20 = 0;
  }
  else
  {
    id v21 = v5[1];
    sub_1C29CE8D0((uint64_t)v5, type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel);
    id v22 = objc_msgSend(v21, sel_appleExerciseTime);

    objc_msgSend(v22, sel__value);
    uint64_t v20 = v23;
  }
  BOOL v24 = v19 == 1;
  sub_1C2A9CC28();
  sub_1C29C71F0(&qword_1EBB8FB98, MEMORY[0x1E4F66428]);
  *(void *)a1 = sub_1C2A9D608();
  *(void *)(a1 + 8) = v25;
  uint64_t v26 = (int *)type metadata accessor for ActivitySummarySnidgetValueView();
  uint64_t v27 = a1 + v26[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v27, 1, 1, v9);
  uint64_t v28 = a1 + v26[9];
  *(void *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 8) = 1;
  uint64_t v29 = (void *)(a1 + v26[10]);
  *uint64_t v29 = 0xD000000000000017;
  v29[1] = 0x80000001C2AB8660;
  *(unsigned char *)(a1 + 16) = 1;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1 + v26[6], v12, v9);
  uint64_t result = sub_1C29C5994((uint64_t)v8, v27, (uint64_t (*)(void))sub_1C29C5960);
  *(void *)(a1 + v26[8]) = v18;
  *(void *)uint64_t v28 = v20;
  *(unsigned char *)(v28 + 8) = v24;
  return result;
}

uint64_t sub_1C29C2118@<X0>(uint64_t a1@<X8>)
{
  sub_1C29C592C(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (id *)((char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C29C5960(0);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C2A9C4F8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  os_log_type_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(0);
  uint64_t v14 = v1 + *(int *)(v13 + 20);
  uint64_t v15 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14 + *(int *)(v15 + 40), v9);
  sub_1C29CE868(v14 + *(int *)(v15 + 44), (uint64_t)v8, (uint64_t (*)(void))sub_1C29C5960);
  id v16 = objc_msgSend(*(id *)(v14 + 8), sel_appleStandHours);
  objc_msgSend(v16, sel__value);
  uint64_t v18 = v17;

  sub_1C29CE868(v1 + *(int *)(v13 + 24), (uint64_t)v5, (uint64_t (*)(void))sub_1C29C592C);
  int v19 = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v5, 1, v15);
  if (v19 == 1)
  {
    sub_1C29CE8D0((uint64_t)v5, (uint64_t (*)(void))sub_1C29C592C);
    uint64_t v20 = 0;
  }
  else
  {
    id v21 = v5[1];
    sub_1C29CE8D0((uint64_t)v5, type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel);
    id v22 = objc_msgSend(v21, sel_appleStandHours);

    objc_msgSend(v22, sel__value);
    uint64_t v20 = v23;
  }
  BOOL v24 = v19 == 1;
  sub_1C2A9CC28();
  sub_1C29C71F0(&qword_1EBB8FB98, MEMORY[0x1E4F66428]);
  *(void *)a1 = sub_1C2A9D608();
  *(void *)(a1 + 8) = v25;
  uint64_t v26 = (int *)type metadata accessor for ActivitySummarySnidgetValueView();
  uint64_t v27 = a1 + v26[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v27, 1, 1, v9);
  uint64_t v28 = a1 + v26[9];
  *(void *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 8) = 1;
  uint64_t v29 = (void *)(a1 + v26[10]);
  *uint64_t v29 = 0xD000000000000017;
  v29[1] = 0x80000001C2AB8660;
  *(unsigned char *)(a1 + 16) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1 + v26[6], v12, v9);
  uint64_t result = sub_1C29C5994((uint64_t)v8, v27, (uint64_t (*)(void))sub_1C29C5960);
  *(void *)(a1 + v26[8]) = v18;
  *(void *)uint64_t v28 = v20;
  *(unsigned char *)(v28 + 8) = v24;
  return result;
}

uint64_t sub_1C29C2504@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  sub_1C29C5EE4(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v65 = (uint64_t)&v60 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v60 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v60 - v12;
  sub_1C29C5DF8(0);
  MEMORY[0x1F4188790](v14 - 8);
  id v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  int v19 = (char *)&v60 - v18;
  uint64_t v20 = type metadata accessor for ActivitySummarySnidgetValueView();
  MEMORY[0x1F4188790](v20 - 8);
  id v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v63 = (uint64_t)&v60 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v60 - v26;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v60 - v29;
  MEMORY[0x1F4188790](v31);
  uint64_t v68 = (uint64_t)&v60 - v32;
  sub_1C29C16C4((uint64_t)&v60 - v32);
  uint64_t v33 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(0);
  v66 = (char *)a1 + *(int *)(v33 + 20);
  uint64_t v67 = v33;
  if (*v66)
  {
    uint64_t v34 = (uint64_t)v16;
    uint64_t v35 = (uint64_t)v30;
    sub_1C29C5E2C(0);
    uint64_t v37 = (uint64_t)v19;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v19, 1, 1, v36);
  }
  else
  {
    sub_1C29C125C((uint64_t)v13);
    sub_1C29C1D30((uint64_t)v30);
    v64 = a1;
    v60 = v10;
    sub_1C29C125C((uint64_t)v10);
    sub_1C29C2118((uint64_t)v27);
    v62 = v19;
    uint64_t v38 = v65;
    sub_1C29CE868((uint64_t)v13, v65, (uint64_t (*)(void))sub_1C29C5EE4);
    uint64_t v61 = v13;
    uint64_t v39 = (uint64_t)v22;
    uint64_t v40 = v63;
    sub_1C29CE868((uint64_t)v30, v63, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE868((uint64_t)v10, (uint64_t)v5, (uint64_t (*)(void))sub_1C29C5EE4);
    sub_1C29CE868((uint64_t)v27, v39, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE868(v38, (uint64_t)v16, (uint64_t (*)(void))sub_1C29C5EE4);
    sub_1C29C5E60();
    uint64_t v42 = v41;
    sub_1C29CE868(v40, (uint64_t)&v16[*(int *)(v41 + 48)], (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE868((uint64_t)v5, (uint64_t)&v16[*(int *)(v42 + 64)], (uint64_t (*)(void))sub_1C29C5EE4);
    sub_1C29CE868(v39, (uint64_t)&v16[*(int *)(v42 + 80)], (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE8D0((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE8D0((uint64_t)v60, (uint64_t (*)(void))sub_1C29C5EE4);
    uint64_t v43 = (uint64_t)v16;
    uint64_t v35 = (uint64_t)v30;
    sub_1C29CE8D0((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE8D0((uint64_t)v61, (uint64_t (*)(void))sub_1C29C5EE4);
    sub_1C29CE8D0(v39, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE8D0((uint64_t)v5, (uint64_t (*)(void))sub_1C29C5EE4);
    sub_1C29CE8D0(v40, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    a1 = v64;
    sub_1C29CE8D0(v65, (uint64_t (*)(void))sub_1C29C5EE4);
    sub_1C29C5E2C(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 0, 1, v44);
    uint64_t v34 = v43;
    uint64_t v37 = (uint64_t)v62;
    sub_1C29CE800(v43, (uint64_t)v62, (uint64_t (*)(void))sub_1C29C5DF8);
  }
  uint64_t v45 = (void *)*((void *)v66 + 1);
  if (*a1)
  {
    uint64_t v46 = (char *)a1 + *(int *)(v67 + 36);
    LODWORD(v67) = v46[8];
    v66 = *(char **)v46;
    id v47 = v45;
    swift_retain();
    uint64_t v48 = sub_1C2A9CC18();
    uint64_t v50 = v49;
    swift_release();
    uint64_t v51 = v68;
    sub_1C29CE868(v68, v35, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE868(v37, v34, (uint64_t (*)(void))sub_1C29C5DF8);
    uint64_t v52 = v69;
    sub_1C29CE868(v35, v69, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29C5D68();
    uint64_t v54 = v53;
    sub_1C29CE868(v34, v52 + *(int *)(v53 + 48), (uint64_t (*)(void))sub_1C29C5DF8);
    uint64_t v55 = v52 + *(int *)(v54 + 64);
    *(void *)uint64_t v55 = v66;
    *(unsigned char *)(v55 + 8) = v67;
    int v56 = (void *)(v52 + *(int *)(v54 + 80));
    *int v56 = v47;
    v56[1] = v48;
    v56[2] = v50;
    swift_bridgeObjectRetain();
    id v57 = v47;
    sub_1C29CE8D0(v37, (uint64_t (*)(void))sub_1C29C5DF8);
    sub_1C29CE8D0(v51, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    swift_bridgeObjectRelease();

    sub_1C29CE8D0(v34, (uint64_t (*)(void))sub_1C29C5DF8);
    return sub_1C29CE8D0(v35, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  }
  else
  {
    sub_1C2A9CC28();
    sub_1C29C71F0(&qword_1EBB8FB98, MEMORY[0x1E4F66428]);
    id v59 = v45;
    uint64_t result = sub_1C2A9D5F8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C29C2B6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  sub_1C29C6198(0);
  uint64_t v51 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v47 = (uint64_t)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29C638C();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v46 - v9;
  sub_1C29C6250();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  id v16 = (char *)&v46 - v15;
  sub_1C29CE710(0, &qword_1EBB900E8, (uint64_t (*)(uint64_t))sub_1C29C60FC, (uint64_t (*)(uint64_t))sub_1C29C6198, MEMORY[0x1E4F3D748]);
  uint64_t v48 = v17;
  MEMORY[0x1F4188790](v17);
  int v19 = (char *)&v46 - v18;
  sub_1C29C60FC(0);
  uint64_t v49 = v20;
  MEMORY[0x1F4188790](v20);
  id v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for ActivitySummarySnidgetValueView();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v46 - v27;
  uint64_t v29 = (char *)a1 + *(int *)(type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(0) + 20);
  if (*v29 != 1)
  {
    *(void *)id v16 = sub_1C2A9D698();
    *((void *)v16 + 1) = 0;
    v16[16] = 0;
    sub_1C29CE794(0, &qword_1EBB90308, sub_1C29C62E4);
    sub_1C29C3288((uint64_t)&v16[*(int *)(v40 + 44)]);
    *(void *)uint64_t v10 = sub_1C2A9D698();
    *((void *)v10 + 1) = 0;
    v10[16] = 0;
    sub_1C29CE794(0, &qword_1EA31E670, sub_1C29C6420);
    sub_1C29C37B8(a1, (uint64_t)&v10[*(int *)(v41 + 44)]);
    sub_1C29CE868((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))sub_1C29C6250);
    sub_1C29CE868((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))sub_1C29C638C);
    uint64_t v42 = v47;
    sub_1C29CE868((uint64_t)v13, v47, (uint64_t (*)(void))sub_1C29C6250);
    sub_1C29C61D4(0, &qword_1EBB90128, (void (*)(uint64_t))sub_1C29C6250, (void (*)(uint64_t))sub_1C29C638C);
    sub_1C29CE868((uint64_t)v7, v42 + *(int *)(v43 + 48), (uint64_t (*)(void))sub_1C29C638C);
    sub_1C29CE8D0((uint64_t)v7, (uint64_t (*)(void))sub_1C29C638C);
    sub_1C29CE8D0((uint64_t)v13, (uint64_t (*)(void))sub_1C29C6250);
    sub_1C29CE868(v42, (uint64_t)v19, (uint64_t (*)(void))sub_1C29C6198);
    swift_storeEnumTagMultiPayload();
    sub_1C29C71F0(&qword_1EBB901B8, sub_1C29C60FC);
    sub_1C29C71F0(&qword_1EBB901E8, sub_1C29C6198);
    sub_1C2A9D7E8();
    sub_1C29CE8D0(v42, (uint64_t (*)(void))sub_1C29C6198);
    sub_1C29CE8D0((uint64_t)v10, (uint64_t (*)(void))sub_1C29C638C);
    uint64_t v38 = (uint64_t)v16;
    uint64_t v39 = (uint64_t (*)(void))sub_1C29C6250;
    return sub_1C29CE8D0(v38, v39);
  }
  sub_1C29C16C4((uint64_t)v28);
  uint64_t v30 = (void *)*((void *)v29 + 1);
  if (*a1)
  {
    id v31 = v30;
    swift_retain();
    uint64_t v32 = sub_1C2A9CC18();
    uint64_t v34 = v33;
    swift_release();
    sub_1C29CE868((uint64_t)v28, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE868((uint64_t)v25, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29C6130();
    uint64_t v36 = &v22[*(int *)(v35 + 48)];
    *(void *)uint64_t v36 = v31;
    *((void *)v36 + 1) = v32;
    *((void *)v36 + 2) = v34;
    id v37 = v31;
    swift_bridgeObjectRetain();
    sub_1C29CE8D0((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE868((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(void))sub_1C29C60FC);
    swift_storeEnumTagMultiPayload();
    sub_1C29C71F0(&qword_1EBB901B8, sub_1C29C60FC);
    sub_1C29C71F0(&qword_1EBB901E8, sub_1C29C6198);
    sub_1C2A9D7E8();
    sub_1C29CE8D0((uint64_t)v22, (uint64_t (*)(void))sub_1C29C60FC);
    swift_bridgeObjectRelease();

    uint64_t v38 = (uint64_t)v28;
    uint64_t v39 = (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView;
    return sub_1C29CE8D0(v38, v39);
  }
  sub_1C2A9CC28();
  sub_1C29C71F0(&qword_1EBB8FB98, MEMORY[0x1E4F66428]);
  id v45 = v30;
  uint64_t result = sub_1C2A9D5F8();
  __break(1u);
  return result;
}

uint64_t sub_1C29C3288@<X0>(uint64_t a1@<X8>)
{
  sub_1C29C5EE4(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = type metadata accessor for ActivitySummarySnidgetValueView();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v23 - v12;
  MEMORY[0x1F4188790](v14);
  id v16 = (char *)&v23 - v15;
  MEMORY[0x1F4188790](v17);
  int v19 = (char *)&v23 - v18;
  sub_1C29C16C4((uint64_t)&v23 - v18);
  sub_1C29C125C((uint64_t)v7);
  sub_1C29C1D30((uint64_t)v16);
  sub_1C29CE868((uint64_t)v19, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  sub_1C29CE868((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))sub_1C29C5EE4);
  sub_1C29CE868((uint64_t)v16, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  sub_1C29CE868((uint64_t)v13, a1, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  sub_1C29C6318();
  uint64_t v21 = v20;
  sub_1C29CE868((uint64_t)v4, a1 + *(int *)(v20 + 48), (uint64_t (*)(void))sub_1C29C5EE4);
  sub_1C29CE868((uint64_t)v10, a1 + *(int *)(v21 + 64), (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  sub_1C29CE8D0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  sub_1C29CE8D0((uint64_t)v7, (uint64_t (*)(void))sub_1C29C5EE4);
  sub_1C29CE8D0((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  sub_1C29CE8D0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  sub_1C29CE8D0((uint64_t)v4, (uint64_t (*)(void))sub_1C29C5EE4);
  return sub_1C29CE8D0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
}

uint64_t sub_1C29C34FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C29C638C();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = type metadata accessor for ActivitySummarySnidgetValueView();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v26 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v26 - v20;
  sub_1C29C16C4((uint64_t)&v26 - v20);
  sub_1C29C1D30((uint64_t)v18);
  *(void *)uint64_t v9 = sub_1C2A9D698();
  *((void *)v9 + 1) = 0;
  v9[16] = 0;
  sub_1C29CE794(0, &qword_1EA31E670, sub_1C29C6420);
  sub_1C29C37B8(a1, (uint64_t)&v9[*(int *)(v22 + 44)]);
  sub_1C29CE868((uint64_t)v21, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  sub_1C29CE868((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  sub_1C29CE868((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))sub_1C29C638C);
  sub_1C29CE868((uint64_t)v15, a2, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  sub_1C29C6748();
  uint64_t v24 = v23;
  sub_1C29CE868((uint64_t)v12, a2 + *(int *)(v23 + 48), (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  sub_1C29CE868((uint64_t)v6, a2 + *(int *)(v24 + 64), (uint64_t (*)(void))sub_1C29C638C);
  sub_1C29CE8D0((uint64_t)v9, (uint64_t (*)(void))sub_1C29C638C);
  sub_1C29CE8D0((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  sub_1C29CE8D0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  sub_1C29CE8D0((uint64_t)v6, (uint64_t (*)(void))sub_1C29C638C);
  sub_1C29CE8D0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  return sub_1C29CE8D0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
}

uint64_t sub_1C29C37B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ActivitySummarySnidgetValueView();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v25 - v8;
  sub_1C29C2118((uint64_t)&v25 - v8);
  uint64_t v10 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(0);
  uint64_t v11 = *(void **)((char *)a1 + *(int *)(v10 + 20) + 8);
  if (*a1)
  {
    uint64_t v12 = (char *)a1 + *(int *)(v10 + 36);
    char v13 = v12[8];
    uint64_t v14 = *(void *)v12;
    id v15 = v11;
    swift_retain();
    uint64_t v16 = sub_1C2A9CC18();
    uint64_t v18 = v17;
    swift_release();
    sub_1C29CE868((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE868((uint64_t)v6, a2, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29C6AD4(0, &qword_1EBB90078, (void (*)(uint64_t))type metadata accessor for ActivitySummarySnidgetValueView);
    uint64_t v20 = a2 + *(int *)(v19 + 48);
    *(void *)uint64_t v20 = v14;
    *(unsigned char *)(v20 + 8) = v13;
    uint64_t v21 = (void *)(a2 + *(int *)(v19 + 64));
    *uint64_t v21 = v15;
    v21[1] = v16;
    v21[2] = v18;
    swift_bridgeObjectRetain();
    id v22 = v15;
    sub_1C29CE8D0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    swift_bridgeObjectRelease();

    return sub_1C29CE8D0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  }
  else
  {
    sub_1C2A9CC28();
    sub_1C29C71F0(&qword_1EBB8FB98, MEMORY[0x1E4F66428]);
    id v24 = v11;
    uint64_t result = sub_1C2A9D5F8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C29C39E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ActivitySummarySnidgetValueView();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v35 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v35 - v11;
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v35 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v35 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v35 - v20;
  sub_1C29C16C4((uint64_t)&v35 - v20);
  sub_1C29C1D30((uint64_t)v18);
  sub_1C29C2118((uint64_t)v15);
  id v22 = *(void **)((char *)a1
                 + *(int *)(type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(0) + 20)
                 + 8);
  if (*a1)
  {
    id v23 = v22;
    swift_retain();
    uint64_t v35 = sub_1C2A9CC18();
    uint64_t v25 = v24;
    swift_release();
    sub_1C29CE868((uint64_t)v21, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE868((uint64_t)v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE868((uint64_t)v15, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE868((uint64_t)v12, a2, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29C6884();
    uint64_t v36 = v12;
    uint64_t v26 = (uint64_t)v9;
    uint64_t v27 = (uint64_t)v6;
    uint64_t v29 = v28;
    sub_1C29CE868(v26, a2 + *(int *)(v28 + 48), (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE868(v27, a2 + *(int *)(v29 + 64), (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    uint64_t v30 = (void *)(a2 + *(int *)(v29 + 80));
    uint64_t v31 = v35;
    *uint64_t v30 = v23;
    v30[1] = v31;
    v30[2] = v25;
    swift_bridgeObjectRetain();
    id v32 = v23;
    sub_1C29CE8D0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE8D0((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE8D0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    swift_bridgeObjectRelease();

    sub_1C29CE8D0(v27, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    sub_1C29CE8D0(v26, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
    return sub_1C29CE8D0((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for ActivitySummarySnidgetValueView);
  }
  else
  {
    sub_1C2A9CC28();
    sub_1C29C71F0(&qword_1EBB8FB98, MEMORY[0x1E4F66428]);
    id v34 = v22;
    uint64_t result = sub_1C2A9D5F8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C29C3CF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = a2;
  sub_1C29C5960(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v76 = (uint64_t)v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29C6D64(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v86 = (uint64_t)v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v85 = (uint64_t)v68 - v8;
  uint64_t v9 = sub_1C2A9C4F8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v78 = (char *)v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v68 - v13;
  sub_1C29C6C80();
  uint64_t v80 = *(void *)(v15 - 8);
  uint64_t v81 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v83 = (uint64_t)v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  v72 = (char *)v68 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v71 = (uint64_t)v68 - v20;
  MEMORY[0x1F4188790](v21);
  id v23 = (char *)v68 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v82 = (uint64_t)v68 - v25;
  uint64_t v77 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(0);
  uint64_t v26 = (char *)a1 + *(int *)(v77 + 20);
  uint64_t v74 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  uint64_t v27 = &v26[*(int *)(v74 + 52)];
  uint64_t v88 = v10;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v79 = v9;
  uint64_t v69 = v28;
  v28(v14, v27, v9);
  uint64_t v70 = v14;
  uint64_t v29 = sub_1C2A9D998();
  uint64_t v31 = v30;
  char v33 = v32;
  uint64_t v91 = v29;
  uint64_t v92 = v30;
  char v93 = v32 & 1;
  uint64_t v73 = v34;
  uint64_t v94 = v34;
  __int16 v95 = 256;
  uint64_t v89 = 0;
  unint64_t v90 = 0xE000000000000000;
  sub_1C2A9E4D8();
  uint64_t v84 = a1;
  if (*a1)
  {
    swift_retain();
    sub_1C2A9CC18();
    uint64_t v36 = v35;
    swift_release();
    uint64_t v75 = v26;
    if (!v36) {
      sub_1C2A9DD28();
    }
    sub_1C2A9DDB8();
    swift_bridgeObjectRelease();
    sub_1C2A9DDB8();
    sub_1C29C6D14(0, &qword_1EBB900C0, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3CE30], MEMORY[0x1E4F3CC10]);
    uint64_t v38 = v37;
    unint64_t v39 = sub_1C29CE5C8();
    v68[1] = v38;
    v68[0] = v39;
    sub_1C2A9DA48();
    swift_bridgeObjectRelease();
    sub_1C2980010(v29, v31, v33 & 1);
    swift_bridgeObjectRelease();
    uint64_t v40 = v82;
    sub_1C29CE800((uint64_t)v23, v82, (uint64_t (*)(void))sub_1C29C6C80);
    uint64_t v41 = v76;
    sub_1C29CE868((uint64_t)&v75[*(int *)(v74 + 56)], v76, (uint64_t (*)(void))sub_1C29C5960);
    uint64_t v42 = v88;
    uint64_t v43 = v79;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v41, 1, v79) == 1)
    {
      sub_1C29CE8D0(v41, (uint64_t (*)(void))sub_1C29C5960);
      uint64_t v44 = 1;
      uint64_t v45 = v87;
      uint64_t v46 = v85;
    }
    else
    {
      uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 32);
      uint64_t v48 = v78;
      v47(v78, v41, v43);
      v69(v70, v48, v43);
      uint64_t v49 = sub_1C2A9D998();
      uint64_t v51 = v50;
      char v53 = v52;
      uint64_t v91 = v49;
      uint64_t v92 = v50;
      char v93 = v52 & 1;
      uint64_t v94 = v54;
      __int16 v95 = 256;
      uint64_t v89 = 0;
      unint64_t v90 = 0xE000000000000000;
      sub_1C2A9E4D8();
      swift_retain();
      sub_1C2A9CC18();
      uint64_t v56 = v55;
      swift_release();
      if (!v56) {
        sub_1C2A9DD28();
      }
      uint64_t v45 = v87;
      sub_1C2A9DDB8();
      swift_bridgeObjectRelease();
      sub_1C2A9DDB8();
      uint64_t v57 = (uint64_t)v72;
      sub_1C2A9DA48();
      swift_bridgeObjectRelease();
      sub_1C2980010(v49, v51, v53 & 1);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v78, v43);
      uint64_t v58 = v71;
      sub_1C29CE800(v57, v71, (uint64_t (*)(void))sub_1C29C6C80);
      uint64_t v46 = v85;
      sub_1C29CE800(v58, v85, (uint64_t (*)(void))sub_1C29C6C80);
      uint64_t v44 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56))(v46, v44, 1, v81);
    uint64_t v59 = v83;
    v60 = (char *)v84 + *(int *)(v77 + 36);
    uint64_t v61 = *(void *)v60;
    char v62 = v60[8];
    sub_1C29CE868(v40, v83, (uint64_t (*)(void))sub_1C29C6C80);
    uint64_t v63 = v86;
    sub_1C29CE868(v46, v86, (uint64_t (*)(void))sub_1C29C6D64);
    sub_1C29CE868(v59, v45, (uint64_t (*)(void))sub_1C29C6C80);
    sub_1C29C6C08();
    uint64_t v65 = v64;
    sub_1C29CE868(v63, v45 + *(int *)(v64 + 48), (uint64_t (*)(void))sub_1C29C6D64);
    uint64_t v66 = v45 + *(int *)(v65 + 64);
    *(void *)uint64_t v66 = v61;
    *(unsigned char *)(v66 + 8) = v62;
    sub_1C29CE8D0(v46, (uint64_t (*)(void))sub_1C29C6D64);
    sub_1C29CE8D0(v40, (uint64_t (*)(void))sub_1C29C6C80);
    sub_1C29CE8D0(v63, (uint64_t (*)(void))sub_1C29C6D64);
    return sub_1C29CE8D0(v59, (uint64_t (*)(void))sub_1C29C6C80);
  }
  else
  {
    sub_1C2A9CC28();
    sub_1C29C71F0(&qword_1EBB8FB98, MEMORY[0x1E4F66428]);
    uint64_t result = sub_1C2A9D5F8();
    __break(1u);
  }
  return result;
}

void ActivitySnidgetCurrentValueVisualizationView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v24 = a1;
  sub_1C29C5B60();
  uint64_t v25 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29CE710(0, &qword_1EBB900E0, (uint64_t (*)(uint64_t))sub_1C29C6A18, (uint64_t (*)(uint64_t))sub_1C29C5B60, MEMORY[0x1E4F3D748]);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v24 - v7;
  sub_1C29C6A18();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_msgSend(self, sel_sharedBehavior, v24, v25);
  if (v15)
  {
    uint64_t v16 = v15;
    id v17 = objc_msgSend(v15, sel_features);

    if (v17)
    {
      unsigned int v18 = objc_msgSend(v17, sel_pauseRings);

      sub_1C29CE868((uint64_t)v2, (uint64_t)v14, type metadata accessor for ActivitySnidgetCurrentValueVisualizationView);
      if (v18)
      {
        unsigned __int8 v19 = objc_msgSend(*(id *)&v14[*(int *)(v12 + 20) + 8], sel_isPaused);
        sub_1C29CE8D0((uint64_t)v14, type metadata accessor for ActivitySnidgetCurrentValueVisualizationView);
        if (v19)
        {
          *(void *)uint64_t v11 = sub_1C2A9D6B8();
          *((void *)v11 + 1) = 0;
          v11[16] = 1;
          sub_1C29CE794(0, &qword_1EA31E630, sub_1C29C6AAC);
          sub_1C29C49F0(v2, (uint64_t)&v11[*(int *)(v20 + 44)]);
          sub_1C29CE868((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))sub_1C29C6A18);
          swift_storeEnumTagMultiPayload();
          sub_1C29C71F0(&qword_1EBB90150, (void (*)(uint64_t))sub_1C29C6A18);
          sub_1C29C71F0(&qword_1EBB90098, (void (*)(uint64_t))sub_1C29C5B60);
          sub_1C2A9D7E8();
          uint64_t v21 = sub_1C29C6A18;
          uint64_t v22 = (uint64_t)v11;
LABEL_8:
          sub_1C29CE8D0(v22, (uint64_t (*)(void))v21);
          return;
        }
      }
      else
      {
        sub_1C29CE8D0((uint64_t)v14, type metadata accessor for ActivitySnidgetCurrentValueVisualizationView);
      }
      *uint64_t v5 = sub_1C2A9D858();
      sub_1C29C6D98();
      sub_1C29C4C68(v2, (uint64_t)&v5[*(int *)(v23 + 44)]);
      sub_1C29CE868((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(void))sub_1C29C5B60);
      swift_storeEnumTagMultiPayload();
      sub_1C29C71F0(&qword_1EBB90150, (void (*)(uint64_t))sub_1C29C6A18);
      sub_1C29C71F0(&qword_1EBB90098, (void (*)(uint64_t))sub_1C29C5B60);
      sub_1C2A9D7E8();
      uint64_t v21 = sub_1C29C5B60;
      uint64_t v22 = (uint64_t)v5;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1C29C49F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C29C6B40();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v26 - v8;
  *(void *)uint64_t v9 = sub_1C2A9D738();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  sub_1C29CE794(0, &qword_1EA31E650, sub_1C29C6BD4);
  sub_1C29C3CF4(a1, (uint64_t)&v9[*(int *)(v10 + 44)]);
  uint64_t v11 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(0);
  uint64_t v12 = *(void **)((char *)a1 + *(int *)(v11 + 20) + 8);
  if (*a1)
  {
    uint64_t v13 = (char *)a1 + *(int *)(v11 + 36);
    char v14 = v13[8];
    uint64_t v15 = *(void *)v13;
    id v16 = v12;
    swift_retain();
    uint64_t v17 = sub_1C2A9CC18();
    uint64_t v19 = v18;
    swift_release();
    sub_1C29CE868((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))sub_1C29C6B40);
    sub_1C29CE868((uint64_t)v6, a2, (uint64_t (*)(void))sub_1C29C6B40);
    sub_1C29C6AD4(0, &qword_1EBB90180, (void (*)(uint64_t))sub_1C29C6B40);
    uint64_t v21 = a2 + *(int *)(v20 + 48);
    *(void *)uint64_t v21 = v15;
    *(unsigned char *)(v21 + 8) = v14;
    uint64_t v22 = (void *)(a2 + *(int *)(v20 + 64));
    *uint64_t v22 = v16;
    v22[1] = v17;
    v22[2] = v19;
    swift_bridgeObjectRetain();
    id v23 = v16;
    sub_1C29CE8D0((uint64_t)v9, (uint64_t (*)(void))sub_1C29C6B40);
    swift_bridgeObjectRelease();

    return sub_1C29CE8D0((uint64_t)v6, (uint64_t (*)(void))sub_1C29C6B40);
  }
  else
  {
    sub_1C2A9CC28();
    sub_1C29C71F0(&qword_1EBB8FB98, MEMORY[0x1E4F66428]);
    id v25 = v12;
    uint64_t result = sub_1C2A9D5F8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C29C4C68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a2;
  sub_1C29C65B8(0);
  uint64_t v67 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v61 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29C67BC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v60 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v56 - v8;
  sub_1C29C6680();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v59 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  char v14 = (char *)&v56 - v13;
  sub_1C29CE710(0, &qword_1EBB900F0, (uint64_t (*)(uint64_t))sub_1C29C5C08, (uint64_t (*)(uint64_t))sub_1C29C65B8, MEMORY[0x1E4F3D748]);
  uint64_t v63 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v65 = (uint64_t)&v56 - v16;
  sub_1C29C5C08(0);
  uint64_t v64 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29C6054();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v62 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v56 - v23;
  sub_1C29C5CA0();
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v56 - v29;
  int v31 = *((unsigned __int8 *)a1
        + *(int *)(type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(0) + 20));
  *(void *)uint64_t v30 = sub_1C2A9D698();
  *((void *)v30 + 1) = 0;
  v30[16] = 0;
  sub_1C29CE794(0, &qword_1EBB900A8, sub_1C29C5D34);
  uint64_t v33 = (uint64_t)v30;
  sub_1C29C2504(a1, (uint64_t)&v30[*(int *)(v32 + 44)]);
  uint64_t v34 = sub_1C2A9D738();
  if (v31 == 1)
  {
    if (qword_1EBB8FBC8 != -1) {
      swift_once();
    }
    uint64_t v35 = qword_1EBB8FBC0;
    uint64_t v36 = (uint64_t)v24;
    *(void *)uint64_t v24 = v34;
    *((void *)v24 + 1) = v35;
    v24[16] = 0;
    sub_1C29CE664();
    sub_1C29C2B6C(a1, (uint64_t)&v24[*(int *)(v37 + 44)]);
    sub_1C29CE868(v33, (uint64_t)v27, (uint64_t (*)(void))sub_1C29C5CA0);
    uint64_t v38 = v62;
    sub_1C29CE868((uint64_t)v24, v62, (uint64_t (*)(void))sub_1C29C6054);
    sub_1C29CE868((uint64_t)v27, (uint64_t)v19, (uint64_t (*)(void))sub_1C29C5CA0);
    sub_1C29C61D4(0, &qword_1EBB90148, (void (*)(uint64_t))sub_1C29C5CA0, (void (*)(uint64_t))sub_1C29C6054);
    sub_1C29CE868(v38, (uint64_t)&v19[*(int *)(v39 + 48)], (uint64_t (*)(void))sub_1C29C6054);
    sub_1C29CE8D0(v38, (uint64_t (*)(void))sub_1C29C6054);
    sub_1C29CE8D0((uint64_t)v27, (uint64_t (*)(void))sub_1C29C5CA0);
    sub_1C29CE868((uint64_t)v19, v65, (uint64_t (*)(void))sub_1C29C5C08);
    swift_storeEnumTagMultiPayload();
    sub_1C29C71F0(&qword_1EBB90208, sub_1C29C5C08);
    sub_1C29C71F0(&qword_1EBB901F8, sub_1C29C65B8);
    sub_1C2A9D7E8();
    uint64_t v40 = (uint64_t (*)(void))sub_1C29C5C08;
    uint64_t v41 = (uint64_t)v19;
  }
  else
  {
    if (qword_1EBB8FBC8 != -1) {
      swift_once();
    }
    uint64_t v42 = qword_1EBB8FBC0;
    *(void *)uint64_t v24 = v34;
    *((void *)v24 + 1) = v42;
    v24[16] = 0;
    sub_1C29CE664();
    uint64_t v44 = (uint64_t)&v24[*(int *)(v43 + 44)];
    uint64_t v57 = v24;
    sub_1C29C2B6C(a1, v44);
    *(void *)char v14 = sub_1C2A9D738();
    *((void *)v14 + 1) = v42;
    v14[16] = 0;
    sub_1C29CE794(0, &qword_1EA31E660, sub_1C29C6714);
    uint64_t v46 = (uint64_t)&v14[*(int *)(v45 + 44)];
    uint64_t v58 = v14;
    sub_1C29C34FC(a1, v46);
    *(void *)uint64_t v9 = sub_1C2A9D738();
    *((void *)v9 + 1) = v42;
    v9[16] = 0;
    sub_1C29CE794(0, &qword_1EA31E668, sub_1C29C6850);
    sub_1C29C39E4(a1, (uint64_t)&v9[*(int *)(v47 + 44)]);
    uint64_t v56 = v33;
    sub_1C29CE868(v33, (uint64_t)v27, (uint64_t (*)(void))sub_1C29C5CA0);
    uint64_t v48 = v62;
    sub_1C29CE868((uint64_t)v24, v62, (uint64_t (*)(void))sub_1C29C6054);
    uint64_t v49 = v59;
    sub_1C29CE868((uint64_t)v14, v59, (uint64_t (*)(void))sub_1C29C6680);
    uint64_t v50 = v60;
    sub_1C29CE868((uint64_t)v9, v60, (uint64_t (*)(void))sub_1C29C67BC);
    uint64_t v51 = v61;
    sub_1C29CE868((uint64_t)v27, v61, (uint64_t (*)(void))sub_1C29C5CA0);
    sub_1C29C65EC();
    uint64_t v53 = v52;
    sub_1C29CE868(v48, v51 + *(int *)(v52 + 48), (uint64_t (*)(void))sub_1C29C6054);
    sub_1C29CE868(v49, v51 + *(int *)(v53 + 64), (uint64_t (*)(void))sub_1C29C6680);
    sub_1C29CE868(v50, v51 + *(int *)(v53 + 80), (uint64_t (*)(void))sub_1C29C67BC);
    sub_1C29CE8D0(v50, (uint64_t (*)(void))sub_1C29C67BC);
    uint64_t v54 = v49;
    uint64_t v33 = v56;
    sub_1C29CE8D0(v54, (uint64_t (*)(void))sub_1C29C6680);
    sub_1C29CE8D0(v48, (uint64_t (*)(void))sub_1C29C6054);
    sub_1C29CE8D0((uint64_t)v27, (uint64_t (*)(void))sub_1C29C5CA0);
    sub_1C29CE868(v51, v65, (uint64_t (*)(void))sub_1C29C65B8);
    swift_storeEnumTagMultiPayload();
    sub_1C29C71F0(&qword_1EBB90208, sub_1C29C5C08);
    sub_1C29C71F0(&qword_1EBB901F8, sub_1C29C65B8);
    uint64_t v36 = (uint64_t)v57;
    sub_1C2A9D7E8();
    sub_1C29CE8D0(v51, (uint64_t (*)(void))sub_1C29C65B8);
    sub_1C29CE8D0((uint64_t)v9, (uint64_t (*)(void))sub_1C29C67BC);
    uint64_t v41 = (uint64_t)v58;
    uint64_t v40 = (uint64_t (*)(void))sub_1C29C6680;
  }
  sub_1C29CE8D0(v41, v40);
  sub_1C29CE8D0(v36, (uint64_t (*)(void))sub_1C29C6054);
  return sub_1C29CE8D0(v33, (uint64_t (*)(void))sub_1C29C5CA0);
}

uint64_t type metadata accessor for ActivitySummarySnidgetView.ActionHandlerData(uint64_t a1)
{
  return sub_1C296F4B8(a1, (uint64_t *)&unk_1EBB91800);
}

void sub_1C29C55B8(uint64_t a1)
{
}

void sub_1C29C55EC(uint64_t a1)
{
}

uint64_t type metadata accessor for ActivitySummarySnidgetView(uint64_t a1)
{
  return sub_1C296F4B8(a1, (uint64_t *)&unk_1EBB91430);
}

void sub_1C29C5640()
{
  if (!qword_1EBB8FD38)
  {
    sub_1C29C56D4(255);
    sub_1C29C71F0(&qword_1EBB8FD40, sub_1C29C56D4);
    unint64_t v0 = sub_1C2A9DB58();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8FD38);
    }
  }
}

void sub_1C29C56D4(uint64_t a1)
{
}

void sub_1C29C5708()
{
  if (!qword_1EBB8FBB8)
  {
    sub_1C2A9CCB8();
    sub_1C29C6D14(255, &qword_1EBB8FCD8, MEMORY[0x1E4F3EDA0], MEMORY[0x1E4F3CE48], MEMORY[0x1E4F3CC10]);
    sub_1C29C57BC();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EBB8FBB8);
    }
  }
}

void sub_1C29C57BC()
{
  if (!qword_1EBB8FBA8)
  {
    type metadata accessor for ActivitySnidgetCurrentValueVisualizationView(255);
    sub_1C29C71F0(&qword_1EBB91538, (void (*)(uint64_t))type metadata accessor for ActivitySnidgetCurrentValueVisualizationView);
    unint64_t v0 = sub_1C2A9CC78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8FBA8);
    }
  }
}

void sub_1C29C5850()
{
  if (!qword_1EBB8FD20)
  {
    sub_1C29C5640();
    sub_1C29C71F0(&qword_1EBB8FD30, (void (*)(uint64_t))sub_1C29C5640);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EBB8FD20);
    }
  }
}

void sub_1C29C5904(uint64_t a1)
{
}

void sub_1C29C592C(uint64_t a1)
{
}

void sub_1C29C5960(uint64_t a1)
{
}

uint64_t sub_1C29C5994(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C29C59FC()
{
  unint64_t result = qword_1EBB91458;
  if (!qword_1EBB91458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91458);
  }
  return result;
}

unint64_t sub_1C29C5A50()
{
  unint64_t result = qword_1EBB927F8;
  if (!qword_1EBB927F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB927F8);
  }
  return result;
}

void sub_1C29C5AA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C29C5B0C()
{
  unint64_t result = qword_1EBB8E878;
  if (!qword_1EBB8E878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E878);
  }
  return result;
}

void sub_1C29C5B60()
{
  if (!qword_1EBB900A0)
  {
    sub_1C29CE710(255, &qword_1EBB90120, (uint64_t (*)(uint64_t))sub_1C29C5C08, (uint64_t (*)(uint64_t))sub_1C29C65B8, MEMORY[0x1E4F3D750]);
    sub_1C29C6900();
    unint64_t v0 = sub_1C2A9D558();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB900A0);
    }
  }
}

void sub_1C29C5C08(uint64_t a1)
{
}

void sub_1C29C5C44(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  if (!*a2)
  {
    sub_1C29C61D4(255, a3, a4, a5);
    unint64_t v6 = sub_1C2A9DBE8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C29C5CA0()
{
  if (!qword_1EBB90138)
  {
    sub_1C29C5D34(255);
    sub_1C29C71F0(&qword_1EBB901A8, sub_1C29C5D34);
    unint64_t v0 = sub_1C2A9DB48();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB90138);
    }
  }
}

void sub_1C29C5D34(uint64_t a1)
{
}

void sub_1C29C5D68()
{
  if (!qword_1EBB90070)
  {
    type metadata accessor for ActivitySummarySnidgetValueView();
    sub_1C29C5DF8(255);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EBB90070);
    }
  }
}

void sub_1C29C5DF8(uint64_t a1)
{
}

void sub_1C29C5E2C(uint64_t a1)
{
}

void sub_1C29C5E60()
{
  if (!qword_1EBB8FD08)
  {
    sub_1C29C5EE4(255);
    type metadata accessor for ActivitySummarySnidgetValueView();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EBB8FD08);
    }
  }
}

void sub_1C29C5EE4(uint64_t a1)
{
}

void sub_1C29C5F0C(uint64_t a1)
{
}

void sub_1C29C5F34(uint64_t a1)
{
}

void sub_1C29C5F5C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2A9D5B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C29C5FC0()
{
  if (!qword_1EBB8FCE0)
  {
    sub_1C2A9DB78();
    sub_1C29C6D14(255, &qword_1EBB8FD10, MEMORY[0x1E4F3EB98], MEMORY[0x1E4F3EB78], MEMORY[0x1E4F3D980]);
    unint64_t v0 = sub_1C2A9D5B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8FCE0);
    }
  }
}

void sub_1C29C6054()
{
  if (!qword_1EBB90160)
  {
    sub_1C29CE710(255, &qword_1EBB90110, (uint64_t (*)(uint64_t))sub_1C29C60FC, (uint64_t (*)(uint64_t))sub_1C29C6198, MEMORY[0x1E4F3D750]);
    sub_1C29C64A0();
    unint64_t v0 = sub_1C2A9DB58();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB90160);
    }
  }
}

void sub_1C29C60FC(uint64_t a1)
{
}

void sub_1C29C6130()
{
  if (!qword_1EBB90088)
  {
    type metadata accessor for ActivitySummarySnidgetValueView();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB90088);
    }
  }
}

void sub_1C29C6198(uint64_t a1)
{
}

void sub_1C29C61D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C29C6250()
{
  if (!qword_1EBB8FD28)
  {
    sub_1C29C62E4(255);
    sub_1C29C71F0(&qword_1EBB8FD50, sub_1C29C62E4);
    unint64_t v0 = sub_1C2A9DB48();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8FD28);
    }
  }
}

void sub_1C29C62E4(uint64_t a1)
{
}

void sub_1C29C6318()
{
  if (!qword_1EBB8FCB0)
  {
    type metadata accessor for ActivitySummarySnidgetValueView();
    sub_1C29C5EE4(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EBB8FCB0);
    }
  }
}

void sub_1C29C638C()
{
  if (!qword_1EBB90130)
  {
    sub_1C29C6420(255);
    sub_1C29C71F0(&qword_1EBB90198, sub_1C29C6420);
    unint64_t v0 = sub_1C2A9DB48();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB90130);
    }
  }
}

void sub_1C29C6420(uint64_t a1)
{
}

void sub_1C29C6448(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C29C6AD4(255, a3, a4);
    unint64_t v5 = sub_1C2A9DBE8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C29C64A0()
{
  unint64_t result = qword_1EBB90108;
  if (!qword_1EBB90108)
  {
    sub_1C29CE710(255, &qword_1EBB90110, (uint64_t (*)(uint64_t))sub_1C29C60FC, (uint64_t (*)(uint64_t))sub_1C29C6198, MEMORY[0x1E4F3D750]);
    sub_1C29C71F0(&qword_1EBB901B8, sub_1C29C60FC);
    sub_1C29C71F0(&qword_1EBB901E8, sub_1C29C6198);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB90108);
  }
  return result;
}

void sub_1C29C65B8(uint64_t a1)
{
}

void sub_1C29C65EC()
{
  if (!qword_1EBB90140)
  {
    sub_1C29C5CA0();
    sub_1C29C6054();
    sub_1C29C6680();
    sub_1C29C67BC();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EBB90140);
    }
  }
}

void sub_1C29C6680()
{
  if (!qword_1EBB90170)
  {
    sub_1C29C6714(255);
    sub_1C29C71F0(&qword_1EBB901C8, sub_1C29C6714);
    unint64_t v0 = sub_1C2A9DB58();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB90170);
    }
  }
}

void sub_1C29C6714(uint64_t a1)
{
}

void sub_1C29C6748()
{
  if (!qword_1EBB90090)
  {
    type metadata accessor for ActivitySummarySnidgetValueView();
    sub_1C29C638C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EBB90090);
    }
  }
}

void sub_1C29C67BC()
{
  if (!qword_1EBB90168)
  {
    sub_1C29C6850(255);
    sub_1C29C71F0(&qword_1EBB90188, sub_1C29C6850);
    unint64_t v0 = sub_1C2A9DB58();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB90168);
    }
  }
}

void sub_1C29C6850(uint64_t a1)
{
}

void sub_1C29C6884()
{
  if (!qword_1EBB90080)
  {
    type metadata accessor for ActivitySummarySnidgetValueView();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EBB90080);
    }
  }
}

unint64_t sub_1C29C6900()
{
  unint64_t result = qword_1EBB90118;
  if (!qword_1EBB90118)
  {
    sub_1C29CE710(255, &qword_1EBB90120, (uint64_t (*)(uint64_t))sub_1C29C5C08, (uint64_t (*)(uint64_t))sub_1C29C65B8, MEMORY[0x1E4F3D750]);
    sub_1C29C71F0(&qword_1EBB90208, sub_1C29C5C08);
    sub_1C29C71F0(&qword_1EBB901F8, sub_1C29C65B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB90118);
  }
  return result;
}

void sub_1C29C6A18()
{
  if (!qword_1EBB90158)
  {
    sub_1C29C6AAC(255);
    sub_1C29C71F0(&qword_1EBB90218, sub_1C29C6AAC);
    unint64_t v0 = sub_1C2A9DB48();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB90158);
    }
  }
}

void sub_1C29C6AAC(uint64_t a1)
{
}

void sub_1C29C6AD4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v5) {
      atomic_store(TupleTypeMetadata3, a2);
    }
  }
}

void sub_1C29C6B40()
{
  if (!qword_1EBB90178)
  {
    sub_1C29C6BD4(255);
    sub_1C29C71F0(&qword_1EBB901D8, sub_1C29C6BD4);
    unint64_t v0 = sub_1C2A9DB58();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB90178);
    }
  }
}

void sub_1C29C6BD4(uint64_t a1)
{
}

void sub_1C29C6C08()
{
  if (!qword_1EBB900D8)
  {
    sub_1C29C6C80();
    sub_1C29C6D64(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EBB900D8);
    }
  }
}

void sub_1C29C6C80()
{
  if (!qword_1EBB900C8)
  {
    sub_1C29C6D14(255, &qword_1EBB900C0, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3CE30], MEMORY[0x1E4F3CC10]);
    sub_1C2A9D838();
    unint64_t v0 = sub_1C2A9D5B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB900C8);
    }
  }
}

void sub_1C29C6D14(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C29C6D64(uint64_t a1)
{
}

void sub_1C29C6D98()
{
  if (!qword_1EBB900B8)
  {
    sub_1C29CE710(255, &qword_1EBB90120, (uint64_t (*)(uint64_t))sub_1C29C5C08, (uint64_t (*)(uint64_t))sub_1C29C65B8, MEMORY[0x1E4F3D750]);
    sub_1C29C6E48();
    unint64_t v0 = sub_1C2A9D578();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB900B8);
    }
  }
}

unint64_t sub_1C29C6E48()
{
  unint64_t result = qword_1EBB8FB50;
  if (!qword_1EBB8FB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8FB50);
  }
  return result;
}

uint64_t sub_1C29C6E9C()
{
  return sub_1C29C71F0(&qword_1EBB91698, (void (*)(uint64_t))type metadata accessor for ActivitySummarySnidgetView.ViewModel);
}

uint64_t sub_1C29C6EE4()
{
  return sub_1C29C71F0(&qword_1EBB916A8, (void (*)(uint64_t))type metadata accessor for ActivitySummarySnidgetView.ViewModel);
}

uint64_t sub_1C29C6F2C()
{
  return sub_1C29C71F0(&qword_1EBB916A0, (void (*)(uint64_t))type metadata accessor for ActivitySummarySnidgetView.ViewModel);
}

uint64_t sub_1C29C6F74()
{
  return sub_1C29C71F0(&qword_1EBB8FEB8, (void (*)(uint64_t))type metadata accessor for ActivitySummarySnidgetView.ActionHandlerData);
}

uint64_t sub_1C29C6FBC()
{
  return sub_1C29C71F0(&qword_1EBB917F8, (void (*)(uint64_t))type metadata accessor for ActivitySummarySnidgetView.ActionHandlerData);
}

uint64_t sub_1C29C7004()
{
  return sub_1C29C71F0(&qword_1EBB8FEC0, (void (*)(uint64_t))type metadata accessor for ActivitySummarySnidgetView.ActionHandlerData);
}

uint64_t sub_1C29C704C()
{
  return sub_1C29C71F0(&qword_1EBB8FBE0, (void (*)(uint64_t))type metadata accessor for ActivitySummarySnidgetView.ActionHandler);
}

uint64_t type metadata accessor for ActivitySummarySnidgetView.ActionHandler(uint64_t a1)
{
  return sub_1C296F4B8(a1, (uint64_t *)&unk_1EBB917A8);
}

uint64_t sub_1C29C70B4()
{
  return sub_1C29C71F0(&qword_1EBB918E0, (void (*)(uint64_t))type metadata accessor for ActivitySummarySnidgetView);
}

uint64_t sub_1C29C70FC()
{
  return sub_1C29C71F0(&qword_1EBB918D8, (void (*)(uint64_t))type metadata accessor for ActivitySummarySnidgetView);
}

uint64_t sub_1C29C7144()
{
  return sub_1C29C71F0(qword_1EBB918E8, (void (*)(uint64_t))type metadata accessor for ActivitySummarySnidgetView);
}

uint64_t sub_1C29C718C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C29C71A8()
{
  return sub_1C29C71F0(&qword_1EBB91540, (void (*)(uint64_t))type metadata accessor for ActivitySnidgetCurrentValueVisualizationView);
}

uint64_t sub_1C29C71F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C29C7238()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C29C7254@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_retain();
}

uint64_t sub_1C29C72A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtCV19HealthVisualization26ActivitySummarySnidgetView9ViewModel_currentValueViewModel;
  swift_beginAccess();
  return sub_1C29CE868(v3, a2, (uint64_t (*)(void))sub_1C29BB114);
}

char *initializeBufferWithCopyOfBuffer for ActivitySummarySnidgetView(char *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    unint64_t v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1C2A9CDB8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1C29C55EC(0);
      memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    uint64_t v13 = &v4[v11];
    char v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *(void *)uint64_t v13 = *v14;
    *((void *)v13 + 1) = v15;
    uint64_t v16 = &v4[v12];
    uint64_t v17 = (uint64_t *)((char *)a2 + v12);
    uint64_t v18 = v17[1];
    *(void *)uint64_t v16 = *v17;
    *((void *)v16 + 1) = v18;
    *(void *)&v4[a3[7]] = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ActivitySummarySnidgetView(uint64_t a1)
{
  uint64_t v2 = sub_1C2A9CDB8();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

char *initializeWithCopy for ActivitySummarySnidgetView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C2A9CDB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1C29C55EC(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  char v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)char v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

char *assignWithCopy for ActivitySummarySnidgetView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C2A9CDB8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1C29C55EC(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  char v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_retain();
  swift_release();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_retain();
  swift_release();
  return a1;
}

char *initializeWithTake for ActivitySummarySnidgetView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C2A9CDB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1C29C55EC(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *assignWithTake for ActivitySummarySnidgetView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C2A9CDB8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1C29C55EC(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  char v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_release();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySummarySnidgetView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29C7C08);
}

uint64_t sub_1C29C7C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C29C55EC(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ActivitySummarySnidgetView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29C7CE0);
}

void sub_1C29C7CE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1C29C55EC(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

void sub_1C29C7DA0()
{
  sub_1C29C55EC(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1C29C7E40()
{
  return type metadata accessor for ActivitySummarySnidgetView.ViewModel(0);
}

void sub_1C29C7E48()
{
  sub_1C29BB114();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ActivitySummarySnidgetView.ViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ActivitySummarySnidgetView.ViewModel);
}

uint64_t dispatch thunk of ActivitySummarySnidgetView.ViewModel.headerModel.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ActivitySummarySnidgetView.ViewModel.headerModel.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ActivitySummarySnidgetView.ViewModel.headerModel.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ActivitySummarySnidgetView.ViewModel.currentValueViewModel.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ActivitySummarySnidgetView.ViewModel.currentValueViewModel.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ActivitySummarySnidgetView.ViewModel.currentValueViewModel.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ActivitySummarySnidgetView.ViewModel.__allocating_init(headerModel:currentValueViewModel:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ActivitySummarySnidgetView.ViewModel.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ActivitySummarySnidgetView.ViewModel.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_1C29C804C()
{
  return type metadata accessor for ActivitySummarySnidgetView.ActionHandlerData(0);
}

void sub_1C29C8054()
{
  sub_1C29BBF90(319);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ActivitySummarySnidgetView.ActionHandlerData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ActivitySummarySnidgetView.ActionHandlerData);
}

uint64_t dispatch thunk of ActivitySummarySnidgetView.ActionHandlerData.__allocating_init(relevantDateInterval:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ActivitySummarySnidgetView.ActionHandlerData.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ActivitySummarySnidgetView.ActionHandlerData.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1C29C8170()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for ActivitySummarySnidgetView.ActionHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ActivitySummarySnidgetView.ActionHandler);
}

uint64_t dispatch thunk of ActivitySummarySnidgetView.ActionHandler.didSelect()()
{
  return (*(uint64_t (**)(void))(*v0 + class metadata base offset for ActivitySummarySnidgetView.ActionHandler))();
}

uint64_t sub_1C29C8208()
{
  return type metadata accessor for ActivitySummarySnidgetView.ActionHandler(0);
}

void *initializeBufferWithCopyOfBuffer for ActivitySnidgetCurrentValueVisualizationView(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v20 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    uint64_t v5 = a3[5];
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    char *v6 = *((unsigned char *)a2 + v5);
    uint64_t v8 = *(void **)((char *)a2 + v5 + 8);
    *((void *)v6 + 1) = v8;
    uint64_t v9 = (int *)type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
    uint64_t v10 = v9[6];
    uint64_t v11 = &v6[v10];
    uint64_t v75 = &v7[v10];
    uint64_t v12 = sub_1C2A9C4F8();
    uint64_t v13 = *(void *)(v12 - 8);
    char v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    swift_retain();
    id v15 = v8;
    v14(v11, v75, v12);
    uint64_t v16 = v9[7];
    uint64_t v17 = &v6[v16];
    uint64_t v18 = &v7[v16];
    uint64_t v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    uint64_t v74 = v13;
    if (v76(&v7[v16], 1, v12))
    {
      sub_1C29C5960(0);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      v14(v17, v18, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
    }
    v14(&v6[v9[8]], &v7[v9[8]], v12);
    uint64_t v21 = v9[9];
    uint64_t v22 = &v6[v21];
    uint64_t v23 = &v7[v21];
    uint64_t v24 = a2;
    if (v76(&v7[v21], 1, v12))
    {
      sub_1C29C5960(0);
      memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      v14(v22, v23, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v22, 0, 1, v12);
    }
    v14(&v6[v9[10]], &v7[v9[10]], v12);
    uint64_t v26 = v9[11];
    uint64_t v27 = &v6[v26];
    uint64_t v28 = &v7[v26];
    if (v76(&v7[v26], 1, v12))
    {
      sub_1C29C5960(0);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      v14(v27, v28, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v27, 0, 1, v12);
    }
    v6[v9[12]] = v7[v9[12]];
    v14(&v6[v9[13]], &v7[v9[13]], v12);
    uint64_t v30 = v9[14];
    int v31 = &v6[v30];
    uint64_t v32 = &v7[v30];
    uint64_t v33 = v14;
    if (v76(&v7[v30], 1, v12))
    {
      sub_1C29C5960(0);
      memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      v14(v31, v32, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v31, 0, 1, v12);
    }
    uint64_t v20 = a1;
    uint64_t v35 = a3[6];
    uint64_t v36 = (void *)((char *)a1 + v35);
    uint64_t v37 = (void *)((char *)a2 + v35);
    uint64_t v38 = *((void *)v9 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v38 + 48))((char *)a2 + v35, 1, v9))
    {
      sub_1C29C592C(0);
      memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      *(unsigned char *)uint64_t v36 = *(unsigned char *)v37;
      uint64_t v40 = (void *)v37[1];
      v36[1] = v40;
      uint64_t v41 = v9[6];
      uint64_t v42 = (char *)v36 + v41;
      uint64_t v43 = (char *)v37 + v41;
      id v44 = v40;
      v33(v42, v43, v12);
      uint64_t v45 = v9[7];
      uint64_t v46 = (char *)v36 + v45;
      uint64_t v47 = (char *)v37 + v45;
      if (v76((char *)v37 + v45, 1, v12))
      {
        sub_1C29C5960(0);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        v33(v46, v47, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v46, 0, 1, v12);
      }
      v33((char *)v36 + v9[8], (char *)v37 + v9[8], v12);
      uint64_t v49 = v9[9];
      uint64_t v50 = (char *)v36 + v49;
      uint64_t v51 = (char *)v37 + v49;
      if (v76((char *)v37 + v49, 1, v12))
      {
        sub_1C29C5960(0);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        v33(v50, v51, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v50, 0, 1, v12);
      }
      v33((char *)v36 + v9[10], (char *)v37 + v9[10], v12);
      uint64_t v53 = v9[11];
      uint64_t v54 = (char *)v36 + v53;
      uint64_t v55 = (char *)v37 + v53;
      if (v76((char *)v37 + v53, 1, v12))
      {
        sub_1C29C5960(0);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        v33(v54, v55, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v54, 0, 1, v12);
      }
      *((unsigned char *)v36 + v9[12]) = *((unsigned char *)v37 + v9[12]);
      v33((char *)v36 + v9[13], (char *)v37 + v9[13], v12);
      uint64_t v57 = v9[14];
      uint64_t v58 = (char *)v36 + v57;
      uint64_t v59 = (char *)v37 + v57;
      uint64_t v20 = a1;
      if (v76(v59, 1, v12))
      {
        sub_1C29C5960(0);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        v33(v58, v59, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v58, 0, 1, v12);
      }
      (*(void (**)(void *, void, uint64_t, int *))(v38 + 56))(v36, 0, 1, v9);
      uint64_t v24 = a2;
    }
    uint64_t v61 = a3[7];
    uint64_t v62 = a3[8];
    uint64_t v63 = *(void **)((char *)v24 + v61);
    *(void *)((char *)v20 + v61) = v63;
    uint64_t v64 = *(void **)((char *)v24 + v62);
    *(void *)((char *)v20 + v62) = v64;
    uint64_t v65 = a3[9];
    uint64_t v66 = (char *)v20 + v65;
    uint64_t v67 = (char *)v24 + v65;
    *(void *)uint64_t v66 = *(void *)v67;
    v66[8] = v67[8];
    id v68 = v63;
    id v69 = v64;
  }
  return v20;
}

void destroy for ActivitySnidgetCurrentValueVisualizationView(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];

  uint64_t v5 = (int *)type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  uint64_t v6 = v4 + v5[6];
  uint64_t v7 = sub_1C2A9C4F8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  uint64_t v10 = v4 + v5[7];
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v11(v10, 1, v7)) {
    v9(v10, v7);
  }
  v9(v4 + v5[8], v7);
  uint64_t v12 = v4 + v5[9];
  if (!v11(v12, 1, v7)) {
    v9(v12, v7);
  }
  v9(v4 + v5[10], v7);
  uint64_t v13 = v4 + v5[11];
  if (!v11(v13, 1, v7)) {
    v9(v13, v7);
  }
  v9(v4 + v5[13], v7);
  uint64_t v14 = v4 + v5[14];
  if (!v11(v14, 1, v7)) {
    v9(v14, v7);
  }
  uint64_t v15 = a1 + a2[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48))(v15, 1, v5))
  {

    v9(v15 + v5[6], v7);
    uint64_t v16 = v15 + v5[7];
    if (!v11(v16, 1, v7)) {
      v9(v16, v7);
    }
    v9(v15 + v5[8], v7);
    uint64_t v17 = v15 + v5[9];
    if (!v11(v17, 1, v7)) {
      v9(v17, v7);
    }
    v9(v15 + v5[10], v7);
    uint64_t v18 = v15 + v5[11];
    if (!v11(v18, 1, v7)) {
      v9(v18, v7);
    }
    v9(v15 + v5[13], v7);
    uint64_t v19 = v15 + v5[14];
    if (!v11(v19, 1, v7)) {
      v9(v19, v7);
    }
  }

  uint64_t v20 = *(void **)(a1 + a2[8]);
}

void *initializeWithCopy for ActivitySnidgetCurrentValueVisualizationView(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *uint64_t v5 = *((unsigned char *)a2 + v4);
  uint64_t v7 = *(void **)((char *)a2 + v4 + 8);
  *((void *)v5 + 1) = v7;
  uint64_t v8 = (int *)type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  uint64_t v9 = v8[6];
  uint64_t v74 = &v5[v9];
  uint64_t v10 = &v6[v9];
  uint64_t v11 = sub_1C2A9C4F8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  swift_retain();
  id v14 = v7;
  v13(v74, v10, v11);
  uint64_t v15 = v8[7];
  uint64_t v16 = &v5[v15];
  uint64_t v17 = &v6[v15];
  uint64_t v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v75(&v6[v15], 1, v11))
  {
    sub_1C29C5960(0);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v13(v16, v17, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  v13(&v5[v8[8]], &v6[v8[8]], v11);
  uint64_t v19 = v8[9];
  uint64_t v20 = &v5[v19];
  uint64_t v21 = &v6[v19];
  uint64_t v22 = a1;
  if (v75(&v6[v19], 1, v11))
  {
    sub_1C29C5960(0);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v13(v20, v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  }
  v13(&v5[v8[10]], &v6[v8[10]], v11);
  uint64_t v24 = v8[11];
  uint64_t v25 = &v5[v24];
  uint64_t v26 = &v6[v24];
  if (v75(&v6[v24], 1, v11))
  {
    sub_1C29C5960(0);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v13(v25, v26, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
  }
  v5[v8[12]] = v6[v8[12]];
  v13(&v5[v8[13]], &v6[v8[13]], v11);
  uint64_t v28 = v8[14];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v75(&v6[v28], 1, v11))
  {
    sub_1C29C5960(0);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v13(v29, v30, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v29, 0, 1, v11);
  }
  uint64_t v32 = a2;
  uint64_t v33 = a3[6];
  uint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (void *)((char *)a2 + v33);
  uint64_t v36 = *((void *)v8 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v36 + 48))((char *)a2 + v33, 1, v8))
  {
    sub_1C29C592C(0);
    memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    uint64_t v70 = v36;
    *(unsigned char *)uint64_t v34 = *(unsigned char *)v35;
    uint64_t v38 = (void *)v35[1];
    v34[1] = v38;
    uint64_t v39 = v8[6];
    uint64_t v40 = (char *)v34 + v39;
    uint64_t v41 = (char *)v35 + v39;
    id v42 = v38;
    v13(v40, v41, v11);
    uint64_t v43 = v8[7];
    id v44 = (char *)v34 + v43;
    uint64_t v45 = (char *)v35 + v43;
    if (v75((char *)v35 + v43, 1, v11))
    {
      sub_1C29C5960(0);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      uint64_t v47 = v12;
    }
    else
    {
      v13(v44, v45, v11);
      uint64_t v47 = v12;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v44, 0, 1, v11);
    }
    v13((char *)v34 + v8[8], (char *)v35 + v8[8], v11);
    uint64_t v48 = v8[9];
    uint64_t v49 = (char *)v34 + v48;
    uint64_t v50 = (char *)v35 + v48;
    if (v75((char *)v35 + v48, 1, v11))
    {
      sub_1C29C5960(0);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      v13(v49, v50, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v11);
    }
    v13((char *)v34 + v8[10], (char *)v35 + v8[10], v11);
    uint64_t v52 = v8[11];
    uint64_t v53 = (char *)v34 + v52;
    uint64_t v54 = (char *)v35 + v52;
    if (v75((char *)v35 + v52, 1, v11))
    {
      sub_1C29C5960(0);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      v13(v53, v54, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v53, 0, 1, v11);
    }
    *((unsigned char *)v34 + v8[12]) = *((unsigned char *)v35 + v8[12]);
    v13((char *)v34 + v8[13], (char *)v35 + v8[13], v11);
    uint64_t v56 = v8[14];
    uint64_t v57 = (char *)v34 + v56;
    uint64_t v58 = (char *)v35 + v56;
    uint64_t v32 = a2;
    if (v75(v58, 1, v11))
    {
      sub_1C29C5960(0);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      v13(v57, v58, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v57, 0, 1, v11);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v70 + 56))(v34, 0, 1, v8);
    uint64_t v22 = a1;
  }
  uint64_t v60 = a3[7];
  uint64_t v61 = a3[8];
  uint64_t v62 = *(void **)((char *)v32 + v60);
  *(void *)((char *)v22 + v60) = v62;
  uint64_t v63 = *(void **)((char *)v32 + v61);
  *(void *)((char *)v22 + v61) = v63;
  uint64_t v64 = a3[9];
  uint64_t v65 = (char *)v22 + v64;
  uint64_t v66 = (char *)v32 + v64;
  *(void *)uint64_t v65 = *(void *)v66;
  v65[8] = v66[8];
  id v67 = v62;
  id v68 = v63;
  return v22;
}

char *assignWithCopy for ActivitySnidgetCurrentValueVisualizationView(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_retain();
  swift_release();
  *((void *)a1 + 1) = a2[1];
  uint64_t v130 = a3;
  v131 = a2;
  uint64_t v6 = a3[5];
  v132 = a1;
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  *uint64_t v7 = *((unsigned char *)a2 + v6);
  uint64_t v9 = *(void **)((char *)a2 + v6 + 8);
  uint64_t v10 = (void *)*((void *)v7 + 1);
  *((void *)v7 + 1) = v9;
  id v11 = v9;

  uint64_t v12 = (int *)type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  uint64_t v13 = v12[6];
  id v14 = &v7[v13];
  uint64_t v15 = &v8[v13];
  uint64_t v16 = sub_1C2A9C4F8();
  uint64_t v17 = *(void *)(v16 - 8);
  v133 = *(void (**)(char *, char *, uint64_t))(v17 + 24);
  v133(v14, v15, v16);
  uint64_t v18 = v12[7];
  uint64_t v19 = &v7[v18];
  uint64_t v20 = &v8[v18];
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v22 = v21(&v7[v18], 1, v16);
  int v23 = v21(v20, 1, v16);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v20, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v16);
LABEL_7:
      uint64_t v25 = v133;
      goto LABEL_8;
    }
LABEL_6:
    sub_1C29C5960(0);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    goto LABEL_6;
  }
  uint64_t v66 = v19;
  uint64_t v25 = v133;
  v133(v66, v20, v16);
LABEL_8:
  v25(&v7[v12[8]], &v8[v12[8]], v16);
  uint64_t v26 = v12[9];
  uint64_t v27 = &v7[v26];
  uint64_t v28 = &v8[v26];
  int v29 = v21(&v7[v26], 1, v16);
  int v30 = v21(v28, 1, v16);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v27, v28, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v27, 0, 1, v16);
LABEL_14:
      uint64_t v32 = v133;
      goto LABEL_15;
    }
LABEL_13:
    sub_1C29C5960(0);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_14;
  }
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v27, v16);
    goto LABEL_13;
  }
  id v67 = v27;
  uint64_t v32 = v133;
  v133(v67, v28, v16);
LABEL_15:
  v32(&v7[v12[10]], &v8[v12[10]], v16);
  uint64_t v33 = v12[11];
  uint64_t v34 = &v7[v33];
  uint64_t v35 = &v8[v33];
  int v36 = v21(&v7[v33], 1, v16);
  int v37 = v21(v35, 1, v16);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v34, v35, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v34, 0, 1, v16);
LABEL_21:
      uint64_t v39 = v133;
      goto LABEL_22;
    }
LABEL_20:
    sub_1C29C5960(0);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_21;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v34, v16);
    goto LABEL_20;
  }
  id v68 = v34;
  uint64_t v39 = v133;
  v133(v68, v35, v16);
LABEL_22:
  v7[v12[12]] = v8[v12[12]];
  v39(&v7[v12[13]], &v8[v12[13]], v16);
  uint64_t v40 = v12[14];
  uint64_t v41 = &v7[v40];
  id v42 = &v8[v40];
  int v43 = v21(&v7[v40], 1, v16);
  int v44 = v21(v42, 1, v16);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v41, v42, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v41, 0, 1, v16);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v41, v16);
LABEL_27:
    sub_1C29C5960(0);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_28;
  }
  v133(v41, v42, v16);
LABEL_28:
  uint64_t v46 = v130[6];
  uint64_t v47 = (uint64_t)&v132[v46];
  uint64_t v48 = (char *)v131 + v46;
  __src = (void *)*((void *)v12 - 1);
  uint64_t v49 = (uint64_t (*)(char *, uint64_t, int *))__src[6];
  int v50 = v49(&v132[v46], 1, v12);
  int v51 = v49(v48, 1, v12);
  if (!v50)
  {
    if (v51)
    {
      sub_1C29CE8D0(v47, type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel);
      goto LABEL_34;
    }
    *(unsigned char *)uint64_t v47 = *v48;
    id v69 = (void *)*((void *)v48 + 1);
    uint64_t v70 = *(void **)(v47 + 8);
    *(void *)(v47 + 8) = v69;
    id v71 = v69;

    v133((char *)(v47 + v12[6]), &v48[v12[6]], v16);
    uint64_t v72 = v12[7];
    uint64_t v73 = (char *)(v47 + v72);
    uint64_t v74 = &v48[v72];
    int v75 = v21((char *)(v47 + v72), 1, v16);
    int v76 = v21(v74, 1, v16);
    if (v75)
    {
      if (!v76)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v73, v74, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v73, 0, 1, v16);
LABEL_58:
        uint64_t v103 = (void (*)(uint64_t, char *, uint64_t))v133;
        goto LABEL_59;
      }
    }
    else
    {
      if (!v76)
      {
        v125 = v73;
        uint64_t v103 = (void (*)(uint64_t, char *, uint64_t))v133;
        v133(v125, v74, v16);
LABEL_59:
        v103(v47 + v12[8], &v48[v12[8]], v16);
        uint64_t v104 = v12[9];
        v105 = (char *)(v47 + v104);
        uint64_t v106 = &v48[v104];
        int v107 = v21((char *)(v47 + v104), 1, v16);
        int v108 = v21(v106, 1, v16);
        if (v107)
        {
          if (!v108)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v105, v106, v16);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v105, 0, 1, v16);
LABEL_65:
            uint64_t v110 = (void (*)(uint64_t, char *, uint64_t))v133;
            goto LABEL_66;
          }
        }
        else
        {
          if (!v108)
          {
            v126 = v105;
            uint64_t v110 = (void (*)(uint64_t, char *, uint64_t))v133;
            v133(v126, v106, v16);
LABEL_66:
            v110(v47 + v12[10], &v48[v12[10]], v16);
            uint64_t v111 = v12[11];
            uint64_t v112 = (char *)(v47 + v111);
            uint64_t v113 = &v48[v111];
            int v114 = v21((char *)(v47 + v111), 1, v16);
            __srca = v113;
            int v115 = v21(v113, 1, v16);
            if (v114)
            {
              uint64_t v116 = v17;
              if (!v115)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v112, __srca, v16);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v112, 0, 1, v16);
LABEL_72:
                v118 = (void (*)(uint64_t, char *, uint64_t))v133;
LABEL_73:
                *(unsigned char *)(v47 + v12[12]) = v48[v12[12]];
                v118(v47 + v12[13], &v48[v12[13]], v16);
                uint64_t v119 = v12[14];
                v120 = (char *)(v47 + v119);
                v121 = &v48[v119];
                int v122 = v21(v120, 1, v16);
                int v123 = v21(v121, 1, v16);
                if (v122)
                {
                  if (!v123)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v120, v121, v16);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v120, 0, 1, v16);
                    goto LABEL_54;
                  }
                }
                else
                {
                  if (!v123)
                  {
                    v118((uint64_t)v120, v121, v16);
                    goto LABEL_54;
                  }
                  (*(void (**)(char *, uint64_t))(v116 + 8))(v120, v16);
                }
                sub_1C29C5960(0);
                size_t v63 = *(void *)(*(void *)(v124 - 8) + 64);
                uint64_t v64 = v120;
                uint64_t v65 = v121;
                goto LABEL_35;
              }
            }
            else
            {
              uint64_t v116 = v17;
              if (!v115)
              {
                v127 = v112;
                v118 = (void (*)(uint64_t, char *, uint64_t))v133;
                v133(v127, __srca, v16);
                goto LABEL_73;
              }
              (*(void (**)(char *, uint64_t))(v17 + 8))(v112, v16);
            }
            sub_1C29C5960(0);
            memcpy(v112, __srca, *(void *)(*(void *)(v117 - 8) + 64));
            goto LABEL_72;
          }
          (*(void (**)(char *, uint64_t))(v17 + 8))(v105, v16);
        }
        sub_1C29C5960(0);
        memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64));
        goto LABEL_65;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(v73, v16);
    }
    sub_1C29C5960(0);
    memcpy(v73, v74, *(void *)(*(void *)(v102 - 8) + 64));
    goto LABEL_58;
  }
  if (v51)
  {
LABEL_34:
    sub_1C29C592C(0);
    size_t v63 = *(void *)(*(void *)(v62 - 8) + 64);
    uint64_t v64 = (void *)v47;
    uint64_t v65 = v48;
LABEL_35:
    memcpy(v64, v65, v63);
    goto LABEL_54;
  }
  *(unsigned char *)uint64_t v47 = *v48;
  uint64_t v52 = (void *)*((void *)v48 + 1);
  *(void *)(v47 + 8) = v52;
  uint64_t v53 = v12[6];
  uint64_t v54 = v47 + v53;
  uint64_t v55 = &v48[v53];
  uint64_t v56 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 16);
  id v57 = v52;
  v56(v54, v55, v16);
  uint64_t v58 = v12[7];
  uint64_t v59 = (void *)(v47 + v58);
  uint64_t v60 = &v48[v58];
  if (v21(&v48[v58], 1, v16))
  {
    sub_1C29C5960(0);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    v56((uint64_t)v59, v60, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v59, 0, 1, v16);
  }
  v56(v47 + v12[8], &v48[v12[8]], v16);
  uint64_t v77 = v12[9];
  uint64_t v78 = (void *)(v47 + v77);
  uint64_t v79 = &v48[v77];
  if (v21(&v48[v77], 1, v16))
  {
    sub_1C29C5960(0);
    memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
  }
  else
  {
    v56((uint64_t)v78, v79, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v78, 0, 1, v16);
  }
  v56(v47 + v12[10], &v48[v12[10]], v16);
  uint64_t v81 = v12[11];
  uint64_t v82 = (void *)(v47 + v81);
  uint64_t v83 = &v48[v81];
  if (v21(&v48[v81], 1, v16))
  {
    sub_1C29C5960(0);
    memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    v56((uint64_t)v82, v83, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v82, 0, 1, v16);
  }
  *(unsigned char *)(v47 + v12[12]) = v48[v12[12]];
  v56(v47 + v12[13], &v48[v12[13]], v16);
  uint64_t v85 = v12[14];
  uint64_t v86 = (void *)(v47 + v85);
  uint64_t v87 = &v48[v85];
  if (v21(v87, 1, v16))
  {
    sub_1C29C5960(0);
    memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64));
  }
  else
  {
    v56((uint64_t)v86, v87, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v86, 0, 1, v16);
  }
  ((void (*)(uint64_t, void, uint64_t, int *))__src[7])(v47, 0, 1, v12);
LABEL_54:
  uint64_t v89 = v130[7];
  unint64_t v90 = *(void **)((char *)v131 + v89);
  uint64_t v91 = *(void **)&v132[v89];
  *(void *)&v132[v89] = v90;
  id v92 = v90;

  uint64_t v93 = v130[8];
  uint64_t v94 = *(void **)((char *)v131 + v93);
  __int16 v95 = *(void **)&v132[v93];
  *(void *)&v132[v93] = v94;
  id v96 = v94;

  uint64_t v97 = v130[9];
  id v98 = &v132[v97];
  uint64_t v99 = (char *)v131 + v97;
  uint64_t v100 = *(void *)v99;
  v98[8] = v99[8];
  *(void *)id v98 = v100;
  return v132;
}

_OWORD *initializeWithTake for ActivitySnidgetCurrentValueVisualizationView(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v3 = a3[5];
  uint64_t v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  *uint64_t v4 = *((unsigned char *)a2 + v3);
  *((void *)v4 + 1) = *(void *)((char *)a2 + v3 + 8);
  uint64_t v6 = (int *)type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = &v4[v7];
  uint64_t v9 = &v5[v7];
  uint64_t v10 = sub_1C2A9C4F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  uint64_t v13 = v6[7];
  id v14 = &v4[v13];
  uint64_t v15 = &v5[v13];
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v60 = v11;
  if (v16(&v5[v13], 1, v10))
  {
    sub_1C29C5960(0);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v12(&v4[v6[8]], &v5[v6[8]], v10);
  uint64_t v18 = v6[9];
  uint64_t v19 = &v4[v18];
  uint64_t v20 = &v5[v18];
  if (v16(&v5[v18], 1, v10))
  {
    sub_1C29C5960(0);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v12(v19, v20, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  v12(&v4[v6[10]], &v5[v6[10]], v10);
  uint64_t v22 = v6[11];
  int v23 = &v4[v22];
  uint64_t v24 = &v5[v22];
  if (v16(&v5[v22], 1, v10))
  {
    sub_1C29C5960(0);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    v12(v23, v24, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
  }
  v4[v6[12]] = v5[v6[12]];
  v12(&v4[v6[13]], &v5[v6[13]], v10);
  uint64_t v26 = v6[14];
  uint64_t v27 = &v4[v26];
  uint64_t v28 = &v5[v26];
  if (v16(&v5[v26], 1, v10))
  {
    sub_1C29C5960(0);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    v12(v27, v28, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v27, 0, 1, v10);
  }
  uint64_t v31 = a2;
  int v30 = a1;
  uint64_t v32 = a3[6];
  uint64_t v33 = (void *)((char *)a1 + v32);
  uint64_t v34 = (void *)((char *)a2 + v32);
  uint64_t v35 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v35 + 48))((char *)a2 + v32, 1, v6))
  {
    sub_1C29C592C(0);
    memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
    v33[1] = v34[1];
    v12((char *)v33 + v6[6], (char *)v34 + v6[6], v10);
    uint64_t v37 = v6[7];
    uint64_t v38 = (char *)v33 + v37;
    uint64_t v39 = (char *)v34 + v37;
    if (v16((char *)v34 + v37, 1, v10))
    {
      sub_1C29C5960(0);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      v12(v38, v39, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v38, 0, 1, v10);
    }
    v12((char *)v33 + v6[8], (char *)v34 + v6[8], v10);
    uint64_t v41 = v6[9];
    id v42 = (char *)v33 + v41;
    int v43 = (char *)v34 + v41;
    if (v16((char *)v34 + v41, 1, v10))
    {
      sub_1C29C5960(0);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      v12(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v42, 0, 1, v10);
    }
    v12((char *)v33 + v6[10], (char *)v34 + v6[10], v10);
    uint64_t v45 = v6[11];
    uint64_t v46 = (char *)v33 + v45;
    uint64_t v47 = (char *)v34 + v45;
    if (v16((char *)v34 + v45, 1, v10))
    {
      sub_1C29C5960(0);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      v12(v46, v47, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v46, 0, 1, v10);
    }
    *((unsigned char *)v33 + v6[12]) = *((unsigned char *)v34 + v6[12]);
    v12((char *)v33 + v6[13], (char *)v34 + v6[13], v10);
    uint64_t v49 = v6[14];
    int v50 = (char *)v33 + v49;
    int v51 = (char *)v34 + v49;
    uint64_t v31 = a2;
    if (v16(v51, 1, v10))
    {
      sub_1C29C5960(0);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      v12(v50, v51, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v50, 0, 1, v10);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v35 + 56))(v33, 0, 1, v6);
    int v30 = a1;
  }
  uint64_t v53 = a3[8];
  *(void *)((char *)v30 + a3[7]) = *(void *)((char *)v31 + a3[7]);
  *(void *)((char *)v30 + v53) = *(void *)((char *)v31 + v53);
  uint64_t v54 = a3[9];
  uint64_t v55 = (char *)v30 + v54;
  uint64_t v56 = (char *)v31 + v54;
  *(void *)uint64_t v55 = *(void *)v56;
  v55[8] = v56[8];
  return v30;
}

char *assignWithTake for ActivitySnidgetCurrentValueVisualizationView(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_release();
  *((void *)a1 + 1) = a2[1];
  int v115 = a3;
  uint64_t v116 = a2;
  uint64_t v6 = a3[5];
  uint64_t v117 = a1;
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  *uint64_t v7 = *((unsigned char *)a2 + v6);
  uint64_t v9 = (void *)*((void *)v7 + 1);
  *((void *)v7 + 1) = *(void *)((char *)a2 + v6 + 8);

  uint64_t v10 = (int *)type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  uint64_t v11 = v10[6];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_1C2A9C4F8();
  uint64_t v15 = *(void *)(v14 - 8);
  __dst = *(void (**)(char *, char *, uint64_t))(v15 + 40);
  __dst(v12, v13, v14);
  uint64_t v16 = v10[7];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v20 = v19(&v7[v16], 1, v14);
  int v21 = v19(v18, 1, v14);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v18, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v17, 0, 1, v14);
LABEL_7:
      int v23 = __dst;
      goto LABEL_8;
    }
LABEL_6:
    sub_1C29C5960(0);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    goto LABEL_6;
  }
  uint64_t v58 = v17;
  int v23 = __dst;
  __dst(v58, v18, v14);
LABEL_8:
  v23(&v7[v10[8]], &v8[v10[8]], v14);
  uint64_t v24 = v10[9];
  uint64_t v25 = &v7[v24];
  uint64_t v26 = &v8[v24];
  int v27 = v19(&v7[v24], 1, v14);
  int v28 = v19(v26, 1, v14);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v25, v26, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v25, 0, 1, v14);
LABEL_14:
      int v30 = __dst;
      goto LABEL_15;
    }
LABEL_13:
    sub_1C29C5960(0);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_14;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v25, v14);
    goto LABEL_13;
  }
  uint64_t v59 = v25;
  int v30 = __dst;
  __dst(v59, v26, v14);
LABEL_15:
  v30(&v7[v10[10]], &v8[v10[10]], v14);
  uint64_t v31 = v10[11];
  uint64_t v32 = &v7[v31];
  uint64_t v33 = &v8[v31];
  int v34 = v19(&v7[v31], 1, v14);
  int v35 = v19(v33, 1, v14);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v32, v33, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v32, 0, 1, v14);
LABEL_21:
      uint64_t v37 = __dst;
      goto LABEL_22;
    }
LABEL_20:
    sub_1C29C5960(0);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_21;
  }
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v32, v14);
    goto LABEL_20;
  }
  uint64_t v60 = v32;
  uint64_t v37 = __dst;
  __dst(v60, v33, v14);
LABEL_22:
  v7[v10[12]] = v8[v10[12]];
  v37(&v7[v10[13]], &v8[v10[13]], v14);
  uint64_t v38 = v10[14];
  uint64_t v39 = &v7[v38];
  uint64_t v40 = &v8[v38];
  int v41 = v19(&v7[v38], 1, v14);
  int v42 = v19(v40, 1, v14);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v39, v40, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v39, 0, 1, v14);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v39, v14);
LABEL_27:
    sub_1C29C5960(0);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_28;
  }
  __dst(v39, v40, v14);
LABEL_28:
  uint64_t v44 = v115[6];
  uint64_t v45 = (uint64_t)&v117[v44];
  uint64_t v46 = (char *)v116 + v44;
  __src = (void *)*((void *)v10 - 1);
  uint64_t v47 = (uint64_t (*)(char *, uint64_t, int *))__src[6];
  int v48 = v47(&v117[v44], 1, v10);
  int v49 = v47(v46, 1, v10);
  if (!v48)
  {
    if (v49)
    {
      sub_1C29CE8D0(v45, type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel);
      goto LABEL_34;
    }
    *(unsigned char *)uint64_t v45 = *v46;
    uint64_t v61 = *(void **)(v45 + 8);
    *(void *)(v45 + 8) = *((void *)v46 + 1);

    __dst((char *)(v45 + v10[6]), &v46[v10[6]], v14);
    uint64_t v62 = v10[7];
    size_t v63 = (char *)(v45 + v62);
    uint64_t v64 = &v46[v62];
    int v65 = v19((char *)(v45 + v62), 1, v14);
    int v66 = v19(v64, 1, v14);
    if (v65)
    {
      if (!v66)
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v63, v64, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v63, 0, 1, v14);
LABEL_58:
        uint64_t v88 = (void (*)(uint64_t, char *, uint64_t))__dst;
        goto LABEL_59;
      }
    }
    else
    {
      if (!v66)
      {
        uint64_t v110 = v63;
        uint64_t v88 = (void (*)(uint64_t, char *, uint64_t))__dst;
        __dst(v110, v64, v14);
LABEL_59:
        v88(v45 + v10[8], &v46[v10[8]], v14);
        uint64_t v89 = v10[9];
        unint64_t v90 = (char *)(v45 + v89);
        uint64_t v91 = &v46[v89];
        int v92 = v19((char *)(v45 + v89), 1, v14);
        int v93 = v19(v91, 1, v14);
        if (v92)
        {
          if (!v93)
          {
            (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v90, v91, v14);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v90, 0, 1, v14);
LABEL_65:
            __int16 v95 = (void (*)(uint64_t, char *, uint64_t))__dst;
            goto LABEL_66;
          }
        }
        else
        {
          if (!v93)
          {
            uint64_t v111 = v90;
            __int16 v95 = (void (*)(uint64_t, char *, uint64_t))__dst;
            __dst(v111, v91, v14);
LABEL_66:
            v95(v45 + v10[10], &v46[v10[10]], v14);
            uint64_t v96 = v10[11];
            uint64_t v97 = (char *)(v45 + v96);
            id v98 = &v46[v96];
            int v99 = v19((char *)(v45 + v96), 1, v14);
            __srca = v98;
            int v100 = v19(v98, 1, v14);
            if (v99)
            {
              uint64_t v101 = v15;
              if (!v100)
              {
                (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v97, __srca, v14);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v97, 0, 1, v14);
LABEL_72:
                uint64_t v103 = (void (*)(uint64_t, char *, uint64_t))__dst;
LABEL_73:
                *(unsigned char *)(v45 + v10[12]) = v46[v10[12]];
                v103(v45 + v10[13], &v46[v10[13]], v14);
                uint64_t v104 = v10[14];
                v105 = (char *)(v45 + v104);
                uint64_t v106 = &v46[v104];
                int v107 = v19(v105, 1, v14);
                int v108 = v19(v106, 1, v14);
                if (v107)
                {
                  if (!v108)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v105, v106, v14);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v105, 0, 1, v14);
                    goto LABEL_54;
                  }
                }
                else
                {
                  if (!v108)
                  {
                    v103((uint64_t)v105, v106, v14);
                    goto LABEL_54;
                  }
                  (*(void (**)(char *, uint64_t))(v101 + 8))(v105, v14);
                }
                sub_1C29C5960(0);
                size_t v55 = *(void *)(*(void *)(v109 - 8) + 64);
                uint64_t v56 = v105;
                id v57 = v106;
                goto LABEL_35;
              }
            }
            else
            {
              uint64_t v101 = v15;
              if (!v100)
              {
                uint64_t v112 = v97;
                uint64_t v103 = (void (*)(uint64_t, char *, uint64_t))__dst;
                __dst(v112, __srca, v14);
                goto LABEL_73;
              }
              (*(void (**)(char *, uint64_t))(v15 + 8))(v97, v14);
            }
            sub_1C29C5960(0);
            memcpy(v97, __srca, *(void *)(*(void *)(v102 - 8) + 64));
            goto LABEL_72;
          }
          (*(void (**)(char *, uint64_t))(v15 + 8))(v90, v14);
        }
        sub_1C29C5960(0);
        memcpy(v90, v91, *(void *)(*(void *)(v94 - 8) + 64));
        goto LABEL_65;
      }
      (*(void (**)(char *, uint64_t))(v15 + 8))(v63, v14);
    }
    sub_1C29C5960(0);
    memcpy(v63, v64, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_58;
  }
  if (v49)
  {
LABEL_34:
    sub_1C29C592C(0);
    size_t v55 = *(void *)(*(void *)(v54 - 8) + 64);
    uint64_t v56 = (void *)v45;
    id v57 = v46;
LABEL_35:
    memcpy(v56, v57, v55);
    goto LABEL_54;
  }
  *(unsigned char *)uint64_t v45 = *v46;
  *(void *)(v45 + 8) = *((void *)v46 + 1);
  int v50 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
  v50(v45 + v10[6], &v46[v10[6]], v14);
  uint64_t v51 = v10[7];
  __dsta = (void *)(v45 + v51);
  uint64_t v52 = &v46[v51];
  if (v19(&v46[v51], 1, v14))
  {
    sub_1C29C5960(0);
    memcpy(__dsta, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    v50((uint64_t)__dsta, v52, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(__dsta, 0, 1, v14);
  }
  v50(v45 + v10[8], &v46[v10[8]], v14);
  uint64_t v67 = v10[9];
  id v68 = (void *)(v45 + v67);
  id v69 = &v46[v67];
  if (v19(&v46[v67], 1, v14))
  {
    sub_1C29C5960(0);
    memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    v50((uint64_t)v68, v69, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v68, 0, 1, v14);
  }
  v50(v45 + v10[10], &v46[v10[10]], v14);
  uint64_t v71 = v10[11];
  uint64_t v72 = (void *)(v45 + v71);
  uint64_t v73 = &v46[v71];
  if (v19(&v46[v71], 1, v14))
  {
    sub_1C29C5960(0);
    memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
  }
  else
  {
    v50((uint64_t)v72, v73, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v72, 0, 1, v14);
  }
  *(unsigned char *)(v45 + v10[12]) = v46[v10[12]];
  v50(v45 + v10[13], &v46[v10[13]], v14);
  uint64_t v75 = v10[14];
  int v76 = (void *)(v45 + v75);
  uint64_t v77 = &v46[v75];
  if (v19(v77, 1, v14))
  {
    sub_1C29C5960(0);
    memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
  }
  else
  {
    v50((uint64_t)v76, v77, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v76, 0, 1, v14);
  }
  ((void (*)(uint64_t, void, uint64_t, int *))__src[7])(v45, 0, 1, v10);
LABEL_54:
  uint64_t v79 = v115[7];
  uint64_t v80 = *(void **)&v117[v79];
  *(void *)&v117[v79] = *(void *)((char *)v116 + v79);

  uint64_t v81 = v115[8];
  uint64_t v82 = *(void **)&v117[v81];
  *(void *)&v117[v81] = *(void *)((char *)v116 + v81);

  uint64_t v83 = v115[9];
  uint64_t v84 = &v117[v83];
  uint64_t v85 = (char *)v116 + v83;
  *(void *)uint64_t v84 = *(void *)v85;
  v84[8] = v85[8];
  return v117;
}

uint64_t getEnumTagSinglePayload for ActivitySnidgetCurrentValueVisualizationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29CB984);
}

uint64_t sub_1C29CB984(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  sub_1C29C592C(0);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[7]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySnidgetCurrentValueVisualizationView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29CBAA8);
}

void sub_1C29CBAA8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    sub_1C29C592C(0);
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[7]) = (a2 - 1);
      return;
    }
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
  }
  unint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v13(a1 + v11, a2, a2, v9);
}

void sub_1C29CBBB4()
{
  type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_1C29C592C(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

char *initializeBufferWithCopyOfBuffer for ActivitySnidgetCurrentValueVisualizationView.ViewModel(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = (void *)*((void *)a2 + 1);
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[6];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_1C2A9C4F8();
    uint64_t v12 = *(void *)(v11 - 8);
    unint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    id v14 = v7;
    v13(v9, v10, v11);
    uint64_t v15 = a3[7];
    uint64_t v16 = &v4[v15];
    uint64_t v17 = &a2[v15];
    int v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v35(&a2[v15], 1, v11))
    {
      sub_1C29C5960(0);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v13(v16, v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    v13(&v4[a3[8]], &a2[a3[8]], v11);
    uint64_t v20 = a3[9];
    int v21 = &v4[v20];
    uint64_t v22 = &a2[v20];
    if (v35(&a2[v20], 1, v11))
    {
      sub_1C29C5960(0);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      v13(v21, v22, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
    }
    v13(&v4[a3[10]], &a2[a3[10]], v11);
    uint64_t v24 = a3[11];
    uint64_t v25 = &v4[v24];
    uint64_t v26 = &a2[v24];
    if (v35(&a2[v24], 1, v11))
    {
      sub_1C29C5960(0);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      uint64_t v28 = v12;
    }
    else
    {
      v13(v25, v26, v11);
      uint64_t v28 = v12;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
    }
    uint64_t v29 = a3[13];
    v4[a3[12]] = a2[a3[12]];
    v13(&v4[v29], &a2[v29], v11);
    uint64_t v30 = a3[14];
    uint64_t v31 = &v4[v30];
    uint64_t v32 = &a2[v30];
    if (v35(v32, 1, v11))
    {
      sub_1C29C5960(0);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      v13(v31, v32, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v31, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t destroy for ActivitySnidgetCurrentValueVisualizationView.ViewModel(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_1C2A9C4F8();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v13 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v13(v4, v5);
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v8(v7, 1, v5)) {
    v13(v7, v5);
  }
  v13(a1 + a2[8], v5);
  uint64_t v9 = a1 + a2[9];
  if (!v8(v9, 1, v5)) {
    v13(v9, v5);
  }
  v13(a1 + a2[10], v5);
  uint64_t v10 = a1 + a2[11];
  if (!v8(v10, 1, v5)) {
    v13(v10, v5);
  }
  v13(a1 + a2[13], v5);
  uint64_t v11 = a1 + a2[14];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v11, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v13)(v11, v5);
  }
  return result;
}

uint64_t initializeWithCopy for ActivitySnidgetCurrentValueVisualizationView.ViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1C2A9C4F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  id v13 = v6;
  v12(v8, v9, v10);
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v33 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v33((const void *)(a2 + v14), 1, v10))
  {
    sub_1C29C5960(0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v12(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  v12((void *)(a1 + a3[8]), (const void *)(a2 + a3[8]), v10);
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  if (v33((const void *)(a2 + v18), 1, v10))
  {
    sub_1C29C5960(0);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v12(v19, v20, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  v12((void *)(a1 + a3[10]), (const void *)(a2 + a3[10]), v10);
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  if (v33((const void *)(a2 + v22), 1, v10))
  {
    sub_1C29C5960(0);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    uint64_t v26 = v11;
  }
  else
  {
    v12(v23, v24, v10);
    uint64_t v26 = v11;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
  }
  uint64_t v27 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  v12((void *)(a1 + v27), (const void *)(a2 + v27), v10);
  uint64_t v28 = a3[14];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  if (v33(v30, 1, v10))
  {
    sub_1C29C5960(0);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v12(v29, v30, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v29, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for ActivitySnidgetCurrentValueVisualizationView.ViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v6;
  id v8 = v6;

  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1C2A9C4F8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24);
  v46(v10, v11, v12);
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  int v18 = v17(a1 + v14, 1, v12);
  int v19 = v17((uint64_t)v16, 1, v12);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v15, v16, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v12);
LABEL_7:
      uint64_t v21 = v46;
      goto LABEL_8;
    }
LABEL_6:
    sub_1C29C5960(0);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
    goto LABEL_6;
  }
  uint64_t v43 = (uint64_t)v15;
  uint64_t v21 = v46;
  v46(v43, (uint64_t)v16, v12);
LABEL_8:
  v21(a1 + a3[8], a2 + a3[8], v12);
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  int v25 = v17(a1 + v22, 1, v12);
  int v26 = v17((uint64_t)v24, 1, v12);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v23, v24, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v23, 0, 1, v12);
LABEL_14:
      uint64_t v28 = v46;
      goto LABEL_15;
    }
LABEL_13:
    sub_1C29C5960(0);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_14;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v23, v12);
    goto LABEL_13;
  }
  uint64_t v44 = (uint64_t)v23;
  uint64_t v28 = v46;
  v46(v44, (uint64_t)v24, v12);
LABEL_15:
  v28(a1 + a3[10], a2 + a3[10], v12);
  uint64_t v29 = a3[11];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (const void *)(a2 + v29);
  int v32 = v17(a1 + v29, 1, v12);
  int v33 = v17((uint64_t)v31, 1, v12);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v30, v31, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v30, 0, 1, v12);
LABEL_21:
      int v35 = v46;
      goto LABEL_22;
    }
LABEL_20:
    sub_1C29C5960(0);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_21;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v30, v12);
    goto LABEL_20;
  }
  uint64_t v45 = (uint64_t)v31;
  int v35 = v46;
  v46((uint64_t)v30, v45, v12);
LABEL_22:
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  v35(a1 + a3[13], a2 + a3[13], v12);
  uint64_t v36 = a3[14];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (const void *)(a2 + v36);
  int v39 = v17(a1 + v36, 1, v12);
  int v40 = v17((uint64_t)v38, 1, v12);
  if (!v39)
  {
    if (!v40)
    {
      v35((uint64_t)v37, (uint64_t)v38, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v37, v12);
    goto LABEL_27;
  }
  if (v40)
  {
LABEL_27:
    sub_1C29C5960(0);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v37, v38, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v37, 0, 1, v12);
  return a1;
}

uint64_t initializeWithTake for ActivitySnidgetCurrentValueVisualizationView.ViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1C2A9C4F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v31 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v31((const void *)(a2 + v12), 1, v9))
  {
    sub_1C29C5960(0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v11((void *)(a1 + a3[8]), (const void *)(a2 + a3[8]), v9);
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)(a1 + v16);
  int v18 = (const void *)(a2 + v16);
  if (v31((const void *)(a2 + v16), 1, v9))
  {
    sub_1C29C5960(0);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v11(v17, v18, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
  }
  v11((void *)(a1 + a3[10]), (const void *)(a2 + a3[10]), v9);
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  if (v31((const void *)(a2 + v20), 1, v9))
  {
    sub_1C29C5960(0);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    uint64_t v24 = v10;
  }
  else
  {
    v11(v21, v22, v9);
    uint64_t v24 = v10;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v21, 0, 1, v9);
  }
  uint64_t v25 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  v11((void *)(a1 + v25), (const void *)(a2 + v25), v9);
  uint64_t v26 = a3[14];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  if (v31(v28, 1, v9))
  {
    sub_1C29C5960(0);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    v11(v27, v28, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v27, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithTake for ActivitySnidgetCurrentValueVisualizationView.ViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C2A9C4F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40);
  v45(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  int v16 = v15(a1 + v12, 1, v10);
  int v17 = v15((uint64_t)v14, 1, v10);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v13, v14, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
LABEL_7:
      uint64_t v19 = v45;
      goto LABEL_8;
    }
LABEL_6:
    sub_1C29C5960(0);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_6;
  }
  uint64_t v42 = (uint64_t)v13;
  uint64_t v19 = v45;
  v45(v42, (uint64_t)v14, v10);
LABEL_8:
  v19(a1 + a3[8], a2 + a3[8], v10);
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  int v23 = v15(a1 + v20, 1, v10);
  int v24 = v15((uint64_t)v22, 1, v10);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v21, v22, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0, 1, v10);
LABEL_14:
      uint64_t v26 = v45;
      goto LABEL_15;
    }
LABEL_13:
    sub_1C29C5960(0);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_14;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v21, v10);
    goto LABEL_13;
  }
  uint64_t v43 = (uint64_t)v21;
  uint64_t v26 = v45;
  v45(v43, (uint64_t)v22, v10);
LABEL_15:
  v26(a1 + a3[10], a2 + a3[10], v10);
  uint64_t v27 = a3[11];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (const void *)(a2 + v27);
  int v30 = v15(a1 + v27, 1, v10);
  int v31 = v15((uint64_t)v29, 1, v10);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v28, v29, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v28, 0, 1, v10);
LABEL_21:
      int v33 = v45;
      goto LABEL_22;
    }
LABEL_20:
    sub_1C29C5960(0);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_21;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v28, v10);
    goto LABEL_20;
  }
  uint64_t v44 = (uint64_t)v29;
  int v33 = v45;
  v45((uint64_t)v28, v44, v10);
LABEL_22:
  uint64_t v34 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  v33(a1 + v34, a2 + v34, v10);
  uint64_t v35 = a3[14];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  int v38 = v15(a1 + v35, 1, v10);
  int v39 = v15((uint64_t)v37, 1, v10);
  if (!v38)
  {
    if (!v39)
    {
      v33((uint64_t)v36, (uint64_t)v37, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v36, v10);
    goto LABEL_27;
  }
  if (v39)
  {
LABEL_27:
    sub_1C29C5960(0);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v36, v37, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySnidgetCurrentValueVisualizationView.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29CD3F4);
}

uint64_t sub_1C29CD3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C2A9C4F8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_1C29C5960(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ActivitySnidgetCurrentValueVisualizationView.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29CD534);
}

uint64_t sub_1C29CD534(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1C2A9C4F8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_1C29C5960(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1C29CD660()
{
  sub_1C2A9C4F8();
  if (v0 <= 0x3F)
  {
    sub_1C29C5960(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_1C29CD758()
{
  unint64_t result = qword_1EBB8FCC8;
  if (!qword_1EBB8FCC8)
  {
    sub_1C29C5904(255);
    sub_1C29C5640();
    sub_1C29C71F0(&qword_1EBB8FD30, (void (*)(uint64_t))sub_1C29C5640);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8FCC8);
  }
  return result;
}

unint64_t sub_1C29CD834()
{
  unint64_t result = qword_1EBB900F8;
  if (!qword_1EBB900F8)
  {
    sub_1C29CE710(255, &qword_1EBB90100, (uint64_t (*)(uint64_t))sub_1C29C6A18, (uint64_t (*)(uint64_t))sub_1C29C5B60, MEMORY[0x1E4F3D750]);
    sub_1C29C71F0(&qword_1EBB90150, (void (*)(uint64_t))sub_1C29C6A18);
    sub_1C29C71F0(&qword_1EBB90098, (void (*)(uint64_t))sub_1C29C5B60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB900F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ActivitySnidgetCurrentValueVisualizationView.ViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C29CDA1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySnidgetCurrentValueVisualizationView.ViewModel.CodingKeys()
{
  return &type metadata for ActivitySnidgetCurrentValueVisualizationView.ViewModel.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ActivitySummarySnidgetView.ActionHandlerData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C29CDAF0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySummarySnidgetView.ActionHandlerData.CodingKeys()
{
  return &type metadata for ActivitySummarySnidgetView.ActionHandlerData.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ActivitySummarySnidgetView.ViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C29CDBF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySummarySnidgetView.ViewModel.CodingKeys()
{
  return &type metadata for ActivitySummarySnidgetView.ViewModel.CodingKeys;
}

unint64_t sub_1C29CDC30()
{
  unint64_t result = qword_1EA31E638;
  if (!qword_1EA31E638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E638);
  }
  return result;
}

unint64_t sub_1C29CDC88()
{
  unint64_t result = qword_1EA31E640;
  if (!qword_1EA31E640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E640);
  }
  return result;
}

unint64_t sub_1C29CDCE0()
{
  unint64_t result = qword_1EA31E648;
  if (!qword_1EA31E648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E648);
  }
  return result;
}

unint64_t sub_1C29CDD38()
{
  unint64_t result = qword_1EBB91468;
  if (!qword_1EBB91468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91468);
  }
  return result;
}

unint64_t sub_1C29CDD90()
{
  unint64_t result = qword_1EBB91460;
  if (!qword_1EBB91460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91460);
  }
  return result;
}

unint64_t sub_1C29CDDE8()
{
  unint64_t result = qword_1EBB917F0;
  if (!qword_1EBB917F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB917F0);
  }
  return result;
}

unint64_t sub_1C29CDE40()
{
  unint64_t result = qword_1EBB917E8;
  if (!qword_1EBB917E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB917E8);
  }
  return result;
}

unint64_t sub_1C29CDE98()
{
  unint64_t result = qword_1EBB91690;
  if (!qword_1EBB91690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91690);
  }
  return result;
}

unint64_t sub_1C29CDEF0()
{
  unint64_t result = qword_1EBB91688;
  if (!qword_1EBB91688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91688);
  }
  return result;
}

uint64_t sub_1C29CDF44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F4D726564616568 && a2 == 0xEB000000006C6564;
  if (v2 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C2AB84E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C29CE04C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001C2AB8550)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1C29CE0D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x695265766F4D7369 && a2 == 0xEE00796C6E4F676ELL;
  if (v2 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7974697669746361 && a2 == 0xEF7972616D6D7553 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C74695465766F6DLL && a2 == 0xE900000000000065 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x756C615665766F6DLL && a2 == 0xE900000000000065 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6573696372657865 && a2 == 0xED0000656C746954 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6573696372657865 && a2 == 0xED000065756C6156 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746954646E617473 && a2 == 0xEA0000000000656CLL || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6C6156646E617473 && a2 == 0xEA00000000006575 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C2AB85C0 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C2AB85E0 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C2AB8600)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

unint64_t sub_1C29CE5C8()
{
  unint64_t result = qword_1EA31E658;
  if (!qword_1EA31E658)
  {
    sub_1C29C6D14(255, &qword_1EBB900C0, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3CE30], MEMORY[0x1E4F3CC10]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E658);
  }
  return result;
}

void sub_1C29CE664()
{
  if (!qword_1EBB900B0)
  {
    sub_1C29CE710(255, &qword_1EBB90110, (uint64_t (*)(uint64_t))sub_1C29C60FC, (uint64_t (*)(uint64_t))sub_1C29C6198, MEMORY[0x1E4F3D750]);
    unint64_t v0 = sub_1C2A9D578();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB900B0);
    }
  }
}

void sub_1C29CE710(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_1C29CE794(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2A9D578();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C29CE800(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C29CE868(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C29CE8D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C29CE930(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t dispatch thunk of RecoverableInforming.isRecoverable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HealthStoreProviding.healthStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t SignificantChange.baseline.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C29D1984(v1, a1, type metadata accessor for SignificantChange.Period);
}

uint64_t type metadata accessor for SignificantChange.Period(uint64_t a1)
{
  return sub_1C296F4B8(a1, qword_1EBB8EA20);
}

uint64_t SignificantChange.changes.getter()
{
  type metadata accessor for SignificantChange(0);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SignificantChange(uint64_t a1)
{
  return sub_1C296F4B8(a1, qword_1EBB8EAC8);
}

uint64_t SignificantChange.init(baseline:changes:notification:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C29D44B0(a1, a4, type metadata accessor for SignificantChange.Period);
  uint64_t v7 = type metadata accessor for SignificantChange(0);
  *(void *)(a4 + *(int *)(v7 + 20)) = a2;
  uint64_t v8 = a4 + *(int *)(v7 + 24);
  return sub_1C29CEAE0(a3, v8);
}

uint64_t sub_1C29CEAE0(uint64_t a1, uint64_t a2)
{
  sub_1C29D17F8(0, &qword_1EBB8E980, type metadata accessor for SignificantChange.Notification, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SignificantChange.Notification(uint64_t a1)
{
  return sub_1C296F4B8(a1, qword_1EBB8E940);
}

uint64_t SignificantChange.Period.period.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C2A9C398();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

double SignificantChange.Period.value.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for SignificantChange.Period(0) + 20));
}

double SignificantChange.Period.frequency.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for SignificantChange.Period(0) + 24));
}

uint64_t SignificantChange.Period.change.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SignificantChange.Period(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

int *SignificantChange.Period.init(period:value:frequency:change:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  char v9 = *a2;
  uint64_t v10 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a3, a1, v10);
  uint64_t result = (int *)type metadata accessor for SignificantChange.Period(0);
  *(double *)(a3 + result[5]) = a4;
  *(double *)(a3 + result[6]) = a5;
  *(unsigned char *)(a3 + result[7]) = v9;
  return result;
}

HealthVisualization::SignificantChange::Period::ChangeType_optional __swiftcall SignificantChange.Period.ChangeType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  uint64_t v3 = sub_1C2A9E6E8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t SignificantChange.Period.ChangeType.rawValue.getter()
{
  if (*v0) {
    return 0x6973616572636564;
  }
  else {
    return 0x6973616572636E69;
  }
}

uint64_t sub_1C29CEDA4()
{
  return sub_1C2A9E9E8();
}

uint64_t sub_1C29CEE18()
{
  sub_1C2A9DD78();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C29CEE70()
{
  return sub_1C2A9E9E8();
}

uint64_t sub_1C29CEEE0(char *a1, char *a2)
{
  return sub_1C295615C(*a1, *a2);
}

uint64_t sub_1C29CEEEC()
{
  return sub_1C2A9DE58();
}

uint64_t sub_1C29CEF4C()
{
  return sub_1C2A9DE38();
}

HealthVisualization::SignificantChange::Period::ChangeType_optional sub_1C29CEF9C(Swift::String *a1)
{
  return SignificantChange.Period.ChangeType.init(rawValue:)(*a1);
}

void sub_1C29CEFA8(uint64_t *a1@<X8>)
{
  if (*v1) {
    uint64_t v2 = 0x6973616572636564;
  }
  else {
    uint64_t v2 = 0x6973616572636E69;
  }
  *a1 = v2;
  a1[1] = 0xEA0000000000676ELL;
}

uint64_t sub_1C29CEFDC()
{
  uint64_t result = 0x646F69726570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65756C6176;
      break;
    case 2:
      uint64_t result = 0x636E657571657266;
      break;
    case 3:
      uint64_t result = 0x65676E616863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C29CF060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C29D1398(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C29CF088(uint64_t a1)
{
  unint64_t v2 = sub_1C29D0E2C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C29CF0C4(uint64_t a1)
{
  unint64_t v2 = sub_1C29D0E2C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SignificantChange.Period.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C29D185C(0, &qword_1EBB8F938, (uint64_t (*)(void))sub_1C29D0E2C, (uint64_t)&type metadata for SignificantChange.Period.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C29D0E2C();
  sub_1C2A9EA18();
  char v17 = 0;
  sub_1C2A9C398();
  sub_1C29D0ED4(&qword_1EBB8E848, MEMORY[0x1E4F26E60]);
  sub_1C2A9E868();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for SignificantChange.Period(0);
    char v16 = 1;
    sub_1C2A9E848();
    char v15 = 2;
    sub_1C2A9E848();
    char v14 = *(unsigned char *)(v3 + *(int *)(v10 + 28));
    char v13 = 3;
    sub_1C29D0E80();
    sub_1C2A9E818();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t SignificantChange.Period.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = sub_1C2A9C398();
  uint64_t v21 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  int v23 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29D185C(0, &qword_1EBB8F8D8, (uint64_t (*)(void))sub_1C29D0E2C, (uint64_t)&type metadata for SignificantChange.Period.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v25 = v5;
  uint64_t v20 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v8 = (int *)type metadata accessor for SignificantChange.Period(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C29D0E2C();
  int v24 = v7;
  uint64_t v11 = v26;
  sub_1C2A9EA08();
  if (v11) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = v20;
  uint64_t v12 = v21;
  uint64_t v14 = (uint64_t)v10;
  uint64_t v15 = v22;
  char v31 = 0;
  sub_1C29D0ED4(&qword_1EBB8E850, MEMORY[0x1E4F26E60]);
  sub_1C2A9E7A8();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v14, v23, v3);
  char v30 = 1;
  sub_1C2A9E788();
  *(void *)(v14 + v8[5]) = v16;
  char v29 = 2;
  sub_1C2A9E788();
  *(void *)(v14 + v8[6]) = v17;
  char v27 = 3;
  sub_1C29D0F1C();
  sub_1C2A9E758();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v24, v25);
  *(unsigned char *)(v14 + v8[7]) = v28;
  sub_1C29D1984(v14, v15, type metadata accessor for SignificantChange.Period);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1C29D4450(v14, type metadata accessor for SignificantChange.Period);
}

uint64_t sub_1C29CF740@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SignificantChange.Period.init(from:)(a1, a2);
}

uint64_t sub_1C29CF758(void *a1)
{
  return SignificantChange.Period.encode(to:)(a1);
}

uint64_t SignificantChange.Notification.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SignificantChange.Notification.significant.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SignificantChange.Notification.detectionDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SignificantChange.Notification(0) + 24);
  uint64_t v4 = sub_1C2A9C6E8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t SignificantChange.Notification.originalEventDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SignificantChange.Notification(0) + 28);
  uint64_t v4 = sub_1C2A9C6E8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t SignificantChange.Notification.init(identifier:significant:detectionDate:originalEventDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = a3;
  uint64_t v9 = type metadata accessor for SignificantChange.Notification(0);
  uint64_t v10 = a6 + *(int *)(v9 + 24);
  uint64_t v11 = sub_1C2A9C6E8();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))v14)((void *)(v11 - 8), v10, a4, v11);
  uint64_t v12 = a6 + *(int *)(v9 + 28);
  return v14(v12, a5, v11);
}

uint64_t SignificantChange.Notification.with(significant:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  char v4 = a1 & 1;
  if (*(unsigned char *)(v2 + 16) == (a1 & 1)) {
    return sub_1C29D1984(v2, a2, type metadata accessor for SignificantChange.Notification);
  }
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v13 = *(void *)v2;
  uint64_t v6 = type metadata accessor for SignificantChange.Notification(0);
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = v2 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C2A9C6E8();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v9, v8, v10);
  v11(a2 + *(int *)(v6 + 28), v2 + *(int *)(v6 + 28), v10);
  *(void *)a2 = v13;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v4;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C29CFAA4()
{
  unint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x636966696E676973;
      break;
    case 2:
      unint64_t result = 0x6F69746365746564;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C29CFB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C29D3F6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C29CFB78(uint64_t a1)
{
  unint64_t v2 = sub_1C29D16BC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C29CFBB4(uint64_t a1)
{
  unint64_t v2 = sub_1C29D16BC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SignificantChange.Notification.encode(to:)(void *a1)
{
  sub_1C29D185C(0, &qword_1EBB8F930, (uint64_t (*)(void))sub_1C29D16BC, (uint64_t)&type metadata for SignificantChange.Notification.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C29D16BC();
  sub_1C2A9EA18();
  char v13 = 0;
  sub_1C2A9E828();
  if (!v1)
  {
    char v12 = 1;
    sub_1C2A9E838();
    type metadata accessor for SignificantChange.Notification(0);
    char v11 = 2;
    sub_1C2A9C6E8();
    sub_1C29D0ED4(&qword_1EBB91C18, MEMORY[0x1E4F27928]);
    sub_1C2A9E868();
    char v10 = 3;
    sub_1C2A9E868();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SignificantChange.Notification.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = sub_1C2A9C6E8();
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v26 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v23 - v6;
  sub_1C29D185C(0, &qword_1EBB8F8D0, (uint64_t (*)(void))sub_1C29D16BC, (uint64_t)&type metadata for SignificantChange.Notification.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v31 = v8;
  uint64_t v27 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v23 - v9;
  uint64_t v11 = type metadata accessor for SignificantChange.Notification(0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C29D16BC();
  char v30 = v10;
  uint64_t v14 = v32;
  sub_1C2A9EA08();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v16 = v27;
  uint64_t v15 = v28;
  uint64_t v17 = v29;
  char v36 = 0;
  *(void *)char v13 = sub_1C2A9E768();
  *((void *)v13 + 1) = v18;
  char v35 = 1;
  v13[16] = sub_1C2A9E778() & 1;
  char v34 = 2;
  uint64_t v19 = sub_1C29D0ED4(&qword_1EBB927B8, MEMORY[0x1E4F27928]);
  int v24 = (void (*)(void, void, void))v7;
  uint64_t v32 = v19;
  sub_1C2A9E7A8();
  uint64_t v20 = &v13[*(int *)(v11 + 24)];
  uint64_t v21 = v24;
  int v24 = *(void (**)(void, void, void))(v15 + 32);
  v24(v20, v21, v17);
  char v33 = 3;
  sub_1C2A9E7A8();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v30, v31);
  v24(&v13[*(int *)(v11 + 28)], v26, v17);
  sub_1C29D1984((uint64_t)v13, v25, type metadata accessor for SignificantChange.Notification);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1C29D4450((uint64_t)v13, type metadata accessor for SignificantChange.Notification);
}

uint64_t sub_1C29D02B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SignificantChange.Notification.init(from:)(a1, a2);
}

uint64_t sub_1C29D02C8(void *a1)
{
  return SignificantChange.Notification.encode(to:)(a1);
}

uint64_t SignificantChange.notification.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SignificantChange(0) + 24);
  return sub_1C29D1710(v3, a1);
}

uint64_t sub_1C29D0328()
{
  uint64_t v1 = 0x7365676E616863;
  if (*v0 != 1) {
    uint64_t v1 = 0x6163696669746F6ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656E696C65736162;
  }
}

uint64_t sub_1C29D038C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C29D416C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C29D03B4(uint64_t a1)
{
  unint64_t v2 = sub_1C29D17A4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C29D03F0(uint64_t a1)
{
  unint64_t v2 = sub_1C29D17A4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SignificantChange.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C29D185C(0, &qword_1EBB8F928, (uint64_t (*)(void))sub_1C29D17A4, (uint64_t)&type metadata for SignificantChange.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C29D17A4();
  sub_1C2A9EA18();
  char v14 = 0;
  type metadata accessor for SignificantChange.Period(0);
  sub_1C29D0ED4(&qword_1EBB8EA10, (void (*)(uint64_t))type metadata accessor for SignificantChange.Period);
  sub_1C2A9E868();
  if (!v2)
  {
    v11[1] = *(void *)(v3 + *(int *)(type metadata accessor for SignificantChange(0) + 20));
    char v13 = 1;
    sub_1C29D17F8(0, &qword_1EBB8F7B0, type metadata accessor for SignificantChange.Period, MEMORY[0x1E4FBB320]);
    sub_1C29D18C4(&qword_1EBB8F7B8, &qword_1EBB8EA10);
    sub_1C2A9E868();
    char v12 = 2;
    type metadata accessor for SignificantChange.Notification(0);
    sub_1C29D0ED4(&qword_1EBB8E930, (void (*)(uint64_t))type metadata accessor for SignificantChange.Notification);
    sub_1C2A9E818();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t SignificantChange.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  sub_1C29D17F8(0, &qword_1EBB8E980, type metadata accessor for SignificantChange.Notification, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - v4;
  uint64_t v24 = type metadata accessor for SignificantChange.Period(0);
  MEMORY[0x1F4188790](v24);
  uint64_t v25 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29D185C(0, &qword_1EBB8F8C8, (uint64_t (*)(void))sub_1C29D17A4, (uint64_t)&type metadata for SignificantChange.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v26 = v7;
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = type metadata accessor for SignificantChange(0);
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C29D17A4();
  uint64_t v27 = v9;
  uint64_t v13 = v28;
  sub_1C2A9EA08();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v14 = v23;
  uint64_t v28 = v10;
  uint64_t v15 = (uint64_t)v12;
  uint64_t v16 = (uint64_t)a1;
  char v32 = 0;
  sub_1C29D0ED4(&qword_1EBB8EA18, (void (*)(uint64_t))type metadata accessor for SignificantChange.Period);
  uint64_t v17 = (uint64_t)v25;
  uint64_t v18 = v26;
  sub_1C2A9E7A8();
  sub_1C29D44B0(v17, v15, type metadata accessor for SignificantChange.Period);
  sub_1C29D17F8(0, &qword_1EBB8F7B0, type metadata accessor for SignificantChange.Period, MEMORY[0x1E4FBB320]);
  char v31 = 1;
  sub_1C29D18C4(&qword_1EBB8F7C0, &qword_1EBB8EA18);
  sub_1C2A9E7A8();
  uint64_t v19 = v28;
  *(void *)(v15 + *(int *)(v28 + 20)) = v29;
  type metadata accessor for SignificantChange.Notification(0);
  char v30 = 2;
  sub_1C29D0ED4(&qword_1EBB8E938, (void (*)(uint64_t))type metadata accessor for SignificantChange.Notification);
  uint64_t v25 = (char *)v15;
  sub_1C2A9E758();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v27, v18);
  uint64_t v20 = (uint64_t)v25;
  sub_1C29CEAE0((uint64_t)v5, (uint64_t)&v25[*(int *)(v19 + 24)]);
  sub_1C29D1984(v20, v22, type metadata accessor for SignificantChange);
  __swift_destroy_boxed_opaque_existential_1(v16);
  return sub_1C29D4450(v20, type metadata accessor for SignificantChange);
}

uint64_t sub_1C29D0C48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SignificantChange.init(from:)(a1, a2);
}

uint64_t sub_1C29D0C60(void *a1)
{
  return SignificantChange.encode(to:)(a1);
}

uint64_t _s19HealthVisualization17SignificantChangeV12NotificationV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v4 && (sub_1C2A9E8D8() & 1) == 0) {
    return 0;
  }
  if (*(unsigned __int8 *)(a1 + 16) != *(unsigned __int8 *)(a2 + 16)) {
    return 0;
  }
  type metadata accessor for SignificantChange.Notification(0);
  if ((sub_1C2A9C698() & 1) == 0) {
    return 0;
  }
  return sub_1C2A9C698();
}

uint64_t _s19HealthVisualization17SignificantChangeV6PeriodV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (sub_1C2A9C328())
  {
    BOOL v4 = (int *)type metadata accessor for SignificantChange.Period(0);
    if (*(double *)(a1 + v4[5]) == *(double *)(a2 + v4[5]) && *(double *)(a1 + v4[6]) == *(double *)(a2 + v4[6]))
    {
      uint64_t v5 = v4[7];
      int v6 = *(unsigned __int8 *)(a1 + v5);
      int v7 = *(unsigned __int8 *)(a2 + v5);
      if (v6 == 2)
      {
        if (v7 == 2) {
          return 1;
        }
      }
      else if (v7 != 2)
      {
        if (v6) {
          uint64_t v8 = 0x6973616572636564;
        }
        else {
          uint64_t v8 = 0x6973616572636E69;
        }
        if (v7) {
          uint64_t v9 = 0x6973616572636564;
        }
        else {
          uint64_t v9 = 0x6973616572636E69;
        }
        if (v8 == v9)
        {
          swift_bridgeObjectRelease_n();
          return 1;
        }
        char v11 = sub_1C2A9E8D8();
        swift_bridgeObjectRelease_n();
        if (v11) {
          return 1;
        }
      }
    }
  }
  return 0;
}

unint64_t sub_1C29D0E2C()
{
  unint64_t result = qword_1EBB8E9F8;
  if (!qword_1EBB8E9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E9F8);
  }
  return result;
}

unint64_t sub_1C29D0E80()
{
  unint64_t result = qword_1EBB8E9E0;
  if (!qword_1EBB8E9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E9E0);
  }
  return result;
}

uint64_t sub_1C29D0ED4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C29D0F1C()
{
  unint64_t result = qword_1EBB8E9F0;
  if (!qword_1EBB8E9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E9F0);
  }
  return result;
}

uint64_t _s19HealthVisualization17SignificantChangeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SignificantChange.Notification(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29D4330();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29D17F8(0, &qword_1EBB8E980, type metadata accessor for SignificantChange.Notification, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v28 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v28 - v19;
  if ((_s19HealthVisualization17SignificantChangeV6PeriodV2eeoiySbAE_AEtFZ_0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v29 = v7;
  uint64_t v21 = type metadata accessor for SignificantChange(0);
  if ((sub_1C2963DDC(*(void *)(a1 + *(int *)(v21 + 20)), *(void *)(a2 + *(int *)(v21 + 20))) & 1) == 0) {
    return 0;
  }
  sub_1C29D1710(a1 + *(int *)(v21 + 24), (uint64_t)v20);
  sub_1C29D1710(a2 + *(int *)(v21 + 24), (uint64_t)v17);
  uint64_t v22 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1C29D1710((uint64_t)v20, (uint64_t)v11);
  sub_1C29D1710((uint64_t)v17, v22);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v11, 1, v4) == 1)
  {
    sub_1C29D43C4((uint64_t)v17);
    sub_1C29D43C4((uint64_t)v20);
    if (v23(v22, 1, v4) == 1)
    {
      sub_1C29D43C4((uint64_t)v11);
      return 1;
    }
    goto LABEL_8;
  }
  sub_1C29D1710((uint64_t)v11, (uint64_t)v14);
  if (v23(v22, 1, v4) == 1)
  {
    sub_1C29D43C4((uint64_t)v17);
    sub_1C29D43C4((uint64_t)v20);
    sub_1C29D4450((uint64_t)v14, type metadata accessor for SignificantChange.Notification);
LABEL_8:
    sub_1C29D4450((uint64_t)v11, (uint64_t (*)(void))sub_1C29D4330);
    return 0;
  }
  uint64_t v25 = (uint64_t)v29;
  sub_1C29D44B0(v22, (uint64_t)v29, type metadata accessor for SignificantChange.Notification);
  BOOL v26 = *(void *)v14 == *(void *)v25 && *((void *)v14 + 1) == *(void *)(v25 + 8);
  if (v26 || (sub_1C2A9E8D8()) && v14[16] == *(unsigned char *)(v25 + 16) && (sub_1C2A9C698())
  {
    char v27 = sub_1C2A9C698();
    sub_1C29D4450(v25, type metadata accessor for SignificantChange.Notification);
    sub_1C29D43C4((uint64_t)v17);
    sub_1C29D43C4((uint64_t)v20);
    sub_1C29D4450((uint64_t)v14, type metadata accessor for SignificantChange.Notification);
    sub_1C29D43C4((uint64_t)v11);
    if (v27) {
      return 1;
    }
  }
  else
  {
    sub_1C29D4450(v25, type metadata accessor for SignificantChange.Notification);
    sub_1C29D43C4((uint64_t)v17);
    sub_1C29D43C4((uint64_t)v20);
    sub_1C29D4450((uint64_t)v14, type metadata accessor for SignificantChange.Notification);
    sub_1C29D43C4((uint64_t)v11);
  }
  return 0;
}

uint64_t sub_1C29D1398(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x646F69726570 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x636E657571657266 && a2 == 0xE900000000000079 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65676E616863 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t _s19HealthVisualization17SignificantChangeV12NotificationV10identifier9eventDate9directionSS10Foundation0H0V_AC6PeriodV0D4TypeOtFZ_0()
{
  uint64_t v0 = sub_1C2A9C638();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A9C288();
  sub_1C29D0ED4(&qword_1EA31E6A0, MEMORY[0x1E4F278A8]);
  sub_1C2A9C6C8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C2A9DDB8();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_1C29D16BC()
{
  unint64_t result = qword_1EBB8E918;
  if (!qword_1EBB8E918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E918);
  }
  return result;
}

uint64_t sub_1C29D1710(uint64_t a1, uint64_t a2)
{
  sub_1C29D17F8(0, &qword_1EBB8E980, type metadata accessor for SignificantChange.Notification, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C29D17A4()
{
  unint64_t result = qword_1EBB8E900;
  if (!qword_1EBB8E900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E900);
  }
  return result;
}

void sub_1C29D17F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C29D185C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C29D18C4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C29D17F8(255, &qword_1EBB8F7B0, type metadata accessor for SignificantChange.Period, MEMORY[0x1E4FBB320]);
    sub_1C29D0ED4(a2, (void (*)(uint64_t))type metadata accessor for SignificantChange.Period);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C29D1984(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C29D19F0()
{
  unint64_t result = qword_1EA31E678;
  if (!qword_1EA31E678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E678);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SignificantChange(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2A9C398();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    unint64_t v8 = (int *)type metadata accessor for SignificantChange.Period(0);
    *(void *)((char *)a1 + v8[5]) = *(void *)((char *)a2 + v8[5]);
    *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
    *((unsigned char *)a1 + v8[7]) = *((unsigned char *)a2 + v8[7]);
    uint64_t v9 = *(int *)(a3 + 24);
    *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
    unint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for SignificantChange.Notification(0);
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      sub_1C29D17F8(0, &qword_1EBB8E980, type metadata accessor for SignificantChange.Notification, MEMORY[0x1E4FBB718]);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v17 = v11[1];
      *unint64_t v10 = *v11;
      v10[1] = v17;
      *((unsigned char *)v10 + 16) = *((unsigned char *)v11 + 16);
      uint64_t v18 = *(int *)(v12 + 24);
      uint64_t v23 = (char *)v10 + v18;
      uint64_t v19 = (char *)v11 + v18;
      uint64_t v20 = sub_1C2A9C6E8();
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v23, v19, v20);
      v21((char *)v10 + *(int *)(v12 + 28), (char *)v11 + *(int *)(v12 + 28), v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t destroy for SignificantChange(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for SignificantChange.Notification(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v5 + *(int *)(v6 + 24);
    uint64_t v9 = sub_1C2A9C6E8();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v11)((void *)(v9 - 8), v8, v9);
    uint64_t v10 = v5 + *(int *)(v6 + 28);
    return v11(v10, v9);
  }
  return result;
}

uint64_t initializeWithCopy for SignificantChange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for SignificantChange.Period(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for SignificantChange.Notification(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    sub_1C29D17F8(0, &qword_1EBB8E980, type metadata accessor for SignificantChange.Notification, MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v15;
    *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
    uint64_t v16 = *(int *)(v11 + 24);
    uint64_t v21 = (char *)v9 + v16;
    uint64_t v17 = (char *)v10 + v16;
    uint64_t v18 = sub_1C2A9C6E8();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v21, v17, v18);
    v19((char *)v9 + *(int *)(v11 + 28), (char *)v10 + *(int *)(v11 + 28), v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for SignificantChange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for SignificantChange.Period(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for SignificantChange.Notification(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      *(void *)uint64_t v9 = *(void *)v10;
      *(void *)(v9 + 8) = *(void *)(v10 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
      uint64_t v22 = *(int *)(v11 + 24);
      uint64_t v23 = v9 + v22;
      uint64_t v24 = v10 + v22;
      uint64_t v25 = sub_1C2A9C6E8();
      BOOL v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24);
      v26(v23, v24, v25);
      v26(v9 + *(int *)(v11 + 28), v10 + *(int *)(v11 + 28), v25);
      return a1;
    }
    sub_1C29D4450(v9, type metadata accessor for SignificantChange.Notification);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    sub_1C29D17F8(0, &qword_1EBB8E980, type metadata accessor for SignificantChange.Notification, MEMORY[0x1E4FBB718]);
    memcpy((void *)v9, (const void *)v10, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v27 = v9 + v16;
  uint64_t v17 = v10 + v16;
  uint64_t v18 = sub_1C2A9C6E8();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  v19(v27, v17, v18);
  v19(v9 + *(int *)(v11 + 28), v10 + *(int *)(v11 + 28), v18);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t initializeWithTake for SignificantChange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for SignificantChange.Period(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v9 = (unsigned char *)(a1 + v8);
  uint64_t v10 = (unsigned char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for SignificantChange.Notification(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1C29D17F8(0, &qword_1EBB8E980, type metadata accessor for SignificantChange.Notification, MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    v9[16] = v10[16];
    uint64_t v14 = *(int *)(v11 + 24);
    int v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    uint64_t v17 = sub_1C2A9C6E8();
    uint64_t v18 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 32);
    v18(v15, v16, v17);
    v18(&v9[*(int *)(v11 + 28)], &v10[*(int *)(v11 + 28)], v17);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithTake for SignificantChange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for SignificantChange.Period(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (unsigned char *)(a1 + v8);
  uint64_t v10 = (unsigned char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for SignificantChange.Notification(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      uint64_t v23 = *((void *)v10 + 1);
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v23;
      swift_bridgeObjectRelease();
      v9[16] = v10[16];
      uint64_t v24 = *(int *)(v11 + 24);
      uint64_t v25 = &v9[v24];
      BOOL v26 = &v10[v24];
      uint64_t v27 = sub_1C2A9C6E8();
      uint64_t v28 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 40);
      v28(v25, v26, v27);
      v28(&v9[*(int *)(v11 + 28)], &v10[*(int *)(v11 + 28)], v27);
      return a1;
    }
    sub_1C29D4450((uint64_t)v9, type metadata accessor for SignificantChange.Notification);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    sub_1C29D17F8(0, &qword_1EBB8E980, type metadata accessor for SignificantChange.Notification, MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  v9[16] = v10[16];
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  uint64_t v19 = sub_1C2A9C6E8();
  uint64_t v20 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 32);
  v20(v17, v18, v19);
  v20(&v9[*(int *)(v11 + 28)], &v10[*(int *)(v11 + 28)], v19);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for SignificantChange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29D2880);
}

uint64_t sub_1C29D2880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SignificantChange.Period(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    sub_1C29D17F8(0, &qword_1EBB8E980, type metadata accessor for SignificantChange.Notification, MEMORY[0x1E4FBB718]);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for SignificantChange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29D29F0);
}

uint64_t sub_1C29D29F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SignificantChange.Period(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    sub_1C29D17F8(0, &qword_1EBB8E980, type metadata accessor for SignificantChange.Notification, MEMORY[0x1E4FBB718]);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1C29D2B4C()
{
  type metadata accessor for SignificantChange.Period(319);
  if (v0 <= 0x3F)
  {
    sub_1C29D17F8(319, &qword_1EBB8E980, type metadata accessor for SignificantChange.Notification, MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SignificantChange.Period(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2A9C398();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t destroy for SignificantChange.Period(uint64_t a1)
{
  uint64_t v2 = sub_1C2A9C398();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for SignificantChange.Period(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithCopy for SignificantChange.Period(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for SignificantChange.Period(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for SignificantChange.Period(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SignificantChange.Period(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29D2FEC);
}

uint64_t sub_1C29D2FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C398();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) <= 2u) {
      int v10 = 2;
    }
    else {
      int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    }
    unsigned int v11 = v10 - 2;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) >= 2u) {
      return v11;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for SignificantChange.Period(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29D30C8);
}

uint64_t sub_1C29D30C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2A9C398();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
  }
  return result;
}

uint64_t sub_1C29D3184()
{
  uint64_t result = sub_1C2A9C398();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SignificantChange.Period.ChangeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C29D32F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignificantChange.Period.ChangeType()
{
  return &type metadata for SignificantChange.Period.ChangeType;
}

void *initializeBufferWithCopyOfBuffer for SignificantChange.Notification(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1C2A9C6E8();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12((uint64_t)v4 + *(int *)(a3 + 28), (uint64_t)a2 + *(int *)(a3 + 28), v11);
  }
  return v4;
}

uint64_t destroy for SignificantChange.Notification(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C2A9C6E8();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  return v8(v6, v5);
}

uint64_t initializeWithCopy for SignificantChange.Notification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C2A9C6E8();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v10);
  return a1;
}

uint64_t assignWithCopy for SignificantChange.Notification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C6E8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v9);
  return a1;
}

uint64_t initializeWithTake for SignificantChange.Notification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C6E8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v9);
  return a1;
}

uint64_t assignWithTake for SignificantChange.Notification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C2A9C6E8();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SignificantChange.Notification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29D382C);
}

uint64_t sub_1C29D382C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C2A9C6E8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SignificantChange.Notification(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29D38F0);
}

uint64_t sub_1C29D38F0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C2A9C6E8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C29D3998()
{
  uint64_t result = sub_1C2A9C6E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SignificantChange.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C29D3B04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignificantChange.CodingKeys()
{
  return &type metadata for SignificantChange.CodingKeys;
}

ValueMetadata *type metadata accessor for SignificantChange.Notification.CodingKeys()
{
  return &type metadata for SignificantChange.Notification.CodingKeys;
}

unsigned char *_s19HealthVisualization17SignificantChangeV12NotificationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C29D3C1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignificantChange.Period.CodingKeys()
{
  return &type metadata for SignificantChange.Period.CodingKeys;
}

unint64_t sub_1C29D3C58()
{
  unint64_t result = qword_1EA31E680;
  if (!qword_1EA31E680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E680);
  }
  return result;
}

unint64_t sub_1C29D3CB0()
{
  unint64_t result = qword_1EA31E688;
  if (!qword_1EA31E688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E688);
  }
  return result;
}

unint64_t sub_1C29D3D08()
{
  unint64_t result = qword_1EA31E690;
  if (!qword_1EA31E690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E690);
  }
  return result;
}

unint64_t sub_1C29D3D60()
{
  unint64_t result = qword_1EBB8E910;
  if (!qword_1EBB8E910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E910);
  }
  return result;
}

unint64_t sub_1C29D3DB8()
{
  unint64_t result = qword_1EBB8E908;
  if (!qword_1EBB8E908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E908);
  }
  return result;
}

unint64_t sub_1C29D3E10()
{
  unint64_t result = qword_1EBB8E928;
  if (!qword_1EBB8E928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E928);
  }
  return result;
}

unint64_t sub_1C29D3E68()
{
  unint64_t result = qword_1EBB8E920;
  if (!qword_1EBB8E920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E920);
  }
  return result;
}

unint64_t sub_1C29D3EC0()
{
  unint64_t result = qword_1EBB8EA08;
  if (!qword_1EBB8EA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8EA08);
  }
  return result;
}

unint64_t sub_1C29D3F18()
{
  unint64_t result = qword_1EBB8EA00;
  if (!qword_1EBB8EA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8EA00);
  }
  return result;
}

uint64_t sub_1C29D3F6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636966696E676973 && a2 == 0xEB00000000746E61 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F69746365746564 && a2 == 0xED0000657461446ELL || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C2AB8680)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1C29D416C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656E696C65736162 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365676E616863 && a2 == 0xE700000000000000 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6163696669746F6ELL && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_1C29D42DC()
{
  unint64_t result = qword_1EBB8E9E8;
  if (!qword_1EBB8E9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E9E8);
  }
  return result;
}

void sub_1C29D4330()
{
  if (!qword_1EA31E698)
  {
    sub_1C29D17F8(255, &qword_1EBB8E980, type metadata accessor for SignificantChange.Notification, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA31E698);
    }
  }
}

uint64_t sub_1C29D43C4(uint64_t a1)
{
  sub_1C29D17F8(0, &qword_1EBB8E980, type metadata accessor for SignificantChange.Notification, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C29D4450(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C29D44B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id HealthVisualizationOperationLog.getter()
{
  return sub_1C29D4884(&qword_1EBB92320, (void **)&qword_1EBB91C48);
}

uint64_t sub_1C29D453C()
{
  uint64_t v0 = sub_1C2A9E2F8();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C29D4BD0();
  sub_1C2A9E2E8();
  uint64_t result = sub_1C2A9E308();
  qword_1EA31E6A8 = result;
  return result;
}

id HealthVisualizationPointsOfInterestLog.getter()
{
  return sub_1C29D4884(&qword_1EA31DC68, (void **)&qword_1EA31E6A8);
}

uint64_t sub_1C29D4600()
{
  sub_1C29D4BD0();
  uint64_t result = sub_1C2A9E318();
  qword_1EBB91C50 = result;
  return result;
}

id HealthVisualizationGenerationLog.getter()
{
  return sub_1C29D4884(&qword_1EBB92328, (void **)&qword_1EBB91C50);
}

uint64_t sub_1C29D4688()
{
  sub_1C29D4BD0();
  uint64_t result = sub_1C2A9E318();
  qword_1EBB91C48 = result;
  return result;
}

uint64_t sub_1C29D46EC()
{
  sub_1C29D4BD0();
  uint64_t result = sub_1C2A9E318();
  qword_1EBB91C60 = result;
  return result;
}

id HealthVisualizationQueryLog.getter()
{
  return sub_1C29D4884(&qword_1EBB92338, (void **)&qword_1EBB91C60);
}

uint64_t sub_1C29D476C()
{
  sub_1C29D4BD0();
  uint64_t result = sub_1C2A9E318();
  qword_1EBB91C58 = result;
  return result;
}

id HealthVisualizationProcessingLog.getter()
{
  return sub_1C29D4884(&qword_1EBB92330, (void **)&qword_1EBB91C58);
}

uint64_t sub_1C29D47F4()
{
  sub_1C29D4BD0();
  uint64_t result = sub_1C2A9E318();
  qword_1EA31E6B0 = result;
  return result;
}

id HealthVisualizationFeedSubmissionLog.getter()
{
  return sub_1C29D4884(&qword_1EA31DC70, (void **)&qword_1EA31E6B0);
}

id sub_1C29D4884(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  return v3;
}

unint64_t static Logger.afibBurdenSubsystem.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C29D48EC()
{
  uint64_t v0 = sub_1C2A9CFE8();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C29A139C();
  uint64_t v2 = v1;
  __swift_allocate_value_buffer(v1, qword_1EBB8FAC8);
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB8FAC8);
  sub_1C2A9CFA8();
  sub_1C2A9CEE8();
  sub_1C29A148C(&qword_1EBB8FE08);
  sub_1C29A148C(&qword_1EBB8FDF8);
  sub_1C29A148C(&qword_1EBB8FE00);
  return sub_1C2A9CEA8();
}

uint64_t static Logger.afibBurden.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C29D4B30(&qword_1EBB8F758, (uint64_t (*)(void))sub_1C29A139C, (uint64_t)qword_1EBB8FAC8, a1);
}

uint64_t sub_1C29D4A88()
{
  uint64_t v0 = sub_1C2A9CFE8();
  __swift_allocate_value_buffer(v0, qword_1EA31E6B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA31E6B8);
  return sub_1C2A9CFD8();
}

uint64_t static Logger.afibBurdenOSLogger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C29D4B30(&qword_1EA31DC78, MEMORY[0x1E4FBD360], (uint64_t)qword_1EA31E6B8, a1);
}

uint64_t sub_1C29D4B30@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  return v9(a4, v8, v7);
}

unint64_t sub_1C29D4BD0()
{
  unint64_t result = qword_1EBB92160;
  if (!qword_1EBB92160)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB92160);
  }
  return result;
}

uint64_t sub_1C29D4C10(int a1, int a2, void *a3)
{
  uint64_t result = (uint64_t)sub_1C29D4D4C(a1, a2, a3);
  if (!result)
  {
    id v5 = a3;
    swift_bridgeObjectRetain();
    sub_1C2A9E4D8();
    swift_bridgeObjectRelease();
    char v6 = self;
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel__typeWithIdentifier_, v7);

    sub_1C29ACA2C();
    sub_1C2A9DD58();
    sub_1C2A9DDB8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C2A9E628();
    __break(1u);
  }
  return result;
}

id sub_1C29D4D4C(int a1, int a2, id a3)
{
  id v3 = objc_msgSend(a3, sel_displayTypeController);
  if (v3
    || (id result = objc_msgSend(self, sel_sharedInstance),
        (id v3 = result) != 0))
  {
    id v5 = self;
    swift_bridgeObjectRetain();
    char v6 = (void *)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(v5, sel__typeWithIdentifier_, v6);

    id v8 = objc_msgSend(v3, sel_displayTypeForObjectType_, v7);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1C29D4E48()
{
  uint64_t v1 = (void *)sub_1C29D4C10(*(void *)v0, *(void *)(v0 + 8), *(void **)(v0 + 16));
  id v2 = objc_msgSend(v1, sel_categoryIdentifier);

  id result = objc_msgSend(self, sel_categoryWithID_, v2);
  if (!result)
  {
    id result = (id)sub_1C2A9E628();
    __break(1u);
  }
  return result;
}

void __swiftcall MostRecentSampleQueryConfiguration.init(valueOverrideLocalizedStringKey:valueOverrideLocalizedStringTable:forceDayGranularity:)(HealthVisualization::MostRecentSampleQueryConfiguration *__return_ptr retstr, Swift::String_optional valueOverrideLocalizedStringKey, Swift::String_optional valueOverrideLocalizedStringTable, Swift::Bool forceDayGranularity)
{
  retstr->valueOverrideLocalizedStringKey = valueOverrideLocalizedStringKey;
  retstr->valueOverrideLocalizedStringTable = valueOverrideLocalizedStringTable;
  retstr->forceDayGranularity = forceDayGranularity;
}

uint64_t MostRecentSampleQueryConfiguration.valueOverrideLocalizedStringKey.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MostRecentSampleQueryConfiguration.valueOverrideLocalizedStringTable.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MostRecentSampleQueryConfiguration.forceDayGranularity.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t MostRecentSampleQueryConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C29D55A8(0, &qword_1EBB921A0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C29D5554();
  sub_1C2A9EA08();
  if (!v2)
  {
    char v22 = 0;
    uint64_t v10 = sub_1C2A9E768();
    uint64_t v18 = v11;
    uint64_t v19 = v10;
    char v21 = 1;
    uint64_t v12 = sub_1C2A9E768();
    uint64_t v14 = v13;
    char v20 = 2;
    char v15 = sub_1C2A9E778();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v16 = v18;
    *(void *)a2 = v19;
    *(void *)(a2 + 8) = v16;
    *(void *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = v14;
    *(unsigned char *)(a2 + 32) = v15 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1C29D5188(char a1)
{
  if (!a1) {
    return 0xD00000000000001FLL;
  }
  if (a1 == 1) {
    return 0xD000000000000021;
  }
  return 0xD000000000000013;
}

unint64_t sub_1C29D51E4()
{
  return sub_1C29D5188(*v0);
}

uint64_t sub_1C29D51EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C29D5828(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C29D5214(uint64_t a1)
{
  unint64_t v2 = sub_1C29D5554();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C29D5250(uint64_t a1)
{
  unint64_t v2 = sub_1C29D5554();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MostRecentSampleQueryConfiguration.encode(to:)(void *a1)
{
  sub_1C29D55A8(0, &qword_1EBB8F9C8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  void v11[2] = v8;
  int v12 = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C29D5554();
  sub_1C2A9EA18();
  char v15 = 0;
  uint64_t v9 = v11[3];
  sub_1C2A9E7D8();
  if (!v9)
  {
    char v14 = 1;
    sub_1C2A9E7D8();
    char v13 = 2;
    sub_1C2A9E838();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C29D544C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MostRecentSampleQueryConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C29D5464(void *a1)
{
  return MostRecentSampleQueryConfiguration.encode(to:)(a1);
}

uint64_t _s19HealthVisualization34MostRecentSampleQueryConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  int v6 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  int v10 = *(unsigned __int8 *)(a2 + 32);
  if (!v3)
  {
    if (v7) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v7) {
    return 0;
  }
  BOOL v11 = *(void *)a1 == *(void *)a2 && v3 == v7;
  if (v11 || (char v12 = sub_1C2A9E8D8(), result = 0, (v12 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v9)
      {
        if (v4 != v8 || v5 != v9)
        {
          char v14 = sub_1C2A9E8D8();
          uint64_t result = 0;
          if ((v14 & 1) == 0) {
            return result;
          }
        }
        return v6 ^ v10 ^ 1u;
      }
    }
    else if (!v9)
    {
      return v6 ^ v10 ^ 1u;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1C29D5554()
{
  unint64_t result = qword_1EBB91E70;
  if (!qword_1EBB91E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91E70);
  }
  return result;
}

void sub_1C29D55A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C29D5554();
    unint64_t v7 = a3(a1, &type metadata for MostRecentSampleQueryConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

ValueMetadata *type metadata accessor for MostRecentSampleQueryConfiguration()
{
  return &type metadata for MostRecentSampleQueryConfiguration;
}

unsigned char *storeEnumTagSinglePayload for MostRecentSampleQueryConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C29D56E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MostRecentSampleQueryConfiguration.CodingKeys()
{
  return &type metadata for MostRecentSampleQueryConfiguration.CodingKeys;
}

unint64_t sub_1C29D5724()
{
  unint64_t result = qword_1EA31E6D0;
  if (!qword_1EA31E6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E6D0);
  }
  return result;
}

unint64_t sub_1C29D577C()
{
  unint64_t result = qword_1EBB91E80;
  if (!qword_1EBB91E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91E80);
  }
  return result;
}

unint64_t sub_1C29D57D4()
{
  unint64_t result = qword_1EBB91E78;
  if (!qword_1EBB91E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91E78);
  }
  return result;
}

uint64_t sub_1C29D5828(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001FLL && a2 == 0x80000001C2AB8760 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001C2AB8780 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C2AB87B0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t CoreChartTrendDiagram.init(dataViewModel:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0x4000000000000000;
  unsigned int v4 = (int *)type metadata accessor for CoreChartTrendDiagram(0);
  char v5 = (void *)((char *)a2 + v4[5]);
  *char v5 = swift_getKeyPath();
  sub_1C29DBDD8(0);
  swift_storeEnumTagMultiPayload();
  unsigned int v6 = (void *)((char *)a2 + v4[6]);
  sub_1C2A9CC28();
  sub_1C29E3830(&qword_1EBB8FB98, MEMORY[0x1E4F66428]);
  uint64_t *v6 = sub_1C2A9D608();
  v6[1] = v7;
  uint64_t v8 = (void *)((char *)a2 + v4[7]);
  sub_1C2A9CBC8();
  sub_1C29E3830(&qword_1EA31E2D0, MEMORY[0x1E4F66418]);
  uint64_t *v8 = sub_1C2A9D608();
  v8[1] = v9;
  uint64_t v10 = v4[9];
  *((unsigned char *)a2 + v10) = 0;
  BOOL v11 = (_DWORD *)((char *)a2 + v4[8]);
  sub_1C29E3D28(a1, (uint64_t)v11, type metadata accessor for CoreChartTrendViewModel);
  if (!*v11) {
    *((unsigned char *)a2 + v10) = 1;
  }
  sub_1C29802C8();
  char v12 = (void *)sub_1C2A9E258();
  objc_msgSend(v12, sel_lineHeight);
  uint64_t v14 = v13;

  uint64_t result = sub_1C29DE554(a1, type metadata accessor for CoreChartTrendViewModel);
  *(void *)((char *)a2 + v4[10]) = v14;
  return result;
}

uint64_t type metadata accessor for CoreChartTrendDiagram(uint64_t a1)
{
  return sub_1C296F4B8(a1, qword_1EBB8E3F0);
}

uint64_t CoreChartTrendDataElement.init(date:value:value2:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10 = type metadata accessor for CoreChartTrendDataElement(0);
  uint64_t v11 = a4 + *(int *)(v10 + 24);
  uint64_t v12 = sub_1C2A9C6E8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a4, a1, v12);
  *(double *)(a4 + *(int *)(v10 + 20)) = a5;
  *(void *)uint64_t v11 = a2;
  *(unsigned char *)(v11 + 8) = a3 & 1;
  return result;
}

int *CoreChartTrendLineViewModel.init(dateInterval:average:xAxisLabel:lineLabel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v14 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a6, a1, v14);
  uint64_t result = (int *)type metadata accessor for CoreChartTrendLineViewModel(0);
  *(double *)(a6 + result[5]) = a7;
  uint64_t v16 = (void *)(a6 + result[6]);
  *uint64_t v16 = a2;
  v16[1] = a3;
  uint64_t v17 = (void *)(a6 + result[7]);
  *uint64_t v17 = a4;
  v17[1] = a5;
  return result;
}

uint64_t CoreChartTrendViewModel.init(diagramStyle:hkType:coveredDateRange:baseTrendLine:changeTrendLine:dataSeries:)@<X0>(int a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14 = (int *)type metadata accessor for CoreChartTrendViewModel(0);
  uint64_t v15 = a7 + v14[8];
  uint64_t v16 = type metadata accessor for CoreChartTrendLineViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_DWORD *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(unsigned char *)(a7 + 16) = a3;
  sub_1C29E3CC0(a4, a7 + v14[7], type metadata accessor for CoreChartTrendLineViewModel);
  uint64_t result = sub_1C29DC1C8(a5, v15, (uint64_t (*)(void))sub_1C29DC130);
  *(void *)(a7 + v14[9]) = a6;
  return result;
}

uint64_t sub_1C29D5DE0()
{
  return sub_1C2A9D628();
}

uint64_t sub_1C29D5E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C29DBCC8(a1, a2, a3, a4, MEMORY[0x1E4F3CBF0], MEMORY[0x1E4F3D010]);
}

uint64_t CoreChartTrendDataElement.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C2A9C6E8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_1C29D5E98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C2A9C6E8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t CoreChartTrendViewModel.diagramStyle.getter()
{
  return *v0;
}

uint64_t CoreChartTrendViewModel.diagramStyle.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*CoreChartTrendViewModel.diagramStyle.modify())()
{
  return nullsub_1;
}

uint64_t CoreChartTrendViewModel.baseTrendLine.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CoreChartTrendViewModel(0);
  return sub_1C29E3D28(v1 + *(int *)(v3 + 28), a1, type metadata accessor for CoreChartTrendLineViewModel);
}

uint64_t CoreChartTrendViewModel.baseTrendLine.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CoreChartTrendViewModel(0);
  return sub_1C29DC1C8(a1, v1 + *(int *)(v3 + 28), type metadata accessor for CoreChartTrendLineViewModel);
}

uint64_t (*CoreChartTrendViewModel.baseTrendLine.modify())(void)
{
  return nullsub_1;
}

uint64_t CoreChartTrendViewModel.changeTrendLine.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CoreChartTrendViewModel(0);
  return sub_1C29E3D28(v1 + *(int *)(v3 + 32), a1, (uint64_t (*)(void))sub_1C29DC130);
}

uint64_t CoreChartTrendViewModel.changeTrendLine.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CoreChartTrendViewModel(0);
  return sub_1C29DC1C8(a1, v1 + *(int *)(v3 + 32), (uint64_t (*)(void))sub_1C29DC130);
}

uint64_t (*CoreChartTrendViewModel.changeTrendLine.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C29D60F0(uint64_t a1)
{
  return sub_1C29D6138(a1, 0xD000000000000011, 0x80000001C2AB87D0, &qword_1EBB9EF68);
}

uint64_t sub_1C29D6114(uint64_t a1)
{
  return sub_1C29D6138(a1, 0xD000000000000016, 0x80000001C2AB87F0, &qword_1EBB9EF60);
}

uint64_t sub_1C29D6138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (qword_1EBB8E830 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EBB9EF50;
  uint64_t result = sub_1C2A9DB38();
  *a4 = result;
  return result;
}

uint64_t CoreChartTrendDiagram.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v81 = a1;
  sub_1C29DC230(0);
  uint64_t v71 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v73 = (uint64_t *)((char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1C2A9D5A8();
  uint64_t v74 = *(void *)(v5 - 8);
  uint64_t v75 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v72 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2973A20();
  uint64_t v68 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1C2A9D5C8();
  MEMORY[0x1F4188790](v77);
  uint64_t v11 = (_OWORD *)((char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C29DC264();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DE128();
  uint64_t v76 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DE1BC(0);
  uint64_t v78 = v18;
  MEMORY[0x1F4188790](v18);
  char v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DE298();
  uint64_t v69 = *(void *)(v21 - 8);
  uint64_t v70 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v67 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29E3AD8(0, &qword_1EA31E850, (uint64_t (*)(uint64_t))sub_1C29DE298, (uint64_t (*)(uint64_t))sub_1C29DC230, MEMORY[0x1E4F3CC10]);
  uint64_t v79 = *(void *)(v23 - 8);
  uint64_t v80 = v23;
  MEMORY[0x1F4188790](v23);
  int v66 = (char *)&v66 - v24;
  uint64_t v25 = type metadata accessor for CoreChartTrendDiagram(0);
  if (!*(void *)(v1 + *(int *)(v25 + 24))) {
    goto LABEL_15;
  }
  uint64_t v26 = v25;
  uint64_t v27 = self;
  swift_retain();
  uint64_t v28 = (void *)sub_1C2A9CBE8();
  swift_release();
  id v29 = objc_msgSend(v27, sel_sharedInstanceForHealthStore_, v28);

  if (!v29) {
    goto LABEL_13;
  }
  uint64_t v30 = v2 + *(int *)(v26 + 32);
  id v31 = objc_msgSend(v29, sel_displayTypeForObjectType_, *(void *)(v30 + 8));

  if (!v31)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    sub_1C2A9CC28();
    sub_1C29E3830(&qword_1EBB8FB98, MEMORY[0x1E4F66428]);
    uint64_t result = sub_1C2A9D5F8();
    __break(1u);
    return result;
  }
  id v32 = objc_msgSend(v31, sel_displayCategory);

  id v33 = objc_msgSend(v32, sel_color);
  if (!v33) {
    id v33 = objc_msgSend(self, sel_systemGrayColor);
  }
  uint64_t v34 = MEMORY[0x1C8763950](v33);
  if (*(void *)(*(void *)(v30 + *(int *)(type metadata accessor for CoreChartTrendViewModel(0) + 36)) + 16))
  {
    *(void *)uint64_t v14 = sub_1C2A9D738();
    *((void *)v14 + 1) = 0x4020000000000000;
    v14[16] = 0;
    sub_1C29DE4EC();
    sub_1C29D6BA4(v2, v34, (uint64_t)&v14[*(int *)(v35 + 44)]);
    uint64_t v36 = sub_1C2A9DAE8();
    char v37 = sub_1C2A9D878();
    sub_1C29E3D28((uint64_t)v14, (uint64_t)v17, (uint64_t (*)(void))sub_1C29DC264);
    int v38 = &v17[*(int *)(v76 + 36)];
    *(void *)int v38 = v36;
    v38[8] = v37;
    sub_1C29DE554((uint64_t)v14, (uint64_t (*)(void))sub_1C29DC264);
    int v39 = (char *)v11 + *(int *)(v77 + 20);
    uint64_t v40 = *MEMORY[0x1E4F3D4A0];
    uint64_t v41 = sub_1C2A9D728();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v39, v40, v41);
    __asm { FMOV            V0.2D, #4.0 }
    *uint64_t v11 = _Q0;
    uint64_t v47 = (uint64_t)&v20[*(int *)(v78 + 36)];
    sub_1C29E3D28((uint64_t)v11, v47, MEMORY[0x1E4F3CDB8]);
    sub_1C29DE204();
    *(_WORD *)(v47 + *(int *)(v48 + 36)) = 256;
    sub_1C29E3D28((uint64_t)v17, (uint64_t)v20, (uint64_t (*)(void))sub_1C29DE128);
    sub_1C29DE554((uint64_t)v11, MEMORY[0x1E4F3CDB8]);
    sub_1C29DE554((uint64_t)v17, (uint64_t (*)(void))sub_1C29DE128);
    uint64_t v49 = *MEMORY[0x1E4F3CB88];
    uint64_t v50 = sub_1C2A9D598();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v9, v49, v50);
    sub_1C29E3830(&qword_1EBB8E798, MEMORY[0x1E4F3CB98]);
    if (sub_1C2A9DCE8())
    {
      sub_1C29DE3B0(&qword_1EA31E838, sub_1C29DE1BC, (void (*)(void))sub_1C29DE43C, (void (*)(void))sub_1C29DE4B8);
      sub_1C29E3830(&qword_1EBB8E838, (void (*)(uint64_t))sub_1C2973A20);
      uint64_t v77 = v34;
      uint64_t v51 = v67;
      sub_1C2A9DA68();
      sub_1C29DE554((uint64_t)v9, (uint64_t (*)(void))sub_1C2973A20);
      sub_1C29DE554((uint64_t)v20, (uint64_t (*)(void))sub_1C29DE1BC);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v54 = v74;
      uint64_t v53 = v75;
      size_t v55 = v72;
      (*(void (**)(char *, void, uint64_t))(v74 + 104))(v72, *MEMORY[0x1E4F3CBD8], v75);
      uint64_t v56 = v73;
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))((char *)v73 + *(int *)(v71 + 28), v55, v53);
      *uint64_t v56 = KeyPath;
      uint64_t v58 = v69;
      uint64_t v57 = v70;
      uint64_t v59 = (uint64_t)v66;
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v51, v70);
      uint64_t v60 = v80;
      sub_1C29E3D28((uint64_t)v56, v59 + *(int *)(v80 + 36), (uint64_t (*)(void))sub_1C29DC230);
      swift_retain();
      sub_1C29DE554((uint64_t)v56, (uint64_t (*)(void))sub_1C29DC230);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v53);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v51, v57);
      uint64_t v61 = v81;
      sub_1C29DE618(v59, v81);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v61, 0, 1, v60);
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  swift_release();
  uint64_t v63 = v80;
  uint64_t v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56);
  uint64_t v65 = v81;
  return v64(v65, 1, 1, v63);
}

uint64_t sub_1C29D6BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v90 = a3;
  uint64_t v89 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F194D8];
  sub_1C29DC164(0, &qword_1EA31E3D8, MEMORY[0x1E4F194D8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v86 = (char *)&v71 - v6;
  uint64_t v87 = sub_1C2A9D218();
  uint64_t v88 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v83 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CoreChartTrendDiagram(0);
  uint64_t v75 = *(void *)(v8 - 8);
  uint64_t v74 = *(void *)(v75 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v72 = (uint64_t)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1C2A9D208();
  uint64_t v85 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v73 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DC6C8();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DC614();
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  char v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DC528();
  uint64_t v77 = v21;
  uint64_t v79 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DC3D4();
  uint64_t v82 = v24;
  uint64_t v81 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v71 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DE764(0, &qword_1EA31E6F0, (uint64_t (*)(uint64_t))sub_1C29DC3D4, MEMORY[0x1E4F3CE48], MEMORY[0x1E4F3CC10]);
  uint64_t v78 = v26 - 8;
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v92 = (uint64_t)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v76 = (char *)&v71 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v91 = (uint64_t)&v71 - v31;
  uint64_t v93 = a1;
  uint64_t v94 = a2;
  sub_1C29DC72C();
  sub_1C29DD7EC();
  sub_1C2A9D268();
  uint64_t v32 = sub_1C29E3830(&qword_1EA31E808, (void (*)(uint64_t))sub_1C29DC6C8);
  sub_1C2A9D9C8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(void *)&long long v104 = v12;
  *((void *)&v104 + 1) = v32;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_1C2A9D9D8();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v34 = a1;
  uint64_t v35 = a1;
  uint64_t v36 = v72;
  sub_1C29E3D28(v34, v72, type metadata accessor for CoreChartTrendDiagram);
  unint64_t v37 = (*(unsigned __int8 *)(v75 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
  uint64_t v38 = swift_allocObject();
  sub_1C29E3CC0(v36, v38 + v37, type metadata accessor for CoreChartTrendDiagram);
  int v39 = v73;
  sub_1C2A9D028();
  swift_release();
  uint64_t v40 = v83;
  sub_1C2A9D1F8();
  uint64_t v41 = sub_1C2A9D388();
  uint64_t v42 = v86;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v86, 1, 1, v41);
  *(void *)&long long v104 = v17;
  *((void *)&v104 + 1) = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v43 = v71;
  uint64_t v44 = (uint64_t)v42;
  uint64_t v45 = v77;
  uint64_t v46 = v84;
  uint64_t v47 = v87;
  sub_1C2A9DA08();
  sub_1C29E3564(v44, &qword_1EA31E3D8, v89);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v40, v47);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v39, v46);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v23, v45);
  sub_1C2A9DBA8();
  sub_1C2A9D5E8();
  uint64_t v48 = v81;
  uint64_t v49 = (uint64_t)v76;
  uint64_t v50 = v82;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v76, v43, v82);
  uint64_t v51 = (_OWORD *)(v49 + *(int *)(v78 + 44));
  long long v52 = v109;
  v51[4] = v108;
  v51[5] = v52;
  v51[6] = v110;
  long long v53 = v105;
  *uint64_t v51 = v104;
  v51[1] = v53;
  long long v54 = v107;
  v51[2] = v106;
  v51[3] = v54;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v43, v50);
  uint64_t v55 = v91;
  sub_1C29E35D4(v49, v91);
  uint64_t v89 = (uint64_t (*)(uint64_t))sub_1C2A9D6A8();
  sub_1C29DAF1C(v35, v80, v95);
  uint64_t v56 = v95[0];
  uint64_t v57 = v95[1];
  LOBYTE(v35) = v96;
  uint64_t v58 = v97;
  uint64_t v59 = v98;
  LODWORD(v88) = v99;
  uint64_t v60 = v100;
  uint64_t v61 = v101;
  uint64_t v62 = v102;
  uint64_t v63 = v103;
  uint64_t v64 = v55;
  uint64_t v65 = v92;
  sub_1C29E3670(v64, v92);
  uint64_t v66 = v65;
  uint64_t v67 = v90;
  sub_1C29E3670(v66, v90);
  sub_1C29DC32C();
  uint64_t v69 = v67 + *(int *)(v68 + 48);
  *(void *)uint64_t v69 = v89;
  *(void *)(v69 + 8) = 0;
  *(unsigned char *)(v69 + 16) = 1;
  *(void *)(v69 + 24) = v56;
  *(void *)(v69 + 32) = v57;
  *(unsigned char *)(v69 + 40) = v35;
  *(void *)(v69 + 48) = v58;
  *(void *)(v69 + 56) = v59;
  *(unsigned char *)(v69 + 64) = v88;
  *(void *)(v69 + 72) = v60;
  *(void *)(v69 + 80) = v61;
  *(void *)(v69 + 88) = v62;
  *(void *)(v69 + 96) = v63;
  sub_1C2980168(v56, v57, v35);
  swift_bridgeObjectRetain();
  sub_1C2980178(v60, v61, v62, v63);
  sub_1C29E370C(v91);
  sub_1C2980010(v56, v57, v35);
  swift_bridgeObjectRelease();
  sub_1C2980234(v60, v61, v62, v63);
  return sub_1C29E370C(v92);
}

uint64_t sub_1C29D7650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v280 = a2;
  uint64_t v301 = a1;
  uint64_t v277 = a3;
  uint64_t v303 = type metadata accessor for CoreChartTrendLineViewModel(0);
  v298 = *(void (**)(char *, uint64_t, uint64_t))(v303 - 8);
  MEMORY[0x1F4188790](v303);
  uint64_t v281 = (uint64_t)&v236 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DD7B8(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v276 = (uint64_t)&v236 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  v275 = (char *)&v236 - v7;
  uint64_t v302 = sub_1C2A9C858();
  uint64_t v263 = *(void *)(v302 - 8);
  uint64_t v297 = v263;
  MEMORY[0x1F4188790](v302);
  v264 = (char *)&v236 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  v286 = (char *)&v236 - v10;
  uint64_t v11 = sub_1C2A9C6E8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v295 = v11;
  uint64_t v296 = v12;
  MEMORY[0x1F4188790](v11);
  v274 = (char *)&v236 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  v260 = (char *)&v236 - v15;
  MEMORY[0x1F4188790](v16);
  v291 = (char *)&v236 - v17;
  MEMORY[0x1F4188790](v18);
  v290 = (void (*)(uint64_t, char *, uint64_t))((char *)&v236 - v19);
  uint64_t v278 = type metadata accessor for CoreChartTrendLineView(0);
  MEMORY[0x1F4188790](v278);
  v262 = (char *)&v236 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  v270 = (char *)&v236 - v22;
  sub_1C29DCEFC();
  uint64_t v279 = v23;
  uint64_t v294 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  v261 = (char *)&v236 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v293 = (uint64_t)&v236 - v26;
  MEMORY[0x1F4188790](v27);
  v292 = (char *)&v236 - v28;
  uint64_t v285 = sub_1C2A9D528();
  uint64_t v284 = *(void *)(v285 - 8);
  MEMORY[0x1F4188790](v285);
  v272 = (char *)&v236 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v271 = (uint64_t)&v236 - v31;
  uint64_t v32 = type metadata accessor for CoreChartTrendDiagram(0);
  MEMORY[0x1F4188790](v32);
  v287 = (char *)&v236 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DE6C0(0);
  MEMORY[0x1F4188790](v34 - 8);
  uint64_t v273 = (uint64_t)&v236 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v299 = (uint64_t)&v236 - v37;
  sub_1C29DC130(0);
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v269 = (uint64_t)&v236 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v40);
  v268 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v236 - v41);
  MEMORY[0x1F4188790](v42);
  v267 = (uint64_t *)((char *)&v236 - v43);
  uint64_t v248 = type metadata accessor for CoreChartTrendDistributionSeries();
  uint64_t v244 = *(void *)(v248 - 8);
  uint64_t v44 = *(void *)(v244 + 64);
  MEMORY[0x1F4188790](v248);
  v241 = (char *)&v236 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v45);
  uint64_t v245 = (uint64_t)&v236 - v46;
  MEMORY[0x1F4188790](v47);
  v238 = (char *)&v236 - v48;
  sub_1C2952798();
  uint64_t v257 = v49;
  uint64_t v256 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  v252 = (char *)&v236 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v51);
  v254 = (char *)&v236 - v52;
  uint64_t v239 = type metadata accessor for CoreChartTrendLineSeries();
  uint64_t v246 = *(void *)(v239 - 8);
  uint64_t v53 = *(void *)(v246 + 64);
  MEMORY[0x1F4188790](v239);
  uint64_t v247 = (uint64_t)&v236 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v54);
  uint64_t v242 = (uint64_t)&v236 - v55;
  MEMORY[0x1F4188790](v56);
  uint64_t v255 = (uint64_t)&v236 - v57;
  sub_1C29DC95C(0);
  v265 = v58;
  uint64_t v259 = *((void *)v58 - 1);
  MEMORY[0x1F4188790](v58);
  v253 = (char *)&v236 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v60);
  v258 = (char *)&v236 - v61;
  sub_1C29DC828(0);
  MEMORY[0x1F4188790](v62 - 8);
  uint64_t v266 = (uint64_t)&v236 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v288 = type metadata accessor for CoreChartTrendViewModel(0);
  MEMORY[0x1F4188790](v288);
  uint64_t v65 = (char *)&v236 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v66);
  uint64_t v68 = (char *)&v236 - v67;
  MEMORY[0x1F4188790](v69);
  uint64_t v71 = (char *)&v236 - v70;
  uint64_t v72 = type metadata accessor for CoreChartTrendBarSeries();
  uint64_t v237 = *(void *)(v72 - 8);
  uint64_t v73 = *(void *)(v237 + 64);
  MEMORY[0x1F4188790](v72);
  uint64_t v74 = (char *)&v236 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v75);
  uint64_t v77 = (char *)&v236 - v76;
  MEMORY[0x1F4188790](v78);
  uint64_t v243 = (uint64_t)&v236 - v79;
  sub_1C29DC870(0);
  v251 = v80;
  uint64_t v250 = *((void *)v80 - 1);
  MEMORY[0x1F4188790](v80);
  v240 = (char *)&v236 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v82);
  v249 = (char *)&v236 - v83;
  sub_1C29DC7AC(0);
  MEMORY[0x1F4188790](v84 - 8);
  uint64_t v282 = (uint64_t)&v236 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v86);
  uint64_t v289 = (uint64_t)&v236 - v87;
  uint64_t v283 = v32;
  v300 = (int *)(v301 + *(int *)(v32 + 32));
  int v88 = *v300;
  if (*v300 != 3)
  {
    if (v88 == 1)
    {
      sub_1C29E3D28((uint64_t)v300, (uint64_t)v68, type metadata accessor for CoreChartTrendViewModel);
      uint64_t v106 = v242;
      sub_1C29E3D28((uint64_t)v68, v242, type metadata accessor for CoreChartTrendViewModel);
      char v107 = v68[16];
      sub_1C29DE554((uint64_t)v68, type metadata accessor for CoreChartTrendViewModel);
      char v108 = v107 - 2;
      unsigned int v109 = (v107 - 2);
      uint64_t v110 = v288;
      if (v109 > 3) {
        uint64_t v111 = (unsigned int *)MEMORY[0x1E4F27BF0];
      }
      else {
        uint64_t v111 = (unsigned int *)qword_1E645A380[v108];
      }
      (*(void (**)(uint64_t, void, uint64_t))(v297 + 104))(v106 + *(int *)(v239 + 20), *v111, v302);
      uint64_t v133 = v255;
      sub_1C29E3CC0(v106, v255, (uint64_t (*)(void))type metadata accessor for CoreChartTrendLineSeries);
      uint64_t v308 = *(void *)(v133 + *(int *)(v110 + 36));
      uint64_t v134 = v247;
      sub_1C29E3D28(v133, v247, (uint64_t (*)(void))type metadata accessor for CoreChartTrendLineSeries);
      unint64_t v135 = (*(unsigned __int8 *)(v246 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v246 + 80);
      uint64_t v136 = swift_allocObject();
      sub_1C29E3CC0(v134, v136 + v135, (uint64_t (*)(void))type metadata accessor for CoreChartTrendLineSeries);
      sub_1C29DC890(0);
      uint64_t v257 = v137;
      sub_1C29DCA80();
      uint64_t v256 = v138;
      sub_1C29E3830((unint64_t *)&qword_1EA31DCD8, sub_1C29DC890);
      sub_1C29DCBD8();
      uint64_t v140 = v139;
      sub_1C29DCCEC();
      uint64_t v142 = v141;
      uint64_t v143 = sub_1C2A9D308();
      sub_1C29DCDC8();
      unint64_t v145 = v144;
      unint64_t v146 = sub_1C29DCE54();
      unint64_t v147 = sub_1C29DCEA8();
      swift_bridgeObjectRetain();
      uint64_t v304 = MEMORY[0x1E4F3ED28];
      unint64_t v305 = v146;
      unint64_t v306 = v147;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v304 = v143;
      unint64_t v305 = v145;
      uint64_t v92 = (int *)v288;
      uint64_t v94 = v297;
      unint64_t v306 = MEMORY[0x1E4F19480];
      uint64_t v307 = OpaqueTypeConformance2;
      uint64_t v149 = swift_getOpaqueTypeConformance2();
      uint64_t v304 = v142;
      unint64_t v305 = v149;
      uint64_t v150 = swift_getOpaqueTypeConformance2();
      uint64_t v304 = v140;
      unint64_t v305 = MEMORY[0x1E4F3EB98];
      unint64_t v306 = v150;
      uint64_t v307 = MEMORY[0x1E4F3EB78];
      swift_getOpaqueTypeConformance2();
      sub_1C29E3830(&qword_1EA31DCE8, (void (*)(uint64_t))type metadata accessor for CoreChartTrendDataElement);
      v151 = v253;
      sub_1C2A9DB88();
      sub_1C29DE554(v133, (uint64_t (*)(void))type metadata accessor for CoreChartTrendLineSeries);
      uint64_t v118 = v259;
      uint64_t v119 = v258;
      v120 = v265;
      (*(void (**)(char *, char *, unsigned int (*)(void (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t)))(v259 + 32))(v258, v151, (unsigned int (*)(void (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))v265);
      uint64_t v121 = v266;
      (*(void (**)(uint64_t, char *, unsigned int (*)(void, void, void)))(v118 + 16))(v266, v119, v120);
      int v122 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F193A8];
      sub_1C29E3AD8(0, &qword_1EA31E8A0, (uint64_t (*)(uint64_t))sub_1C29DC870, (uint64_t (*)(uint64_t))sub_1C29DC95C, MEMORY[0x1E4F193A8]);
    }
    else
    {
      uint64_t v89 = v302;
      uint64_t v90 = v285;
      uint64_t v91 = v284;
      uint64_t v92 = (int *)v288;
      if (v88)
      {
        sub_1C29DC7E0(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v289, 1, 1, v112);
        uint64_t v94 = v297;
LABEL_18:
        uint64_t v123 = (uint64_t)v287;
        goto LABEL_19;
      }
      sub_1C29E3D28((uint64_t)v300, (uint64_t)v71, type metadata accessor for CoreChartTrendViewModel);
      sub_1C29E3D28((uint64_t)v71, (uint64_t)v77, type metadata accessor for CoreChartTrendViewModel);
      char v93 = v71[16];
      sub_1C29DE554((uint64_t)v71, type metadata accessor for CoreChartTrendViewModel);
      uint64_t v94 = v297;
      if ((v93 - 2) > 3u) {
        __int16 v95 = (unsigned int *)MEMORY[0x1E4F27BF0];
      }
      else {
        __int16 v95 = (unsigned int *)qword_1E645A380[(char)(v93 - 2)];
      }
      (*(void (**)(char *, void, uint64_t))(v297 + 104))(&v77[*(int *)(v72 + 20)], *v95, v89);
      uint64_t v113 = v243;
      sub_1C29E3CC0((uint64_t)v77, v243, (uint64_t (*)(void))type metadata accessor for CoreChartTrendBarSeries);
      uint64_t v308 = *(void *)(v113 + v92[9]);
      sub_1C29E3D28(v113, (uint64_t)v74, (uint64_t (*)(void))type metadata accessor for CoreChartTrendBarSeries);
      unint64_t v114 = (*(unsigned __int8 *)(v237 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v237 + 80);
      uint64_t v115 = swift_allocObject();
      sub_1C29E3CC0((uint64_t)v74, v115 + v114, (uint64_t (*)(void))type metadata accessor for CoreChartTrendBarSeries);
      sub_1C29DC890(0);
      sub_1C29DC8C4();
      sub_1C29E3830((unint64_t *)&qword_1EA31DCD8, sub_1C29DC890);
      uint64_t v116 = sub_1C2A9D298();
      swift_bridgeObjectRetain();
      uint64_t v304 = v116;
      unint64_t v305 = MEMORY[0x1E4F3EB98];
      unint64_t v306 = MEMORY[0x1E4F19428];
      uint64_t v307 = MEMORY[0x1E4F3EB78];
      swift_getOpaqueTypeConformance2();
      sub_1C29E3830(&qword_1EA31DCE8, (void (*)(uint64_t))type metadata accessor for CoreChartTrendDataElement);
      uint64_t v117 = v240;
      sub_1C2A9DB88();
      sub_1C29DE554(v113, (uint64_t (*)(void))type metadata accessor for CoreChartTrendBarSeries);
      uint64_t v118 = v250;
      uint64_t v119 = v249;
      v120 = v251;
      (*(void (**)(char *, char *, unsigned int (*)(void, void, void)))(v250 + 32))(v249, v117, v251);
      uint64_t v121 = v266;
      (*(void (**)(uint64_t, char *, unsigned int (*)(void, void, void)))(v118 + 16))(v266, v119, v120);
      int v122 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F193A8];
      sub_1C29E3AD8(0, &qword_1EA31E8A0, (uint64_t (*)(uint64_t))sub_1C29DC870, (uint64_t (*)(uint64_t))sub_1C29DC95C, MEMORY[0x1E4F193A8]);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v152 = v282;
    sub_1C29E3D28(v121, v282, (uint64_t (*)(void))sub_1C29DC828);
    sub_1C29E3AD8(0, &qword_1EA31E898, (uint64_t (*)(uint64_t))sub_1C29DC828, (uint64_t (*)(uint64_t))sub_1C2952798, v122);
    swift_storeEnumTagMultiPayload();
    sub_1C29DE554(v121, (uint64_t (*)(void))sub_1C29DC828);
    (*(void (**)(char *, unsigned int (*)(void, void, void)))(v118 + 8))(v119, v120);
    sub_1C29DC7E0(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v153 - 8) + 56))(v152, 0, 1, v153);
    sub_1C29E3CC0(v152, v289, (uint64_t (*)(void))sub_1C29DC7AC);
    uint64_t v90 = v285;
    uint64_t v91 = v284;
    goto LABEL_18;
  }
  uint64_t v96 = v244;
  uint64_t v97 = (uint64_t)v241;
  uint64_t v98 = (uint64_t)v238;
  sub_1C29E3D28((uint64_t)v300, (uint64_t)v65, type metadata accessor for CoreChartTrendViewModel);
  uint64_t v99 = v245;
  sub_1C29E3D28((uint64_t)v65, v245, type metadata accessor for CoreChartTrendViewModel);
  char v100 = v65[16];
  sub_1C29DE554((uint64_t)v65, type metadata accessor for CoreChartTrendViewModel);
  uint64_t v101 = v99 + *(int *)(v248 + 20);
  char v102 = v100 - 2;
  unsigned int v103 = (v100 - 2);
  uint64_t v104 = v99;
  if (v103 > 3) {
    long long v105 = (unsigned int *)MEMORY[0x1E4F27BF0];
  }
  else {
    long long v105 = (unsigned int *)qword_1E645A380[v102];
  }
  uint64_t v94 = v297;
  uint64_t v123 = (uint64_t)v287;
  uint64_t v124 = v288;
  (*(void (**)(uint64_t, void, uint64_t))(v297 + 104))(v101, *v105, v302);
  sub_1C29E3CC0(v104, v98, (uint64_t (*)(void))type metadata accessor for CoreChartTrendDistributionSeries);
  uint64_t v304 = *(void *)(v98 + *(int *)(v124 + 36));
  sub_1C29E3D28(v98, v97, (uint64_t (*)(void))type metadata accessor for CoreChartTrendDistributionSeries);
  unint64_t v125 = (*(unsigned __int8 *)(v96 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
  uint64_t v126 = swift_allocObject();
  sub_1C29E3CC0(v97, v126 + v125, (uint64_t (*)(void))type metadata accessor for CoreChartTrendDistributionSeries);
  sub_1C29DC890(0);
  sub_1C29DC164(0, &qword_1EA31DCC0, (uint64_t (*)(uint64_t))sub_1C2951008, MEMORY[0x1E4FBB718]);
  sub_1C29E3830((unint64_t *)&qword_1EA31DCD8, sub_1C29DC890);
  sub_1C29511DC();
  sub_1C29E3830(&qword_1EA31DCE8, (void (*)(uint64_t))type metadata accessor for CoreChartTrendDataElement);
  swift_bridgeObjectRetain();
  v127 = v252;
  sub_1C2A9DB88();
  sub_1C29DE554(v98, (uint64_t (*)(void))type metadata accessor for CoreChartTrendDistributionSeries);
  uint64_t v128 = v256;
  v129 = v254;
  uint64_t v130 = v257;
  (*(void (**)(char *, char *, uint64_t))(v256 + 32))(v254, v127, v257);
  uint64_t v131 = v282;
  (*(void (**)(uint64_t, char *, uint64_t))(v128 + 16))(v282, v129, v130);
  sub_1C29E3AD8(0, &qword_1EA31E898, (uint64_t (*)(uint64_t))sub_1C29DC828, (uint64_t (*)(uint64_t))sub_1C2952798, MEMORY[0x1E4F193A8]);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t))(v128 + 8))(v129, v130);
  sub_1C29DC7E0(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v131, 0, 1, v132);
  sub_1C29E3CC0(v131, v289, (uint64_t (*)(void))sub_1C29DC7AC);
  uint64_t v90 = v285;
  uint64_t v91 = v284;
  uint64_t v92 = (int *)v288;
LABEL_19:
  uint64_t v154 = (uint64_t)v300 + v92[8];
  v155 = (void (*)(void, void, void))v267;
  sub_1C29E3D28(v154, (uint64_t)v267, (uint64_t (*)(void))sub_1C29DC130);
  v156 = (void (*)(char *, uint64_t, uint64_t))((char *)v298 + 48);
  v157 = (unsigned int (*)(void (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))*((void *)v298 + 6);
  unsigned int v158 = v157((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v155, 1, v303);
  sub_1C29DE554((uint64_t)v155, (uint64_t (*)(void))sub_1C29DC130);
  uint64_t v159 = v280;
  if (v158 != 1)
  {
    if (qword_1EBB8E3E0 != -1) {
      swift_once();
    }
    uint64_t v159 = qword_1EBB9EF60;
  }
  v287 = (char *)v159;
  swift_retain();
  v160 = v268;
  sub_1C29E3D28(v154, (uint64_t)v268, (uint64_t (*)(void))sub_1C29DC130);
  unsigned int v161 = v157(v160, 1, v303);
  sub_1C29DE554((uint64_t)v160, (uint64_t (*)(void))sub_1C29DC130);
  sub_1C29E3D28(v301, v123, type metadata accessor for CoreChartTrendDiagram);
  uint64_t v266 = v154;
  v265 = (unsigned int (*)(void, void, void))v157;
  if (v161 == 1)
  {
    v162 = (unsigned int *)MEMORY[0x1E4F3C5C0];
    uint64_t v163 = v271;
    sub_1C29DBE2C(v271);
    v164 = v272;
    (*(void (**)(char *, void, uint64_t))(v91 + 104))(v272, *v162, v90);
    LOBYTE(v162) = sub_1C2A9D518();
    v165 = *(void (**)(char *, uint64_t))(v91 + 8);
    v165(v164, v90);
    uint64_t v166 = v163;
    uint64_t v92 = (int *)v288;
    v165((char *)v166, v90);
    sub_1C29DE554(v123, type metadata accessor for CoreChartTrendDiagram);
    if ((v162 & 1) == 0)
    {
      v167 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56);
      v167(v299, 1, 1, v90);
      goto LABEL_28;
    }
  }
  else
  {
    sub_1C29DE554(v123, type metadata accessor for CoreChartTrendDiagram);
  }
  uint64_t v168 = v299;
  sub_1C29DBE2C(v299);
  v167 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56);
  v167(v168, 0, 1, v90);
LABEL_28:
  uint64_t v169 = (uint64_t)v300;
  uint64_t v170 = (uint64_t)v300 + v92[7];
  sub_1C2A9C378();
  sub_1C2A9C348();
  int v171 = *(unsigned __int8 *)(v169 + 16) - 2;
  v298 = v156;
  v268 = v167;
  switch(v171)
  {
    case 0:
      v172 = (unsigned int *)MEMORY[0x1E4F27C10];
      goto LABEL_33;
    case 1:
    case 2:
      v172 = (unsigned int *)MEMORY[0x1E4F27BF0];
      goto LABEL_33;
    case 3:
      v172 = (unsigned int *)MEMORY[0x1E4F27BC0];
LABEL_33:
      uint64_t v173 = *v172;
      v174 = *(void **)(v94 + 104);
      v175 = v286;
      break;
    default:
      uint64_t v173 = *MEMORY[0x1E4F27BF0];
      v174 = *(void **)(v94 + 104);
      v175 = v286;
      break;
  }
  v267 = v174;
  ((void (*)(char *, uint64_t, uint64_t))v174)(v175, v173, v302);
  uint64_t v176 = sub_1C2A9DBB8();
  uint64_t v178 = v177;
  uint64_t v179 = v303;
  uint64_t v180 = *(void *)(v170 + *(int *)(v303 + 20));
  v181 = (uint64_t *)(v170 + *(int *)(v303 + 28));
  uint64_t v182 = v181[1];
  uint64_t v288 = *v181;
  v183 = (int *)v278;
  uint64_t v184 = (uint64_t)v270;
  sub_1C29E3D28(v299, (uint64_t)&v270[*(int *)(v278 + 44)], (uint64_t (*)(void))sub_1C29DE6C0);
  uint64_t v185 = v295;
  uint64_t v186 = v296 + 32;
  v187 = *(void (**)(uint64_t, char *, uint64_t))(v296 + 32);
  v187(v184, (char *)v290, v295);
  uint64_t v188 = v184 + v183[5];
  v189 = v291;
  uint64_t v296 = v186;
  v291 = (char *)v187;
  v187(v188, v189, v185);
  uint64_t v190 = v184 + v183[6];
  v191 = *(void (**)(uint64_t, char *, uint64_t))(v94 + 32);
  uint64_t v297 = v94 + 32;
  v191(v190, v286, v302);
  v192 = (uint64_t *)(v184 + v183[7]);
  uint64_t *v192 = v176;
  v192[1] = v178;
  *(void *)(v184 + v183[8]) = v180;
  v193 = (uint64_t *)(v184 + v183[9]);
  uint64_t *v193 = v288;
  v193[1] = v182;
  *(void *)(v184 + v183[10]) = v287;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v194 = v293;
  CoreChartTrendLineView.averageRuleAndLabel.getter(v293);
  sub_1C29DE554(v184, type metadata accessor for CoreChartTrendLineView);
  v195 = *(void (**)(char *, uint64_t, uint64_t))(v294 + 32);
  uint64_t v196 = v194;
  uint64_t v197 = v279;
  v195(v292, v196, v279);
  uint64_t v198 = v269;
  sub_1C29E3D28(v266, v269, (uint64_t (*)(void))sub_1C29DC130);
  if (v265(v198, 1, v179) == 1)
  {
    sub_1C29DE554(v198, (uint64_t (*)(void))sub_1C29DC130);
    uint64_t v199 = 1;
    uint64_t v200 = (uint64_t)v275;
    uint64_t v201 = v293;
  }
  else
  {
    v290 = v191;
    v298 = v195;
    sub_1C29E3CC0(v198, v281, type metadata accessor for CoreChartTrendLineViewModel);
    uint64_t v202 = v271;
    sub_1C29DBE2C(v271);
    uint64_t v203 = v284;
    v204 = v272;
    uint64_t v205 = v285;
    (*(void (**)(char *, void, uint64_t))(v284 + 104))(v272, *MEMORY[0x1E4F3C5C0], v285);
    char v206 = sub_1C2A9D518();
    v207 = *(void (**)(char *, uint64_t))(v203 + 8);
    v207(v204, v205);
    v207((char *)v202, v205);
    if (v206)
    {
      uint64_t v208 = v273;
      sub_1C29DBE2C(v273);
      uint64_t v209 = 0;
      v210 = v260;
    }
    else
    {
      uint64_t v209 = 1;
      v210 = v260;
      uint64_t v208 = v273;
    }
    v268(v208, v209, 1, v205);
    sub_1C2A9C378();
    sub_1C2A9C348();
    if ((*((unsigned char *)v300 + 16) - 2) > 3u) {
      v211 = (unsigned int *)MEMORY[0x1E4F27BF0];
    }
    else {
      v211 = (unsigned int *)qword_1E645A380[(char)(*((unsigned char *)v300 + 16) - 2)];
    }
    v212 = v264;
    uint64_t v213 = v302;
    ((void (*)(char *, void, uint64_t))v267)(v264, *v211, v302);
    uint64_t v214 = sub_1C2A9DBC8();
    v300 = (int *)v215;
    uint64_t v301 = v214;
    uint64_t v216 = v281;
    uint64_t v217 = *(void *)(v281 + *(int *)(v303 + 20));
    v218 = (uint64_t *)(v281 + *(int *)(v303 + 28));
    uint64_t v219 = v218[1];
    uint64_t v303 = *v218;
    v220 = (int *)v278;
    uint64_t v221 = (uint64_t)v262;
    sub_1C29E3D28(v208, (uint64_t)&v262[*(int *)(v278 + 44)], (uint64_t (*)(void))sub_1C29DE6C0);
    uint64_t v222 = v295;
    v223 = (void (*)(uint64_t, char *, uint64_t))v291;
    ((void (*)(uint64_t, char *, uint64_t))v291)(v221, v210, v295);
    v223(v221 + v220[5], v274, v222);
    v290(v221 + v220[6], v212, v213);
    v224 = (void *)(v221 + v220[7]);
    uint64_t v225 = (uint64_t)v300;
    void *v224 = v301;
    v224[1] = v225;
    *(void *)(v221 + v220[8]) = v217;
    v226 = (uint64_t *)(v221 + v220[9]);
    uint64_t *v226 = v303;
    v226[1] = v219;
    *(void *)(v221 + v220[10]) = v280;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v201 = v293;
    CoreChartTrendLineView.averageRuleAndLabel.getter(v293);
    sub_1C29DE554(v221, type metadata accessor for CoreChartTrendLineView);
    sub_1C29DE554(v273, (uint64_t (*)(void))sub_1C29DE6C0);
    sub_1C29DE554(v216, type metadata accessor for CoreChartTrendLineViewModel);
    v227 = v261;
    uint64_t v197 = v279;
    v228 = (void (*)(char *, char *, uint64_t))v298;
    v298(v261, v201, v279);
    uint64_t v200 = (uint64_t)v275;
    v228(v275, v227, v197);
    uint64_t v199 = 0;
  }
  uint64_t v229 = v294;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v294 + 56))(v200, v199, 1, v197);
  uint64_t v230 = v289;
  uint64_t v231 = v282;
  sub_1C29E3D28(v289, v282, (uint64_t (*)(void))sub_1C29DC7AC);
  uint64_t v304 = v231;
  v232 = v292;
  (*(void (**)(uint64_t, char *, uint64_t))(v229 + 16))(v201, v292, v197);
  unint64_t v305 = v201;
  uint64_t v233 = v276;
  sub_1C29E3D28(v200, v276, (uint64_t (*)(void))sub_1C29DD7B8);
  unint64_t v306 = v233;
  sub_1C29DABF4(&v304, v277);
  swift_release();
  sub_1C29DE554(v200, (uint64_t (*)(void))sub_1C29DD7B8);
  v234 = *(void (**)(char *, uint64_t))(v229 + 8);
  v234(v232, v197);
  sub_1C29DE554(v299, (uint64_t (*)(void))sub_1C29DE6C0);
  sub_1C29DE554(v230, (uint64_t (*)(void))sub_1C29DC7AC);
  sub_1C29DE554(v233, (uint64_t (*)(void))sub_1C29DD7B8);
  v234((char *)v201, v197);
  return sub_1C29DE554(v231, (uint64_t (*)(void))sub_1C29DC7AC);
}

uint64_t CoreChartTrendLineView.averageRuleAndLabel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v134 = a1;
  uint64_t v2 = sub_1C2A9DBD8();
  uint64_t v135 = *(void *)(v2 - 8);
  uint64_t v136 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v133 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DE6C0(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v96 = (uint64_t)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v132 = (uint64_t)&v94 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v95 = (uint64_t)&v94 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v131 = (uint64_t)&v94 - v11;
  uint64_t v126 = sub_1C2A9D1D8();
  uint64_t v125 = *(void *)(v126 - 8);
  MEMORY[0x1F4188790](v126);
  uint64_t v124 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DE6F4(0, (unint64_t *)&qword_1EA31DEC0, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4F195C0], MEMORY[0x1E4F19388]);
  MEMORY[0x1F4188790](v13 - 8);
  int v122 = (char *)&v94 - v14;
  uint64_t v15 = type metadata accessor for CoreChartTrendLineView(0);
  MEMORY[0x1F4188790](v15);
  uint64_t v109 = (uint64_t)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1C2A9C868();
  uint64_t v17 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  char v107 = (char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C29DC164(0, &qword_1EBB92520, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v104 = (char *)&v94 - v21;
  uint64_t v105 = sub_1C2A9C6E8();
  uint64_t v106 = *(void *)(v105 - 8);
  MEMORY[0x1F4188790](v105);
  uint64_t v138 = (char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v102 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27CA0];
  sub_1C29DC164(0, &qword_1EBB92528, MEMORY[0x1E4F27CA0], v19);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v94 - v24;
  sub_1C29DE764(0, (unint64_t *)&qword_1EA31DEC8, MEMORY[0x1E4F27928], MEMORY[0x1E4F19208], MEMORY[0x1E4F19388]);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v110 = (char *)&v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v137 = (char *)&v94 - v29;
  uint64_t v114 = sub_1C2A9D338();
  uint64_t v113 = *(void *)(v114 - 8);
  MEMORY[0x1F4188790](v114);
  uint64_t v111 = (char *)&v94 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DD56C();
  uint64_t v119 = v31;
  uint64_t v115 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v112 = (char *)&v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DD498();
  uint64_t v120 = v33;
  uint64_t v118 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v116 = (char *)&v94 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DD38C();
  uint64_t v140 = v35;
  uint64_t v121 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v117 = (char *)&v94 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DD23C();
  uint64_t v128 = v37;
  uint64_t v123 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v139 = (char *)&v94 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DD0B4();
  uint64_t v130 = v39;
  uint64_t v129 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  v127 = (char *)&v94 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A9D708();
  uint64_t v41 = (uint64_t (*)(uint64_t))(v1 + *(int *)(v15 + 24));
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v43 = v103;
  uint64_t v101 = v17 + 56;
  char v100 = v42;
  v42(v25, 1, 1, v103);
  uint64_t v44 = v1;
  sub_1C2A9D158();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v108 = v25;
  sub_1C29E3564((uint64_t)v25, &qword_1EBB92528, v102);
  uint64_t v98 = sub_1C2A9D708();
  uint64_t v99 = v45;
  int v97 = v46;
  uint64_t v47 = v107;
  sub_1C2A9C838();
  uint64_t v142 = (int *)v15;
  uint64_t v48 = (uint64_t)v104;
  char v102 = v41;
  sub_1C2A9C818();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v47, v43);
  uint64_t v49 = v44;
  uint64_t v50 = v105;
  uint64_t v141 = v49;
  uint64_t v51 = v109;
  sub_1C29E3D28(v49, v109, type metadata accessor for CoreChartTrendLineView);
  uint64_t v52 = v106;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v48, 1, v50) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v138, v51 + v142[5], v50);
    sub_1C29DE554(v51, type metadata accessor for CoreChartTrendLineView);
    sub_1C29E3564(v48, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  }
  else
  {
    sub_1C29DE554(v51, type metadata accessor for CoreChartTrendLineView);
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v138, v48, v50);
  }
  uint64_t v53 = (uint64_t)v108;
  v100(v108, 1, 1, v43);
  uint64_t v54 = v138;
  sub_1C2A9D158();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C29E3564(v53, &qword_1EBB92528, MEMORY[0x1E4F27CA0]);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v50);
  sub_1C2A9D708();
  v148[0] = *(void *)(v141 + v142[8]);
  sub_1C2A9D168();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v55 = v111;
  sub_1C2A9D328();
  uint64_t v56 = v124;
  uint64_t v57 = sub_1C2A9D1C8();
  MEMORY[0x1F4188790](v57);
  sub_1C29DD610();
  uint64_t v59 = v58;
  unint64_t v93 = sub_1C29DD6A4();
  uint64_t v60 = MEMORY[0x1E4F19498];
  uint64_t v61 = v112;
  uint64_t v62 = v114;
  sub_1C2A9D058();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v56, v126);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v55, v62);
  v148[0] = v62;
  v148[1] = v59;
  v148[2] = v60;
  v148[3] = v93;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v64 = v116;
  uint64_t v65 = v119;
  sub_1C2A9D098();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v61, v65);
  sub_1C2A9D538();
  uint64_t v143 = v65;
  uint64_t v144 = OpaqueTypeConformance2;
  uint64_t v66 = swift_getOpaqueTypeConformance2();
  uint64_t v67 = v117;
  uint64_t v68 = v120;
  sub_1C2A9D0D8();
  sub_1C2953EC4((uint64_t)v148);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v64, v68);
  uint64_t v70 = v141;
  uint64_t v69 = v142;
  uint64_t v147 = *(void *)(v141 + v142[10]);
  uint64_t v143 = v68;
  uint64_t v144 = v66;
  uint64_t v71 = swift_getOpaqueTypeConformance2();
  uint64_t v72 = MEMORY[0x1E4F3EB98];
  uint64_t v73 = MEMORY[0x1E4F3EB78];
  uint64_t v74 = v140;
  sub_1C2A9D088();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v67, v74);
  uint64_t v75 = v70 + v69[11];
  uint64_t v76 = v131;
  sub_1C29E3D28(v75, v131, (uint64_t (*)(void))sub_1C29DE6C0);
  uint64_t v77 = sub_1C2A9D528();
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v79 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
  if (v79(v76, 1, v77) != 1)
  {
    uint64_t v80 = v95;
    sub_1C29E3D28(v76, v95, (uint64_t (*)(void))sub_1C29DE6C0);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v78 + 88))(v80, v77) != *MEMORY[0x1E4F3C5B8]) {
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v80, v77);
    }
  }
  sub_1C29DE554(v76, (uint64_t (*)(void))sub_1C29DE6C0);
  uint64_t v143 = v140;
  uint64_t v144 = v72;
  uint64_t v145 = v71;
  uint64_t v146 = v73;
  uint64_t v81 = swift_getOpaqueTypeConformance2();
  uint64_t v82 = v127;
  uint64_t v83 = v128;
  uint64_t v84 = v139;
  sub_1C2A9D0B8();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v84, v83);
  uint64_t v85 = v132;
  sub_1C29E3D28(v75, v132, (uint64_t (*)(void))sub_1C29DE6C0);
  if (v79(v85, 1, v77) == 1) {
    goto LABEL_11;
  }
  uint64_t v86 = v96;
  sub_1C29E3D28(v85, v96, (uint64_t (*)(void))sub_1C29DE6C0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v78 + 88))(v86, v77) != *MEMORY[0x1E4F3C5C0])
  {
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v86, v77);
LABEL_11:
    uint64_t v87 = (unsigned int *)MEMORY[0x1E4F3EFF8];
    goto LABEL_12;
  }
  uint64_t v87 = (unsigned int *)MEMORY[0x1E4F3EFA8];
LABEL_12:
  uint64_t v89 = v135;
  uint64_t v88 = v136;
  uint64_t v90 = v133;
  (*(void (**)(char *, void, uint64_t))(v135 + 104))(v133, *v87, v136);
  sub_1C29DE554(v85, (uint64_t (*)(void))sub_1C29DE6C0);
  uint64_t v143 = v83;
  uint64_t v144 = v81;
  swift_getOpaqueTypeConformance2();
  uint64_t v91 = v130;
  sub_1C2A9D0C8();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v88);
  return (*(uint64_t (**)(char *, uint64_t))(v129 + 8))(v82, v91);
}

uint64_t sub_1C29DABF4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C29E3C38();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DC7AC(0);
  sub_1C29DD9D8();
  sub_1C29E3D28(*a1, (uint64_t)v7, (uint64_t (*)(void))sub_1C29DC7AC);
  sub_1C29DCEFC();
  uint64_t v9 = v8;
  sub_1C29DD0B4();
  sub_1C29DD23C();
  sub_1C29DD38C();
  sub_1C29DD498();
  sub_1C29DD56C();
  sub_1C2A9D338();
  sub_1C29DD610();
  sub_1C29DD6A4();
  uint64_t v10 = &v7[*(int *)(v5 + 56)];
  uint64_t v11 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v10, a1[1], v9);
  sub_1C29DD7B8(0);
  sub_1C29DDDF8();
  uint64_t v12 = (uint64_t)&v7[*(int *)(v5 + 72)];
  sub_1C29E3D28(a1[2], v12, (uint64_t (*)(void))sub_1C29DD7B8);
  sub_1C29E3CC0((uint64_t)v7, a2, (uint64_t (*)(void))sub_1C29DC7AC);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2 + *(int *)(v5 + 56), v10, v9);
  return sub_1C29E3CC0(v12, a2 + *(int *)(v5 + 72), (uint64_t (*)(void))sub_1C29DD7B8);
}

double sub_1C29DADDC(uint64_t *a1, double *a2)
{
  uint64_t v4 = *a1;
  double v5 = COERCE_DOUBLE(sub_1C2A1803C(*a1));
  double v7 = 0.0;
  if (v6) {
    double v8 = 0.0;
  }
  else {
    double v8 = v5;
  }
  double v9 = COERCE_DOUBLE(sub_1C295AE6C(v4));
  char v11 = v10;
  swift_bridgeObjectRelease();
  if (v11) {
    double v12 = 100.0;
  }
  else {
    double v12 = v9;
  }
  if (v12 - v8 < *a2)
  {
    double v13 = *a2 - (v12 - v8);
    if (*((unsigned char *)a2 + *(int *)(type metadata accessor for CoreChartTrendDiagram(0) + 36)) == 1)
    {
      double v12 = v12 + v13;
      goto LABEL_16;
    }
    if (v8 - v13 * 0.5 < 0.0) {
      double v8 = 0.0;
    }
    else {
      double v8 = v8 - v13 * 0.5;
    }
    double v12 = v12 + v13 * 0.5;
  }
  if (!*((unsigned char *)a2 + *(int *)(type metadata accessor for CoreChartTrendDiagram(0) + 36))) {
    double v7 = v8;
  }
LABEL_16:
  sub_1C29E37A0(0, &qword_1EBB91210, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBBE00]);
  uint64_t v14 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v14 + 16) = xmmword_1C2AA8230;
  *(double *)(v14 + 32) = v7;
  *(double *)(v14 + 40) = v12;
  *a1 = v14;
  return result;
}

uint64_t sub_1C29DAF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v73 = a3;
  uint64_t v5 = type metadata accessor for CoreChartTrendLineViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v74 = (uint64_t)v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DC130(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v71 = (uint64_t)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  double v12 = (char *)v67 - v11;
  uint64_t v13 = a1 + *(int *)(type metadata accessor for CoreChartTrendDiagram(0) + 32);
  uint64_t v14 = type metadata accessor for CoreChartTrendViewModel(0);
  uint64_t v70 = v13 + *(int *)(v14 + 32);
  sub_1C29E3D28(v70, (uint64_t)v12, (uint64_t (*)(void))sub_1C29DC130);
  uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v72 = v6 + 48;
  uint64_t v69 = v15;
  unsigned int v16 = v15((uint64_t)v12, 1, v5);
  sub_1C29DE554((uint64_t)v12, (uint64_t (*)(void))sub_1C29DC130);
  v67[1] = a2;
  if (v16 == 1)
  {
    swift_retain();
    uint64_t v75 = a2;
  }
  else
  {
    id v17 = objc_msgSend(self, sel_secondaryLabelColor);
    uint64_t v75 = MEMORY[0x1C8763950](v17);
  }
  uint64_t v18 = (uint64_t *)(v13 + *(int *)(v14 + 28) + (uint64_t)*(int *)(v5 + 24));
  uint64_t v19 = v18[1];
  uint64_t v76 = *v18;
  uint64_t v77 = v19;
  unint64_t v20 = sub_1C295CAF4();
  swift_bridgeObjectRetain();
  v67[0] = v20;
  uint64_t v21 = sub_1C2A9D9A8();
  uint64_t v22 = v5;
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  sub_1C2A9D948();
  uint64_t v27 = sub_1C2A9D978();
  uint64_t v29 = v28;
  char v31 = v30;
  swift_release();
  uint64_t v32 = v21;
  uint64_t v33 = v22;
  sub_1C2980010(v32, v24, v26);
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v34 = sub_1C2A9D968();
  uint64_t v36 = v35;
  int v68 = v37;
  uint64_t v39 = v38;
  swift_release();
  sub_1C2980010(v27, v29, v31 & 1);
  swift_bridgeObjectRelease();
  uint64_t v40 = v71;
  sub_1C29E3D28(v70, v71, (uint64_t (*)(void))sub_1C29DC130);
  if (v69(v40, 1, v22) == 1)
  {
    sub_1C29DE554(v40, (uint64_t (*)(void))sub_1C29DC130);
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v43 = 0;
    uint64_t v44 = 0;
  }
  else
  {
    uint64_t v45 = v74;
    sub_1C29E3CC0(v40, v74, type metadata accessor for CoreChartTrendLineViewModel);
    int v46 = (uint64_t *)(v45 + *(int *)(v33 + 24));
    uint64_t v47 = v46[1];
    uint64_t v76 = *v46;
    uint64_t v77 = v47;
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1C2A9D9A8();
    uint64_t v50 = v49;
    char v52 = v51 & 1;
    sub_1C2A9D948();
    uint64_t v53 = sub_1C2A9D978();
    uint64_t v54 = v39;
    uint64_t v56 = v55;
    uint64_t v71 = v36;
    uint64_t v72 = v34;
    char v58 = v57;
    swift_release();
    sub_1C2980010(v48, v50, v52);
    swift_bridgeObjectRelease();
    uint64_t v41 = sub_1C2A9D968();
    uint64_t v42 = v59;
    uint64_t v44 = v60;
    uint64_t v43 = v61 & 1;
    uint64_t v62 = v56;
    uint64_t v39 = v54;
    char v63 = v58 & 1;
    uint64_t v34 = v72;
    sub_1C2980010(v53, v62, v63);
    uint64_t v36 = v71;
    swift_bridgeObjectRelease();
    sub_1C29DE554(v74, type metadata accessor for CoreChartTrendLineViewModel);
  }
  char v64 = v68 & 1;
  sub_1C2980168(v34, v36, v68 & 1);
  swift_bridgeObjectRetain();
  sub_1C2980178(v41, v42, v43, v44);
  swift_release();
  uint64_t v65 = v73;
  *uint64_t v73 = v34;
  v65[1] = v36;
  *((unsigned char *)v65 + 16) = v64;
  v65[3] = v39;
  v65[4] = 0;
  *((unsigned char *)v65 + 40) = 1;
  v65[6] = v41;
  v65[7] = v42;
  v65[8] = v43;
  v65[9] = v44;
  sub_1C2980234(v41, v42, v43, v44);
  sub_1C2980010(v34, v36, v64);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C29DB438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a1;
  uint64_t v79 = a2;
  uint64_t v3 = sub_1C2A9D5D8();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v77 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1C2A9DBD8();
  uint64_t v76 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v75 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DE6C0(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v66 = (uint64_t)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v74 = (char *)&v65 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v65 = (uint64_t)&v65 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v70 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F3E0A0];
  uint64_t v71 = (char *)&v65 - v13;
  sub_1C29DC164(0, &qword_1EA31E2C8, MEMORY[0x1E4F3E0A0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  unsigned int v16 = (char *)&v65 - v15;
  uint64_t v17 = sub_1C2A9D958();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  unint64_t v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DD610();
  uint64_t v72 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v73 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for CoreChartTrendLineView(0);
  uint64_t v23 = (uint64_t *)(a1 + *(int *)(v68 + 36));
  uint64_t v24 = v23[1];
  uint64_t v80 = *v23;
  uint64_t v81 = v24;
  sub_1C295CAF4();
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1C2A9D9A8();
  uint64_t v27 = v26;
  uint64_t v67 = v28;
  char v30 = v29 & 1;
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4F3E178], v17);
  uint64_t v31 = *MEMORY[0x1E4F3E090];
  uint64_t v32 = sub_1C2A9D8A8();
  uint64_t v33 = *(void *)(v32 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 104))(v16, v31, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v16, 0, 1, v32);
  sub_1C2A9D908();
  sub_1C29E3564((uint64_t)v16, &qword_1EA31E2C8, v70);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  sub_1C2A9D8B8();
  sub_1C2A9D918();
  swift_release();
  uint64_t v34 = sub_1C2A9D978();
  uint64_t v36 = v35;
  LOBYTE(v17) = v37;
  swift_release();
  sub_1C2980010(v25, v27, v30);
  swift_bridgeObjectRelease();
  uint64_t v39 = v68;
  uint64_t v38 = v69;
  uint64_t v40 = sub_1C2A9D968();
  uint64_t v42 = v41;
  LODWORD(v70) = v43;
  uint64_t v45 = v44;
  sub_1C2980010(v34, v36, v17 & 1);
  uint64_t v46 = (uint64_t)v71;
  swift_bridgeObjectRelease();
  uint64_t v47 = v38 + *(int *)(v39 + 44);
  sub_1C29E3D28(v47, v46, (uint64_t (*)(void))sub_1C29DE6C0);
  uint64_t v48 = sub_1C2A9D528();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  double v51 = 1.0;
  if (v50(v46, 1, v48) == 1)
  {
    uint64_t v52 = v46;
  }
  else
  {
    uint64_t v52 = v46;
    uint64_t v53 = v46;
    uint64_t v54 = v65;
    sub_1C29E3D28(v53, v65, (uint64_t (*)(void))sub_1C29DE6C0);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v49 + 88))(v54, v48) == *MEMORY[0x1E4F3C5B8]) {
      double v51 = 0.9;
    }
    else {
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v54, v48);
    }
  }
  uint64_t v55 = (uint64_t)v74;
  sub_1C29DE554(v52, (uint64_t (*)(void))sub_1C29DE6C0);
  sub_1C29E3D28(v47, v55, (uint64_t (*)(void))sub_1C29DE6C0);
  if (v50(v55, 1, v48) == 1) {
    goto LABEL_10;
  }
  uint64_t v56 = v66;
  sub_1C29E3D28(v55, v66, (uint64_t (*)(void))sub_1C29DE6C0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v49 + 88))(v56, v48) != *MEMORY[0x1E4F3C5C0])
  {
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v56, v48);
LABEL_10:
    char v57 = (unsigned int *)MEMORY[0x1E4F3EFF8];
    goto LABEL_11;
  }
  char v57 = (unsigned int *)MEMORY[0x1E4F3EFA8];
LABEL_11:
  uint64_t v59 = v75;
  uint64_t v58 = v76;
  uint64_t v60 = v78;
  (*(void (**)(char *, void, uint64_t))(v76 + 104))(v75, *v57, v78);
  char v61 = v70 & 1;
  sub_1C29DE554(v55, (uint64_t (*)(void))sub_1C29DE6C0);
  uint64_t v62 = (uint64_t)v77;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v77, v59, v60);
  uint64_t v63 = (uint64_t)v73;
  sub_1C29E3D28(v62, (uint64_t)&v73[*(int *)(v72 + 36)], MEMORY[0x1E4F3CE18]);
  *(void *)uint64_t v63 = v40;
  *(void *)(v63 + 8) = v42;
  *(unsigned char *)(v63 + 16) = v61;
  *(void *)(v63 + 24) = v45;
  *(double *)(v63 + 32) = v51;
  sub_1C2980168(v40, v42, v61);
  swift_bridgeObjectRetain();
  sub_1C29DE554(v62, MEMORY[0x1E4F3CE18]);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
  sub_1C2980010(v40, v42, v61);
  swift_bridgeObjectRelease();
  return sub_1C29E3CC0(v63, v79, (uint64_t (*)(void))sub_1C29DD610);
}

uint64_t sub_1C29DBC54()
{
  return sub_1C2A9D618();
}

uint64_t sub_1C29DBC78()
{
  return sub_1C2A9D618();
}

uint64_t sub_1C29DBC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C29DBCC8(a1, a2, a3, a4, MEMORY[0x1E4F3C5D0], MEMORY[0x1E4F3CF08]);
}

uint64_t sub_1C29DBCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_1C29DBD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C29DBCC8(a1, a2, a3, a4, MEMORY[0x1E4F3C5D0], MEMORY[0x1E4F3CF08]);
}

void sub_1C29DBDD8(uint64_t a1)
{
}

uint64_t type metadata accessor for CoreChartTrendViewModel(uint64_t a1)
{
  return sub_1C296F4B8(a1, qword_1EBB8FE18);
}

uint64_t sub_1C29DBE2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C2A9D688();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DBDD8(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29E3D28(v2, (uint64_t)v10, (uint64_t (*)(void))sub_1C29DBDD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1C2A9D528();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = sub_1C2A9E0B8();
    uint64_t v14 = sub_1C2A9D848();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      unsigned int v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v19[1] = a1;
      uint64_t v18 = v17;
      uint64_t v20 = v17;
      *(_DWORD *)unsigned int v16 = 136315138;
      v19[2] = sub_1C2957168(0x686353726F6C6F43, 0xEB00000000656D65, &v20);
      sub_1C2A9E358();
      _os_log_impl(&dword_1C292A000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v18, -1, -1);
      MEMORY[0x1C87656F0](v16, -1, -1);
    }

    sub_1C2A9D678();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t type metadata accessor for CoreChartTrendDataElement(uint64_t a1)
{
  return sub_1C296F4B8(a1, (uint64_t *)&unk_1EA31E860);
}

uint64_t type metadata accessor for CoreChartTrendLineViewModel(uint64_t a1)
{
  return sub_1C296F4B8(a1, qword_1EBB91358);
}

void sub_1C29DC130(uint64_t a1)
{
}

void sub_1C29DC164(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C29DC1C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_1C29DC230(uint64_t a1)
{
}

void sub_1C29DC264()
{
  if (!qword_1EA31E6D8)
  {
    sub_1C29DC2F8(255);
    sub_1C29E3830(&qword_1EA31E818, sub_1C29DC2F8);
    unint64_t v0 = sub_1C2A9DB58();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31E6D8);
    }
  }
}

void sub_1C29DC2F8(uint64_t a1)
{
}

void sub_1C29DC32C()
{
  if (!qword_1EA31E6E8)
  {
    sub_1C29DE764(255, &qword_1EA31E6F0, (uint64_t (*)(uint64_t))sub_1C29DC3D4, MEMORY[0x1E4F3CE48], MEMORY[0x1E4F3CC10]);
    sub_1C29DDFCC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA31E6E8);
    }
  }
}

void sub_1C29DC3D4()
{
  if (!qword_1EA31E6F8)
  {
    sub_1C29DC528();
    sub_1C2A9D208();
    sub_1C2A9D218();
    sub_1C29DC614();
    sub_1C29DC6C8();
    sub_1C29E3830(&qword_1EA31E808, (void (*)(uint64_t))sub_1C29DC6C8);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E6F8);
    }
  }
}

void sub_1C29DC528()
{
  if (!qword_1EA31E700)
  {
    sub_1C29DC614();
    sub_1C29DC6C8();
    sub_1C29E3830(&qword_1EA31E808, (void (*)(uint64_t))sub_1C29DC6C8);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E700);
    }
  }
}

void sub_1C29DC614()
{
  if (!qword_1EA31E708)
  {
    sub_1C29DC6C8();
    sub_1C29E3830(&qword_1EA31E808, (void (*)(uint64_t))sub_1C29DC6C8);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E708);
    }
  }
}

void sub_1C29DC6C8()
{
  if (!qword_1EA31E710)
  {
    sub_1C29DC72C();
    sub_1C29DD7EC();
    unint64_t v0 = sub_1C2A9D278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31E710);
    }
  }
}

void sub_1C29DC72C()
{
  if (!qword_1EA31E718)
  {
    sub_1C29DC7AC(255);
    sub_1C29DCEFC();
    sub_1C29DD7B8(255);
    unint64_t v0 = sub_1C2A9D038();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31E718);
    }
  }
}

void sub_1C29DC7AC(uint64_t a1)
{
}

void sub_1C29DC7E0(uint64_t a1)
{
}

void sub_1C29DC828(uint64_t a1)
{
}

void sub_1C29DC870(uint64_t a1)
{
}

void sub_1C29DC890(uint64_t a1)
{
}

void sub_1C29DC8C4()
{
  if (!qword_1EA31E740)
  {
    sub_1C2A9D298();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E740);
    }
  }
}

void sub_1C29DC95C(uint64_t a1)
{
}

void sub_1C29DC97C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_1C29DC890(255);
    sub_1C2A9C6E8();
    a3(255);
    sub_1C29E3830((unint64_t *)&qword_1EA31DCD8, sub_1C29DC890);
    sub_1C29E3830(&qword_1EA31DD00, MEMORY[0x1E4F27928]);
    unint64_t v5 = sub_1C2A9DB98();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C29DCA80()
{
  if (!qword_1EA31E750)
  {
    sub_1C29DCBD8();
    sub_1C29DCCEC();
    sub_1C2A9D308();
    sub_1C29DCDC8();
    sub_1C29DCE54();
    sub_1C29DCEA8();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E750);
    }
  }
}

void sub_1C29DCBD8()
{
  if (!qword_1EA31E758)
  {
    sub_1C29DCCEC();
    sub_1C2A9D308();
    sub_1C29DCDC8();
    sub_1C29DCE54();
    sub_1C29DCEA8();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E758);
    }
  }
}

void sub_1C29DCCEC()
{
  if (!qword_1EA31E760)
  {
    sub_1C2A9D308();
    sub_1C29DCDC8();
    sub_1C29DCE54();
    sub_1C29DCEA8();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E760);
    }
  }
}

void sub_1C29DCDC8()
{
  if (!qword_1EA31E768)
  {
    sub_1C29DCE54();
    sub_1C29DCEA8();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E768);
    }
  }
}

unint64_t sub_1C29DCE54()
{
  unint64_t result = qword_1EA31E770;
  if (!qword_1EA31E770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E770);
  }
  return result;
}

unint64_t sub_1C29DCEA8()
{
  unint64_t result = qword_1EBB8E810;
  if (!qword_1EBB8E810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E810);
  }
  return result;
}

void sub_1C29DCEFC()
{
  if (!qword_1EA31E778)
  {
    sub_1C29DD0B4();
    sub_1C29DD23C();
    sub_1C29DD38C();
    sub_1C29DD498();
    sub_1C29DD56C();
    sub_1C2A9D338();
    sub_1C29DD610();
    sub_1C29DD6A4();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E778);
    }
  }
}

void sub_1C29DD0B4()
{
  if (!qword_1EA31E780)
  {
    sub_1C29DD23C();
    sub_1C29DD38C();
    sub_1C29DD498();
    sub_1C29DD56C();
    sub_1C2A9D338();
    sub_1C29DD610();
    sub_1C29DD6A4();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E780);
    }
  }
}

void sub_1C29DD23C()
{
  if (!qword_1EA31E788)
  {
    sub_1C29DD38C();
    sub_1C29DD498();
    sub_1C29DD56C();
    sub_1C2A9D338();
    sub_1C29DD610();
    sub_1C29DD6A4();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E788);
    }
  }
}

void sub_1C29DD38C()
{
  if (!qword_1EA31E790)
  {
    sub_1C29DD498();
    sub_1C29DD56C();
    sub_1C2A9D338();
    sub_1C29DD610();
    sub_1C29DD6A4();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E790);
    }
  }
}

void sub_1C29DD498()
{
  if (!qword_1EA31E798)
  {
    sub_1C29DD56C();
    sub_1C2A9D338();
    sub_1C29DD610();
    sub_1C29DD6A4();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E798);
    }
  }
}

void sub_1C29DD56C()
{
  if (!qword_1EA31E7A0)
  {
    sub_1C2A9D338();
    sub_1C29DD610();
    sub_1C29DD6A4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E7A0);
    }
  }
}

void sub_1C29DD610()
{
  if (!qword_1EA31E7A8)
  {
    sub_1C29DE6F4(255, &qword_1EA31E7B0, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3CA98], MEMORY[0x1E4F3CC10]);
    sub_1C2A9D5D8();
    unint64_t v0 = sub_1C2A9D5B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31E7A8);
    }
  }
}

unint64_t sub_1C29DD6A4()
{
  unint64_t result = qword_1EA31E7B8;
  if (!qword_1EA31E7B8)
  {
    sub_1C29DD610();
    sub_1C29DD71C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E7B8);
  }
  return result;
}

unint64_t sub_1C29DD71C()
{
  unint64_t result = qword_1EA31E7C0;
  if (!qword_1EA31E7C0)
  {
    sub_1C29DE6F4(255, &qword_1EA31E7B0, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3CA98], MEMORY[0x1E4F3CC10]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E7C0);
  }
  return result;
}

void sub_1C29DD7B8(uint64_t a1)
{
}

unint64_t sub_1C29DD7EC()
{
  unint64_t result = qword_1EA31E7D0;
  if (!qword_1EA31E7D0)
  {
    sub_1C29DC72C();
    sub_1C29DD9D8();
    sub_1C29DD0B4();
    sub_1C29DD23C();
    sub_1C29DD38C();
    sub_1C29DD498();
    sub_1C29DD56C();
    sub_1C2A9D338();
    sub_1C29DD610();
    sub_1C29DD6A4();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1C29DDDF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E7D0);
  }
  return result;
}

unint64_t sub_1C29DD9D8()
{
  unint64_t result = qword_1EA31E7D8;
  if (!qword_1EA31E7D8)
  {
    sub_1C29DC7AC(255);
    sub_1C29DDAD4(&qword_1EA31E7E0, sub_1C29DC7E0, (void (*)(void))sub_1C29DDA8C, (void (*)(void))sub_1C2952728);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E7D8);
  }
  return result;
}

uint64_t sub_1C29DDA8C()
{
  return sub_1C29DDAD4(&qword_1EA31E7E8, sub_1C29DC828, (void (*)(void))sub_1C29DDB60, (void (*)(void))sub_1C29DDC14);
}

uint64_t sub_1C29DDAD4(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C29DDB60()
{
  unint64_t result = qword_1EA31E7F0;
  if (!qword_1EA31E7F0)
  {
    sub_1C29DC870(255);
    sub_1C2A9D298();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E7F0);
  }
  return result;
}

unint64_t sub_1C29DDC14()
{
  unint64_t result = qword_1EA31E7F8;
  if (!qword_1EA31E7F8)
  {
    sub_1C29DC95C(255);
    sub_1C29DCBD8();
    sub_1C29DCCEC();
    sub_1C2A9D308();
    sub_1C29DCDC8();
    sub_1C29DCE54();
    sub_1C29DCEA8();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E7F8);
  }
  return result;
}

uint64_t sub_1C29DDD88(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C29DDDF8()
{
  unint64_t result = qword_1EA31E800;
  if (!qword_1EA31E800)
  {
    sub_1C29DD7B8(255);
    sub_1C29DD0B4();
    sub_1C29DD23C();
    sub_1C29DD38C();
    sub_1C29DD498();
    sub_1C29DD56C();
    sub_1C2A9D338();
    sub_1C29DD610();
    sub_1C29DD6A4();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E800);
  }
  return result;
}

void sub_1C29DDFCC()
{
  if (!qword_1EA31E810)
  {
    sub_1C29DE060(255);
    sub_1C29E3830(&qword_1EBB8E818, sub_1C29DE060);
    unint64_t v0 = sub_1C2A9DB48();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31E810);
    }
  }
}

void sub_1C29DE060(uint64_t a1)
{
}

void sub_1C29DE094()
{
  if (!qword_1EBB8E808)
  {
    sub_1C29E37A0(255, &qword_1EBB8E800, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EBB8E808);
    }
  }
}

void sub_1C29DE128()
{
  if (!qword_1EA31E820)
  {
    sub_1C29DC264();
    sub_1C29DE6F4(255, &qword_1EBB8E360, MEMORY[0x1E4F3EB98], MEMORY[0x1E4F3EB78], MEMORY[0x1E4F3DBF8]);
    unint64_t v0 = sub_1C2A9D5B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31E820);
    }
  }
}

void sub_1C29DE1BC(uint64_t a1)
{
}

void sub_1C29DE204()
{
  if (!qword_1EBB8E788)
  {
    sub_1C2A9D5C8();
    sub_1C29E3830(&qword_1EBB8E7C8, MEMORY[0x1E4F3CDB8]);
    unint64_t v0 = sub_1C2A9D548();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8E788);
    }
  }
}

void sub_1C29DE298()
{
  if (!qword_1EA31E830)
  {
    sub_1C29DE1BC(255);
    sub_1C2973A20();
    sub_1C29DE3B0(&qword_1EA31E838, sub_1C29DE1BC, (void (*)(void))sub_1C29DE43C, (void (*)(void))sub_1C29DE4B8);
    sub_1C29E3830(&qword_1EBB8E838, (void (*)(uint64_t))sub_1C2973A20);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E830);
    }
  }
}

uint64_t sub_1C29DE3B0(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C29DE43C()
{
  return sub_1C29DE3B0(&qword_1EA31E840, (void (*)(uint64_t))sub_1C29DE128, (void (*)(void))sub_1C29DE484, (void (*)(void))sub_1C297FF58);
}

uint64_t sub_1C29DE484()
{
  return sub_1C29E3830(&qword_1EA31E848, (void (*)(uint64_t))sub_1C29DC264);
}

uint64_t sub_1C29DE4B8()
{
  return sub_1C29E3830(&qword_1EBB8E780, (void (*)(uint64_t))sub_1C29DE204);
}

void sub_1C29DE4EC()
{
  if (!qword_1EA31E858)
  {
    sub_1C29DC2F8(255);
    unint64_t v0 = sub_1C2A9D578();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31E858);
    }
  }
}

uint64_t sub_1C29DE554(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C29DE5B4()
{
  return sub_1C2A9D628();
}

uint64_t sub_1C29DE5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C29DBCC8(a1, a2, a3, a4, MEMORY[0x1E4F3CBF0], MEMORY[0x1E4F3D010]);
}

uint64_t sub_1C29DE618(uint64_t a1, uint64_t a2)
{
  sub_1C29E3AD8(0, &qword_1EA31E850, (uint64_t (*)(uint64_t))sub_1C29DE298, (uint64_t (*)(uint64_t))sub_1C29DC230, MEMORY[0x1E4F3CC10]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C29DE6C0(uint64_t a1)
{
}

void sub_1C29DE6F4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t type metadata accessor for CoreChartTrendLineView(uint64_t a1)
{
  return sub_1C296F4B8(a1, (uint64_t *)&unk_1EA31E870);
}

void sub_1C29DE764(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C29DE7D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C29DB438(*(void *)(v1 + 16), a1);
}

uint64_t sub_1C29DE7D8()
{
  return sub_1C29E3830(&qword_1EA31DD00, MEMORY[0x1E4F27928]);
}

uint64_t sub_1C29DE820()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for CoreChartTrendDataElement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2A9C6E8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    *(void *)uint64_t v9 = *(void *)v10;
    v9[8] = v10[8];
  }
  return a1;
}

uint64_t destroy for CoreChartTrendDataElement(uint64_t a1)
{
  uint64_t v2 = sub_1C2A9C6E8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for CoreChartTrendDataElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C6E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t assignWithCopy for CoreChartTrendDataElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C6E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  return a1;
}

uint64_t initializeWithTake for CoreChartTrendDataElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C6E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t assignWithTake for CoreChartTrendDataElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C6E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreChartTrendDataElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29DEBEC);
}

uint64_t sub_1C29DEBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2A9C6E8();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CoreChartTrendDataElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29DEC6C);
}

uint64_t sub_1C29DEC6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2A9C6E8();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1C29DECDC()
{
  uint64_t result = sub_1C2A9C6E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CoreChartTrendLineViewModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2A9C398();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    char v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[7];
    os_log_type_t v13 = (uint64_t *)((char *)a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for CoreChartTrendLineViewModel(uint64_t a1)
{
  uint64_t v2 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CoreChartTrendLineViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  os_log_type_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CoreChartTrendLineViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for CoreChartTrendLineViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for CoreChartTrendLineViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  os_log_type_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  void *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreChartTrendLineViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29DF1D8);
}

uint64_t sub_1C29DF1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C398();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for CoreChartTrendLineViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29DF2B0);
}

uint64_t sub_1C29DF2B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2A9C398();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C29DF370()
{
  uint64_t result = sub_1C2A9C398();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for CoreChartTrendViewModel(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = (void *)a2[1];
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a3[7];
    uint64_t v9 = (char *)(a1 + v8);
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C2A9C398();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    id v13 = v7;
    uint64_t v39 = v12;
    v12(v9, v10, v11);
    uint64_t v14 = (int *)type metadata accessor for CoreChartTrendLineViewModel(0);
    *(void *)&v9[v14[5]] = *(void *)&v10[v14[5]];
    uint64_t v15 = v14[6];
    uint64_t v16 = &v9[v15];
    uint64_t v17 = &v10[v15];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = v14[7];
    uint64_t v20 = &v9[v19];
    uint64_t v21 = &v10[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    uint64_t v23 = a3[8];
    __dst = (char *)v4 + v23;
    uint64_t v24 = (char *)a2 + v23;
    uint64_t v25 = *((void *)v14 - 1);
    uint64_t v26 = *(unsigned int (**)(char *, uint64_t, int *))(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26(v24, 1, v14))
    {
      sub_1C29DC130(0);
      memcpy(__dst, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      v39(__dst, v24, v11);
      *(void *)&__dst[v14[5]] = *(void *)&v24[v14[5]];
      uint64_t v29 = v14[6];
      char v30 = &__dst[v29];
      uint64_t v31 = &v24[v29];
      uint64_t v32 = *((void *)v31 + 1);
      *(void *)char v30 = *(void *)v31;
      *((void *)v30 + 1) = v32;
      uint64_t v33 = v14[7];
      uint64_t v34 = &__dst[v33];
      uint64_t v35 = &v24[v33];
      uint64_t v36 = *((void *)v35 + 1);
      *(void *)uint64_t v34 = *(void *)v35;
      *((void *)v34 + 1) = v36;
      char v37 = *(void (**)(char *, void, uint64_t, int *))(v25 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37(__dst, 0, 1, v14);
    }
    *(void *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for CoreChartTrendViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1C2A9C398();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = type metadata accessor for CoreChartTrendLineViewModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(a2 + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v8, 1, v7))
  {
    v6(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CoreChartTrendViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = sub_1C2A9C398();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v6;
  uint64_t v38 = v11;
  v11(v8, v9, v10);
  id v13 = (int *)type metadata accessor for CoreChartTrendLineViewModel(0);
  *(void *)&v8[v13[5]] = *(void *)&v9[v13[5]];
  uint64_t v14 = v13[6];
  uint64_t v15 = &v8[v14];
  uint64_t v16 = &v9[v14];
  uint64_t v17 = *((void *)v16 + 1);
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = v17;
  uint64_t v18 = v13[7];
  uint64_t v19 = &v8[v18];
  uint64_t v20 = &v9[v18];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  uint64_t v39 = a3;
  uint64_t v22 = *(int *)(a3 + 32);
  uint64_t v23 = (char *)(a1 + v22);
  uint64_t v24 = (char *)(a2 + v22);
  uint64_t v25 = *((void *)v13 - 1);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, int *))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v24, 1, v13))
  {
    sub_1C29DC130(0);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v38(v23, v24, v10);
    *(void *)&v23[v13[5]] = *(void *)&v24[v13[5]];
    uint64_t v28 = v13[6];
    uint64_t v29 = &v23[v28];
    char v30 = &v24[v28];
    uint64_t v31 = *((void *)v30 + 1);
    *(void *)uint64_t v29 = *(void *)v30;
    *((void *)v29 + 1) = v31;
    uint64_t v32 = v13[7];
    uint64_t v33 = &v23[v32];
    uint64_t v34 = &v24[v32];
    uint64_t v35 = *((void *)v34 + 1);
    *(void *)uint64_t v33 = *(void *)v34;
    *((void *)v33 + 1) = v35;
    uint64_t v36 = *(void (**)(char *, void, uint64_t, int *))(v25 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36(v23, 0, 1, v13);
  }
  *(void *)(a1 + *(int *)(v39 + 36)) = *(void *)(a2 + *(int *)(v39 + 36));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CoreChartTrendViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v6;
  id v8 = v6;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1C2A9C398();
  uint64_t v42 = *(void *)(v12 - 8);
  int v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 24);
  v43(v10, v11, v12);
  id v13 = (int *)type metadata accessor for CoreChartTrendLineViewModel(0);
  *(void *)(v10 + v13[5]) = *(void *)(v11 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = (void *)(v10 + v14);
  uint64_t v16 = (void *)(v11 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v13[7];
  uint64_t v18 = (void *)(v10 + v17);
  uint64_t v19 = (void *)(v11 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3;
  uint64_t v45 = a2;
  uint64_t v20 = *(int *)(a3 + 32);
  uint64_t v21 = (char *)(a1 + v20);
  uint64_t v22 = (char *)(a2 + v20);
  uint64_t v23 = *((void *)v13 - 1);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v23 + 48);
  int v25 = v24(a1 + v20, 1, v13);
  int v26 = v24((uint64_t)v22, 1, v13);
  if (!v25)
  {
    if (!v26)
    {
      v43((uint64_t)v21, (uint64_t)v22, v12);
      *(void *)&v21[v13[5]] = *(void *)&v22[v13[5]];
      uint64_t v36 = v13[6];
      char v37 = &v21[v36];
      uint64_t v38 = &v22[v36];
      *(void *)char v37 = *(void *)v38;
      *((void *)v37 + 1) = *((void *)v38 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v39 = v13[7];
      uint64_t v40 = &v21[v39];
      uint64_t v41 = &v22[v39];
      *(void *)uint64_t v40 = *(void *)v41;
      *((void *)v40 + 1) = *((void *)v41 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1C29DE554((uint64_t)v21, type metadata accessor for CoreChartTrendLineViewModel);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    sub_1C29DC130(0);
    memcpy(v21, v22, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v21, v22, v12);
  *(void *)&v21[v13[5]] = *(void *)&v22[v13[5]];
  uint64_t v27 = v13[6];
  uint64_t v28 = &v21[v27];
  uint64_t v29 = &v22[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  uint64_t v30 = v13[7];
  uint64_t v31 = &v21[v30];
  uint64_t v32 = &v22[v30];
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  uint64_t v33 = *(void (**)(char *, void, uint64_t, int *))(v23 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33(v21, 0, 1, v13);
LABEL_7:
  *(void *)(a1 + *(int *)(v44 + 36)) = *(void *)(v45 + *(int *)(v44 + 36));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for CoreChartTrendViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C398();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = (int *)type metadata accessor for CoreChartTrendLineViewModel(0);
  *(void *)(v7 + v11[5]) = *(void *)(v8 + v11[5]);
  *(_OWORD *)(v7 + v11[6]) = *(_OWORD *)(v8 + v11[6]);
  *(_OWORD *)(v7 + v11[7]) = *(_OWORD *)(v8 + v11[7]);
  uint64_t v12 = a3[8];
  id v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v15 + 48))(a2 + v12, 1, v11))
  {
    sub_1C29DC130(0);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v10((uint64_t)v13, (uint64_t)v14, v9);
    *(void *)&v13[v11[5]] = *(void *)&v14[v11[5]];
    *(_OWORD *)&v13[v11[6]] = *(_OWORD *)&v14[v11[6]];
    *(_OWORD *)&v13[v11[7]] = *(_OWORD *)&v14[v11[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v13, 0, 1, v11);
  }
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for CoreChartTrendViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v42 = sub_1C2A9C398();
  uint64_t v40 = *(void *)(v42 - 8);
  uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v40 + 40);
  v41(v8, v9);
  uint64_t v10 = (int *)type metadata accessor for CoreChartTrendLineViewModel(0);
  *(void *)(v8 + v10[5]) = *(void *)(v9 + v10[5]);
  uint64_t v11 = v10[6];
  uint64_t v12 = (void *)(v8 + v11);
  id v13 = (uint64_t *)(v9 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v10[7];
  uint64_t v17 = (void *)(v8 + v16);
  uint64_t v18 = (uint64_t *)(v9 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = (char *)(a1 + v21);
  uint64_t v23 = (char *)(a2 + v21);
  uint64_t v24 = *((void *)v10 - 1);
  int v25 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v24 + 48);
  int v26 = v25(a1 + v21, 1, v10);
  int v27 = v25((uint64_t)v23, 1, v10);
  if (!v26)
  {
    if (!v27)
    {
      ((void (*)(char *, char *, uint64_t))v41)(v22, v23, v42);
      *(void *)&v22[v10[5]] = *(void *)&v23[v10[5]];
      uint64_t v30 = v10[6];
      uint64_t v31 = &v22[v30];
      uint64_t v32 = &v23[v30];
      uint64_t v34 = *(void *)v32;
      uint64_t v33 = *((void *)v32 + 1);
      *(void *)uint64_t v31 = v34;
      *((void *)v31 + 1) = v33;
      swift_bridgeObjectRelease();
      uint64_t v35 = v10[7];
      uint64_t v36 = &v22[v35];
      char v37 = &v23[v35];
      uint64_t v39 = *(void *)v37;
      uint64_t v38 = *((void *)v37 + 1);
      *(void *)uint64_t v36 = v39;
      *((void *)v36 + 1) = v38;
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1C29DE554((uint64_t)v22, type metadata accessor for CoreChartTrendLineViewModel);
    goto LABEL_6;
  }
  if (v27)
  {
LABEL_6:
    sub_1C29DC130(0);
    memcpy(v22, v23, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v22, v23, v42);
  *(void *)&v22[v10[5]] = *(void *)&v23[v10[5]];
  *(_OWORD *)&v22[v10[6]] = *(_OWORD *)&v23[v10[6]];
  *(_OWORD *)&v22[v10[7]] = *(_OWORD *)&v23[v10[7]];
  (*(void (**)(char *, void, uint64_t, int *))(v24 + 56))(v22, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreChartTrendViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29E01F8);
}

uint64_t sub_1C29E01F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for CoreChartTrendLineViewModel(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_1C29DC130(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for CoreChartTrendViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29E0338);
}

uint64_t sub_1C29E0338(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for CoreChartTrendLineViewModel(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_1C29DC130(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1C29E0464()
{
  type metadata accessor for CoreChartTrendLineViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_1C29DC130(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for CoreChartTrendDiagram(void *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_1C29DBDD8(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1C2A9D528();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (void *)((char *)v4 + v12);
    uint64_t v15 = (void *)((char *)a2 + v12);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    *uint64_t v14 = v17;
    v14[1] = v16;
    uint64_t v18 = (void *)((char *)v4 + v13);
    uint64_t v19 = (void *)((char *)a2 + v13);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    uint64_t v63 = a2;
    *uint64_t v18 = v21;
    v18[1] = v20;
    uint64_t v62 = a3;
    uint64_t v22 = a3[8];
    uint64_t v23 = (char *)v4 + v22;
    uint64_t v24 = (char *)a2 + v22;
    *(_DWORD *)uint64_t v23 = *(_DWORD *)((char *)a2 + v22);
    int v25 = *(void **)((char *)a2 + v22 + 8);
    *((void *)v23 + 1) = v25;
    v23[16] = *((unsigned char *)a2 + v22 + 16);
    uint64_t v26 = type metadata accessor for CoreChartTrendViewModel(0);
    uint64_t v27 = *(int *)(v26 + 28);
    uint64_t v28 = &v23[v27];
    uint64_t v29 = &v24[v27];
    uint64_t v30 = sub_1C2A9C398();
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
    swift_retain();
    swift_retain();
    id v32 = v25;
    uint64_t v61 = v30;
    uint64_t v33 = v30;
    uint64_t v34 = v31;
    v31(v28, v29, v33);
    uint64_t v35 = (int *)type metadata accessor for CoreChartTrendLineViewModel(0);
    *(void *)&v28[v35[5]] = *(void *)&v29[v35[5]];
    uint64_t v36 = v35[6];
    char v37 = &v28[v36];
    uint64_t v38 = &v29[v36];
    uint64_t v39 = *((void *)v38 + 1);
    *(void *)char v37 = *(void *)v38;
    *((void *)v37 + 1) = v39;
    uint64_t v40 = v35[7];
    uint64_t v41 = &v28[v40];
    uint64_t v42 = &v29[v40];
    uint64_t v43 = *((void *)v42 + 1);
    *(void *)uint64_t v41 = *(void *)v42;
    *((void *)v41 + 1) = v43;
    uint64_t v64 = v26;
    uint64_t v44 = *(int *)(v26 + 32);
    uint64_t v45 = &v23[v44];
    uint64_t v46 = &v24[v44];
    uint64_t v60 = *((void *)v35 - 1);
    uint64_t v47 = *(unsigned int (**)(char *, uint64_t, int *))(v60 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v47(v46, 1, v35))
    {
      sub_1C29DC130(0);
      memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      v34(v45, v46, v61);
      *(void *)&v45[v35[5]] = *(void *)&v46[v35[5]];
      uint64_t v49 = v35[6];
      uint64_t v50 = &v45[v49];
      double v51 = &v46[v49];
      uint64_t v52 = *((void *)v51 + 1);
      *(void *)uint64_t v50 = *(void *)v51;
      *((void *)v50 + 1) = v52;
      uint64_t v53 = v35[7];
      uint64_t v54 = &v45[v53];
      uint64_t v55 = &v46[v53];
      uint64_t v56 = *((void *)v55 + 1);
      *(void *)uint64_t v54 = *(void *)v55;
      *((void *)v54 + 1) = v56;
      char v57 = *(void (**)(char *, void, uint64_t, int *))(v60 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v57(v45, 0, 1, v35);
    }
    *(void *)&v23[*(int *)(v64 + 36)] = *(void *)&v24[*(int *)(v64 + 36)];
    uint64_t v58 = v62[10];
    *((unsigned char *)v4 + v62[9]) = *((unsigned char *)v63 + v62[9]);
    *(void *)((char *)v4 + v58) = *(void *)((char *)v63 + v58);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for CoreChartTrendDiagram(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1C29DBDD8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1C2A9D528();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 32);

  uint64_t v7 = type metadata accessor for CoreChartTrendViewModel(0);
  uint64_t v8 = v6 + *(int *)(v7 + 28);
  uint64_t v9 = sub_1C2A9C398();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  uint64_t v11 = type metadata accessor for CoreChartTrendLineViewModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v6 + *(int *)(v7 + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v12, 1, v11))
  {
    v10(v12, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CoreChartTrendDiagram(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  sub_1C29DBDD8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1C2A9D528();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)((char *)a1 + v10);
  uint64_t v13 = (void *)((char *)a2 + v10);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  uint64_t v16 = (void *)((char *)a1 + v11);
  uint64_t v17 = (void *)((char *)a2 + v11);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  uint64_t v60 = a3;
  *uint64_t v16 = v19;
  v16[1] = v18;
  uint64_t v20 = a3[8];
  uint64_t v58 = a1;
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v61 = a2;
  uint64_t v22 = (char *)a2 + v20;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)((char *)a2 + v20);
  uint64_t v23 = *(void **)((char *)a2 + v20 + 8);
  *((void *)v21 + 1) = v23;
  v21[16] = *((unsigned char *)a2 + v20 + 16);
  uint64_t v24 = type metadata accessor for CoreChartTrendViewModel(0);
  uint64_t v25 = *(int *)(v24 + 28);
  uint64_t v26 = &v21[v25];
  uint64_t v27 = &v22[v25];
  uint64_t v28 = sub_1C2A9C398();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
  swift_retain();
  swift_retain();
  id v30 = v23;
  uint64_t v57 = v28;
  v29(v26, v27, v28);
  uint64_t v31 = (int *)type metadata accessor for CoreChartTrendLineViewModel(0);
  *(void *)&v26[v31[5]] = *(void *)&v27[v31[5]];
  uint64_t v32 = v31[6];
  uint64_t v33 = &v26[v32];
  uint64_t v34 = &v27[v32];
  uint64_t v35 = *((void *)v34 + 1);
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = v35;
  uint64_t v36 = v31[7];
  char v37 = &v26[v36];
  uint64_t v38 = &v27[v36];
  uint64_t v39 = *((void *)v38 + 1);
  *(void *)char v37 = *(void *)v38;
  *((void *)v37 + 1) = v39;
  uint64_t v59 = v24;
  uint64_t v40 = *(int *)(v24 + 32);
  uint64_t v41 = &v21[v40];
  uint64_t v42 = &v22[v40];
  uint64_t v43 = *((void *)v31 - 1);
  uint64_t v44 = *(unsigned int (**)(char *, uint64_t, int *))(v43 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v44(v42, 1, v31))
  {
    sub_1C29DC130(0);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    v29(v41, v42, v57);
    *(void *)&v41[v31[5]] = *(void *)&v42[v31[5]];
    uint64_t v46 = v31[6];
    uint64_t v47 = &v41[v46];
    uint64_t v48 = &v42[v46];
    uint64_t v49 = *((void *)v48 + 1);
    *(void *)uint64_t v47 = *(void *)v48;
    *((void *)v47 + 1) = v49;
    uint64_t v50 = v31[7];
    double v51 = &v41[v50];
    uint64_t v52 = &v42[v50];
    uint64_t v53 = *((void *)v52 + 1);
    *(void *)double v51 = *(void *)v52;
    *((void *)v51 + 1) = v53;
    uint64_t v54 = *(void (**)(char *, void, uint64_t, int *))(v43 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v54(v41, 0, 1, v31);
  }
  *(void *)&v21[*(int *)(v59 + 36)] = *(void *)&v22[*(int *)(v59 + 36)];
  uint64_t v55 = v60[10];
  *((unsigned char *)v58 + v60[9]) = *((unsigned char *)v61 + v60[9]);
  *(void *)((char *)v58 + v55) = *(void *)((char *)v61 + v55);
  swift_bridgeObjectRetain();
  return v58;
}

void *assignWithCopy for CoreChartTrendDiagram(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1C29DE554((uint64_t)a1 + v6, (uint64_t (*)(void))sub_1C29DBDD8);
    sub_1C29DBDD8(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_1C2A9D528();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_retain();
  swift_release();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  swift_retain();
  swift_release();
  *((void *)v14 + 1) = *((void *)v15 + 1);
  uint64_t v59 = a3;
  uint64_t v60 = a2;
  uint64_t v16 = a3[8];
  uint64_t v61 = a1;
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)((char *)a2 + v16);
  uint64_t v19 = *(void **)((char *)a2 + v16 + 8);
  uint64_t v20 = (void *)*((void *)v17 + 1);
  *((void *)v17 + 1) = v19;
  id v21 = v19;

  v17[16] = v18[16];
  uint64_t v22 = (int *)type metadata accessor for CoreChartTrendViewModel(0);
  uint64_t v23 = v22[7];
  uint64_t v24 = &v17[v23];
  uint64_t v25 = &v18[v23];
  uint64_t v26 = sub_1C2A9C398();
  uint64_t v56 = *(void *)(v26 - 8);
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v56 + 24);
  v57(v24, v25, v26);
  uint64_t v27 = (int *)type metadata accessor for CoreChartTrendLineViewModel(0);
  *(void *)&v24[v27[5]] = *(void *)&v25[v27[5]];
  uint64_t v28 = v27[6];
  uint64_t v29 = &v24[v28];
  id v30 = &v25[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = v27[7];
  uint64_t v32 = &v24[v31];
  uint64_t v33 = &v25[v31];
  *(void *)uint64_t v32 = *(void *)v33;
  *((void *)v32 + 1) = *((void *)v33 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v58 = v18;
  uint64_t v34 = v22[8];
  uint64_t v35 = &v17[v34];
  uint64_t v36 = &v18[v34];
  uint64_t v37 = *((void *)v27 - 1);
  uint64_t v38 = *(uint64_t (**)(char *, uint64_t, int *))(v37 + 48);
  int v39 = v38(&v17[v34], 1, v27);
  int v40 = v38(v36, 1, v27);
  if (!v39)
  {
    if (!v40)
    {
      v57(v35, v36, v26);
      *(void *)&v35[v27[5]] = *(void *)&v36[v27[5]];
      uint64_t v50 = v27[6];
      double v51 = &v35[v50];
      uint64_t v52 = &v36[v50];
      *(void *)double v51 = *(void *)v52;
      *((void *)v51 + 1) = *((void *)v52 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v53 = v27[7];
      uint64_t v54 = &v35[v53];
      uint64_t v55 = &v36[v53];
      *(void *)uint64_t v54 = *(void *)v55;
      *((void *)v54 + 1) = *((void *)v55 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1C29DE554((uint64_t)v35, type metadata accessor for CoreChartTrendLineViewModel);
    goto LABEL_11;
  }
  if (v40)
  {
LABEL_11:
    sub_1C29DC130(0);
    memcpy(v35, v36, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v35, v36, v26);
  *(void *)&v35[v27[5]] = *(void *)&v36[v27[5]];
  uint64_t v41 = v27[6];
  uint64_t v42 = &v35[v41];
  uint64_t v43 = &v36[v41];
  *(void *)uint64_t v42 = *(void *)v43;
  *((void *)v42 + 1) = *((void *)v43 + 1);
  uint64_t v44 = v27[7];
  uint64_t v45 = &v35[v44];
  uint64_t v46 = &v36[v44];
  *(void *)uint64_t v45 = *(void *)v46;
  *((void *)v45 + 1) = *((void *)v46 + 1);
  uint64_t v47 = *(void (**)(char *, void, uint64_t, int *))(v37 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v47(v35, 0, 1, v27);
LABEL_12:
  *(void *)&v17[v22[9]] = *(void *)&v58[v22[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v61 + v59[9]) = *((unsigned char *)v60 + v59[9]);
  *(void *)((char *)v61 + v59[10]) = *(void *)((char *)v60 + v59[10]);
  return v61;
}

void *initializeWithTake for CoreChartTrendDiagram(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1C29DBDD8(0);
  uint64_t v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1C2A9D528();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)((char *)a2 + v13);
  *((void *)v14 + 1) = *(void *)((char *)a2 + v13 + 8);
  v14[16] = *((unsigned char *)a2 + v13 + 16);
  uint64_t v16 = type metadata accessor for CoreChartTrendViewModel(0);
  uint64_t v17 = *(int *)(v16 + 28);
  uint64_t v18 = &v14[v17];
  uint64_t v19 = &v15[v17];
  uint64_t v20 = sub_1C2A9C398();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
  v29(v18, v19, v20);
  id v21 = (int *)type metadata accessor for CoreChartTrendLineViewModel(0);
  *(void *)&v18[v21[5]] = *(void *)&v19[v21[5]];
  *(_OWORD *)&v18[v21[6]] = *(_OWORD *)&v19[v21[6]];
  *(_OWORD *)&v18[v21[7]] = *(_OWORD *)&v19[v21[7]];
  uint64_t v30 = v16;
  uint64_t v22 = *(int *)(v16 + 32);
  uint64_t v23 = &v14[v22];
  uint64_t v24 = &v15[v22];
  uint64_t v25 = *((void *)v21 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v25 + 48))(&v15[v22], 1, v21))
  {
    sub_1C29DC130(0);
    memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    v29(v23, v24, v20);
    *(void *)&v23[v21[5]] = *(void *)&v24[v21[5]];
    *(_OWORD *)&v23[v21[6]] = *(_OWORD *)&v24[v21[6]];
    *(_OWORD *)&v23[v21[7]] = *(_OWORD *)&v24[v21[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v25 + 56))(v23, 0, 1, v21);
  }
  *(void *)&v14[*(int *)(v30 + 36)] = *(void *)&v15[*(int *)(v30 + 36)];
  uint64_t v27 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  return a1;
}

void *assignWithTake for CoreChartTrendDiagram(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1C29DE554((uint64_t)a1 + v6, (uint64_t (*)(void))sub_1C29DBDD8);
    sub_1C29DBDD8(0);
    uint64_t v10 = v9;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_1C2A9D528();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  swift_release();
  *((void *)v13 + 1) = *((void *)v14 + 1);
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  swift_release();
  *((void *)v16 + 1) = *((void *)v17 + 1);
  uint64_t v61 = a3;
  uint64_t v62 = a2;
  uint64_t v18 = a3[8];
  uint64_t v63 = a1;
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)((char *)a2 + v18);
  id v21 = *(void **)((char *)a1 + v18 + 8);
  *((void *)v19 + 1) = *(void *)((char *)a2 + v18 + 8);

  v19[16] = v20[16];
  uint64_t v22 = type metadata accessor for CoreChartTrendViewModel(0);
  uint64_t v23 = *(int *)(v22 + 28);
  uint64_t v24 = &v19[v23];
  uint64_t v25 = &v20[v23];
  uint64_t v59 = sub_1C2A9C398();
  uint64_t v57 = *(void *)(v59 - 8);
  uint64_t v58 = *(void (**)(char *, char *))(v57 + 40);
  v58(v24, v25);
  uint64_t v26 = (int *)type metadata accessor for CoreChartTrendLineViewModel(0);
  *(void *)&v24[v26[5]] = *(void *)&v25[v26[5]];
  uint64_t v27 = v26[6];
  uint64_t v28 = &v24[v27];
  uint64_t v29 = &v25[v27];
  uint64_t v31 = *(void *)v29;
  uint64_t v30 = *((void *)v29 + 1);
  *(void *)uint64_t v28 = v31;
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = v26[7];
  uint64_t v33 = &v24[v32];
  uint64_t v34 = &v25[v32];
  uint64_t v36 = *(void *)v34;
  uint64_t v35 = *((void *)v34 + 1);
  *(void *)uint64_t v33 = v36;
  *((void *)v33 + 1) = v35;
  swift_bridgeObjectRelease();
  uint64_t v60 = v22;
  uint64_t v37 = *(int *)(v22 + 32);
  uint64_t v38 = &v19[v37];
  int v39 = &v20[v37];
  uint64_t v40 = *((void *)v26 - 1);
  uint64_t v41 = *(uint64_t (**)(char *, uint64_t, int *))(v40 + 48);
  int v42 = v41(&v19[v37], 1, v26);
  int v43 = v41(v39, 1, v26);
  if (!v42)
  {
    if (!v43)
    {
      ((void (*)(char *, char *, uint64_t))v58)(v38, v39, v59);
      *(void *)&v38[v26[5]] = *(void *)&v39[v26[5]];
      uint64_t v47 = v26[6];
      uint64_t v48 = &v38[v47];
      uint64_t v49 = &v39[v47];
      uint64_t v51 = *(void *)v49;
      uint64_t v50 = *((void *)v49 + 1);
      *(void *)uint64_t v48 = v51;
      *((void *)v48 + 1) = v50;
      swift_bridgeObjectRelease();
      uint64_t v52 = v26[7];
      uint64_t v53 = &v38[v52];
      uint64_t v54 = &v39[v52];
      uint64_t v56 = *(void *)v54;
      uint64_t v55 = *((void *)v54 + 1);
      *(void *)uint64_t v53 = v56;
      *((void *)v53 + 1) = v55;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1C29DE554((uint64_t)v38, type metadata accessor for CoreChartTrendLineViewModel);
    goto LABEL_10;
  }
  if (v43)
  {
LABEL_10:
    sub_1C29DC130(0);
    memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v38, v39, v59);
  *(void *)&v38[v26[5]] = *(void *)&v39[v26[5]];
  *(_OWORD *)&v38[v26[6]] = *(_OWORD *)&v39[v26[6]];
  *(_OWORD *)&v38[v26[7]] = *(_OWORD *)&v39[v26[7]];
  (*(void (**)(char *, void, uint64_t, int *))(v40 + 56))(v38, 0, 1, v26);
LABEL_11:
  *(void *)&v19[*(int *)(v60 + 36)] = *(void *)&v20[*(int *)(v60 + 36)];
  swift_bridgeObjectRelease();
  uint64_t v45 = v61[10];
  *((unsigned char *)v63 + v61[9]) = *((unsigned char *)v62 + v61[9]);
  *(void *)((char *)v63 + v45) = *(void *)((char *)v62 + v45);
  return v63;
}

uint64_t getEnumTagSinglePayload for CoreChartTrendDiagram(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29E197C);
}

uint64_t sub_1C29E197C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1C29DC164(0, &qword_1EBB8E778, MEMORY[0x1E4F3C5D0], MEMORY[0x1E4F3C658]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v12 = *(void *)(a1 + a3[6]);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
  else
  {
    uint64_t v14 = type metadata accessor for CoreChartTrendViewModel(0);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a3[8];
    return v15(v17, a2, v16);
  }
}

uint64_t storeEnumTagSinglePayload for CoreChartTrendDiagram(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29E1AFC);
}

void sub_1C29E1AFC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1C29DC164(0, &qword_1EBB8E778, MEMORY[0x1E4F3C5D0], MEMORY[0x1E4F3C658]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + a4[5];
    unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12(v11, a2, a2, v10);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[6]) = a2;
  }
  else
  {
    uint64_t v13 = type metadata accessor for CoreChartTrendViewModel(0);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[8];
    v14(v16, a2, a2, v15);
  }
}

void sub_1C29E1C5C()
{
  sub_1C29DBDD8(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CoreChartTrendViewModel(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for CoreChartTrendLineView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2A9C6E8();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1C2A9C858();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[8];
    *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v14 = a3[9];
    uint64_t v15 = a3[10];
    uint64_t v16 = (uint64_t *)((char *)a1 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    uint64_t v19 = *(uint64_t *)((char *)a2 + v15);
    *uint64_t v16 = *v17;
    v16[1] = v18;
    *(uint64_t *)((char *)a1 + v15) = v19;
    uint64_t v20 = a3[11];
    id v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_1C2A9D528();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v25(v22, 1, v23))
    {
      sub_1C29DE6C0(0);
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
  }
  return a1;
}

uint64_t destroy for CoreChartTrendLineView(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1C2A9C6E8();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v8 = a1 + a2[11];
  uint64_t v9 = sub_1C2A9D528();
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    return v11(v8, v9);
  }
  return result;
}

uint64_t initializeWithCopy for CoreChartTrendLineView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2A9C6E8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = a3[10];
  uint64_t v15 = (void *)(a1 + v13);
  uint64_t v16 = (void *)(a2 + v13);
  uint64_t v17 = v16[1];
  uint64_t v18 = *(void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v17;
  *(void *)(a1 + v14) = v18;
  uint64_t v19 = a3[11];
  uint64_t v20 = (void *)(a1 + v19);
  id v21 = (const void *)(a2 + v19);
  uint64_t v22 = sub_1C2A9D528();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v24(v21, 1, v22))
  {
    sub_1C29DE6C0(0);
    memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

uint64_t assignWithCopy for CoreChartTrendLineView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2A9C6E8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  void *v13 = *v14;
  v13[1] = v14[1];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = sub_1C2A9D528();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  LODWORD(v10) = v23(v19, 1, v21);
  int v24 = v23(v20, 1, v21);
  if (!v10)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v19, v20, v21);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    sub_1C29DE6C0(0);
    memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

uint64_t initializeWithTake for CoreChartTrendLineView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2A9C6E8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[11];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_1C2A9D528();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1C29DE6C0(0);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t assignWithTake for CoreChartTrendLineView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2A9C6E8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_release();
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = sub_1C2A9D528();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  LODWORD(v10) = v23(v19, 1, v21);
  int v24 = v23(v20, 1, v21);
  if (!v10)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 40))(v19, v20, v21);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    sub_1C29DE6C0(0);
    memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreChartTrendLineView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29E2A0C);
}

uint64_t sub_1C29E2A0C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2A9C6E8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1C2A9C858();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[6];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[9] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    sub_1C29DE6C0(0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[11];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for CoreChartTrendLineView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29E2BA4);
}

uint64_t sub_1C29E2BA4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1C2A9C6E8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_1C2A9C858();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[6];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[9] + 8) = (a2 - 1);
  }
  else
  {
    sub_1C29DE6C0(0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[11];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_1C29E2D28()
{
  sub_1C2A9C6E8();
  if (v0 <= 0x3F)
  {
    sub_1C2A9C858();
    if (v1 <= 0x3F)
    {
      sub_1C29DE6C0(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1C29E2E5C()
{
  return sub_1C29DDD88(&qword_1EA31E880, (void (*)(uint64_t))sub_1C29E2EB8, (void (*)(void))sub_1C29E2F54);
}

void sub_1C29E2EB8()
{
  if (!qword_1EA31E888)
  {
    sub_1C29E3AD8(255, &qword_1EA31E850, (uint64_t (*)(uint64_t))sub_1C29DE298, (uint64_t (*)(uint64_t))sub_1C29DC230, MEMORY[0x1E4F3CC10]);
    unint64_t v0 = sub_1C2A9E328();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31E888);
    }
  }
}

unint64_t sub_1C29E2F54()
{
  unint64_t result = qword_1EA31E890;
  if (!qword_1EA31E890)
  {
    sub_1C29E3AD8(255, &qword_1EA31E850, (uint64_t (*)(uint64_t))sub_1C29DE298, (uint64_t (*)(uint64_t))sub_1C29DC230, MEMORY[0x1E4F3CC10]);
    sub_1C29DE1BC(255);
    sub_1C2973A20();
    sub_1C29DE3B0(&qword_1EA31E838, sub_1C29DE1BC, (void (*)(void))sub_1C29DE43C, (void (*)(void))sub_1C29DE4B8);
    sub_1C29E3830(&qword_1EBB8E838, (void (*)(uint64_t))sub_1C2973A20);
    swift_getOpaqueTypeConformance2();
    sub_1C29E3830((unint64_t *)&qword_1EBB8E7E8, sub_1C29DC230);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E890);
  }
  return result;
}

uint64_t sub_1C29E3104()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C29E3290@<X0>(uint64_t a1@<X8>)
{
  return sub_1C29D7650(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1C29E3298()
{
  uint64_t v1 = type metadata accessor for CoreChartTrendDiagram(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  sub_1C29DBDD8(0);
  uint64_t v15 = v4;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1C2A9D528();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 32);

  uint64_t v8 = type metadata accessor for CoreChartTrendViewModel(0);
  uint64_t v9 = v7 + *(int *)(v8 + 28);
  uint64_t v10 = sub_1C2A9C398();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  uint64_t v12 = type metadata accessor for CoreChartTrendLineViewModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v7 + *(int *)(v8 + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v13, 1, v12))
  {
    v11(v13, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v3 + v15, v2 | 7);
}

double sub_1C29E34F4(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CoreChartTrendDiagram(0) - 8);
  uint64_t v4 = (double *)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  return sub_1C29DADDC(a1, v4);
}

uint64_t sub_1C29E3564(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C29DC164(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C29E35D4(uint64_t a1, uint64_t a2)
{
  sub_1C29DE764(0, &qword_1EA31E6F0, (uint64_t (*)(uint64_t))sub_1C29DC3D4, MEMORY[0x1E4F3CE48], MEMORY[0x1E4F3CC10]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C29E3670(uint64_t a1, uint64_t a2)
{
  sub_1C29DE764(0, &qword_1EA31E6F0, (uint64_t (*)(uint64_t))sub_1C29DC3D4, MEMORY[0x1E4F3CE48], MEMORY[0x1E4F3CC10]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C29E370C(uint64_t a1)
{
  sub_1C29DE764(0, &qword_1EA31E6F0, (uint64_t (*)(uint64_t))sub_1C29DC3D4, MEMORY[0x1E4F3CE48], MEMORY[0x1E4F3CC10]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C29E37A0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C29E37EC()
{
  return objectdestroy_34Tm((uint64_t (*)(void))type metadata accessor for CoreChartTrendDistributionSeries);
}

uint64_t sub_1C29E3804(uint64_t a1)
{
  return sub_1C29E3BA0(a1, (uint64_t (*)(void))type metadata accessor for CoreChartTrendDistributionSeries, (uint64_t (*)(uint64_t, uint64_t))sub_1C2950648);
}

uint64_t sub_1C29E3830(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C29E3878()
{
  return objectdestroy_34Tm((uint64_t (*)(void))type metadata accessor for CoreChartTrendLineSeries);
}

uint64_t objectdestroy_34Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v14 = *(void *)(*(void *)(v2 - 8) + 64);

  uint64_t v5 = type metadata accessor for CoreChartTrendViewModel(0);
  uint64_t v6 = v1 + v4 + *(int *)(v5 + 28);
  uint64_t v7 = sub_1C2A9C398();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = type metadata accessor for CoreChartTrendLineViewModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v1 + v4 + *(int *)(v5 + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v10, 1, v9))
  {
    v8(v10, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = v1 + v4 + *(int *)(v2 + 20);
  uint64_t v12 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  return MEMORY[0x1F4186498](v1, v4 + v14, v3 | 7);
}

uint64_t sub_1C29E3AAC(uint64_t a1)
{
  return sub_1C29E3BA0(a1, (uint64_t (*)(void))type metadata accessor for CoreChartTrendLineSeries, (uint64_t (*)(uint64_t, uint64_t))sub_1C2A329D4);
}

void sub_1C29E3AD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_1C29E3B5C()
{
  return objectdestroy_34Tm((uint64_t (*)(void))type metadata accessor for CoreChartTrendBarSeries);
}

uint64_t sub_1C29E3B74(uint64_t a1)
{
  return sub_1C29E3BA0(a1, (uint64_t (*)(void))type metadata accessor for CoreChartTrendBarSeries, (uint64_t (*)(uint64_t, uint64_t))sub_1C2A90E98);
}

uint64_t sub_1C29E3BA0(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a3(a1, v6);
}

void sub_1C29E3C38()
{
  if (!qword_1EA31E8A8)
  {
    sub_1C29DC7AC(255);
    sub_1C29DCEFC();
    sub_1C29DD7B8(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EA31E8A8);
    }
  }
}

uint64_t sub_1C29E3CC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C29E3D28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C29E3D90()
{
  return sub_1C2A9E128();
}

uint64_t KeyValueDomainChangePublisher.CacheData.init(dateValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C2A9C6E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 1, 1, v4);
  return sub_1C29E3E30(a1, a2);
}

uint64_t sub_1C29E3E30(uint64_t a1, uint64_t a2)
{
  sub_1C2939E64(0, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C29E3EB8()
{
  return 0x756C615665746164;
}

uint64_t sub_1C29E3ED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x756C615665746164 && a2 == 0xE900000000000065)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C2A9E8D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C29E3F78(uint64_t a1)
{
  unint64_t v2 = sub_1C29E4178();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C29E3FB4(uint64_t a1)
{
  unint64_t v2 = sub_1C29E4178();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t KeyValueDomainChangePublisher.CacheData.encode(to:)(void *a1)
{
  sub_1C29E44BC(0, &qword_1EBB8F9B0, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C29E4178();
  sub_1C2A9EA18();
  sub_1C2A9C6E8();
  sub_1C29E79CC(&qword_1EBB91C18, MEMORY[0x1E4F27928]);
  sub_1C2A9E818();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C29E4178()
{
  unint64_t result = qword_1EBB8F3C0;
  if (!qword_1EBB8F3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8F3C0);
  }
  return result;
}

uint64_t KeyValueDomainChangePublisher.CacheData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  sub_1C2939E64(0, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v17 - v4;
  sub_1C29E44BC(0, &qword_1EBB8F920, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = type metadata accessor for KeyValueDomainChangePublisher.CacheData();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C2A9C6E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C29E4178();
  uint64_t v14 = v19;
  sub_1C2A9EA08();
  if (!v14)
  {
    uint64_t v15 = v18;
    sub_1C29E79CC(&qword_1EBB927B8, MEMORY[0x1E4F27928]);
    sub_1C2A9E758();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v7);
    sub_1C29E3E30((uint64_t)v5, (uint64_t)v12);
    sub_1C29E77D8((uint64_t)v12, v17, (uint64_t (*)(void))type metadata accessor for KeyValueDomainChangePublisher.CacheData);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1C29E7840((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for KeyValueDomainChangePublisher.CacheData);
}

void sub_1C29E44BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C29E4178();
    unint64_t v7 = a3(a1, &type metadata for KeyValueDomainChangePublisher.CacheData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t type metadata accessor for KeyValueDomainChangePublisher.CacheData()
{
  uint64_t result = qword_1EBB8E370;
  if (!qword_1EBB8E370) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C29E456C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return KeyValueDomainChangePublisher.CacheData.init(from:)(a1, a2);
}

uint64_t sub_1C29E4584(void *a1)
{
  sub_1C29E44BC(0, &qword_1EBB8F9B0, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C29E4178();
  sub_1C2A9EA18();
  sub_1C2A9C6E8();
  sub_1C29E79CC(&qword_1EBB91C18, MEMORY[0x1E4F27928]);
  sub_1C2A9E818();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t KeyValueDomainChangePublisher.publisher.getter()
{
  return swift_retain();
}

void sub_1C29E4714(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1C29E7A14(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t KeyValueDomainChangePublisher.__allocating_init(cacheData:context:darwinNotificationName:key:keyValueDomain:sampleTypes:valueKind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = swift_allocObject();
  KeyValueDomainChangePublisher.init(cacheData:context:darwinNotificationName:key:keyValueDomain:sampleTypes:valueKind:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  return v17;
}

uint64_t KeyValueDomainChangePublisher.init(cacheData:context:darwinNotificationName:key:keyValueDomain:sampleTypes:valueKind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v46 = a8;
  uint64_t v40 = a6;
  uint64_t v41 = a7;
  v39[0] = a4;
  v39[1] = a5;
  uint64_t v42 = a2;
  uint64_t v43 = a9;
  uint64_t v44 = a3;
  sub_1C29E4E38();
  uint64_t v48 = v10;
  uint64_t v45 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2939E64(0, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v39 - v14;
  sub_1C2939E64(0, &qword_1EBB8F3D8, (void (*)(uint64_t))type metadata accessor for KeyValueDomainChangePublisher.CacheData);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)v39 - v17;
  uint64_t v19 = type metadata accessor for KeyValueDomainChangePublisher.CacheData();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)v39 - v24;
  uint64_t v47 = a1;
  sub_1C29E4EE4(a1, (uint64_t)v18, &qword_1EBB8F3D8, (void (*)(uint64_t))type metadata accessor for KeyValueDomainChangePublisher.CacheData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    uint64_t v26 = sub_1C2A9C6E8();
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    v27(v15, 1, 1, v26);
    v27(v22, 1, 1, v26);
    sub_1C29E3E30((uint64_t)v15, (uint64_t)v22);
    sub_1C29E4F50((uint64_t)v22, (uint64_t)v25);
    sub_1C29E4FB4((uint64_t)v18, &qword_1EBB8F3D8, (void (*)(uint64_t))type metadata accessor for KeyValueDomainChangePublisher.CacheData);
  }
  else
  {
    sub_1C29E4F50((uint64_t)v18, (uint64_t)v25);
  }
  sub_1C29E5010();
  uint64_t v28 = swift_allocObject();
  *(_DWORD *)(v28 + ((*(unsigned int *)(*(void *)v28 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1C29E77D8((uint64_t)v25, v28 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v28 + 16), (uint64_t (*)(void))type metadata accessor for KeyValueDomainChangePublisher.CacheData);
  sub_1C29E7840((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for KeyValueDomainChangePublisher.CacheData);
  uint64_t v29 = v49;
  *(void *)(v49 + 24) = v28;
  sub_1C2A9CF08();
  swift_allocObject();
  uint64_t v51 = sub_1C2A9CEF8();
  uint64_t v30 = v46;
  sub_1C2981338(v46, (uint64_t)v50);
  uint64_t v31 = (void *)swift_allocObject();
  uint64_t v32 = v41;
  v31[2] = v40;
  v31[3] = v32;
  sub_1C2943434(v50, (uint64_t)(v31 + 4));
  uint64_t v33 = v44;
  v31[9] = v42;
  v31[10] = v33;
  uint64_t v34 = v43;
  v31[11] = v28;
  v31[12] = v34;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_1C29E50D0;
  *(void *)(v35 + 24) = v31;
  sub_1C2A9C968();
  sub_1C29E79CC(&qword_1EBB8FE10, MEMORY[0x1E4F66810]);
  swift_retain();
  sub_1C2A9D4B8();
  swift_release();
  sub_1C29E79CC(&qword_1EBB8FF10, (void (*)(uint64_t))sub_1C29E4E38);
  uint64_t v36 = v48;
  uint64_t v37 = sub_1C2A9D4A8();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v30);
  sub_1C29E4FB4(v47, &qword_1EBB8F3D8, (void (*)(uint64_t))type metadata accessor for KeyValueDomainChangePublisher.CacheData);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v12, v36);
  *(void *)(v29 + 16) = v37;
  return v29;
}

void sub_1C29E4E38()
{
  if (!qword_1EBB8FF18)
  {
    sub_1C2A9CF08();
    sub_1C2A9C968();
    sub_1C29E79CC(&qword_1EBB8FE10, MEMORY[0x1E4F66810]);
    unint64_t v0 = sub_1C2A9D398();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8FF18);
    }
  }
}

uint64_t sub_1C29E4EE4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C2939E64(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C29E4F50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for KeyValueDomainChangePublisher.CacheData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C29E4FB4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C2939E64(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C29E5010()
{
  if (!qword_1EBB8FFC8)
  {
    type metadata accessor for KeyValueDomainChangePublisher.CacheData();
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C2A9E548();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8FFC8);
    }
  }
}

uint64_t sub_1C29E5078()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 104, 7);
}

uint64_t sub_1C29E50D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[2];
  unint64_t v4 = v1[3];
  unint64_t v5 = (unint64_t)(v1 + 4);
  uint64_t v6 = v1[9];
  unint64_t v7 = v1[10];
  uint64_t v9 = v1[11];
  unint64_t v8 = v1[12];
  type metadata accessor for KeyValueDomainChangePublisher();
  return sub_1C29E5148(v3, v4, v5, v6, v7, v9, v8, a1);
}

uint64_t sub_1C29E5148@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t isUniquelyReferenced_nonNull_native@<X6>, unint64_t a7@<X7>, uint64_t a8@<X8>)
{
  unint64_t v150 = a5;
  uint64_t v144 = a4;
  unint64_t v153 = a2;
  uint64_t v146 = a1;
  uint64_t v147 = a8;
  uint64_t v149 = sub_1C2A9CFE8();
  uint64_t v148 = *(void *)(v149 - 8);
  MEMORY[0x1F4188790](v149);
  uint64_t v12 = (uint64_t *)((char *)&v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v143 = (char *)&v133 - v14;
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (unint64_t)&v133 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v142 = (char *)&v133 - v19;
  sub_1C2939E64(0, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v140 = (char *)&v133 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v141 = (char *)&v133 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v133 - v25;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (uint64_t)&v133 - v28;
  uint64_t v30 = type metadata accessor for KeyValueDomainChangePublisher.CacheData();
  MEMORY[0x1F4188790](v30 - 8);
  MEMORY[0x1F4188790](v31);
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (uint64_t)&v133 - v33;
  MEMORY[0x1F4188790](v35);
  int v39 = (char *)&v133 - v38;
  uint64_t v151 = a7;
  if (!(a7 >> 62))
  {
    uint64_t v152 = *(void *)((a7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v152) {
      goto LABEL_3;
    }
LABEL_67:
    sub_1C2A9CF68();
    unint64_t v124 = v150;
    swift_bridgeObjectRetain_n();
    uint64_t v125 = sub_1C2A9CFC8();
    os_log_type_t v126 = sub_1C2A9E0C8();
    if (os_log_type_enabled(v125, v126))
    {
      uint64_t v127 = swift_slowAlloc();
      uint64_t v128 = swift_slowAlloc();
      *(void *)&long long v159 = v128;
      *(_DWORD *)uint64_t v127 = 136446466;
      uint64_t v129 = sub_1C2A9EA58();
      *(void *)&long long v157 = sub_1C2957168(v129, v130, (uint64_t *)&v159);
      sub_1C2A9E358();
      swift_bridgeObjectRelease();
      *(_WORD *)(v127 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)&long long v157 = sub_1C2957168(v144, v124, (uint64_t *)&v159);
      sub_1C2A9E358();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C292A000, v125, v126, "[%{public}s]: No affected sample types in %{public}s", (uint8_t *)v127, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v128, -1, -1);
      MEMORY[0x1C87656F0](v127, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(void *, uint64_t))(v148 + 8))(v12, v149);
    goto LABEL_71;
  }
LABEL_66:
  unint64_t v139 = v17;
  uint64_t v138 = v36;
  uint64_t v134 = v37;
  swift_bridgeObjectRetain();
  unint64_t v17 = v139;
  uint64_t v123 = sub_1C2A9E648();
  swift_bridgeObjectRelease();
  uint64_t v37 = v134;
  uint64_t v36 = v138;
  uint64_t v152 = v123;
  if (!v123) {
    goto LABEL_67;
  }
LABEL_3:
  uint64_t v134 = v37;
  unint64_t v139 = v17;
  uint64_t v138 = v36;
  uint64_t v40 = isUniquelyReferenced_nonNull_native
      + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)isUniquelyReferenced_nonNull_native + 16);
  uint64_t v41 = (os_unfair_lock_s *)(isUniquelyReferenced_nonNull_native
                           + ((*(unsigned int *)(*(void *)isUniquelyReferenced_nonNull_native + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v41);
  uint64_t v145 = v39;
  uint64_t v136 = v40;
  sub_1C29E6504(v40, (uint64_t)v39);
  os_unfair_lock_t v137 = v41;
  os_unfair_lock_unlock(v41);
  uint64_t v43 = *(void *)(a3 + 24);
  uint64_t v42 = *(void *)(a3 + 32);
  __swift_project_boxed_opaque_existential_1((void *)a3, v43);
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v42 + 8))(v146, v153, v43, v42);
  uint64_t v135 = 0;
  uint64_t v44 = sub_1C2A9C6E8();
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v29, 1, v44) == 1)
  {
    sub_1C29E4FB4(v29, &qword_1EBB92520, MEMORY[0x1E4F27928]);
    long long v159 = 0u;
    long long v160 = 0u;
  }
  else
  {
    *((void *)&v160 + 1) = v44;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v159);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v45 + 32))(boxed_opaque_existential_1, v29, v44);
  }
  uint64_t v46 = (uint64_t)v145;
  isUniquelyReferenced_nonNull_native = v152;
  sub_1C29E4EE4((uint64_t)v145, (uint64_t)v26, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  uint64_t v47 = sub_1C2A9C6E8();
  uint64_t v48 = *(void *)(v47 - 8);
  int v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48))(v26, 1, v47);
  uint64_t v29 = v151;
  uint64_t v146 = v48;
  if (v49 == 1)
  {
    sub_1C29E4FB4((uint64_t)v26, &qword_1EBB92520, MEMORY[0x1E4F27928]);
    long long v157 = 0u;
    long long v158 = 0u;
  }
  else
  {
    *((void *)&v158 + 1) = v47;
    uint64_t v50 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v157);
    (*(void (**)(uint64_t *, char *, uint64_t))(v48 + 32))(v50, v26, v47);
  }
  if (sub_1C29E6544((uint64_t)&v159, (uint64_t)&v157))
  {
    uint64_t v51 = v143;
    sub_1C2A9CF68();
    unint64_t v52 = v150;
    swift_bridgeObjectRetain_n();
    uint64_t v53 = sub_1C2A9CFC8();
    os_log_type_t v54 = sub_1C2A9E0C8();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      *(void *)&v156[0] = v56;
      *(_DWORD *)uint64_t v55 = 136446466;
      uint64_t v57 = sub_1C2A9EA58();
      *(void *)&long long v154 = sub_1C2957168(v57, v58, (uint64_t *)v156);
      sub_1C2A9E358();
      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)&long long v154 = sub_1C2957168(v144, v52, (uint64_t *)v156);
      sub_1C2A9E358();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C292A000, v53, v54, "[%{public}s]: Value did not change in %{public}s", (uint8_t *)v55, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v56, -1, -1);
      MEMORY[0x1C87656F0](v55, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v148 + 8))(v51, v149);
    sub_1C29E7840((uint64_t)&v157, (uint64_t (*)(void))sub_1C2935950);
    sub_1C29E7840((uint64_t)&v159, (uint64_t (*)(void))sub_1C2935950);
    sub_1C29E7840(v46, (uint64_t (*)(void))type metadata accessor for KeyValueDomainChangePublisher.CacheData);
LABEL_71:
    uint64_t v131 = v147;
    uint64_t v132 = sub_1C2A9C968();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v131, 1, 1, v132);
  }
  uint64_t v143 = (char *)v47;
  uint64_t v133 = v34;
  uint64_t v26 = (char *)self;
  unint64_t v153 = v29 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  uint64_t v59 = MEMORY[0x1E4FBC868];
  uint64_t v34 = 4;
  do
  {
    unint64_t v17 = v34 - 4;
    if (v153) {
      uint64_t v61 = (void *)MEMORY[0x1C8764390](v34 - 4, v29);
    }
    else {
      uint64_t v61 = *(id *)(v29 + 8 * v34);
    }
    uint64_t v12 = v61;
    int v39 = (char *)(v34 - 3);
    if (__OFADD__(v17, 1))
    {
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    swift_bridgeObjectRetain();
    uint64_t v62 = v12;
    id v63 = objc_msgSend(v26, sel_sampleTypeChangeWithSampleType_dateInterval_hasUnfrozenSeries_, v62, 0, 0);
    unint64_t v64 = v59 & 0xC000000000000001;
    if (v63)
    {
      a3 = (unint64_t)v63;
      uint64_t v12 = (void *)v59;
      if (v64)
      {
        if (v59 < 0) {
          unint64_t v17 = v59;
        }
        else {
          unint64_t v17 = v59 & 0xFFFFFFFFFFFFFF8;
        }
        uint64_t v65 = sub_1C2A9E428();
        if (__OFADD__(v65, 1)) {
          goto LABEL_63;
        }
        uint64_t v12 = (void *)sub_1C2A9A800(v17, v65 + 1);
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v156[0] = v12;
      unint64_t v17 = sub_1C295DE84((uint64_t)v62);
      uint64_t v67 = v12[2];
      BOOL v68 = (v66 & 1) == 0;
      uint64_t v69 = v67 + v68;
      if (__OFADD__(v67, v68)) {
        goto LABEL_62;
      }
      uint64_t v29 = v66;
      if (v12[3] >= v69)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1C2960508();
        }
      }
      else
      {
        sub_1C295F340(v69, isUniquelyReferenced_nonNull_native);
        unint64_t v70 = sub_1C295DE84((uint64_t)v62);
        if ((v29 & 1) != (v71 & 1))
        {
          sub_1C29E790C();
          uint64_t result = sub_1C2A9E928();
          __break(1u);
          return result;
        }
        unint64_t v17 = v70;
      }
      uint64_t v12 = *(void **)&v156[0];
      isUniquelyReferenced_nonNull_native = 8 * v17;
      if (v29)
      {
        uint64_t v60 = *(void *)(*(void *)&v156[0] + 56);

        *(void *)(v60 + isUniquelyReferenced_nonNull_native) = a3;
      }
      else
      {
        *(void *)(*(void *)&v156[0] + 8 * (v17 >> 6) + 64) |= 1 << v17;
        *(void *)(v12[6] + 8 * v17) = v62;
        *(void *)(v12[7] + 8 * v17) = a3;
        uint64_t v77 = v12[2];
        BOOL v78 = __OFADD__(v77, 1);
        uint64_t v79 = v77 + 1;
        if (v78) {
          goto LABEL_64;
        }
        v12[2] = v79;
        uint64_t v80 = v62;
      }
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      uint64_t v59 = (uint64_t)v12;
      uint64_t v29 = v151;
      isUniquelyReferenced_nonNull_native = v152;
    }
    else if (v64)
    {
      if (v59 < 0) {
        uint64_t v72 = v59;
      }
      else {
        uint64_t v72 = v59 & 0xFFFFFFFFFFFFFF8;
      }
      a3 = v62;
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_1C2A9E5F8();

      if (v73)
      {
        swift_unknownObjectRelease();
        uint64_t v74 = sub_1C2A9E428();
        uint64_t v12 = (void *)sub_1C2A9A800(v72, v74);
        swift_retain();
        unint64_t v17 = sub_1C295DE84(a3);
        isUniquelyReferenced_nonNull_native = v75;
        swift_release();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          goto LABEL_65;
        }

        uint64_t v76 = *(void **)(v12[7] + 8 * v17);
        sub_1C2A9ADF0(v17, (uint64_t)v12);

        swift_bridgeObjectRelease_n();
        uint64_t v59 = (uint64_t)v12;
        isUniquelyReferenced_nonNull_native = v152;
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      a3 = sub_1C295DE84((uint64_t)v62);
      char v82 = v81;
      swift_bridgeObjectRelease();
      if (v82)
      {
        char v83 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v156[0] = v59;
        uint64_t v84 = v59;
        if ((v83 & 1) == 0)
        {
          sub_1C2960508();
          uint64_t v84 = *(void *)&v156[0];
        }

        uint64_t v85 = *(void **)(*(void *)(v84 + 56) + 8 * a3);
        sub_1C2A9ADF0(a3, v84);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v59 = v84;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    ++v34;
  }
  while (v39 != (char *)isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v86 = v142;
  sub_1C2A9CF68();
  unint64_t v87 = v150;
  swift_bridgeObjectRetain_n();
  uint64_t v88 = sub_1C2A9CFC8();
  os_log_type_t v89 = sub_1C2A9E0C8();
  if (os_log_type_enabled(v88, v89))
  {
    uint64_t v90 = swift_slowAlloc();
    uint64_t v91 = swift_slowAlloc();
    *(void *)&v156[0] = v91;
    *(_DWORD *)uint64_t v90 = 136446466;
    uint64_t v92 = sub_1C2A9EA58();
    *(void *)&long long v154 = sub_1C2957168(v92, v93, (uint64_t *)v156);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    *(_WORD *)(v90 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)&long long v154 = sub_1C2957168(v144, v87, (uint64_t *)v156);
    sub_1C2A9E358();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C292A000, v88, v89, "[%{public}s]: Emitting changes in %{public}s", (uint8_t *)v90, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87656F0](v91, -1, -1);
    MEMORY[0x1C87656F0](v90, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v94 = *(void (**)(char *, uint64_t))(v148 + 8);
  v94(v86, v149);
  unint64_t v95 = v139;
  sub_1C29E77D8((uint64_t)&v159, (uint64_t)&v154, (uint64_t (*)(void))sub_1C2935950);
  uint64_t v96 = v143;
  uint64_t v97 = v146;
  if (v155)
  {
    sub_1C2937880(&v154, v156);
    sub_1C29577B8((uint64_t)v156, (uint64_t)&v154);
    uint64_t v98 = (uint64_t)v141;
    int v99 = swift_dynamicCast();
    char v100 = *(void (**)(uint64_t, uint64_t, uint64_t, char *))(v97 + 56);
    v100(v98, v99 ^ 1u, 1, v96);
    uint64_t v101 = v138;
    v100(v138, 1, 1, v96);
    sub_1C29E3E30(v98, v101);
    uint64_t v102 = v134;
    sub_1C29E4F50(v101, v134);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
    uint64_t v103 = v102;
  }
  else
  {
    sub_1C29E7840((uint64_t)&v154, (uint64_t (*)(void))sub_1C2935950);
    sub_1C2A9CF68();
    unint64_t v105 = v150;
    swift_bridgeObjectRetain_n();
    uint64_t v106 = sub_1C2A9CFC8();
    os_log_type_t v107 = sub_1C2A9E0C8();
    if (os_log_type_enabled(v106, v107))
    {
      uint64_t v108 = swift_slowAlloc();
      uint64_t v109 = swift_slowAlloc();
      *(void *)&v156[0] = v109;
      *(_DWORD *)uint64_t v108 = 136446466;
      uint64_t v110 = sub_1C2A9EA58();
      *(void *)&long long v154 = sub_1C2957168(v110, v111, (uint64_t *)v156);
      sub_1C2A9E358();
      swift_bridgeObjectRelease();
      *(_WORD *)(v108 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)&long long v154 = sub_1C2957168(v144, v105, (uint64_t *)v156);
      sub_1C2A9E358();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C292A000, v106, v107, "[%{public}s: No new value to cache, saving nil in %{public}s", (uint8_t *)v108, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v109, -1, -1);
      MEMORY[0x1C87656F0](v108, -1, -1);

      unint64_t v112 = v139;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      unint64_t v112 = v95;
    }
    v94((char *)v112, v149);
    uint64_t v113 = (uint64_t)v140;
    uint64_t v114 = *(void (**)(char *, uint64_t, uint64_t, char *))(v146 + 56);
    uint64_t v115 = v143;
    v114(v140, 1, 1, v143);
    uint64_t v116 = v138;
    v114((char *)v138, 1, 1, v115);
    sub_1C29E3E30(v113, v116);
    uint64_t v103 = v116;
  }
  uint64_t v117 = v133;
  uint64_t v118 = sub_1C29E4F50(v103, v133);
  uint64_t v119 = v147;
  MEMORY[0x1F4188790](v118);
  *(&v133 - 2) = v117;
  uint64_t v120 = v137;
  os_unfair_lock_lock(v137);
  sub_1C29E78A0(v136);
  os_unfair_lock_unlock(v120);
  sub_1C2A9C938();
  sub_1C29E7840((uint64_t)&v157, (uint64_t (*)(void))sub_1C2935950);
  sub_1C29E7840((uint64_t)&v159, (uint64_t (*)(void))sub_1C2935950);
  sub_1C29E7840((uint64_t)v145, (uint64_t (*)(void))type metadata accessor for KeyValueDomainChangePublisher.CacheData);
  sub_1C29E7840(v117, (uint64_t (*)(void))type metadata accessor for KeyValueDomainChangePublisher.CacheData);
  uint64_t v121 = sub_1C2A9C968();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v119, 0, 1, v121);
}

uint64_t sub_1C29E64A4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C29E64DC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C29E6504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C29E77D8(a1, a2, (uint64_t (*)(void))type metadata accessor for KeyValueDomainChangePublisher.CacheData);
}

uint64_t sub_1C29E6544(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2A9C6E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v33 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29E794C();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2939E64(0, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v32 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v32 - v18;
  sub_1C29E77D8(a1, (uint64_t)v34, (uint64_t (*)(void))sub_1C2935950);
  if (v35)
  {
    int v20 = swift_dynamicCast();
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v21(v19, v20 ^ 1u, 1, v4);
  }
  else
  {
    sub_1C29E7840((uint64_t)v34, (uint64_t (*)(void))sub_1C2935950);
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v21(v19, 1, 1, v4);
  }
  sub_1C29E77D8(a2, (uint64_t)v34, (uint64_t (*)(void))sub_1C2935950);
  if (v35)
  {
    uint64_t v22 = swift_dynamicCast() ^ 1;
    uint64_t v23 = v16;
  }
  else
  {
    sub_1C29E7840((uint64_t)v34, (uint64_t (*)(void))sub_1C2935950);
    uint64_t v23 = v16;
    uint64_t v22 = 1;
  }
  v21(v23, v22, 1, v4);
  uint64_t v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
  uint64_t v25 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C29E4EE4((uint64_t)v19, (uint64_t)v10, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  sub_1C29E4EE4((uint64_t)v16, v24, &qword_1EBB92520, v25);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v26((uint64_t)v10, 1, v4) != 1)
  {
    sub_1C29E4EE4((uint64_t)v10, (uint64_t)v13, &qword_1EBB92520, MEMORY[0x1E4F27928]);
    if (v26(v24, 1, v4) != 1)
    {
      uint64_t v28 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v33, v24, v4);
      sub_1C29E79CC(&qword_1EA31E8C0, MEMORY[0x1E4F27928]);
      char v27 = sub_1C2A9DCE8();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v5 + 8);
      v29(v28, v4);
      v29(v13, v4);
      sub_1C29E4FB4((uint64_t)v10, &qword_1EBB92520, MEMORY[0x1E4F27928]);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    goto LABEL_12;
  }
  if (v26(v24, 1, v4) != 1)
  {
LABEL_12:
    sub_1C29E7840((uint64_t)v10, (uint64_t (*)(void))sub_1C29E794C);
    char v27 = 0;
    goto LABEL_14;
  }
  sub_1C29E4FB4((uint64_t)v10, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  char v27 = 1;
LABEL_14:
  uint64_t v30 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C29E4FB4((uint64_t)v16, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  sub_1C29E4FB4((uint64_t)v19, &qword_1EBB92520, v30);
  return v27 & 1;
}

uint64_t KeyValueDomainChangePublisher.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t KeyValueDomainChangePublisher.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C29E6ACC()
{
  return swift_retain();
}

uint64_t static KeyValueDomainChangePublisher.ValueKind.== infix(_:_:)()
{
  return 1;
}

uint64_t KeyValueDomainChangePublisher.ValueKind.hash(into:)()
{
  return sub_1C2A9E9C8();
}

uint64_t KeyValueDomainChangePublisher.ValueKind.hashValue.getter()
{
  return sub_1C2A9E9E8();
}

unint64_t sub_1C29E6B50()
{
  unint64_t result = qword_1EA31E8B0;
  if (!qword_1EA31E8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E8B0);
  }
  return result;
}

uint64_t dispatch thunk of KeyValueDomainProxy.date(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for KeyValueDomainChangePublisher()
{
  return self;
}

uint64_t method lookup function for KeyValueDomainChangePublisher(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for KeyValueDomainChangePublisher);
}

uint64_t dispatch thunk of KeyValueDomainChangePublisher.cacheData.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of KeyValueDomainChangePublisher.__allocating_init(cacheData:context:darwinNotificationName:key:keyValueDomain:sampleTypes:valueKind:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t *initializeBufferWithCopyOfBuffer for KeyValueDomainChangePublisher.CacheData(uint64_t *a1, uint64_t *a2)
{
  sub_1C2939E64(0, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t v7 = sub_1C2A9C6E8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for KeyValueDomainChangePublisher.CacheData(uint64_t a1)
{
  uint64_t v2 = sub_1C2A9C6E8();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for KeyValueDomainChangePublisher.CacheData(void *a1, const void *a2)
{
  uint64_t v4 = sub_1C2A9C6E8();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_1C2939E64(0, &qword_1EBB92520, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithCopy for KeyValueDomainChangePublisher.CacheData(void *a1, void *a2)
{
  uint64_t v4 = sub_1C2A9C6E8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    sub_1C2939E64(0, &qword_1EBB92520, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *initializeWithTake for KeyValueDomainChangePublisher.CacheData(void *a1, const void *a2)
{
  uint64_t v4 = sub_1C2A9C6E8();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_1C2939E64(0, &qword_1EBB92520, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithTake for KeyValueDomainChangePublisher.CacheData(void *a1, void *a2)
{
  uint64_t v4 = sub_1C2A9C6E8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    sub_1C2939E64(0, &qword_1EBB92520, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyValueDomainChangePublisher.CacheData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29E7414);
}

uint64_t sub_1C29E7414(uint64_t a1, uint64_t a2)
{
  sub_1C2939E64(0, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for KeyValueDomainChangePublisher.CacheData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29E74B0);
}

uint64_t sub_1C29E74B0(uint64_t a1, uint64_t a2)
{
  sub_1C2939E64(0, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

void sub_1C29E753C()
{
  sub_1C2939E64(319, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for KeyValueDomainChangePublisher.ValueKind()
{
  return &type metadata for KeyValueDomainChangePublisher.ValueKind;
}

unsigned char *_s19HealthVisualization29KeyValueDomainChangePublisherC9ValueKindOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C29E7698);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyValueDomainChangePublisher.CacheData.CodingKeys()
{
  return &type metadata for KeyValueDomainChangePublisher.CacheData.CodingKeys;
}

unint64_t sub_1C29E76D4()
{
  unint64_t result = qword_1EA31E8B8;
  if (!qword_1EA31E8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E8B8);
  }
  return result;
}

unint64_t sub_1C29E772C()
{
  unint64_t result = qword_1EBB8F3D0;
  if (!qword_1EBB8F3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8F3D0);
  }
  return result;
}

unint64_t sub_1C29E7784()
{
  unint64_t result = qword_1EBB8F3C8;
  if (!qword_1EBB8F3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8F3C8);
  }
  return result;
}

uint64_t sub_1C29E77D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C29E7840(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C29E78A0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1C29E7840(a1, (uint64_t (*)(void))type metadata accessor for KeyValueDomainChangePublisher.CacheData);
  return sub_1C29E77D8(v3, a1, (uint64_t (*)(void))type metadata accessor for KeyValueDomainChangePublisher.CacheData);
}

unint64_t sub_1C29E790C()
{
  unint64_t result = qword_1EBB92468;
  if (!qword_1EBB92468)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB92468);
  }
  return result;
}

void sub_1C29E794C()
{
  if (!qword_1EBB8E880)
  {
    sub_1C2939E64(255, &qword_1EBB92520, MEMORY[0x1E4F27928]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB8E880);
    }
  }
}

uint64_t sub_1C29E79CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C29E7A14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C29E6504(a1, a2);
}

uint64_t sub_1C29E7A30(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C2A9C4F8();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 16);
    swift_retain();
    v13(v9, v10, v11);
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)(v7 + v14);
    uint64_t v16 = (char *)a2 + v14;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))((uint64_t)a2 + v14, 1, v11))
    {
      sub_1C29C5960(0);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    uint64_t v18 = a3[9];
    *(void *)(v7 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    uint64_t v19 = v7 + v18;
    uint64_t v20 = (uint64_t)a2 + v18;
    *(void *)uint64_t v19 = *(void *)v20;
    *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
    uint64_t v21 = a3[10];
    uint64_t v22 = (void *)(v7 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1C29E7C1C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C2A9C4F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C29E7D14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1C2A9C4F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  swift_retain();
  v12(v8, v9, v10);
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    sub_1C29C5960(0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  uint64_t v20 = a3[10];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C29E7EAC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C4F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24);
  v26(v7, v8, v9);
  char v27 = a3;
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  int v15 = v14(a1 + v11, 1, v9);
  int v16 = v14((uint64_t)v13, 1, v9);
  if (!v15)
  {
    if (!v16)
    {
      v26((uint64_t)v12, (uint64_t)v13, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1C29C5960(0);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v12, v13, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
LABEL_7:
  *(void *)(a1 + v27[8]) = *(void *)(a2 + v27[8]);
  uint64_t v18 = v27[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  *(unsigned char *)(v19 + 8) = *((unsigned char *)v20 + 8);
  *(void *)uint64_t v19 = v21;
  uint64_t v22 = v27[10];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C29E80E8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1C2A9C4F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a2 + v12, 1, v9))
  {
    sub_1C29C5960(0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  uint64_t v16 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1C29E826C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C4F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  uint64_t v12 = a3[7];
  uint64_t v13 = (const void *)(a2 + v12);
  uint64_t v14 = *(uint64_t (**)(void))(v10 + 48);
  uint64_t v29 = a3;
  uint64_t v30 = (void *)(a1 + v12);
  LODWORD(a3) = v14();
  int v15 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v14)(v13, 1, v9);
  if (a3)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v30, v13, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v30, 0, 1, v9);
      goto LABEL_9;
    }
    sub_1C29C5960(0);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
    uint64_t v18 = v30;
  }
  else
  {
    if (!v15)
    {
      v11((uint64_t)v30, (uint64_t)v13, v9);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v30, v9);
    sub_1C29C5960(0);
    size_t v17 = *(void *)(*(void *)(v19 - 8) + 64);
    uint64_t v18 = v30;
  }
  memcpy(v18, v13, v17);
LABEL_9:
  uint64_t v20 = v29[9];
  *(void *)(a1 + v29[8]) = *(void *)(a2 + v29[8]);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  uint64_t v23 = v29[10];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C29E84A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29E84B8);
}

uint64_t sub_1C29E84B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2A9C4F8();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  sub_1C29C5960(0);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[10] + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_1C29E85CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29E85E0);
}

void sub_1C29E85E0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1C2A9C4F8();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
  }
  else
  {
    sub_1C29C5960(0);
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[10] + 8) = (a2 - 1);
      return;
    }
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
  }
  unint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v13(a1 + v11, a2, a2, v9);
}

uint64_t type metadata accessor for ActivitySummarySnidgetValueView()
{
  uint64_t result = qword_1EBB8FC08;
  if (!qword_1EBB8FC08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C29E873C()
{
  sub_1C2A9C4F8();
  if (v0 <= 0x3F)
  {
    sub_1C29C5960(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1C29E8838()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C29E8854@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = sub_1C2A9C4F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29C5960(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29E9E00(v2, (uint64_t)v12, (uint64_t (*)(void))sub_1C29C5960);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    sub_1C29E9B94(0, &qword_1EBB8FB38, sub_1C29E9B60, MEMORY[0x1E4F3DF60]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    a1(v9);
    if (v3)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_1C29E9B94(0, &qword_1EBB8FB38, sub_1C29E9B60, MEMORY[0x1E4F3DF60]);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 0, 1, v15);
    }
  }
}

uint64_t sub_1C29E8AF8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C2954C90(*a1, *a2);
}

uint64_t sub_1C29E8B04()
{
  return sub_1C2A9E9E8();
}

uint64_t sub_1C29E8B9C()
{
  sub_1C2A9DD78();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C29E8C20()
{
  return sub_1C2A9E9E8();
}

uint64_t sub_1C29E8CB4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C29EA220();
  *a1 = result;
  return result;
}

void sub_1C29E8CE4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x6573696372657845;
  if (v2 != 1)
  {
    uint64_t v5 = 0x646E617453;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1702260557;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C29E8D38@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  sub_1C29C5960(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v42 = (uint64_t)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29E9AD8();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v44 = (uint64_t)v39 - v9;
  uint64_t v10 = sub_1C2A9C4F8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29E99B8(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v43 = (uint64_t)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v39 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v41 = (uint64_t)v39 - v20;
  uint64_t v40 = type metadata accessor for ActivitySummarySnidgetValueView();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, &a1[*(int *)(v40 + 24)], v10);
  uint64_t v21 = sub_1C2A9D998();
  uint64_t v23 = v22;
  char v25 = v24;
  uint64_t v27 = v26;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v48 = v21;
  uint64_t v49 = v23;
  v39[0] = v23;
  char v50 = v25 & 1;
  uint64_t v51 = v27;
  uint64_t v52 = KeyPath;
  uint64_t v53 = 1;
  char v54 = 0;
  uint64_t v46 = 0;
  unint64_t v47 = 0xE000000000000000;
  if (*(void *)a1)
  {
    swift_retain();
    sub_1C2A9CC18();
    uint64_t v30 = v29;
    swift_release();
    if (!v30) {
      sub_1C2A9DD28();
    }
    v39[1] = v27;
    sub_1C2A9DDB8();
    swift_bridgeObjectRelease();
    sub_1C2A9DDB8();
    sub_1C2A9DDB8();
    swift_bridgeObjectRelease();
    sub_1C2A9DDB8();
    sub_1C29E99EC();
    sub_1C29E9CD0();
    sub_1C2A9DA48();
    swift_bridgeObjectRelease();
    sub_1C2980010(v21, v39[0], v25 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v31 = v41;
    sub_1C29E9D98((uint64_t)v18, v41, (uint64_t (*)(void))sub_1C29E99B8);
    uint64_t v32 = v42;
    uint64_t v33 = sub_1C29E9E00((uint64_t)&a1[*(int *)(v40 + 28)], v42, (uint64_t (*)(void))sub_1C29C5960);
    MEMORY[0x1F4188790](v33);
    v39[-2] = (uint64_t)a1;
    sub_1C29E8854((void (*)(char *))sub_1C29E9D78, (uint64_t)v7);
    sub_1C29E9F40(v32, (uint64_t (*)(void))sub_1C29C5960);
    uint64_t v34 = v44;
    sub_1C29E9D98((uint64_t)v7, v44, (uint64_t (*)(void))sub_1C29E9AD8);
    uint64_t v35 = v43;
    sub_1C29E9E00(v31, v43, (uint64_t (*)(void))sub_1C29E99B8);
    sub_1C29E9E00(v34, (uint64_t)v7, (uint64_t (*)(void))sub_1C29E9AD8);
    uint64_t v36 = v45;
    sub_1C29E9E00(v35, v45, (uint64_t (*)(void))sub_1C29E99B8);
    sub_1C29E9948();
    sub_1C29E9E00((uint64_t)v7, v36 + *(int *)(v37 + 48), (uint64_t (*)(void))sub_1C29E9AD8);
    sub_1C29E9F40(v34, (uint64_t (*)(void))sub_1C29E9AD8);
    sub_1C29E9F40(v31, (uint64_t (*)(void))sub_1C29E99B8);
    sub_1C29E9F40((uint64_t)v7, (uint64_t (*)(void))sub_1C29E9AD8);
    return sub_1C29E9F40(v35, (uint64_t (*)(void))sub_1C29E99B8);
  }
  else
  {
    sub_1C2A9CC28();
    sub_1C29EA180(&qword_1EBB8FB98, MEMORY[0x1E4F66428]);
    uint64_t result = sub_1C2A9D5F8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C29E92F4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v43 = a3;
  sub_1C29E98E4(0, &qword_1EBB8FB10, MEMORY[0x1E4F665C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v46 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v36 - v8;
  uint64_t v10 = sub_1C2A9C4F8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C2A9CD78();
  uint64_t v38 = *(void *)(v14 - 8);
  uint64_t v39 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v37 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29E9B60(0);
  uint64_t v42 = v16;
  __n128 v17 = MEMORY[0x1F4188790](v16);
  uint64_t v41 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
  v36[1] = v13;
  v19(v13, a1, v10, v17);
  uint64_t v20 = type metadata accessor for ActivitySummarySnidgetValueView();
  uint64_t v21 = a2;
  sub_1C2A9CD48();
  uint64_t v22 = sub_1C2A9CD58();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v24 = 1;
  uint64_t v40 = v9;
  v23(v9, 0, 1, v22);
  uint64_t v25 = *(int *)(v20 + 36);
  uint64_t v26 = v21;
  if ((*((unsigned char *)v21 + v25 + 8) & 1) == 0)
  {
    sub_1C2A9CD48();
    uint64_t v24 = 0;
  }
  v23(v46, v24, 1, v22);
  uint64_t v27 = v37;
  sub_1C2A9CD68();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = v38;
  uint64_t v29 = v39;
  uint64_t v31 = (uint64_t)v41;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v41, v27, v39);
  uint64_t v32 = v31 + *(int *)(v42 + 36);
  *(void *)uint64_t v32 = KeyPath;
  *(void *)(v32 + 8) = 1;
  *(unsigned char *)(v32 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  if (*v26)
  {
    swift_retain();
    sub_1C2A9CC18();
    uint64_t v34 = v33;
    swift_release();
    if (!v34) {
      sub_1C2A9DD28();
    }
    sub_1C2A9DDB8();
    swift_bridgeObjectRelease();
    sub_1C2A9DDB8();
    sub_1C2A9DDB8();
    swift_bridgeObjectRelease();
    sub_1C2A9DDB8();
    sub_1C29E9E68();
    sub_1C2A9DA48();
    swift_bridgeObjectRelease();
    return sub_1C29E9F40(v31, (uint64_t (*)(void))sub_1C29E9B60);
  }
  else
  {
    sub_1C2A9CC28();
    sub_1C29EA180(&qword_1EBB8FB98, MEMORY[0x1E4F66428]);
    uint64_t result = sub_1C2A9D5F8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C29E9804@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1C2A9D738();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_1C29E9848();
  return sub_1C29E8D38(v1, a1 + *(int *)(v3 + 44));
}

void sub_1C29E9848()
{
  if (!qword_1EBB8FB20)
  {
    sub_1C29E98B0(255);
    unint64_t v0 = sub_1C2A9D578();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8FB20);
    }
  }
}

void sub_1C29E98B0(uint64_t a1)
{
}

void sub_1C29E98E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C29E9948()
{
  if (!qword_1EBB8FB48)
  {
    sub_1C29E99B8(255);
    sub_1C29E9AD8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB8FB48);
    }
  }
}

void sub_1C29E99B8(uint64_t a1)
{
}

void sub_1C29E99EC()
{
  if (!qword_1EBB8E7B0)
  {
    sub_1C29E9A4C(255);
    unint64_t v0 = sub_1C2A9D5B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8E7B0);
    }
  }
}

void sub_1C29E9A4C(uint64_t a1)
{
}

void sub_1C29E9A80()
{
  if (!qword_1EBB913F8)
  {
    unint64_t v0 = sub_1C2A9E328();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB913F8);
    }
  }
}

void sub_1C29E9AD8()
{
  if (!qword_1EBB8FB40)
  {
    sub_1C29E9B94(255, &qword_1EBB8FB38, sub_1C29E9B60, MEMORY[0x1E4F3DF60]);
    unint64_t v0 = sub_1C2A9E328();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8FB40);
    }
  }
}

void sub_1C29E9B60(uint64_t a1)
{
}

void sub_1C29E9B94(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_1C2A9D5B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C29E9C08@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1C2A9D658();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1C29E9C3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1C2A9D658();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1C29E9C70()
{
  return sub_1C2A9D668();
}

uint64_t sub_1C29E9CA0()
{
  return sub_1C2A9D668();
}

unint64_t sub_1C29E9CD0()
{
  unint64_t result = qword_1EBB8FCC0;
  if (!qword_1EBB8FCC0)
  {
    sub_1C29E99EC();
    sub_1C29EA180(&qword_1EBB8FD18, sub_1C29E9A4C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8FCC0);
  }
  return result;
}

uint64_t sub_1C29E9D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C29E92F4(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1C29E9D98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C29E9E00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C29E9E68()
{
  unint64_t result = qword_1EBB8FB28;
  if (!qword_1EBB8FB28)
  {
    sub_1C29E9B60(255);
    sub_1C29EA180(&qword_1EBB8FB18, MEMORY[0x1E4F665D0]);
    sub_1C29EA180(&qword_1EBB8FD18, sub_1C29E9A4C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8FB28);
  }
  return result;
}

uint64_t sub_1C29E9F40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ActivitySummarySnidgetValueView.ValueType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C29EA06CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySummarySnidgetValueView.ValueType()
{
  return &type metadata for ActivitySummarySnidgetValueView.ValueType;
}

uint64_t sub_1C29EA0A4()
{
  return sub_1C29EA180(&qword_1EBB8FB58, (void (*)(uint64_t))sub_1C29EA0EC);
}

void sub_1C29EA0EC()
{
  if (!qword_1EBB8FB60)
  {
    sub_1C29E98B0(255);
    sub_1C29EA180(&qword_1EBB8FB68, sub_1C29E98B0);
    unint64_t v0 = sub_1C2A9DB58();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8FB60);
    }
  }
}

uint64_t sub_1C29EA180(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C29EA1CC()
{
  unint64_t result = qword_1EA31E8C8;
  if (!qword_1EA31E8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E8C8);
  }
  return result;
}

uint64_t sub_1C29EA220()
{
  unint64_t v0 = sub_1C2A9E6E8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C29EA26C(uint64_t a1)
{
  id v1 = *(id *)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  sub_1C296276C(*(id *)a1, v3);
  swift_retain();
  sub_1C2A9C9C8();
  sub_1C2962A14(v1, v3);
  return swift_release();
}

uint64_t sub_1C29EA2FC()
{
  swift_retain();
  sub_1C2A9C9B8();
  swift_release();
  return v1;
}

id sub_1C29EA34C()
{
  uint64_t v1 = qword_1EBB91CC8;
  uint64_t v2 = *(void **)(v0 + qword_1EBB91CC8);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EBB91CC8);
  }
  else
  {
    sub_1C29EA3B8((char *)(v0 + qword_1EBB9F108));
    unsigned int v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1C29EA3B8(char *a1)
{
  id v63 = a1;
  uint64_t v2 = sub_1C2A9C398();
  uint64_t v58 = *(void *)(v2 - 8);
  uint64_t v59 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v56 = v3;
  uint64_t v57 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C2A9C6E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C2A9C728();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C2A9C868();
  uint64_t v61 = *(void *)(v12 - 8);
  uint64_t v62 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1C2A9CF58();
  uint64_t v60 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v54 = v15;
  uint64_t v55 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v50 - v17;
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  id v19 = (id)qword_1EBB91C60;
  unint64_t v64 = v1;
  uint64_t v65 = v18;
  sub_1C2A9CF48();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F27B20], v8);
  sub_1C2A9C738();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v20 = v63;
  sub_1C2A9C378();
  uint64_t v21 = (void *)sub_1C2A9C658();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v5 + 8);
  v22(v7, v4);
  uint64_t v23 = (void *)sub_1C2A9C7D8();
  uint64_t v24 = objc_msgSend(v21, sel_hk_morningIndexWithCalendar_, v23);

  sub_1C2A9C348();
  uint64_t v25 = (void *)sub_1C2A9C658();
  v22(v7, v4);
  uint64_t v26 = (void *)sub_1C2A9C7D8();
  uint64_t v27 = objc_msgSend(v25, sel_hk_morningIndexWithCalendar_, v26);

  uint64_t v53 = v24;
  int64_t v28 = v27 - v24;
  if (__OFSUB__(v27, v24))
  {
    __break(1u);
  }
  else if (!__OFADD__(v28, 1))
  {
    uint64_t v29 = v14;
    uint64_t v30 = v20;
    uint64_t v52 = *(void *)&v64[qword_1EBB9F008];
    int64_t v51 = v28 + 1;
    uint64_t v31 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v32 = v60;
    uint64_t v33 = v55;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v55, v65, v66);
    uint64_t v35 = v57;
    uint64_t v34 = v58;
    uint64_t v36 = v59;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v57, v30, v59);
    uint64_t v37 = *(unsigned __int8 *)(v32 + 80);
    id v63 = v29;
    uint64_t v38 = (v37 + 16) & ~v37;
    unint64_t v39 = (v54 + *(unsigned __int8 *)(v34 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    unint64_t v40 = (v56 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v41 = swift_allocObject();
    uint64_t v42 = v33;
    uint64_t v43 = v66;
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v41 + v38, v42, v66);
    (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v41 + v39, v35, v36);
    *(void *)(v41 + v40) = v31;
    id v44 = objc_allocWithZone(MEMORY[0x1E4F2B538]);
    aBlock[4] = sub_1C29EC25C;
    aBlock[5] = v41;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C29EBB3C;
    aBlock[3] = &block_descriptor_3;
    unint64_t v45 = _Block_copy(aBlock);
    swift_retain();
    id v46 = objc_msgSend(v44, sel_initWithMorningIndexRange_ascending_limit_options_resultsHandler_, v53, v51, 1, 0, v52, v45);
    _Block_release(v45);
    swift_release();
    swift_release();
    id v47 = v46;
    uint64_t v48 = v64;
    id v49 = objc_msgSend(v64, sel_name);
    objc_msgSend(v47, sel_setDebugIdentifier_, v49);

    objc_msgSend(v47, sel_setCacheSettings_, *(void *)&v48[qword_1EBB9F010]);
    objc_msgSend(v47, sel_setQualityOfService_, *(void *)&v48[qword_1EBB9F110]);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v62);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v65, v43);
    return;
  }
  __break(1u);
}

id SleepQueryOperation.__allocating_init(dateInterval:name:queryOptions:queryQualityOfService:queryCacheSettings:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  id v15 = objc_allocWithZone(v7);
  id v16 = sub_1C29EBBE4(a1, a2, a3, a4, a5, a6, a7);

  return v16;
}

id SleepQueryOperation.init(dateInterval:name:queryOptions:queryQualityOfService:queryCacheSettings:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  id v9 = sub_1C29EBBE4(a1, a2, a3, a4, a5, a6, a7);

  return v9;
}

uint64_t SleepQueryOperation.__allocating_init(sleepQueryConfig:endDate:healthStore:name:queryQualityOfService:queryCacheSettings:)(uint64_t a1, char *a2, void *a3, uint64_t a4, uint64_t a5, char *a6, void *a7)
{
  uint64_t v42 = a5;
  uint64_t v43 = a7;
  uint64_t v39 = a4;
  unint64_t v40 = a6;
  id v45 = a3;
  uint64_t v10 = sub_1C2A9CFE8();
  uint64_t v41 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v44 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29EC41C(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = sub_1C2A9C398();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v39 - v20;
  char v22 = *(unsigned char *)a1;
  uint64_t v23 = *(void *)(a1 + 8);
  DateRange.dateInterval(endingAt:)(a2, v22, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    uint64_t v39 = v10;
    unint64_t v40 = a2;
    swift_bridgeObjectRelease();
    sub_1C296B6C4((uint64_t)v14);
    uint64_t v46 = v7;
    swift_getMetatypeMetadata();
    uint64_t v24 = sub_1C2A9DD58();
    unint64_t v26 = v25;
    sub_1C2A9CF68();
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1C2A9CFC8();
    os_log_type_t v28 = sub_1C2A9E0A8();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v30 = v43;
    if (v29)
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v48 = v32;
      *(_DWORD *)uint64_t v31 = 136380931;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_1C2957168(v24, v26, &v48);
      sub_1C2A9E358();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2081;
      LOBYTE(v46) = v22;
      uint64_t v47 = v23;
      uint64_t v33 = sub_1C2A9DD58();
      uint64_t v46 = sub_1C2957168(v33, v34, &v48);
      sub_1C2A9E358();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C292A000, v27, v28, "%{private}s: Attempted to create query with unsupported configuration %{private}s.", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v32, -1, -1);
      MEMORY[0x1C87656F0](v31, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v37 = sub_1C2A9C6E8();
    (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v40, v37);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v39);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
    uint64_t v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, char *, void *, id))(class metadata base offset for SleepQueryOperation
                                                                                           + v7
                                                                                           + 128))(v18, v39, v42, v23, v40, v43, v45);
    uint64_t v36 = sub_1C2A9C6E8();
    (*(void (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(a2, v36);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  }
  return v35;
}

uint64_t sub_1C29EB044()
{
  uint64_t v1 = sub_1C2A9CF58();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C2962438();
  uint64_t v5 = (void *)swift_allocError();
  unsigned char *v6 = 2;
  uint64_t v21 = v5;
  char v22 = 1;
  swift_retain();
  sub_1C2A9C9C8();

  swift_release();
  sub_1C2A9C398();
  sub_1C29EBE1C();
  v7._countAndFlagsBits = sub_1C2A9E898();
  id v9 = v8;
  v10._countAndFlagsBits = 0x676E696E6E7572;
  v10._object = (void *)0xE700000000000000;
  v7._object = v9;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v10, v7);
  swift_bridgeObjectRelease();
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EBB91C60;
  uint64_t v12 = v0;
  sub_1C2A9CF48();
  sub_1C2A9E1B8();
  sub_1C29624A4();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C2AA6B00;
  uint64_t v14 = sub_1C2A9DD28();
  uint64_t v16 = v15;
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 64) = sub_1C296250C();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  sub_1C2A9CF28();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void **)&v12[qword_1EBB9F100];
  id v18 = sub_1C29EA34C();
  objc_msgSend(v17, sel_executeQuery_, v18);

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1C29EB318(void *a1)
{
  id v1 = a1;
  sub_1C29EB044();
}

void sub_1C29EB360()
{
  if (objc_msgSend(v0, sel_isCancelled))
  {
    sub_1C2962438();
    id v1 = (void *)swift_allocError();
    *uint64_t v2 = 3;
    MEMORY[0x1F4188790](v1);
    swift_retain();
    sub_1C2A9C9C8();

    swift_release();
    sub_1C2A9C398();
    sub_1C29EBE1C();
    v3._countAndFlagsBits = sub_1C2A9E898();
    uint64_t v5 = v4;
    v6._countAndFlagsBits = 0x656C6C65636E6163;
    v6._object = (void *)0xE900000000000064;
    v3._object = v5;
    NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v6, v3);
    swift_bridgeObjectRelease();
  }
  Swift::String v7 = *(void **)&v0[qword_1EBB9F100];
  id v8 = sub_1C29EA34C();
  objc_msgSend(v7, sel_stopQuery_, v8);
}

id SleepQueryOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SleepQueryOperation.init()()
{
}

void sub_1C29EB534()
{
}

void sub_1C29EB564()
{
  swift_release();
  uint64_t v1 = v0 + qword_1EBB9F108;
  uint64_t v2 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  Swift::String v3 = *(void **)(v0 + qword_1EBB91CC8);
}

id SleepQueryOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SleepQueryOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C29EB648(uint64_t a1)
{
  swift_release();
  uint64_t v2 = a1 + qword_1EBB9F108;
  uint64_t v3 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  uint64_t v4 = *(void **)(a1 + qword_1EBB91CC8);
}

uint64_t sub_1C29EB6F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(class metadata base offset for SleepQueryOperation + (*MEMORY[0x1E4FBC8C8] & **v1) + 80))();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v4 & 1;
  return result;
}

void sub_1C29EB778(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = a6 + 16;
  sub_1C2A9E1A8();
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  sub_1C29624A4();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C2AA6B00;
  Swift::String v10 = DateInterval.stringWithISO8601Format()();
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 64) = sub_1C296250C();
  *(Swift::String *)(v9 + 32) = v10;
  sub_1C2A9CF28();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  id v11 = (void *)MEMORY[0x1C87657D0](v8);
  if (v11)
  {
    uint64_t v12 = v11;
    if (objc_msgSend(v11, sel_isCancelled))
    {
      v13._countAndFlagsBits = 0xD00000000000002DLL;
      v13._object = (void *)0x80000001C2AB6030;
      v14._countAndFlagsBits = 0;
      v14._object = (void *)0xE000000000000000;
      NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v13, v14);
LABEL_7:

      return;
    }
    uint64_t v15 = (uint64_t)objc_msgSend(v12, sel_isFinished);
    if (v15) {
      goto LABEL_7;
    }
    uint64_t v16 = a2;
    if (!a2)
    {
      if (a3) {
        uint64_t v17 = 0xD00000000000001ALL;
      }
      else {
        uint64_t v17 = 0;
      }
      if (a3) {
        uint64_t v18 = 0x80000001C2AB8960;
      }
      else {
        uint64_t v18 = 0;
      }
      if (a3) {
        unint64_t v19 = a3 | 0x8000000000000000;
      }
      else {
        unint64_t v19 = 0xC000000000000000;
      }
      sub_1C296291C();
      uint64_t v20 = (void *)swift_allocError();
      *uint64_t v21 = v17;
      v21[1] = v18;
      v21[2] = v19;
      swift_getErrorValue();
      id v22 = (id)a3;
      sub_1C2962970(v17, v18, v19);
      v23._countAndFlagsBits = sub_1C2A9E938();
      v24._countAndFlagsBits = 0;
      v24._object = (void *)0xE000000000000000;
      NSOperation.logErrorString(_:withInfo:)(v23, v24);
      swift_bridgeObjectRelease();

      uint64_t v15 = swift_allocError();
      uint64_t v16 = (void *)v15;
      *unint64_t v25 = v17;
      v25[1] = v18;
      v25[2] = v19;
    }
    MEMORY[0x1F4188790](v15);
    swift_bridgeObjectRetain();
    sub_1C2A9CA08();

    sub_1C2962A14(v16, a2 == 0);
  }
}

void sub_1C29EBA88(uint64_t a1, void *a2, char a3)
{
  char v4 = a3 & 1;
  sub_1C296276C(a2, a3 & 1);
  swift_retain();
  sub_1C2A9C9C8();
  sub_1C2962A14(a2, v4);
  swift_release();
  v5._countAndFlagsBits = 0x64656873696E6966;
  v5._object = (void *)0xE800000000000000;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v5, v6);
}

uint64_t sub_1C29EBB3C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  Swift::String v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C29EC374();
    uint64_t v5 = sub_1C2A9DE98();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1C29EBBE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v14 = qword_1EBB8EBA0;
  sub_1C2962438();
  uint64_t v15 = swift_allocError();
  *uint64_t v16 = 0;
  uint64_t v30 = v15;
  char v31 = 1;
  sub_1C29EC41C(0, &qword_1EBB8E8B0, (uint64_t (*)(uint64_t))sub_1C29EC480, MEMORY[0x1E4F674D8]);
  swift_allocObject();
  uint64_t v17 = v7;
  *(void *)&v7[v14] = sub_1C2A9C9F8();
  *(void *)&v17[qword_1EBB91CC8] = 0;
  uint64_t v18 = &v17[qword_1EBB9F108];
  uint64_t v19 = sub_1C2A9C398();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = v18;
  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v21, a1, v19);
  *(void *)&v17[qword_1EBB9F100] = a7;
  *(void *)&v17[qword_1EBB9F008] = a4;
  *(void *)&v17[qword_1EBB9F110] = a5;
  *(void *)&v17[qword_1EBB9F010] = a6;
  id v23 = a6;
  id v24 = a7;

  v29.receiver = v17;
  v29.super_class = (Class)type metadata accessor for SleepQueryOperation();
  id v25 = objc_msgSendSuper2(&v29, sel_init);
  id v26 = v25;
  if (a3)
  {
    uint64_t v27 = (void *)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = 0;
  }
  objc_msgSend(v25, sel_setName_, v27);

  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v19);
  return v25;
}

unint64_t sub_1C29EBE1C()
{
  unint64_t result = qword_1EBB91BE8;
  if (!qword_1EBB91BE8)
  {
    sub_1C2A9C398();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91BE8);
  }
  return result;
}

uint64_t type metadata accessor for SleepQueryOperation()
{
  uint64_t result = qword_1EBB91CD0;
  if (!qword_1EBB91CD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C29EBEC0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(class metadata base offset for SleepQueryOperation + (*MEMORY[0x1E4FBC8C8] & **a1) + 80))();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1C29EBF44()
{
  uint64_t result = sub_1C2A9C398();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SleepQueryOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SleepQueryOperation);
}

uint64_t dispatch thunk of SleepQueryOperation.result.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SleepQueryOperation + (*MEMORY[0x1E4FBC8C8] & *v0) + 80))();
}

uint64_t dispatch thunk of SleepQueryOperation.__allocating_init(dateInterval:name:queryOptions:queryQualityOfService:queryCacheSettings:healthStore:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SleepQueryOperation + v0 + 128))();
}

uint64_t sub_1C29EC0B8()
{
  return type metadata accessor for SleepQueryOperation();
}

uint64_t sub_1C29EC0C0()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C29EC0F8()
{
  uint64_t v1 = sub_1C2A9CF58();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_1C2A9C398();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();
  return MEMORY[0x1F4186498](v0, v11 + 8, v10);
}

void sub_1C29EC25C(uint64_t a1, void *a2, unint64_t a3)
{
  uint64_t v7 = *(void *)(sub_1C2A9CF58() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(sub_1C2A9C398() - 8);
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v3 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1C29EB778(a1, a2, a3, v3 + v8, v3 + v11, v12);
}

unint64_t sub_1C29EC374()
{
  unint64_t result = qword_1EBB8F878;
  if (!qword_1EBB8F878)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB8F878);
  }
  return result;
}

void sub_1C29EC3B4()
{
  sub_1C29EBA88(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

id sub_1C29EC3C0(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 24);
  sub_1C2962A14(*(id *)a1, *(unsigned char *)(a1 + 8));
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return sub_1C296276C(v3, v4);
}

void sub_1C29EC41C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C29EC480()
{
  if (!qword_1EBB8FA18)
  {
    sub_1C29EC41C(255, &qword_1EBB8F818, (uint64_t (*)(uint64_t))sub_1C29EC374, MEMORY[0x1E4FBB320]);
    sub_1C29415E4(255, (unint64_t *)&qword_1EBB92210);
    unint64_t v0 = sub_1C2A9E9F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8FA18);
    }
  }
}

Swift::Void __swiftcall UnitChangeObserving.unregisterForUnitChanges()()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_name_object_, v0, *MEMORY[0x1E4F67970], 0);
}

void sub_1C29EC5A4()
{
  qword_1EBB9F0D0 = 0x4048000000000000;
}

void sub_1C29EC5B4()
{
  qword_1EBB9F0D8 = 0x4000000000000000;
}

id sub_1C29EC5C4()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthVisualization22ActivityRingCircleView____lazy_storage___activityRingView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthVisualization22ActivityRingCircleView____lazy_storage___activityRingView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthVisualization22ActivityRingCircleView____lazy_storage___activityRingView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2BFE0]), sel_init);
    id v5 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(v4, sel__setActivityRingViewBackgroundColor_, v5);

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C29EC760(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC19HealthVisualization22ActivityRingCircleView____lazy_storage___activityRingView] = 0;
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for ActivityRingCircleView();
  id v3 = objc_msgSendSuper2(&v9, sel_initWithCoder_, a1);
  id v4 = v3;
  if (v3)
  {
    id v5 = v3;
    id v6 = sub_1C29EC5C4();
    objc_msgSend(v5, sel_addSubview_, v6);

    id v7 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(v5, sel_setBackgroundColor_, v7);

    a1 = v7;
  }

  return v4;
}

void sub_1C29EC9D0()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for ActivityRingCircleView();
  objc_msgSendSuper2(&v10, sel_layoutSubviews);
  if (qword_1EBB91248 != -1) {
    swift_once();
  }
  double v1 = *(double *)&qword_1EBB9F0D0;
  id v2 = objc_msgSend(v0, sel_traitCollection);
  id v3 = objc_msgSend(v2, sel_preferredContentSizeCategory);

  char v4 = sub_1C2A9E208();
  id v5 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v5, sel_setCornerRadius_, CGRectGetWidth(v11) * 0.5);

  id v6 = sub_1C29EC5C4();
  if (qword_1EBB91250 != -1) {
    swift_once();
  }
  double v7 = 1.0;
  if (v4) {
    double v7 = 1.75;
  }
  double v8 = v1 * v7;
  objc_msgSend(v6, sel_bounds);
  objc_msgSend(v6, sel_setBounds_);

  id v9 = sub_1C29EC5C4();
  objc_msgSend(v9, sel_setCenter_, v8 * 0.5, v8 * 0.5);
}

uint64_t type metadata accessor for ActivityRingCircleView()
{
  return self;
}

id ActivityRingCircleView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityRingCircleView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for ActivityRingCircleView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ActivityRingCircleView);
}

uint64_t sub_1C29ECC58(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *(void *)a1 = *a2;
    uint64_t v31 = v30 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_1C2A9C858();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = type metadata accessor for TimeBasedDistribution();
    *(void *)(v8 + *(int *)(v11 + 20)) = *(void *)(v9 + *(int *)(v11 + 20));
    uint64_t v12 = *(int *)(v11 + 24);
    Swift::String v13 = (void *)(v8 + v12);
    uint64_t v14 = (void *)(v9 + v12);
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = *(int *)(a3 + 32);
    uint64_t v56 = a1;
    uint64_t v17 = a1 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    *(unsigned char *)uint64_t v17 = *((unsigned char *)a2 + v16);
    uint64_t v19 = a1 + v16 + 8;
    long long v20 = *(_OWORD *)(v18 + 32);
    *(_OWORD *)(v17 + 32) = v20;
    uint64_t v21 = v20;
    uint64_t v22 = **(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v19, v18 + 8, v21);
    uint64_t v53 = (int *)type metadata accessor for TimeBasedDistributionChartModel();
    uint64_t v54 = v18;
    uint64_t v23 = v53[6];
    uint64_t v55 = v17;
    id v24 = (char *)(v17 + v23);
    id v25 = (char *)(v18 + v23);
    uint64_t v26 = sub_1C2A9D2E8();
    uint64_t v27 = *(void *)(v26 - 8);
    os_log_type_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    if (v28(v25, 1, v26))
    {
      sub_1C29F2D4C(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
      memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    uint64_t v32 = (int *)type metadata accessor for TimeBasedDistributionChartDesign();
    uint64_t v33 = v32[5];
    unint64_t v34 = &v24[v33];
    uint64_t v35 = &v25[v33];
    if (v28(&v25[v33], 1, v26))
    {
      sub_1C29F2D4C(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v34, v35, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v34, 0, 1, v26);
    }
    *(void *)&v24[v32[6]] = *(void *)&v25[v32[6]];
    *(void *)&v24[v32[7]] = *(void *)&v25[v32[7]];
    *(void *)&v24[v32[8]] = *(void *)&v25[v32[8]];
    *(void *)&v24[v32[9]] = *(void *)&v25[v32[9]];
    uint64_t v37 = v32[10];
    int64_t v51 = &v25[v37];
    uint64_t v52 = &v24[v37];
    uint64_t v38 = sub_1C2A9D598();
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v39(v52, v51, v38);
    *(void *)&v24[v32[11]] = *(void *)&v25[v32[11]];
    *(void *)&v24[v32[12]] = *(void *)&v25[v32[12]];
    *(void *)&v24[v32[13]] = *(void *)&v25[v32[13]];
    *(void *)&v24[v32[14]] = *(void *)&v25[v32[14]];
    *(void *)&v24[v32[15]] = *(void *)&v25[v32[15]];
    *(void *)&v24[v32[16]] = *(void *)&v25[v32[16]];
    *(void *)&v24[v32[17]] = *(void *)&v25[v32[17]];
    *(void *)&v24[v32[18]] = *(void *)&v25[v32[18]];
    *(void *)&v24[v32[19]] = *(void *)&v25[v32[19]];
    *(void *)&v24[v32[20]] = *(void *)&v25[v32[20]];
    *(void *)&v24[v32[21]] = *(void *)&v25[v32[21]];
    *(void *)&v24[v32[22]] = *(void *)&v25[v32[22]];
    *(void *)&v24[v32[23]] = *(void *)&v25[v32[23]];
    *(void *)&v24[v32[24]] = *(void *)&v25[v32[24]];
    v24[v32[25]] = v25[v32[25]];
    uint64_t v40 = v53[7];
    uint64_t v41 = v55 + v40;
    uint64_t v42 = v54 + v40;
    long long v43 = *(_OWORD *)(v54 + v40 + 24);
    *(_OWORD *)(v55 + v40 + 24) = v43;
    uint64_t v44 = v43;
    id v45 = **(void (***)(uint64_t, uint64_t, uint64_t))(v43 - 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v45(v41, v42, v44);
    uint64_t v46 = v53[8];
    uint64_t v47 = v55 + v46;
    uint64_t v48 = v54 + v46;
    uint64_t v49 = sub_1C2A9CFE8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
    return v56;
  }
  return v31;
}

uint64_t sub_1C29ED234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for TimeBasedDistribution();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(v6 + 8);
  uint64_t v7 = (int *)type metadata accessor for TimeBasedDistributionChartModel();
  uint64_t v8 = v6 + v7[6];
  uint64_t v9 = sub_1C2A9D2E8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v12 = type metadata accessor for TimeBasedDistributionChartDesign();
  uint64_t v13 = v8 + *(int *)(v12 + 20);
  if (!v11(v13, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v14 = v8 + *(int *)(v12 + 40);
  uint64_t v15 = sub_1C2A9D598();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v6 + v7[7]);
  uint64_t v16 = v6 + v7[8];
  uint64_t v17 = sub_1C2A9CFE8();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
  return v18(v16, v17);
}

uint64_t sub_1C29ED4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for TimeBasedDistribution();
  *(void *)(v7 + *(int *)(v10 + 20)) = *(void *)(v8 + *(int *)(v10 + 20));
  uint64_t v11 = *(int *)(v10 + 24);
  uint64_t v12 = (void *)(v7 + v11);
  uint64_t v13 = (void *)(v8 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v54 = a1;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(unsigned char *)uint64_t v16 = *(unsigned char *)(a2 + v15);
  uint64_t v18 = a1 + v15 + 8;
  uint64_t v19 = a2 + v15 + 8;
  long long v20 = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 32) = v20;
  uint64_t v21 = v20;
  uint64_t v22 = **(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22(v18, v19, v21);
  int64_t v51 = (int *)type metadata accessor for TimeBasedDistributionChartModel();
  uint64_t v52 = v17;
  uint64_t v23 = v51[6];
  uint64_t v53 = v16;
  id v24 = (char *)(v16 + v23);
  id v25 = (char *)(v17 + v23);
  uint64_t v26 = sub_1C2A9D2E8();
  uint64_t v27 = *(void *)(v26 - 8);
  os_log_type_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v28(v25, 1, v26))
  {
    sub_1C29F2D4C(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
    memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v30 = (int *)type metadata accessor for TimeBasedDistributionChartDesign();
  uint64_t v31 = v30[5];
  uint64_t v32 = &v24[v31];
  uint64_t v33 = &v25[v31];
  if (v28(&v25[v31], 1, v26))
  {
    sub_1C29F2D4C(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v32, v33, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v32, 0, 1, v26);
  }
  *(void *)&v24[v30[6]] = *(void *)&v25[v30[6]];
  *(void *)&v24[v30[7]] = *(void *)&v25[v30[7]];
  *(void *)&v24[v30[8]] = *(void *)&v25[v30[8]];
  *(void *)&v24[v30[9]] = *(void *)&v25[v30[9]];
  uint64_t v35 = v30[10];
  uint64_t v49 = &v25[v35];
  uint64_t v50 = &v24[v35];
  uint64_t v36 = sub_1C2A9D598();
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v37(v50, v49, v36);
  *(void *)&v24[v30[11]] = *(void *)&v25[v30[11]];
  *(void *)&v24[v30[12]] = *(void *)&v25[v30[12]];
  *(void *)&v24[v30[13]] = *(void *)&v25[v30[13]];
  *(void *)&v24[v30[14]] = *(void *)&v25[v30[14]];
  *(void *)&v24[v30[15]] = *(void *)&v25[v30[15]];
  *(void *)&v24[v30[16]] = *(void *)&v25[v30[16]];
  *(void *)&v24[v30[17]] = *(void *)&v25[v30[17]];
  *(void *)&v24[v30[18]] = *(void *)&v25[v30[18]];
  *(void *)&v24[v30[19]] = *(void *)&v25[v30[19]];
  *(void *)&v24[v30[20]] = *(void *)&v25[v30[20]];
  *(void *)&v24[v30[21]] = *(void *)&v25[v30[21]];
  *(void *)&v24[v30[22]] = *(void *)&v25[v30[22]];
  *(void *)&v24[v30[23]] = *(void *)&v25[v30[23]];
  *(void *)&v24[v30[24]] = *(void *)&v25[v30[24]];
  v24[v30[25]] = v25[v30[25]];
  uint64_t v38 = v51[7];
  uint64_t v39 = v53 + v38;
  uint64_t v40 = v52 + v38;
  long long v41 = *(_OWORD *)(v52 + v38 + 24);
  *(_OWORD *)(v53 + v38 + 24) = v41;
  uint64_t v42 = v41;
  long long v43 = **(void (***)(uint64_t, uint64_t, uint64_t))(v41 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v43(v39, v40, v42);
  uint64_t v44 = v51[8];
  uint64_t v45 = v53 + v44;
  uint64_t v46 = v52 + v44;
  uint64_t v47 = sub_1C2A9CFE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  return v54;
}

uint64_t sub_1C29EDA5C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (uint64_t)a2 + v8;
  uint64_t v11 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = type metadata accessor for TimeBasedDistribution();
  *(void *)(v9 + *(int *)(v12 + 20)) = *(void *)(v10 + *(int *)(v12 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(v12 + 24);
  uint64_t v14 = (void *)(v9 + v13);
  uint64_t v15 = (void *)(v10 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(int *)(a3 + 32);
  uint64_t v46 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (uint64_t)a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v17 + 8), (uint64_t *)(v18 + 8));
  long long v43 = (int *)type metadata accessor for TimeBasedDistributionChartModel();
  uint64_t v44 = v18;
  uint64_t v19 = v43[6];
  uint64_t v45 = v17;
  long long v20 = (char *)(v17 + v19);
  uint64_t v21 = (char *)(v18 + v19);
  uint64_t v22 = sub_1C2A9D2E8();
  uint64_t v23 = *(void *)(v22 - 8);
  id v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  LODWORD(v10) = v24(v20, 1, v22);
  int v25 = v24(v21, 1, v22);
  if (v10)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
LABEL_6:
    sub_1C29F2D4C(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
    memcpy(v20, v21, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
LABEL_7:
  uint64_t v27 = (int *)type metadata accessor for TimeBasedDistributionChartDesign();
  uint64_t v28 = v27[5];
  uint64_t v29 = &v20[v28];
  uint64_t v30 = &v21[v28];
  int v31 = v24(&v20[v28], 1, v22);
  int v32 = v24(v30, 1, v22);
  if (!v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v29, v30, v22);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v22);
    goto LABEL_12;
  }
  if (v32)
  {
LABEL_12:
    sub_1C29F2D4C(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v29, v30, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v29, 0, 1, v22);
LABEL_13:
  *(void *)&v20[v27[6]] = *(void *)&v21[v27[6]];
  swift_retain();
  swift_release();
  *(void *)&v20[v27[7]] = *(void *)&v21[v27[7]];
  swift_retain();
  swift_release();
  *(void *)&v20[v27[8]] = *(void *)&v21[v27[8]];
  swift_retain();
  swift_release();
  *(void *)&v20[v27[9]] = *(void *)&v21[v27[9]];
  swift_retain();
  swift_release();
  uint64_t v34 = v27[10];
  uint64_t v35 = &v20[v34];
  uint64_t v36 = &v21[v34];
  uint64_t v37 = sub_1C2A9D598();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  *(void *)&v20[v27[11]] = *(void *)&v21[v27[11]];
  swift_retain();
  swift_release();
  *(void *)&v20[v27[12]] = *(void *)&v21[v27[12]];
  swift_retain();
  swift_release();
  *(void *)&v20[v27[13]] = *(void *)&v21[v27[13]];
  swift_retain();
  swift_release();
  *(void *)&v20[v27[14]] = *(void *)&v21[v27[14]];
  swift_retain();
  swift_release();
  *(void *)&v20[v27[15]] = *(void *)&v21[v27[15]];
  swift_retain();
  swift_release();
  *(void *)&v20[v27[16]] = *(void *)&v21[v27[16]];
  swift_retain();
  swift_release();
  *(void *)&v20[v27[17]] = *(void *)&v21[v27[17]];
  *(void *)&v20[v27[18]] = *(void *)&v21[v27[18]];
  *(void *)&v20[v27[19]] = *(void *)&v21[v27[19]];
  *(void *)&v20[v27[20]] = *(void *)&v21[v27[20]];
  *(void *)&v20[v27[21]] = *(void *)&v21[v27[21]];
  *(void *)&v20[v27[22]] = *(void *)&v21[v27[22]];
  *(void *)&v20[v27[23]] = *(void *)&v21[v27[23]];
  *(void *)&v20[v27[24]] = *(void *)&v21[v27[24]];
  v20[v27[25]] = v21[v27[25]];
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v45 + v43[7]), (uint64_t *)(v18 + v43[7]));
  uint64_t v38 = v43[8];
  uint64_t v39 = v45 + v38;
  uint64_t v40 = v44 + v38;
  uint64_t v41 = sub_1C2A9CFE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 24))(v39, v40, v41);
  return v46;
}

uint64_t sub_1C29EE068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for TimeBasedDistribution();
  *(void *)(v7 + *(int *)(v10 + 20)) = *(void *)(v8 + *(int *)(v10 + 20));
  *(_OWORD *)(v7 + *(int *)(v10 + 24)) = *(_OWORD *)(v8 + *(int *)(v10 + 24));
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v41 = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(a2 + v11);
  *(_OWORD *)(v12 + 8) = *(_OWORD *)(a2 + v11 + 8);
  *(_OWORD *)(v12 + 24) = *(_OWORD *)(a2 + v11 + 24);
  *(void *)(v12 + 40) = *(void *)(a2 + v11 + 40);
  uint64_t v39 = (int *)type metadata accessor for TimeBasedDistributionChartModel();
  uint64_t v40 = v12;
  uint64_t v14 = v39[6];
  uint64_t v15 = (char *)(v12 + v14);
  uint64_t v16 = (char *)(v13 + v14);
  uint64_t v17 = sub_1C2A9D2E8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 1, v17))
  {
    sub_1C29F2D4C(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v21 = (int *)type metadata accessor for TimeBasedDistributionChartDesign();
  uint64_t v22 = v21[5];
  uint64_t v23 = &v15[v22];
  id v24 = &v16[v22];
  if (v19(&v16[v22], 1, v17))
  {
    sub_1C29F2D4C(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v24, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v23, 0, 1, v17);
  }
  *(void *)&v15[v21[6]] = *(void *)&v16[v21[6]];
  *(void *)&v15[v21[7]] = *(void *)&v16[v21[7]];
  *(void *)&v15[v21[8]] = *(void *)&v16[v21[8]];
  *(void *)&v15[v21[9]] = *(void *)&v16[v21[9]];
  uint64_t v26 = v21[10];
  uint64_t v27 = &v15[v26];
  uint64_t v28 = &v16[v26];
  uint64_t v29 = sub_1C2A9D598();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  *(void *)&v15[v21[11]] = *(void *)&v16[v21[11]];
  *(void *)&v15[v21[12]] = *(void *)&v16[v21[12]];
  *(void *)&v15[v21[13]] = *(void *)&v16[v21[13]];
  *(void *)&v15[v21[14]] = *(void *)&v16[v21[14]];
  *(void *)&v15[v21[15]] = *(void *)&v16[v21[15]];
  *(void *)&v15[v21[16]] = *(void *)&v16[v21[16]];
  *(void *)&v15[v21[17]] = *(void *)&v16[v21[17]];
  *(void *)&v15[v21[18]] = *(void *)&v16[v21[18]];
  *(void *)&v15[v21[19]] = *(void *)&v16[v21[19]];
  *(void *)&v15[v21[20]] = *(void *)&v16[v21[20]];
  *(void *)&v15[v21[21]] = *(void *)&v16[v21[21]];
  *(void *)&v15[v21[22]] = *(void *)&v16[v21[22]];
  *(void *)&v15[v21[23]] = *(void *)&v16[v21[23]];
  *(void *)&v15[v21[24]] = *(void *)&v16[v21[24]];
  v15[v21[25]] = v16[v21[25]];
  uint64_t v30 = v39[7];
  uint64_t v31 = v40 + v30;
  uint64_t v32 = v13 + v30;
  *(void *)(v31 + 32) = *(void *)(v32 + 32);
  long long v33 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v33;
  uint64_t v34 = v39[8];
  uint64_t v35 = v40 + v34;
  uint64_t v36 = v13 + v34;
  uint64_t v37 = sub_1C2A9CFE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
  return v41;
}

uint64_t sub_1C29EE4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for TimeBasedDistribution();
  *(void *)(v7 + *(int *)(v10 + 20)) = *(void *)(v8 + *(int *)(v10 + 20));
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(v10 + 24);
  uint64_t v12 = (void *)(v7 + v11);
  uint64_t v13 = (uint64_t *)(v8 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(int *)(a3 + 32);
  uint64_t v50 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  __swift_destroy_boxed_opaque_existential_1(v17 + 8);
  *(_OWORD *)(v17 + 8) = *(_OWORD *)(v18 + 8);
  *(_OWORD *)(v17 + 24) = *(_OWORD *)(v18 + 24);
  *(void *)(v17 + 40) = *(void *)(v18 + 40);
  uint64_t v47 = (int *)type metadata accessor for TimeBasedDistributionChartModel();
  uint64_t v48 = v18;
  uint64_t v19 = v47[6];
  uint64_t v49 = v17;
  uint64_t v20 = (char *)(v17 + v19);
  uint64_t v21 = (char *)(v18 + v19);
  uint64_t v22 = sub_1C2A9D2E8();
  uint64_t v23 = *(void *)(v22 - 8);
  id v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  LODWORD(v8) = v24(v20, 1, v22);
  int v25 = v24(v21, 1, v22);
  if (v8)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
LABEL_6:
    sub_1C29F2D4C(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
    memcpy(v20, v21, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v20, v21, v22);
LABEL_7:
  uint64_t v27 = (int *)type metadata accessor for TimeBasedDistributionChartDesign();
  uint64_t v28 = v27[5];
  uint64_t v29 = &v20[v28];
  uint64_t v30 = &v21[v28];
  int v31 = v24(&v20[v28], 1, v22);
  int v32 = v24(v30, 1, v22);
  if (!v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v29, v30, v22);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v22);
    goto LABEL_12;
  }
  if (v32)
  {
LABEL_12:
    sub_1C29F2D4C(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v29, v30, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v29, 0, 1, v22);
LABEL_13:
  *(void *)&v20[v27[6]] = *(void *)&v21[v27[6]];
  swift_release();
  *(void *)&v20[v27[7]] = *(void *)&v21[v27[7]];
  swift_release();
  *(void *)&v20[v27[8]] = *(void *)&v21[v27[8]];
  swift_release();
  *(void *)&v20[v27[9]] = *(void *)&v21[v27[9]];
  swift_release();
  uint64_t v34 = v27[10];
  uint64_t v35 = &v20[v34];
  uint64_t v36 = &v21[v34];
  uint64_t v37 = sub_1C2A9D598();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
  *(void *)&v20[v27[11]] = *(void *)&v21[v27[11]];
  swift_release();
  *(void *)&v20[v27[12]] = *(void *)&v21[v27[12]];
  swift_release();
  *(void *)&v20[v27[13]] = *(void *)&v21[v27[13]];
  swift_release();
  *(void *)&v20[v27[14]] = *(void *)&v21[v27[14]];
  swift_release();
  *(void *)&v20[v27[15]] = *(void *)&v21[v27[15]];
  swift_release();
  *(void *)&v20[v27[16]] = *(void *)&v21[v27[16]];
  swift_release();
  *(void *)&v20[v27[17]] = *(void *)&v21[v27[17]];
  *(void *)&v20[v27[18]] = *(void *)&v21[v27[18]];
  *(void *)&v20[v27[19]] = *(void *)&v21[v27[19]];
  *(void *)&v20[v27[20]] = *(void *)&v21[v27[20]];
  *(void *)&v20[v27[21]] = *(void *)&v21[v27[21]];
  *(void *)&v20[v27[22]] = *(void *)&v21[v27[22]];
  *(void *)&v20[v27[23]] = *(void *)&v21[v27[23]];
  *(void *)&v20[v27[24]] = *(void *)&v21[v27[24]];
  v20[v27[25]] = v21[v27[25]];
  uint64_t v38 = v47[7];
  uint64_t v39 = v49 + v38;
  uint64_t v40 = v18 + v38;
  __swift_destroy_boxed_opaque_existential_1(v49 + v38);
  long long v41 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v41;
  *(void *)(v39 + 32) = *(void *)(v40 + 32);
  uint64_t v42 = v47[8];
  uint64_t v43 = v49 + v42;
  uint64_t v44 = v48 + v42;
  uint64_t v45 = sub_1C2A9CFE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 40))(v43, v44, v45);
  return v50;
}

uint64_t sub_1C29EEAB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29EEACC);
}

uint64_t sub_1C29EEACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 25);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = type metadata accessor for TimeBasedDistribution();
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      uint64_t v13 = a1 + *(int *)(a3 + 28);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      return v14(v13, a2, v12);
    }
    else
    {
      uint64_t v15 = type metadata accessor for TimeBasedDistributionChartModel();
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
      uint64_t v17 = v15;
      uint64_t v18 = a1 + *(int *)(a3 + 32);
      return v16(v18, a2, v17);
    }
  }
}

uint64_t sub_1C29EEBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29EEC0C);
}

uint64_t sub_1C29EEC0C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 25) = a2 + 1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for TimeBasedDistribution();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for TimeBasedDistributionChartModel();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenDayOfWeekChart()
{
  uint64_t result = qword_1EA31E8D8;
  if (!qword_1EA31E8D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C29EED80()
{
  uint64_t result = type metadata accessor for TimeBasedDistribution();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TimeBasedDistributionChartModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_1C29EEE60()
{
  qword_1EA32B5D8 = 0x403A000000000000;
}

void sub_1C29EEE70()
{
  qword_1EA32B5E0 = 0x4040000000000000;
}

id sub_1C29EEE80()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  id result = objc_msgSend(v0, sel_setFormattingContext_, 2);
  qword_1EA32B5E8 = (uint64_t)v0;
  return result;
}

uint64_t sub_1C29EEED0@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v125 = a4;
  uint64_t v126 = a1;
  uint64_t v6 = sub_1C2A9D5A8();
  uint64_t v124 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v123 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TimeBasedDistributionChartModel();
  uint64_t v9 = v8 - 8;
  uint64_t v120 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v121 = v10;
  uint64_t v122 = (uint64_t)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29F2D4C(0, &qword_1EA31E3D8, MEMORY[0x1E4F194D8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v119 = (char *)&v98 - v12;
  sub_1C2973A20();
  uint64_t v103 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29F1728();
  uint64_t v17 = v16;
  uint64_t v100 = *((void *)v16 - 1);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (uint64_t *)((char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C29F1ACC();
  uint64_t v102 = v20;
  uint64_t v101 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t OpaqueTypeConformance2 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29F1BD0();
  unint64_t v105 = v23;
  MEMORY[0x1F4188790](v23);
  int v25 = (char *)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29F1C38();
  uint64_t v107 = v26;
  uint64_t v106 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v98 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29F21BC();
  uint64_t v109 = v29;
  uint64_t v108 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v104 = (char *)&v98 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29F22C8();
  uint64_t v112 = v31;
  uint64_t v111 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v110 = (char *)&v98 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29F2520();
  uint64_t v115 = v33;
  uint64_t v114 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v113 = (char *)&v98 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29F271C();
  uint64_t v118 = v35;
  uint64_t v117 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v116 = (char *)&v98 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_1C2982348(v126, a2);
  uint64_t v128 = v126;
  uint64_t v129 = a2;
  char v130 = a3;
  sub_1C29F178C();
  sub_1C29F1960();
  sub_1C2A9D268();
  uint64_t v37 = *(int *)(v9 + 32);
  uint64_t v38 = *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 40);
  uint64_t v127 = a2;
  uint64_t v39 = &a2[v38 + v37];
  uint64_t v40 = sub_1C2A9D598();
  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v40 - 8) + 16))(v15, v39, v40);
  sub_1C29F3158(&qword_1EBB8E798, MEMORY[0x1E4F3CB98]);
  if (sub_1C2A9DCE8())
  {
    uint64_t v99 = v6;
    uint64_t v41 = sub_1C29F3158(&qword_1EA31E930, (void (*)(uint64_t))sub_1C29F1728);
    uint64_t v42 = sub_1C29F3158(&qword_1EBB8E838, (void (*)(uint64_t))sub_1C2973A20);
    uint64_t v43 = v103;
    sub_1C2A9DA68();
    sub_1C29F2A30((uint64_t)v15, (uint64_t (*)(void))sub_1C2973A20);
    (*(void (**)(void *, char *))(v100 + 8))(v19, v17);
    uint64_t v133 = sub_1C2A9DD28();
    uint64_t v134 = v44;
    swift_bridgeObjectRetain();
    sub_1C2A9DDB8();
    swift_bridgeObjectRelease();
    uint64_t v133 = (uint64_t)v17;
    uint64_t v134 = v43;
    unint64_t v135 = v41;
    unint64_t v136 = v42;
    swift_getOpaqueTypeConformance2();
    uint64_t v45 = v102;
    sub_1C2A9DA48();
    swift_bridgeObjectRelease();
    uint64_t v46 = (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(OpaqueTypeConformance2, v45);
    MEMORY[0x1F4188790](v46);
    uint64_t v47 = (uint64_t)v127;
    *(&v98 - 2) = (uint64_t)v127;
    sub_1C29F1D0C();
    uint64_t v49 = v48;
    unint64_t v50 = sub_1C29F2064();
    uint64_t v51 = sub_1C29F3158(&qword_1EA31E978, (void (*)(uint64_t))sub_1C29F1D0C);
    uint64_t v52 = v105;
    sub_1C2A9D9B8();
    sub_1C29F2A30((uint64_t)v25, (uint64_t (*)(void))sub_1C29F1BD0);
    uint64_t v133 = (uint64_t)v52;
    uint64_t v134 = v49;
    unint64_t v135 = v50;
    unint64_t v136 = v51;
    uint64_t OpaqueTypeConformance2 = (char *)swift_getOpaqueTypeConformance2();
    uint64_t v17 = v104;
    uint64_t v40 = v107;
    sub_1C2A9D9D8();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v28, v40);
    uint64_t v19 = (void *)v47;
    if (qword_1EA31DC90 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v53 = (void *)qword_1EA32B5E8;
  uint64_t v54 = v19[4];
  uint64_t v55 = v19[5];
  __swift_project_boxed_opaque_existential_1(v19 + 1, v54);
  uint64_t v56 = (*(uint64_t (**)(void, uint64_t))(*(void *)(v55 + 8) + 8))(*(unsigned __int8 *)v19, v54);
  id v57 = v53;
  sub_1C29F2AE4(v56, v57);
  uint64_t v59 = v58;
  swift_bridgeObjectRelease();

  uint64_t v131 = v59;
  uint64_t v60 = sub_1C2A9D388();
  uint64_t v61 = *(void *)(v60 - 8);
  unint64_t v105 = *(void (**)(void, void, void, void))(v61 + 56);
  uint64_t v106 = v61 + 56;
  uint64_t v62 = (uint64_t)v119;
  v105(v119, 1, 1, v60);
  sub_1C29F2448(0, (unint64_t *)&qword_1EBB920B0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  unint64_t v64 = v63;
  uint64_t v133 = v40;
  uint64_t v134 = OpaqueTypeConformance2;
  uint64_t v65 = swift_getOpaqueTypeConformance2();
  unint64_t v66 = sub_1C29F2494();
  uint64_t v67 = v110;
  uint64_t v68 = v109;
  sub_1C2A9D9E8();
  sub_1C2990368(v62);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v17, v68);
  uint64_t v69 = sub_1C29A1734(v126);
  swift_bridgeObjectRelease();
  TimeBasedDistributionChartModel.determineYAxisRange(chartPoints:)(v69);
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  swift_bridgeObjectRelease();
  uint64_t v131 = v71;
  uint64_t v132 = v73;
  v105(v62, 1, 1, v60);
  sub_1C29F31A0(0, (unint64_t *)&qword_1EBB92800, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBB3F8], MEMORY[0x1E4FBB010]);
  uint64_t v75 = v74;
  uint64_t v133 = v68;
  uint64_t v134 = v64;
  unint64_t v135 = v65;
  unint64_t v136 = v66;
  uint64_t v76 = swift_getOpaqueTypeConformance2();
  unint64_t v77 = sub_1C2974994();
  BOOL v78 = v113;
  uint64_t v79 = v112;
  sub_1C2A9D9F8();
  sub_1C2990368(v62);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v67, v79);
  uint64_t v80 = v122;
  sub_1C29F31F0((uint64_t)v127, v122, (uint64_t (*)(void))type metadata accessor for TimeBasedDistributionChartModel);
  unint64_t v81 = (*(unsigned __int8 *)(v120 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80);
  uint64_t v82 = swift_allocObject();
  sub_1C29F35C8(v80, v82 + v81, (uint64_t (*)(void))type metadata accessor for TimeBasedDistributionChartModel);
  sub_1C2974A28(0);
  uint64_t v133 = v79;
  uint64_t v134 = v75;
  unint64_t v135 = v76;
  unint64_t v136 = v77;
  swift_getOpaqueTypeConformance2();
  sub_1C29F299C(&qword_1EA31E198, sub_1C2974A28, (void (*)(void))sub_1C2974A50);
  char v83 = v116;
  uint64_t v84 = v115;
  sub_1C2A9DA18();
  swift_release();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v78, v84);
  uint64_t KeyPath = swift_getKeyPath();
  BOOL IsRightToLeft = HKUILocaleIsRightToLeft();
  uint64_t v88 = v123;
  uint64_t v87 = v124;
  os_log_type_t v89 = (unsigned int *)MEMORY[0x1E4F3CBE8];
  if (!IsRightToLeft) {
    os_log_type_t v89 = (unsigned int *)MEMORY[0x1E4F3CBD8];
  }
  uint64_t v90 = v99;
  (*(void (**)(char *, void, uint64_t))(v124 + 104))(v123, *v89, v99);
  sub_1C29F2CB4();
  uint64_t v92 = v125;
  unint64_t v93 = (uint64_t *)(v125 + *(int *)(v91 + 36));
  sub_1C29F2D4C(0, &qword_1EBB8E7F0, MEMORY[0x1E4F3CBF0], MEMORY[0x1E4F3DF18]);
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))((char *)v93 + *(int *)(v94 + 28), v88, v90);
  *unint64_t v93 = KeyPath;
  uint64_t v95 = v117;
  uint64_t v96 = v118;
  (*(void (**)(uint64_t, char *, uint64_t))(v117 + 16))(v92, v83, v118);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v90);
  return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v83, v96);
}

uint64_t sub_1C29EFE28(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for TimeBasedDistributionChartModel();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v27 = a1;
  sub_1C29F31F0(a2, (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TimeBasedDistributionChartModel);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a3;
  sub_1C29F35C8((uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(void))type metadata accessor for TimeBasedDistributionChartModel);
  sub_1C29F2D4C(0, &qword_1EA31E910, type metadata accessor for TimeBasedDistributionChartPoint.DayOfWeek, MEMORY[0x1E4FBB320]);
  sub_1C297326C();
  sub_1C29F18D8();
  sub_1C29733EC();
  uint64_t v12 = v11;
  sub_1C29734E4(255);
  uint64_t v14 = v13;
  sub_1C29F1854();
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C2A9D298();
  swift_bridgeObjectRetain();
  uint64_t v23 = v17;
  uint64_t v24 = MEMORY[0x1E4F19428];
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = v16;
  uint64_t v24 = MEMORY[0x1E4F3EB98];
  uint64_t v25 = OpaqueTypeConformance2;
  uint64_t v26 = MEMORY[0x1E4F3EB78];
  uint64_t v19 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = sub_1C29F299C(&qword_1EA31E090, sub_1C29734E4, (void (*)(void))sub_1C2973650);
  uint64_t v23 = v12;
  uint64_t v24 = v14;
  uint64_t v25 = v19;
  uint64_t v26 = v20;
  swift_getOpaqueTypeConformance2();
  sub_1C29F3158(&qword_1EA31E9B0, (void (*)(uint64_t))type metadata accessor for TimeBasedDistributionChartPoint.DayOfWeek);
  return sub_1C2A9DB88();
}

uint64_t sub_1C29F011C(uint64_t a1)
{
  uint64_t v2 = sub_1C2A9D128();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = sub_1C2A9D198();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = sub_1C2A9D108();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = type metadata accessor for TimeBasedDistributionChartModel();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  sub_1C29F31F0(a1, (uint64_t)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TimeBasedDistributionChartModel);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  sub_1C29F35C8((uint64_t)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, (uint64_t (*)(void))type metadata accessor for TimeBasedDistributionChartModel);
  sub_1C2A9D0F8();
  sub_1C2A9D188();
  sub_1C2A9D118();
  sub_1C29F1E20();
  sub_1C29F1F1C();
  uint64_t v11 = v10;
  sub_1C29F31A0(255, &qword_1EA31E960, MEMORY[0x1E4FBC248], MEMORY[0x1E4F3F158], MEMORY[0x1E4F19370]);
  uint64_t v13 = v12;
  unint64_t v14 = sub_1C29F1FE0();
  uint64_t v17 = v13;
  uint64_t v18 = MEMORY[0x1E4F3EB98];
  unint64_t v19 = v14;
  uint64_t v20 = MEMORY[0x1E4F3EB78];
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v17 = v11;
  uint64_t v18 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  return sub_1C2A9D348();
}

uint64_t sub_1C29F03F8@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v65 = a3;
  int v72 = a2;
  uint64_t v70 = a4;
  uint64_t v5 = type metadata accessor for TimeBasedDistributionChartModel();
  uint64_t v63 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v64 = v6;
  uint64_t v66 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TimeBasedDistributionChartPoint.DayOfWeek(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t OpaqueTypeConformance2 = v7;
  uint64_t v60 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v61 = v9;
  uint64_t v62 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C2A9D1D8();
  uint64_t v68 = *(void *)(v10 - 8);
  uint64_t v69 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v67 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1C2A9D728();
  uint64_t v51 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v49 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4F19388];
  sub_1C29F31A0(0, (unint64_t *)&qword_1EA31DEC0, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4F195C0], MEMORY[0x1E4F19388]);
  MEMORY[0x1F4188790](v14 - 8);
  sub_1C29F31A0(0, &qword_1EA31E9B8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F195A0], v13);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v45 - v16;
  uint64_t v46 = sub_1C2A9D298();
  uint64_t v48 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  unint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29F1854();
  uint64_t v53 = v20;
  uint64_t v50 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29733EC();
  uint64_t v58 = v23;
  uint64_t v57 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v71 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C297326C();
  uint64_t v56 = v25;
  uint64_t v55 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v54 = (char *)&v45 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A9D708();
  uint64_t v27 = a1[3];
  uint64_t v73 = a1[2];
  uint64_t v74 = v27;
  swift_bridgeObjectRetain();
  uint64_t v47 = v17;
  sub_1C2A9D168();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2A9D708();
  uint64_t v73 = a1[1];
  sub_1C2A9D168();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v72)
  {
    if (qword_1EA31DC80 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_1EA31DC88 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  sub_1C2A9D288();
  uint64_t v28 = v51;
  uint64_t v29 = v49;
  uint64_t v30 = v52;
  (*(void (**)(char *, void, uint64_t))(v51 + 104))(v49, *MEMORY[0x1E4F3D4A0], v52);
  uint64_t v31 = MEMORY[0x1E4F19428];
  uint64_t v32 = v46;
  sub_1C2A9D078();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v32);
  uint64_t v77 = *(void *)((char *)a1 + *(int *)(OpaqueTypeConformance2 + 32));
  uint64_t v73 = v32;
  uint64_t v74 = v31;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v33 = v53;
  sub_1C2A9D088();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v33);
  uint64_t v34 = v67;
  sub_1C2A9D1C8();
  uint64_t v35 = v62;
  sub_1C29F31F0((uint64_t)a1, v62, type metadata accessor for TimeBasedDistributionChartPoint.DayOfWeek);
  uint64_t v36 = v66;
  sub_1C29F31F0(v65, v66, (uint64_t (*)(void))type metadata accessor for TimeBasedDistributionChartModel);
  unint64_t v37 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v38 = v37 + v61;
  unint64_t v39 = (*(unsigned __int8 *)(v63 + 80) + v37 + v61 + 1) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  uint64_t v40 = swift_allocObject();
  sub_1C29F35C8(v35, v40 + v37, type metadata accessor for TimeBasedDistributionChartPoint.DayOfWeek);
  *(unsigned char *)(v40 + v38) = v72 & 1;
  sub_1C29F35C8(v36, v40 + v39, (uint64_t (*)(void))type metadata accessor for TimeBasedDistributionChartModel);
  sub_1C2A9DBA8();
  sub_1C29734E4(0);
  uint64_t v73 = v33;
  uint64_t v74 = MEMORY[0x1E4F3EB98];
  uint64_t v75 = OpaqueTypeConformance2;
  uint64_t v76 = MEMORY[0x1E4F3EB78];
  swift_getOpaqueTypeConformance2();
  sub_1C29F299C(&qword_1EA31E090, sub_1C29734E4, (void (*)(void))sub_1C2973650);
  uint64_t v41 = v54;
  uint64_t v42 = v58;
  uint64_t v43 = v71;
  sub_1C2A9D048();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v34, v69);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v43, v42);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v55 + 32))(v70, v41, v56);
}

double sub_1C29F0E2C@<D0>(unsigned char *a1@<X1>, char a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1C2A9C4F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TimeBasedDistributionChartPoint.DayOfWeek(0);
  (*(void (**)(char *, unsigned char *, uint64_t))(v9 + 16))(v11, &a1[*(int *)(v12 + 28)], v8);
  uint64_t v13 = sub_1C2A9D998();
  uint64_t v31 = v14;
  uint64_t v32 = v13;
  HIDWORD(v30) = v15;
  uint64_t v33 = v16;
  uint64_t KeyPath = swift_getKeyPath();
  int v18 = *a1;
  uint64_t v19 = (char)v18;
  if ((v18 - 2) >= 2)
  {
    if (!*a1)
    {
      if (a2)
      {
        if (qword_1EA31DC80 == -1) {
          goto LABEL_12;
        }
      }
      else if (qword_1EA31DC88 == -1)
      {
        goto LABEL_12;
      }
      goto LABEL_13;
    }
    if (a2)
    {
      if (qword_1EA31DC80 == -1) {
        goto LABEL_12;
      }
      goto LABEL_13;
    }
    if (qword_1EA31DC88 != -1) {
LABEL_13:
    }
      swift_once();
  }
LABEL_12:
  sub_1C2A9DBA8();
  sub_1C2A9D568();
  uint64_t v20 = v34;
  char v21 = v35;
  uint64_t v22 = v36;
  char v23 = v37;
  uint64_t v24 = v38;
  uint64_t v25 = v39;
  uint64_t v26 = qword_1C2AABBE8[v19];
  uint64_t v27 = a3 + *(int *)(type metadata accessor for TimeBasedDistributionChartModel() + 24);
  double result = *(double *)(v27 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 4 * v26));
  uint64_t v29 = v31;
  *(void *)a4 = v32;
  *(void *)(a4 + 8) = v29;
  *(unsigned char *)(a4 + 16) = BYTE4(v30) & 1;
  *(void *)(a4 + 24) = v33;
  *(void *)(a4 + 32) = KeyPath;
  *(unsigned char *)(a4 + 40) = 1;
  *(void *)(a4 + 48) = v20;
  *(unsigned char *)(a4 + 56) = v21;
  *(void *)(a4 + 64) = v22;
  *(unsigned char *)(a4 + 72) = v23;
  *(void *)(a4 + 80) = v24;
  *(void *)(a4 + 88) = v25;
  *(void *)(a4 + 96) = 0;
  *(double *)(a4 + 104) = result;
  return result;
}

uint64_t sub_1C29F1120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = sub_1C2A9D238();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = sub_1C2A9D258();
  MEMORY[0x1F4188790](v4 - 8);
  sub_1C29F31A0(0, &qword_1EA31E960, MEMORY[0x1E4FBC248], MEMORY[0x1E4F3F158], MEMORY[0x1E4F19370]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v20 - v8;
  sub_1C29F1F1C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v21 = v10;
  uint64_t v22 = v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A9D248();
  sub_1C2A9D228();
  sub_1C2A9D138();
  uint64_t v14 = a1 + *(int *)(type metadata accessor for TimeBasedDistributionChartModel() + 24);
  uint64_t v24 = *(void *)(v14 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 64));
  unint64_t v15 = sub_1C29F1FE0();
  uint64_t v16 = MEMORY[0x1E4F3EB98];
  uint64_t v17 = MEMORY[0x1E4F3EB78];
  sub_1C2A9D2A8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v24 = v6;
  uint64_t v25 = v16;
  unint64_t v26 = v15;
  uint64_t v27 = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = v21;
  sub_1C2A9D2B8();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v13, v18);
}

uint64_t sub_1C29F1448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C29EEED0(v2 + *(int *)(a1 + 28), (unsigned __int8 *)(v2 + *(int *)(a1 + 32)), *(unsigned char *)(v2 + 25), a2);
}

uint64_t sub_1C29F145C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C29F3158(&qword_1EA31E8F8, (void (*)(uint64_t))type metadata accessor for AFibBurdenDayOfWeekChart);
  return MEMORY[0x1F411EDC0](a1, a2, a3, v6);
}

uint64_t sub_1C29F14E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C29F1510(a1, a2, a3, MEMORY[0x1E4F666F0]);
}

uint64_t sub_1C29F14F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C29F1510(a1, a2, a3, MEMORY[0x1E4F666F8]);
}

uint64_t sub_1C29F1510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = sub_1C29F3158(&qword_1EA31E8F8, (void (*)(uint64_t))type metadata accessor for AFibBurdenDayOfWeekChart);
  return a4(a1, a2, v6);
}

uint64_t sub_1C29F15A0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = sub_1C29F3158(&qword_1EA31E2F0, (void (*)(uint64_t))type metadata accessor for AFibBurdenDayOfWeekChart);
  *uint64_t v3 = v1;
  v3[1] = sub_1C2990074;
  return MEMORY[0x1F411E690](a1, v4);
}

uint64_t sub_1C29F167C()
{
  return sub_1C29F3158(&qword_1EA31E2F0, (void (*)(uint64_t))type metadata accessor for AFibBurdenDayOfWeekChart);
}

uint64_t sub_1C29F16C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C29F16E0()
{
  return sub_1C29F3158(&qword_1EA31E8F0, (void (*)(uint64_t))type metadata accessor for AFibBurdenDayOfWeekChart);
}

void sub_1C29F1728()
{
  if (!qword_1EA31E900)
  {
    sub_1C29F178C();
    sub_1C29F1960();
    unint64_t v0 = sub_1C2A9D278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31E900);
    }
  }
}

void sub_1C29F178C()
{
  if (!qword_1EA31E908)
  {
    sub_1C29F2D4C(255, &qword_1EA31E910, type metadata accessor for TimeBasedDistributionChartPoint.DayOfWeek, MEMORY[0x1E4FBB320]);
    sub_1C297326C();
    sub_1C29F18D8();
    unint64_t v0 = sub_1C2A9DB98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31E908);
    }
  }
}

void sub_1C29F1854()
{
  if (!qword_1EA31E078)
  {
    sub_1C2A9D298();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E078);
    }
  }
}

unint64_t sub_1C29F18D8()
{
  unint64_t result = qword_1EA31E918;
  if (!qword_1EA31E918)
  {
    sub_1C29F2D4C(255, &qword_1EA31E910, type metadata accessor for TimeBasedDistributionChartPoint.DayOfWeek, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E918);
  }
  return result;
}

unint64_t sub_1C29F1960()
{
  unint64_t result = qword_1EA31E920;
  if (!qword_1EA31E920)
  {
    sub_1C29F178C();
    sub_1C29733EC();
    sub_1C29734E4(255);
    sub_1C29F1854();
    sub_1C2A9D298();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1C29F299C(&qword_1EA31E090, sub_1C29734E4, (void (*)(void))sub_1C2973650);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E920);
  }
  return result;
}

void sub_1C29F1ACC()
{
  if (!qword_1EA31E928)
  {
    sub_1C29F1728();
    sub_1C2973A20();
    sub_1C29F3158(&qword_1EA31E930, (void (*)(uint64_t))sub_1C29F1728);
    sub_1C29F3158(&qword_1EBB8E838, (void (*)(uint64_t))sub_1C2973A20);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E928);
    }
  }
}

void sub_1C29F1BD0()
{
  if (!qword_1EA31E938)
  {
    sub_1C29F1ACC();
    sub_1C2A9D838();
    unint64_t v0 = sub_1C2A9D5B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31E938);
    }
  }
}

void sub_1C29F1C38()
{
  if (!qword_1EA31E940)
  {
    sub_1C29F1BD0();
    sub_1C29F1D0C();
    sub_1C29F2064();
    sub_1C29F3158(&qword_1EA31E978, (void (*)(uint64_t))sub_1C29F1D0C);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E940);
    }
  }
}

void sub_1C29F1D0C()
{
  if (!qword_1EA31E948)
  {
    sub_1C29F1E20();
    sub_1C29F1F1C();
    sub_1C29F31A0(255, &qword_1EA31E960, MEMORY[0x1E4FBC248], MEMORY[0x1E4F3F158], MEMORY[0x1E4F19370]);
    sub_1C29F1FE0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_1C2A9D368();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31E948);
    }
  }
}

void sub_1C29F1E20()
{
  if (!qword_1EA31E950)
  {
    sub_1C29F1F1C();
    sub_1C29F31A0(255, &qword_1EA31E960, MEMORY[0x1E4FBC248], MEMORY[0x1E4F3F158], MEMORY[0x1E4F19370]);
    sub_1C29F1FE0();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E950);
    }
  }
}

void sub_1C29F1F1C()
{
  if (!qword_1EA31E958)
  {
    sub_1C29F31A0(255, &qword_1EA31E960, MEMORY[0x1E4FBC248], MEMORY[0x1E4F3F158], MEMORY[0x1E4F19370]);
    sub_1C29F1FE0();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E958);
    }
  }
}

unint64_t sub_1C29F1FE0()
{
  unint64_t result = qword_1EA31E968;
  if (!qword_1EA31E968)
  {
    sub_1C29F31A0(255, &qword_1EA31E960, MEMORY[0x1E4FBC248], MEMORY[0x1E4F3F158], MEMORY[0x1E4F19370]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E968);
  }
  return result;
}

unint64_t sub_1C29F2064()
{
  unint64_t result = qword_1EA31E970;
  if (!qword_1EA31E970)
  {
    sub_1C29F1BD0();
    sub_1C29F1728();
    sub_1C2973A20();
    sub_1C29F3158(&qword_1EA31E930, (void (*)(uint64_t))sub_1C29F1728);
    sub_1C29F3158(&qword_1EBB8E838, (void (*)(uint64_t))sub_1C2973A20);
    swift_getOpaqueTypeConformance2();
    sub_1C29F3158(&qword_1EA31E158, MEMORY[0x1E4F3DF60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E970);
  }
  return result;
}

void sub_1C29F21BC()
{
  if (!qword_1EA31E980)
  {
    sub_1C29F1C38();
    sub_1C29F1BD0();
    sub_1C29F1D0C();
    sub_1C29F2064();
    sub_1C29F3158(&qword_1EA31E978, (void (*)(uint64_t))sub_1C29F1D0C);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E980);
    }
  }
}

void sub_1C29F22C8()
{
  if (!qword_1EA31E988)
  {
    sub_1C29F21BC();
    sub_1C29F2448(255, (unint64_t *)&qword_1EBB920B0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1C29F1C38();
    sub_1C29F1BD0();
    sub_1C29F1D0C();
    sub_1C29F2064();
    sub_1C29F3158(&qword_1EA31E978, (void (*)(uint64_t))sub_1C29F1D0C);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1C29F2494();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E988);
    }
  }
}

void sub_1C29F2448(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C29F2494()
{
  unint64_t result = qword_1EA31E990;
  if (!qword_1EA31E990)
  {
    sub_1C29F2448(255, (unint64_t *)&qword_1EBB920B0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E990);
  }
  return result;
}

void sub_1C29F2520()
{
  if (!qword_1EA31E998)
  {
    sub_1C29F22C8();
    sub_1C29F31A0(255, (unint64_t *)&qword_1EBB92800, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBB3F8], MEMORY[0x1E4FBB010]);
    sub_1C29F21BC();
    sub_1C29F2448(255, (unint64_t *)&qword_1EBB920B0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1C29F1C38();
    sub_1C29F1BD0();
    sub_1C29F1D0C();
    sub_1C29F2064();
    sub_1C29F3158(&qword_1EA31E978, (void (*)(uint64_t))sub_1C29F1D0C);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1C29F2494();
    swift_getOpaqueTypeConformance2();
    sub_1C2974994();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E998);
    }
  }
}

void sub_1C29F271C()
{
  if (!qword_1EA31E9A0)
  {
    sub_1C29F2520();
    sub_1C2974A28(255);
    sub_1C29F22C8();
    sub_1C29F31A0(255, (unint64_t *)&qword_1EBB92800, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBB3F8], MEMORY[0x1E4FBB010]);
    sub_1C29F21BC();
    sub_1C29F2448(255, (unint64_t *)&qword_1EBB920B0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1C29F1C38();
    sub_1C29F1BD0();
    sub_1C29F1D0C();
    sub_1C29F2064();
    sub_1C29F3158(&qword_1EA31E978, (void (*)(uint64_t))sub_1C29F1D0C);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1C29F2494();
    swift_getOpaqueTypeConformance2();
    sub_1C2974994();
    swift_getOpaqueTypeConformance2();
    sub_1C29F299C(&qword_1EA31E198, sub_1C2974A28, (void (*)(void))sub_1C2974A50);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA31E9A0);
    }
  }
}

uint64_t sub_1C29F299C(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C29F2A1C()
{
  return sub_1C29EFE28(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_1C29F2A28()
{
  return sub_1C29F011C(*(void *)(v0 + 16));
}

uint64_t sub_1C29F2A30(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C29F2A90@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C2A9D638();
  *a1 = result;
  return result;
}

uint64_t sub_1C29F2ABC()
{
  return sub_1C2A9D648();
}

void sub_1C29F2AE4(uint64_t a1, void *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C29788FC(0, v2, 0);
    unint64_t v5 = (unint64_t *)(a1 + 32);
    while (1)
    {
      unint64_t v7 = *v5++;
      unint64_t v6 = v7;
      id v8 = objc_msgSend(a2, sel_shortStandaloneWeekdaySymbols);
      if (!v8) {
        break;
      }
      uint64_t v9 = v8;
      uint64_t v10 = sub_1C2A9DE98();

      if ((v6 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_11:
        __break(1u);
        break;
      }
      if (v6 >= *(void *)(v10 + 16)) {
        goto LABEL_11;
      }
      uint64_t v11 = v10 + 16 * v6;
      uint64_t v12 = *(void *)(v11 + 32);
      uint64_t v13 = *(void *)(v11 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v15 = *(void *)(v17 + 16);
      unint64_t v14 = *(void *)(v17 + 24);
      if (v15 >= v14 >> 1) {
        sub_1C29788FC(v14 > 1, v15 + 1, 1);
      }
      *(void *)(v17 + 16) = v15 + 1;
      uint64_t v16 = v17 + 16 * v15;
      *(void *)(v16 + 32) = v12;
      *(void *)(v16 + 40) = v13;
      if (!--v2) {
        return;
      }
    }
    __break(1u);
  }
}

double sub_1C29F2C2C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for TimeBasedDistributionChartModel();
  return sub_1C298E034(a1, a2);
}

void sub_1C29F2CB4()
{
  if (!qword_1EA31E9A8)
  {
    sub_1C29F271C();
    sub_1C29F2D4C(255, &qword_1EBB8E7F0, MEMORY[0x1E4F3CBF0], MEMORY[0x1E4F3DF18]);
    unint64_t v0 = sub_1C2A9D5B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31E9A8);
    }
  }
}

void sub_1C29F2D4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C29F2DB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for TimeBasedDistributionChartModel() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1C29F1120(v4, a1);
}

uint64_t sub_1C29F2E24()
{
  uint64_t v1 = type metadata accessor for TimeBasedDistributionChartModel();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 17) & ~v2;
  uint64_t v17 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = v0 + v3;
  __swift_destroy_boxed_opaque_existential_1(v0 + v3 + 8);
  uint64_t v18 = v1;
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 24);
  uint64_t v6 = sub_1C2A9D2E8();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v9 = type metadata accessor for TimeBasedDistributionChartDesign();
  uint64_t v10 = v5 + *(int *)(v9 + 20);
  if (!v8(v10, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  }
  uint64_t v11 = v2 | 7;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v12 = v5 + *(int *)(v9 + 40);
  uint64_t v13 = sub_1C2A9D598();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4 + *(int *)(v18 + 28));
  uint64_t v14 = v4 + *(int *)(v18 + 32);
  uint64_t v15 = sub_1C2A9CFE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  return MEMORY[0x1F4186498](v0, v3 + v17, v11);
}

uint64_t sub_1C29F30D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for TimeBasedDistributionChartModel() - 8);
  int v6 = *(unsigned __int8 *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1C29F03F8(a1, v6, v7, a2);
}

uint64_t sub_1C29F3158(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C29F31A0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C29F31F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C29F3258()
{
  uint64_t v1 = (int *)(type metadata accessor for TimeBasedDistributionChartPoint.DayOfWeek(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = type metadata accessor for TimeBasedDistributionChartModel();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = (v4 + v6 + v3 + 1) & ~v6;
  uint64_t v23 = *(void *)(*(void *)(v5 - 8) + 64);
  swift_bridgeObjectRelease();
  uint64_t v8 = v0 + v3 + v1[9];
  uint64_t v9 = sub_1C2A9C4F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  uint64_t v24 = v7;
  uint64_t v10 = v0 + v7;
  __swift_destroy_boxed_opaque_existential_1(v0 + v7 + 8);
  uint64_t v25 = v5;
  uint64_t v11 = v0 + v7 + *(int *)(v5 + 24);
  uint64_t v12 = sub_1C2A9D2E8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v14(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v15 = type metadata accessor for TimeBasedDistributionChartDesign();
  uint64_t v16 = v11 + *(int *)(v15 + 20);
  if (!v14(v16, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
  }
  uint64_t v17 = v2 | v6 | 7;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v18 = v11 + *(int *)(v15 + 40);
  uint64_t v19 = sub_1C2A9D598();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v10 + *(int *)(v25 + 28));
  uint64_t v20 = v10 + *(int *)(v25 + 32);
  uint64_t v21 = sub_1C2A9CFE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  return MEMORY[0x1F4186498](v0, v24 + v23, v17);
}

uint64_t sub_1C29F35C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double sub_1C29F3630@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for TimeBasedDistributionChartPoint.DayOfWeek(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for TimeBasedDistributionChartModel() - 8);
  char v7 = *(unsigned char *)(v1 + v5);
  uint64_t v8 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return sub_1C29F0E2C((unsigned char *)(v1 + v4), v7, v8, a1);
}

uint64_t sub_1C29F371C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C2A9D638();
  *a1 = result;
  return result;
}

uint64_t sub_1C29F3748()
{
  return sub_1C2A9D648();
}

unint64_t sub_1C29F3774()
{
  unint64_t result = qword_1EA31E9C0;
  if (!qword_1EA31E9C0)
  {
    sub_1C29F2CB4();
    sub_1C29F2520();
    sub_1C2974A28(255);
    sub_1C29F22C8();
    sub_1C29F31A0(255, (unint64_t *)&qword_1EBB92800, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBB3F8], MEMORY[0x1E4FBB010]);
    sub_1C29F21BC();
    sub_1C29F2448(255, (unint64_t *)&qword_1EBB920B0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1C29F1C38();
    sub_1C29F1BD0();
    sub_1C29F1D0C();
    sub_1C29F2064();
    sub_1C29F3158(&qword_1EA31E978, (void (*)(uint64_t))sub_1C29F1D0C);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1C29F2494();
    swift_getOpaqueTypeConformance2();
    sub_1C2974994();
    swift_getOpaqueTypeConformance2();
    sub_1C29F299C(&qword_1EA31E198, sub_1C2974A28, (void (*)(void))sub_1C2974A50);
    swift_getOpaqueTypeConformance2();
    sub_1C2974AE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E9C0);
  }
  return result;
}

uint64_t DiagramAxisMetricsProviding.axisMetrics(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(a2 + 8))(0, a1, a2);
}

BOOL static DiagramAxisMetricsOrientation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DiagramAxisMetricsOrientation.hash(into:)()
{
  return sub_1C2A9E9C8();
}

uint64_t DiagramAxisMetricsOrientation.hashValue.getter()
{
  return sub_1C2A9E9E8();
}

uint64_t DiagramAxisMetricsCalculatorFactory.__allocating_init(hbxViewControllerFactory:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t DiagramAxisMetricsCalculatorFactory.init(hbxViewControllerFactory:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t type metadata accessor for DiagramAxisMetricsCalculatorFactory.HiLoScalarAxisDimension()
{
  return self;
}

id sub_1C29F3B68(uint64_t a1)
{
  uint64_t v3 = sub_1C2A9CFE8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  char v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v39 - v8;
  id v10 = objc_msgSend(self, sel_sharedInstance);
  if (!v10
    || (uint64_t v11 = v10,
        uint64_t v12 = (void *)sub_1C2A9DFC8(),
        id v13 = objc_msgSend(v11, sel_displayTypeWithIdentifier_, v12),
        v11,
        v12,
        !v13))
  {
    sub_1C2A9CF98();
    uint64_t v17 = sub_1C2A9CFC8();
    os_log_type_t v18 = sub_1C2A9E0A8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v43 = a1;
      uint64_t v44 = v20;
      *(_DWORD *)uint64_t v19 = 136380675;
      type metadata accessor for HKDisplayTypeIdentifier(0);
      uint64_t v42 = v3;
      uint64_t v21 = sub_1C2A9DD58();
      uint64_t v43 = sub_1C2957168(v21, v22, &v44);
      sub_1C2A9E358();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C292A000, v17, v18, "Unable to create display type for provided axis type %{private}s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v20, -1, -1);
      MEMORY[0x1C87656F0](v19, -1, -1);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v42);
      return 0;
    }

    uint64_t v23 = *(void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v24 = v7;
LABEL_12:
    v23(v24, v3);
    return 0;
  }
  id v14 = objc_msgSend(*(id *)(v1 + 16), sel_createHKUnitPreferenceController);
  id v15 = objc_msgSend(v13, sel_hk_dimensionForChartAxisWithUnitController_, v14);
  if (!v15)
  {
    sub_1C2A9CF98();
    id v25 = v13;
    unint64_t v26 = sub_1C2A9CFC8();
    os_log_type_t v27 = sub_1C2A9E0A8();
    int v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v29 = swift_slowAlloc();
      int v41 = v28;
      uint64_t v30 = (uint8_t *)v29;
      uint64_t v42 = swift_slowAlloc();
      uint64_t v44 = v42;
      uint64_t v40 = v30;
      *(_DWORD *)uint64_t v30 = 136380675;
      uint64_t v39 = v30 + 4;
      id v31 = v25;
      id v32 = objc_msgSend(v31, sel_description);
      uint64_t v33 = sub_1C2A9DD28();
      unint64_t v35 = v34;

      uint64_t v43 = sub_1C2957168(v33, v35, &v44);
      sub_1C2A9E358();

      swift_bridgeObjectRelease();
      uint64_t v36 = v40;
      _os_log_impl(&dword_1C292A000, v26, (os_log_type_t)v41, "Unable to create axis label dimensions for %{private}s; no axis will be rendered.",
        v40,
        0xCu);
      uint64_t v37 = v42;
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v37, -1, -1);
      MEMORY[0x1C87656F0](v36, -1, -1);
    }
    else
    {
    }
    uint64_t v23 = *(void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v24 = v9;
    goto LABEL_12;
  }
  id v16 = v15;

  return v16;
}

id sub_1C29F408C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiagramAxisMetricsCalculatorFactory.HiLoScalarAxisDimension();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t DiagramAxisMetricsCalculatorFactory.deinit()
{
  return v0;
}

id sub_1C29F413C(uint64_t a1, void *a2)
{
  uint64_t v4 = self;
  uint64_t v5 = v2;
  id v6 = objc_msgSend(v4, sel_sharedInstance);
  if (!v6)
  {
    *(void *)&v5[OBJC_IVAR____TtCC19HealthVisualization35DiagramAxisMetricsCalculatorFactory23HiLoScalarAxisDimension_displayType] = 0;
    goto LABEL_5;
  }
  char v7 = v6;
  uint64_t v8 = (void *)sub_1C2A9DFC8();
  id v9 = objc_msgSend(v7, sel_displayTypeWithIdentifier_, v8);

  *(void *)&v5[OBJC_IVAR____TtCC19HealthVisualization35DiagramAxisMetricsCalculatorFactory23HiLoScalarAxisDimension_displayType] = v9;
  if (!v9)
  {
LABEL_5:
    id v14 = 0;
    *(void *)&v5[OBJC_IVAR____TtCC19HealthVisualization35DiagramAxisMetricsCalculatorFactory23HiLoScalarAxisDimension_valueFormatter] = 0;
    goto LABEL_6;
  }
  id v10 = v9;
  id v11 = objc_msgSend(v10, sel_objectType);
  id v12 = objc_msgSend(a2, sel_preferredUnitForType_, v11);

  id v13 = objc_msgSend(v10, sel_hk_valueFormatterForUnit_, v12);
  *(void *)&v5[OBJC_IVAR____TtCC19HealthVisualization35DiagramAxisMetricsCalculatorFactory23HiLoScalarAxisDimension_valueFormatter] = v13;
  id v14 = objc_msgSend(a2, sel_createHKUnitPreferenceController);

LABEL_6:
  *(void *)&v5[OBJC_IVAR____TtCC19HealthVisualization35DiagramAxisMetricsCalculatorFactory23HiLoScalarAxisDimension_unitPreferenceController] = v14;

  v16.receiver = v5;
  v16.super_class = (Class)type metadata accessor for DiagramAxisMetricsCalculatorFactory.HiLoScalarAxisDimension();
  return objc_msgSendSuper2(&v16, sel_init);
}

unint64_t sub_1C29F42D0()
{
  unint64_t result = qword_1EA31E9C8;
  if (!qword_1EA31E9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E9C8);
  }
  return result;
}

uint64_t dispatch thunk of DiagramAxisMetricsProviding.axisMetrics(for:customLocations:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

unsigned char *storeEnumTagSinglePayload for DiagramAxisMetricsOrientation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C29F4404);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiagramAxisMetricsOrientation()
{
  return &type metadata for DiagramAxisMetricsOrientation;
}

uint64_t dispatch thunk of DiagramAxisMetricsCalculatorProducing.diagramAxisMetricsCalculator(for:orientation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for DiagramAxisMetricsCalculatorFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DiagramAxisMetricsCalculatorFactory);
}

uint64_t dispatch thunk of DiagramAxisMetricsCalculatorFactory.__allocating_init(hbxViewControllerFactory:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DiagramAxisMetricsCalculatorFactory.diagramAxisMetricsCalculator(for:orientation:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t sub_1C29F44A0(void *a1)
{
  uint64_t v2 = (uint64_t)a1;
  int v3 = *(void **)(v1
                + OBJC_IVAR____TtCC19HealthVisualization35DiagramAxisMetricsCalculatorFactory23HiLoScalarAxisDimension_displayType);
  if (v3
    && (unsigned int v4 = *(void **)(v1
                      + OBJC_IVAR____TtCC19HealthVisualization35DiagramAxisMetricsCalculatorFactory23HiLoScalarAxisDimension_valueFormatter)) != 0
    && (uint64_t v5 = *(void **)(v1
                      + OBJC_IVAR____TtCC19HealthVisualization35DiagramAxisMetricsCalculatorFactory23HiLoScalarAxisDimension_unitPreferenceController)) != 0)
  {
    id v6 = v5;
    id v7 = v4;
    id v8 = v3;
    id v9 = objc_msgSend(v7, sel_stringFromValue_displayType_unitController_, v2, v8, v6);
    if (v9)
    {
      id v10 = v9;
      uint64_t v2 = sub_1C2A9DD28();
    }
    else
    {

      return 0;
    }
  }
  else if (a1)
  {
    id v11 = a1;
    id v12 = objc_msgSend(v11, sel_stringValue);
    uint64_t v2 = sub_1C2A9DD28();
  }
  return v2;
}

id DiagramGenerator.adjustTransformForReferenceLineAnnotationIfNeeded(transformer:diagramData:referencePosition:referenceAnnotationTextAttributes:size:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, char *a4@<X3>, CGFloat *a5@<X8>, double a6@<D1>)
{
  id v50 = *(id *)a1;
  CGFloat a = *(double *)(a1 + 8);
  CGFloat b = *(double *)(a1 + 16);
  CGFloat c = *(double *)(a1 + 24);
  CGFloat d = *(double *)(a1 + 32);
  CGFloat v12 = *(double *)(a1 + 40);
  CGFloat v13 = *(double *)(a1 + 48);
  CGFloat v14 = *(double *)a2;
  CGFloat v15 = *(double *)(a2 + 8);
  CGFloat v16 = *(double *)(a2 + 16);
  CGFloat v17 = *(double *)(a2 + 24);
  char v18 = *(unsigned char *)(a2 + 32);
  CGFloat v19 = *(double *)(a2 + 40);
  uint64_t v20 = *a3;
  char v48 = *a4;
  t1.CGFloat a = *(CGFloat *)a2;
  t1.CGFloat b = v15;
  t1.CGFloat c = v16;
  t1.CGFloat d = v17;
  LOBYTE(t1.tx) = v18;
  t1.CGFloat ty = v19;
  LOBYTE(t2.a) = 2;
  sub_1C29F5A50((uint64_t *)&t1, (unsigned __int8 *)&t2, (uint64_t)v54);
  sub_1C2934C44((uint64_t)v54, (uint64_t)v55);
  if ((v56 & 1) == 0)
  {
    double v43 = a6;
    CGFloat v47 = v13;
    CGFloat v21 = *(double *)v55;
    CGFloat rect = *(double *)&v55[1];
    CGFloat v23 = *(double *)&v55[2];
    CGFloat v22 = *(double *)&v55[3];
    t1.CGFloat a = v14;
    t1.CGFloat b = v15;
    t1.CGFloat c = v16;
    t1.CGFloat d = v17;
    LOBYTE(t1.tx) = v18;
    t1.CGFloat ty = v19;
    LOBYTE(t2.a) = v20;
    LOBYTE(v51.a) = v48;
    static DiagramGenerator.computeMaxReferenceAnnotationSize(diagramData:referencePosition:textAttributes:)((long long *)&t1, (uint64_t)&t2, (char *)&v51);
    if (v25)
    {
      CGFloat v13 = v47;
    }
    else
    {
      CGFloat v49 = v12;
      double v26 = c;
      double v27 = b;
      CGFloat v28 = a;
      CGFloat v29 = d;
      double v30 = v24;
      v59.origin.x = v21;
      v59.origin.y = rect;
      v59.size.width = v23;
      v59.size.height = v22;
      v58.y = CGRectGetMaxY(v59);
      CGFloat v31 = v28;
      t1.CGFloat a = v28;
      CGFloat b = v27;
      CGFloat c = v26;
      CGFloat v13 = v47;
      CGFloat v12 = v49;
      t1.CGFloat b = b;
      t1.CGFloat c = c;
      CGFloat v32 = v29;
      t1.CGFloat d = v29;
      t1.CGFloat tx = v49;
      t1.CGFloat ty = v47;
      v58.x = 0.0;
      CGPoint v33 = CGPointApplyAffineTransform(v58, &t1);
      switch(v20)
      {
        case 1:
          double v30 = v30 * 0.5;
          break;
        case 3:
          double v30 = 0.0;
          break;
        default:
          break;
      }
      CGFloat a = v31;
      if (v33.y >= v30 || v43 < 0.0)
      {
        CGFloat d = v32;
      }
      else
      {
        CGFloat v34 = v43 / (v30 - v33.y + v43);
        rectCGFloat a = b;
        CGFloat v35 = (v30 - v33.y) * v34;
        CGAffineTransformMakeScale(&t1, 1.0, v34);
        long long v42 = *(_OWORD *)&t1.c;
        long long v44 = *(_OWORD *)&t1.a;
        CGFloat tx = t1.tx;
        CGFloat ty = t1.ty;
        CGAffineTransformMakeTranslation(&t1, 0.0, v35);
        long long v38 = *(_OWORD *)&t1.a;
        long long v39 = *(_OWORD *)&t1.c;
        long long v40 = *(_OWORD *)&t1.tx;
        *(_OWORD *)&t1.CGFloat a = v44;
        *(_OWORD *)&t1.CGFloat c = v42;
        t1.CGFloat tx = tx;
        t1.CGFloat ty = ty;
        *(_OWORD *)&t2.CGFloat a = v38;
        *(_OWORD *)&t2.CGFloat c = v39;
        *(_OWORD *)&t2.CGFloat tx = v40;
        CGAffineTransformConcat(&v51, &t1, &t2);
        t1.CGFloat a = v31;
        t1.CGFloat b = recta;
        t1.CGFloat c = c;
        t1.CGFloat d = v32;
        t1.CGFloat tx = v49;
        t1.CGFloat ty = v47;
        CGAffineTransform t2 = v51;
        CGAffineTransformConcat(&v51, &t1, &t2);
        CGFloat a = v51.a;
        CGFloat b = v51.b;
        CGFloat c = v51.c;
        CGFloat d = v51.d;
        CGFloat v12 = v51.tx;
        CGFloat v13 = v51.ty;
      }
    }
  }
  *(void *)a5 = v50;
  a5[1] = a;
  a5[2] = b;
  a5[3] = c;
  a5[4] = d;
  a5[5] = v12;
  a5[6] = v13;
  return v50;
}

void static DiagramGenerator.computeLeftMarginAnnotationBounds(at:annotation:above:textAttributes:)(uint64_t a1@<X1>, char a2@<W2>, char *a3@<X3>, uint64_t a4@<X8>, CGFloat a5@<D0>, CGFloat a6@<D1>)
{
  if (a1)
  {
    char v11 = *a3;
    CGFloat v12 = (void *)sub_1C2A9DCF8();
    LOBYTE(v23.a) = v11;
    DiagramConfiguration.TextAttributes.toTextAttributes()();
    type metadata accessor for Key(0);
    sub_1C2942D7C();
    CGFloat v13 = (void *)sub_1C2A9DC58();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_sizeWithAttributes_, v13, *(void *)&v23.a);
    uint64_t v15 = v14;
    double v17 = v16;

    double v18 = v17 + 5.0;
    if ((a2 & 1) == 0) {
      double v18 = 5.0;
    }
    double v19 = -v18;
    if ((a2 & 1) == 0) {
      double v19 = 5.0;
    }
    CGAffineTransformMakeTranslation(&v23, 0.0, v19);
    v24.CGFloat x = a5;
    v24.CGFloat y = a6;
    CGPoint v20 = CGPointApplyAffineTransform(v24, &v23);
    CGFloat x = v20.x;
    CGFloat y = v20.y;
  }
  else
  {
    CGFloat x = 0.0;
    CGFloat y = 0.0;
    uint64_t v15 = 0;
    double v17 = 0.0;
  }
  *(CGFloat *)a4 = x;
  *(CGFloat *)(a4 + 8) = y;
  *(void *)(a4 + 16) = v15;
  *(double *)(a4 + 24) = v17;
  *(unsigned char *)(a4 + 32) = a1 == 0;
}

uint64_t sub_1C29F49E4(uint64_t result, unsigned __int8 *a2, void (*a3)(double *, double *, void *, double, double))
{
  uint64_t v3 = *(void *)(result + 40);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return result;
  }
  unsigned __int8 v5 = *a2;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  uint64_t v24 = v4;
  uint64_t v25 = v3;
  unsigned __int8 v23 = v5;
  do
  {
    uint64_t v7 = *(void *)(v3 + 8 * v6 + 32);
    if (*(void *)(v7 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v8 = sub_1C293DDF4(v5);
      if ((v9 & 1) == 0) {
        goto LABEL_3;
      }
      id v10 = (double **)(*(void *)(v7 + 56) + 40 * v8);
      CGFloat v12 = *v10;
      char v11 = v10[1];
      CGFloat v13 = v10[2];
      uint64_t v14 = v10[3];
      uint64_t v15 = v10[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v16 = *((void *)v12 + 2);
      if (!v16)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_3:
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      double v17 = v12[4];
      double v18 = v12[5];
      if (v16 == 1)
      {
        uint64_t v19 = 0;
        CGPoint v20 = 0;
        CGFloat v21 = 0;
        uint64_t v14 = 0;
        CGFloat v22 = 0;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v19 = (uint64_t)v12;
        CGPoint v20 = v11;
        CGFloat v21 = v13;
        CGFloat v22 = v15;
      }
      v27[0] = v19;
      v27[1] = v20;
      v27[2] = v21;
      v27[3] = v14;
      v27[4] = v22;
      a3(v11, v13, v27, v17, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C293D518(v19);
      uint64_t v4 = v24;
      uint64_t v3 = v25;
      unsigned __int8 v5 = v23;
    }
LABEL_4:
    ++v6;
  }
  while (v4 != v6);
  return swift_bridgeObjectRelease();
}

double DiagramPointAnnotations.verticalInset()()
{
  if (!*(void *)(*(void *)v0 + 16)) {
    return 0.0;
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1C2A9DCF8();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C2942D7C();
  uint64_t v2 = (void *)sub_1C2A9DC58();
  objc_msgSend(v1, sel_sizeWithAttributes_, v2);
  double v4 = v3;

  return v4;
}

void DiagramPointAnnotations.horizontalInsets()()
{
  uint64_t v1 = *v0;
  unint64_t v2 = *(void *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    double v3 = (void *)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1C2942D7C();
    double v4 = (void *)sub_1C2A9DC58();
    objc_msgSend(v3, sel_sizeWithAttributes_, v4);

    if (v2 > *(void *)(v1 + 16))
    {
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRetain();
      unsigned __int8 v5 = (void *)sub_1C2A9DCF8();
      swift_bridgeObjectRelease();
      uint64_t v6 = (void *)sub_1C2A9DC58();
      objc_msgSend(v5, sel_sizeWithAttributes_, v6);
    }
  }
}

uint64_t static DiagramGenerator.computeMaxReferenceAnnotationSize(diagramData:referencePosition:textAttributes:)(long long *a1, uint64_t a2, char *a3)
{
  long long v11 = *a1;
  uint64_t v3 = *((void *)a1 + 2);
  uint64_t v4 = *((void *)a1 + 3);
  char v5 = *((unsigned char *)a1 + 32);
  uint64_t v6 = *((void *)a1 + 5);
  char v7 = *a3;
  sub_1C29F5BA0(0, &qword_1EBB90DC8, (uint64_t (*)(uint64_t))sub_1C293FD2C, MEMORY[0x1E4FBBE00]);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2AA6B00;
  *(_OWORD *)(inited + 32) = v11;
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  *(unsigned char *)(inited + 64) = v5;
  *(void *)(inited + 72) = v6;
  *(unsigned char *)(inited + 80) = v7;
  swift_bridgeObjectRetain();
  uint64_t v9 = static DiagramGenerator.computeMaxReferenceAnnotationSize(referenceData:referencePosition:)(inited);
  swift_setDeallocating();
  sub_1C293FD2C();
  swift_arrayDestroy();
  return v9;
}

uint64_t static DiagramGenerator.computeMaxReferenceAnnotationSize(referenceData:referencePosition:)(uint64_t a1)
{
  CGFloat v1 = *(double *)(MEMORY[0x1E4F1DB20] + 8);
  CGFloat v3 = *(double *)(MEMORY[0x1E4F1DB20] + 16);
  CGFloat v4 = *(double *)(MEMORY[0x1E4F1DB20] + 24);
  double v21 = *MEMORY[0x1E4F1DB20];
  CGFloat v2 = v21;
  double v22 = v1;
  double v23 = v3;
  double v24 = v4;
  uint64_t v5 = *(void *)(a1 + 16);
  CGFloat v6 = v4;
  CGFloat v7 = v3;
  CGFloat v15 = v1;
  CGFloat v16 = v21;
  if (v5)
  {
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = v8 + 80;
    do
    {
      char v10 = *(unsigned char *)(v9 - 16);
      uint64_t v11 = *(void *)(v9 - 8);
      long long v12 = *(_OWORD *)(v9 - 32);
      v18[0] = *(_OWORD *)(v9 - 48);
      v18[1] = v12;
      char v19 = v10;
      uint64_t v20 = v11;
      unsigned __int8 v17 = 2;
      MEMORY[0x1F4188790](v8);
      swift_bridgeObjectRetain();
      sub_1C29F49E4((uint64_t)v18, &v17, (void (*)(double *, double *, void *, double, double))sub_1C29F5C04);
      uint64_t v8 = swift_bridgeObjectRelease();
      v9 += 56;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    CGFloat v2 = v21;
    CGFloat v1 = v22;
    CGFloat v7 = v23;
    CGFloat v6 = v24;
  }
  v25.origin.CGFloat x = v2;
  v25.origin.CGFloat y = v1;
  v25.size.width = v7;
  v25.size.height = v6;
  CGFloat Width = CGRectGetWidth(v25);
  v26.origin.CGFloat x = v2;
  v26.origin.CGFloat y = v1;
  v26.size.width = v7;
  v26.size.height = v6;
  CGRectGetHeight(v26);
  v27.origin.CGFloat x = v2;
  v27.origin.CGFloat y = v1;
  v27.size.width = v7;
  v27.size.height = v6;
  v28.origin.CGFloat x = v16;
  v28.origin.CGFloat y = v15;
  v28.size.width = v3;
  v28.size.height = v4;
  if (CGRectEqualToRect(v27, v28)) {
    return 0;
  }
  else {
    return *(void *)&Width;
  }
}

void sub_1C29F5128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, CGRect *a6)
{
  LOBYTE(v8.origin.x) = a5;
  static DiagramGenerator.computeLeftMarginAnnotationBounds(at:annotation:above:textAttributes:)(a2, 1, (char *)&v8, (uint64_t)v7, 0.0, 0.0);
  sub_1C2934C44((uint64_t)v7, (uint64_t)&v8);
  if ((v9 & 1) == 0) {
    *a6 = CGRectUnion(*a6, v8);
  }
}

void __swiftcall DiagramGenerator.computeReferenceLineBounds(diagramData:diagramDataKey:)(__C::CGRect_optional *__return_ptr retstr, HealthVisualization::DiagramData *diagramData, HealthVisualization::DiagramDataKey diagramDataKey)
{
  sub_1C29F5A50((uint64_t *)diagramData, (unsigned __int8 *)diagramDataKey, (uint64_t)v4);
  sub_1C2934C44((uint64_t)v4, (uint64_t)retstr);
}

void static DiagramGenerator.computeRightMarginAnnotationBounds(at:annotation:textAttributes:)(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>)
{
  if (a1)
  {
    char v9 = *a2;
    char v10 = (void *)sub_1C2A9DCF8();
    LOBYTE(v19.a) = v9;
    DiagramConfiguration.TextAttributes.toTextAttributes()();
    type metadata accessor for Key(0);
    sub_1C2942D7C();
    uint64_t v11 = (void *)sub_1C2A9DC58();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_sizeWithAttributes_, v11, *(void *)&v19.a);
    double v13 = v12;
    double v15 = v14;

    CGAffineTransformMakeTranslation(&v19, -v13, v15 * -0.5);
    v20.CGFloat x = a4;
    v20.CGFloat y = a5;
    CGPoint v16 = CGPointApplyAffineTransform(v20, &v19);
    CGFloat x = v16.x;
    CGFloat y = v16.y;
  }
  else
  {
    CGFloat x = 0.0;
    CGFloat y = 0.0;
    double v13 = 0.0;
    double v15 = 0.0;
  }
  *(CGFloat *)a3 = x;
  *(CGFloat *)(a3 + 8) = y;
  *(double *)(a3 + 16) = v13;
  *(double *)(a3 + 24) = v15;
  *(unsigned char *)(a3 + 32) = a1 == 0;
}

unint64_t static DiagramGenerator.computeMaxMinPoints(dataGroupForPointLabels:pointLabels:valueFormatter:dataTable:)@<X0>(unint64_t result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v6 = *((unsigned __int16 *)a2 + 4) | (*((unsigned __int8 *)a2 + 10) << 16);
  if ((v6 & 0x800000) == 0) {
    goto LABEL_36;
  }
  if ((v6 & 0xFEE0E0) == 0xFEE0E0) {
    goto LABEL_36;
  }
  if (!*(void *)(a4 + 16)) {
    goto LABEL_36;
  }
  uint64_t v8 = *a3;
  int v76 = *((unsigned __int8 *)a3 + 8);
  uint64_t v9 = *a2;
  unint64_t result = sub_1C293DDF4(*(unsigned char *)result);
  if ((v10 & 1) == 0) {
    goto LABEL_36;
  }
  uint64_t v11 = *(void *)(*(void *)(a4 + 56) + 40 * result);
  swift_bridgeObjectRetain();
  if (v9 == 25) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = DiagramConfiguration.TextAttributes.toTextAttributes()();
  }
  if (BYTE1(v9) != 25)
  {
    unint64_t v13 = DiagramConfiguration.TextAttributes.toTextAttributes()();
    if (v12 | v13) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
  unint64_t v13 = 0;
  if (!v12)
  {
LABEL_35:
    unint64_t result = swift_bridgeObjectRelease();
LABEL_36:
    *(void *)a5 = 1;
    *(_OWORD *)(a5 + 8) = 0u;
    *(_OWORD *)(a5 + 24) = 0u;
    *(void *)(a5 + 40) = 0;
    return result;
  }
LABEL_10:
  uint64_t v14 = *(void *)(v11 + 16);
  if (!v14)
  {
    unint64_t result = swift_bridgeObjectRelease();
    double v18 = (void *)MEMORY[0x1E4FBC860];
    double v21 = (void *)MEMORY[0x1E4FBC860];
    __asm { FMOV            V0.2D, #6.0 }
    if (v12) {
      goto LABEL_32;
    }
    goto LABEL_38;
  }
  unint64_t v74 = v13;
  uint64_t v75 = v8;
  unint64_t v73 = v12;
  double v16 = *(double *)(v11 + 32);
  double v15 = *(double *)(v11 + 40);
  uint64_t v17 = v14 - 1;
  if (v14 == 1)
  {
    double v18 = (void *)MEMORY[0x1E4FBC860];
    double v19 = *(double *)(v11 + 40);
    double v20 = *(double *)(v11 + 32);
    double v21 = (void *)MEMORY[0x1E4FBC860];
LABEL_13:
    swift_bridgeObjectRelease();
    double v22 = (void *)sub_1C2A9C8D8();
    Swift::String_optional v23 = DiagramConfiguration.ValueFormatter.format(value:)((NSNumber)v22);
    object = v23.value._object;

    if (v23.value._object) {
      uint64_t countAndFlagsBits = v23.value._countAndFlagsBits;
    }
    else {
      uint64_t countAndFlagsBits = 1701736270;
    }
    if (!v23.value._object) {
      object = (void *)0xE400000000000000;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v18 = sub_1C299CC08(0, v18[2] + 1, 1, v18);
    }
    unint64_t v12 = v73;
    unint64_t v27 = v18[2];
    unint64_t v26 = v18[3];
    if (v27 >= v26 >> 1) {
      double v18 = sub_1C299CC08((void *)(v26 > 1), v27 + 1, 1, v18);
    }
    _OWORD v18[2] = v27 + 1;
    CGRect v28 = (double *)&v18[4 * v27];
    *((void *)v28 + 4) = countAndFlagsBits;
    *((void *)v28 + 5) = object;
    v28[6] = v20;
    v28[7] = v19;
    CGFloat v29 = (void *)sub_1C2A9C8D8();
    Swift::String_optional v30 = DiagramConfiguration.ValueFormatter.format(value:)((NSNumber)v29);
    CGFloat v31 = v30.value._object;

    if (v30.value._object) {
      uint64_t v32 = v30.value._countAndFlagsBits;
    }
    else {
      uint64_t v32 = 1701736270;
    }
    if (!v30.value._object) {
      CGFloat v31 = (void *)0xE400000000000000;
    }
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = (unint64_t)sub_1C299CC08(0, v21[2] + 1, 1, v21);
      double v21 = (void *)result;
    }
    unint64_t v34 = v21[2];
    unint64_t v33 = v21[3];
    if (v34 >= v33 >> 1)
    {
      unint64_t result = (unint64_t)sub_1C299CC08((void *)(v33 > 1), v34 + 1, 1, v21);
      double v21 = (void *)result;
    }
    v21[2] = v34 + 1;
    CGFloat v35 = (double *)&v21[4 * v34];
    *((void *)v35 + 4) = v32;
    *((void *)v35 + 5) = v31;
    v35[6] = v16;
    v35[7] = v15;
    unint64_t v13 = v74;
    __asm { FMOV            V0.2D, #6.0 }
    if (v73)
    {
LABEL_32:
      *((void *)&v41 + 1) = *((void *)&_Q0 + 1);
      *(void *)&long long v41 = v18;
      if (v13)
      {
LABEL_33:
        *(void *)&_Q0 = v21;
LABEL_40:
        *(_OWORD *)a5 = v41;
        *(void *)(a5 + 16) = v12;
        *(_OWORD *)(a5 + 24) = _Q0;
        *(void *)(a5 + 40) = v13;
        return result;
      }
LABEL_39:
      long long v77 = v41;
      unint64_t result = swift_bridgeObjectRelease();
      long long v41 = v77;
      _Q0 = 0uLL;
      goto LABEL_40;
    }
LABEL_38:
    uint64_t v78 = *((void *)&_Q0 + 1);
    unint64_t result = swift_bridgeObjectRelease();
    *((void *)&_Q0 + 1) = v78;
    long long v41 = 0uLL;
    if (v13) {
      goto LABEL_33;
    }
    goto LABEL_39;
  }
  long long v42 = (double *)(v11 + 56);
  double v18 = (void *)MEMORY[0x1E4FBC860];
  double v43 = v15;
  double v44 = v16;
  double v19 = v15;
  double v20 = v16;
  double v21 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    double v16 = *(v42 - 1);
    double v15 = *v42;
    if (vabdd_f64(v16, v20) < 0.000001)
    {
      if (v15 > v19) {
        double v19 = *v42;
      }
      if (v43 < v15) {
        double v15 = v43;
      }
      double v16 = v44;
      goto LABEL_47;
    }
    uint64_t v45 = (void *)sub_1C2A9C8D8();
    if (v76) {
      break;
    }
    id v51 = (id)HKNumberFormatterWithDecimalPrecision();
    if (v51
      && (uint64_t v52 = v51,
          id v53 = objc_msgSend(v51, sel_stringFromNumber_, v45),
          v52,
          v53))
    {
      uint64_t v48 = sub_1C2A9DD28();
      unint64_t v50 = v54;
    }
    else
    {

      unint64_t v50 = 0xE400000000000000;
      uint64_t v48 = 1701736270;
    }
LABEL_62:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v18 = sub_1C299CC08(0, v18[2] + 1, 1, v18);
    }
    unint64_t v59 = v18[2];
    unint64_t v58 = v18[3];
    if (v59 >= v58 >> 1) {
      double v18 = sub_1C299CC08((void *)(v58 > 1), v59 + 1, 1, v18);
    }
    _OWORD v18[2] = v59 + 1;
    uint64_t v60 = (double *)&v18[4 * v59];
    *((void *)v60 + 4) = v48;
    *((void *)v60 + 5) = v50;
    v60[6] = v20;
    v60[7] = v19;
    uint64_t v61 = (void *)sub_1C2A9C8D8();
    if (v76)
    {
      if (v8)
      {
        id v62 = objc_msgSend(self, sel_hk_percentNumberFormatter);
        id v63 = objc_msgSend(v62, sel_stringFromNumber_, v61);

        if (!v63) {
          goto LABEL_75;
        }
        uint64_t v64 = sub_1C2A9DD28();
        unint64_t v66 = v65;

        uint64_t v8 = v75;
        goto LABEL_77;
      }
      unint64_t result = (unint64_t)(id)HKIntegerFormatter();
      if (!result) {
        goto LABEL_83;
      }
    }
    else
    {
      unint64_t result = (unint64_t)(id)HKNumberFormatterWithDecimalPrecision();
      if (!result)
      {

        unint64_t v66 = 0xE400000000000000;
        uint64_t v64 = 1701736270;
        goto LABEL_77;
      }
    }
    uint64_t v67 = (void *)result;
    id v68 = objc_msgSend((id)result, sel_stringFromNumber_, v61);

    if (!v68)
    {
LABEL_75:

      unint64_t v66 = 0xE400000000000000;
      uint64_t v64 = 1701736270;
      uint64_t v8 = v75;
      goto LABEL_77;
    }
    uint64_t v64 = sub_1C2A9DD28();
    unint64_t v66 = v69;

    uint64_t v8 = v75;
LABEL_77:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v21 = sub_1C299CC08(0, v21[2] + 1, 1, v21);
    }
    unint64_t v71 = v21[2];
    unint64_t v70 = v21[3];
    if (v71 >= v70 >> 1) {
      double v21 = sub_1C299CC08((void *)(v70 > 1), v71 + 1, 1, v21);
    }
    v21[2] = v71 + 1;
    int v72 = (double *)&v21[4 * v71];
    *((void *)v72 + 4) = v64;
    *((void *)v72 + 5) = v66;
    v72[6] = v44;
    v72[7] = v43;
    double v19 = v15;
    double v20 = v16;
    double v44 = v16;
LABEL_47:
    v42 += 2;
    double v43 = v15;
    if (!--v17) {
      goto LABEL_13;
    }
  }
  if (v8)
  {
    id v46 = objc_msgSend(self, sel_hk_percentNumberFormatter);
    id v47 = objc_msgSend(v46, sel_stringFromNumber_, v45);

    if (v47)
    {
      uint64_t v48 = sub_1C2A9DD28();
      unint64_t v50 = v49;

LABEL_61:
      uint64_t v8 = v75;
      goto LABEL_62;
    }
    goto LABEL_60;
  }
  unint64_t result = (unint64_t)(id)HKIntegerFormatter();
  if (result)
  {
    uint64_t v55 = (void *)result;
    id v56 = objc_msgSend((id)result, sel_stringFromNumber_, v45);

    if (v56)
    {
      uint64_t v48 = sub_1C2A9DD28();
      unint64_t v50 = v57;

      goto LABEL_61;
    }
LABEL_60:

    unint64_t v50 = 0xE400000000000000;
    uint64_t v48 = 1701736270;
    goto LABEL_61;
  }
  __break(1u);
LABEL_83:
  __break(1u);
  return result;
}

BOOL sub_1C29F5A50@<W0>(uint64_t *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  char v8 = *((unsigned char *)a1 + 32);
  uint64_t v9 = a1[5];
  unsigned __int8 v10 = *a2;
  CGFloat v12 = *(double *)(MEMORY[0x1E4F1DB20] + 8);
  CGFloat v13 = *(double *)(MEMORY[0x1E4F1DB20] + 16);
  CGFloat v14 = *(double *)(MEMORY[0x1E4F1DB20] + 24);
  v28.origin.CGFloat x = *(CGFloat *)MEMORY[0x1E4F1DB20];
  CGFloat x = v28.origin.x;
  v28.origin.CGFloat y = v12;
  v28.size.CGFloat width = v13;
  v28.size.CGFloat height = v14;
  DiagramData.diagramBounds(forceNonZeroSize:)(1);
  v25[0] = v4;
  v25[1] = v5;
  v25[2] = v6;
  v25[3] = v7;
  char v26 = v8;
  uint64_t v27 = v9;
  unsigned __int8 v24 = v10;
  sub_1C29F49E4((uint64_t)v25, &v24, (void (*)(double *, double *, void *, double, double))sub_1C29F5D9C);
  CGFloat v16 = v28.origin.x;
  CGFloat y = v28.origin.y;
  CGFloat width = v28.size.width;
  CGFloat height = v28.size.height;
  v29.origin.CGFloat x = x;
  v29.origin.CGFloat y = v12;
  v29.size.CGFloat width = v13;
  v29.size.CGFloat height = v14;
  BOOL result = CGRectEqualToRect(v28, v29);
  CGFloat v20 = 0.0;
  CGFloat v21 = 0.0;
  CGFloat v22 = 0.0;
  CGFloat v23 = 0.0;
  if (!result)
  {
    CGFloat v20 = v16;
    CGFloat v21 = y;
    CGFloat v22 = width;
    CGFloat v23 = height;
  }
  *(CGFloat *)a3 = v20;
  *(CGFloat *)(a3 + 8) = v21;
  *(CGFloat *)(a3 + 16) = v22;
  *(CGFloat *)(a3 + 24) = v23;
  *(unsigned char *)(a3 + 32) = result;
  return result;
}

void sub_1C29F5BA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C29F5C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C29F5128(a1, a2, a3, *(void *)(v3 + 32), *(unsigned char *)(v3 + 40), *(CGRect **)(v3 + 48));
}

uint64_t dispatch thunk of DiagramGenerator.modelSpace.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DiagramGenerator.screenInsets.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DiagramGenerator.drawingBlock.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t destroy for DiagramPointAnnotations()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s19HealthVisualization23DiagramPointAnnotationsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DiagramPointAnnotations(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DiagramPointAnnotations(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DiagramPointAnnotations()
{
  return &type metadata for DiagramPointAnnotations;
}

void sub_1C29F5D9C(CGFloat a1, CGFloat a2)
{
  v4.origin.CGFloat y = a2;
  v4.origin.CGFloat x = a1;
  v4.size.CGFloat width = *(CGFloat *)(v2 + 16);
  v4.size.CGFloat height = *(CGFloat *)(v2 + 24);
  uint64_t v3 = *(CGRect **)(v2 + 32);
  *uint64_t v3 = CGRectUnion(*v3, v4);
}

BOOL static SevenDayDoseOperationError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SevenDayDoseOperationError.hash(into:)()
{
  return sub_1C2A9E9C8();
}

uint64_t SevenDayDoseOperationError.hashValue.getter()
{
  return sub_1C2A9E9E8();
}

uint64_t SevenDayDoseOperation.DoseData.points.getter()
{
  return swift_bridgeObjectRetain();
}

HealthVisualization::SevenDayDoseOperation::DoseData __swiftcall SevenDayDoseOperation.DoseData.init(points:)(HealthVisualization::SevenDayDoseOperation::DoseData points)
{
  v1->points._rawValue = points.points._rawValue;
  return points;
}

uint64_t sub_1C29F5E74(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + qword_1EBB91D88);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1C29F5EE0()
{
  return swift_retain();
}

double SevenDayDoseOperation.doseIntervalDuration.getter()
{
  return 604800.0;
}

void sub_1C29F5F3C(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*a2 + qword_1EBB91D78);
  swift_beginAccess();
  CGRect v4 = *v3;
  *uint64_t v3 = v2;
  id v5 = v2;
}

void *sub_1C29F5FA0()
{
  CGFloat v1 = (void **)(v0 + qword_1EBB91D78);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

uint64_t sub_1C29F5FF0(uint64_t a1, void *a2)
{
  sub_1C29F9238(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - v5;
  sub_1C29F612C(a1, (uint64_t)&v9 - v5);
  uint64_t v7 = *a2 + qword_1EBB9F130;
  swift_beginAccess();
  sub_1C29F6F00((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t sub_1C29F60D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1EBB9F130;
  swift_beginAccess();
  return sub_1C29F612C(v3, a1);
}

uint64_t sub_1C29F612C(uint64_t a1, uint64_t a2)
{
  sub_1C29F9238(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id SevenDayDoseOperation.healthStore.getter()
{
  return *(id *)(v0 + qword_1EBB9F128);
}

char *sub_1C29F61D0()
{
  uint64_t v1 = qword_1EBB91D70;
  uint64_t v2 = *(char **)&v0[qword_1EBB91D70];
  uint64_t v3 = v2;
  if (v2 == (char *)1)
  {
    uint64_t v3 = sub_1C29F6240(v0);
    uint64_t v4 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v3;
    uint64_t v5 = v3;
    sub_1C2944A80(v4);
  }
  sub_1C2944A70(v2);
  return v3;
}

char *sub_1C29F6240(char *a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C29F9238(0, &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v29[-v4];
  sub_1C29F9238(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], v2);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = &v29[-v7];
  unint64_t v9 = *(void *)&a1[qword_1EBB9F138];
  unsigned __int8 v10 = (id *)&a1[qword_1EBB91D78];
  BOOL result = (char *)swift_beginAccess();
  id v12 = *v10;
  if (!*v10)
  {
    __break(1u);
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  id v13 = v12;
  char v14 = sub_1C29A546C((uint64_t)v13, v9);
  swift_bridgeObjectRelease();

  if ((v14 & 1) == 0) {
    return 0;
  }
  uint64_t v15 = (uint64_t)&a1[qword_1EBB9F130];
  swift_beginAccess();
  sub_1C29F612C(v15, (uint64_t)v8);
  uint64_t v16 = sub_1C2A9C398();
  int v17 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v8, 1, v16);
  sub_1C296B6C4((uint64_t)v8);
  BOOL result = 0;
  if (v17 != 1)
  {
    if (*v10)
    {
      double v18 = (char *)*v10;
      sub_1C29F65A4((uint64_t)v32);
      v29[0] = v32[0];
      uint64_t v30 = v33;
      __int16 v31 = v34;
      sub_1C29F612C(v15, (uint64_t)v5);
      uint64_t ConfigurationOverrides = type metadata accessor for StatisticsQueryConfigurationOverrides();
      *(void *)&v5[*(int *)(ConfigurationOverrides + 20)] = 0;
      v5[*(int *)(ConfigurationOverrides + 24)] = 1;
      (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(*(void *)(ConfigurationOverrides - 8)
                                                                          + 56))(v5, 0, 1, ConfigurationOverrides);
      id v20 = objc_msgSend(a1, sel_name);
      if (v20)
      {
        id v21 = v20;
        CGFloat v22 = (void *)sub_1C2A9DD28();
        uint64_t v24 = v23;
      }
      else
      {
        CGRect v25 = a1;
        id v21 = objc_msgSend(v25, sel_description);
        CGFloat v22 = (void *)sub_1C2A9DD28();
        uint64_t v24 = v26;
      }
      uint64_t v27 = *(void **)&a1[qword_1EBB9F128];
      int v28 = a1[qword_1EBB8EBA8];
      objc_allocWithZone((Class)type metadata accessor for StatisticsCollectionQueryOperation());
      return StatisticsCollectionQueryOperation.init(sampleType:configuration:configurationOverrides:name:queryQualityOfService:healthStore:environment:resultHandler:)(v18, v29, (uint64_t)v5, v22, v24, 33, (char *)v27, v28, (unsigned int (*)(void, void, void))nullsub_1, 0);
    }
LABEL_12:
    __break(1u);
  }
  return result;
}

void sub_1C29F65A4(uint64_t a1@<X8>)
{
  uint64_t v3 = (void **)(v1 + qword_1EBB91D78);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = self;
  id v6 = v4;
  id v7 = objc_msgSend(v5, sel__quantityTypeWithCode_, 172);
  unint64_t v8 = v7;
  if (!v4)
  {
    if (!v7) {
      goto LABEL_6;
    }
LABEL_8:

LABEL_9:
    uint64_t v11 = &unk_1F1DEA5B0;
    goto LABEL_10;
  }
  if (!v7)
  {
    unint64_t v8 = v6;
    goto LABEL_8;
  }
  sub_1C296FC38();
  id v9 = v6;
  char v10 = sub_1C2A9E2B8();

  if ((v10 & 1) == 0) {
    goto LABEL_9;
  }
LABEL_6:
  uint64_t v11 = &unk_1F1DEA588;
LABEL_10:
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = v11;
  *(_WORD *)(a1 + 16) = 256;
}

void sub_1C29F66A8(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + qword_1EBB91D70);
  *(void *)(v1 + qword_1EBB91D70) = a1;
  sub_1C2944A80(v2);
}

void (*sub_1C29F66C0(char **a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  *a1 = sub_1C29F61D0();
  return sub_1C29F6708;
}

void sub_1C29F6708(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void **)(v3 + qword_1EBB91D70);
  *(void *)(v3 + qword_1EBB91D70) = *(void *)a1;
  if (a2)
  {
    id v5 = v2;
    sub_1C2944A80(v4);
  }
  else
  {
    sub_1C2944A80(v4);
  }
}

id SevenDayDoseOperation.__allocating_init(healthStore:name:environment:)(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  char v8 = a4 & 1;
  id v9 = objc_allocWithZone(v4);
  return SevenDayDoseOperation.init(healthStore:name:environment:)(a1, a2, a3, v8);
}

id SevenDayDoseOperation.init(healthStore:name:environment:)(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = qword_1EBB91D88;
  sub_1C29F6A84();
  uint64_t v9 = swift_allocError();
  *char v10 = 0;
  uint64_t v23 = v9;
  char v24 = 1;
  sub_1C29F9238(0, &qword_1EBB91C30, (uint64_t (*)(uint64_t))sub_1C29F6AD8, MEMORY[0x1E4F674D8]);
  swift_allocObject();
  uint64_t v11 = v4;
  *(void *)&v4[v8] = sub_1C2A9C9F8();
  *(void *)&v11[qword_1EBB91D80] = 0x4122750000000000;
  *(void *)&v11[qword_1EBB91D78] = 0;
  id v12 = &v11[qword_1EBB9F130];
  uint64_t v13 = sub_1C2A9C398();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(void *)&v11[qword_1EBB91D70] = 1;
  sub_1C296B238();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C2AAA110;
  uint64_t v15 = self;
  id result = objc_msgSend(v15, sel__quantityTypeWithCode_, 173);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  *(void *)(v14 + 32) = result;
  id result = objc_msgSend(v15, sel__quantityTypeWithCode_, 172);
  if (!result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v17 = qword_1EBB9F138;
  *(void *)(v14 + 40) = result;
  uint64_t v23 = v14;
  sub_1C2A9DEA8();
  *(void *)&v11[v17] = v14;
  *(void *)&v11[qword_1EBB9F128] = a1;
  v11[qword_1EBB8EBA8] = a4 & 1;
  id v18 = a1;

  v22.receiver = v11;
  v22.super_class = (Class)type metadata accessor for SevenDayDoseOperation();
  id v19 = objc_msgSendSuper2(&v22, sel_init);
  id v20 = v19;
  if (a3)
  {
    id v21 = (void *)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v21 = 0;
  }
  objc_msgSend(v19, sel_setName_, v21);

  return v19;
}

unint64_t sub_1C29F6A84()
{
  unint64_t result = qword_1EBB91DF8;
  if (!qword_1EBB91DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91DF8);
  }
  return result;
}

void sub_1C29F6AD8()
{
  if (!qword_1EBB92228)
  {
    sub_1C2969188();
    unint64_t v0 = sub_1C2A9E9F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB92228);
    }
  }
}

uint64_t type metadata accessor for SevenDayDoseOperation()
{
  uint64_t result = qword_1EBB91D90;
  if (!qword_1EBB91D90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C29F6B8C(void (**a1)(char *, void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  sub_1C29F9238(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v36 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - v7;
  uint64_t v9 = sub_1C2A9C6E8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v35 - v14;
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v35 - v17;
  id v19 = (void **)(v2 + qword_1EBB91D78);
  swift_beginAccess();
  id v20 = *v19;
  id v21 = v37;
  *id v19 = v37;
  id v22 = v21;

  uint64_t v23 = v38;
  sub_1C2A9C5F8();
  sub_1C2A9C5E8();
  uint64_t v37 = (void (**)(char *, void))v10;
  char v24 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v24(v15, v18, v9);
  uint64_t v38 = v9;
  v24(v12, (char *)v23, v9);
  sub_1C2A9C358();
  uint64_t v25 = sub_1C2A9C398();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v8, 0, 1, v25);
  uint64_t v27 = v3 + qword_1EBB9F130;
  swift_beginAccess();
  sub_1C29F6F00((uint64_t)v8, v27);
  uint64_t result = swift_endAccess();
  CGRect v29 = *v19;
  if (*v19)
  {
    unint64_t v30 = *(void *)(v3 + qword_1EBB9F138);
    swift_bridgeObjectRetain();
    id v31 = v29;
    char v32 = sub_1C29A546C((uint64_t)v31, v30);
    swift_bridgeObjectRelease();

    if (v32)
    {
      uint64_t v33 = v36;
      sub_1C29F612C(v27, v36);
      BOOL v34 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v33, 1, v25) != 1;
      sub_1C296B6C4(v33);
    }
    else
    {
      BOOL v34 = 0;
    }
    v37[1](v18, v38);
    return v34;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C29F6F00(uint64_t a1, uint64_t a2)
{
  sub_1C29F9238(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C29F6F94(void *a1, uint64_t a2)
{
  sub_1C29F9238(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v23[-v9];
  uint64_t v11 = (void **)(v2 + qword_1EBB91D78);
  swift_beginAccess();
  id v12 = *v11;
  *uint64_t v11 = a1;
  id v13 = a1;

  uint64_t v14 = sub_1C2A9C398();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16))(v10, a2, v14);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  uint64_t v16 = v2 + qword_1EBB9F130;
  swift_beginAccess();
  sub_1C29F6F00((uint64_t)v10, v16);
  uint64_t result = swift_endAccess();
  id v18 = *v11;
  if (v18)
  {
    unint64_t v19 = *(void *)(v2 + qword_1EBB9F138);
    swift_bridgeObjectRetain();
    id v20 = v18;
    char v21 = sub_1C29A546C((uint64_t)v20, v19);
    swift_bridgeObjectRelease();

    if ((v21 & 1) == 0) {
      return 0;
    }
    sub_1C29F612C(v16, (uint64_t)v7);
    BOOL v22 = (*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v7, 1, v14) != 1;
    sub_1C296B6C4((uint64_t)v7);
    return v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C29F71D4()
{
  uint64_t v1 = sub_1C2A9CFE8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(self, sel_currentQueue);
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = sub_1C29F61D0();
    if (!v7)
    {
      sub_1C2A9CF68();
      id v20 = v0;
      char v21 = sub_1C2A9CFC8();
      os_log_type_t v22 = sub_1C2A9E0A8();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        uint64_t aBlock = v28;
        *(_DWORD *)uint64_t v23 = 136446210;
        v27[1] = v23 + 4;
        uint64_t ObjectType = swift_getObjectType();
        sub_1C29F89F8();
        uint64_t v24 = sub_1C2A9DD58();
        uint64_t ObjectType = sub_1C2957168(v24, v25, &aBlock);
        sub_1C2A9E358();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C292A000, v21, v22, "%{public}s attempted to run with invalid configuration", v23, 0xCu);
        uint64_t v26 = v28;
        swift_arrayDestroy();
        MEMORY[0x1C87656F0](v26, -1, -1);
        MEMORY[0x1C87656F0](v23, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      swift_beginAccess();
      swift_retain();
      sub_1C2A9C9C8();
      swift_release();
      sub_1C2A9CA18();
      goto LABEL_9;
    }
    uint64_t v8 = v7;
    uint64_t v9 = (id *)&v0[qword_1EBB91D78];
    swift_beginAccess();
    if (*v9)
    {
      id v10 = objc_msgSend(*v9, sel_identifier);
      uint64_t v11 = sub_1C2A9DD28();
      id v13 = v12;

      v14._uint64_t countAndFlagsBits = 0x676E696E6E7572;
      v14._object = (void *)0xE700000000000000;
      v15._uint64_t countAndFlagsBits = v11;
      v15._object = v13;
      NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v14, v15);
      swift_bridgeObjectRelease();
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v33 = sub_1C29F8A6C;
      uint64_t v34 = v16;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      unint64_t v30 = 1107296256;
      id v31 = sub_1C296D070;
      char v32 = &block_descriptor_4;
      uint64_t v17 = _Block_copy(&aBlock);
      id v18 = self;
      swift_retain();
      id v19 = objc_msgSend(v18, sel_blockOperationWithBlock_, v17);
      _Block_release(v17);
      swift_release();
      swift_release();
      objc_msgSend(v19, sel_addDependency_, v8);
      objc_msgSend(v6, sel_addOperation_, v19);
      objc_msgSend(v6, sel_addOperation_, v8);

      uint64_t v6 = v19;
LABEL_9:

      return;
    }
    __break(1u);
  }
  uint64_t aBlock = 0;
  unint64_t v30 = 0xE000000000000000;
  sub_1C2A9E4D8();
  swift_getObjectType();
  sub_1C2A9EA58();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  sub_1C2A9DDB8();
  sub_1C2A9E628();
  __break(1u);
}

uint64_t sub_1C29F76BC(uint64_t a1)
{
  return sub_1C29F80B8(a1, 2);
}

void sub_1C29F76C4(void *a1)
{
  id v1 = a1;
  sub_1C29F71D4();
}

void sub_1C29F770C()
{
  id v1 = v0;
  v2._uint64_t countAndFlagsBits = 0x676E696E61656C63;
  v2._object = (void *)0xEB00000000707520;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v2, v3);
  if (objc_msgSend(v0, sel_isCancelled))
  {
    uint64_t v4 = sub_1C29F61D0();
    if (v4)
    {
      id v5 = v4;
      if ((objc_msgSend(v4, sel_isCancelled) & 1) == 0)
      {
        objc_msgSend(v5, sel_cancel);
        uint64_t v6 = *(void **)&v1[qword_1EBB91D70];
        *(void *)&v1[qword_1EBB91D70] = 0;
        sub_1C2944A80(v6);
      }
    }
    swift_beginAccess();
    swift_retain();
    sub_1C2A9C9C8();
    swift_release();
    v7._uint64_t countAndFlagsBits = 0x656C6C65636E6163;
    v7._object = (void *)0xE900000000000064;
    v8._uint64_t countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v7, v8);
  }
}

uint64_t sub_1C29F7834(uint64_t a1)
{
  return sub_1C29F80B8(a1, 1);
}

id SevenDayDoseOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SevenDayDoseOperation.init()()
{
}

void sub_1C29F78A0()
{
}

uint64_t sub_1C29F78D0()
{
  swift_release();

  sub_1C296B6C4(v0 + qword_1EBB9F130);
  sub_1C2944A80(*(id *)(v0 + qword_1EBB91D70));
  return swift_bridgeObjectRelease();
}

id SevenDayDoseOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SevenDayDoseOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C29F7988(uint64_t a1)
{
  swift_release();

  sub_1C296B6C4(a1 + qword_1EBB9F130);
  sub_1C2944A80(*(id *)(a1 + qword_1EBB91D70));
  return swift_bridgeObjectRelease();
}

id sub_1C29F7A14()
{
  return *(id *)(*v0 + qword_1EBB9F128);
}

void sub_1C29F7A28(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C87657D0](v1);
  if (v2)
  {
    Swift::String v3 = (void *)v2;
    MEMORY[0x1F4188790](v2);
    sub_1C2A9CA08();
  }
}

void sub_1C29F7AC4(void *a1)
{
  uint64_t v2 = sub_1C2A9CFE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  Swift::String v8 = (char *)&v34 - v7;
  uint64_t v9 = sub_1C29F61D0();
  if (!v9)
  {
LABEL_7:
    sub_1C2A9CF68();
    id v24 = a1;
    unint64_t v25 = sub_1C2A9CFC8();
    os_log_type_t v26 = sub_1C2A9E0A8();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      long long v39 = v28;
      *(_DWORD *)uint64_t v27 = 136446210;
      uint64_t ObjectType = swift_getObjectType();
      sub_1C29F89F8();
      uint64_t v37 = v2;
      uint64_t v29 = sub_1C2A9DD58();
      uint64_t ObjectType = sub_1C2957168(v29, v30, (uint64_t *)&v39);
      sub_1C2A9E358();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C292A000, v25, v26, "%{public}s attempted final result processing but base query is not finished", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v28, -1, -1);
      MEMORY[0x1C87656F0](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v37);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    swift_beginAccess();
    swift_retain();
    sub_1C2A9C9C8();
    swift_release();
    return;
  }
  id v10 = v9;
  if (!objc_msgSend(v9, sel_isFinished))
  {

    goto LABEL_7;
  }
  swift_retain();
  sub_1C2A9C9B8();
  swift_release();
  uint64_t v11 = v39;
  if (v40 == 1)
  {
    sub_1C2A9CF68();
    id v12 = a1;
    sub_1C29B9468(v11);
    id v13 = v12;
    sub_1C29B9468(v11);
    Swift::String v14 = sub_1C2A9CFC8();
    os_log_type_t v15 = sub_1C2A9E0A8();
    int v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      long long v39 = v36;
      *(_DWORD *)uint64_t v17 = 136446466;
      int v35 = v16;
      uint64_t ObjectType = swift_getObjectType();
      sub_1C29F89F8();
      uint64_t v37 = v3;
      uint64_t v18 = sub_1C2A9DD58();
      os_log_t v34 = v14;
      uint64_t ObjectType = sub_1C2957168(v18, v19, (uint64_t *)&v39);
      sub_1C2A9E358();

      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v20 = sub_1C2A9E938();
      uint64_t ObjectType = sub_1C2957168(v20, v21, (uint64_t *)&v39);
      sub_1C2A9E358();
      swift_bridgeObjectRelease();
      sub_1C296FAA4(v11);
      sub_1C296FAA4(v11);
      os_log_t v22 = v34;
      _os_log_impl(&dword_1C292A000, v34, (os_log_type_t)v35, "%{public}s base query result failed with error: %{public}s", (uint8_t *)v17, 0x16u);
      uint64_t v23 = v36;
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v23, -1, -1);
      MEMORY[0x1C87656F0](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v2);
    }
    else
    {

      sub_1C296FAA4(v11);
      sub_1C296FAA4(v11);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
    uint64_t v31 = swift_beginAccess();
    MEMORY[0x1F4188790](v31);
    *(&v34 - 2) = v11;
    swift_retain();
    sub_1C2A9C9C8();
    swift_release();
    sub_1C296FAA4(v11);
  }
  else
  {
    sub_1C29F8114(v39);
    sub_1C296FAA4(v11);
  }
  v32._uint64_t countAndFlagsBits = 0x64656873696E6966;
  v32._object = (void *)0xE800000000000000;
  v33._uint64_t countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v32, v33);
}

uint64_t sub_1C29F80B0(uint64_t a1)
{
  return sub_1C29F80B8(a1, 3);
}

uint64_t sub_1C29F80B8(uint64_t a1, char a2)
{
  sub_1C2962A14(*(id *)a1, *(unsigned char *)(a1 + 8));
  sub_1C29F6A84();
  uint64_t result = swift_allocError();
  *id v5 = a2;
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = 1;
  return result;
}

uint64_t sub_1C29F8114(void *a1)
{
  id v43 = a1;
  uint64_t v2 = sub_1C2A9C6E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29F9238(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  Swift::String v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v37 - v10;
  uint64_t v12 = swift_allocObject();
  uint64_t v44 = v12;
  *(void *)(v12 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v42 = v12 + 16;
  uint64_t v38 = v1;
  uint64_t v13 = v1 + qword_1EBB9F130;
  swift_beginAccess();
  sub_1C29F612C(v13, (uint64_t)v11);
  uint64_t v14 = sub_1C2A9C398();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t result = v45(v11, 1, v14);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_18;
  }
  sub_1C2A9C378();
  uint64_t v39 = sub_1C2A9C658();
  uint64_t v17 = v3 + 8;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v41 = v2;
  uint64_t v40 = v17;
  v18(v5, v2);
  unint64_t v19 = *(void (**)(char *, uint64_t))(v15 + 8);
  v19(v11, v14);
  sub_1C29F612C(v13, (uint64_t)v8);
  uint64_t result = v45(v8, 1, v14);
  if (result == 1)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  sub_1C2A9C348();
  uint64_t v20 = (void *)sub_1C2A9C658();
  v18(v5, v41);
  v19(v8, v14);
  uint64_t v21 = v44;
  aBlock[4] = sub_1C29F91E4;
  aBlock[5] = v44;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C29F8984;
  aBlock[3] = &block_descriptor_16_0;
  os_log_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v23 = (void *)v39;
  objc_msgSend(v43, sel_enumerateStatisticsFromDate_toDate_withBlock_, v39, v20, v22);
  _Block_release(v22);

  swift_beginAccess();
  uint64_t v24 = *(void *)(v21 + 16);
  uint64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    swift_bridgeObjectRetain();
    os_log_type_t v26 = sub_1C299C988(0, 1, 1, MEMORY[0x1E4FBC860]);
    uint64_t v27 = *(void *)(v24 + 32);
    double v28 = *(double *)(v24 + 40);
    unint64_t v30 = v26[2];
    unint64_t v29 = v26[3];
    int64_t v31 = v30 + 1;
    if (v30 >= v29 >> 1) {
      goto LABEL_16;
    }
    while (1)
    {
      v26[2] = v31;
      unint64_t v29 = (unint64_t)&v26[2 * v30];
      *(void *)(v29 + 32) = v27;
      *(double *)(v29 + 40) = v28 + 0.0;
      if (!--v25) {
        break;
      }
      unint64_t v30 = 0;
      unint64_t v33 = 0;
      while (1)
      {
        unint64_t v34 = v26[2];
        if (v33 >= v34) {
          break;
        }
        uint64_t v27 = *(void *)(v24 + v30 + 48);
        double v28 = *(double *)(v24 + v30 + 56);
        double v35 = *(double *)((char *)v26 + v30 + 40);
        unint64_t v36 = v26[3];
        int64_t v31 = v34 + 1;
        if (v34 >= v36 >> 1) {
          os_log_type_t v26 = sub_1C299C988((void *)(v36 > 1), v34 + 1, 1, v26);
        }
        v26[2] = v31;
        unint64_t v29 = (unint64_t)&v26[2 * v34];
        *(void *)(v29 + 32) = v27;
        *(double *)(v29 + 40) = v28 + v35;
        ++v33;
        v30 += 16;
        if (v25 == v33) {
          goto LABEL_6;
        }
      }
      __break(1u);
LABEL_16:
      os_log_type_t v26 = sub_1C299C988((void *)(v29 > 1), v31, 1, v26);
    }
LABEL_6:
    swift_bridgeObjectRelease();
  }
  else
  {
    os_log_type_t v26 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v32 = swift_beginAccess();
  MEMORY[0x1F4188790](v32);
  *(&v37 - 2) = (uint64_t)v26;
  swift_retain();
  sub_1C2A9C9C8();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1C29F867C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C2A9C6E8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  Swift::String v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)(a3 + 16);
  id v10 = sub_1C29F8844(7);
  char v12 = v11;
  id v13 = objc_msgSend(a1, sel_startDate);
  sub_1C2A9C6A8();

  sub_1C2A9C5F8();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_beginAccess();
  int v16 = *(void **)(a3 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a3 + 16) = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    int v16 = sub_1C299C988(0, v16[2] + 1, 1, v16);
    *uint64_t v9 = v16;
  }
  unint64_t v19 = v16[2];
  unint64_t v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    int v16 = sub_1C299C988((void *)(v18 > 1), v19 + 1, 1, v16);
    *uint64_t v9 = v16;
  }
  double v20 = *(double *)&v10;
  if (v12) {
    double v20 = 0.0;
  }
  void v16[2] = v19 + 1;
  uint64_t v21 = (double *)&v16[2 * v19];
  *((void *)v21 + 4) = v15;
  v21[5] = v20;
  return swift_endAccess();
}

id sub_1C29F8844(uint64_t a1)
{
  id result = objc_msgSend(v1, sel_averageQuantity);
  if (*(double *)&result != 0.0)
  {
    uint64_t v4 = result;
    uint64_t v5 = self;
    id v6 = objc_msgSend(v5, sel_decibelAWeightedSoundPressureLevelUnit);
    objc_msgSend(v4, sel_doubleValueForUnit_, v6);
    double v8 = v7;

    id result = objc_msgSend(v1, sel_duration);
    if (*(double *)&result != 0.0)
    {
      uint64_t v9 = result;
      id v10 = objc_msgSend(v5, sel_secondUnit);
      objc_msgSend(v9, sel_doubleValueForUnit_, v10);
      double v12 = v11;

      objc_msgSend(self, sel_maximumDurationInSecondsForLEQ_days_, a1, v8);
      if (v13 <= COERCE_DOUBLE(1)) {
        *(double *)&id result = 0.0;
      }
      else {
        *(double *)&id result = v12 / v13;
      }
    }
  }
  return result;
}

void sub_1C29F8984(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

unint64_t sub_1C29F89F8()
{
  unint64_t result = qword_1EA31E9E8;
  if (!qword_1EA31E9E8)
  {
    type metadata accessor for SevenDayDoseOperation();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA31E9E8);
  }
  return result;
}

uint64_t sub_1C29F8A34()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C29F8A6C()
{
  sub_1C29F7A28(v0);
}

unint64_t sub_1C29F8A78()
{
  unint64_t result = qword_1EA31E9F0;
  if (!qword_1EA31E9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31E9F0);
  }
  return result;
}

uint64_t sub_1C29F8ACC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + qword_1EBB91D88);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

id sub_1C29F8B28@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + qword_1EBB91D78);
  swift_beginAccess();
  id v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1C29F8B90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + qword_1EBB9F130;
  swift_beginAccess();
  return sub_1C29F612C(v3, a2);
}

char *sub_1C29F8BEC@<X0>(char **a1@<X8>)
{
  unint64_t result = sub_1C29F61D0();
  *a1 = result;
  return result;
}

void sub_1C29F8C18(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(*a2 + qword_1EBB91D70);
  *(void *)(*a2 + qword_1EBB91D70) = *a1;
  id v4 = v2;
  sub_1C2944A80(v3);
}

unsigned char *storeEnumTagSinglePayload for SevenDayDoseOperationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C29F8D30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SevenDayDoseOperationError()
{
  return &type metadata for SevenDayDoseOperationError;
}

void sub_1C29F8D68()
{
  sub_1C29F9238(319, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t method lookup function for SevenDayDoseOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SevenDayDoseOperation);
}

uint64_t dispatch thunk of SevenDayDoseOperation.result.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SevenDayDoseOperation + (*MEMORY[0x1E4FBC8C8] & *v0) + 64))();
}

uint64_t dispatch thunk of SevenDayDoseOperation.quantityType.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SevenDayDoseOperation + (*MEMORY[0x1E4FBC8C8] & *v0) + 88))();
}

uint64_t dispatch thunk of SevenDayDoseOperation.dateInterval.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SevenDayDoseOperation + (*MEMORY[0x1E4FBC8C8] & *v0) + 112))();
}

uint64_t dispatch thunk of SevenDayDoseOperation.baseDoseQuery.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SevenDayDoseOperation + (*MEMORY[0x1E4FBC8C8] & *v0) + 136))();
}

uint64_t dispatch thunk of SevenDayDoseOperation.baseDoseQuery.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SevenDayDoseOperation + (*MEMORY[0x1E4FBC8C8] & *v0) + 144))();
}

uint64_t dispatch thunk of SevenDayDoseOperation.baseDoseQuery.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SevenDayDoseOperation + (*MEMORY[0x1E4FBC8C8] & *v0) + 152))();
}

uint64_t dispatch thunk of SevenDayDoseOperation.__allocating_init(healthStore:name:environment:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(class metadata base offset for SevenDayDoseOperation
                                                                      + v4
                                                                      + 160))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of SevenDayDoseOperation.configure(quantityType:targetDate:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SevenDayDoseOperation + (*MEMORY[0x1E4FBC8C8] & *v0) + 168))();
}

uint64_t dispatch thunk of SevenDayDoseOperation.configure(quantityType:dateInterval:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SevenDayDoseOperation + (*MEMORY[0x1E4FBC8C8] & *v0) + 176))();
}

uint64_t sub_1C29F913C()
{
  return type metadata accessor for SevenDayDoseOperation();
}

ValueMetadata *type metadata accessor for SevenDayDoseOperation.DoseData()
{
  return &type metadata for SevenDayDoseOperation.DoseData;
}

void sub_1C29F9154()
{
  sub_1C29F7AC4(*(void **)(v0 + 16));
}

id sub_1C29F915C(uint64_t a1)
{
  int v3 = *(void **)(v1 + 16);
  sub_1C2962A14(*(id *)a1, *(unsigned char *)(a1 + 8));
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = 1;
  return v3;
}

uint64_t sub_1C29F91AC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C29F91E4(void *a1, uint64_t a2)
{
  return sub_1C29F867C(a1, a2, v2);
}

uint64_t sub_1C29F91EC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1C2962A14(*(id *)a1, *(unsigned char *)(a1 + 8));
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = 0;
  return swift_bridgeObjectRetain();
}

void sub_1C29F9238(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id static SharedDiagrams.SevenDayDose.diagramData(contentPoints:referenceLinePositions:valueFormatter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v59 = *a3;
  int v58 = *((unsigned __int8 *)a3 + 8);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v61 = MEMORY[0x1E4FBC860];
    sub_1C293EA94(0, v6, 0);
    uint64_t v7 = v61;
    uint64_t v9 = (long long *)(a1 + 32);
    unint64_t v10 = *(void *)(v61 + 16);
    do
    {
      long long v11 = *v9;
      unint64_t v12 = *(void *)(v61 + 24);
      unint64_t v13 = v10 + 1;
      if (v10 >= v12 >> 1)
      {
        long long v60 = *v9;
        sub_1C293EA94(v12 > 1, v10 + 1, 1);
        long long v11 = v60;
      }
      *(void *)(v61 + 16) = v13;
      *(_OWORD *)(v61 + 16 * v10 + 32) = v11;
      ++v9;
      ++v10;
      --v6;
    }
    while (v6);
  }
  else
  {
    unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v13)
    {
      uint64_t v49 = MEMORY[0x1E4FBC860];
      id result = (id)swift_bridgeObjectRelease();
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      *(unsigned char *)(a4 + 32) = 1;
LABEL_28:
      *(void *)(a4 + 40) = v49;
      return result;
    }
  }
  CGFloat v14 = *(double *)(v7 + 32);
  uint64_t v15 = v7 + 32 + 16 * v13;
  uint64_t v17 = *(void *)(v15 - 16);
  uint64_t v16 = *(void *)(v15 - 8);
  sub_1C29F9920(0, &qword_1EBB921E8, (void (*)(uint64_t))sub_1C29F98B8);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2AA8230;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = v7;
  *(_OWORD *)(inited + 48) = 0u;
  *(_OWORD *)(inited + 64) = 0u;
  *(unsigned char *)(inited + 80) = 1;
  *(void *)(inited + 88) = v7;
  *(_OWORD *)(inited + 96) = 0u;
  *(_OWORD *)(inited + 112) = 0u;
  swift_bridgeObjectRetain_n();
  unint64_t v52 = sub_1C2A7BEE8(inited);
  sub_1C29F9920(0, &qword_1EBB92478, type metadata accessor for CGPoint);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C2AA6B00;
  uint64_t v57 = v17;
  *(void *)(v19 + 32) = v17;
  *(void *)(v19 + 40) = v16;
  uint64_t v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C2AA6B00;
  *(unsigned char *)(v20 + 32) = 1;
  *(void *)(v20 + 40) = v19;
  *(_OWORD *)(v20 + 48) = 0u;
  *(_OWORD *)(v20 + 64) = 0u;
  unint64_t v21 = sub_1C2A7BEE8(v20);
  CGFloat x = *(double *)(v7 + 32);
  swift_bridgeObjectRetain();
  uint64_t v23 = (CGFloat *)(v7 + 40);
  CGFloat y = 0.0;
  CGFloat width = 0.0;
  CGFloat height = 0.0;
  do
  {
    v71.origin.CGFloat x = *(v23 - 1);
    v71.origin.CGFloat y = *v23;
    v71.size.CGFloat width = 0.0;
    v71.size.CGFloat height = 0.0;
    v64.origin.CGFloat x = x;
    v64.origin.CGFloat y = y;
    v64.size.CGFloat width = width;
    v64.size.CGFloat height = height;
    CGRect v65 = CGRectUnion(v64, v71);
    CGFloat x = v65.origin.x;
    CGFloat y = v65.origin.y;
    CGFloat width = v65.size.width;
    CGFloat height = v65.size.height;
    v23 += 2;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease_n();
  int64_t v27 = *(void *)(a2 + 16);
  uint64_t v28 = MEMORY[0x1E4FBC860];
  if (!v27)
  {
    unint64_t v47 = v52;
LABEL_27:
    sub_1C29F9920(0, &qword_1EBB921F8, (void (*)(uint64_t))sub_1C2943230);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1C2AA8230;
    *(void *)(v48 + 32) = v47;
    *(void *)(v48 + 40) = v21;
    uint64_t v63 = v48;
    id result = (id)sub_1C29A764C(v28);
    uint64_t v49 = v63;
    *(CGFloat *)a4 = x;
    *(CGFloat *)(a4 + 8) = y;
    *(CGFloat *)(a4 + 16) = width;
    *(CGFloat *)(a4 + 24) = height;
    *(unsigned char *)(a4 + 32) = 0;
    goto LABEL_28;
  }
  unint64_t v50 = v21;
  uint64_t v51 = a4;
  uint64_t v62 = MEMORY[0x1E4FBC860];
  sub_1C2978A6C(0, v27, 0);
  uint64_t v28 = v62;
  unint64_t v29 = (CGFloat *)(a2 + 32);
  CGFloat v55 = *(double *)(MEMORY[0x1E4F1DB20] + 8);
  CGFloat v56 = *MEMORY[0x1E4F1DB20];
  CGFloat v53 = *(double *)(MEMORY[0x1E4F1DB20] + 24);
  CGFloat v54 = *(double *)(MEMORY[0x1E4F1DB20] + 16);
  while (1)
  {
    CGFloat v30 = *v29;
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C2AA8230;
    *(CGFloat *)(v31 + 32) = v14;
    *(CGFloat *)(v31 + 40) = v30;
    *(void *)(v31 + 48) = v57;
    *(CGFloat *)(v31 + 56) = v30;
    swift_bridgeObjectRetain();
    v72.size.CGFloat width = 0.0;
    v72.size.CGFloat height = 0.0;
    v66.origin.CGFloat y = v55;
    v66.origin.CGFloat x = v56;
    v66.size.CGFloat height = v53;
    v66.size.CGFloat width = v54;
    v72.origin.CGFloat x = v14;
    v72.origin.CGFloat y = v30;
    CGRect v67 = CGRectUnion(v66, v72);
    v73.origin.CGFloat x = *(CGFloat *)(v31 + 48);
    v73.origin.CGFloat y = *(CGFloat *)(v31 + 56);
    v73.size.CGFloat width = 0.0;
    v73.size.CGFloat height = 0.0;
    CGRect v68 = CGRectUnion(v67, v73);
    CGFloat v32 = v68.origin.y;
    CGFloat v33 = v68.size.height;
    swift_bridgeObjectRelease();
    v69.origin.CGFloat x = x;
    v69.origin.CGFloat y = y;
    v69.size.CGFloat width = width;
    v69.size.CGFloat height = height;
    v74.origin.CGFloat x = x;
    v74.origin.CGFloat y = v32;
    v74.size.CGFloat width = width;
    v74.size.CGFloat height = v33;
    CGRect v70 = CGRectUnion(v69, v74);
    CGFloat x = v70.origin.x;
    CGFloat y = v70.origin.y;
    CGFloat width = v70.size.width;
    CGFloat height = v70.size.height;
    uint64_t v34 = swift_initStackObject();
    *(_OWORD *)(v34 + 16) = xmmword_1C2AA6B00;
    *(unsigned char *)(v34 + 32) = 2;
    double v35 = (void *)sub_1C2A9C8D8();
    if (!v58)
    {
      id result = (id)HKNumberFormatterWithDecimalPrecision();
      if (!result) {
        goto LABEL_21;
      }
      goto LABEL_18;
    }
    if (v59)
    {
      id v36 = objc_msgSend(self, sel_hk_percentNumberFormatter);
      id v37 = objc_msgSend(v36, sel_stringFromNumber_, v35);
      goto LABEL_19;
    }
    id result = (id)HKIntegerFormatter();
    if (!result) {
      break;
    }
LABEL_18:
    id v36 = result;
    id v37 = objc_msgSend(result, sel_stringFromNumber_, v35);
LABEL_19:
    id v39 = v37;

    if (!v39)
    {
LABEL_21:

      uint64_t v40 = sub_1C2A9DF18();
      uint64_t v42 = v43;
      goto LABEL_22;
    }
    uint64_t v40 = sub_1C2A9DD28();
    uint64_t v42 = v41;

LABEL_22:
    *(void *)(v34 + 40) = v31;
    *(void *)(v34 + 48) = v40;
    *(void *)(v34 + 64) = 0;
    *(void *)(v34 + 72) = 0;
    *(void *)(v34 + 56) = v42;
    unint64_t v44 = sub_1C2A7BEE8(v34);
    unint64_t v46 = *(void *)(v62 + 16);
    unint64_t v45 = *(void *)(v62 + 24);
    if (v46 >= v45 >> 1) {
      sub_1C2978A6C(v45 > 1, v46 + 1, 1);
    }
    *(void *)(v62 + 16) = v46 + 1;
    *(void *)(v62 + 8 * v46 + 32) = v44;
    ++v29;
    if (!--v27)
    {
      a4 = v51;
      unint64_t v47 = v52;
      unint64_t v21 = v50;
      goto LABEL_27;
    }
  }
  __break(1u);
  return result;
}

double static SharedDiagrams.SevenDayDose.highlightLineDiagramConfig()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = &unk_1F1DEA5D8;
  *(_OWORD *)(a1 + 8) = xmmword_1C2AABF10;
  *(_OWORD *)(a1 + 24) = xmmword_1C2AABF20;
  double result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(unsigned char *)(a1 + 88) = 64;
  return result;
}

double static SharedDiagrams.SevenDayDose.alertLineDiagramConfig()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = &unk_1F1DEA638;
  *(_OWORD *)(a1 + 8) = xmmword_1C2AABF30;
  *(_OWORD *)(a1 + 24) = xmmword_1C2AABF20;
  double result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(unsigned char *)(a1 + 88) = 64;
  return result;
}

void sub_1C29F98B8()
{
  if (!qword_1EBB91C80)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB91C80);
    }
  }
}

void sub_1C29F9920(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2A9E8A8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for SharedDiagrams.SevenDayDose()
{
  return &type metadata for SharedDiagrams.SevenDayDose;
}

uint64_t sub_1C29F9984()
{
  swift_retain();
  sub_1C2A9C9B8();
  swift_release();
  return v1;
}

uint64_t sub_1C29F99D4(void *a1, uint64_t a2, char a3)
{
  char v5 = a3 & 1;
  swift_retain();
  sub_1C2A9C9C8();
  sub_1C29FB540(a1, a2, v5);
  return swift_release();
}

id sub_1C29F9A5C(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  sub_1C29FB540(*(id *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(unsigned char *)(a1 + 16) = a4 & 1;
  return sub_1C29FB30C(a2, a3, a4 & 1);
}

id sub_1C29F9AC4()
{
  uint64_t v1 = qword_1EA31EA18;
  uint64_t v2 = *(void **)((char *)v0 + qword_1EA31EA18);
  if (v2)
  {
    id v3 = *(id *)((char *)v0 + qword_1EA31EA18);
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    id v5 = sub_1C29F9B34(v0, ObjectType);
    int64_t v6 = *(void **)((char *)v0 + v1);
    *(void *)((char *)v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C29F9B34(void *a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v30 = *MEMORY[0x1E4FBC8C8] & *a1;
  uint64_t v3 = sub_1C2A9CF58();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  int64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v26 - v8;
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EBB91C60;
  long long v11 = a1;
  sub_1C2A9CF48();
  unint64_t v12 = sub_1C29FB318();
  id v27 = *(id *)((char *)v11 + qword_1EA31EA20);
  unint64_t v28 = v12;
  unint64_t v13 = *(void **)((char *)v11 + qword_1EA31EA30);
  uint64_t v14 = *(void *)((char *)v11 + qword_1EA31EA38);
  uint64_t v15 = swift_allocObject();
  unint64_t v29 = v9;
  uint64_t v16 = v15;
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v18 = v3;
  unint64_t v19 = (v5 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = *(void *)(v30 + class metadata base offset for CountComparisonQueryOperation);
  *(void *)(v20 + 24) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v20 + v17, v6, v18);
  *(void *)(v20 + v19) = v31;
  swift_bridgeObjectRetain();
  id v21 = v27;
  id v22 = v13;
  id v23 = sub_1C29FB740(v21, v13, 0, v14, (uint64_t)sub_1C29FB468, v20);
  id v24 = objc_msgSend(v11, sel_name);
  objc_msgSend(v23, sel_setDebugIdentifier_, v24);

  objc_msgSend(v23, sel_setQualityOfService_, *(void *)((char *)v11 + qword_1EA31EA40));
  (*(void (**)(char *, uint64_t))(v4 + 8))(v29, v18);
  return v23;
}

void sub_1C29F9E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1C87657D0](v4);
  if (v5)
  {
    int64_t v6 = (void *)v5;
    MEMORY[0x1F4188790](v5);
    sub_1C2A9CA08();
  }
}

uint64_t sub_1C29F9F18(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1)
  {
    uint64_t v5 = (void *)sub_1C29FAA30(a1);
    uint64_t v7 = v6;
  }
  else
  {
    id v9 = (id)a3;
    uint64_t v28 = sub_1C2A9EA58();
    uint64_t v29 = v10;
    sub_1C2A9DDB8();
    id v11 = objc_msgSend(*(id *)(a2 + qword_1EA31EA48), sel_profileIdentifier);
    id v12 = objc_msgSend(v11, sel_description);
    sub_1C2A9DD28();

    sub_1C2A9DDB8();
    swift_bridgeObjectRelease();
    sub_1C2A9DDB8();
    uint64_t v13 = v29;
    if (a3)
    {
      uint64_t v14 = v28;
      unint64_t v15 = a3 | 0x8000000000000000;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = 0;
      uint64_t v13 = 0;
      unint64_t v15 = 0xC000000000000000;
    }
    sub_1C296291C();
    uint64_t v16 = (void *)swift_allocError();
    *unint64_t v17 = v14;
    v17[1] = v13;
    v17[2] = v15;
    swift_getErrorValue();
    sub_1C2962970(v14, v13, v15);
    v18._uint64_t countAndFlagsBits = sub_1C2A9E938();
    v19._uint64_t countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    NSOperation.logErrorString(_:withInfo:)(v18, v19);
    swift_bridgeObjectRelease();

    uint64_t v5 = (void *)swift_allocError();
    uint64_t v7 = 0;
    *uint64_t v20 = v14;
    v20[1] = v13;
    v20[2] = v15;
  }
  sub_1C2A9E1A8();
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  char v21 = a1 == 0;
  sub_1C2A9CF38();
  sub_1C29FB30C(v5, v7, v21);
  sub_1C29F99D4(v5, v7, v21);
  sub_1C2A9E4D8();
  id v22 = objc_msgSend(*(id *)(a2 + qword_1EA31EA20), sel_identifier);
  sub_1C2A9DD28();

  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  sub_1C2A9DDB8();
  id v23 = objc_msgSend(*(id *)(a2 + qword_1EA31EA48), sel_profileIdentifier);
  id v24 = objc_msgSend(v23, sel_description);
  sub_1C2A9DD28();

  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  sub_1C2A9DDB8();
  sub_1C29FB00C();
  sub_1C2A9E8C8();
  sub_1C2A9DDB8();
  sub_1C2A9E5C8();
  v25._uint64_t countAndFlagsBits = 0;
  v26._uint64_t countAndFlagsBits = 0x64656873696E6966;
  v26._object = (void *)0xE800000000000000;
  v25._object = (void *)0xE000000000000000;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v26, v25);
  sub_1C29FB540(v5, v7, v21);
  return swift_bridgeObjectRelease();
}

id CountComparisonQueryOperation.__allocating_init(sampleType:configuration:predicate:sortDescriptors:name:queryQualityOfService:healthStore:)(void *a1, uint64_t *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  id v17 = objc_allocWithZone(v8);
  return CountComparisonQueryOperation.init(sampleType:configuration:predicate:sortDescriptors:name:queryQualityOfService:healthStore:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

id CountComparisonQueryOperation.init(sampleType:configuration:predicate:sortDescriptors:name:queryQualityOfService:healthStore:)(void *a1, uint64_t *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v12 = *a2;
  char v13 = *((unsigned char *)a2 + 8);
  uint64_t v27 = a2[2];
  char v14 = *((unsigned char *)a2 + 24);
  uint64_t v15 = qword_1EA31E9F8;
  sub_1C2962438();
  uint64_t v16 = swift_allocError();
  *id v17 = 0;
  uint64_t v32 = v16;
  uint64_t v33 = 0;
  char v34 = 1;
  sub_1C29FAFB4();
  swift_allocObject();
  Swift::String v18 = v8;
  *(void *)&v8[v15] = sub_1C2A9C9F8();
  *(void *)&v18[qword_1EA31EA18] = 0;
  *(void *)&v18[qword_1EA31EA20] = a1;
  Swift::String v19 = &v18[qword_1EA31EA28];
  *(void *)Swift::String v19 = v12;
  v19[8] = v13;
  *((void *)v19 + 2) = v27;
  v19[24] = v14;
  *(void *)&v18[qword_1EA31EA30] = a3;
  *(void *)&v18[qword_1EA31EA38] = a4;
  *(void *)&v18[qword_1EA31EA40] = a7;
  *(void *)&v18[qword_1EA31EA48] = a8;
  id v20 = a3;
  id v21 = a1;
  id v22 = a8;

  v31.receiver = v18;
  v31.super_class = (Class)type metadata accessor for CountComparisonQueryOperation();
  id v23 = objc_msgSendSuper2(&v31, sel_init);
  id v24 = v23;
  if (a6)
  {
    Swift::String v25 = (void *)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    Swift::String v25 = 0;
  }
  objc_msgSend(v23, sel_setName_, v25);

  return v23;
}

uint64_t sub_1C29FA638()
{
  uint64_t v1 = sub_1C2A9CF58();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2962438();
  uint64_t v5 = (void *)swift_allocError();
  unsigned char *v6 = 2;
  sub_1C29F99D4(v5, 0, 1);
  uint64_t v7 = *(void **)&v0[qword_1EA31EA20];
  id v8 = objc_msgSend(v7, sel_identifier);
  uint64_t v9 = sub_1C2A9DD28();
  id v11 = v10;

  v12._uint64_t countAndFlagsBits = 0x676E696E6E7572;
  v12._object = (void *)0xE700000000000000;
  v13._uint64_t countAndFlagsBits = v9;
  v13._object = v11;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v12, v13);
  swift_bridgeObjectRelease();
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  id v14 = (id)qword_1EBB91C60;
  uint64_t v15 = v0;
  sub_1C2A9CF48();
  sub_1C2A9E1B8();
  sub_1C29624A4();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C2AA6B00;
  id v17 = objc_msgSend(v7, sel_identifier);
  uint64_t v18 = sub_1C2A9DD28();
  uint64_t v20 = v19;

  *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v16 + 64) = sub_1C296250C();
  *(void *)(v16 + 32) = v18;
  *(void *)(v16 + 40) = v20;
  sub_1C2A9CF28();
  swift_bridgeObjectRelease();
  id v21 = *(void **)&v15[qword_1EA31EA48];
  id v22 = sub_1C29F9AC4();
  objc_msgSend(v21, sel_executeQuery_, v22);

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1C29FA8DC(void *a1)
{
  id v1 = a1;
  sub_1C29FA638();
}

void sub_1C29FA924()
{
  if (objc_msgSend(v0, sel_isCancelled))
  {
    sub_1C2962438();
    id v1 = (void *)swift_allocError();
    *uint64_t v2 = 3;
    sub_1C29F99D4(v1, 0, 1);
    id v3 = objc_msgSend(*(id *)&v0[qword_1EA31EA20], sel_identifier);
    uint64_t v4 = sub_1C2A9DD28();
    uint64_t v6 = v5;

    v7._uint64_t countAndFlagsBits = 0x656C6C65636E6163;
    v7._object = (void *)0xE900000000000064;
    v8._uint64_t countAndFlagsBits = v4;
    v8._object = v6;
    NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v7, v8);
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = *(void **)&v0[qword_1EA31EA48];
  id v10 = sub_1C29F9AC4();
  objc_msgSend(v9, sel_stopQuery_, v10);
}

uint64_t sub_1C29FAA30(unint64_t a1)
{
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  if (!(a1 >> 62))
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2A9E648();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1C8764390](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      Swift::String v7 = v6;
      ++v5;
      id v8 = v6;
      sub_1C29FAB3C(&v8, v1, &v10, &v9);
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t sub_1C29FAB3C(id *a1, uint64_t a2, void *a3, void *a4)
{
  Swift::String v26 = a4;
  uint64_t v27 = a3;
  uint64_t v6 = sub_1C2A9C6E8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v11 = MEMORY[0x1F4188790](v10).n128_u64[0];
  Swift::String v13 = (char *)&v25 - v12;
  id v14 = *a1;
  id v15 = objc_msgSend(*a1, sel_endDate, v11);
  sub_1C2A9C6A8();

  sub_1C2A9C5F8();
  double v17 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v13, v6);
  id v19 = objc_msgSend(v14, sel_startDate);
  sub_1C2A9C6A8();

  sub_1C2A9C5F8();
  double v21 = v20;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v18)(v9, v6);
  double v23 = v17 - v21;
  if (v17 - v21 >= 0.0)
  {
    uint64_t v24 = a2 + qword_1EA31EA28;
    if ((*(unsigned char *)(a2 + qword_1EA31EA28 + 8) & 1) != 0 || *(double *)v24 <= v23)
    {
      if (__OFADD__(*v27, 1))
      {
        __break(1u);
        goto LABEL_12;
      }
      ++*v27;
    }
    if ((*(unsigned char *)(v24 + 24) & 1) != 0 || *(double *)(v24 + 16) <= v23)
    {
      if (!__OFADD__(*v26, 1))
      {
        ++*v26;
        return result;
      }
LABEL_12:
      __break(1u);
    }
  }
  return result;
}

id CountComparisonQueryOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CountComparisonQueryOperation.init()()
{
}

void sub_1C29FADB8()
{
}

void sub_1C29FADFC()
{
  swift_release();

  swift_bridgeObjectRelease();
  id v1 = *(void **)(v0 + qword_1EA31EA18);
}

id CountComparisonQueryOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CountComparisonQueryOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C29FAEF4(uint64_t a1)
{
  swift_release();

  swift_bridgeObjectRelease();
  objc_super v2 = *(void **)(a1 + qword_1EA31EA18);
}

uint64_t sub_1C29FAF80@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1C29F9984();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  return result;
}

void sub_1C29FAFB4()
{
  if (!qword_1EA31EA00)
  {
    sub_1C29FB00C();
    unint64_t v0 = sub_1C2A9C9D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31EA00);
    }
  }
}

void sub_1C29FB00C()
{
  if (!qword_1EA31EA08)
  {
    sub_1C29FB08C();
    sub_1C29415E4(255, (unint64_t *)&qword_1EBB92210);
    unint64_t v0 = sub_1C2A9E9F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31EA08);
    }
  }
}

void sub_1C29FB08C()
{
  if (!qword_1EA31EA10)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA31EA10);
    }
  }
}

uint64_t type metadata accessor for CountComparisonQueryOperation()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C29FB10C()
{
}

uint64_t sub_1C29FB13C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1C29F9984();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_1C29FB170(uint64_t a1)
{
  id v1 = *(id *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  sub_1C29FB30C(*(id *)a1, v2, v3);
  return sub_1C29F99D4(v1, v2, v3);
}

uint64_t sub_1C29FB1C0()
{
  return 8;
}

void *sub_1C29FB1CC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C29FB1D8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for CountComparisonQueryOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CountComparisonQueryOperation);
}

uint64_t dispatch thunk of CountComparisonQueryOperation.result.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for CountComparisonQueryOperation
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 96))();
}

uint64_t dispatch thunk of CountComparisonQueryOperation.__allocating_init(sampleType:configuration:predicate:sortDescriptors:name:queryQualityOfService:healthStore:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for CountComparisonQueryOperation + v0 + 144))();
}

id sub_1C29FB30C(id result, uint64_t a2, char a3)
{
  if (a3) {
    return result;
  }
  return result;
}

unint64_t sub_1C29FB318()
{
  unint64_t result = qword_1EBB8FF98;
  if (!qword_1EBB8FF98)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB8FF98);
  }
  return result;
}

uint64_t sub_1C29FB358()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C29FB390()
{
  uint64_t v1 = sub_1C2A9CF58();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1C29FB468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2A9CF58();
  uint64_t v7 = *(void *)(v3 + 24);
  sub_1C29F9E50(a1, a2, a3, v7);
}

uint64_t sub_1C29FB530()
{
  return sub_1C29F9F18(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

void sub_1C29FB540(id a1, uint64_t a2, char a3)
{
  if (a3) {
}
  }

id sub_1C29FB54C(uint64_t a1)
{
  return sub_1C29F9A5C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_1C29FB558(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1C2A9E588();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1C8764390](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1C2A9E568();
        sub_1C2A9E598();
        sub_1C2A9E5A8();
        sub_1C2A9E578();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        uint64_t v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_1C2A9E568();
        sub_1C2A9E598();
        sub_1C2A9E5A8();
        sub_1C2A9E578();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1C2A9E648();
    swift_bridgeObjectRelease();
    sub_1C2A9E588();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2A9E648();
    swift_bridgeObjectRelease();
  }
  return v12;
}

id sub_1C29FB740(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a4)
  {
    sub_1C29376D4(0, &qword_1EBB92118);
    double v11 = (void *)sub_1C2A9DE88();
    swift_bridgeObjectRelease();
  }
  else
  {
    double v11 = 0;
  }
  id v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v16[4] = a5;
  v16[5] = a6;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  void v16[2] = sub_1C29FD8B4;
  v16[3] = &block_descriptor_12;
  Swift::String v13 = _Block_copy(v16);
  id v14 = objc_msgSend(v12, sel_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_, a1, a2, a3, v11, v13);

  _Block_release(v13);
  swift_release();
  return v14;
}

uint64_t sub_1C29FB880@<X0>(uint64_t a1@<X8>)
{
  swift_retain();
  sub_1C2A9C9B8();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_1C29FB8E0(uint64_t a1)
{
  id v1 = *(id *)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  sub_1C296276C(*(id *)a1, v3);
  swift_retain();
  sub_1C2A9C9C8();
  sub_1C2962A14(v1, v3);
  return swift_release();
}

uint64_t sub_1C29FB970()
{
  swift_retain();
  sub_1C2A9C9B8();
  swift_release();
  return v1;
}

id sub_1C29FB9C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C2A9C6E8();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = MEMORY[0x1F4188790](v2).n128_u64[0];
  uint64_t v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)&v1[qword_1EBB8F718];
  id v8 = objc_msgSend(v7, sel_identifier, v4);
  if (!v8)
  {
    sub_1C2A9DD28();
    id v8 = (id)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = sub_1C2A9DD28();
  uint64_t v11 = v10;
  if (v9 == sub_1C2A9DD28() && v11 == v12) {
    goto LABEL_14;
  }
  char v14 = sub_1C2A9E8D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14) {
    goto LABEL_15;
  }
  uint64_t v15 = sub_1C2A9DD28();
  uint64_t v17 = v16;
  if (v15 == sub_1C2A9DD28() && v17 == v18)
  {
LABEL_14:
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v20 = sub_1C2A9E8D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
  {
    sub_1C29376D4(0, (unint64_t *)&qword_1EBB8E090);
    sub_1C29624A4();
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C2AA8230;
    uint64_t v22 = sub_1C2A9DD28();
    uint64_t v24 = v23;
    *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v21 + 64) = sub_1C296250C();
    *(void *)(v21 + 32) = v22;
    *(void *)(v21 + 40) = v24;
    sub_1C2A9C618();
    uint64_t v25 = sub_1C2A9C658();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    *(void *)(v21 + 96) = sub_1C29376D4(0, &qword_1EBB8F8A0);
    *(void *)(v21 + 104) = sub_1C29FDAD4(&qword_1EBB8F8A8, &qword_1EBB8F8A0);
    *(void *)(v21 + 72) = v25;
    Swift::String v26 = (void *)sub_1C2A9E008();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v1;
    id v28 = objc_allocWithZone(MEMORY[0x1E4F2B440]);
    uint64_t v42 = sub_1C29FDB50;
    uint64_t v43 = v27;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v39 = 1107296256;
    uint64_t v40 = sub_1C29FD8B4;
    uint64_t v41 = &block_descriptor_5;
    uint64_t v29 = _Block_copy(&aBlock);
    uint64_t v30 = v1;
    id v31 = objc_msgSend(v28, sel_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_, v7, v26, 0, 0, v29);
    _Block_release(v29);

    swift_release();
    return v31;
  }
LABEL_15:
  uint64_t v33 = self;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v1;
  uint64_t v42 = sub_1C29FDBA4;
  uint64_t v43 = v34;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v39 = 1107296256;
  uint64_t v40 = sub_1C2A03494;
  uint64_t v41 = &block_descriptor_6;
  double v35 = _Block_copy(&aBlock);
  id v36 = v1;
  swift_release();
  id v37 = objc_msgSend(v33, sel_queryForMostRecentSampleOfType_predicate_completion_, v7, 0, v35);
  _Block_release(v35);

  return v37;
}

void sub_1C29FBE5C(unint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = sub_1C2A9CFE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v50 - v11;
  if (a1 && (unint64_t v13 = sub_1C29FB558(a1)) != 0)
  {
    unint64_t v14 = v13;
    if (v13 >> 62)
    {
      uint64_t v15 = sub_1C2A9E648();
      if (v15) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v15)
      {
LABEL_5:
        MEMORY[0x1F4188790](v15);
        *(&v50 - 2) = v14;
        *((unsigned char *)&v50 - 8) = 0;
        swift_retain();
        sub_1C2A9C9C8();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1C2A9CA18();
        return;
      }
    }
    swift_bridgeObjectRelease();
    sub_1C2A9CF88();
    double v35 = a3;
    id v36 = sub_1C2A9CFC8();
    os_log_type_t v37 = sub_1C2A9E0C8();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v52 = v7;
      aBlock[0] = v39;
      *(_DWORD *)uint64_t v38 = 136446210;
      uint64_t ObjectType = swift_getObjectType();
      sub_1C29FD96C();
      uint64_t v40 = sub_1C2A9DD58();
      uint64_t ObjectType = sub_1C2957168(v40, v41, aBlock);
      sub_1C2A9E358();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C292A000, v36, v37, "[%{public}s] No ongoing factors; querying for most recent sample.",
        v38,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v39, -1, -1);
      MEMORY[0x1C87656F0](v38, -1, -1);

      (*(void (**)(char *, uint64_t))(v52 + 8))(v12, v6);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
    uint64_t v42 = self;
    uint64_t v43 = *(void *)&v35[qword_1EBB8F718];
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = v35;
    aBlock[4] = (uint64_t)sub_1C29FDBA4;
    aBlock[5] = v44;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C2A03494;
    aBlock[3] = (uint64_t)&block_descriptor_21;
    unint64_t v45 = _Block_copy(aBlock);
    unint64_t v46 = v35;
    swift_release();
    id v47 = objc_msgSend(v42, sel_queryForMostRecentSampleOfType_predicate_completion_, v43, 0, v45);
    _Block_release(v45);
    uint64_t v48 = qword_1EBB8F700;
    uint64_t v49 = *(void **)&v46[qword_1EBB8F700];
    *(void *)&v46[qword_1EBB8F700] = v47;

    if (*(void *)&v46[v48]) {
      objc_msgSend(*(id *)&v46[qword_1EBB8F710], sel_executeQuery_);
    }
  }
  else
  {
    if (a2)
    {
      uint64_t v16 = a2;
    }
    else
    {
      sub_1C2962438();
      uint64_t v16 = (void *)swift_allocError();
      *uint64_t v17 = 1;
    }
    id v18 = a2;
    sub_1C2A9CF88();
    id v19 = a3;
    id v20 = v16;
    id v21 = v19;
    id v22 = v16;
    uint64_t v23 = sub_1C2A9CFC8();
    os_log_type_t v24 = sub_1C2A9E0A8();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v52 = v7;
      aBlock[0] = v26;
      uint64_t v27 = v26;
      *(_DWORD *)uint64_t v25 = 136446466;
      uint64_t ObjectType = swift_getObjectType();
      sub_1C29FD96C();
      uint64_t v51 = v6;
      uint64_t v28 = sub_1C2A9DD58();
      uint64_t ObjectType = sub_1C2957168(v28, v29, aBlock);
      sub_1C2A9E358();

      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      uint64_t ObjectType = (uint64_t)v16;
      id v30 = v16;
      sub_1C29415E4(0, (unint64_t *)&qword_1EBB92210);
      uint64_t v31 = sub_1C2A9DD58();
      uint64_t ObjectType = sub_1C2957168(v31, v32, aBlock);
      sub_1C2A9E358();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C292A000, v23, v24, "[%{public}s] Error while querying for ongoing factors: %{public}s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v27, -1, -1);
      MEMORY[0x1C87656F0](v25, -1, -1);

      uint64_t v33 = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v9, v51);
    }
    else
    {

      uint64_t v33 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    MEMORY[0x1F4188790](v33);
    *(&v50 - 2) = (uint64_t)v16;
    *((unsigned char *)&v50 - 8) = 1;
    id v34 = v16;
    swift_retain();
    sub_1C2A9C9C8();

    swift_release();
    sub_1C2A9CA18();
  }
}

void sub_1C29FC54C(void *a1, void *a2, void *a3)
{
  uint64_t v6 = sub_1C2A9CFE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && (self, (uint64_t v8 = swift_dynamicCastObjCClass()) != 0))
  {
    uint64_t v11 = v8;
    sub_1C296B238();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C2AA7730;
    *(void *)(v12 + 32) = v11;
    uint64_t v35 = v12;
    uint64_t v13 = sub_1C2A9DEA8();
    uint64_t v14 = v35;
    MEMORY[0x1F4188790](v13);
    *(&v32 - 2) = v14;
    *((unsigned char *)&v32 - 8) = 0;
    id v15 = a1;
    swift_retain();
    sub_1C2A9C9C8();

    swift_release();
    swift_bridgeObjectRelease();
  }
  else if (a2)
  {
    id v16 = a2;
    sub_1C2A9CF88();
    id v17 = a2;
    id v18 = a3;
    id v19 = a2;
    id v20 = v18;
    id v21 = sub_1C2A9CFC8();
    os_log_type_t v22 = sub_1C2A9E0A8();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v35 = v33;
      *(_DWORD *)uint64_t v23 = 136446466;
      uint64_t ObjectType = swift_getObjectType();
      sub_1C29FD96C();
      uint64_t v24 = sub_1C2A9DD58();
      uint64_t ObjectType = sub_1C2957168(v24, v25, &v35);
      sub_1C2A9E358();

      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2082;
      uint64_t ObjectType = (uint64_t)a2;
      id v26 = a2;
      sub_1C29415E4(0, (unint64_t *)&qword_1EBB92210);
      uint64_t v27 = sub_1C2A9DD58();
      uint64_t ObjectType = sub_1C2957168(v27, v28, &v35);
      sub_1C2A9E358();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C292A000, v21, v22, "[%{public}s] Error while querying for most recent sample: %{public}s", (uint8_t *)v23, 0x16u);
      uint64_t v29 = v33;
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v29, -1, -1);
      MEMORY[0x1C87656F0](v23, -1, -1);
    }
    else
    {
    }
    uint64_t v30 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    MEMORY[0x1F4188790](v30);
    *(&v32 - 2) = (uint64_t)a2;
    *((unsigned char *)&v32 - 8) = 1;
    id v31 = a2;
    swift_retain();
    sub_1C2A9C9C8();

    swift_release();
  }
  else
  {
    MEMORY[0x1F4188790](v8);
    *(&v32 - 2) = MEMORY[0x1E4FBC860];
    *((unsigned char *)&v32 - 8) = 0;
    swift_retain();
    sub_1C2A9C9C8();
    swift_release();
  }
}

id OngoingCycleFactorsSampleQueryOperation.__allocating_init(categoryType:name:queryQualityOfService:healthStore:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v11 = objc_allocWithZone(v5);
  return OngoingCycleFactorsSampleQueryOperation.init(categoryType:name:queryQualityOfService:healthStore:)(a1, a2, a3, a4, a5);
}

id OngoingCycleFactorsSampleQueryOperation.init(categoryType:name:queryQualityOfService:healthStore:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = sub_1C2A9CFE8();
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v35 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = qword_1EBB8F720;
  sub_1C2962438();
  uint64_t v14 = swift_allocError();
  *id v15 = 0;
  uint64_t v38 = v14;
  char v39 = 1;
  sub_1C29FCDA4();
  swift_allocObject();
  id v16 = v5;
  *(void *)&v5[v13] = sub_1C2A9C9F8();
  *(void *)&v16[qword_1EBB8F708] = 0;
  *(void *)&v16[qword_1EBB8F700] = 0;
  *(void *)&v16[qword_1EBB8F718] = a1;
  *(void *)&v16[qword_1EBB8F728] = a4;
  *(void *)&v16[qword_1EBB8F710] = a5;
  id v17 = a1;
  id v18 = a5;

  Operation = (objc_class *)type metadata accessor for OngoingCycleFactorsSampleQueryOperation();
  v37.receiver = v16;
  v37.super_class = Operation;
  id v20 = objc_msgSendSuper2(&v37, sel_init);
  id v21 = v20;
  if (a3)
  {
    os_log_type_t v22 = (void *)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    os_log_type_t v22 = 0;
  }
  objc_msgSend(v20, sel_setName_, v22);

  sub_1C2A9CF88();
  id v23 = v20;
  uint64_t v24 = sub_1C2A9CFC8();
  os_log_type_t v25 = sub_1C2A9E0C8();
  if (os_log_type_enabled(v24, v25))
  {
    id v33 = v18;
    id v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v38 = v27;
    *(_DWORD *)id v26 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    sub_1C29FD96C();
    uint64_t v28 = sub_1C2A9DD58();
    id v32 = v17;
    uint64_t ObjectType = sub_1C2957168(v28, v29, &v38);
    sub_1C2A9E358();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C292A000, v24, v25, "[%{public}s] initialize", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87656F0](v27, -1, -1);
    MEMORY[0x1C87656F0](v26, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v35);
  return v23;
}

void sub_1C29FCDA4()
{
  if (!qword_1EBB8E8A8)
  {
    sub_1C29FCDFC();
    unint64_t v0 = sub_1C2A9C9D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8E8A8);
    }
  }
}

void sub_1C29FCDFC()
{
  if (!qword_1EBB8FA10)
  {
    sub_1C29FCE7C();
    sub_1C29415E4(255, (unint64_t *)&qword_1EBB92210);
    unint64_t v0 = sub_1C2A9E9F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8FA10);
    }
  }
}

void sub_1C29FCE7C()
{
  if (!qword_1EBB8F810)
  {
    sub_1C29376D4(255, &qword_1EBB8F870);
    unint64_t v0 = sub_1C2A9DEF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8F810);
    }
  }
}

uint64_t type metadata accessor for OngoingCycleFactorsSampleQueryOperation()
{
  uint64_t result = qword_1EBB8F730;
  if (!qword_1EBB8F730) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C29FCF30()
{
  uint64_t v1 = sub_1C2A9CFE8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  double v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A9CF88();
  uint64_t v5 = v0;
  uint64_t v6 = sub_1C2A9CFC8();
  os_log_type_t v7 = sub_1C2A9E0C8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = v1;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v19 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    sub_1C29FD96C();
    uint64_t v11 = sub_1C2A9DD58();
    uint64_t ObjectType = sub_1C2957168(v11, v12, &v19);
    sub_1C2A9E358();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C292A000, v6, v7, "[%{public}s] Running...", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87656F0](v10, -1, -1);
    MEMORY[0x1C87656F0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  id v13 = sub_1C29FB9C0();
  uint64_t v14 = qword_1EBB8F708;
  id v15 = *(void **)&v5[qword_1EBB8F708];
  *(void *)&v5[qword_1EBB8F708] = v13;

  if (*(void *)&v5[v14]) {
    objc_msgSend(*(id *)&v5[qword_1EBB8F710], sel_executeQuery_);
  }
}

void sub_1C29FD18C(void *a1)
{
  id v1 = a1;
  sub_1C29FCF30();
}

void sub_1C29FD1D4()
{
  uint64_t v1 = sub_1C2A9CFE8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  double v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A9CF88();
  uint64_t v5 = v0;
  uint64_t v6 = sub_1C2A9CFC8();
  os_log_type_t v7 = sub_1C2A9E0C8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v24 = v1;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v26 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    sub_1C29FD96C();
    uint64_t v11 = sub_1C2A9DD58();
    uint64_t ObjectType = sub_1C2957168(v11, v12, &v26);
    sub_1C2A9E358();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C292A000, v6, v7, "[%{public}s] Cleaning up...", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87656F0](v10, -1, -1);
    MEMORY[0x1C87656F0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  id v13 = *(void **)&v5[qword_1EBB8F708];
  if (v13)
  {
    uint64_t v14 = *(void **)&v5[qword_1EBB8F710];
    id v15 = v13;
    id v16 = objc_msgSend(v14, sel__queries);
    sub_1C29376D4(0, &qword_1EBB92150);
    sub_1C29FDAD4(&qword_1EBB8F8B0, &qword_1EBB92150);
    uint64_t v17 = sub_1C2A9DF88();

    LOBYTE(v16) = sub_1C29FD59C(v15, v17);
    swift_bridgeObjectRelease();
    if (v16) {
      objc_msgSend(v14, sel_stopQuery_, v15);
    }
  }
  id v18 = *(void **)&v5[qword_1EBB8F700];
  if (v18)
  {
    uint64_t v19 = *(void **)&v5[qword_1EBB8F710];
    id v20 = v18;
    id v21 = objc_msgSend(v19, sel__queries);
    sub_1C29376D4(0, &qword_1EBB92150);
    sub_1C29FDAD4(&qword_1EBB8F8B0, &qword_1EBB92150);
    uint64_t v22 = sub_1C2A9DF88();

    LOBYTE(v21) = sub_1C29FD59C(v20, v22);
    swift_bridgeObjectRelease();
    if (v21) {
      objc_msgSend(v19, sel_stopQuery_, v20);
    }
  }
}

uint64_t sub_1C29FD59C(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_1C2A9E468();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (uint64_t v6 = sub_1C2A9E2A8(),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  sub_1C29376D4(0, &qword_1EBB92150);
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_1C2A9E2B8();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_1C2A9E2B8();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

id OngoingCycleFactorsSampleQueryOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void OngoingCycleFactorsSampleQueryOperation.init()()
{
}

void sub_1C29FD760()
{
}

void sub_1C29FD790()
{
  swift_release();

  id v1 = *(void **)(v0 + qword_1EBB8F700);
}

id OngoingCycleFactorsSampleQueryOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OngoingCycleFactorsSampleQueryOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C29FD838(uint64_t a1)
{
  swift_release();

  objc_super v2 = *(void **)(a1 + qword_1EBB8F700);
}

uint64_t sub_1C29FD8B4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C29376D4(0, &qword_1EBB927D8);
    uint64_t v5 = sub_1C2A9DE98();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_1C29FD96C()
{
  unint64_t result = qword_1EBB8F740;
  if (!qword_1EBB8F740)
  {
    type metadata accessor for OngoingCycleFactorsSampleQueryOperation();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB8F740);
  }
  return result;
}

uint64_t sub_1C29FD9B0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for OngoingCycleFactorsSampleQueryOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OngoingCycleFactorsSampleQueryOperation);
}

uint64_t dispatch thunk of OngoingCycleFactorsSampleQueryOperation.result.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for OngoingCycleFactorsSampleQueryOperation
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 72))();
}

uint64_t dispatch thunk of OngoingCycleFactorsSampleQueryOperation.__allocating_init(categoryType:name:queryQualityOfService:healthStore:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for OngoingCycleFactorsSampleQueryOperation + v0 + 160))();
}

uint64_t sub_1C29FDACC()
{
  return type metadata accessor for OngoingCycleFactorsSampleQueryOperation();
}

uint64_t sub_1C29FDAD4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C29376D4(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C29FDB18()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C29FDB50()
{
  return sub_1C2A9CA08();
}

void sub_1C29FDBA8()
{
  sub_1C29FC54C(v0[2], v0[3], v0[4]);
}

void sub_1C29FDBB4()
{
  sub_1C29FBE5C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1C29FDBC0()
{
  return sub_1C2A9CA08();
}

Swift::Double __swiftcall SignificantChangeEngine.fisherExactLess(a:b:c:d:)(Swift::Int a, Swift::Int b, Swift::Int c, Swift::Int d)
{
  Swift::Int v4 = a + b;
  if (__OFADD__(a, b))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  Swift::Int v6 = a + c;
  if (__OFADD__(a, c))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  Swift::Int v7 = v4 + c;
  if (__OFADD__(v4, c))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  BOOL v8 = __OFADD__(v7, d);
  uint64_t v9 = v7 + d;
  if (v8)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (a < 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = v9 - v4;
  if (__OFSUB__(v9, v4))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v11 = v10 - v6;
  if (!__OFSUB__(v10, v6))
  {
    uint64_t v12 = 0;
    double v13 = (double)v4;
    double v14 = (double)v6;
    double v15 = 0.0;
    double v16 = (double)v9;
    while (!__OFADD__(v11, v12))
    {
      if (((v11 + v12) & 0x8000000000000000) == 0)
      {
        HypergeometricPDF((double)v12, v13, v14, v16);
        double v15 = v15 + result;
      }
      if (a == v12) {
        return v15;
      }
      BOOL v8 = __OFADD__(v12++, 1);
      if (v8)
      {
        __break(1u);
        return v15;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
LABEL_24:
  __break(1u);
  return result;
}

Swift::Double __swiftcall SignificantChangeEngine.fisherExactTwoSided(a:b:c:d:)(Swift::Int a, Swift::Int b, Swift::Int c, Swift::Int d)
{
  Swift::Int v5 = a + b;
  if (__OFADD__(a, b))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  Swift::Int v6 = a + c;
  if (__OFADD__(a, c))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  Swift::Int v7 = v5 + c;
  if (__OFADD__(v5, c))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = v7 + d;
  if (__OFADD__(v7, d))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  double v9 = (double)v5;
  double v10 = (double)v6;
  HypergeometricPDF((double)a, (double)v5, (double)v6, (double)v8);
  if (v5 >= v6) {
    Swift::Int v11 = v6;
  }
  else {
    Swift::Int v11 = v5;
  }
  if (v11 < 0) {
    goto LABEL_26;
  }
  uint64_t v12 = v8 - v5;
  if (__OFSUB__(v8, v5))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v13 = v12 - v6;
  if (!__OFSUB__(v12, v6))
  {
    double v14 = result;
    uint64_t v15 = 0;
    double v16 = 0.0;
    while (!__OFADD__(v13, v15))
    {
      if (((v13 + v15) & 0x8000000000000000) == 0)
      {
        HypergeometricPDF((double)v15, v9, v10, (double)v8);
        if (result <= v14) {
          double v16 = v16 + result;
        }
      }
      if (v11 == v15) {
        return v16;
      }
      if (__OFADD__(v15++, 1))
      {
        __break(1u);
        return v16;
      }
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_28:
  __break(1u);
  return result;
}

Swift::Double __swiftcall SignificantChangeEngine.pValue(tTest:degreesOfFreedom:)(Swift::Double tTest, Swift::Double degreesOfFreedom)
{
  double v9 = StudentsCDF(tTest, degreesOfFreedom, v2, v3, v4, v5, v6, v7);
  if (tTest > 0.0) {
    double v9 = 1.0 - v9;
  }
  return v9 + v9;
}

uint64_t TimeBasedDistributionChartPoint.TimeOfDay.init(pointKind:yValue:xValue:yPointAnnotation:barColor:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  *(unsigned char *)a4 = *a1;
  *(double *)(a4 + 8) = a5;
  *(double *)(a4 + 16) = a6;
  uint64_t v9 = type metadata accessor for TimeBasedDistributionChartPoint.TimeOfDay(0);
  uint64_t v10 = a4 + *(int *)(v9 + 28);
  uint64_t v11 = sub_1C2A9C4F8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  *(void *)(a4 + *(int *)(v9 + 32)) = a3;
  return result;
}

uint64_t type metadata accessor for TimeBasedDistributionChartPoint.TimeOfDay(uint64_t a1)
{
  return sub_1C296F4B8(a1, (uint64_t *)&unk_1EA31EAE8);
}

uint64_t TimeBasedDistributionChartPoint.DayOfWeek.init(pointKind:yValue:xValue:yPointAnnotation:barColor:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  *(unsigned char *)a6 = *a1;
  *(double *)(a6 + 8) = a7;
  *(void *)(a6 + 16) = a2;
  *(void *)(a6 + 24) = a3;
  uint64_t v10 = type metadata accessor for TimeBasedDistributionChartPoint.DayOfWeek(0);
  uint64_t v11 = a6 + *(int *)(v10 + 28);
  uint64_t v12 = sub_1C2A9C4F8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a4, v12);
  *(void *)(a6 + *(int *)(v10 + 32)) = a5;
  return result;
}

uint64_t type metadata accessor for TimeBasedDistributionChartPoint.DayOfWeek(uint64_t a1)
{
  return sub_1C296F4B8(a1, (uint64_t *)&unk_1EA31EAF8);
}

uint64_t TimeBasedDistributionChartPoint.Skeleton.init(pointKind:yValue:yPointAnnotation:barColor:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  *(unsigned char *)a4 = *a1;
  *(double *)(a4 + 8) = a5;
  uint64_t v8 = type metadata accessor for TimeBasedDistributionChartPoint.Skeleton(0);
  uint64_t v9 = a4 + *(int *)(v8 + 24);
  uint64_t v10 = sub_1C2A9C4F8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a2, v10);
  *(void *)(a4 + *(int *)(v8 + 28)) = a3;
  return result;
}

uint64_t type metadata accessor for TimeBasedDistributionChartPoint.Skeleton(uint64_t a1)
{
  return sub_1C296F4B8(a1, (uint64_t *)&unk_1EA31EAD8);
}

uint64_t TimeBasedDistributionChartPoint.PointKind.hash(into:)()
{
  return sub_1C2A9E9C8();
}

BOOL static TimeBasedDistributionChartPoint.PointKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TimeBasedDistributionChartPoint.PointKind.hashValue.getter()
{
  return sub_1C2A9E9E8();
}

uint64_t (*TimeBasedDistributionChartPoint.Skeleton.pointKind.modify())()
{
  return nullsub_1;
}

uint64_t (*TimeBasedDistributionChartPoint.Skeleton.yValue.modify())()
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartPoint.Skeleton.yPointAnnotation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TimeBasedDistributionChartPoint.Skeleton(0) + 24);
  uint64_t v4 = sub_1C2A9C4F8();
  double v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t TimeBasedDistributionChartPoint.Skeleton.yPointAnnotation.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TimeBasedDistributionChartPoint.Skeleton(0) + 24);
  uint64_t v4 = sub_1C2A9C4F8();
  double v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*TimeBasedDistributionChartPoint.Skeleton.yPointAnnotation.modify())(void)
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartPoint.Skeleton.barColor.getter()
{
  type metadata accessor for TimeBasedDistributionChartPoint.Skeleton(0);
  return swift_retain();
}

uint64_t TimeBasedDistributionChartPoint.Skeleton.barColor.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TimeBasedDistributionChartPoint.Skeleton(0) + 28);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartPoint.Skeleton.barColor.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C29FE34C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_1C2A9C4F8();
  double v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1C29FE3BC()
{
  return swift_retain();
}

void TimeBasedDistributionChartPoint.TimeOfDay.pointKind.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *TimeBasedDistributionChartPoint.TimeOfDay.pointKind.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*TimeBasedDistributionChartPoint.TimeOfDay.pointKind.modify())()
{
  return nullsub_1;
}

double TimeBasedDistributionChartPoint.TimeOfDay.yValue.getter()
{
  return *(double *)(v0 + 8);
}

void TimeBasedDistributionChartPoint.TimeOfDay.yValue.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*TimeBasedDistributionChartPoint.TimeOfDay.yValue.modify())()
{
  return nullsub_1;
}

void TimeBasedDistributionChartPoint.TimeOfDay.xValue.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*TimeBasedDistributionChartPoint.TimeOfDay.xValue.modify())()
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartPoint.TimeOfDay.yPointAnnotation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C29FE630(type metadata accessor for TimeBasedDistributionChartPoint.TimeOfDay, a1);
}

uint64_t TimeBasedDistributionChartPoint.TimeOfDay.yPointAnnotation.setter(uint64_t a1)
{
  return sub_1C29FE6C8(a1, type metadata accessor for TimeBasedDistributionChartPoint.TimeOfDay);
}

uint64_t (*TimeBasedDistributionChartPoint.TimeOfDay.yPointAnnotation.modify())(void)
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartPoint.TimeOfDay.barColor.getter()
{
  return sub_1C29FE7A4((void (*)(void))type metadata accessor for TimeBasedDistributionChartPoint.TimeOfDay);
}

uint64_t TimeBasedDistributionChartPoint.TimeOfDay.barColor.setter(uint64_t a1)
{
  return sub_1C29FE7F8(a1, type metadata accessor for TimeBasedDistributionChartPoint.TimeOfDay);
}

uint64_t (*TimeBasedDistributionChartPoint.TimeOfDay.barColor.modify())(void)
{
  return nullsub_1;
}

double TimeBasedDistributionChartPoint.TimeOfDay.id.getter()
{
  return *(double *)(v0 + 16);
}

void sub_1C29FE550(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

double sub_1C29FE55C()
{
  return *(double *)(v0 + 8);
}

uint64_t sub_1C29FE568()
{
  return swift_retain();
}

double sub_1C29FE574@<D0>(double *a1@<X8>)
{
  double result = *(double *)(v1 + 16);
  *a1 = result;
  return result;
}

uint64_t (*TimeBasedDistributionChartPoint.DayOfWeek.pointKind.modify())()
{
  return nullsub_1;
}

uint64_t (*TimeBasedDistributionChartPoint.DayOfWeek.yValue.modify())()
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartPoint.DayOfWeek.xValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*TimeBasedDistributionChartPoint.DayOfWeek.xValue.modify())()
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartPoint.DayOfWeek.yPointAnnotation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C29FE630(type metadata accessor for TimeBasedDistributionChartPoint.DayOfWeek, a1);
}

uint64_t sub_1C29FE630@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 28);
  uint64_t v5 = sub_1C2A9C4F8();
  double v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t TimeBasedDistributionChartPoint.DayOfWeek.yPointAnnotation.setter(uint64_t a1)
{
  return sub_1C29FE6C8(a1, type metadata accessor for TimeBasedDistributionChartPoint.DayOfWeek);
}

uint64_t sub_1C29FE6C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 28);
  uint64_t v5 = sub_1C2A9C4F8();
  double v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*TimeBasedDistributionChartPoint.DayOfWeek.yPointAnnotation.modify())(void)
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartPoint.DayOfWeek.barColor.getter()
{
  return sub_1C29FE7A4((void (*)(void))type metadata accessor for TimeBasedDistributionChartPoint.DayOfWeek);
}

uint64_t sub_1C29FE7A4(void (*a1)(void))
{
  a1(0);
  return swift_retain();
}

uint64_t TimeBasedDistributionChartPoint.DayOfWeek.barColor.setter(uint64_t a1)
{
  return sub_1C29FE7F8(a1, type metadata accessor for TimeBasedDistributionChartPoint.DayOfWeek);
}

uint64_t sub_1C29FE7F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = *(int *)(a2(0) + 32);
  uint64_t result = swift_release();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartPoint.DayOfWeek.barColor.modify())(void)
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartPoint.DayOfWeek.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1C29FE8B8()
{
  unint64_t result = qword_1EA31EAD0;
  if (!qword_1EA31EAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EAD0);
  }
  return result;
}

uint64_t sub_1C29FE90C()
{
  return MEMORY[0x1E4FBB3F0];
}

uint64_t sub_1C29FE918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_1C2A9C4F8();
  double v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1C29FE988()
{
  return MEMORY[0x1E4FBB1B0];
}

uint64_t sub_1C29FE994@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of TimeBasedDistributionChartPointProxy.pointKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TimeBasedDistributionChartPointProxy.yValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TimeBasedDistributionChartPointProxy.yPointAnnotation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TimeBasedDistributionChartPointProxy.barColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

ValueMetadata *type metadata accessor for TimeBasedDistributionChartPoint()
{
  return &type metadata for TimeBasedDistributionChartPoint;
}

unsigned char *storeEnumTagSinglePayload for TimeBasedDistributionChartPoint.PointKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C29FEACCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeBasedDistributionChartPoint.PointKind()
{
  return &type metadata for TimeBasedDistributionChartPoint.PointKind;
}

uint64_t *initializeBufferWithCopyOfBuffer for TimeBasedDistributionChartPoint.Skeleton(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C2A9C4F8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  swift_retain();
  return v4;
}

uint64_t destroy for TimeBasedDistributionChartPoint.Skeleton(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_1C2A9C4F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return swift_release();
}

uint64_t initializeWithCopy for TimeBasedDistributionChartPoint.Skeleton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C4F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TimeBasedDistributionChartPoint.Skeleton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C4F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for TimeBasedDistributionChartPoint.Skeleton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C4F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for TimeBasedDistributionChartPoint.Skeleton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C4F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeBasedDistributionChartPoint.Skeleton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29FEF28);
}

uint64_t sub_1C29FEF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C4F8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TimeBasedDistributionChartPoint.Skeleton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29FF000);
}

uint64_t sub_1C29FF000(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2A9C4F8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C29FF0C0()
{
  uint64_t result = sub_1C2A9C4F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for TimeBasedDistributionChartPoint.TimeOfDay(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_1C2A9C4F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(void *)((char *)v4 + *(int *)(a3 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 32));
  }
  swift_retain();
  return v4;
}

uint64_t destroy for TimeBasedDistributionChartPoint.TimeOfDay(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = sub_1C2A9C4F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return swift_release();
}

uint64_t initializeWithCopy for TimeBasedDistributionChartPoint.TimeOfDay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C4F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TimeBasedDistributionChartPoint.TimeOfDay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C4F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for TimeBasedDistributionChartPoint.TimeOfDay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C4F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t assignWithTake for TimeBasedDistributionChartPoint.TimeOfDay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C4F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeBasedDistributionChartPoint.TimeOfDay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29FF59C);
}

uint64_t sub_1C29FF59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C4F8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TimeBasedDistributionChartPoint.TimeOfDay(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29FF674);
}

uint64_t sub_1C29FF674(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2A9C4F8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 28);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C29FF734()
{
  return sub_1C29FFD68();
}

void *initializeBufferWithCopyOfBuffer for TimeBasedDistributionChartPoint.DayOfWeek(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(void *)(a1 + 24) = a2[3];
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_1C2A9C4F8();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    *(void *)((char *)v4 + *(int *)(a3 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 32));
  }
  swift_retain();
  return v4;
}

uint64_t destroy for TimeBasedDistributionChartPoint.DayOfWeek(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1C2A9C4F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_release();
}

uint64_t initializeWithCopy for TimeBasedDistributionChartPoint.DayOfWeek(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C4F8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TimeBasedDistributionChartPoint.DayOfWeek(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C4F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for TimeBasedDistributionChartPoint.DayOfWeek(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C4F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t assignWithTake for TimeBasedDistributionChartPoint.DayOfWeek(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C2A9C4F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeBasedDistributionChartPoint.DayOfWeek(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C29FFBF0);
}

uint64_t sub_1C29FFBF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C2A9C4F8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TimeBasedDistributionChartPoint.DayOfWeek(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C29FFCB4);
}

uint64_t sub_1C29FFCB4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C2A9C4F8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C29FFD5C()
{
  return sub_1C29FFD68();
}

uint64_t sub_1C29FFD68()
{
  uint64_t result = sub_1C2A9C4F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double sub_1C29FFE50()
{
  return 0.0;
}

double sub_1C29FFE64()
{
  return 2.0;
}

void (*sub_1C29FFE78())(CGContext *a1, CGFloat a2, CGFloat a3)
{
  return sub_1C2A00080;
}

void sub_1C29FFEB8(CGContext *a1, CGFloat a2, CGFloat a3)
{
  DiagramConfiguration.TextAttributes.toTextAttributes()();
  uint64_t v6 = (void *)sub_1C2A9DCF8();
  type metadata accessor for Key(0);
  sub_1C2942D7C();
  uint64_t v7 = (void *)sub_1C2A9DC58();
  objc_msgSend(v6, sel_sizeWithAttributes_, v7);
  double v9 = v8;
  double v11 = v10;

  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithWhite_alpha_, 0.71, 1.0);
  uint64_t v13 = (CGColor *)objc_msgSend(v12, sel_CGColor);
  CGContextSetFillColorWithColor(a1, v13);

  v17.origin.CGFloat x = 0.0;
  v17.origin.CGFloat y = 0.0;
  v17.size.CGFloat width = a2;
  v17.size.CGFloat height = a3;
  CGContextFillRect(a1, v17);
  double v14 = (void *)sub_1C2A9DCF8();
  id v15 = (id)sub_1C2A9DC58();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_drawAtPoint_withAttributes_, v15, (a2 - v9) * 0.5, (a3 - v11) * 0.5);
}

void sub_1C2A00080(CGContext *a1, CGFloat a2, CGFloat a3)
{
}

uint64_t static DiagramBanner.imageForTesting(dataGroups:configuration:renderer:imageSize:)(long long *a1, uint64_t *a2, void *a3, double a4, double a5)
{
  long long v27 = *a1;
  uint64_t v8 = *((void *)a1 + 2);
  uint64_t v9 = *((void *)a1 + 3);
  char v10 = *((unsigned char *)a1 + 32);
  uint64_t v11 = *((void *)a1 + 5);
  uint64_t v13 = *a2;
  uint64_t v12 = a2[1];
  char v14 = *((unsigned char *)a2 + 16);
  type metadata accessor for DiagramBanner();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = v12;
  *(unsigned char *)(v15 + 32) = v14;
  *(_OWORD *)(v15 + 40) = v27;
  *(void *)(v15 + 56) = v8;
  *(void *)(v15 + 64) = v9;
  *(unsigned char *)(v15 + 72) = v10;
  *(void *)(v15 + 80) = v11;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = 0;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(v16 + 32) = _Q0;
  *(void *)(v16 + 48) = 0;
  *(void *)(v16 + 56) = 0;
  *(double *)(v16 + 64) = a4;
  *(double *)(v16 + 72) = a5;
  __asm { FMOV            V0.2D, #2.0 }
  *(_OWORD *)(v16 + 80) = _Q0;
  *(_OWORD *)(v16 + 96) = _Q0;
  *(void *)(v16 + 112) = sub_1C2A00080;
  *(void *)(v16 + 120) = v15;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_1C29894FC;
  *(void *)(v23 + 24) = v16;
  aBlock[4] = sub_1C2942C98;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2942CA0;
  aBlock[3] = &block_descriptor_6;
  uint64_t v24 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  id v25 = objc_msgSend(a3, sel_imageWithActions_, v24);
  _Block_release(v24);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release_n();
  swift_release();
  uint64_t result = swift_release();
  if ((v11 & 1) == 0) {
    return (uint64_t)v25;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DiagramBanner()
{
  return self;
}

uint64_t sub_1C2A002C8()
{
  return MEMORY[0x1F4186498](v0, 128, 7);
}

uint64_t sub_1C2A002D8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t DiagramBanner.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DiagramBanner.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void (*sub_1C2A00350())(CGContext *a1, CGFloat a2, CGFloat a3)
{
  return sub_1C2A00080;
}

uint64_t method lookup function for DiagramBanner(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DiagramBanner);
}

uint64_t dispatch thunk of DiagramBanner.modelSpace.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of DiagramBanner.screenInsets.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DiagramBanner.drawingBlock.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

unint64_t sub_1C2A0041C(char a1)
{
  unint64_t result = 0x6974736974617473;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x7065656C73;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x6563655274736F6DLL;
      break;
    case 6:
      unint64_t result = 0x7974697669746361;
      break;
    case 7:
      unint64_t result = 0x7078456F69647561;
      break;
    case 8:
      unint64_t result = 0x6172676F69647561;
      break;
    case 9:
      unint64_t result = 0x6F43656C706D6173;
      break;
    case 10:
      unint64_t result = 0x756F48646E617473;
      break;
    case 11:
      unint64_t result = 0x46676E696F676E6FLL;
      break;
    case 12:
      unint64_t result = 0x6D6F43746E756F63;
      break;
    case 13:
      unint64_t result = 0x69466F6964726163;
      break;
    case 14:
      unint64_t result = 0x6472754262694661;
      break;
    case 15:
      unint64_t result = 0xD000000000000012;
      break;
    case 16:
      unint64_t result = 0x7461777265646E75;
      break;
    case 17:
      unint64_t result = 0x4D65636E616C6162;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C2A006B0()
{
  return sub_1C2A0041C(*v0);
}

uint64_t sub_1C2A006B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A0287C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C2A006E0(unsigned char *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_1C2A006EC(uint64_t a1)
{
  unint64_t v2 = sub_1C2A01DC4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A00728(uint64_t a1)
{
  unint64_t v2 = sub_1C2A01DC4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t QueryConfiguration.encode(to:)(void *a1)
{
  sub_1C2A02160(0, &qword_1EBB8E3C0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  uint64_t v21 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v8 = v1[2];
  uint64_t v7 = v1[3];
  unsigned int v9 = *((unsigned __int8 *)v1 + 32);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1;
  uint64_t v13 = (char *)&v19 - v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_1C2A01DC4();
  sub_1C2A9EA18();
  switch(v9 >> 3)
  {
    case 1u:
      uint64_t v22 = v6;
      LOBYTE(v23) = v5;
      uint64_t v24 = v8;
      LOWORD(v25) = v7;
      char v27 = 1;
      sub_1C2A02064();
      goto LABEL_22;
    case 2u:
      LOBYTE(v22) = v6;
      uint64_t v23 = v5;
      char v27 = 2;
      sub_1C2A01F14();
      goto LABEL_22;
    case 3u:
      char v14 = 3;
      goto LABEL_14;
    case 4u:
      uint64_t v22 = v6;
      uint64_t v23 = v5;
      uint64_t v24 = v8;
      uint64_t v25 = v7;
      char v26 = v9 & 1;
      char v15 = 4;
      goto LABEL_11;
    case 5u:
      LOWORD(v22) = v6;
      BYTE2(v22) = BYTE2(v6);
      char v27 = 5;
      sub_1C2A01FBC();
      goto LABEL_22;
    case 6u:
      LOBYTE(v22) = 6;
      sub_1C2A0210C();
      goto LABEL_25;
    case 7u:
      LOBYTE(v22) = v6;
      uint64_t v23 = v5;
      LOWORD(v24) = v8;
      char v27 = 7;
      sub_1C2A020B8();
      goto LABEL_22;
    case 8u:
      uint64_t v22 = v6;
      uint64_t v23 = v5;
      uint64_t v24 = v8;
      uint64_t v25 = v7;
      char v26 = v9 & 1;
      char v15 = 8;
LABEL_11:
      char v27 = v15;
      sub_1C29698F8();
      goto LABEL_22;
    case 9u:
      LOBYTE(v22) = 9;
      sub_1C2A01F68();
      goto LABEL_25;
    case 0xAu:
      char v14 = 10;
LABEL_14:
      LOBYTE(v22) = v14;
      sub_1C2A01EC0();
      goto LABEL_25;
    case 0xBu:
      char v16 = 11;
      goto LABEL_24;
    case 0xCu:
      uint64_t v22 = v6;
      LOBYTE(v23) = v5 & 1;
      uint64_t v24 = v8;
      LOBYTE(v25) = v7 & 1;
      char v27 = 12;
      sub_1C2A02010();
      goto LABEL_22;
    case 0xDu:
      char v16 = 13;
      goto LABEL_24;
    case 0xEu:
      char v16 = 14;
      goto LABEL_24;
    case 0xFu:
      char v16 = 15;
      goto LABEL_24;
    case 0x10u:
      LOBYTE(v22) = v6;
      uint64_t v23 = v5;
      LOWORD(v24) = v8;
      char v27 = 16;
      goto LABEL_21;
    case 0x11u:
      char v16 = 17;
LABEL_24:
      LOBYTE(v22) = v16;
      sub_1C2A01E18();
LABEL_25:
      uint64_t v17 = v20;
      break;
    default:
      LOBYTE(v22) = v6;
      uint64_t v23 = v5;
      LOWORD(v24) = v8;
      char v27 = 0;
LABEL_21:
      sub_1C2A01E6C();
LABEL_22:
      uint64_t v17 = v20;
      break;
  }
  sub_1C2A9E868();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v13, v17);
}

uint64_t sub_1C2A00B40(void *a1)
{
  return QueryConfiguration.encode(to:)(a1);
}

uint64_t QueryConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C2A02160(0, &qword_1EBB92170, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unsigned int v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A01DC4();
  sub_1C2A9EA08();
  if (!v2)
  {
    uint64_t v10 = sub_1C2A9E7B8();
    uint64_t v11 = *(void *)(v10 + 16);
    if (!v11)
    {
      swift_bridgeObjectRelease();
      __break(1u);
      JUMPOUT(0x1C2A01468);
    }
    uint64_t v12 = *(unsigned __int8 *)(v11 + v10 + 31);
    swift_bridgeObjectRelease();
    switch(v12)
    {
      case 1:
        char v25 = 1;
        sub_1C2A02410();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        unint64_t v15 = v20;
        uint64_t v16 = v21;
        uint64_t v17 = v22;
        char v14 = 8;
        uint64_t v13 = (unsigned __int16)v23;
        break;
      case 2:
        char v25 = 2;
        sub_1C2A022C0();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v17 = 0;
        uint64_t v13 = 0;
        unint64_t v15 = v20;
        uint64_t v16 = v21;
        char v14 = 16;
        break;
      case 3:
        LOBYTE(v20) = 3;
        sub_1C2A0226C();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        unint64_t v15 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        uint64_t v13 = 0;
        char v14 = 24;
        break;
      case 4:
        char v25 = 4;
        sub_1C29699B0();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        unint64_t v15 = v20;
        uint64_t v16 = v21;
        uint64_t v17 = v22;
        uint64_t v13 = v23;
        char v14 = v24 | 0x20;
        break;
      case 5:
        char v25 = 5;
        sub_1C2A02368();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        uint64_t v13 = 0;
        unint64_t v15 = (unsigned __int16)v20 | ((unint64_t)BYTE2(v20) << 16);
        char v14 = 40;
        break;
      case 6:
        LOBYTE(v20) = 6;
        sub_1C2A024B8();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        unint64_t v15 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        uint64_t v13 = 0;
        char v14 = 48;
        break;
      case 7:
        char v25 = 7;
        sub_1C2A02464();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v13 = 0;
        unint64_t v15 = v20;
        uint64_t v16 = v21;
        char v14 = 56;
        uint64_t v17 = (unsigned __int16)v22;
        break;
      case 8:
        char v25 = 8;
        sub_1C29699B0();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        unint64_t v15 = v20;
        uint64_t v16 = v21;
        uint64_t v17 = v22;
        uint64_t v13 = v23;
        char v14 = v24 | 0x40;
        break;
      case 9:
        LOBYTE(v20) = 9;
        sub_1C2A02314();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        unint64_t v15 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        uint64_t v13 = 0;
        char v14 = 72;
        break;
      case 10:
        LOBYTE(v20) = 10;
        sub_1C2A0226C();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        unint64_t v15 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        uint64_t v13 = 0;
        char v14 = 80;
        break;
      case 11:
        LOBYTE(v20) = 11;
        sub_1C2A021C4();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        unint64_t v15 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        uint64_t v13 = 0;
        char v14 = 88;
        break;
      case 12:
        char v25 = 12;
        sub_1C2A023BC();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        unint64_t v15 = v20;
        uint64_t v16 = v21;
        uint64_t v17 = v22;
        char v14 = 96;
        uint64_t v13 = v23;
        break;
      case 13:
        LOBYTE(v20) = 13;
        sub_1C2A021C4();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        unint64_t v15 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        uint64_t v13 = 0;
        char v14 = 104;
        break;
      case 14:
        LOBYTE(v20) = 14;
        sub_1C2A021C4();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        unint64_t v15 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        uint64_t v13 = 0;
        char v14 = 112;
        break;
      case 15:
        LOBYTE(v20) = 15;
        sub_1C2A021C4();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        unint64_t v15 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        uint64_t v13 = 0;
        char v14 = 120;
        break;
      case 16:
        char v25 = 16;
        sub_1C2A02218();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v13 = 0;
        unint64_t v15 = v20;
        uint64_t v16 = v21;
        char v14 = 0x80;
        uint64_t v17 = (unsigned __int16)v22;
        break;
      case 17:
        LOBYTE(v20) = 17;
        sub_1C2A021C4();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        unint64_t v15 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        uint64_t v13 = 0;
        char v14 = -120;
        break;
      default:
        char v25 = 0;
        sub_1C2A02218();
        sub_1C2A9E7A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v13 = 0;
        char v14 = 0;
        unint64_t v15 = v20;
        uint64_t v16 = v21;
        uint64_t v17 = (unsigned __int16)v22;
        break;
    }
    *(void *)a2 = v15;
    *(void *)(a2 + 8) = v16;
    *(void *)(a2 + 16) = v17;
    *(void *)(a2 + 24) = v13;
    *(unsigned char *)(a2 + 32) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C2A014B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return QueryConfiguration.init(from:)(a1, a2);
}

uint64_t _s19HealthVisualization18QueryConfigurationO2eeoiySbAC_ACtFZ_0(void **a1, uint64_t *a2)
{
  uint64_t v3 = *(uint64_t *)a1;
  uint64_t v2 = (uint64_t)a1[1];
  uint64_t v5 = *((uint64_t *)a1 + 2);
  uint64_t v4 = (uint64_t)a1[3];
  LODWORD(v6) = *((unsigned __int8 *)a1 + 32);
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v9 = a2[3];
  unsigned int v11 = *((unsigned __int8 *)a2 + 32);
  switch(v6 >> 3)
  {
    case 1u:
      if ((v11 & 0xF8) != 8)
      {
        unsigned __int8 v41 = *((unsigned char *)a1 + 32);
        uint64_t v6 = (uint64_t)a1[3];
        goto LABEL_58;
      }
      if ((sub_1C29634E4(*a1, (void *)*a2) & 1) == 0)
      {
        sub_1C29402B8(v3, v2, v5, v4, v6);
        goto LABEL_60;
      }
      sub_1C29402B8(v8, v7, v10, v9, v11);
      sub_1C29402B8(v3, v2, v5, v4, v6);
      sub_1C29402B8(v3, v2, v5, v4, v6);
      sub_1C29402B8(v8, v7, v10, v9, v11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_1C29544B0(v2, v7) & 1) == 0 || (sub_1C2963A48(v5, v10) & 1) == 0 || (sub_1C29546FC(v4, v9) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C293FE60(v3, v2, v5, v4, v6);
        sub_1C293FE60(v8, v7, v10, v9, v11);
        sub_1C293FE60(v8, v7, v10, v9, v11);
        uint64_t v28 = v3;
        uint64_t v29 = v2;
        uint64_t v30 = v5;
        uint64_t v31 = v4;
        unsigned __int8 v32 = v6;
        goto LABEL_62;
      }
      char v42 = sub_1C2954904(BYTE1(v4), SBYTE1(v9));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C293FE60(v3, v2, v5, v4, v6);
      sub_1C293FE60(v8, v7, v10, v9, v11);
      sub_1C293FE60(v8, v7, v10, v9, v11);
      sub_1C293FE60(v3, v2, v5, v4, v6);
      if (v42) {
        goto LABEL_74;
      }
      goto LABEL_63;
    case 2u:
      if ((v11 & 0xF8) != 0x10) {
        goto LABEL_60;
      }
      char v12 = sub_1C29544B0(*a1, *a2);
      uint64_t v13 = v4;
      char v14 = v12;
      sub_1C293FE60(v3, v2, v5, v13, v6);
      sub_1C293FE60(v8, v7, v10, v9, v11);
      char v15 = v14 & (v2 == v7);
      return v15 & 1;
    case 3u:
      if ((v11 & 0xF8) != 0x18) {
        goto LABEL_60;
      }
      goto LABEL_56;
    case 4u:
      if ((v11 & 0xF8) == 0x20) {
        goto LABEL_9;
      }
      goto LABEL_50;
    case 5u:
      if ((v11 & 0xF8) != 0x28) {
        goto LABEL_60;
      }
      if ((sub_1C29544B0(*a1, *a2) & 1) == 0 || (sub_1C29546FC(BYTE1(v3), SBYTE1(v8)) & 1) == 0) {
        goto LABEL_61;
      }
      char v33 = sub_1C2954904(BYTE2(v3), SBYTE2(v8));
      uint64_t v34 = v4;
      char v35 = v33;
      sub_1C293FE60(v3, v2, v5, v34, v6);
      sub_1C293FE60(v8, v7, v10, v9, v11);
      if ((v35 & 1) == 0) {
        goto LABEL_63;
      }
      goto LABEL_74;
    case 6u:
      if ((v11 & 0xF8) != 0x30) {
        goto LABEL_60;
      }
      goto LABEL_56;
    case 7u:
      unsigned __int8 v41 = *((unsigned char *)a1 + 32);
      uint64_t v6 = (uint64_t)a1[3];
      if ((v11 & 0xF8) != 0x38) {
        goto LABEL_59;
      }
      uint64_t v39 = a2[2];
      uint64_t v18 = a2[3];
      sub_1C29402B8(v8, v7, v10, v9, v11);
      uint64_t v19 = v5;
      uint64_t v20 = v5;
      uint64_t v21 = v6;
      uint64_t v22 = v39;
      uint64_t v23 = v6;
      unsigned __int8 v24 = v41;
      sub_1C29402B8(v3, v2, v20, v23, v41);
      sub_1C29402B8(v3, v2, v19, v21, v41);
      sub_1C29402B8(v8, v7, v39, v18, v11);
      if ((sub_1C29544B0(v3, v8) & 1) == 0 || (sub_1C2963A48(v2, v7) & 1) == 0 || (sub_1C29546FC(v19, v39) & 1) == 0) {
        goto LABEL_34;
      }
      char v36 = sub_1C2954904(BYTE1(v19), SBYTE1(v39));
      sub_1C293FE60(v3, v2, v19, v21, v41);
      sub_1C293FE60(v8, v7, v39, v18, v11);
      sub_1C293FE60(v8, v7, v39, v18, v11);
      sub_1C293FE60(v3, v2, v19, v21, v41);
      return v36 & 1;
    case 8u:
      if ((v11 & 0xF8) == 0x40)
      {
LABEL_9:
        v45[0] = *a1;
        v45[1] = v2;
        v45[2] = v5;
        v45[3] = v4;
        char v46 = v6 & 1;
        v43[0] = v8;
        v43[1] = v7;
        v43[2] = v10;
        v43[3] = v9;
        char v44 = v11 & 1;
        char ConfigurationV2eeoiySbAC_ACtFZ_0 = _s19HealthVisualization34MostRecentSampleQueryConfigurationV2eeoiySbAC_ACtFZ_0((uint64_t)v45, (uint64_t)v43);
        uint64_t v17 = v4;
        uint64_t v38 = v4;
        char v15 = ConfigurationV2eeoiySbAC_ACtFZ_0;
        sub_1C29402B8(v3, v2, v5, v17, v6);
        sub_1C29402B8(v8, v7, v10, v9, v11);
        sub_1C293FE60(v3, v2, v5, v38, v6);
        sub_1C293FE60(v8, v7, v10, v9, v11);
        return v15 & 1;
      }
LABEL_50:
      unsigned __int8 v41 = *((unsigned char *)a1 + 32);
      uint64_t v6 = (uint64_t)a1[3];
LABEL_58:
      swift_bridgeObjectRetain();
LABEL_59:
      swift_bridgeObjectRetain();
      uint64_t v4 = v6;
      LOBYTE(v6) = v41;
LABEL_60:
      sub_1C29402B8(v8, v7, v10, v9, v11);
LABEL_61:
      sub_1C293FE60(v3, v2, v5, v4, v6);
      uint64_t v28 = v8;
      uint64_t v29 = v7;
      uint64_t v30 = v10;
      uint64_t v31 = v9;
      unsigned __int8 v32 = v11;
      goto LABEL_62;
    case 9u:
      if ((v11 & 0xF8) != 0x48) {
        goto LABEL_60;
      }
      goto LABEL_56;
    case 0xAu:
      if ((v11 & 0xF8) != 0x50) {
        goto LABEL_60;
      }
      goto LABEL_56;
    case 0xBu:
      if ((v11 & 0xF8) != 0x58) {
        goto LABEL_60;
      }
      goto LABEL_56;
    case 0xCu:
      if ((v11 & 0xF8) != 0x60) {
        goto LABEL_60;
      }
      sub_1C293FE60((uint64_t)*a1, v2, v5, v4, v6);
      sub_1C293FE60(v8, v7, v10, v9, v11);
      if (v2)
      {
        if ((v7 & 1) == 0) {
          goto LABEL_63;
        }
      }
      else if ((v7 & 1) != 0 || *(double *)&v3 != *(double *)&v8)
      {
        goto LABEL_63;
      }
      if (v4)
      {
        if ((v9 & 1) == 0) {
          goto LABEL_63;
        }
        goto LABEL_74;
      }
      if ((v9 & 1) == 0 && *(double *)&v5 == *(double *)&v10) {
        goto LABEL_74;
      }
      goto LABEL_63;
    case 0xDu:
      if ((v11 & 0xF8) != 0x68) {
        goto LABEL_60;
      }
      goto LABEL_56;
    case 0xEu:
      if ((v11 & 0xF8) != 0x70) {
        goto LABEL_60;
      }
      goto LABEL_56;
    case 0xFu:
      if ((v11 & 0xF8) != 0x78) {
        goto LABEL_60;
      }
      goto LABEL_56;
    case 0x10u:
      unsigned __int8 v41 = *((unsigned char *)a1 + 32);
      uint64_t v6 = (uint64_t)a1[3];
      if ((v11 & 0xF8) == 0x80) {
        goto LABEL_29;
      }
      goto LABEL_59;
    case 0x11u:
      if ((v11 & 0xF8) != 0x88) {
        goto LABEL_60;
      }
LABEL_56:
      sub_1C293FE60((uint64_t)*a1, v2, v5, v4, v6);
      sub_1C293FE60(v8, v7, v10, v9, v11);
      char v15 = 1;
      return v15 & 1;
    default:
      unsigned __int8 v41 = *((unsigned char *)a1 + 32);
      uint64_t v6 = (uint64_t)a1[3];
      if (v11 >= 8) {
        goto LABEL_59;
      }
LABEL_29:
      uint64_t v40 = a2[2];
      uint64_t v18 = a2[3];
      sub_1C29402B8(v8, v7, v10, v9, v11);
      uint64_t v19 = v5;
      uint64_t v26 = v5;
      uint64_t v21 = v6;
      uint64_t v22 = v40;
      uint64_t v27 = v6;
      unsigned __int8 v24 = v41;
      sub_1C29402B8(v3, v2, v26, v27, v41);
      sub_1C29402B8(v3, v2, v19, v21, v41);
      sub_1C29402B8(v8, v7, v40, v18, v11);
      if ((sub_1C29544B0(v3, v8) & 1) == 0 || (sub_1C2963A48(v2, v7) & 1) == 0 || (sub_1C29546FC(v19, v40) & 1) == 0)
      {
LABEL_34:
        sub_1C293FE60(v3, v2, v19, v21, v24);
        sub_1C293FE60(v8, v7, v22, v18, v11);
        sub_1C293FE60(v8, v7, v22, v18, v11);
        uint64_t v28 = v3;
        uint64_t v29 = v2;
        uint64_t v30 = v19;
        uint64_t v31 = v21;
        unsigned __int8 v32 = v24;
LABEL_62:
        sub_1C293FE60(v28, v29, v30, v31, v32);
        goto LABEL_63;
      }
      char v37 = sub_1C2954904(BYTE1(v19), SBYTE1(v40));
      sub_1C293FE60(v3, v2, v19, v21, v41);
      sub_1C293FE60(v8, v7, v40, v18, v11);
      sub_1C293FE60(v8, v7, v40, v18, v11);
      sub_1C293FE60(v3, v2, v19, v21, v41);
      if ((v37 & 1) == 0)
      {
LABEL_63:
        char v15 = 0;
        return v15 & 1;
      }
LABEL_74:
      char v15 = 1;
      return v15 & 1;
  }
}

unint64_t sub_1C2A01DC4()
{
  unint64_t result = qword_1EBB91C98;
  if (!qword_1EBB91C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91C98);
  }
  return result;
}

unint64_t sub_1C2A01E18()
{
  unint64_t result = qword_1EBB8E398;
  if (!qword_1EBB8E398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E398);
  }
  return result;
}

unint64_t sub_1C2A01E6C()
{
  unint64_t result = qword_1EBB8F3B8;
  if (!qword_1EBB8F3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8F3B8);
  }
  return result;
}

unint64_t sub_1C2A01EC0()
{
  unint64_t result = qword_1EBB8E3B0;
  if (!qword_1EBB8E3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E3B0);
  }
  return result;
}

unint64_t sub_1C2A01F14()
{
  unint64_t result = qword_1EBB8EFE8;
  if (!qword_1EBB8EFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8EFE8);
  }
  return result;
}

unint64_t sub_1C2A01F68()
{
  unint64_t result = qword_1EBB8F500;
  if (!qword_1EBB8F500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8F500);
  }
  return result;
}

unint64_t sub_1C2A01FBC()
{
  unint64_t result = qword_1EBB8FEE0;
  if (!qword_1EBB8FEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8FEE0);
  }
  return result;
}

unint64_t sub_1C2A02010()
{
  unint64_t result = qword_1EA31EB08;
  if (!qword_1EA31EB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EB08);
  }
  return result;
}

unint64_t sub_1C2A02064()
{
  unint64_t result = qword_1EBB8E380;
  if (!qword_1EBB8E380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E380);
  }
  return result;
}

unint64_t sub_1C2A020B8()
{
  unint64_t result = qword_1EBB8E3A8;
  if (!qword_1EBB8E3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E3A8);
  }
  return result;
}

unint64_t sub_1C2A0210C()
{
  unint64_t result = qword_1EA31EB10;
  if (!qword_1EA31EB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EB10);
  }
  return result;
}

void sub_1C2A02160(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C2A01DC4();
    unint64_t v7 = a3(a1, &type metadata for QueryConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C2A021C4()
{
  unint64_t result = qword_1EBB91DC0;
  if (!qword_1EBB91DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91DC0);
  }
  return result;
}

unint64_t sub_1C2A02218()
{
  unint64_t result = qword_1EBB91E30;
  if (!qword_1EBB91E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91E30);
  }
  return result;
}

unint64_t sub_1C2A0226C()
{
  unint64_t result = qword_1EBB91FB8;
  if (!qword_1EBB91FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91FB8);
  }
  return result;
}

unint64_t sub_1C2A022C0()
{
  unint64_t result = qword_1EBB91DF0;
  if (!qword_1EBB91DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91DF0);
  }
  return result;
}

unint64_t sub_1C2A02314()
{
  unint64_t result = qword_1EBB91E38;
  if (!qword_1EBB91E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91E38);
  }
  return result;
}

unint64_t sub_1C2A02368()
{
  unint64_t result = qword_1EBB90260;
  if (!qword_1EBB90260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB90260);
  }
  return result;
}

unint64_t sub_1C2A023BC()
{
  unint64_t result = qword_1EA31EB18;
  if (!qword_1EA31EB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EB18);
  }
  return result;
}

unint64_t sub_1C2A02410()
{
  unint64_t result = qword_1EBB91FB0;
  if (!qword_1EBB91FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91FB0);
  }
  return result;
}

unint64_t sub_1C2A02464()
{
  unint64_t result = qword_1EBB91E58;
  if (!qword_1EBB91E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91E58);
  }
  return result;
}

unint64_t sub_1C2A024B8()
{
  unint64_t result = qword_1EBB91E60;
  if (!qword_1EBB91E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91E60);
  }
  return result;
}

uint64_t assignWithCopy for QueryConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1C29402B8(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1C293FE60(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for QueryConfiguration(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1C293FE60(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t sub_1C2A025CC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 1 | (8 * a2);
  return result;
}

uint64_t getEnumTagSinglePayload for QueryConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for QueryConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2A0273CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QueryConfiguration.CodingKeys()
{
  return &type metadata for QueryConfiguration.CodingKeys;
}

unint64_t sub_1C2A02778()
{
  unint64_t result = qword_1EA31EB20;
  if (!qword_1EA31EB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EB20);
  }
  return result;
}

unint64_t sub_1C2A027D0()
{
  unint64_t result = qword_1EBB91CA8;
  if (!qword_1EBB91CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91CA8);
  }
  return result;
}

unint64_t sub_1C2A02828()
{
  unint64_t result = qword_1EBB91CA0;
  if (!qword_1EBB91CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91CA0);
  }
  return result;
}

uint64_t sub_1C2A0287C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6974736974617473 && a2 == 0xEA00000000007363 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C2AB8EB0 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7065656C73 && a2 == 0xE500000000000000 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C2AB8ED0 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C2AB66F0 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6563655274736F6DLL && a2 == 0xEF65676E6152746ELL || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7974697669746361 && a2 == 0xEF7972616D6D7553 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7078456F69647561 && a2 == 0xED0000657275736FLL || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6172676F69647561 && a2 == 0xE90000000000006DLL || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6F43656C706D6173 && a2 == 0xEB00000000746E75 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x756F48646E617473 && a2 == 0xEA00000000007372 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x46676E696F676E6FLL && a2 == 0xEE0073726F746361 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6D6F43746E756F63 && a2 == 0xEF6E6F7369726170 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x69466F6964726163 && a2 == 0xED00007373656E74 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6472754262694661 && a2 == 0xEA00000000006E65 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C2AB8EF0 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x7461777265646E75 && a2 == 0xEF68747065447265 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x4D65636E616C6162 && a2 == 0xEE00736369727465)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else
  {
    char v5 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 17;
    }
    else {
      return 18;
    }
  }
}

Swift::Void __swiftcall SignificantTimeChangeObserving.unregisterForSignificantTimeChanges()()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_name_object_, v0, *MEMORY[0x1E4FB2708], 0);
}

uint64_t QuantityTypeProviding.canonicalUnit.getter(uint64_t a1, uint64_t a2)
{
  int v2 = (void *)(*(uint64_t (**)(void))(a2 + 8))();
  id v3 = objc_msgSend(v2, sel_canonicalUnit);

  if (v3) {
    return (uint64_t)v3;
  }
  uint64_t result = sub_1C2A9E628();
  __break(1u);
  return result;
}

uint64_t dispatch thunk of QuantityTypeProviding.quantityType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

Swift::Double_optional __swiftcall HKStatistics.doubleValue(for:using:)(HealthVisualization::StatisticsOption a1, HKUnit using)
{
  char v8 = *(unsigned char *)a1;
  id v3 = (void *)HKStatistics.quantity(for:)((HealthVisualization::StatisticsOption)&v8);
  char v5 = v3;
  if (v3)
  {
    objc_msgSend(v3, sel_doubleValueForUnit_, using.super.isa);
    char v7 = v6;

    LOBYTE(v3) = v7;
  }
  result.value = v4;
  result.is_nil = (char)v3;
  return result;
}

HKQuantity_optional __swiftcall HKStatistics.quantity(for:)(HealthVisualization::StatisticsOption a1)
{
  switch(*(unsigned char *)a1)
  {
    case 1:
      id v2 = objc_msgSend(v1, sel_minimumQuantity);
      goto LABEL_9;
    case 2:
      id v2 = objc_msgSend(v1, sel_maximumQuantity);
      goto LABEL_9;
    case 3:
      id v2 = objc_msgSend(v1, sel_sumQuantity);
      goto LABEL_9;
    case 4:
      id v2 = objc_msgSend(v1, sel_mostRecentQuantity);
      goto LABEL_9;
    case 5:
    case 6:
      id v2 = objc_msgSend(v1, sel_duration);
      goto LABEL_9;
    case 7:
      id v3 = objc_msgSend(self, sel_countUnit);
      double v4 = (objc_class *)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v3, (double)(uint64_t)objc_msgSend(v1, sel_dataCount));

      goto LABEL_10;
    case 8:
      sub_1C2A9E628();
      __break(1u);
      JUMPOUT(0x1C2A03438);
    default:
      id v2 = objc_msgSend(v1, sel_averageQuantity);
LABEL_9:
      double v4 = (objc_class *)v2;
LABEL_10:
      char v6 = v4;
      result.value.super.isCGFloat a = v6;
      result.is_nil = v5;
      return result;
  }
}

id MostRecentSampleQueryOperation.__allocating_init(sampleType:predicate:name:queryQualityOfService:healthStore:resultHandler:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  id v8 = sub_1C2A04A8C(a1, a2, a3, a4, a5, a6, a7, a8);
  swift_release();
  return v8;
}

void sub_1C2A03494(uint64_t a1, void *a2, void *a3)
{
  Swift::Bool v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

id MostRecentSampleQueryOperationCore.sampleType.getter()
{
  return *(id *)(v0 + qword_1EBB910E0);
}

id sub_1C2A03530()
{
  uint64_t v1 = qword_1EBB910F8;
  id v2 = *(void **)&v0[qword_1EBB910F8];
  if (v2)
  {
    id v3 = *(id *)&v0[qword_1EBB910F8];
  }
  else
  {
    id v4 = sub_1C2A03594(v0);
    Swift::Bool v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2A03594(char *a1)
{
  id v2 = self;
  id v3 = *(void **)&a1[qword_1EBB910E0];
  uint64_t v4 = *(void *)&a1[qword_1EBB91100];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  id v6 = a1;
  v12[4] = sub_1C2A05078;
  v12[5] = v5;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1C2A03494;
  v12[3] = &block_descriptor_4;
  id v7 = _Block_copy(v12);
  swift_release();
  id v8 = objc_msgSend(v2, sel_queryForMostRecentSampleOfType_predicate_completion_, v3, v4, v7);
  _Block_release(v7);
  id v9 = objc_msgSend(v6, sel_name);
  objc_msgSend(v8, sel_setDebugIdentifier_, v9);

  objc_msgSend(v8, sel_setQualityOfService_, *(void *)&v6[qword_1EBB910F0]);
  if (objc_msgSend(v3, sel_code) == (id)248)
  {
    self;
    uint64_t v10 = (void *)swift_dynamicCastObjCClass();
    if (v10) {
      objc_msgSend(v10, sel_setIncludeAutomaticTimeZones_, 1);
    }
  }
  return v8;
}

id MostRecentSampleQueryOperationCore.__allocating_init(sampleType:predicate:name:queryQualityOfService:healthStore:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v13 = objc_allocWithZone(v6);
  return MostRecentSampleQueryOperationCore.init(sampleType:predicate:name:queryQualityOfService:healthStore:)(a1, a2, a3, a4, a5, a6);
}

id MostRecentSampleQueryOperationCore.init(sampleType:predicate:name:queryQualityOfService:healthStore:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  *(void *)&v6[qword_1EBB910F8] = 0;
  *(void *)&v6[qword_1EBB910E0] = a1;
  *(void *)&v6[qword_1EBB91100] = a2;
  *(void *)&v6[qword_1EBB910F0] = a5;
  *(void *)&v6[qword_1EBB910E8] = a6;
  v18.receiver = v6;
  v18.super_class = (Class)type metadata accessor for MostRecentSampleQueryOperationCore();
  id v11 = a1;
  id v12 = a6;
  id v13 = a2;
  id v14 = objc_msgSendSuper2(&v18, sel_init);
  id v15 = v14;
  if (a4)
  {
    uint64_t v16 = (void *)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = 0;
  }
  objc_msgSend(v14, sel_setName_, v16, v18.receiver, v18.super_class);

  return v14;
}

void sub_1C2A03930()
{
  id v1 = objc_msgSend(*(id *)(v0 + qword_1EBB910E0), sel_identifier);
  uint64_t v2 = sub_1C2A9DD28();
  uint64_t v4 = v3;

  v5._uint64_t countAndFlagsBits = 0x676E696E6E7572;
  v5._object = (void *)0xE700000000000000;
  v6._uint64_t countAndFlagsBits = v2;
  v6._object = v4;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v5, v6);
  swift_bridgeObjectRelease();
  id v7 = *(void **)(v0 + qword_1EBB910E8);
  id v8 = sub_1C2A03530();
  objc_msgSend(v7, sel_executeQuery_, v8);
}

void sub_1C2A039F4(void *a1)
{
  id v1 = a1;
  sub_1C2A03930();
}

void sub_1C2A03A3C()
{
  if (objc_msgSend(v0, sel_isCancelled))
  {
    id v1 = objc_msgSend(*(id *)&v0[qword_1EBB910E0], sel_identifier);
    uint64_t v2 = sub_1C2A9DD28();
    uint64_t v4 = v3;

    v5._uint64_t countAndFlagsBits = 0x656C6C65636E6163;
    v5._object = (void *)0xE900000000000064;
    v6._uint64_t countAndFlagsBits = v2;
    v6._object = v4;
    NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v5, v6);
    swift_bridgeObjectRelease();
  }
  id v7 = *(void **)&v0[qword_1EBB910E8];
  id v8 = sub_1C2A03530();
  objc_msgSend(v7, sel_stopQuery_, v8);
}

uint64_t sub_1C2A03B18(void *a1, void *a2)
{
  uint64_t v5 = sub_1C2A9DC28();
  uint64_t v30 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1C2A9E168();
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v26 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C2A9E158();
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = sub_1C2A9DC48();
  uint64_t v28 = *(void *)(v10 - 8);
  uint64_t v29 = v10;
  __n128 v11 = MEMORY[0x1F4188790](v10);
  id v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = (void *)MEMORY[0x1C8764F50](v11);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (!v14)
  {
    v24[2] = sub_1C2A04E50();
    sub_1C2A9DC38();
    aBlock[0] = v15;
    uint64_t v16 = (void (*)(uint64_t))MEMORY[0x1E4FBCC10];
    v24[1] = sub_1C2A04F34(&qword_1EBB92120, MEMORY[0x1E4FBCC10]);
    sub_1C2A04F7C(0, &qword_1EBB920C0, v16);
    sub_1C2A04E90((unint64_t *)&qword_1EBB920C8, &qword_1EBB920C0, v16);
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1C2A9E3A8();
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(v26, *MEMORY[0x1E4FBCC58], v27);
    id v14 = (void *)sub_1C2A9E188();
  }
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v2;
  v17[3] = a2;
  v17[4] = a1;
  aBlock[4] = sub_1C2A04F28;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C296D070;
  aBlock[3] = &block_descriptor_7;
  objc_super v18 = _Block_copy(aBlock);
  id v19 = v2;
  id v20 = a2;
  id v21 = a1;
  sub_1C2A9DC38();
  uint64_t v31 = v15;
  uint64_t v22 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C2A04F34(&qword_1EBB91190, MEMORY[0x1E4FBCB00]);
  sub_1C2A04F7C(0, &qword_1EBB91198, v22);
  sub_1C2A04E90(&qword_1EBB911A0, &qword_1EBB91198, v22);
  sub_1C2A9E3A8();
  MEMORY[0x1C8764010](0, v13, v7, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v29);
  return swift_release();
}

uint64_t sub_1C2A03FD0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1C2A9CA08();
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for MostRecentSampleQueryOperationCore
                                                   + (*MEMORY[0x1E4FBC8C8] & *a1)
                                                   + 96))(a3, a2);
  MEMORY[0x1F4188790](v6);
  return sub_1C2A9CA08();
}

void sub_1C2A040E8(void *a1, unsigned char *a2, void *a3)
{
  if (objc_msgSend(a1, sel_isCancelled))
  {
    v6._object = (void *)0x80000001C2AB6030;
    v6._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    v7._uint64_t countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v6, v7);
LABEL_4:
    *a2 = 1;
    return;
  }
  if (objc_msgSend(a1, sel_isFinished)) {
    goto LABEL_4;
  }
  if (a3)
  {
    swift_getErrorValue();
    id v8 = a3;
    v9._uint64_t countAndFlagsBits = sub_1C2A9E938();
    v10._uint64_t countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    NSOperation.logErrorString(_:withInfo:)(v9, v10);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C2A041D8(uint64_t a1)
{
  id v1 = objc_msgSend(*(id *)(a1 + qword_1EBB910E0), sel_identifier);
  uint64_t v2 = sub_1C2A9DD28();
  uint64_t v4 = v3;

  v5._uint64_t countAndFlagsBits = 0x64656873696E6966;
  v5._object = (void *)0xE800000000000000;
  v6._uint64_t countAndFlagsBits = v2;
  v6._object = v4;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v5, v6);
  return swift_bridgeObjectRelease();
}

void sub_1C2A04268()
{
}

id MostRecentSampleQueryOperationCore.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MostRecentSampleQueryOperationCore.init()()
{
}

void sub_1C2A04360()
{
}

void sub_1C2A043A8()
{
  id v1 = *(void **)(v0 + qword_1EBB910F8);
}

id MostRecentSampleQueryOperationCore.__deallocating_deinit()
{
  return sub_1C2A04824(&class metadata base offset for MostRecentSampleQueryOperationCore, (uint64_t (*)(void, void, void))type metadata accessor for MostRecentSampleQueryOperationCore);
}

void sub_1C2A04428(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + qword_1EBB910F8);
}

uint64_t sub_1C2A04494()
{
  swift_retain();
  sub_1C2A9C9B8();
  swift_release();
  return v1;
}

uint64_t sub_1C2A044E4(void *a1)
{
  return swift_release();
}

id MostRecentSampleQueryOperation.init(sampleType:predicate:name:queryQualityOfService:healthStore:resultHandler:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  id v8 = sub_1C2A04928(a1, a2, a3, a4, a5, a6, a7, a8);
  swift_release();
  return v8;
}

void sub_1C2A045E4()
{
  if (objc_msgSend(v0, sel_isCancelled))
  {
    sub_1C2962438();
    uint64_t v1 = (void *)swift_allocError();
    *uint64_t v2 = 3;
    sub_1C2A044E4(v1);
  }
  sub_1C2A03A3C();
}

void sub_1C2A04648(void *a1, id a2)
{
  if (a2)
  {
    id v4 = a2;
    id v5 = a2;
  }
  else
  {
    if (a1)
    {
      uint64_t v7 = swift_dynamicCastUnknownClass();
      if (v7) {
        id v8 = a1;
      }
    }
    else
    {
      uint64_t v7 = 0;
    }
    id v5 = (id)v7;
  }
  sub_1C2A044E4(v5);
  Swift::String v9 = *(void (**)(void *, void))(v2 + qword_1EBB91048);
  Swift::String v10 = (void *)sub_1C2A04494();
  v9(v10, v11 & 1);
  sub_1C296FAA4(v10);
}

void MostRecentSampleQueryOperation.__allocating_init(sampleType:predicate:name:queryQualityOfService:healthStore:)()
{
}

void MostRecentSampleQueryOperation.init(sampleType:predicate:name:queryQualityOfService:healthStore:)()
{
}

uint64_t sub_1C2A047C0()
{
  swift_release();
  return swift_release();
}

id MostRecentSampleQueryOperation.__deallocating_deinit()
{
  return sub_1C2A04824(&class metadata base offset for MostRecentSampleQueryOperation, (uint64_t (*)(void, void, void))type metadata accessor for MostRecentSampleQueryOperation);
}

id sub_1C2A04824(void *a1, uint64_t (*a2)(void, void, void))
{
  id v3 = (objc_class *)a2(0, *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + *a1), *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + *a1 + 8));
  v5.receiver = v2;
  v5.super_class = v3;
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

uint64_t sub_1C2A048A4()
{
  swift_release();
  return swift_release();
}

uint64_t sub_1C2A048F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1C2A04494();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

id sub_1C2A04928(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = qword_1EBB91050;
  sub_1C2A9E328();
  sub_1C2969188();
  sub_1C2A9E9F8();
  sub_1C2A9C9D8();
  sub_1C2962438();
  swift_allocError();
  *uint64_t v16 = 0;
  uint64_t v17 = v8;
  *(void *)&v8[v15] = sub_1C2A9C9E8();
  objc_super v18 = &v17[qword_1EBB91048];
  *(void *)objc_super v18 = a7;
  *((void *)v18 + 1) = a8;
  swift_retain();

  return MostRecentSampleQueryOperationCore.init(sampleType:predicate:name:queryQualityOfService:healthStore:)(a1, a2, a3, a4, a5, a6);
}

id sub_1C2A04A8C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  id v16 = objc_allocWithZone((Class)type metadata accessor for MostRecentSampleQueryOperation());
  return sub_1C2A04928(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t type metadata accessor for MostRecentSampleQueryOperationCore()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C2A04B44()
{
}

void sub_1C2A04B74()
{
}

uint64_t type metadata accessor for MostRecentSampleQueryOperation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C2A04BBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1C2A04494();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1C2A04BF0(id *a1)
{
  id v1 = *a1;
  sub_1C29B9468(*a1);
  return sub_1C2A044E4(v1);
}

uint64_t sub_1C2A04C38()
{
  return 16;
}

__n128 sub_1C2A04C44(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C2A04C50()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MostRecentSampleQueryOperationCore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MostRecentSampleQueryOperationCore);
}

uint64_t dispatch thunk of MostRecentSampleQueryOperationCore.__allocating_init(sampleType:predicate:name:queryQualityOfService:healthStore:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MostRecentSampleQueryOperationCore + v0 + 80))();
}

uint64_t dispatch thunk of MostRecentSampleQueryOperationCore.queryDidFinish(sample:error:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MostRecentSampleQueryOperationCore
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 96))();
}

uint64_t sub_1C2A04D4C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MostRecentSampleQueryOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MostRecentSampleQueryOperation);
}

uint64_t dispatch thunk of MostRecentSampleQueryOperation.result.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MostRecentSampleQueryOperation
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 56))();
}

uint64_t dispatch thunk of MostRecentSampleQueryOperation.__allocating_init(sampleType:predicate:name:queryQualityOfService:healthStore:resultHandler:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MostRecentSampleQueryOperation + v0 + 80))();
}

unint64_t sub_1C2A04E50()
{
  unint64_t result = qword_1EBB92508;
  if (!qword_1EBB92508)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB92508);
  }
  return result;
}

uint64_t sub_1C2A04E90(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2A04F7C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2A04EE0()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2A04F28()
{
  return sub_1C2A03FD0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C2A04F34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2A04F7C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2A9DEF8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2A04FD0()
{
  sub_1C2A040E8(*(void **)(v0 + 16), *(unsigned char **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1C2A04FDC()
{
  return sub_1C2A041D8(*(void *)(v0 + 16));
}

id sub_1C2A04FE4(uint64_t a1)
{
  char v3 = *(void **)(v1 + 32);
  char v4 = *(unsigned char *)(v1 + 40);
  sub_1C296FAA4(*(id *)a1);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return sub_1C29B9468(v3);
}

uint64_t sub_1C2A05040()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2A05078(void *a1, void *a2)
{
  return sub_1C2A03B18(a1, a2);
}

uint64_t Calendar.lastWeekday.getter()
{
  uint64_t v0 = *(void *)(sub_1C2A9C7A8() + 16);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C2A9C768();
  uint64_t v2 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  BOOL v3 = __OFADD__(v2, v0 - 1);
  uint64_t v4 = v2 + v0 - 1;
  if (v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v0) {
    return v4 % v0 + 1;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t Calendar.Component.rawValue.getter()
{
  uint64_t v1 = sub_1C2A9C858();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16))(v5, v0, v1, v3);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  if (v6 == *MEMORY[0x1E4F27C00]) {
    return 2;
  }
  if (v6 == *MEMORY[0x1E4F27C20]) {
    return 14;
  }
  if (v6 == *MEMORY[0x1E4F27C30]) {
    return 5;
  }
  if (v6 == *MEMORY[0x1E4F27BF0]) {
    return 1;
  }
  if (v6 == *MEMORY[0x1E4F27C10]) {
    return 3;
  }
  if (v6 == *MEMORY[0x1E4F27C48]) {
    return 4;
  }
  if (v6 == *MEMORY[0x1E4F27C50]) {
    return 8;
  }
  if (v6 == *MEMORY[0x1E4F27C68]) {
    return 10;
  }
  if (v6 == *MEMORY[0x1E4F27BE0]) {
    return 11;
  }
  if (v6 == *MEMORY[0x1E4F27C60]) {
    return 7;
  }
  if (v6 == *MEMORY[0x1E4F27BD8]) {
    return 12;
  }
  if (v6 == *MEMORY[0x1E4F27BC0]) {
    return 13;
  }
  if (v6 == *MEMORY[0x1E4F27BE8]) {
    return 15;
  }
  if (v6 == *MEMORY[0x1E4F27BB8]) {
    return 6;
  }
  if (v6 == *MEMORY[0x1E4F27C78]) {
    return 0;
  }
  if (v6 == *MEMORY[0x1E4F27C80]) {
    return 9;
  }
  if (v6 == *MEMORY[0x1E4F27BD0]) {
    return 16;
  }
  uint64_t result = sub_1C2A9E628();
  __break(1u);
  return result;
}

uint64_t Calendar.Component.init(rawValue:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C2A9C858();
  __n128 v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >= 0x11)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
    return v12(a2, 1, 1, v4, v6);
  }
  else
  {
    uint64_t v9 = **((unsigned int **)&unk_1E645A4C8 + a1);
    Swift::String v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 104);
    uint64_t v14 = v5;
    v10(v8, v9, v4, v6);
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v8, v4);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v4);
  }
}

uint64_t sub_1C2A0556C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Calendar.Component.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C2A05574@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Calendar.Component.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C2A0559C()
{
  return sub_1C2A9DE68();
}

uint64_t sub_1C2A055FC()
{
  return sub_1C2A9DE48();
}

unint64_t sub_1C2A0564C()
{
  unint64_t result = qword_1EA31EB28;
  if (!qword_1EA31EB28)
  {
    sub_1C2A9C858();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EB28);
  }
  return result;
}

HealthVisualization::AudioExposureQueryConfiguration __swiftcall AudioExposureQueryConfiguration.init(statistics:)(HealthVisualization::AudioExposureQueryConfiguration statistics)
{
  uint64_t v2 = *(void *)(*(void *)&statistics.statistics.dateRange + 8);
  __int16 v3 = *(_WORD *)(*(void *)&statistics.statistics.dateRange + 16);
  *(unsigned char *)uint64_t v1 = **(unsigned char **)&statistics.statistics.dateRange;
  *(void *)(v1 + 8) = v2;
  *(_WORD *)(v1 + 16) = v3;
  return statistics;
}

uint64_t static AudioExposureQueryConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 16);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 17);
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 17);
  char v8 = *(unsigned char *)a2;
  unsigned __int8 v9 = *(unsigned char *)a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_1C29544B0(v9, v8) & 1) != 0 && (sub_1C2963A48(v2, v5) & 1) != 0 && (sub_1C29546FC(v3, v6))
  {
    char v10 = sub_1C2954904(v4, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10) {
      return 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t AudioExposureQueryConfiguration.statistics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  __int16 v3 = *(_WORD *)(v1 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v1;
  *(void *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2A057B0()
{
  return 0x6974736974617473;
}

uint64_t sub_1C2A057CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6974736974617473 && a2 == 0xEA00000000007363)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C2A9E8D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C2A05870(uint64_t a1)
{
  unint64_t v2 = sub_1C2A05A60();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A058AC(uint64_t a1)
{
  unint64_t v2 = sub_1C2A05A60();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AudioExposureQueryConfiguration.encode(to:)(void *a1)
{
  sub_1C2A05C60(0, &qword_1EBB8F9C0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)&v11 - v6;
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  HIDWORD(v11) = *((unsigned __int16 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A05A60();
  sub_1C2A9EA18();
  char v12 = v8;
  uint64_t v13 = v9;
  __int16 v14 = WORD2(v11);
  sub_1C2A01E6C();
  sub_1C2A9E868();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C2A05A60()
{
  unint64_t result = qword_1EBB91E40;
  if (!qword_1EBB91E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91E40);
  }
  return result;
}

uint64_t AudioExposureQueryConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C2A05C60(0, &qword_1EBB92198, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v13[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A05A60();
  sub_1C2A9EA08();
  if (!v2)
  {
    sub_1C2A02218();
    sub_1C2A9E7A8();
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v10 = v14;
    __int16 v11 = v15;
    *(unsigned char *)a2 = v13[8];
    *(void *)(a2 + 8) = v10;
    *(_WORD *)(a2 + 16) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C2A05C60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C2A05A60();
    unint64_t v7 = a3(a1, &type metadata for AudioExposureQueryConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C2A05CC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioExposureQueryConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C2A05CDC(void *a1)
{
  return AudioExposureQueryConfiguration.encode(to:)(a1);
}

uint64_t sub_1C2A05CF4(uint64_t a1, char *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  __int16 v3 = *(_WORD *)(a1 + 16);
  char v4 = *a2;
  uint64_t v5 = *((void *)a2 + 1);
  __int16 v6 = *((_WORD *)a2 + 8);
  v11[0] = *(unsigned char *)a1;
  uint64_t v12 = v2;
  __int16 v13 = v3;
  v8[0] = v4;
  uint64_t v9 = v5;
  __int16 v10 = v6;
  return _s19HealthVisualization28StatisticsQueryConfigurationV2eeoiySbAC_ACtFZ_0((uint64_t)v11, (uint64_t)v8) & 1;
}

ValueMetadata *type metadata accessor for AudioExposureQueryConfiguration()
{
  return &type metadata for AudioExposureQueryConfiguration;
}

unsigned char *storeEnumTagSinglePayload for AudioExposureQueryConfiguration.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2A05DFCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioExposureQueryConfiguration.CodingKeys()
{
  return &type metadata for AudioExposureQueryConfiguration.CodingKeys;
}

unint64_t sub_1C2A05E38()
{
  unint64_t result = qword_1EA31EB30;
  if (!qword_1EA31EB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EB30);
  }
  return result;
}

unint64_t sub_1C2A05E90()
{
  unint64_t result = qword_1EBB91E50;
  if (!qword_1EBB91E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91E50);
  }
  return result;
}

unint64_t sub_1C2A05EE8()
{
  unint64_t result = qword_1EBB91E48;
  if (!qword_1EBB91E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91E48);
  }
  return result;
}

uint64_t static SampleCountQueryConfiguration.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1C2A05F48(uint64_t a1)
{
  unint64_t v2 = sub_1C2A06128();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A05F84(uint64_t a1)
{
  unint64_t v2 = sub_1C2A06128();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SampleCountQueryConfiguration.encode(to:)(void *a1)
{
  sub_1C2A060CC();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  __int16 v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A06128();
  sub_1C2A9EA18();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1C2A060CC()
{
  if (!qword_1EBB8F9B8)
  {
    sub_1C2A06128();
    unint64_t v0 = sub_1C2A9E878();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8F9B8);
    }
  }
}

unint64_t sub_1C2A06128()
{
  unint64_t result = qword_1EBB8F4E8;
  if (!qword_1EBB8F4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8F4E8);
  }
  return result;
}

uint64_t SampleCountQueryConfiguration.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1C2A061A4(void *a1)
{
  sub_1C2A060CC();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  __int16 v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A06128();
  sub_1C2A9EA18();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for SampleCountQueryConfiguration()
{
  return &type metadata for SampleCountQueryConfiguration;
}

ValueMetadata *type metadata accessor for SampleCountQueryConfiguration.CodingKeys()
{
  return &type metadata for SampleCountQueryConfiguration.CodingKeys;
}

unint64_t sub_1C2A062D4()
{
  unint64_t result = qword_1EBB8F4F8;
  if (!qword_1EBB8F4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8F4F8);
  }
  return result;
}

unint64_t sub_1C2A0632C()
{
  unint64_t result = qword_1EBB8F4F0;
  if (!qword_1EBB8F4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8F4F0);
  }
  return result;
}

void sub_1C2A06380()
{
  if ((*(void *)(v0 + 64) & 0xFE00000000 | 0x100000000) != 0x300000000)
  {
    DiagramConfiguration.TextAttributes.toTextAttributes()();
    uint64_t v1 = (void *)sub_1C2A9DCF8();
    type metadata accessor for Key(0);
    sub_1C293B0B0((unint64_t *)&qword_1EBB91B90, type metadata accessor for Key);
    uint64_t v2 = (void *)sub_1C2A9DC58();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_sizeWithAttributes_, v2);
  }
}

double sub_1C2A064B4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  double result = 0.0;
  if (v1)
  {
    uint64_t v3 = v0;
    if ((unint64_t)*(unsigned __int8 *)(v0 + 68) << 32 != 0x300000000)
    {
      unint64_t v4 = *(unsigned int *)(v0 + 72) | ((unint64_t)*(unsigned __int16 *)(v0 + 76) << 32);
      if ((*(_DWORD *)(v0 + 72) & 0xFF000000) != 0x2000000)
      {
        swift_bridgeObjectRetain();
        DiagramConfiguration.TextAttributes.toTextAttributes()();
        uint64_t v5 = sub_1C295AEB0(v1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v6 = sub_1C295AE6C(v5);
        char v8 = v7;
        swift_bridgeObjectRelease();
        double v9 = *(double *)&v6;
        double v10 = 0.0;
        if (v8) {
          double v9 = 0.0;
        }
        double v11 = 0.0;
        if ((*(unsigned char *)(v3 + 168) & 1) == 0) {
          double v11 = *(double *)(v3 + 152);
        }
        if ((v4 & 0xFF00000000) == 0) {
          double v10 = 7.0;
        }
        return v10 + v9 + 2.0 + v11;
      }
    }
  }
  return result;
}

void sub_1C2A065F8(CGContext *a1, double *a2, unsigned char *a3, uint64_t *a4, double a5, double a6)
{
  CGFloat v8 = a2[1];
  CGFloat v9 = a2[2];
  CGFloat v11 = a2[3];
  CGFloat v10 = a2[4];
  CGFloat v12 = a2[5];
  CGFloat v13 = a2[6];
  char v14 = a3[1];
  char v15 = a3[3];
  int v16 = a3[4];
  uint64_t v17 = (char)a3[5];
  int v18 = (char)a3[6];
  uint64_t v49 = *a4;
  v64.CGFloat x = sub_1C293CBC4();
  CGFloat v54 = v9;
  CGFloat v55 = v8;
  v63.CGFloat a = v8;
  v63.CGFloat b = v9;
  CGFloat v53 = v11;
  v63.CGFloat c = v11;
  v63.CGFloat d = v10;
  v63.CGFloat tx = v12;
  v63.CGFloat ty = v13;
  double v19 = 0.0;
  v64.double y = 0.0;
  *(void *)&double v20 = *(_OWORD *)&CGPointApplyAffineTransform(v64, &v63);
  if ((*(unsigned char *)(v6 + 168) & 1) == 0) {
    double v19 = *(double *)(v6 + 152);
  }
  if (v17 && v17 != 1) {
    char v51 = 1;
  }
  else {
    char v51 = sub_1C2A9E8D8();
  }
  swift_bridgeObjectRelease();
  if (v18 && v18 != 1) {
    char v50 = 1;
  }
  else {
    char v50 = sub_1C2A9E8D8();
  }
  swift_bridgeObjectRelease();
  float v21 = flt_1C2AAC964[v17];
  LOBYTE(v63.a) = v14;
  DiagramConfiguration.TextAttributes.toTextAttributes()();
  Mutable = CGPathCreateMutable();
  uint64_t v23 = *(void *)(v49 + 16);
  if (!v23)
  {
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  int v46 = v16;
  char v47 = v15;
  uint64_t v48 = a1;
  float v24 = -2.0;
  if (v16) {
    float v24 = -1.0;
  }
  float v25 = (float)(v21 + v24) * 0.5;
  if ((float)(v21 + v24) < 0.0) {
    float v25 = 0.0;
  }
  double v26 = v20 - v19 - v25 + -2.0;
  uint64_t v27 = (unint64_t *)(swift_bridgeObjectRetain() + 56);
  do
  {
    uint64_t v31 = *(v27 - 2);
    unint64_t v32 = *v27;
    *(void *)&v65.double y = *(v27 - 1);
    v56.CGFloat a = v55;
    v56.CGFloat b = v54;
    v56.CGFloat c = v53;
    v56.CGFloat d = v10;
    v56.CGFloat tx = v12;
    v56.CGFloat ty = v13;
    v65.CGFloat x = 0.0;
    double y = CGPointApplyAffineTransform(v65, &v56).y;
    if (v32 >= 2)
    {
      if (v32 != 2)
      {
        sub_1C2A9E628();
        __break(1u);
        return;
      }
      if (v50)
      {
LABEL_26:
        swift_bridgeObjectRetain();
        if (v31) {
          goto LABEL_30;
        }
        goto LABEL_19;
      }
      v63.CGFloat b = 0.0;
      v63.CGFloat c = 0.0;
      v63.CGFloat a = 1.0;
      v63.CGFloat d = 1.0;
      v63.CGFloat tx = 0.0;
      v63.CGFloat ty = 0.0;
      swift_bridgeObjectRetain();
      sub_1C2A9E0F8();
    }
    else
    {
      if (v51) {
        goto LABEL_26;
      }
      uint64_t v58 = 0;
      uint64_t v59 = 0;
      uint64_t v57 = 0x3FF0000000000000;
      uint64_t v60 = 0x3FF0000000000000;
      uint64_t v61 = 0;
      uint64_t v62 = 0;
      swift_bridgeObjectRetain();
      sub_1C2A9E0F8();
    }
    sub_1C2A9E118();
    if (v31)
    {
LABEL_30:
      uint64_t v34 = (void *)sub_1C2A9DCF8();
      type metadata accessor for Key(0);
      sub_1C293B0B0((unint64_t *)&qword_1EBB91B90, type metadata accessor for Key);
      char v35 = (void *)sub_1C2A9DC58();
      objc_msgSend(v34, sel_sizeWithAttributes_, v35);
      double v37 = v36;
      double v39 = v38;

      double v40 = v39 * 0.5;
      double v41 = y - v39 * 0.5;
      double v42 = y + v40;
      if (v41 >= 0.0)
      {
        double v28 = 0.0;
        if (v42 > a6) {
          goto LABEL_34;
        }
      }
      else if (v42 <= a6)
      {
        double v28 = 0.0 - v41;
      }
      else
      {
LABEL_34:
        double v28 = a6 - v42;
      }
      uint64_t v29 = (void *)sub_1C2A9DCF8();
      swift_bridgeObjectRelease();
      uint64_t v30 = (void *)sub_1C2A9DC58();
      objc_msgSend(v29, sel_drawAtPoint_withAttributes_, v30, v26 - v37, v41 + v28);
    }
LABEL_19:
    v27 += 5;
    --v23;
  }
  while (v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1 = v48;
  int v16 = v46;
  char v15 = v47;
LABEL_37:
  if (!CGPathIsEmpty(Mutable))
  {
    CGContextSetBlendMode(a1, kCGBlendModeNormal);
    CGContextSetLineCap(a1, kCGLineCapRound);
    double v43 = 2.0;
    if (v16) {
      double v43 = 1.0;
    }
    CGContextSetLineWidth(a1, v43);
    LOBYTE(v56.a) = v15;
    isCGFloat a = DiagramConfiguration.Color.toColor()().super.isa;
    unint64_t v45 = (CGColor *)[(objc_class *)isa CGColor];

    CGContextSetStrokeColorWithColor(a1, v45);
    CGContextAddPath(a1, Mutable);
    CGContextStrokePath(a1);
  }
}

uint64_t DiagramAxis.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t method lookup function for DiagramAxis(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DiagramAxis);
}

uint64_t sub_1C2A06C00(char *__src, double *a2, char *a3, double *__dst)
{
  unint64_t v4 = __dst;
  uint64_t v5 = a3;
  uint64_t v6 = (char *)a2;
  char v7 = __src;
  int64_t v8 = (char *)a2 - __src;
  int64_t v9 = ((char *)a2 - __src) / 40;
  uint64_t v10 = a3 - (char *)a2;
  uint64_t v11 = (a3 - (char *)a2) / 40;
  uint64_t v31 = __src;
  uint64_t v30 = __dst;
  if (v9 >= v11)
  {
    if (v10 < -39) {
      goto LABEL_43;
    }
    uint64_t v19 = 5 * v11;
    if (__dst != a2 || &a2[v19] <= __dst) {
      memmove(__dst, a2, 40 * v11);
    }
    double v20 = (char *)&v4[v19];
    uint64_t v29 = (char *)&v4[v19];
    uint64_t v31 = v6;
    if (v7 >= v6 || v10 < 40)
    {
LABEL_42:
      sub_1C2A070C0((void **)&v31, (const void **)&v30, &v29);
      return 1;
    }
    while (1)
    {
      if (*((float *)v20 - 2) == *((float *)v6 - 2))
      {
        unint64_t v21 = (unint64_t)(v5 - 40);
        if (*((double *)v20 - 3) < *((double *)v6 - 3)) {
          goto LABEL_30;
        }
      }
      else
      {
        type metadata accessor for UILayoutPriority(0);
        sub_1C293B0B0(&qword_1EBB8FAB8, type metadata accessor for UILayoutPriority);
        char v25 = sub_1C2A9DCB8();
        unint64_t v21 = (unint64_t)(v5 - 40);
        if (v25)
        {
LABEL_30:
          uint64_t v22 = v6 - 40;
          if (v5 != v6 || v21 >= (unint64_t)v6)
          {
            long long v23 = *(_OWORD *)v22;
            long long v24 = *(_OWORD *)(v6 - 24);
            *(void *)(v21 + 32) = *((void *)v6 - 1);
            *(_OWORD *)unint64_t v21 = v23;
            *(_OWORD *)(v21 + 16) = v24;
          }
          uint64_t v31 = v6 - 40;
          if (v22 <= v7) {
            goto LABEL_42;
          }
          goto LABEL_41;
        }
      }
      uint64_t v29 = v20 - 40;
      if (v5 < v20 || v21 >= (unint64_t)v20 || v5 != v20)
      {
        long long v26 = *(_OWORD *)(v20 - 40);
        long long v27 = *(_OWORD *)(v20 - 24);
        *(void *)(v21 + 32) = *((void *)v20 - 1);
        *(_OWORD *)unint64_t v21 = v26;
        *(_OWORD *)(v21 + 16) = v27;
      }
      uint64_t v22 = v6;
      v20 -= 40;
      if (v6 <= v7) {
        goto LABEL_42;
      }
LABEL_41:
      uint64_t v6 = v22;
      uint64_t v5 = (char *)v21;
      if (v20 <= (char *)v4) {
        goto LABEL_42;
      }
    }
  }
  if (v8 >= -39)
  {
    size_t v12 = 5 * v9;
    if (__dst != (double *)__src || &__src[v12 * 8] <= (char *)__dst) {
      memmove(__dst, __src, v12 * 8);
    }
    CGFloat v13 = (char *)&v4[v12];
    uint64_t v29 = (char *)&v4[v12];
    if (v6 < v5 && v8 >= 40)
    {
      while (1)
      {
        if (*((float *)v6 + 8) == *((float *)v4 + 8))
        {
          if (*((double *)v6 + 2) >= v4[2]) {
            goto LABEL_15;
          }
        }
        else
        {
          type metadata accessor for UILayoutPriority(0);
          sub_1C293B0B0(&qword_1EBB8FAB8, type metadata accessor for UILayoutPriority);
          if ((sub_1C2A9DCB8() & 1) == 0)
          {
LABEL_15:
            if (v7 != (char *)v4 || v7 >= (char *)v4 + 40)
            {
              long long v17 = *(_OWORD *)v4;
              long long v18 = *((_OWORD *)v4 + 1);
              *((double *)v7 + 4) = v4[4];
              *(_OWORD *)char v7 = v17;
              *((_OWORD *)v7 + 1) = v18;
            }
            uint64_t v30 = v4 + 5;
            char v14 = v6;
            v4 += 5;
            goto LABEL_19;
          }
        }
        char v14 = v6 + 40;
        if (v7 < v6 || v7 >= v14 || v7 != v6)
        {
          long long v15 = *(_OWORD *)v6;
          long long v16 = *((_OWORD *)v6 + 1);
          *((void *)v7 + 4) = *((void *)v6 + 4);
          *(_OWORD *)char v7 = v15;
          *((_OWORD *)v7 + 1) = v16;
        }
LABEL_19:
        v7 += 40;
        if (v4 < (double *)v13)
        {
          uint64_t v6 = v14;
          if (v14 < v5) {
            continue;
          }
        }
        uint64_t v31 = v7;
        goto LABEL_42;
      }
    }
    goto LABEL_42;
  }
LABEL_43:
  uint64_t result = sub_1C2A9E6A8();
  __break(1u);
  return result;
}

char *sub_1C2A06F98(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2941634(0, &qword_1EA31E1E8, (uint64_t (*)(uint64_t))sub_1C297A9F8, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  CGFloat v13 = v10 + 32;
  char v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C2A070C0(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    uint64_t result = (char *)sub_1C2A9E6A8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 40 * (v4 / 40);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1C2A07188(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    uint64_t result = (char *)sub_1C2A9E6A8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
    {
      return (char *)memmove(result, v3, 40 * v6);
    }
  }
  return result;
}

char *sub_1C2A07254(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1C2A9E6A8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_1C2A07310(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_1C2A9E6A8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 24 * (v4 / 24);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1C2A073DC(uint64_t a1)
{
  return sub_1C2A06F98(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C2A073F0(uint64_t a1)
{
  return sub_1C2978E98(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C2A07404(uint64_t a1)
{
  return sub_1C2978D18(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C2A07418(uint64_t a1)
{
  return sub_1C2979A78(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *StatisticsCollectionQueryOperation.__allocating_init(sampleType:configuration:configurationOverrides:name:queryQualityOfService:healthStore:environment:resultHandler:)(char *a1, unsigned __int8 *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char *a7, char a8, unsigned int (*a9)(void, void, void), uint64_t a10)
{
  int v17 = a8 & 1;
  id v18 = objc_allocWithZone(v10);
  return StatisticsCollectionQueryOperation.init(sampleType:configuration:configurationOverrides:name:queryQualityOfService:healthStore:environment:resultHandler:)(a1, a2, a3, a4, a5, a6, a7, v17, a9, a10);
}

uint64_t sub_1C2A074C8@<X0>(uint64_t a1@<X8>)
{
  swift_retain();
  sub_1C2A9C9B8();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_1C2A07528(id *a1)
{
  id v1 = *a1;
  sub_1C29B9468(*a1);
  swift_retain();
  sub_1C2A9C9C8();
  sub_1C296FAA4(v1);
  return swift_release();
}

uint64_t sub_1C2A075B8()
{
  swift_retain();
  sub_1C2A9C9B8();
  swift_release();
  return v1;
}

id StatisticsCollectionQueryOperation.query.getter()
{
  return *(id *)(v0 + qword_1EBB9F1B8);
}

char *StatisticsCollectionQueryOperation.init(sampleType:configuration:configurationOverrides:name:queryQualityOfService:healthStore:environment:resultHandler:)(char *a1, unsigned __int8 *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char *a7, int a8, unsigned int (*a9)(void, void, void), uint64_t a10)
{
  int64_t v11 = v10;
  LODWORD(v232) = a8;
  uint64_t v248 = a7;
  uint64_t v227 = a6;
  uint64_t v231 = a5;
  id v235 = a4;
  uint64_t v251 = a3;
  v224 = a1;
  uint64_t v242 = a10;
  uint64_t v236 = a9;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v222 = sub_1C2A9CF58();
  uint64_t v221 = *(void *)(v222 - 8);
  MEMORY[0x1F4188790](v222);
  v220 = (char *)&v203 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v229 = v13;
  MEMORY[0x1F4188790](v14);
  v238 = (char *)&v203 - v15;
  uint64_t ConfigurationOverrides = type metadata accessor for StatisticsQueryConfigurationOverrides();
  object = *(void **)(ConfigurationOverrides - 8);
  MEMORY[0x1F4188790](ConfigurationOverrides);
  uint64_t v205 = (uint64_t)&v203 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = sub_1C2A9CFE8();
  uint64_t v212 = *(void *)(v213 - 8);
  MEMORY[0x1F4188790](v213);
  uint64_t v230 = (char *)&v203 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v241 = sub_1C2A9C468();
  uint64_t v240 = *(void *)(v241 - 8);
  MEMORY[0x1F4188790](v241);
  uint64_t v244 = (char *)&v203 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2A09EBC(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v217 = (char *)&v203 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  v234 = (char *)&v203 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v237 = (uint64_t)&v203 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v204 = (uint64_t)&v203 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v203 = (uint64_t)&v203 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v214 = (uint64_t)&v203 - v31;
  MEMORY[0x1F4188790](v32);
  v218 = (uint64_t *)((char *)&v203 - v33);
  uint64_t v245 = sub_1C2A9C398();
  uint64_t v247 = *(unsigned int (***)(void, void, void))(v245 - 8);
  MEMORY[0x1F4188790](v245);
  v210 = (char *)&v203 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v35);
  v211 = (char *)&v203 - v36;
  sub_1C2A09EBC(0, &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides, v19);
  MEMORY[0x1F4188790](v37 - 8);
  uint64_t v219 = (uint64_t)&v203 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v39);
  uint64_t v208 = (uint64_t)&v203 - v40;
  MEMORY[0x1F4188790](v41);
  uint64_t v206 = (uint64_t)&v203 - v42;
  MEMORY[0x1F4188790](v43);
  v223 = (char *)&v203 - v44;
  uint64_t v250 = sub_1C2A9C6E8();
  v252 = *(char **)(v250 - 8);
  MEMORY[0x1F4188790](v250);
  v228 = (char *)&v203 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v46);
  uint64_t v243 = (char *)&v203 - v47;
  MEMORY[0x1F4188790](v48);
  uint64_t v209 = (char *)&v203 - v49;
  MEMORY[0x1F4188790](v50);
  uint64_t v239 = (char *)&v203 - v51;
  MEMORY[0x1F4188790](v52);
  CGFloat v54 = (char *)&v203 - v53;
  int v55 = *a2;
  uint64_t v56 = *((void *)a2 + 1);
  int v57 = a2[16];
  uint64_t v58 = (void *)a2[17];
  uint64_t v59 = qword_1EBB91EE0;
  sub_1C2962438();
  uint64_t v60 = swift_allocError();
  *uint64_t v61 = 0;
  uint64_t aBlock = v60;
  LOBYTE(v255) = 1;
  sub_1C2A09EBC(0, (unint64_t *)&qword_1EBB91C40, (uint64_t (*)(uint64_t))sub_1C2A09F20, MEMORY[0x1E4F674D8]);
  swift_allocObject();
  uint64_t v62 = v11;
  CGAffineTransform v63 = v11;
  *(void *)&v62[v59] = sub_1C2A9C9F8();
  CGPoint v64 = (uint64_t *)&v63[qword_1EBB9F1A8];
  uint64_t *v64 = 0;
  v64[1] = 0;
  CGPoint v65 = v224;
  *(void *)&v63[qword_1EBB91ED0] = v224;
  CGRect v66 = &v63[qword_1EBB91ED8];
  int v215 = v55;
  char *v66 = v55;
  *((void *)v66 + 1) = v56;
  int v225 = v57;
  v66[16] = v57;
  id v226 = v58;
  v66[17] = (char)v58;
  uint64_t v67 = v251;
  sub_1C2A0A06C(v251, (uint64_t)&v63[qword_1EBB9F1B0], &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides);
  uint64_t v233 = v63;
  CGRect v68 = v248;
  *(void *)&v63[qword_1EBB9F1A0] = v248;
  uint64_t v69 = *v64;
  uint64_t v70 = v242;
  uint64_t *v64 = (uint64_t)v236;
  v64[1] = v70;
  CGRect v71 = v65;
  uint64_t v72 = (uint64_t)v223;
  uint64_t v216 = v71;
  swift_bridgeObjectRetain();
  CGRect v73 = v68;
  swift_retain();
  sub_1C29B34B0(v69);
  uint64_t v248 = v54;
  CGRect v74 = v247;
  _s19HealthVisualization25PresentationDateProvidingPAAE012presentationD010Foundation0D0VvgZ_0();
  uint64_t v75 = v67;
  uint64_t v76 = v245;
  sub_1C2A0A06C(v75, v72, &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides);
  long long v77 = (unsigned int (*)(void, void, void))object[6];
  object += 6;
  uint64_t v236 = v77;
  unsigned int v78 = v77(v72, 1, ConfigurationOverrides);
  v224 = v73;
  if (v78 == 1)
  {
    sub_1C2A09FB0(v72, &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides);
    id v79 = 0;
    uint64_t v80 = v250;
    unint64_t v81 = v252;
  }
  else
  {
    uint64_t v82 = (void (*)(void, void, void))v218;
    sub_1C2A0A06C(v72, (uint64_t)v218, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
    if (v74[6](v82, 1, v76) == 1)
    {
      sub_1C2A09FB0((uint64_t)v82, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
      id v79 = *(id *)(v72 + *(int *)(ConfigurationOverrides + 20));
      uint64_t v80 = v250;
      unint64_t v81 = v252;
      if (v79) {
        id v83 = v79;
      }
      sub_1C29B98C8(v72);
      uint64_t v76 = v245;
    }
    else
    {
      uint64_t v84 = v211;
      ((unsigned int (**)(char *, void, uint64_t))v74)[4](v211, v82, v76);
      uint64_t v85 = self;
      uint64_t v86 = (void *)sub_1C2A9C318();
      id v79 = objc_msgSend(v85, sel_predicateForSamplesWithinDateInterval_options_, v86, 0);

      ((void (*)(char *, uint64_t))v74[1])(v84, v76);
      uint64_t v87 = *(void **)(v72 + *(int *)(ConfigurationOverrides + 20));
      uint64_t v80 = v250;
      unint64_t v81 = v252;
      if (v87)
      {
        sub_1C296B238();
        uint64_t v88 = swift_allocObject();
        *(_OWORD *)(v88 + 16) = xmmword_1C2AAA110;
        *(void *)(v88 + 32) = v79;
        *(void *)(v88 + 40) = v87;
        uint64_t aBlock = v88;
        sub_1C2A9DEA8();
        sub_1C29376D4(0, (unint64_t *)&qword_1EBB8E090);
        id v89 = v87;
        id v90 = v79;
        uint64_t v91 = (void *)sub_1C2A9DE88();
        swift_bridgeObjectRelease();
        id v79 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v91);
      }
      sub_1C29B98C8(v72);
    }
  }
  uint64_t v92 = v239;
  unint64_t v93 = (uint64_t *)*((void *)v81 + 2);
  v223 = v81 + 16;
  v218 = v93;
  ((void (*)(char *, char *, uint64_t))v93)(v239, v248, v80);
  if (!v79)
  {
    uint64_t v94 = v214;
    DateRange.dateInterval(endingAt:)(v92, v215, v214);
    uint64_t v95 = v247;
    if (v247[6](v94, 1, v76) == 1)
    {
      sub_1C2A09FB0(v94, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
      id v79 = 0;
    }
    else
    {
      uint64_t v96 = v210;
      ((unsigned int (**)(char *, uint64_t, uint64_t))v95)[4](v210, v94, v76);
      v252 = (char *)self;
      uint64_t v97 = v209;
      sub_1C2A9C378();
      uint64_t v98 = (void *)sub_1C2A9C658();
      uint64_t v99 = (void (*)(void, void))*((void *)v81 + 1);
      v99(v97, v250);
      sub_1C2A9C348();
      uint64_t v100 = (void *)sub_1C2A9C658();
      v99(v97, v250);
      uint64_t v92 = v239;
      id v79 = objc_msgSend(v252, sel_predicateForSamplesWithStartDate_endDate_options_, v98, v100, 0);

      uint64_t v80 = v250;
      ((void (*)(char *, uint64_t))v95[1])(v96, v76);
    }
  }
  int v101 = v232 & 1;
  uint64_t v103 = (char *)*((void *)v81 + 1);
  uint64_t v102 = v81 + 8;
  uint64_t v239 = v103;
  ((void (*)(char *, uint64_t))v103)(v92, v80);
  uint64_t v104 = *(void *)(v56 + 16);
  if (v104)
  {
    swift_bridgeObjectRetain();
    uint64_t v105 = 0;
    uint64_t v106 = 0;
    id v107 = v226;
    char v108 = v225;
    while (2)
    {
      uint64_t v109 = *(unsigned __int8 *)(v56 + v106++ + 32);
      switch(v109)
      {
        case 1:
          if ((v105 & 4) == 0)
          {
            uint64_t v110 = 4;
            goto LABEL_16;
          }
          goto LABEL_17;
        case 2:
          if ((v105 & 8) == 0)
          {
            uint64_t v110 = 8;
            goto LABEL_16;
          }
          goto LABEL_17;
        case 3:
          if ((v105 & 0x10) == 0)
          {
            uint64_t v110 = 16;
            goto LABEL_16;
          }
          goto LABEL_17;
        case 4:
          if ((v105 & 0x20) == 0)
          {
            uint64_t v110 = 32;
            goto LABEL_16;
          }
          goto LABEL_17;
        case 5:
          if ((v105 & 0x40) == 0)
          {
            uint64_t v110 = 64;
            goto LABEL_16;
          }
          goto LABEL_17;
        case 6:
          uint64_t v110 = _HKStatisticOptionsAverageSampleDuration();
          goto LABEL_36;
        case 7:
          uint64_t v110 = _HKStatisticsOptionPresence();
          goto LABEL_36;
        case 8:
          uint64_t v110 = _HKStatisticsOptionBaselineRelativeQuantities();
          goto LABEL_36;
        case 9:
          uint64_t v111 = _HKStatisticsOptionAttenuateSamples();
          if ((v111 & 0xFFFFFFFFFFFFFFFDLL) == 0) {
            goto LABEL_30;
          }
          uint64_t v110 = v111 | 2;
LABEL_36:
          if ((v110 & ~v105) == 0) {
            goto LABEL_17;
          }
          goto LABEL_16;
        default:
LABEL_30:
          if ((v105 & 2) != 0) {
            goto LABEL_17;
          }
          uint64_t v110 = 2;
LABEL_16:
          v105 |= v110;
LABEL_17:
          if (v104 != v106) {
            continue;
          }
          swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  else
  {
    uint64_t v105 = 0;
    id v107 = v226;
    char v108 = v225;
  }
  LOBYTE(aBlock) = v108;
  AnchorDate.date.getter();
  LODWORD(v214) = v101;
  switch((unint64_t)v107)
  {
    case 1uLL:
      uint64_t v112 = v102;
      if (qword_1EBB92318 != -1) {
        swift_once();
      }
      uint64_t v113 = qword_1EBB91BF0;
      break;
    case 2uLL:
      uint64_t v112 = v102;
      if (qword_1EBB8E230 != -1) {
        swift_once();
      }
      uint64_t v113 = qword_1EBB8DEB8;
      break;
    case 3uLL:
      uint64_t v112 = v102;
      if (qword_1EBB8E118 != -1) {
        swift_once();
      }
      uint64_t v113 = qword_1EBB8DEE8;
      break;
    case 4uLL:
      uint64_t v112 = v102;
      if (qword_1EBB8E238 != -1) {
        swift_once();
      }
      uint64_t v113 = qword_1EBB8DED0;
      break;
    default:
      uint64_t v112 = v102;
      if (qword_1EBB90258 != -1) {
        swift_once();
      }
      uint64_t v113 = qword_1EBB90270;
      break;
  }
  uint64_t v114 = v216;
  uint64_t v115 = v241;
  uint64_t v116 = __swift_project_value_buffer(v241, (uint64_t)v113);
  (*(void (**)(char *, uint64_t, uint64_t))(v240 + 16))(v244, v116, v115);
  id v117 = objc_allocWithZone(MEMORY[0x1E4F2B5C8]);
  id v118 = v79;
  uint64_t v119 = v114;
  uint64_t v120 = (void *)sub_1C2A9C658();
  uint64_t v121 = (void *)sub_1C2A9C3B8();
  id v122 = objc_msgSend(v117, sel_initWithSampleType_samplePredicate_options_anchorDate_intervalComponents_, v119, v118, v105, v120, v121);
  v232 = v119;

  id v226 = v118;
  uint64_t v123 = qword_1EBB9F1B8;
  uint64_t v124 = v233;
  *(void *)&v233[qword_1EBB9F1B8] = v122;
  uint64_t v125 = v231;
  if (v231)
  {
    id v126 = v122;
    swift_bridgeObjectRetain();
    uint64_t v127 = (void *)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v128 = v122;
    uint64_t v127 = 0;
  }
  uint64_t v129 = (uint64_t)v234;
  char v130 = v230;
  uint64_t v131 = v227;
  objc_msgSend(v122, sel_setDebugIdentifier_, v127);

  objc_msgSend(*(id *)&v124[v123], sel_setQualityOfService_, v131);
  unsigned int v132 = objc_msgSend(self, sel_isAppleInternalInstall);
  v252 = v112;
  if (v132)
  {
    sub_1C29376D4(0, (unint64_t *)&qword_1EBB8FFA0);
    uint64_t v133 = (void *)sub_1C2A9E0E8();
    uint64_t v134 = (void *)sub_1C2A9DCF8();
    unsigned int v135 = objc_msgSend(v133, sel_BOOLForKey_, v134);

    if (v135)
    {
      sub_1C2A9CF68();
      unint64_t v136 = sub_1C2A9CFC8();
      os_log_type_t v137 = sub_1C2A9E0C8();
      if (os_log_type_enabled(v136, v137))
      {
        uint64_t v138 = (uint8_t *)swift_slowAlloc();
        uint64_t v139 = swift_slowAlloc();
        uint64_t aBlock = v139;
        *(_DWORD *)uint64_t v138 = 136446210;
        uint64_t v140 = sub_1C2A9EA58();
        uint64_t v253 = sub_1C2957168(v140, v141, &aBlock);
        uint64_t v129 = (uint64_t)v234;
        sub_1C2A9E358();
        uint64_t v124 = v233;
        uint64_t v125 = v231;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C292A000, v136, v137, "[%{public}s] Manually enabling query caching due to override", v138, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87656F0](v139, -1, -1);
        MEMORY[0x1C87656F0](v138, -1, -1);

        (*(void (**)(char *, uint64_t))(v212 + 8))(v230, v213);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v212 + 8))(v130, v213);
      }
      if (v236(v251, 1, ConfigurationOverrides) == 1) {
        goto LABEL_67;
      }
      uint64_t v142 = v206;
      sub_1C2A0A06C(v251, v206, &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides);
      uint64_t v143 = ConfigurationOverrides;
      if (v236(v142, 1, ConfigurationOverrides) == 1)
      {
        __break(1u);
        JUMPOUT(0x1C2A0931CLL);
      }
      int v144 = *(unsigned __int8 *)(v142 + *(int *)(v143 + 24));
      sub_1C29B98C8(v142);
      if (v144 == 1)
      {
LABEL_67:
        uint64_t aBlock = 0;
        unint64_t v255 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1C2A9DDB8();
        swift_bridgeObjectRelease();
        sub_1C2A9DDB8();
        id v145 = objc_msgSend(v232, sel_identifier);
        sub_1C2A9DD28();

        sub_1C2A9DDB8();
        swift_bridgeObjectRelease();
        sub_1C2A9DDB8();
        DateComponents.stringWithNonLocalizedAbbreviatedFormat()();
        sub_1C2A9DDB8();
        swift_bridgeObjectRelease();
        BOOL v146 = (sub_1C2A9C9A8() & 1) == 0;
        uint64_t v147 = v124;
        uint64_t v148 = *(void **)&v124[v123];
        id v149 = objc_allocWithZone(MEMORY[0x1E4F2B5C0]);
        id v150 = v148;
        uint64_t v151 = (void *)sub_1C2A9DCF8();
        swift_bridgeObjectRelease();
        id v152 = objc_msgSend(v149, sel_initWithIdentifier_mode_, v151, v146);

        objc_msgSend(v150, sel_setCacheSettings_, v152);
        uint64_t v153 = v208;
        sub_1C2A0A06C(v251, v208, &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides);
        if (v236(v153, 1, ConfigurationOverrides) == 1)
        {
          sub_1C2A09FB0(v153, &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides);
          id v154 = *(id *)&v147[v123];
          uint64_t v155 = v203;
          DateRange.dateInterval(endingAt:)(v248, v215, v203);
          v156 = v247;
          uint64_t v157 = v245;
          if (v247[6](v155, 1, v245) == 1)
          {
            long long v158 = 0;
          }
          else
          {
            long long v158 = (void *)sub_1C2A9C318();
            ((void (*)(uint64_t, uint64_t))v156[1])(v155, v157);
          }
          uint64_t v129 = (uint64_t)v234;
          objc_msgSend(v154, sel_setDateInterval_, v158);
        }
        else
        {
          uint64_t v159 = v205;
          sub_1C2A0A2A8(v153, v205);
          long long v160 = *(void **)&v147[v123];
          uint64_t v161 = v204;
          sub_1C2A0A06C(v159, v204, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
          v162 = v247;
          uint64_t v163 = v245;
          if (v247[6](v161, 1, v245) == 1)
          {
            v164 = 0;
          }
          else
          {
            v164 = (void *)sub_1C2A9C318();
            ((void (*)(uint64_t, uint64_t))v162[1])(v161, v163);
          }
          uint64_t v129 = (uint64_t)v234;
          objc_msgSend(v160, sel_setDateInterval_, v164);

          sub_1C29B98C8(v159);
        }
        uint64_t v124 = v233;
      }
    }
  }

  Operation = (objc_class *)type metadata accessor for StatisticsCollectionQueryOperation();
  v260.receiver = v124;
  v260.super_class = Operation;
  id v166 = objc_msgSendSuper2(&v260, sel_init);
  id v167 = v166;
  if (v125)
  {
    uint64_t v168 = (void *)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v168 = 0;
  }
  uint64_t v169 = v237;
  uint64_t v170 = (uint64_t)v217;
  uint64_t v172 = v245;
  uint64_t v171 = ConfigurationOverrides;
  uint64_t v173 = v129;
  objc_msgSend(v166, sel_setName_, v168);
  id v235 = v166;

  uint64_t v174 = v219;
  sub_1C2A0A06C(v251, v219, &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides);
  if (v236(v174, 1, v171) == 1)
  {
    sub_1C2A09FB0(v174, &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides);
    v175 = v247;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v247[7])(v129, 1, 1, v172);
    uint64_t v176 = v228;
  }
  else
  {
    sub_1C2A0A06C(v174, v129, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
    sub_1C29B98C8(v174);
    uint64_t v176 = v228;
    v175 = v247;
  }
  uint64_t v177 = v173;
  uint64_t v178 = v250;
  ((void (*)(char *, char *, uint64_t))v218)(v176, v248, v250);
  uint64_t v179 = v175[6];
  if (v179(v177, 1, v172) == 1)
  {
    DateRange.dateInterval(endingAt:)(v176, v215, v169);
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v239)(v176, v178);
    sub_1C2A09FB0(v177, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
  }
  else
  {
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v239)(v176, v178);
    v175[4](v169, v177, v172);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v175[7])(v169, 0, 1, v172);
  }
  sub_1C2A0A06C(v169, v170, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
  unsigned int v180 = v179(v170, 1, v172);
  v181 = v235;
  if (v180 == 1)
  {
    sub_1C2A09FB0(v170, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
    object = (void *)0xE600000000000000;
    uint64_t countAndFlagsBits = 0x3E656E6F6E3CLL;
  }
  else
  {
    Swift::String v183 = DateInterval.stringWithISO8601Format()();
    uint64_t countAndFlagsBits = v183._countAndFlagsBits;
    object = v183._object;
    ((void (*)(uint64_t, uint64_t))v247[1])(v170, v172);
  }
  uint64_t v184 = v229;
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  uint64_t v185 = (void *)qword_1EBB91C60;
  uint64_t v186 = v181;
  id v187 = v185;
  uint64_t v188 = v238;
  sub_1C2A9CF48();
  uint64_t v247 = *(unsigned int (***)(void, void, void))&v186[qword_1EBB9F1B8];
  uint64_t v189 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v190 = v221;
  v191 = v220;
  v192 = v188;
  uint64_t v193 = v222;
  (*(void (**)(char *, char *, uint64_t))(v221 + 16))(v220, v192, v222);
  unint64_t v194 = (*(unsigned __int8 *)(v190 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80);
  unint64_t v195 = (v184 + v194 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v196 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v190 + 32))(v196 + v194, v191, v193);
  uint64_t v197 = (uint64_t *)(v196 + v195);
  uint64_t v198 = object;
  *uint64_t v197 = countAndFlagsBits;
  v197[1] = (uint64_t)v198;
  *(void *)(v196 + ((v195 + 23) & 0xFFFFFFFFFFFFFFF8)) = v189;
  v258 = sub_1C2A0A1E4;
  uint64_t v259 = v196;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v255 = 1107296256;
  uint64_t v256 = sub_1C29B8EEC;
  uint64_t v257 = &block_descriptor_8;
  uint64_t v199 = _Block_copy(&aBlock);
  swift_retain();
  sub_1C296EE5C((uint64_t)sub_1C2A0A1E4);
  swift_release();
  objc_msgSend(v247, sel_setInitialResultsHandler_, v199);

  _Block_release(v199);
  swift_release();
  (*(void (**)(char *, uint64_t))(v190 + 8))(v238, v193);
  sub_1C2A09FB0(v237, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
  (*(void (**)(char *, uint64_t))(v240 + 8))(v244, v241);
  uint64_t v200 = v250;
  uint64_t v201 = v239;
  ((void (*)(char *, uint64_t))v239)(v243, v250);
  ((void (*)(char *, uint64_t))v201)(v248, v200);
  sub_1C2A09FB0(v251, &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides);
  swift_release();
  swift_release();
  return v186;
}

void sub_1C2A09358(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = a7 + 16;
  sub_1C2A9E1A8();
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  sub_1C29624A4();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C2AA6B00;
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 64) = sub_1C296250C();
  *(void *)(v12 + 32) = a5;
  *(void *)(v12 + 40) = a6;
  swift_bridgeObjectRetain();
  sub_1C2A9CF28();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v13 = (char *)MEMORY[0x1C87657D0](v11);
  if (v13)
  {
    uint64_t v14 = v13;
    if ((objc_msgSend(v13, sel_isCancelled) & 1) != 0
      || (objc_msgSend(v14, sel_isFinished) & 1) != 0)
    {
      v15._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v15._object = (void *)0x80000001C2AB6030;
      v16._uint64_t countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v15, v16);
    }
    else
    {
      uint64_t v17 = a2;
      if (!a2)
      {
        if (a3) {
          uint64_t v18 = 0xD000000000000029;
        }
        else {
          uint64_t v18 = 0;
        }
        if (a3) {
          uint64_t v19 = 0x80000001C2AB9460;
        }
        else {
          uint64_t v19 = 0;
        }
        if (a3) {
          unint64_t v20 = a3 | 0x8000000000000000;
        }
        else {
          unint64_t v20 = 0xC000000000000000;
        }
        sub_1C296291C();
        uint64_t v21 = (void *)swift_allocError();
        *uint64_t v22 = v18;
        v22[1] = v19;
        v22[2] = v20;
        swift_getErrorValue();
        id v23 = (id)a3;
        sub_1C2962970(v18, v19, v20);
        v24._uint64_t countAndFlagsBits = sub_1C2A9E938();
        v25._uint64_t countAndFlagsBits = 0;
        v25._object = (void *)0xE000000000000000;
        NSOperation.logErrorString(_:withInfo:)(v24, v25);
        swift_bridgeObjectRelease();

        uint64_t v17 = (void *)swift_allocError();
        *uint64_t v26 = v18;
        v26[1] = v19;
        v26[2] = v20;
      }
      uint64_t v27 = *(void (**)(void *, BOOL))&v14[qword_1EBB9F1A8];
      id v28 = a2;
      if (v27)
      {
        sub_1C296EE5C((uint64_t)v27);
        v27(v17, a2 == 0);
        id v28 = (id)sub_1C29B34B0((uint64_t)v27);
      }
      MEMORY[0x1F4188790](v28);
      sub_1C2A9CA08();

      sub_1C296FAA4(v17);
    }
  }
}

uint64_t sub_1C2A096B0(uint64_t a1, void *a2)
{
  sub_1C29B9468(a2);
  swift_retain();
  sub_1C2A9C9C8();
  sub_1C296FAA4(a2);
  swift_release();
  id v4 = objc_msgSend(*(id *)(a1 + qword_1EBB91ED0), sel_identifier);
  uint64_t v5 = sub_1C2A9DD28();
  uint64_t v7 = v6;

  v8._uint64_t countAndFlagsBits = 0x64656873696E6966;
  v8._object = (void *)0xE800000000000000;
  v9._uint64_t countAndFlagsBits = v5;
  v9._object = v7;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v8, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2A097A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C2A9CF58();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C2962438();
  size_t v6 = (void *)swift_allocError();
  *uint64_t v7 = 2;
  Swift::String v24 = v6;
  char v25 = 1;
  swift_retain();
  sub_1C2A9C9C8();

  swift_release();
  Swift::String v8 = *(void **)&v0[qword_1EBB91ED0];
  id v9 = objc_msgSend(v8, sel_identifier);
  uint64_t v10 = sub_1C2A9DD28();
  uint64_t v12 = v11;

  v13._uint64_t countAndFlagsBits = 0x676E696E6E7572;
  v13._object = (void *)0xE700000000000000;
  v14._uint64_t countAndFlagsBits = v10;
  v14._object = v12;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v13, v14);
  swift_bridgeObjectRelease();
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  id v15 = (id)qword_1EBB91C60;
  Swift::String v16 = v1;
  sub_1C2A9CF48();
  sub_1C2A9E1B8();
  sub_1C29624A4();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C2AA6B00;
  id v18 = objc_msgSend(v8, sel_identifier);
  uint64_t v19 = sub_1C2A9DD28();
  uint64_t v21 = v20;

  *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v17 + 64) = sub_1C296250C();
  *(void *)(v17 + 32) = v19;
  *(void *)(v17 + 40) = v21;
  sub_1C2A9CF28();
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)&v16[qword_1EBB9F1A0], sel_executeQuery_, *(void *)&v16[qword_1EBB9F1B8]);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1C2A09A8C(void *a1)
{
  id v1 = a1;
  sub_1C2A097A0();
}

id sub_1C2A09AD4()
{
  if (objc_msgSend(v0, sel_isCancelled))
  {
    v1._uint64_t countAndFlagsBits = 0x656C6C65636E6163;
    v1._object = (void *)0xE900000000000064;
    v2._uint64_t countAndFlagsBits = 0;
    v2._object = (void *)0xE000000000000000;
    NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v1, v2);
    sub_1C2962438();
    uint64_t v3 = (void *)swift_allocError();
    *uint64_t v4 = 3;
    MEMORY[0x1F4188790](v3);
    swift_retain();
    sub_1C2A9C9C8();

    swift_release();
  }
  uint64_t v5 = &v0[qword_1EBB9F1A8];
  uint64_t v6 = *(void *)&v0[qword_1EBB9F1A8];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  sub_1C29B34B0(v6);
  return objc_msgSend(*(id *)&v0[qword_1EBB9F1A0], sel_stopQuery_, *(void *)&v0[qword_1EBB9F1B8]);
}

id StatisticsCollectionQueryOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void StatisticsCollectionQueryOperation.init()()
{
}

void sub_1C2A09C80()
{
}

uint64_t sub_1C2A09CB0()
{
  swift_release();

  swift_bridgeObjectRelease();
  sub_1C2A09FB0(v0 + qword_1EBB9F1B0, &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides);

  uint64_t v1 = *(void *)(v0 + qword_1EBB9F1A8);
  return sub_1C29B34B0(v1);
}

id StatisticsCollectionQueryOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StatisticsCollectionQueryOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2A09D9C(uint64_t a1)
{
  swift_release();

  swift_bridgeObjectRelease();
  sub_1C2A09FB0(a1 + qword_1EBB9F1B0, &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides);

  uint64_t v2 = *(void *)(a1 + qword_1EBB9F1A8);
  return sub_1C29B34B0(v2);
}

uint64_t sub_1C2A09E5C@<X0>(uint64_t a1@<X8>)
{
  swift_retain();
  sub_1C2A9C9B8();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

void sub_1C2A09EBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2A09F20()
{
  if (!qword_1EBB92240)
  {
    sub_1C29376D4(255, &qword_1EBB92130);
    sub_1C29415E4(255, (unint64_t *)&qword_1EBB92210);
    unint64_t v0 = sub_1C2A9E9F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB92240);
    }
  }
}

uint64_t sub_1C2A09FB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2A09EBC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t type metadata accessor for StatisticsCollectionQueryOperation()
{
  uint64_t result = qword_1EBB91EE8;
  if (!qword_1EBB91EE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2A0A06C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C2A09EBC(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C2A0A0EC()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2A0A124()
{
  uint64_t v1 = sub_1C2A9CF58();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

void sub_1C2A0A1E4(uint64_t a1, void *a2, unint64_t a3)
{
  uint64_t v7 = *(void *)(sub_1C2A9CF58() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(v3 + v9);
  uint64_t v11 = *(void *)(v3 + v9 + 8);
  uint64_t v12 = *(void *)(v3 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8));
  sub_1C2A09358(a1, a2, a3, v3 + v8, v10, v11, v12);
}

uint64_t sub_1C2A0A2A8(uint64_t a1, uint64_t a2)
{
  uint64_t ConfigurationOverrides = type metadata accessor for StatisticsQueryConfigurationOverrides();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ConfigurationOverrides - 8) + 32))(a2, a1, ConfigurationOverrides);
  return a2;
}

void sub_1C2A0A314()
{
  sub_1C2A09EBC(319, &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t method lookup function for StatisticsCollectionQueryOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StatisticsCollectionQueryOperation);
}

uint64_t dispatch thunk of StatisticsCollectionQueryOperation.result.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for StatisticsCollectionQueryOperation
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 80))();
}

uint64_t dispatch thunk of StatisticsCollectionQueryOperation.__allocating_init(sampleType:configuration:configurationOverrides:name:queryQualityOfService:healthStore:environment:resultHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(class metadata base offset for StatisticsCollectionQueryOperation + v8 + 128))(a1, a2, a3, a4, a5, a6, a7, a8 & 1);
}

uint64_t sub_1C2A0A4C8()
{
  return type metadata accessor for StatisticsCollectionQueryOperation();
}

uint64_t sub_1C2A0A4D0()
{
  return sub_1C2A096B0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1C2A0A4DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  CGPoint v65 = a1;
  uint64_t v66 = a2;
  uint64_t v63 = sub_1C2A9D598();
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v61 = &v49[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v58 = sub_1C2A9D928();
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v56 = &v49[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C2A0C8FC(0, &qword_1EA31E2C8, MEMORY[0x1E4F3E0A0]);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = &v49[-v5];
  uint64_t v7 = sub_1C2A9D958();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
  MEMORY[0x1F4188790](v11 - 8);
  Swift::String v13 = &v49[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v14);
  Swift::String v16 = &v49[-v15];
  CGPoint v64 = &v49[-v15];
  sub_1C2A9D538();
  long long v79 = v70;
  long long v80 = v71;
  uint64_t v81 = v72;
  sub_1C2A9D2D8();
  uint64_t v17 = sub_1C2A9D2E8();
  id v18 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v18(v16, 0, 1, v17);
  sub_1C2A9D538();
  long long v76 = v73;
  long long v77 = v74;
  uint64_t v78 = v75;
  uint64_t v60 = v13;
  sub_1C2A9D2D8();
  v18(v13, 0, 1, v17);
  uint64_t v19 = *MEMORY[0x1E4F3E168];
  uint64_t v20 = *(void (**)(unsigned char *, void, uint64_t))(v8 + 104);
  uint64_t v54 = v8 + 104;
  int v55 = v20;
  uint64_t v51 = v7;
  v20(v10, v19, v7);
  unsigned int v50 = *MEMORY[0x1E4F3E090];
  uint64_t v21 = v50;
  uint64_t v22 = sub_1C2A9D8A8();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v69 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v23 + 104);
  v69(v6, v21, v22);
  uint64_t v67 = v23 + 104;
  CGRect v68 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v23 + 56);
  v68(v6, 0, 1, v22);
  sub_1C2A9D908();
  sub_1C2A0C950((uint64_t)v6);
  uint64_t v52 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
  uint64_t v53 = v8 + 8;
  Swift::String v24 = v10;
  v52(v10, v7);
  sub_1C2A9D8B8();
  sub_1C2A9D918();
  swift_release();
  uint64_t v25 = v57;
  uint64_t v26 = v56;
  uint64_t v27 = v58;
  (*(void (**)(unsigned char *, void, uint64_t))(v57 + 104))(v56, *MEMORY[0x1E4F3E0F8], v58);
  uint64_t v59 = sub_1C2A9D938();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v26, v27);
  sub_1C2A9D8E8();
  uint64_t v28 = v50;
  uint64_t v29 = v69;
  v69(v6, v50, v22);
  uint64_t v30 = v68;
  v68(v6, 0, 1, v22);
  uint64_t v58 = sub_1C2A9D8F8();
  sub_1C2A0C950((uint64_t)v6);
  uint64_t v31 = v51;
  uint64_t v32 = v55;
  v55(v24, *MEMORY[0x1E4F3E140], v51);
  v29(v6, v28, v22);
  v30(v6, 0, 1, v22);
  sub_1C2A9D908();
  sub_1C2A0C950((uint64_t)v6);
  uint64_t v33 = v31;
  uint64_t v34 = v31;
  uint64_t v35 = v52;
  v52(v24, v33);
  sub_1C2A9D8B8();
  uint64_t v57 = sub_1C2A9D918();
  swift_release();
  v32(v24, *MEMORY[0x1E4F3E170], v34);
  v69(v6, *MEMORY[0x1E4F3E088], v22);
  v68(v6, 0, 1, v22);
  sub_1C2A9D908();
  sub_1C2A0C950((uint64_t)v6);
  v35(v24, v34);
  sub_1C2A9D8E8();
  uint64_t v36 = sub_1C2A9D918();
  swift_release();
  uint64_t v37 = (uint64_t)v61;
  (*(void (**)(unsigned char *, void, uint64_t))(v62 + 104))(v61, *MEMORY[0x1E4F3CB60], v63);
  uint64_t v38 = v65[3];
  uint64_t v39 = v65[4];
  __swift_project_boxed_opaque_existential_1(v65, v38);
  uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 16))(v38, v39);
  uint64_t v41 = MEMORY[0x1C8763950](v40);
  uint64_t v42 = self;
  uint64_t v43 = MEMORY[0x1C8763950](objc_msgSend(v42, sel_systemGray4Color));
  uint64_t v44 = MEMORY[0x1C8763950](objc_msgSend(v42, sel_tertiaryLabelColor));
  uint64_t v45 = MEMORY[0x1C8763950](objc_msgSend(v42, sel_labelColor));
  uint64_t v46 = MEMORY[0x1C8763950](objc_msgSend(v42, sel_secondaryLabelColor));
  uint64_t v47 = MEMORY[0x1C8763950](objc_msgSend(v42, sel_secondaryLabelColor));
  return sub_1C2A0C358((uint64_t)v64, (uint64_t)v60, v59, v58, v57, v36, v37, v41, v66, 8.5, 144.0, -2.0, -1.0, -4.0, 1.1, 1.3, 1.15, v43, v44,
           v45,
           v46,
           v47,
           1);
}

uint64_t sub_1C2A0AE18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = sub_1C2A9D598();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v33 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A0C8FC(0, &qword_1EA31E2C8, MEMORY[0x1E4F3E0A0]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v31 - v7;
  sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v15 = sub_1C2A9D2E8();
  Swift::String v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  v16(v11, 1, 1, v15);
  uint64_t v17 = sub_1C2A9D8A8();
  id v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v18(v8, 1, 1, v17);
  sub_1C2A9D8F8();
  sub_1C2A0C950((uint64_t)v8);
  sub_1C2A9D8C8();
  uint64_t v35 = sub_1C2A9D918();
  swift_release();
  v18(v8, 1, 1, v17);
  sub_1C2A9D8F8();
  sub_1C2A0C950((uint64_t)v8);
  sub_1C2A9D8D8();
  uint64_t v34 = sub_1C2A9D918();
  swift_release();
  v18(v8, 1, 1, v17);
  sub_1C2A9D8F8();
  sub_1C2A0C950((uint64_t)v8);
  sub_1C2A9D8D8();
  uint64_t v32 = sub_1C2A9D918();
  swift_release();
  v18(v8, 1, 1, v17);
  sub_1C2A9D8F8();
  sub_1C2A0C950((uint64_t)v8);
  sub_1C2A9D8C8();
  uint64_t v31 = sub_1C2A9D918();
  swift_release();
  uint64_t v19 = (uint64_t)v33;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v33, *MEMORY[0x1E4F3CB60], v3);
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
  uint64_t v23 = MEMORY[0x1C8763950](v22);
  Swift::String v24 = self;
  uint64_t v25 = MEMORY[0x1C8763950](objc_msgSend(v24, sel_systemGray4Color));
  uint64_t v26 = MEMORY[0x1C8763950](objc_msgSend(v24, sel_tertiaryLabelColor));
  uint64_t v27 = MEMORY[0x1C8763950](objc_msgSend(v24, sel_labelColor));
  uint64_t v28 = MEMORY[0x1C8763950](objc_msgSend(v24, sel_labelColor));
  uint64_t v29 = MEMORY[0x1C8763950](objc_msgSend(v24, sel_labelColor));
  return sub_1C2A0C358((uint64_t)v14, (uint64_t)v11, v35, v34, v32, v31, v19, v23, v36, 7.0, 144.0, -2.0, 0.0, 2.0, 1.1, 1.2, 1.2, v25, v26,
           v27,
           v28,
           v29,
           0);
}

uint64_t TimeBasedDistributionChartDesign.majorTick.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A0B308(v1, a1);
}

uint64_t sub_1C2A0B308(uint64_t a1, uint64_t a2)
{
  sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t TimeBasedDistributionChartDesign.majorTick.setter(uint64_t a1)
{
  return sub_1C2A0B390(a1, v1);
}

uint64_t sub_1C2A0B390(uint64_t a1, uint64_t a2)
{
  sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*TimeBasedDistributionChartDesign.majorTick.modify())()
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartDesign.minorTick.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 20);
  return sub_1C2A0B308(v3, a1);
}

uint64_t type metadata accessor for TimeBasedDistributionChartDesign()
{
  uint64_t result = qword_1EA31EB40;
  if (!qword_1EA31EB40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t TimeBasedDistributionChartDesign.minorTick.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 20);
  return sub_1C2A0B390(a1, v3);
}

uint64_t (*TimeBasedDistributionChartDesign.minorTick.modify())(void)
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartDesign.nonMaxPointAnnotationFont.getter()
{
  type metadata accessor for TimeBasedDistributionChartDesign();
  return swift_retain();
}

uint64_t TimeBasedDistributionChartDesign.nonMaxPointAnnotationFont.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 24);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.nonMaxPointAnnotationFont.modify())(void)
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartDesign.largeSizeMaxPointAnnotationFont.getter()
{
  type metadata accessor for TimeBasedDistributionChartDesign();
  return swift_retain();
}

uint64_t TimeBasedDistributionChartDesign.largeSizeMaxPointAnnotationFont.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 28);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.largeSizeMaxPointAnnotationFont.modify())(void)
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartDesign.smallSizeMaxPointAnnotationFont.getter()
{
  type metadata accessor for TimeBasedDistributionChartDesign();
  return swift_retain();
}

uint64_t TimeBasedDistributionChartDesign.smallSizeMaxPointAnnotationFont.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 32);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.smallSizeMaxPointAnnotationFont.modify())(void)
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartDesign.axisLabelFont.getter()
{
  type metadata accessor for TimeBasedDistributionChartDesign();
  return swift_retain();
}

uint64_t TimeBasedDistributionChartDesign.axisLabelFont.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 36);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.axisLabelFont.modify())(void)
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartDesign.maximumDynamicTypeSize.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 40);
  uint64_t v4 = sub_1C2A9D598();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t TimeBasedDistributionChartDesign.maximumDynamicTypeSize.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 40);
  uint64_t v4 = sub_1C2A9D598();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*TimeBasedDistributionChartDesign.maximumDynamicTypeSize.modify())(void)
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartDesign.accentColor.getter()
{
  type metadata accessor for TimeBasedDistributionChartDesign();
  return swift_retain();
}

uint64_t TimeBasedDistributionChartDesign.accentColor.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 44);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.accentColor.modify())(void)
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartDesign.nonMaxBarColor.getter()
{
  type metadata accessor for TimeBasedDistributionChartDesign();
  return swift_retain();
}

uint64_t TimeBasedDistributionChartDesign.nonMaxBarColor.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 48);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.nonMaxBarColor.modify())(void)
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartDesign.noDataColor.getter()
{
  type metadata accessor for TimeBasedDistributionChartDesign();
  return swift_retain();
}

uint64_t TimeBasedDistributionChartDesign.noDataColor.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 52);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.noDataColor.modify())(void)
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartDesign.maxPointAnnotationColor.getter()
{
  type metadata accessor for TimeBasedDistributionChartDesign();
  return swift_retain();
}

uint64_t TimeBasedDistributionChartDesign.maxPointAnnotationColor.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 56);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.maxPointAnnotationColor.modify())(void)
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartDesign.nonMaxPointAnnotationColor.getter()
{
  type metadata accessor for TimeBasedDistributionChartDesign();
  return swift_retain();
}

uint64_t TimeBasedDistributionChartDesign.nonMaxPointAnnotationColor.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 60);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.nonMaxPointAnnotationColor.modify())(void)
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartDesign.axisLabelColor.getter()
{
  type metadata accessor for TimeBasedDistributionChartDesign();
  return swift_retain();
}

uint64_t TimeBasedDistributionChartDesign.axisLabelColor.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 64);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.axisLabelColor.modify())(void)
{
  return nullsub_1;
}

double TimeBasedDistributionChartDesign.barToTickMargin.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 68));
}

uint64_t TimeBasedDistributionChartDesign.barToTickMargin.setter(double a1)
{
  uint64_t result = type metadata accessor for TimeBasedDistributionChartDesign();
  *(double *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.barToTickMargin.modify())(void)
{
  return nullsub_1;
}

double TimeBasedDistributionChartDesign.chartHeight.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 72));
}

uint64_t TimeBasedDistributionChartDesign.chartHeight.setter(double a1)
{
  uint64_t result = type metadata accessor for TimeBasedDistributionChartDesign();
  *(double *)(v1 + *(int *)(result + 72)) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.chartHeight.modify())(void)
{
  return nullsub_1;
}

double TimeBasedDistributionChartDesign.nonMaxPointAnnotationOffset.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 76));
}

uint64_t TimeBasedDistributionChartDesign.nonMaxPointAnnotationOffset.setter(double a1)
{
  uint64_t result = type metadata accessor for TimeBasedDistributionChartDesign();
  *(double *)(v1 + *(int *)(result + 76)) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.nonMaxPointAnnotationOffset.modify())(void)
{
  return nullsub_1;
}

double TimeBasedDistributionChartDesign.maxPointAnnotationOffset.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 80));
}

uint64_t TimeBasedDistributionChartDesign.maxPointAnnotationOffset.setter(double a1)
{
  uint64_t result = type metadata accessor for TimeBasedDistributionChartDesign();
  *(double *)(v1 + *(int *)(result + 80)) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.maxPointAnnotationOffset.modify())(void)
{
  return nullsub_1;
}

double TimeBasedDistributionChartDesign.noDataPointAnnotationOffset.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 84));
}

uint64_t TimeBasedDistributionChartDesign.noDataPointAnnotationOffset.setter(double a1)
{
  uint64_t result = type metadata accessor for TimeBasedDistributionChartDesign();
  *(double *)(v1 + *(int *)(result + 84)) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.noDataPointAnnotationOffset.modify())(void)
{
  return nullsub_1;
}

double TimeBasedDistributionChartDesign.noMaxYAxisScale.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 88));
}

uint64_t TimeBasedDistributionChartDesign.noMaxYAxisScale.setter(double a1)
{
  uint64_t result = type metadata accessor for TimeBasedDistributionChartDesign();
  *(double *)(v1 + *(int *)(result + 88)) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.noMaxYAxisScale.modify())(void)
{
  return nullsub_1;
}

double TimeBasedDistributionChartDesign.singleMaxYAxisScale.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 92));
}

uint64_t TimeBasedDistributionChartDesign.singleMaxYAxisScale.setter(double a1)
{
  uint64_t result = type metadata accessor for TimeBasedDistributionChartDesign();
  *(double *)(v1 + *(int *)(result + 92)) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.singleMaxYAxisScale.modify())(void)
{
  return nullsub_1;
}

double TimeBasedDistributionChartDesign.multipleMaxYAxisScale.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 96));
}

uint64_t TimeBasedDistributionChartDesign.multipleMaxYAxisScale.setter(double a1)
{
  uint64_t result = type metadata accessor for TimeBasedDistributionChartDesign();
  *(double *)(v1 + *(int *)(result + 96)) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.multipleMaxYAxisScale.modify())(void)
{
  return nullsub_1;
}

uint64_t TimeBasedDistributionChartDesign.shouldPreventLongBarAnnotationOverhang.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 100));
}

uint64_t TimeBasedDistributionChartDesign.shouldPreventLongBarAnnotationOverhang.setter(char a1)
{
  uint64_t result = type metadata accessor for TimeBasedDistributionChartDesign();
  *(unsigned char *)(v1 + *(int *)(result + 100)) = a1;
  return result;
}

uint64_t (*TimeBasedDistributionChartDesign.shouldPreventLongBarAnnotationOverhang.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C2A0C358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, double a16@<D6>, double a17@<D7>, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  sub_1C2A0E20C(a1, a9);
  uint64_t v37 = (int *)type metadata accessor for TimeBasedDistributionChartDesign();
  sub_1C2A0E20C(a2, a9 + v37[5]);
  *(void *)(a9 + v37[6]) = a3;
  *(void *)(a9 + v37[7]) = a4;
  *(void *)(a9 + v37[8]) = a5;
  *(void *)(a9 + v37[9]) = a6;
  uint64_t v38 = a9 + v37[10];
  uint64_t v39 = sub_1C2A9D598();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v38, a7, v39);
  *(void *)(a9 + v37[11]) = a8;
  *(void *)(a9 + v37[12]) = a18;
  *(void *)(a9 + v37[13]) = a19;
  *(void *)(a9 + v37[14]) = a20;
  *(void *)(a9 + v37[15]) = a21;
  *(void *)(a9 + v37[16]) = a22;
  *(double *)(a9 + v37[17]) = a10;
  *(double *)(a9 + v37[18]) = a11;
  *(double *)(a9 + v37[19]) = a12;
  *(double *)(a9 + v37[20]) = a13;
  *(double *)(a9 + v37[21]) = a14;
  *(double *)(a9 + v37[22]) = a15;
  *(double *)(a9 + v37[23]) = a16;
  *(double *)(a9 + v37[24]) = a17;
  *(unsigned char *)(a9 + v37[25]) = a23;
  return result;
}

uint64_t static TimeBasedDistributionChartDesign.makeTestingDesign()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_1C2A9D598();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A0C8FC(0, &qword_1EA31E2C8, MEMORY[0x1E4F3E0A0]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v27 - v6;
  sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v14 = sub_1C2A9D2E8();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  v15(v10, 1, 1, v14);
  uint64_t v16 = sub_1C2A9D8A8();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v7, 1, 1, v16);
  uint64_t v29 = sub_1C2A9D8F8();
  sub_1C2A0C950((uint64_t)v7);
  v17(v7, 1, 1, v16);
  uint64_t v28 = sub_1C2A9D8F8();
  sub_1C2A0C950((uint64_t)v7);
  v17(v7, 1, 1, v16);
  uint64_t v18 = sub_1C2A9D8F8();
  sub_1C2A0C950((uint64_t)v7);
  v17(v7, 1, 1, v16);
  uint64_t v19 = sub_1C2A9D8F8();
  sub_1C2A0C950((uint64_t)v7);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4F3CB60], v1);
  uint64_t v20 = sub_1C2A9DAD8();
  uint64_t v21 = sub_1C2A9DAF8();
  uint64_t v22 = sub_1C2A9DAC8();
  uint64_t v23 = sub_1C2A9DB28();
  uint64_t v24 = sub_1C2A9DB18();
  uint64_t v25 = sub_1C2A9DB08();
  return sub_1C2A0C358((uint64_t)v13, (uint64_t)v10, v29, v28, v18, v19, (uint64_t)v4, v20, v30, 5.0, 20.0, -2.0, -1.0, -4.0, 1.1, 1.3, 1.2, v21, v22,
           v23,
           v24,
           v25,
           1);
}

void sub_1C2A0C8FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2A9E328();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2A0C950(uint64_t a1)
{
  sub_1C2A0C8FC(0, &qword_1EA31E2C8, MEMORY[0x1E4F3E0A0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *initializeBufferWithCopyOfBuffer for TimeBasedDistributionChartDesign(char *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    unint64_t v4 = (char *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1C2A9D2E8();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
      memcpy(v4, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    uint64_t v13 = &v4[v12];
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = a3[7];
    *(void *)&v4[a3[6]] = *(uint64_t *)((char *)a2 + a3[6]);
    *(void *)&v4[v16] = *(uint64_t *)((char *)a2 + v16);
    uint64_t v17 = a3[9];
    *(void *)&v4[a3[8]] = *(uint64_t *)((char *)a2 + a3[8]);
    *(void *)&v4[v17] = *(uint64_t *)((char *)a2 + v17);
    uint64_t v18 = a3[10];
    uint64_t v29 = (char *)a2 + v18;
    uint64_t v30 = &v4[v18];
    uint64_t v19 = sub_1C2A9D598();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v20(v30, v29, v19);
    uint64_t v21 = a3[12];
    *(void *)&v4[a3[11]] = *(uint64_t *)((char *)a2 + a3[11]);
    *(void *)&v4[v21] = *(uint64_t *)((char *)a2 + v21);
    uint64_t v22 = a3[14];
    *(void *)&v4[a3[13]] = *(uint64_t *)((char *)a2 + a3[13]);
    *(void *)&v4[v22] = *(uint64_t *)((char *)a2 + v22);
    uint64_t v23 = a3[16];
    *(void *)&v4[a3[15]] = *(uint64_t *)((char *)a2 + a3[15]);
    *(void *)&v4[v23] = *(uint64_t *)((char *)a2 + v23);
    uint64_t v24 = a3[18];
    *(void *)&v4[a3[17]] = *(uint64_t *)((char *)a2 + a3[17]);
    *(void *)&v4[v24] = *(uint64_t *)((char *)a2 + v24);
    uint64_t v25 = a3[20];
    *(void *)&v4[a3[19]] = *(uint64_t *)((char *)a2 + a3[19]);
    *(void *)&v4[v25] = *(uint64_t *)((char *)a2 + v25);
    uint64_t v26 = a3[22];
    *(void *)&v4[a3[21]] = *(uint64_t *)((char *)a2 + a3[21]);
    *(void *)&v4[v26] = *(uint64_t *)((char *)a2 + v26);
    uint64_t v27 = a3[24];
    *(void *)&v4[a3[23]] = *(uint64_t *)((char *)a2 + a3[23]);
    *(void *)&v4[v27] = *(uint64_t *)((char *)a2 + v27);
    v4[a3[25]] = *((unsigned char *)a2 + a3[25]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for TimeBasedDistributionChartDesign(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2A9D2E8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  if (!v6(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = a1 + *(int *)(a2 + 40);
  uint64_t v9 = sub_1C2A9D598();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

char *initializeWithCopy for TimeBasedDistributionChartDesign(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C2A9D2E8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v15 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  uint64_t v16 = a3[10];
  uint64_t v27 = &a2[v16];
  uint64_t v28 = &a1[v16];
  uint64_t v17 = sub_1C2A9D598();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v18(v28, v27, v17);
  uint64_t v19 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v19] = *(void *)&a2[v19];
  uint64_t v20 = a3[14];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  *(void *)&a1[v20] = *(void *)&a2[v20];
  uint64_t v21 = a3[16];
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  uint64_t v22 = a3[18];
  *(void *)&a1[a3[17]] = *(void *)&a2[a3[17]];
  *(void *)&a1[v22] = *(void *)&a2[v22];
  uint64_t v23 = a3[20];
  *(void *)&a1[a3[19]] = *(void *)&a2[a3[19]];
  *(void *)&a1[v23] = *(void *)&a2[v23];
  uint64_t v24 = a3[22];
  *(void *)&a1[a3[21]] = *(void *)&a2[a3[21]];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  uint64_t v25 = a3[24];
  *(void *)&a1[a3[23]] = *(void *)&a2[a3[23]];
  *(void *)&a1[v25] = *(void *)&a2[v25];
  a1[a3[25]] = a2[a3[25]];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

char *assignWithCopy for TimeBasedDistributionChartDesign(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C2A9D2E8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_retain();
  swift_release();
  uint64_t v18 = a3[10];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_1C2A9D598();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[17]] = *(void *)&a2[a3[17]];
  *(void *)&a1[a3[18]] = *(void *)&a2[a3[18]];
  *(void *)&a1[a3[19]] = *(void *)&a2[a3[19]];
  *(void *)&a1[a3[20]] = *(void *)&a2[a3[20]];
  *(void *)&a1[a3[21]] = *(void *)&a2[a3[21]];
  *(void *)&a1[a3[22]] = *(void *)&a2[a3[22]];
  *(void *)&a1[a3[23]] = *(void *)&a2[a3[23]];
  *(void *)&a1[a3[24]] = *(void *)&a2[a3[24]];
  a1[a3[25]] = a2[a3[25]];
  return a1;
}

char *initializeWithTake for TimeBasedDistributionChartDesign(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C2A9D2E8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v15 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  uint64_t v16 = a3[10];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_1C2A9D598();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v20] = *(void *)&a2[v20];
  uint64_t v21 = a3[14];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  uint64_t v22 = a3[16];
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  *(void *)&a1[v22] = *(void *)&a2[v22];
  uint64_t v23 = a3[18];
  *(void *)&a1[a3[17]] = *(void *)&a2[a3[17]];
  *(void *)&a1[v23] = *(void *)&a2[v23];
  uint64_t v24 = a3[20];
  *(void *)&a1[a3[19]] = *(void *)&a2[a3[19]];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  uint64_t v25 = a3[22];
  *(void *)&a1[a3[21]] = *(void *)&a2[a3[21]];
  *(void *)&a1[v25] = *(void *)&a2[v25];
  uint64_t v26 = a3[24];
  *(void *)&a1[a3[23]] = *(void *)&a2[a3[23]];
  *(void *)&a1[v26] = *(void *)&a2[v26];
  a1[a3[25]] = a2[a3[25]];
  return a1;
}

char *assignWithTake for TimeBasedDistributionChartDesign(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C2A9D2E8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_release();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_release();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_release();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_release();
  uint64_t v18 = a3[10];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_1C2A9D598();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_release();
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_release();
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_release();
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  swift_release();
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  swift_release();
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  swift_release();
  uint64_t v22 = a3[18];
  *(void *)&a1[a3[17]] = *(void *)&a2[a3[17]];
  *(void *)&a1[v22] = *(void *)&a2[v22];
  uint64_t v23 = a3[20];
  *(void *)&a1[a3[19]] = *(void *)&a2[a3[19]];
  *(void *)&a1[v23] = *(void *)&a2[v23];
  uint64_t v24 = a3[22];
  *(void *)&a1[a3[21]] = *(void *)&a2[a3[21]];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  uint64_t v25 = a3[24];
  *(void *)&a1[a3[23]] = *(void *)&a2[a3[23]];
  *(void *)&a1[v25] = *(void *)&a2[v25];
  a1[a3[25]] = a2[a3[25]];
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeBasedDistributionChartDesign(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2A0DE40);
}

uint64_t sub_1C2A0DE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1C2A9D598();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 40);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for TimeBasedDistributionChartDesign(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2A0DF9C);
}

void sub_1C2A0DF9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1C2A9D598();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 40);
    v12(v14, a2, a2, v13);
  }
}

void sub_1C2A0E0E4()
{
  sub_1C2A0C8FC(319, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
  if (v0 <= 0x3F)
  {
    sub_1C2A9D598();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1C2A0E20C(uint64_t a1, uint64_t a2)
{
  sub_1C2A0C8FC(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t DiagramLine.__allocating_init(lineDiagramConfig:diagramData:hbxViewControllerFactory:axisMetricsFactory:)(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  DiagramLine.init(lineDiagramConfig:diagramData:hbxViewControllerFactory:axisMetricsFactory:)(a1, a2, a3, a4);
  return v8;
}

double sub_1C2A0E2F8()
{
  return sub_1C293CBC4();
}

void (*sub_1C2A0E31C())(void *a1, uint64_t a2, CGFloat a3, CGFloat a4)
{
  return sub_1C294518C;
}

uint64_t DiagramLine.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C2A0E3B4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = v4[2];
  uint64_t v7 = v4[3] >> 1;
  uint64_t v8 = v7 - v6;
  if (__OFSUB__(v7, v6))
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v10 = *a1;
  uint64_t v11 = *(void *)(*a1 + 16);
  BOOL v30 = __OFSUB__(v11, a2);
  uint64_t v12 = v11 - a2;
  if (v30)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v14 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v15 = v8 - a2;
  if (__OFSUB__(v8, a2))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  BOOL v30 = __OFSUB__(v15, v14);
  uint64_t v16 = v15 - v14;
  if (v30)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v38 = v16;
  __dst = (char *)(v10 + 32);
  uint64_t v18 = sub_1C2A0E87C(v8);
  uint64_t v37 = (char *)(v10 + 32 + 16 * a2 + 16 * a3);
  if (v18)
  {
    uint64_t v36 = a4;
    if (a2 < 0) {
      goto LABEL_46;
    }
    uint64_t v19 = v18;
    uint64_t v20 = v4[2];
    uint64_t v21 = (char *)(v4[1] + 16 * v20);
    uint64_t v22 = &v21[16 * a2];
    if (__dst != v21 || __dst >= v22) {
      memmove(__dst, v21, 16 * a2);
    }
    v36(v10 + 32 + 16 * a2, a3);
    if (v14 < 0) {
      goto LABEL_46;
    }
    uint64_t v23 = &v22[16 * v38];
    if (v37 != v23 || v37 >= &v23[16 * v14]) {
      memmove(v37, v23, 16 * v14);
    }
    *(void *)(v19 + 16) = 0;
    swift_release();
LABEL_26:
    swift_retain();
    uint64_t result = swift_unknownObjectRelease();
    if (!__OFSUB__(0, v20))
    {
      uint64_t v34 = *(void *)(v10 + 16);
      BOOL v30 = __OFADD__(v20, v34);
      uint64_t v35 = v20 + v34;
      if (!v30)
      {
        if (v35 >= v20)
        {
          if ((v35 & 0x8000000000000000) == 0)
          {
            *uint64_t v4 = v10;
            v4[1] = &__dst[-16 * v20];
            v4[2] = v20;
            v4[3] = (2 * v35) | 1;
            return result;
          }
          goto LABEL_39;
        }
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v25 = (void (*)(char *, uint64_t))a4;
  uint64_t v20 = v4[2];
  uint64_t v26 = v20 + a2;
  if (__OFADD__(v20, a2))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v26 < v20)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (__OFSUB__(v26, v20))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v27 = v4[1];
  memcpy(__dst, (const void *)(v27 + 16 * v20), 16 * a2);
  v25(&__dst[16 * a2], a3);
  uint64_t v28 = v26 + v38;
  if (__OFADD__(v26, v38))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v29 = v4[3] >> 1;
  BOOL v30 = __OFSUB__(v29, v28);
  BOOL v31 = v29 < v28;
  uint64_t v32 = v29 - v28;
  if (v31)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (!v30)
  {
    memcpy(v37, (const void *)(v27 + 16 * v28), 16 * v32);
    goto LABEL_26;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t result = sub_1C2A9E6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C2A0E630(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_34:
    if (v8 >= v7) {
      goto LABEL_21;
    }
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v7 = a2;
  uint64_t v6 = result;
  if ((a6 & 1) == 0) {
    goto LABEL_34;
  }
  sub_1C2A9E8F8();
  swift_unknownObjectRetain();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = a4 + 16 * a5 + 16 * v8;
  if (v13 == v11 + 16 * v12 + 32)
  {
    unint64_t v15 = *(void *)(v11 + 24);
    uint64_t result = swift_release();
    uint64_t v16 = (v15 >> 1) - v12;
    uint64_t v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
  }
  else
  {
    swift_release();
    uint64_t v14 = v8;
  }
  swift_unknownObjectRetain();
  uint64_t v17 = swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      uint64_t v17 = MEMORY[0x1E4FBC860];
    }
    uint64_t v18 = *(void *)(v17 + 16);
    if (v13 == v17 + 16 * v18 + 32)
    {
      unint64_t v20 = *(void *)(v17 + 24);
      uint64_t result = swift_release();
      uint64_t v21 = (v20 >> 1) - v18;
      BOOL v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t result = swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    uint64_t v17 = MEMORY[0x1E4FBC860];
  }
  uint64_t v19 = *(void *)(v17 + 16);
  if (v13 == v17 + 16 * v19 + 32)
  {
    unint64_t v23 = *(void *)(v17 + 24);
    uint64_t result = swift_release();
    uint64_t v24 = (v23 >> 1) - v19;
    BOOL v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22) {
      goto LABEL_21;
    }
LABEL_39:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7) {
    uint64_t v25 = v7;
  }
  else {
    uint64_t v25 = v8;
  }
  if (v25 <= v6) {
    uint64_t v26 = v6;
  }
  else {
    uint64_t v26 = v25;
  }
  if (!v26) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C293D4B4(0, &qword_1EBB92478, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x1E4FBBE00]);
  uint64_t v27 = (void *)swift_allocObject();
  int64_t v28 = _swift_stdlib_malloc_size(v27);
  uint64_t v29 = v28 - 32;
  if (v28 < 32) {
    uint64_t v29 = v28 - 17;
  }
  void v27[2] = v6;
  v27[3] = 2 * (v29 >> 4);
  return (uint64_t)v27;
}

uint64_t (*sub_1C2A0E860())()
{
  return nullsub_1;
}

uint64_t sub_1C2A0E87C(uint64_t a1)
{
  int64_t isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!isUniquelyReferenced_nonNull) {
    return 0;
  }
  uint64_t v6 = v1[2];
  unint64_t v5 = v1[3];
  uint64_t v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v8 = v1[1];
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
  sub_1C2A9E8F8();
  swift_unknownObjectRetain();
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = *(void *)(v9 + 16);
  if (v8 + 16 * v6 + 16 * v7 != v9 + 16 * v10 + 32)
  {
    swift_release();
LABEL_8:
    uint64_t v11 = v7;
    goto LABEL_10;
  }
  unint64_t v12 = *(void *)(v9 + 24);
  swift_release();
  uint64_t v13 = (v12 >> 1) - v10;
  BOOL v14 = __OFADD__(v7, v13);
  uint64_t v11 = v7 + v13;
  if (v14)
  {
    __break(1u);
    JUMPOUT(0x1C2A0E9ECLL);
  }
LABEL_10:
  if (v11 >= a1)
  {
    sub_1C2A9E8F8();
    swift_unknownObjectRetain();
    a1 = swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = MEMORY[0x1E4FBC860];
    }
    uint64_t v15 = v8 + 16 * v6 - a1;
    uint64_t v16 = v15 - 32;
    uint64_t v17 = v15 - 17;
    if (v16 >= 0) {
      uint64_t v17 = v16;
    }
    int64_t isUniquelyReferenced_nonNull = v7 + (v17 >> 4);
    if (!__OFADD__(v7, v17 >> 4))
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (isUniquelyReferenced_nonNull >= v4) {
        return a1;
      }
LABEL_21:
      sub_1C2A0EB4C(isUniquelyReferenced_nonNull, v4, 0);
      return a1;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  return 0;
}

unint64_t sub_1C2A0EA1C()
{
  unint64_t result = qword_1EBB912B8;
  if (!qword_1EBB912B8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB912B8);
  }
  return result;
}

uint64_t method lookup function for DiagramLine(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DiagramLine);
}

uint64_t dispatch thunk of DiagramLine.__allocating_init(lineDiagramConfig:diagramData:hbxViewControllerFactory:axisMetricsFactory:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of DiagramLine.modelSpace.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DiagramLine.screenInsets.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DiagramLine.drawingBlock.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

unint64_t sub_1C2A0EB0C()
{
  unint64_t result = qword_1EA31EB50;
  if (!qword_1EA31EB50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA31EB50);
  }
  return result;
}

unint64_t sub_1C2A0EB4C(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = a3 - v4;
  if (__OFSUB__(a3, v4))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!v6) {
    goto LABEL_14;
  }
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(v7 + 16);
  BOOL v9 = __OFSUB__(v8, a2);
  uint64_t v10 = v8 - a2;
  if (v9) {
    goto LABEL_18;
  }
  if (v10 < 0)
  {
LABEL_21:
    unint64_t result = sub_1C2A9E6A8();
    __break(1u);
    return result;
  }
  unint64_t result = v7 + 32 + 16 * result + 16 * a3;
  uint64_t v11 = (const void *)(v7 + 32 + 16 * a2);
  if ((const void *)result != v11 || result >= (unint64_t)v11 + 16 * v10) {
    unint64_t result = (unint64_t)memmove((void *)result, v11, 16 * v10);
  }
  uint64_t v13 = *(void *)(v7 + 16);
  BOOL v9 = __OFADD__(v13, v6);
  uint64_t v14 = v13 + v6;
  if (v9) {
    goto LABEL_19;
  }
  *(void *)(v7 + 16) = v14;
LABEL_14:
  if (a3 > 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1C2A0EC40(uint64_t result, unint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  unint64_t v4 = *(void *)(v2 + 24);
  uint64_t v5 = (v4 >> 1) - v3;
  if (__OFSUB__(v4 >> 1, v3)) {
    goto LABEL_69;
  }
  unint64_t v47 = *(void *)(result + 16);
  if (v47 == a2) {
    return result;
  }
  if (v47 <= a2) {
    goto LABEL_70;
  }
  uint64_t v6 = (uint64_t *)v2;
  unint64_t v48 = a2 + 1;
  uint64_t v46 = result + 32;
  long long v49 = *(_OWORD *)(result + 32 + 16 * a2);
  uint64_t v44 = result + 64;
  uint64_t v45 = result + 48;
  while (1)
  {
    uint64_t v7 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    uint64_t v51 = sub_1C2A0E630(v5, v5 + 1, *v6, v6[1], v3, v4);
    uint64_t v8 = sub_1C2A0E860();
    BOOL v9 = v6;
    sub_1C2A0E3B4(&v51, v5, 0, (void (*)(uint64_t, uint64_t))v8);
    swift_release();
    unint64_t result = swift_release();
    uint64_t v3 = v6[2];
    unint64_t v4 = v6[3];
    unint64_t v50 = v4 >> 1;
    uint64_t v10 = (v4 >> 1) - v3;
    if (__OFSUB__(v4 >> 1, v3)) {
      goto LABEL_64;
    }
    uint64_t v11 = v6[1];
    if ((v4 & 1) == 0) {
      goto LABEL_15;
    }
    sub_1C2A9E8F8();
    swift_unknownObjectRetain();
    uint64_t v12 = swift_dynamicCastClass();
    if (!v12)
    {
      swift_unknownObjectRelease();
      uint64_t v12 = MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = *(void *)(v12 + 16);
    if (v11 + 16 * v3 + 16 * v10 != v12 + 16 * v13 + 32)
    {
      unint64_t result = swift_release();
LABEL_15:
      uint64_t v14 = (v4 >> 1) - v3;
      if (v5 >= v10) {
        goto LABEL_20;
      }
      goto LABEL_16;
    }
    unint64_t v16 = *(void *)(v12 + 24);
    unint64_t result = swift_release();
    uint64_t v17 = (v16 >> 1) - v13;
    BOOL v18 = __OFADD__(v10, v17);
    uint64_t v14 = v10 + v17;
    if (v18) {
      goto LABEL_68;
    }
    uint64_t v6 = v9;
    if (v5 >= v14)
    {
LABEL_20:
      char v15 = 0;
      goto LABEL_54;
    }
LABEL_16:
    *(_OWORD *)(v11 + 16 * v3 + 16 * v5) = v49;
    long long v49 = 0u;
    unint64_t result = v48;
    if (v48 != v47)
    {
      if (v48 <= v47) {
        unint64_t v19 = v47;
      }
      else {
        unint64_t v19 = v48;
      }
      unint64_t v20 = v47 + ~v48;
      unint64_t v21 = v14 + ~v5;
      if (v20 >= v21) {
        unint64_t v22 = v14 + ~v5;
      }
      else {
        unint64_t v22 = v47 + ~v48;
      }
      unint64_t v23 = v19 - v48;
      if (v22 >= v19 - v48) {
        unint64_t v22 = v19 - v48;
      }
      unint64_t v24 = v22 + 1;
      if (v24 > 0x22)
      {
        if (v20 >= v21) {
          unint64_t v20 = v14 + ~v5;
        }
        if (v20 >= v23) {
          unint64_t v20 = v19 - v48;
        }
        uint64_t v25 = v11 + 16 * (v5 + v3);
        if (v25 + 16 + 16 * v20 >= v25 + 16 && v25 + 24 + 16 * v20 >= v25 + 24 && !(v20 >> 60))
        {
          uint64_t v26 = v11 + 16 * (v5 + v3);
          unint64_t v27 = v47 + ~v48;
          if (v27 >= v14 + ~v5) {
            unint64_t v27 = v14 + ~v5;
          }
          if (v27 < v23) {
            unint64_t v23 = v27;
          }
          if (v26 + 16 >= v45 + 16 * v48 + 16 * v23 || v46 + 16 * v48 >= v26 + 16 * v23 + 32)
          {
            uint64_t v28 = v24 & 3;
            if ((v24 & 3) == 0) {
              uint64_t v28 = 4;
            }
            unint64_t v29 = v24 - v28;
            uint64_t v30 = v48 + v29;
            v7 += v29;
            BOOL v31 = (_OWORD *)(v11 + 16 * v5 + 16 * v3 + 48);
            uint64_t v32 = (long long *)(v44 + 16 * v48);
            do
            {
              long long v34 = *(v32 - 2);
              long long v33 = *(v32 - 1);
              long long v36 = *v32;
              long long v35 = v32[1];
              v32 += 4;
              *(v31 - 2) = v34;
              *(v31 - 1) = v33;
              *BOOL v31 = v36;
              v31[1] = v35;
              v31 += 4;
              v29 -= 4;
            }
            while (v29);
            unint64_t result = v30;
          }
        }
      }
      uint64_t v37 = 0;
      unint64_t v38 = v19 - result;
      while (v38 != v37)
      {
        uint64_t v39 = v46 + 16 * result;
        if (v14 - v7 == v37)
        {
          char v15 = 0;
          unint64_t v48 = result + v37 + 1;
          uint64_t v5 = v14;
          long long v49 = *(_OWORD *)(v39 + 16 * v37);
          goto LABEL_54;
        }
        *(_OWORD *)(v11 + 16 * v7 + 16 * v3 + 16 * v37) = *(_OWORD *)(v39 + 16 * v37);
        ++v37;
        if (!(result - v47 + v37))
        {
          uint64_t v5 = v7 + v37;
          char v15 = 1;
          unint64_t v48 = v47;
          goto LABEL_54;
        }
      }
      goto LABEL_62;
    }
    char v15 = 1;
    ++v5;
    unint64_t v48 = v47;
LABEL_54:
    uint64_t v40 = v5 - v10;
    if (__OFSUB__(v5, v10)) {
      goto LABEL_65;
    }
    if (v40)
    {
      sub_1C2A9E8F8();
      swift_unknownObjectRetain();
      unint64_t result = swift_dynamicCastClass();
      if (!result)
      {
        swift_unknownObjectRelease();
        unint64_t result = MEMORY[0x1E4FBC860];
      }
      uint64_t v41 = *(void *)(result + 16);
      BOOL v18 = __OFADD__(v41, v40);
      uint64_t v42 = v41 + v40;
      if (v18) {
        goto LABEL_66;
      }
      *(void *)(result + 16) = v42;
      unint64_t result = swift_release();
      unint64_t v43 = v50 + v40;
      if (__OFADD__(v50, v40)) {
        goto LABEL_67;
      }
      if ((v43 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_62:
        __break(1u);
        break;
      }
      unint64_t v4 = v4 & 1 | (2 * v43);
      v6[3] = v4;
    }
    if (v15) {
      return result;
    }
  }
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
  return result;
}

uint64_t sub_1C2A0F044(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result != 1)
  {
    sub_1C295C40C(result);
    return sub_1C295C40C(a4);
  }
  return result;
}

uint64_t StatisticsOption.bitMaskValue.getter()
{
  uint64_t result = 2;
  switch(*v0)
  {
    case 1:
      uint64_t result = 4;
      break;
    case 2:
      uint64_t result = 8;
      break;
    case 3:
      uint64_t result = 16;
      break;
    case 4:
      uint64_t result = 32;
      break;
    case 5:
      uint64_t result = 64;
      break;
    case 6:
      uint64_t result = _HKStatisticOptionsAverageSampleDuration();
      break;
    case 7:
      uint64_t result = _HKStatisticsOptionPresence();
      break;
    case 8:
      uint64_t result = _HKStatisticsOptionBaselineRelativeQuantities();
      break;
    case 9:
      uint64_t v2 = _HKStatisticsOptionAttenuateSamples();
      if ((v2 & 0xFFFFFFFFFFFFFFFDLL) != 0) {
        uint64_t result = v2 | 2;
      }
      else {
        uint64_t result = 2;
      }
      break;
    default:
      return result;
  }
  return result;
}

HealthVisualization::StatisticsOption_optional __swiftcall StatisticsOption.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C2A9E6E8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static StatisticsOption.allCases.getter()
{
  return &unk_1F1DEA7A8;
}

unint64_t StatisticsOption.rawValue.getter()
{
  unint64_t result = 0x6574657263736964;
  switch(*v0)
  {
    case 3:
      unint64_t result = 0x6974616C756D7563;
      break;
    case 4:
      unint64_t result = 0x6563655274736F6DLL;
      break;
    case 5:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 6:
      unint64_t result = 0x4465676172657661;
      break;
    case 7:
      unint64_t result = 0x65636E6573657270;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2A0F360()
{
  return sub_1C2A9E9E8();
}

uint64_t sub_1C2A0F3A8()
{
  return sub_1C2A7CD30();
}

uint64_t sub_1C2A0F3B0()
{
  return sub_1C2A9E9E8();
}

HealthVisualization::StatisticsOption_optional sub_1C2A0F3F4(Swift::String *a1)
{
  return StatisticsOption.init(rawValue:)(*a1);
}

unint64_t sub_1C2A0F400@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = StatisticsOption.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C2A0F428()
{
  return sub_1C2A9DE58();
}

uint64_t sub_1C2A0F488()
{
  return sub_1C2A9DE38();
}

void sub_1C2A0F4D8(void *a1@<X8>)
{
  *a1 = &unk_1F1DEA7A8;
}

unint64_t sub_1C2A0F4EC()
{
  unint64_t result = qword_1EBB91C90;
  if (!qword_1EBB91C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91C90);
  }
  return result;
}

unint64_t sub_1C2A0F544()
{
  unint64_t result = qword_1EA31EB58[0];
  if (!qword_1EA31EB58[0])
  {
    sub_1C2975384();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA31EB58);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StatisticsOption(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StatisticsOption(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2A0F6F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

unint64_t sub_1C2A0F720()
{
  unint64_t result = qword_1EBB92590;
  if (!qword_1EBB92590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB92590);
  }
  return result;
}

uint64_t DateInterval.midpoint.getter()
{
  uint64_t v0 = sub_1C2A9C6E8();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C2A9C388();
  sub_1C2A9C378();
  return sub_1C2A9C608();
}

uint64_t DateInterval.timeIntervalSinceReferenceDateRange.getter()
{
  uint64_t v0 = sub_1C2A9C6E8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unsigned int v6 = (char *)&v13 - v5;
  sub_1C2A9C378();
  sub_1C2A9C5F8();
  double v8 = v7;
  BOOL v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v6, v0);
  sub_1C2A9C348();
  sub_1C2A9C5F8();
  double v11 = v10;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v9)(v3, v0);
  if (v8 > v11) {
    __break(1u);
  }
  return result;
}

uint64_t DateInterval.shifted(by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  sub_1C2939EB8(0, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v47 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  long long v49 = (char *)&v38 - v6;
  uint64_t v7 = sub_1C2A9C6E8();
  double v8 = *(void (**)(uint64_t))(v7 - 8);
  MEMORY[0x1F4188790](v7);
  double v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v38 - v12;
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v38 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v42 = (char *)&v38 - v18;
  uint64_t v46 = (void (*)(uint64_t))MEMORY[0x1E4F27CA0];
  sub_1C2939EB8(0, &qword_1EBB92528, MEMORY[0x1E4F27CA0]);
  MEMORY[0x1F4188790](v19 - 8);
  unint64_t v21 = (char *)&v38 - v20;
  uint64_t v22 = sub_1C2A9C868();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  unint64_t v50 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A9C448();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    long long v35 = v46;
    long long v36 = &qword_1EBB92528;
  }
  else
  {
    unint64_t v43 = v13;
    uint64_t v44 = v10;
    uint64_t v40 = v23;
    uint64_t v41 = v22;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v50, v21, v22);
    sub_1C2A9C378();
    uint64_t v25 = v49;
    uint64_t v45 = a1;
    sub_1C2A9C808();
    uint64_t v39 = (void (*)(char *, uint64_t))*((void *)v8 + 1);
    v39(v16, v7);
    uint64_t v26 = (unsigned int (*)(char *, uint64_t, uint64_t))*((void *)v8 + 6);
    if (v26(v25, 1, v7) == 1)
    {
      uint64_t v37 = v50;
      unint64_t v47 = v49;
    }
    else
    {
      uint64_t v46 = v8;
      unint64_t v27 = (void (*)(char *, char *, uint64_t))*((void *)v8 + 4);
      uint64_t v28 = v42;
      v27(v42, v49, v7);
      sub_1C2A9C348();
      unint64_t v29 = v47;
      sub_1C2A9C808();
      uint64_t v30 = v29;
      BOOL v31 = v39;
      v39(v16, v7);
      if (v26(v30, 1, v7) != 1)
      {
        uint64_t v32 = v43;
        v27(v43, v30, v7);
        long long v33 = (void (*)(char *, char *, uint64_t))*((void *)v46 + 2);
        v33(v16, v28, v7);
        v33(v44, v32, v7);
        sub_1C2A9C358();
        v31(v32, v7);
        v31(v28, v7);
        return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v50, v41);
      }
      uint64_t v37 = v50;
      v31(v28, v7);
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v37, v41);
    long long v36 = &qword_1EBB92520;
    long long v35 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    unint64_t v21 = v47;
  }
  sub_1C2A0FEBC((uint64_t)v21, v36, v35);
  uint64_t result = sub_1C2A9E628();
  __break(1u);
  return result;
}

uint64_t sub_1C2A0FEBC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C2939EB8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t DateInterval.inset(by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  sub_1C2939EB8(0, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v72 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  long long v76 = (char *)&v64 - v6;
  uint64_t v79 = sub_1C2A9C6E8();
  uint64_t v7 = *(void **)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  long long v71 = (char *)&v64 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v64 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v64 - v16;
  long long v70 = (void (*)(uint64_t))MEMORY[0x1E4F27CA0];
  sub_1C2939EB8(0, &qword_1EBB92528, MEMORY[0x1E4F27CA0]);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v64 - v19;
  uint64_t v21 = sub_1C2A9C868();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v78 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C2A9C468();
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v28 = MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&v64 - v29;
  uint64_t v67 = v32;
  uint64_t v68 = v31;
  (*(void (**)(char *, uint64_t, __n128))(v32 + 16))((char *)&v64 - v29, a1, v28);
  long long v77 = v26;
  DateComponents.negated.getter((uint64_t)v26);
  sub_1C2A9C448();
  uint64_t v33 = v21;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    uint64_t v62 = v70;
    uint64_t v63 = &qword_1EBB92528;
LABEL_11:
    sub_1C2A0FEBC((uint64_t)v20, v63, v62);
    uint64_t result = sub_1C2A9E628();
    __break(1u);
    return result;
  }
  long long v34 = v17;
  CGPoint v64 = v9;
  uint64_t v69 = v22;
  long long v70 = (void (*)(uint64_t))v33;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v78, v20, v33);
  sub_1C2A9C378();
  long long v35 = v76;
  long long v74 = v30;
  sub_1C2A9C808();
  long long v36 = v14;
  uint64_t v37 = (void (*)(void))v7[1];
  uint64_t v38 = v36;
  uint64_t v39 = v79;
  v37();
  uint64_t v66 = (unsigned int (*)(char *, uint64_t, uint64_t))v7[6];
  if (v66(v35, 1, v39) == 1)
  {
    uint64_t v72 = v76;
LABEL_10:
    (*(void (**)(char *, void (*)(uint64_t)))(v69 + 8))(v78, v70);
    uint64_t v63 = &qword_1EBB92520;
    uint64_t v62 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    uint64_t v20 = v72;
    goto LABEL_11;
  }
  CGPoint v65 = v7;
  uint64_t v40 = (void (*)(char *, char *, uint64_t))v7[4];
  uint64_t v41 = v17;
  uint64_t v42 = v79;
  v40(v41, v76, v79);
  sub_1C2A9C348();
  unint64_t v43 = v72;
  sub_1C2A9C808();
  uint64_t v44 = v43;
  ((void (*)(char *, uint64_t))v37)(v38, v42);
  unsigned int v45 = v66(v43, 1, v42);
  uint64_t v46 = v37;
  if (v45 == 1)
  {
    ((void (*)(char *, uint64_t))v37)(v34, v79);
    goto LABEL_10;
  }
  unint64_t v47 = v71;
  v40(v71, v44, v79);
  sub_1C2A9C5F8();
  double v49 = v48;
  sub_1C2A9C5F8();
  uint64_t v50 = v69;
  uint64_t v51 = v74;
  if (v49 <= v52)
  {
    uint64_t v58 = (void (*)(char *, char *, uint64_t))v65[2];
    uint64_t v59 = v79;
    v58(v38, v34, v79);
    v58(v64, v47, v59);
    sub_1C2A9C358();
    ((void (*)(char *, uint64_t))v46)(v47, v59);
    ((void (*)(char *, uint64_t))v46)(v34, v59);
    (*(void (**)(char *, void (*)(uint64_t)))(v50 + 8))(v78, v70);
    uint64_t v60 = v68;
    uint64_t v61 = *(void (**)(char *, uint64_t))(v67 + 8);
    v61(v77, v68);
    return ((uint64_t (*)(char *, uint64_t))v61)(v74, v60);
  }
  else
  {
    uint64_t v53 = v79;
    ((void (*)(char *, uint64_t))v46)(v47, v79);
    ((void (*)(char *, uint64_t))v46)(v34, v53);
    (*(void (**)(char *, void (*)(uint64_t)))(v50 + 8))(v78, v70);
    uint64_t v54 = v68;
    int v55 = *(void (**)(char *, uint64_t))(v67 + 8);
    v55(v77, v68);
    v55(v51, v54);
    uint64_t v56 = sub_1C2A9C398();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v73, v75, v56);
  }
}

uint64_t DateInterval.clipStart(maxDuration:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v5 = sub_1C2A9C6E8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v17 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v17 - v11;
  if (a2 <= 0.0 || (sub_1C2A9C388(), v13 - a2 <= 0.0))
  {
    uint64_t v15 = sub_1C2A9C398();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
    return v16(a1, v2, v15);
  }
  else
  {
    sub_1C2A9C348();
    sub_1C2A9C608();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v12, v5);
    sub_1C2A9C348();
    sub_1C2A9C358();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
}

uint64_t static ChartContextHelpers.approximateSecondsInAnHour.getter()
{
  return 3600;
}

uint64_t static ChartContextHelpers.approximateSecondsInADay.getter()
{
  return 86400;
}

uint64_t static ChartContextHelpers.approximateSecondsInAWeek.getter()
{
  return 604800;
}

uint64_t static ChartContextHelpers.approximateSecondsInAMonth.getter()
{
  return 2419200;
}

uint64_t static ChartContextHelpers.approximateSecondsInAYear.getter()
{
  return 29030400;
}

uint64_t static ChartContextHelpers.approximateSeconds(for:)(char a1)
{
  return qword_1C2AACD48[a1];
}

uint64_t static ChartContextHelpers.chartContextForDay(from:preferredOverlay:chartOptions:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v26 = a4;
  uint64_t v28 = a2;
  v24[1] = a1;
  int v27 = a3 & 1;
  uint64_t v25 = sub_1C2A9CAB8();
  uint64_t v4 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2992F14(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v24 - v8;
  uint64_t v10 = sub_1C2A9C868();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  double v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C2A9C6E8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v24 - v19;
  sub_1C2A9C838();
  sub_1C2A9C748();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1C2A9CAE8();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
  sub_1C2A9C368();
  uint64_t v21 = sub_1C2A9C398();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 0, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v26, v25);
  uint64_t v22 = sub_1C2A9CAC8();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  return v22;
}

uint64_t static ChartContextHelpers.chartContextForDays(with:referenceDate:preferredOverlay:chartOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  return sub_1C2A11648(1, a1, a2, a3, a4, a5 & 1, a6);
}

uint64_t static ChartContextHelpers.chartContext(for:scalarOffsetRange:referenceDate:preferredOverlay:chartOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  return sub_1C2A11648(a1, a2, a3, a4, a5, a6 & 1, a7);
}

uint64_t static ChartContextHelpers.chartContextForCalendarWeek(from:chartOptions:)(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = a2;
  uint64_t v2 = sub_1C2A9CAB8();
  uint64_t v63 = *(void *)(v2 - 8);
  uint64_t v64 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v66 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2992F14(0, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v57 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v60 = (uint64_t)&v46 - v7;
  uint64_t v8 = sub_1C2A9C6E8();
  uint64_t v61 = *(void *)(v8 - 8);
  uint64_t v62 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v50 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v56 = (char *)&v46 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v51 = (char *)&v46 - v13;
  uint64_t v14 = sub_1C2A9C858();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1C2A9C868();
  uint64_t v18 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2992F14(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
  MEMORY[0x1F4188790](v21 - 8);
  double v49 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v46 - v24;
  uint64_t v26 = sub_1C2A9C398();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v67 = (char *)&v46 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A9C838();
  uint64_t v29 = *MEMORY[0x1E4F27BD8];
  double v52 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v52(v17, v29, v14);
  sub_1C2A9C758();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v53 = v17;
  uint64_t v54 = v15 + 8;
  uint64_t v55 = v14;
  v30(v17, v14);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v18 + 8);
  v31(v20, v68);
  uint64_t v58 = v27;
  uint64_t v59 = v26;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_1C2992F68((uint64_t)v25, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
    sub_1C2A9CAE8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v57, 1, 1, v62);
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v66, v65, v64);
    return sub_1C2A9CAD8();
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
    double v48 = v30;
    v33(v67, v25, v59);
    sub_1C2A9C838();
    uint64_t v34 = *MEMORY[0x1E4F27C50];
    unint64_t v47 = v31;
    long long v35 = v53;
    uint64_t v36 = v55;
    v52(v53, v34, v55);
    uint64_t v37 = v56;
    sub_1C2A9C378();
    uint64_t v38 = v60;
    sub_1C2A9C818();
    uint64_t v40 = v61;
    uint64_t v39 = v62;
    double v52 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 8);
    ((void (*)(char *, uint64_t))v52)(v37, v62);
    v48(v35, v36);
    v47(v20, v68);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
    {
      sub_1C2992F68(v60, &qword_1EBB92520, MEMORY[0x1E4F27928]);
      sub_1C2A9CAE8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v57, 1, 1, v39);
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v66, v65, v64);
      uint64_t v32 = sub_1C2A9CAD8();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v67, v59);
    }
    else
    {
      uint64_t v41 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v51, v60, v39);
      sub_1C2A9CAE8();
      sub_1C2A9C378();
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v50, v41, v39);
      uint64_t v42 = v49;
      sub_1C2A9C358();
      uint64_t v44 = v58;
      uint64_t v43 = v59;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v42, 0, 1, v59);
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v66, v65, v64);
      uint64_t v32 = sub_1C2A9CAC8();
      ((void (*)(char *, uint64_t))v52)(v41, v39);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v67, v43);
    }
  }
  return v32;
}

uint64_t static ChartContextHelpers.chartContextForStatistics(interval:from:preferredOverlay:chartOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v17[1] = a3;
  uint64_t v6 = sub_1C2A9CAB8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C2A9C6E8();
  MEMORY[0x1F4188790](v10 - 8);
  MEMORY[0x1F4188790](v11);
  sub_1C2992F14(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v17 - v13;
  sub_1C2A9CAE8();
  sub_1C2A9C648();
  sub_1C2A9C648();
  sub_1C2A9C358();
  uint64_t v15 = sub_1C2A9C398();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a5, v6);
  return sub_1C2A9CAC8();
}

uint64_t sub_1C2A11648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v69 = a7;
  uint64_t v70 = a5;
  LODWORD(v71) = a6;
  uint64_t v72 = a4;
  uint64_t v73 = a1;
  uint64_t v63 = a3;
  uint64_t v75 = a2;
  uint64_t v7 = sub_1C2A9CAB8();
  uint64_t v68 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2992F14(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v61 = (char *)v57 - v11;
  uint64_t v12 = sub_1C2A9C868();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2992F14(0, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v64 = (char *)v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v62 = (char *)v57 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)v57 - v21;
  uint64_t v23 = sub_1C2A9C6E8();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v60 = (char *)v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v59 = (char *)v57 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)v57 - v29;
  MEMORY[0x1F4188790](v31);
  long long v74 = (char *)v57 - v32;
  uint64_t v33 = sub_1C2A9C858();
  __n128 v34 = MEMORY[0x1F4188790](v33);
  uint64_t v36 = (char *)v57 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = **((unsigned int **)&unk_1E645A568 + (char)v73);
  uint64_t v67 = v38;
  uint64_t v39 = *(void (**)(char *, uint64_t, __n128))(v38 + 104);
  uint64_t v73 = v40;
  v39(v36, v37, v34);
  uint64_t result = sub_1C2A9C838();
  if (__OFSUB__(0, v75))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v58 = v30;
  uint64_t v65 = v7;
  uint64_t v66 = v9;
  int v42 = v71 & 1;
  sub_1C2A9C818();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v72 = v12;
  v43(v15, v12);
  uint64_t v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v44(v22, 1, v23) == 1)
  {
    sub_1C2992F68((uint64_t)v22, &qword_1EBB92520, MEMORY[0x1E4F27928]);
    sub_1C2A9CAE8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v64, 1, 1, v23);
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v66, v69, v65);
    uint64_t v45 = sub_1C2A9CAD8();
LABEL_10:
    (*(void (**)(char *, uint64_t))(v67 + 8))(v36, v73);
    return v45;
  }
  v57[1] = v42;
  long long v71 = v36;
  uint64_t v46 = *(uint64_t (**)(char *, char *, uint64_t))(v24 + 32);
  uint64_t result = v46(v74, v22, v23);
  uint64_t v47 = v63 - v75;
  if (__OFSUB__(v63, v75)) {
    goto LABEL_12;
  }
  uint64_t result = sub_1C2A9C838();
  if (!__OFSUB__(0, v47))
  {
    double v48 = (void (*)(char *, uint64_t, uint64_t))v46;
    uint64_t v49 = (uint64_t)v62;
    sub_1C2A9C818();
    v43(v15, v72);
    uint64_t v50 = v49;
    if (v44((char *)v49, 1, v23) == 1)
    {
      sub_1C2992F68(v49, &qword_1EBB92520, MEMORY[0x1E4F27928]);
      sub_1C2A9CAE8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v64, 1, 1, v23);
      (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v66, v69, v65);
      uint64_t v45 = sub_1C2A9CAD8();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v74, v23);
    }
    else
    {
      uint64_t v51 = v58;
      v48(v58, v50, v23);
      sub_1C2A9CAE8();
      double v52 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
      v52(v59, v51, v23);
      uint64_t v53 = v74;
      v52(v60, v74, v23);
      uint64_t v54 = v61;
      sub_1C2A9C358();
      uint64_t v55 = sub_1C2A9C398();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 0, 1, v55);
      (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v66, v69, v65);
      uint64_t v45 = sub_1C2A9CAC8();
      uint64_t v56 = *(void (**)(char *, uint64_t))(v24 + 8);
      v56(v51, v23);
      v56(v53, v23);
    }
    uint64_t v36 = v71;
    goto LABEL_10;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t dispatch thunk of ChartContextProducing.chartContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for ChartContextHelpers()
{
  return &type metadata for ChartContextHelpers;
}

uint64_t DiagramBar.__allocating_init(barDiagramConfig:barData:hbxViewControllerFactory:customMetricsFactory:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  DiagramBar.init(barDiagramConfig:barData:hbxViewControllerFactory:customMetricsFactory:)(a1, a2, a3, a4);
  return v8;
}

uint64_t (*sub_1C2A11E60())(CGContext *a1, uint64_t a2, double a3, double a4)
{
  return sub_1C2A12EC0;
}

uint64_t sub_1C2A11EA0(CGContext *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v86 = *(_OWORD *)a2;
  *(_OWORD *)&v86[16] = v10;
  *(_OWORD *)&v86[32] = *(_OWORD *)(a2 + 32);
  *(void *)&v86[48] = *(void *)(a2 + 48);
  *(void *)&long long v10 = *(void *)(a3 + 32);
  CGFloat v11 = *(double *)&v86[8];
  CGFloat v13 = *(double *)&v86[24];
  CGFloat v12 = *(double *)&v86[16];
  long long v15 = *(_OWORD *)&v86[32];
  CGFloat v14 = *(double *)&v86[48];
  CGAffineTransform v84 = *(CGAffineTransform *)&v86[8];
  uint64_t v16 = 0;
  double y = CGPointApplyAffineTransform((CGPoint)*(&v10 + -8), &v84).y;
  v102.origin.CGFloat x = sub_1C293CBC4();
  v95.double y = CGRectGetMaxY(v102);
  CGFloat v83 = v11;
  v84.CGFloat a = v11;
  v84.CGFloat b = v12;
  v84.CGFloat c = v13;
  *(_OWORD *)&v84.CGFloat d = v15;
  CGFloat v17 = v14;
  v84.CGFloat ty = v14;
  v95.CGFloat x = 0.0;
  double v18 = CGPointApplyAffineTransform(v95, &v84).y;
  long long v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)&v84.CGFloat a = *(_OWORD *)a2;
  *(_OWORD *)&v84.CGFloat c = v19;
  *(_OWORD *)&v84.CGFloat tx = *(_OWORD *)(a2 + 32);
  uint64_t v85 = *(void *)(a2 + 48);
  sub_1C292E56C((uint64_t)a1, (uint64_t *)&v84, a4, a5);
  unsigned int v20 = *(unsigned __int8 *)(a3 + 24);
  double point_8 = v18;
  switch(*(unsigned char *)(a3 + 24))
  {
    case 1:
    case 2:
    case 3:
      char v22 = sub_1C2A9E8D8();
      swift_bridgeObjectRelease();
      double v21 = y;
      if (v22) {
        goto LABEL_4;
      }
      break;
    default:
      swift_bridgeObjectRelease();
      double v21 = y;
LABEL_4:
      uint64_t v23 = *(void *)(a3 + 96);
      uint64_t v24 = *(void *)(v23 + 16);
      if (v24)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = 0;
        unsigned int v73 = v20;
        uint64_t v80 = v20;
        CGFloat v74 = v13;
        do
        {
          uint64_t v28 = *(void *)(v23 + 8 * v25 + 32);
          if (*(void *)(v28 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v29 = sub_1C293DDF4(2u);
            if (v30)
            {
              uint64_t v31 = *(void *)(v28 + 56) + 40 * v29;
              long long v33 = *(_OWORD *)v31;
              long long v32 = *(_OWORD *)(v31 + 16);
              uint64_t v90 = *(void *)(v31 + 32);
              v89[0] = v33;
              v89[1] = v32;
              uint64_t v34 = v33;
              if (*(void *)(v33 + 16))
              {
                LOBYTE(v84.a) = *(unsigned char *)(a3 + 22);
                sub_1C2A142D0((uint64_t)v89);
                v35.super.isCGFloat a = DiagramConfiguration.Color.toColor()().super.isa;
                switch(v80)
                {
                  case 0:
                    LOBYTE(v84.a) = 1;
                    double width = DiagramConfiguration.LineWidth.toPoints()();
                    sub_1C2A14368((uint64_t)v89 + 8, (uint64_t)v91);
                    v103.origin.CGFloat x = sub_1C293CBC4();
                    CGFloat x = v103.origin.x;
                    CGFloat v37 = v103.origin.y;
                    CGFloat v38 = v103.size.width;
                    CGFloat height = v103.size.height;
                    CGFloat point = CGRectGetMinX(v103);
                    v104.origin.CGFloat x = x;
                    v104.origin.double y = v37;
                    v104.size.double width = v38;
                    v104.size.CGFloat height = height;
                    CGFloat v13 = v74;
                    CGFloat MaxX = CGRectGetMaxX(v104);
                    v84.CGFloat a = v83;
                    v84.CGFloat b = v12;
                    v84.CGFloat c = v74;
                    *(_OWORD *)&v84.CGFloat d = v15;
                    v84.CGFloat ty = v17;
                    v96.double y = 0.0;
                    v96.CGFloat x = point;
                    *(void *)&double v41 = *(_OWORD *)&CGPointApplyAffineTransform(v96, &v84);
                    v84.CGFloat a = v83;
                    v84.CGFloat b = v12;
                    v84.CGFloat c = v74;
                    *(_OWORD *)&v84.CGFloat d = v15;
                    v84.CGFloat ty = v17;
                    v97.double y = 0.0;
                    v97.CGFloat x = MaxX;
                    CGPointApplyAffineTransform(v97, &v84);
                    if (!*(void *)(v34 + 16))
                    {
                      __break(1u);
LABEL_42:
                      __break(1u);
LABEL_43:
                      sub_1C2A9E628();
                      __break(1u);
                      JUMPOUT(0x1C2A12860);
                    }
                    v98.double y = *(CGFloat *)(v34 + 40);
                    v84.CGFloat a = v83;
                    v84.CGFloat b = v12;
                    v84.CGFloat c = v74;
                    *(_OWORD *)&v84.CGFloat d = v15;
                    v84.CGFloat ty = v17;
                    v98.CGFloat x = 0.0;
                    CGFloat v42 = CGPointApplyAffineTransform(v98, &v84).y;
                    CGContextSetLineWidth(a1, width);
                    CGContextSetLineCap(a1, kCGLineCapRound);
                    uint64_t v43 = (CGColor *)[(objc_class *)v35.super.isa CGColor];
                    CGContextSetStrokeColorWithColor(a1, v43);

                    sub_1C2A9E028();
                    sub_1C2A9E038();
                    CGContextStrokePath(a1);
                    sub_1C2A14368((uint64_t)v91, (uint64_t)v94);
                    if (v94[1])
                    {
                      LOBYTE(v84.a) = *(unsigned char *)(a3 + 25);
                      DiagramConfiguration.TextAttributes.toTextAttributes()();
                      CGFloat v44 = v41;
                      double v21 = y;
                      double v18 = point_8;
                      sub_1C2A128A0(a1, v44, v42, y, point_8);

                      swift_bridgeObjectRelease();
                    }
                    else
                    {

                      double v21 = y;
                      double v18 = point_8;
                    }
LABEL_7:
                    sub_1C2A1431C((uint64_t)v89);
                    break;
                  case 1:
                  case 3:
                    goto LABEL_43;
                  case 2:
                    LOBYTE(v84.a) = 5;
                    double v26 = DiagramConfiguration.LineWidth.toPoints()();
                    double v27 = fmax((dbl_1C2AACE90[*(char *)(a3 + 16)] - v26) * 0.5, 1.0);
                    sub_1C2A1319C(a1, (double *)v86, (uint64_t *)v89, v35.super.isa, *(unsigned char *)(a3 + 23), v26, -2.0, -8.0, -2.0, -8.0, v27, v27);

                    goto LABEL_7;
                  default:
LABEL_44:
                    JUMPOUT(0);
                }
              }
            }
            swift_bridgeObjectRelease();
          }
          ++v25;
        }
        while (v24 != v25);
        swift_bridgeObjectRelease();
        unsigned int v20 = v73;
      }
      break;
  }
  uint64_t v45 = *(void *)(a3 + 96);
  uint64_t v46 = *(void *)(v45 + 16);
  if (v46)
  {
    unsigned int v47 = v20;
    swift_bridgeObjectRetain();
    uint64_t v48 = 0;
    do
    {
      uint64_t v49 = *(void *)(v45 + 8 * v48++ + 32);
      CGAffineTransform v84 = *(CGAffineTransform *)v86;
      uint64_t v85 = *(void *)&v86[48];
      swift_bridgeObjectRetain();
      sub_1C2A13908(a1, &v84.a, v49, v21, v18);
      swift_bridgeObjectRelease();
    }
    while (v46 != v48);
    swift_bridgeObjectRelease();
    unsigned int v20 = v47;
  }
  uint64_t v81 = v20;
  switch(v20)
  {
    case 1u:
    case 2u:
    case 3u:
      char v50 = sub_1C2A9E8D8();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v50 & 1) == 0)
      {
        uint64_t v52 = *(void *)(v45 + 16);
        if (v52)
        {
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v52; ++i)
          {
            uint64_t v56 = *(void *)(v45 + 8 * i + 32);
            if (*(void *)(v56 + 16))
            {
              swift_bridgeObjectRetain();
              unint64_t v57 = sub_1C293DDF4(2u);
              if (v58)
              {
                uint64_t v59 = *(void *)(v56 + 56) + 40 * v57;
                long long v61 = *(_OWORD *)v59;
                long long v60 = *(_OWORD *)(v59 + 16);
                uint64_t v88 = *(void *)(v59 + 32);
                v87[0] = v61;
                v87[1] = v60;
                uint64_t v62 = v61;
                if (*(void *)(v61 + 16))
                {
                  LOBYTE(v84.a) = *(unsigned char *)(a3 + 22);
                  sub_1C2A142D0((uint64_t)v87);
                  v63.super.isCGFloat a = DiagramConfiguration.Color.toColor()().super.isa;
                  switch(v81)
                  {
                    case 0:
                      LOBYTE(v84.a) = 1;
                      widthCGFloat a = DiagramConfiguration.LineWidth.toPoints()();
                      sub_1C2A14368((uint64_t)v87 + 8, (uint64_t)v92);
                      v105.origin.CGFloat x = sub_1C293CBC4();
                      CGFloat v64 = v105.origin.x;
                      CGFloat v65 = v105.origin.y;
                      CGFloat v66 = v105.size.width;
                      CGFloat v67 = v13;
                      CGFloat v68 = v105.size.height;
                      pointCGFloat a = CGRectGetMinX(v105);
                      v106.origin.CGFloat x = v64;
                      v106.origin.double y = v65;
                      v106.size.double width = v66;
                      v106.size.CGFloat height = v68;
                      CGFloat v13 = v67;
                      CGFloat v69 = CGRectGetMaxX(v106);
                      v84.CGFloat a = v83;
                      v84.CGFloat b = v12;
                      v84.CGFloat c = v67;
                      *(_OWORD *)&v84.CGFloat d = v15;
                      v84.CGFloat ty = v17;
                      v99.double y = 0.0;
                      v99.CGFloat x = pointa;
                      *(void *)&CGFloat v70 = *(_OWORD *)&CGPointApplyAffineTransform(v99, &v84);
                      v84.CGFloat a = v83;
                      v84.CGFloat b = v12;
                      v84.CGFloat c = v67;
                      *(_OWORD *)&v84.CGFloat d = v15;
                      v84.CGFloat ty = v17;
                      v100.double y = 0.0;
                      v100.CGFloat x = v69;
                      CGPointApplyAffineTransform(v100, &v84);
                      if (!*(void *)(v62 + 16)) {
                        goto LABEL_42;
                      }
                      v101.double y = *(CGFloat *)(v62 + 40);
                      v84.CGFloat a = v83;
                      v84.CGFloat b = v12;
                      v84.CGFloat c = v67;
                      *(_OWORD *)&v84.CGFloat d = v15;
                      v84.CGFloat ty = v17;
                      v101.CGFloat x = 0.0;
                      CGFloat v71 = CGPointApplyAffineTransform(v101, &v84).y;
                      CGContextSetLineWidth(a1, widtha);
                      CGContextSetLineCap(a1, kCGLineCapRound);
                      uint64_t v72 = (CGColor *)[(objc_class *)v63.super.isa CGColor];
                      CGContextSetStrokeColorWithColor(a1, v72);

                      sub_1C2A9E028();
                      sub_1C2A9E038();
                      CGContextStrokePath(a1);
                      sub_1C2A14368((uint64_t)v92, (uint64_t)v93);
                      if (v93[1])
                      {
                        LOBYTE(v84.a) = *(unsigned char *)(a3 + 25);
                        DiagramConfiguration.TextAttributes.toTextAttributes()();
                        sub_1C2A128A0(a1, v70, v71, y, point_8);

                        swift_bridgeObjectRelease();
                      }
                      else
                      {
                      }
LABEL_28:
                      sub_1C2A1431C((uint64_t)v87);
                      break;
                    case 1:
                    case 3:
                      goto LABEL_43;
                    case 2:
                      LOBYTE(v84.a) = 5;
                      double v54 = DiagramConfiguration.LineWidth.toPoints()();
                      double v55 = fmax((dbl_1C2AACE90[*(char *)(a3 + 16)] - v54) * 0.5, 1.0);
                      sub_1C2A1319C(a1, (double *)v86, (uint64_t *)v87, v63.super.isa, *(unsigned char *)(a3 + 23), v54, -2.0, -8.0, -2.0, -8.0, v55, v55);

                      goto LABEL_28;
                    default:
                      goto LABEL_44;
                  }
                }
              }
              swift_bridgeObjectRelease();
            }
          }
          goto LABEL_39;
        }
      }
      break;
    default:
LABEL_39:
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

void sub_1C2A128A0(CGContext *a1, CGFloat a2, CGFloat a3, double a4, double a5)
{
  CGFloat v11 = (void *)sub_1C2A9DCF8();
  type metadata accessor for Key(0);
  sub_1C2942D7C();
  CGFloat v12 = (void *)sub_1C2A9DC58();
  objc_msgSend(v11, sel_sizeWithAttributes_, v12);
  double v14 = v13;
  double v16 = v15;

  double v17 = v14 * 0.5 + 1.0;
  double v18 = v17 + a3;
  double v19 = a3 - v17;
  if (v18 <= a4)
  {
    double v20 = 0.0;
    if (v19 >= a5) {
      goto LABEL_6;
    }
  }
  else if (v19 >= a5)
  {
    double v20 = v18 - a4;
    goto LABEL_6;
  }
  double v20 = v19 - a5;
LABEL_6:
  uint64_t v21 = *(void *)(v5 + 104);
  if (*(unsigned char *)(v21 + 144)) {
    double v22 = 0.0;
  }
  else {
    double v22 = *(double *)(v21 + 120);
  }
  double v23 = v20 - v14 * 0.5;
  double v24 = v22 + sub_1C2A064B4();
  sub_1C2A06380();
  CGFloat v25 = v14 + 2.0;
  double v26 = v22 + sub_1C2A064B4();
  sub_1C2A06380();
  sub_1C2A138C8();
  id v30 = (id)sub_1C2A9E288();
  CGContextSaveGState(a1);
  CGContextTranslateCTM(a1, a2, a3);
  CGContextRotateCTM(a1, -1.57079633);
  double v27 = (CGColor *)objc_msgSend(v30, sel_CGColor);
  CGContextSetFillColorWithColor(a1, v27);

  v32.origin.CGFloat x = v20 + v25 * -0.5;
  v32.origin.double y = -v26;
  v32.size.double width = v25;
  v32.size.CGFloat height = v16 + 2.0;
  CGContextFillRect(a1, v32);
  uint64_t v28 = (void *)sub_1C2A9DCF8();
  unint64_t v29 = (void *)sub_1C2A9DC58();
  objc_msgSend(v28, sel_drawAtPoint_withAttributes_, v29, v23, -v24);

  CGContextRestoreGState(a1);
}

uint64_t DiagramBar.init(barDiagramConfig:barData:hbxViewControllerFactory:customMetricsFactory:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  char v6 = *(unsigned char *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 9);
  CGFloat v8 = *(double *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  unsigned __int16 v10 = *(_WORD *)(a1 + 36);
  unsigned int v11 = *(_DWORD *)(a1 + 32);
  unint64_t v43 = v11 | ((unint64_t)v10 << 32);
  uint64_t v12 = *(char *)(a1 + 38);
  uint64_t v14 = *(void *)a2;
  uint64_t v13 = *(void *)(a2 + 8);
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v16 = *(void *)(a2 + 24);
  char v17 = *(unsigned char *)(a2 + 32);
  uint64_t v18 = *(void *)(a2 + 40);
  char v39 = HIBYTE(*(void *)a1);
  *(void *)(v4 + 16) = *(void *)a1;
  char v40 = v6;
  *(unsigned char *)(v4 + 24) = v6;
  *(unsigned char *)(v4 + 25) = v7;
  *(CGFloat *)(v4 + 32) = v8;
  *(void *)(v4 + 40) = v9;
  *(_DWORD *)(v4 + 48) = v11;
  unsigned __int16 v41 = v10;
  uint64_t v42 = v12;
  *(_WORD *)(v4 + 52) = v10;
  *(unsigned char *)(v4 + 54) = v12;
  *(void *)(v4 + 56) = v14;
  *(void *)(v4 + 64) = v13;
  *(void *)(v4 + 72) = v15;
  *(void *)(v4 + 80) = v16;
  *(unsigned char *)(v4 + 88) = v17;
  *(void *)(v4 + 96) = v18;
  uint64_t v51 = v15;
  uint64_t v52 = v16;
  char v53 = v17;
  uint64_t v54 = v18;
  swift_bridgeObjectRetain();
  double v19 = COERCE_DOUBLE(sub_1C29A6524());
  uint64_t v49 = v14;
  uint64_t v50 = v13;
  if (v20) {
    double v21 = 0.0;
  }
  else {
    double v21 = v19;
  }
  uint64_t v51 = v15;
  uint64_t v52 = v16;
  char v53 = v17;
  uint64_t v54 = v18;
  __C::CGRect v57 = DiagramData.diagramBounds(forceNonZeroSize:)(1);
  v59.size.double width = 0.0;
  v59.size.double height = 0.0;
  v59.origin.double x = v21;
  v59.origin.double y = v8;
  CGRect v58 = CGRectUnion((CGRect)v57, v59);
  double x = v58.origin.x;
  double y = v58.origin.y;
  double width = v58.size.width;
  double height = v58.size.height;
  uint64_t v49 = v9;
  WORD2(v50) = v41;
  LODWORD(v50) = v11;
  uint64_t v26 = sub_1C2A13520(&v49);
  uint64_t v28 = v27;
  uint64_t v49 = v14;
  uint64_t v50 = v13;
  uint64_t v51 = v15;
  uint64_t v52 = v16;
  char v53 = v17;
  uint64_t v54 = v18;
  if (sub_1C29A65FC())
  {
    double v29 = dbl_1C2AACDF8[v42];
    LOBYTE(v55[0]) = v40;
    uint64_t v49 = v14;
    uint64_t v50 = v13;
    uint64_t v51 = v15;
    uint64_t v52 = v16;
    char v53 = v17;
    uint64_t v54 = v18;
    char v30 = sub_1C29A66A8();
    swift_bridgeObjectRelease();
    char v31 = v39;
    if ((v30 & 1) == 0) {
      char v31 = 25;
    }
    LOBYTE(v49) = v31;
    double v32 = sub_1C2A136AC(v55, &v49, v29);
  }
  else
  {
    swift_bridgeObjectRelease();
    double v32 = dbl_1C2AACE38[v42];
    uint64_t v33 = qword_1C2AACE58[v42];
    double v34 = v32;
    uint64_t v35 = v33;
  }
  uint64_t v46 = v9;
  int v47 = v43;
  __int16 v48 = WORD2(v43);
  *(double *)double v55 = v32;
  v55[1] = v33;
  *(double *)&v55[2] = v34;
  v55[3] = v35;
  char v56 = 0;
  sub_1C2932CE8(a4, (uint64_t)&v49);
  type metadata accessor for DiagramAxis();
  swift_allocObject();
  sub_1C2932820(&v46, (uint64_t)v55, 0, 0, v26, v28, 0, a3, x, y, width, height, (uint64_t)&v49);
  uint64_t v37 = v36;
  sub_1C29433A8(a4);
  *(void *)(v5 + 104) = v37;
  return v5;
}

uint64_t DiagramBar.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t DiagramBar.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t (*sub_1C2A12E7C())(CGContext *a1, uint64_t a2, double a3, double a4)
{
  return sub_1C2A12EC0;
}

uint64_t sub_1C2A12EC0(CGContext *a1, uint64_t a2, double a3, double a4)
{
  return sub_1C2A11EA0(a1, a2, v4, a3, a4);
}

void sub_1C2A12ECC(CGContext *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, double a6, double a7, double a8, double a9)
{
  v38[1] = a4;
  v38[2] = a2;
  v38[3] = a3;
  uint64_t v15 = sub_1C2A9C8C8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = (void *)sub_1C2A9DCF8();
  type metadata accessor for Key(0);
  sub_1C2942D7C();
  char v20 = (void *)sub_1C2A9DC58();
  objc_msgSend(v19, sel_sizeWithAttributes_, v20);
  double v22 = v21;
  double v24 = v23;

  double v25 = a6 - v22 * 0.5;
  double v26 = a7 - v24 * 0.5;
  double v27 = UIEdgeInsetsInsetRect(v25, v26, v22, v24, a8, a9);
  CGFloat v29 = v28;
  CGFloat v31 = v30;
  CGFloat v33 = v32;
  CGContextSaveGState(a1);
  double v34 = (CGColor *)objc_msgSend(a5, sel_CGColor);
  CGContextSetFillColorWithColor(a1, v34);

  v39.origin.double x = v27;
  v39.origin.double y = v29;
  v39.size.double width = v31;
  v39.size.double height = v33;
  uint64_t v35 = CGPathCreateWithRoundedRect(v39, 6.0, 6.0, 0);
  CGContextAddPath(a1, v35);

  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E4F1DA40], v15);
  sub_1C2A9E048();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  uint64_t v36 = (void *)sub_1C2A9DCF8();
  uint64_t v37 = (void *)sub_1C2A9DC58();
  objc_msgSend(v36, sel_drawAtPoint_withAttributes_, v37, v25, v26);

  CGContextRestoreGState(a1);
}

void sub_1C2A1319C(CGContext *a1, double *a2, uint64_t *a3, void *a4, char a5, CGFloat a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  uint64_t v12 = *a3;
  uint64_t v13 = *(void *)(*a3 + 16);
  if (v13)
  {
    LOBYTE(v49.a) = a5;
    unint64_t v18 = DiagramConfiguration.TextAttributes.toTextAttributes()();
    unint64_t v19 = v13 - 1;
    if (v13 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v41 = v18;
      CGFloat v20 = a2[3];
      CGFloat v46 = a2[2];
      CGFloat v47 = a2[1];
      CGFloat v22 = a2[4];
      CGFloat v21 = a2[5];
      CGFloat v23 = a2[6];
      sub_1C2A14368((uint64_t)(a3 + 1), (uint64_t)v50);
      double v24 = self;
      uint64_t v25 = 0;
      uint64_t v26 = v13 - 2;
      uint64_t v27 = v12 + 56;
      while (v19 != v25)
      {
        CGPoint v54 = *(CGPoint *)(v27 - 24);
        v49.CGFloat a = v47;
        v49.CGFloat b = v46;
        v49.CGFloat c = v20;
        v49.CGFloat d = v22;
        v49.CGFloat tx = v21;
        v49.CGFloat ty = v23;
        CGPoint v28 = CGPointApplyAffineTransform(v54, &v49);
        double x = v28.x;
        double y = v28.y;
        CGPoint v55 = *(CGPoint *)(v27 - 8);
        v49.CGFloat a = v47;
        v49.CGFloat b = v46;
        v49.CGFloat c = v20;
        v49.CGFloat d = v22;
        v49.CGFloat tx = v21;
        v49.CGFloat ty = v23;
        CGPoint v31 = CGPointApplyAffineTransform(v55, &v49);
        double v32 = v31.x;
        double v33 = v31.y;
        if (!v25 && a11 > 0.0)
        {
          CGAffineTransformMakeTranslation(&v49, a6 * 0.5 + a11, 0.0);
          CGPoint v34 = CGPointApplyAffineTransform(v28, &v49);
          double x = v34.x;
          double y = v34.y;
        }
        if (v26 == v25 && a12 > 0.0)
        {
          CGAffineTransformMakeTranslation(&v49, -(a6 * 0.5 + a12), 0.0);
          CGPoint v35 = CGPointApplyAffineTransform(v31, &v49);
          double v32 = v35.x;
          double v33 = v35.y;
        }
        CGContextSaveGState(a1);
        CGContextSaveGState(a1);
        id v36 = objc_msgSend(v24, sel__currentTraitCollection);
        if (!v36) {
          goto LABEL_27;
        }
        uint64_t v37 = v36;
        id v38 = objc_msgSend(v36, sel_userInterfaceStyle);

        if (v38 == (id)2) {
          CGBlendMode v39 = kCGBlendModeNormal;
        }
        else {
          CGBlendMode v39 = kCGBlendModePlusDarker;
        }
        CGContextSetBlendMode(a1, v39);
        CGContextSetLineWidth(a1, a6);
        CGContextSetLineCap(a1, kCGLineCapRound);
        char v40 = (CGColor *)objc_msgSend(a4, sel_CGColor);
        CGContextSetStrokeColorWithColor(a1, v40);

        sub_1C2A9E028();
        sub_1C2A9E038();
        CGContextStrokePath(a1);
        CGContextRestoreGState(a1);
        if (v19 >> 1 == v25)
        {
          sub_1C2A14368((uint64_t)v50, (uint64_t)&v51);
          if (v52)
          {
            if (v19)
            {
              double x = x + (v32 - x) * 0.5;
              double y = y + (v33 - y) * 0.5;
            }
            sub_1C2A12ECC(a1, v51, v52, v41, a4, x, y, a7, a8);
          }
        }
        ++v25;
        CGContextRestoreGState(a1);
        v27 += 16;
        if (v19 == v25)
        {
          swift_bridgeObjectRelease();
          return;
        }
      }
      __break(1u);
LABEL_27:
      __break(1u);
    }
  }
}

double sub_1C2A13520(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *a1 & 0xFF00000000;
  if (v2 != 0x300000000 && v2 != 0x200000000 && *a1 != 1)
  {
    unsigned int v3 = BYTE6(v1);
    if (!BYTE5(v1) || BYTE5(v1) == 1) {
      sub_1C2A9E8D8();
    }
    swift_bridgeObjectRelease();
    if (v3 <= 1) {
      sub_1C2A9E8D8();
    }
    swift_bridgeObjectRelease();
  }
  return 0.0;
}

double sub_1C2A136AC(unsigned char *a1, unsigned char *a2, double a3)
{
  switch(*a1)
  {
    case 2:
      double v4 = 2.0;
      if (*a2 != 25)
      {
        DiagramConfiguration.TextAttributes.toTextAttributes()();
        uint64_t v5 = (void *)sub_1C2A9DCF8();
        type metadata accessor for Key(0);
        sub_1C2942D7C();
        char v6 = (void *)sub_1C2A9DC58();
        swift_bridgeObjectRelease();
        objc_msgSend(v5, sel_sizeWithAttributes_, v6);
        double v8 = v7;

        double v4 = v8 * 0.5 + 2.0;
      }
      a3 = v4 + a3;
      break;
    case 3:
      a3 = *MEMORY[0x1E4FB2848];
      break;
    default:
      return a3;
  }
  return a3;
}

uint64_t type metadata accessor for DiagramBar()
{
  return self;
}

uint64_t method lookup function for DiagramBar(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DiagramBar);
}

uint64_t dispatch thunk of DiagramBar.modelSpace.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DiagramBar.screenInsets.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DiagramBar.drawingBlock.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DiagramBar.__allocating_init(barDiagramConfig:barData:hbxViewControllerFactory:customMetricsFactory:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

unint64_t sub_1C2A138C8()
{
  unint64_t result = qword_1EBB90D88;
  if (!qword_1EBB90D88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB90D88);
  }
  return result;
}

void sub_1C2A13908(CGContext *a1, double *a2, uint64_t a3, double a4, double a5)
{
  char v6 = v5;
  uint64_t v12 = sub_1C2A9C8C8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a3 + 16)) {
    return;
  }
  double v111 = a5;
  CGFloat v17 = a2[1];
  double v16 = a2[2];
  double v18 = a2[3];
  CGFloat v19 = a2[4];
  CGFloat v21 = a2[5];
  double v20 = a2[6];
  double v22 = dbl_1C2AACE78[(char)v6[19]];
  unint64_t v23 = sub_1C293DDF4(0);
  double v115 = a4;
  if ((v24 & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v101 = v13;
  uint64_t v102 = *(void *)(*(void *)(a3 + 56) + 40 * v23);
  double v113 = dbl_1C2AACE90[(char)v6[16]];
  char v25 = v6[17];
  CGPoint v100 = v6;
  char v26 = v6[18];
  LOBYTE(v117.a) = v25;
  char v116 = v26;
  uint64_t v27 = DiagramConfiguration.Color.rawValue.getter();
  uint64_t v29 = v28;
  if (v27 == DiagramConfiguration.Color.rawValue.getter() && v29 == v30)
  {
    uint64_t v31 = v102;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
LABEL_7:
    LOBYTE(v117.a) = v25;
    v33.super.isCGFloat a = DiagramConfiguration.Color.toColor()().super.isa;
    uint64_t v34 = *(void *)(v31 + 16);
    uint64_t v35 = v31;
    if (v34)
    {
      uint64_t v99 = a3;
      double v114 = v22;
      CGFloat v36 = v20;
      CGFloat v37 = v21;
      CGFloat v38 = v19;
      CGFloat v39 = v18;
      CGFloat v40 = v16;
      CGFloat v41 = v17;
      double v111 = v113 * 0.5;
      isCGFloat a = v33.super.isa;
      CGGradientRef v110 = (CGGradientRef)self;
      uint64_t v42 = (void (**)(char *, uint64_t, uint64_t))(v101 + 104);
      unint64_t v43 = (void (**)(char *, uint64_t))(v101 + 8);
      uint64_t v44 = *MEMORY[0x1E4F1DA40];
      uint64_t v45 = (CGFloat *)(v35 + 40);
      do
      {
        v118.double x = *(v45 - 1);
        CGFloat v46 = *v45;
        v117.CGFloat a = v41;
        v117.CGFloat b = v40;
        v117.CGFloat c = v39;
        v117.CGFloat d = v38;
        v117.CGFloat tx = v37;
        v117.CGFloat ty = v36;
        v118.double y = 0.0;
        double x = CGPointApplyAffineTransform(v118, &v117).x;
        v117.CGFloat a = v41;
        v117.CGFloat b = v40;
        v117.CGFloat c = v39;
        v117.CGFloat d = v38;
        v117.CGFloat tx = v37;
        v117.CGFloat ty = v36;
        v119.double x = 0.0;
        v119.double y = v46;
        CGPoint v48 = CGPointApplyAffineTransform(v119, &v117);
        id v49 = -[CGGradient bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:](v110, sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_, 3, x - v111, v48.y, v113, v115 - v48.y, v114, v114);
        uint64_t v50 = v12;
        uint64_t v51 = (const CGPath *)objc_msgSend(v49, sel_CGPath);
        CGContextAddPath(a1, v51);

        uint64_t v12 = v50;
        CGContextClosePath(a1);

        uint64_t v52 = (CGColor *)[(objc_class *)isa CGColor];
        CGContextSetFillColorWithColor(a1, v52);

        (*v42)(v15, v44, v50);
        sub_1C2A9E048();
        (*v43)(v15, v50);
        v45 += 2;
        --v34;
      }
      while (v34);

      swift_bridgeObjectRelease();
      CGFloat v17 = v41;
      double v16 = v40;
      double v18 = v39;
      CGFloat v19 = v38;
      CGFloat v21 = v37;
      double v20 = v36;
      double v22 = v114;
      uint64_t v13 = v101;
      char v6 = v100;
      a3 = v99;
      if (!*(void *)(v99 + 16)) {
        return;
      }
      goto LABEL_21;
    }

    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  char v32 = sub_1C2A9E8D8();
  uint64_t v31 = v102;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v32) {
    goto LABEL_7;
  }
  uint64_t v53 = v12;
  sub_1C29E37A0(0, (unint64_t *)&qword_1EBB91978, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_1C2AAA110;
  LOBYTE(v117.a) = v25;
  Class v55 = DiagramConfiguration.Color.toColor()().super.isa;
  id v56 = [(objc_class *)v55 CGColor];

  *(void *)(v54 + 32) = v56;
  LOBYTE(v117.a) = v26;
  Class v57 = DiagramConfiguration.Color.toColor()().super.isa;
  id v58 = [(objc_class *)v57 CGColor];

  *(void *)(v54 + 40) = v58;
  *(void *)&v117.CGFloat a = v54;
  sub_1C2A9DEA8();
  CGColorSpaceRef DeviceRGB = CGColorSpaceCreateDeviceRGB();
  type metadata accessor for CGColor(0);
  long long v60 = DeviceRGB;
  CFArrayRef v61 = (const __CFArray *)sub_1C2A9DE88();
  swift_bridgeObjectRelease();
  uint64_t v62 = CGGradientCreateWithColors(v60, v61, dbl_1F1DEA7F8);

  if (!v62)
  {
    swift_bridgeObjectRelease();

    uint64_t v12 = v53;
LABEL_19:
    char v6 = v100;
    uint64_t v13 = v101;
LABEL_20:
    if (!*(void *)(a3 + 16)) {
      return;
    }
    goto LABEL_21;
  }
  uint64_t v63 = v102;
  uint64_t v64 = *(void *)(v102 + 16);
  if (v64)
  {
    CGPoint v98 = v60;
    uint64_t v99 = a3;
    double v104 = v113 * 0.5;
    id v103 = self;
    CGGradientRef v110 = v62;
    CGFloat v65 = (void (**)(char *, uint64_t, uint64_t))(v101 + 104);
    uint64_t v66 = *MEMORY[0x1E4F1DA40];
    CGFloat v67 = (void (**)(char *, uint64_t))(v101 + 8);
    CGFloat v68 = (CGFloat *)(v63 + 40);
    double v109 = v20;
    double v108 = v21;
    double v107 = v19;
    *(double *)&isCGFloat a = v18;
    CGFloat v106 = v16;
    double v105 = v17;
    double v114 = v22;
    do
    {
      v120.double x = *(v68 - 1);
      CGFloat v69 = *v68;
      CGFloat v70 = v106;
      v117.CGFloat a = v17;
      v117.CGFloat b = v106;
      v117.CGFloat c = v18;
      v117.CGFloat d = v19;
      v117.CGFloat tx = v21;
      v117.CGFloat ty = v20;
      v120.double y = 0.0;
      double v71 = CGPointApplyAffineTransform(v120, &v117).x;
      v117.CGFloat a = v17;
      v117.CGFloat b = v70;
      v117.CGFloat c = v18;
      v117.CGFloat d = v19;
      v117.CGFloat tx = v21;
      v117.CGFloat ty = v20;
      v121.double x = 0.0;
      v121.double y = v69;
      double v22 = v114;
      double y = CGPointApplyAffineTransform(v121, &v117).y;
      double v73 = v71 - v104;
      CGFloat v74 = v71;
      CGFloat v75 = v115;
      id v76 = objc_msgSend(v103, sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_, 3, v73, y, v113, v115 - y, v22, v22);
      long long v77 = (const CGPath *)objc_msgSend(v76, sel_CGPath);
      CGContextAddPath(a1, v77);

      CGContextClosePath(a1);
      CGContextSaveGState(a1);
      (*v65)(v15, v66, v53);
      sub_1C2A9E018();
      (*v67)(v15, v53);
      v122.double x = v74;
      v122.double y = v111;
      v125.double x = v74;
      v125.double y = v75;
      CGContextDrawLinearGradient(a1, v110, v122, v125, 0);
      CGContextRestoreGState(a1);
      v68 += 2;
      --v64;
    }
    while (v64);

    swift_bridgeObjectRelease();
    uint64_t v12 = v53;
    CGFloat v17 = v105;
    double v16 = v106;
    double v18 = *(double *)&isa;
    CGFloat v19 = v107;
    CGFloat v21 = v108;
    double v20 = v109;
    uint64_t v13 = v101;
    a3 = v99;
    uint64_t v62 = v110;
  }
  else
  {

    swift_bridgeObjectRelease();
    uint64_t v12 = v53;
    uint64_t v13 = v101;
  }

  char v6 = v100;
  if (*(void *)(a3 + 16))
  {
LABEL_21:
    unint64_t v78 = sub_1C293DDF4(1u);
    if (v79)
    {
      int v80 = v6[20];
      if (v80 != 35)
      {
        double v81 = *(double *)(*(void *)(a3 + 56) + 40 * v78);
        uint64_t v82 = *(void *)(*(void *)&v81 + 16);
        if (v82)
        {
          uint64_t v83 = (char)v6[16];
          *(double *)&isCGFloat a = v18;
          CGFloat v84 = v16;
          double v114 = v22;
          CGFloat v85 = v17;
          double v113 = dbl_1C2AACE90[v83];
          double v111 = v113 * 0.5;
          LODWORD(v110) = v80;
          double v109 = COERCE_DOUBLE(self);
          uint64_t v86 = *MEMORY[0x1E4F1DA40];
          uint64_t v87 = (void (**)(char *, uint64_t, uint64_t))(v13 + 104);
          uint64_t v88 = (void (**)(char *, uint64_t))(v13 + 8);
          swift_bridgeObjectRetain();
          double v108 = v81;
          id v89 = (CGFloat *)(*(void *)&v81 + 40);
          Class v90 = isa;
          do
          {
            v123.double x = *(v89 - 1);
            CGFloat v91 = *v89;
            v117.CGFloat a = v85;
            v117.CGFloat b = v84;
            *(void *)&v117.CGFloat c = v90;
            v117.CGFloat d = v19;
            v117.CGFloat tx = v21;
            v117.CGFloat ty = v20;
            v123.double y = 0.0;
            double v92 = CGPointApplyAffineTransform(v123, &v117).x;
            v117.CGFloat a = v85;
            v117.CGFloat b = v84;
            *(void *)&v117.CGFloat c = v90;
            v117.CGFloat d = v19;
            v117.CGFloat tx = v21;
            v117.CGFloat ty = v20;
            v124.double x = 0.0;
            v124.double y = v91;
            CGPoint v93 = CGPointApplyAffineTransform(v124, &v117);
            id v94 = objc_msgSend(*(id *)&v109, sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_, 3, v92 - v111, v93.y, v113, v115 - v93.y, v114, v114);
            CGPoint v95 = (const CGPath *)objc_msgSend(v94, sel_CGPath);
            CGContextAddPath(a1, v95);

            CGContextClosePath(a1);
            LOBYTE(v117.a) = (_BYTE)v110;
            Class v96 = DiagramConfiguration.Color.toColor()().super.isa;
            CGPoint v97 = (CGColor *)[(objc_class *)v96 CGColor];
            CGContextSetFillColorWithColor(a1, v97);

            (*v87)(v15, v86, v12);
            sub_1C2A9E048();
            (*v88)(v15, v12);

            v89 += 2;
            --v82;
          }
          while (v82);
          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

uint64_t sub_1C2A142D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C2A1431C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C2A14368(uint64_t a1, uint64_t a2)
{
  sub_1C29E37A0(0, (unint64_t *)&qword_1EBB8DEB0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t DelayedImmutable.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 1, 1, a1);
}

uint64_t DelayedImmutable.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = sub_1C2A9E328();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  unsigned __int16 v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v13 - v9, v3, v6, v8);
  uint64_t v11 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v5) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v10, v5);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t result = sub_1C2A9E628();
  __break(1u);
  return result;
}

uint64_t sub_1C2A145D8(uint64_t a1)
{
  __n128 v1 = MEMORY[0x1F4188790](a1);
  uint64_t v3 = (char *)&v7 - v2;
  (*(void (**)(char *, __n128))(v4 + 16))((char *)&v7 - v2, v1);
  uint64_t v5 = type metadata accessor for DelayedImmutable();
  return DelayedImmutable.wrappedValue.setter((uint64_t)v3, v5);
}

uint64_t DelayedImmutable.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = sub_1C2A9E328();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - v8;
  (*(void (**)(char *, char *, uint64_t, __n128))(v6 + 16))((char *)&v14 - v8, v2, v5, v7);
  uint64_t v10 = *(void *)(v4 - 8);
  int v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  v12(v9, v5);
  if (v11 == 1)
  {
    v12(v2, v5);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v2, a1, v4);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v2, 0, 1, v4);
  }
  else
  {
    uint64_t result = sub_1C2A9E628();
    __break(1u);
  }
  return result;
}

void (*DelayedImmutable.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  DelayedImmutable.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_1C2A14974;
}

void sub_1C2A14974(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  if (a2)
  {
    uint64_t v5 = v2[2];
    uint64_t v6 = v2[3];
    uint64_t v7 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    DelayedImmutable.wrappedValue.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    DelayedImmutable.wrappedValue.setter((*a1)[5], *v2);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_1C2A14A34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DelayedImmutable();
  return DelayedImmutable.wrappedValue.getter(v2, a1);
}

uint64_t sub_1C2A14A74()
{
  return 8;
}

void *sub_1C2A14A80(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C2A14A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t sub_1C2A14A94()
{
  uint64_t result = sub_1C2A9E328();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C2A14B24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_1C2A14C60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_1C2A14D24(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1C2A14E1C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

void *sub_1C2A14F88(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1C2A15080(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

uint64_t sub_1C2A151EC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_1C2A1538C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  BOOL v11 = a3 >= v9;
  unsigned int v12 = a3 - v9;
  if (v12 == 0 || !v11)
  {
LABEL_13:
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  if (v10 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  unsigned int v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
  if (!HIWORD(v13))
  {
    if (v13 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v13 > 1;
    }
    goto LABEL_13;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_14:
    unsigned int v14 = ~v9 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
LABEL_21:
  switch(v6)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1C2A155C8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 >= 2)
        {
          CGFloat v17 = *(void (**)(void))(v7 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for DelayedImmutable()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t QueryOperationError.init(queryError:context:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (result)
  {
    unint64_t v5 = result | 0x8000000000000000;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    a2 = 0;
    a3 = 0;
    unint64_t v5 = 0xC000000000000000;
  }
  *a4 = a2;
  a4[1] = a3;
  a4[2] = v5;
  return result;
}

BOOL QueryOperationError.isRecoverable.getter()
{
  unint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = v1 >> 61;
  BOOL v3 = v1 >> 61 == 3 || v2 == 5;
  BOOL result = 0;
  if (!v3)
  {
    if (v2 != 6) {
      return 1;
    }
    if (v1 != 0xC000000000000000 || *(_OWORD *)v0 != 0) {
      return 1;
    }
  }
  return result;
}

BOOL sub_1C2A15694()
{
  unint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = v1 >> 61;
  BOOL v3 = v1 >> 61 == 3 || v2 == 5;
  BOOL result = 0;
  if (!v3)
  {
    if (v2 != 6) {
      return 1;
    }
    if (v1 != 0xC000000000000000 || *(_OWORD *)v0 != 0) {
      return 1;
    }
  }
  return result;
}

unint64_t QueryOperationError.errorDescription.getter()
{
  unint64_t v1 = *(void *)(v0 + 16);
  unint64_t result = 0xD00000000000002DLL;
  switch(v1 >> 61)
  {
    case 2uLL:
      sub_1C2A9E4D8();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000020;
      goto LABEL_6;
    case 4uLL:
      BOOL v3 = (void *)(v1 & 0x1FFFFFFFFFFFFFFFLL);
      unint64_t v5 = 0;
      id v4 = (id)(v1 & 0x1FFFFFFFFFFFFFFFLL);
      sub_1C2A9E4D8();
      sub_1C2A9DDB8();
      swift_getErrorValue();
      sub_1C2A9E938();
      sub_1C2A9DDB8();
      swift_bridgeObjectRelease();
      sub_1C2A9DDB8();
      sub_1C2A9DDB8();

      return v5;
    case 5uLL:
      sub_1C2A9E4D8();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000018;
      goto LABEL_6;
    case 6uLL:
      return result;
    default:
      unint64_t v5 = 0;
      sub_1C2A9E4D8();
      sub_1C2A9DDB8();
LABEL_6:
      sub_1C2A9DDB8();
      return v5;
  }
}

uint64_t _s19HealthVisualization19QueryOperationErrorO2eeoiySbAC_ACtFZ_0()
{
  sub_1C296291C();
  uint64_t v0 = sub_1C2A9E938();
  uint64_t v2 = v1;
  if (v0 == sub_1C2A9E938() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C2A9E8D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t destroy for QueryOperationError(uint64_t a1)
{
  return sub_1C2A15A3C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t sub_1C2A15A3C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3 = a3 >> 61;
  if ((a3 >> 61) <= 5)
  {
    if (v3 > 5) {
      unint64_t v3 = 0;
    }
    return ((uint64_t (__cdecl *)())((char *)&loc_1C2A15A5C + (int)funcs_1C2A15A64[v3]))();
  }
  return result;
}

uint64_t sub_1C2A15A68()
{
  return swift_bridgeObjectRelease();
}

void sub_1C2A15A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = (void *)(a3 & 0x1FFFFFFFFFFFFFFFLL);
  swift_bridgeObjectRelease();
}

uint64_t *_s19HealthVisualization19QueryOperationErrorOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_1C2962970(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for QueryOperationError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_1C2962970(*a2, v4, v5);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  unint64_t v8 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_1C2A15A3C(v6, v7, v8);
  return a1;
}

uint64_t *assignWithTake for QueryOperationError(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  unint64_t v5 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_1C2A15A3C(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryOperationError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7A && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 122);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 57) >> 4) | (8
                                                           * ((*(void *)(a1 + 16) >> 57) & 8 | *(void *)(a1 + 16) & 7))) ^ 0x7F;
  if (v3 >= 0x79) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for QueryOperationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x79)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 122;
    if (a3 >= 0x7A) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7A) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1C2A15C70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16) >> 61;
  if (v1 <= 5) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_1C2A15C8C(uint64_t result)
{
  *(void *)(result + 16) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1C2A15C9C(uint64_t result, uint64_t a2)
{
  if (a2 < 6)
  {
    *(void *)(result + 16) = *(void *)(result + 16) & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  }
  else
  {
    *(void *)uint64_t result = (a2 - 6);
    *(_OWORD *)(result + 8) = xmmword_1C2AACEE0;
  }
  return result;
}

ValueMetadata *type metadata accessor for QueryOperationError()
{
  return &type metadata for QueryOperationError;
}

uint64_t QuantityTypeIdentifiable.quantityType.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C296FC38();
  ObjCClassFromMetadatCGFloat a = (void *)swift_getObjCClassFromMetadata();
  (*(void (**)(uint64_t))(*(void *)(a2 + 8) + 8))(a1);
  unsigned int v9 = (void *)sub_1C2A9DCF8();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(ObjCClassFromMetadata, sel_quantityTypeForIdentifier_, v9);

  if (v10) {
    return (uint64_t)v10;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  v13[2] = 0;
  v13[3] = 0xE000000000000000;
  sub_1C2A9E4D8();
  sub_1C2A9DDB8();
  unsigned int v12 = (void *)QuantityTypeIdentifiable.quantityTypeIdentifier.getter(a1, a2);
  v13[1] = v12;
  type metadata accessor for HKQuantityTypeIdentifier(0);
  sub_1C2A9E5C8();

  uint64_t result = sub_1C2A9E628();
  __break(1u);
  return result;
}

id StatisticsQueryConfigurationOverrides.predicate.getter()
{
  uint64_t v1 = v0;
  sub_1C296B66C();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C2A9C398();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29F612C(v1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1C296B6C4((uint64_t)v4);
    id v9 = *(id *)(v1 + *(int *)(type metadata accessor for StatisticsQueryConfigurationOverrides() + 20));
    if (v9) {
      id v10 = v9;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    BOOL v11 = self;
    unsigned int v12 = (void *)sub_1C2A9C318();
    id v9 = objc_msgSend(v11, sel_predicateForSamplesWithinDateInterval_options_, v12, 0);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    unsigned int v13 = *(void **)(v1 + *(int *)(type metadata accessor for StatisticsQueryConfigurationOverrides() + 20));
    if (v13)
    {
      sub_1C296B238();
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C2AAA110;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v13;
      v19[1] = v14;
      sub_1C2A9DEA8();
      sub_1C2A16258();
      id v15 = v13;
      id v16 = v9;
      CGFloat v17 = (void *)sub_1C2A9DE88();
      swift_bridgeObjectRelease();
      id v9 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v17);
    }
  }
  return v9;
}

uint64_t StatisticsQueryConfigurationOverrides.init(dateInterval:additionalPredicate:useQueryCaching:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  sub_1C296FACC(a1, a4);
  uint64_t result = type metadata accessor for StatisticsQueryConfigurationOverrides();
  *(void *)(a4 + *(int *)(result + 20)) = a2;
  *(unsigned char *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t StatisticsQueryConfigurationOverrides.dateInterval.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C29F612C(v1, a1);
}

void *StatisticsQueryConfigurationOverrides.additionalPredicate.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for StatisticsQueryConfigurationOverrides() + 20));
  id v2 = v1;
  return v1;
}

uint64_t StatisticsQueryConfigurationOverrides.useQueryCaching.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StatisticsQueryConfigurationOverrides() + 24));
}

uint64_t sub_1C2A16200@<X0>(uint64_t a1@<X8>)
{
  return sub_1C29F612C(v1, a1);
}

uint64_t type metadata accessor for StatisticsQueryConfigurationOverrides()
{
  uint64_t result = qword_1EBB91EF8;
  if (!qword_1EBB91EF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1C2A16258()
{
  unint64_t result = qword_1EBB8E090;
  if (!qword_1EBB8E090)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB8E090);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StatisticsQueryConfigurationOverrides(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2A9C398();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1C296B66C();
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = *(int *)(a3 + 24);
    unsigned int v13 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v13;
    *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
    id v14 = v13;
  }
  return a1;
}

void destroy for StatisticsQueryConfigurationOverrides(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2A9C398();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = *(void **)(a1 + *(int *)(a2 + 20));
}

char *initializeWithCopy for StatisticsQueryConfigurationOverrides(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C398();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1C296B66C();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = *(void **)&a2[v9];
  *(void *)&a1[v9] = v11;
  a1[v10] = a2[v10];
  id v12 = v11;
  return a1;
}

char *assignWithCopy for StatisticsQueryConfigurationOverrides(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C398();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1C296B66C();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  unsigned int v13 = *(void **)&a1[v12];
  id v14 = *(void **)&a2[v12];
  *(void *)&a1[v12] = v14;
  id v15 = v14;

  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *initializeWithTake for StatisticsQueryConfigurationOverrides(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C398();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1C296B66C();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  a1[v9] = a2[v9];
  return a1;
}

char *assignWithTake for StatisticsQueryConfigurationOverrides(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C398();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1C296B66C();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  unsigned int v13 = *(void **)&a1[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];

  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t getEnumTagSinglePayload for StatisticsQueryConfigurationOverrides(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2A16A90);
}

uint64_t sub_1C2A16A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C296B66C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for StatisticsQueryConfigurationOverrides(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2A16B70);
}

void sub_1C2A16B70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1C296B66C();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
}

void sub_1C2A16C2C()
{
  sub_1C296B66C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void static CurrentValueDateGenerationSupport.startOrEndDate(sample:dateInterval:)(void *a1)
{
  id v2 = objc_msgSend(a1, sel_sampleType);
  switch((unint64_t)objc_msgSend(v2, sel_code))
  {
    case 6uLL:
    case 0xBuLL:
    case 0x3BuLL:
    case 0x40uLL:
    case 0x41uLL:
    case 0x42uLL:
    case 0x45uLL:
    case 0x4AuLL:
    case 0x52uLL:
    case 0x54uLL:
    case 0x55uLL:
    case 0x56uLL:
    case 0x58uLL:
    case 0x5DuLL:
    case 0x5EuLL:
    case 0x5FuLL:
    case 0x67uLL:
    case 0x6AuLL:
    case 0x6DuLL:
    case 0x73uLL:
    case 0x75uLL:
    case 0x78uLL:
    case 0x79uLL:
    case 0x7AuLL:
    case 0x7BuLL:
    case 0x87uLL:
    case 0x88uLL:
    case 0x92uLL:
    case 0x94uLL:
    case 0xAEuLL:
    case 0xAFuLL:
    case 0xB0uLL:
    case 0xB1uLL:
    case 0xB5uLL:
    case 0xB8uLL:
    case 0xB9uLL:
    case 0xBFuLL:
    case 0xC0uLL:
    case 0xC1uLL:
    case 0xD0uLL:
    case 0xD7uLL:
    case 0xDAuLL:
    case 0xE3uLL:
    case 0xE4uLL:
    case 0xEEuLL:
    case 0xEFuLL:
    case 0xF7uLL:
    case 0x101uLL:
    case 0x105uLL:
    case 0x10FuLL:
    case 0x116uLL:
    case 0x123uLL:
    case 0x124uLL:
    case 0x132uLL:
    case 0x139uLL:
    case 0x13AuLL:

      if (!objc_msgSend(a1, sel_hasUndeterminedDuration)) {
        goto LABEL_5;
      }
      sub_1C2A9C378();
      break;
    default:

LABEL_5:
      sub_1C2A9C348();
      break;
  }
}

uint64_t static CurrentValueDateGenerationSupport.dateInterval(for:calendarCache:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C2A9C398();
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = MEMORY[0x1F4188790](v6).n128_u64[0];
  unint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(a1, sel_sampleType, v8);
  id v12 = objc_msgSend(a1, sel__timeZoneName);
  if (v12)
  {
    unsigned int v13 = v12;
    uint64_t v14 = sub_1C2A9DD28();
    unint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    unint64_t v16 = 0;
  }
  sub_1C2A9E298();
  static CurrentValueDateGenerationSupport.dateInterval(for:sampleTimeZoneName:sampleDateInterval:calendarCache:)(v11, v14, v16, (uint64_t)v10, a2, a3);

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t static CurrentValueDateGenerationSupport.dateInterval(for:sampleTimeZoneName:sampleDateInterval:calendarCache:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  CGFloat v69 = (uint8_t *)a3;
  CGFloat v70 = a5;
  uint64_t v71 = a6;
  uint64_t v72 = a4;
  uint64_t v68 = a2;
  uint64_t v7 = sub_1C2A9CFE8();
  uint64_t v67 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A17F8C(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (char *)&v59 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v59 - v17;
  uint64_t v19 = sub_1C2A9C868();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  double v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v24 = MEMORY[0x1F4188790](v23).n128_u64[0];
  char v26 = (char *)&v59 - v25;
  if (objc_msgSend(a1, sel_code, v24) == (id)248)
  {
    long long v60 = v15;
    CFArrayRef v61 = v12;
    CGFloat v65 = v9;
    uint64_t v66 = v18;
    uint64_t v62 = v20;
    sub_1C2A17AA0((uint64_t)v26, (uint64_t)v22, v68, (unint64_t)v69, v70);
    uint64_t v27 = self;
    uint64_t v28 = (void *)sub_1C2A9C318();
    uint64_t v29 = (void *)sub_1C2A9C7D8();
    uint64_t v30 = (void *)sub_1C2A9C7D8();
    id v31 = objc_msgSend(v27, sel_hk_julianDayDateIntervalFromOpenUpperBoundDateInterval_sourceCalendar_localCalendar_, v28, v29, v30);

    uint64_t v63 = v22;
    uint64_t v64 = v26;
    if (v31)
    {
      uint64_t v32 = (uint64_t)v60;
      sub_1C2A9C338();

      uint64_t v33 = sub_1C2A9C398();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
    }
    else
    {
      uint64_t v33 = sub_1C2A9C398();
      uint64_t v32 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v60, 1, 1, v33);
    }
    uint64_t v40 = v71;
    CGFloat v41 = (void *)v19;
    uint64_t v42 = (uint64_t)v61;
    uint64_t v43 = v62;
    uint64_t v44 = v7;
    CGFloat v46 = v65;
    uint64_t v45 = (uint64_t)v66;
    sub_1C296FACC(v32, (uint64_t)v66);
    sub_1C29F612C(v45, v42);
    sub_1C2A9C398();
    uint64_t v47 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v42, 1, v33) == 1)
    {
      sub_1C2A17FE0(v42, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
      sub_1C2A9CF68();
      CGPoint v48 = sub_1C2A9CFC8();
      os_log_type_t v49 = sub_1C2A9E0B8();
      if (os_log_type_enabled(v48, v49))
      {
        CGFloat v70 = v41;
        uint64_t v50 = (uint8_t *)swift_slowAlloc();
        uint64_t v51 = swift_slowAlloc();
        *(_DWORD *)uint64_t v50 = 136446210;
        CGFloat v69 = v50 + 4;
        double v73 = &type metadata for CurrentValueDateGenerationSupport;
        uint64_t v74 = v51;
        sub_1C2A17F40();
        uint64_t v52 = sub_1C2A9DD58();
        double v73 = (ValueMetadata *)sub_1C2957168(v52, v53, &v74);
        uint64_t v40 = v71;
        sub_1C2A9E358();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C292A000, v48, v49, "%{public}s trying to compute julian date interval for invalid sample.", v50, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87656F0](v51, -1, -1);
        MEMORY[0x1C87656F0](v50, -1, -1);

        (*(void (**)(char *, uint64_t))(v67 + 8))(v65, v44);
        sub_1C2A17FE0((uint64_t)v66, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
        uint64_t v54 = *(void (**)(char *, void *))(v43 + 8);
        Class v55 = v70;
        v54(v63, v70);
        id v56 = v64;
        Class v57 = v55;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v67 + 8))(v46, v44);
        sub_1C2A17FE0((uint64_t)v66, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
        uint64_t v54 = *(void (**)(char *, void *))(v43 + 8);
        v54(v63, v41);
        id v56 = v64;
        Class v57 = v41;
      }
      v54(v56, v57);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v40, v72, v33);
    }
    else
    {
      sub_1C2A17FE0(v45, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
      id v58 = *(void (**)(char *, void *))(v43 + 8);
      v58(v63, v41);
      v58(v64, v41);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v40, v42, v33);
    }
  }
  else
  {
    uint64_t v34 = sub_1C2A9C398();
    uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
    uint64_t v36 = v34;
    uint64_t v37 = v71;
    uint64_t v38 = v72;
    return v35(v37, v38, v36);
  }
}

uint64_t sub_1C2A17AA0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v33 = sub_1C2A9CFE8();
  uint64_t v8 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v32 - v12;
  sub_1C2A17F8C(0, (unint64_t *)&qword_1EBB92530, MEMORY[0x1E4F27D68]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v17 = sub_1C2A9C8B8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_1C2A9C878();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
      uint64_t v28 = (void *)sub_1C2A9C8A8();
      id v29 = objc_msgSend(a5, sel_calendarForTimeZone_, v28);

      sub_1C2A9C7E8();
      id v30 = objc_msgSend(a5, sel_currentCalendar);
      sub_1C2A9C7E8();

      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    }
    sub_1C2A17FE0((uint64_t)v16, (unint64_t *)&qword_1EBB92530, MEMORY[0x1E4F27D68]);
    sub_1C2A9CF68();
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1C2A9CFC8();
    os_log_type_t v22 = sub_1C2A9E0B8();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v37 = v24;
      *(_DWORD *)uint64_t v23 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1C2957168(a3, a4, &v37);
      sub_1C2A9E358();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C292A000, v21, v22, "Failed to create a TimeZone with %{public}s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v24, -1, -1);
      MEMORY[0x1C87656F0](v23, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v33);
  }
  else
  {
    sub_1C2A9CF68();
    uint64_t v25 = sub_1C2A9CFC8();
    os_log_type_t v26 = sub_1C2A9E0B8();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_1C292A000, v25, v26, "Received nil timeZoneName for sample", v27, 2u);
      MEMORY[0x1C87656F0](v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v33);
  }
  sub_1C2A9C838();
  return sub_1C2A9C838();
}

unint64_t sub_1C2A17F40()
{
  unint64_t result = qword_1EA31EBE0;
  if (!qword_1EA31EBE0)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA31EBE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CurrentValueDateGenerationSupport()
{
  return &type metadata for CurrentValueDateGenerationSupport;
}

void sub_1C2A17F8C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2A9E328();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2A17FE0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C2A17F8C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2A1803C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  double v2 = *(double *)(a1 + 32);
  uint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    uint64_t v4 = (double *)(a1 + 40);
    do
    {
      double v5 = *v4++;
      double v6 = v5;
      if (v5 < v2) {
        double v2 = v6;
      }
      --v3;
    }
    while (v3);
  }
  return *(void *)&v2;
}

double LevelView.DataConfiguration.Bucket.range.getter()
{
  return *(double *)v0;
}

void LevelView.DataConfiguration.Bucket.range.setter(double a1, double a2)
{
  *double v2 = a1;
  v2[1] = a2;
}

uint64_t (*LevelView.DataConfiguration.Bucket.range.modify())()
{
  return nullsub_1;
}

uint64_t LevelView.DataConfiguration.Bucket.highlighted.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t LevelView.DataConfiguration.Bucket.highlighted.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*LevelView.DataConfiguration.Bucket.highlighted.modify())()
{
  return nullsub_1;
}

uint64_t LevelView.DataConfiguration.Bucket.init(range:highlighted:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(unsigned char *)(a2 + 16) = result;
  return result;
}

uint64_t static LevelView.DataConfiguration.Bucket.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8)) {
    return (*(unsigned __int8 *)(a2 + 16) ^ *(unsigned __int8 *)(a1 + 16) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C2A18120()
{
  if (*v0) {
    return 0x6867696C68676968;
  }
  else {
    return 0x65676E6172;
  }
}

uint64_t sub_1C2A18160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A1A988(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A18188(uint64_t a1)
{
  unint64_t v2 = sub_1C2A183E8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A181C4(uint64_t a1)
{
  unint64_t v2 = sub_1C2A183E8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LevelView.DataConfiguration.Bucket.encode(to:)(void *a1)
{
  sub_1C2A1AD50(0, &qword_1EBB90248, (uint64_t (*)(void))sub_1C2A183E8, (uint64_t)&type metadata for LevelView.DataConfiguration.Bucket.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v12 - v7;
  uint64_t v9 = *v1;
  uint64_t v10 = v1[1];
  int v13 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A183E8();
  sub_1C2A9EA18();
  v12[0] = v9;
  v12[1] = v10;
  char v14 = 0;
  sub_1C2A1843C();
  sub_1C2A186CC(&qword_1EBB8F7A0);
  sub_1C2A9E868();
  if (!v2)
  {
    LOBYTE(v12[0]) = 1;
    sub_1C2A9E838();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1C2A183E8()
{
  unint64_t result = qword_1EBB91998;
  if (!qword_1EBB91998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91998);
  }
  return result;
}

void sub_1C2A1843C()
{
  if (!qword_1EBB92800)
  {
    unint64_t v0 = sub_1C2A9DCD8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB92800);
    }
  }
}

uint64_t LevelView.DataConfiguration.Bucket.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  sub_1C2A1AD50(0, &qword_1EBB90068, (uint64_t (*)(void))sub_1C2A183E8, (uint64_t)&type metadata for LevelView.DataConfiguration.Bucket.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v15 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A183E8();
  sub_1C2A9EA08();
  if (!v2)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v16;
    sub_1C2A1843C();
    char v19 = 0;
    sub_1C2A186CC(&qword_1EBB92808);
    sub_1C2A9E7A8();
    uint64_t v11 = v17;
    uint64_t v12 = v18;
    LOBYTE(v17) = 1;
    char v14 = sub_1C2A9E778();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    *(void *)uint64_t v10 = v11;
    *(void *)(v10 + 8) = v12;
    *(unsigned char *)(v10 + 16) = v14 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C2A186CC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2A1843C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2A1872C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LevelView.DataConfiguration.Bucket.init(from:)(a1, a2);
}

uint64_t sub_1C2A18744(void *a1)
{
  return LevelView.DataConfiguration.Bucket.encode(to:)(a1);
}

uint64_t sub_1C2A1875C(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8)) {
    return (*(unsigned __int8 *)(a2 + 16) ^ *(unsigned __int8 *)(a1 + 16) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

double LevelView.DataConfiguration.normalizedValue.getter()
{
  return *(double *)v0;
}

void LevelView.DataConfiguration.normalizedValue.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*LevelView.DataConfiguration.normalizedValue.modify())()
{
  return nullsub_1;
}

uint64_t LevelView.DataConfiguration.sortedNormalizedBuckets.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LevelView.DataConfiguration.sortedNormalizedBuckets.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*LevelView.DataConfiguration.sortedNormalizedBuckets.modify())()
{
  return nullsub_1;
}

HealthVisualization::LevelView::DataConfiguration __swiftcall LevelView.DataConfiguration.init(normalizedValue:sortedNormalizedBuckets:)(Swift::Double normalizedValue, Swift::OpaquePointer sortedNormalizedBuckets)
{
  *(Swift::Double *)uint64_t v2 = normalizedValue;
  *(Swift::OpaquePointer *)(v2 + 8) = sortedNormalizedBuckets;
  result.normalizedValue = normalizedValue;
  result.sortedNormalizedBuckets = sortedNormalizedBuckets;
  return result;
}

HealthVisualization::LevelView::DataConfiguration __swiftcall LevelView.DataConfiguration.init(nonNormalizedValue:nonNormalizedBuckets:)(Swift::Double nonNormalizedValue, Swift::OpaquePointer nonNormalizedBuckets)
{
  uint64_t v5 = v2;
  sub_1C2A1AA8C((uint64_t)nonNormalizedBuckets._rawValue);
  double v7 = v6;
  double v9 = v8 - v6;
  int64_t v10 = *((void *)nonNormalizedBuckets._rawValue + 2);
  if (v10)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1C2978A8C(0, v10, 0);
    uint64_t v11 = v23;
    uint64_t v12 = (double *)((char *)nonNormalizedBuckets._rawValue + 48);
    while (1)
    {
      double v13 = (*(v12 - 2) - v7) / v9;
      double v14 = (*(v12 - 1) - v7) / v9;
      if (v13 > v14) {
        break;
      }
      char v15 = *(unsigned char *)v12;
      uint64_t v23 = v11;
      unint64_t v17 = *(void *)(v11 + 16);
      unint64_t v16 = *(void *)(v11 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C2978A8C(v16 > 1, v17 + 1, 1);
        uint64_t v11 = v23;
      }
      *(void *)(v11 + 16) = v17 + 1;
      uint64_t v18 = v11 + 24 * v17;
      *(double *)(v18 + 32) = v13;
      *(double *)(v18 + 40) = v14;
      *(unsigned char *)(v18 + 48) = v15;
      v12 += 3;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    __break(1u);
    char v19 = (void *)swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
LABEL_9:
    uint64_t v23 = v11;
    swift_bridgeObjectRetain();
    sub_1C2A19F60(&v23);
    char v19 = (void *)swift_bridgeObjectRelease();
    double v20 = (nonNormalizedValue - v7) / v9;
    if (v20 <= 0.0) {
      double v20 = 0.0;
    }
    uint64_t v21 = v23;
    if (v20 > 1.0) {
      double v20 = 1.0;
    }
    *(double *)uint64_t v5 = v20;
    *(void *)(v5 + 8) = v21;
  }
  result.normalizedValue = v20;
  result.sortedNormalizedBuckets._rawValue = v19;
  return result;
}

__C::CGRect __swiftcall LevelView.DataConfiguration.circleRect(for:)(__C::CGRect a1)
{
  CGFloat height = a1.size.height;
  CGFloat width = a1.size.width;
  CGFloat y = a1.origin.y;
  CGFloat x = a1.origin.x;
  double v6 = *v1;
  double MidX = CGRectGetMidX((CGRect)a1);
  if (qword_1EBB90030 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1EBB90028;
  double v9 = *(double *)&qword_1EBB90028 * 0.5;
  double v10 = MidX - *(double *)&qword_1EBB90028 * 0.5;
  v15.origin.CGFloat x = x;
  v15.origin.CGFloat y = y;
  v15.size.CGFloat width = width;
  v15.size.CGFloat height = height;
  double v11 = v6 * CGRectGetHeight(v15) - v9;
  double v12 = v10;
  double v13 = *(double *)&v8;
  double v14 = *(double *)&v8;
  result.size.CGFloat height = v14;
  result.size.CGFloat width = v13;
  result.origin.CGFloat y = v11;
  result.origin.CGFloat x = v12;
  return result;
}

double LevelView.DataConfiguration.invert(_:)(double a1)
{
  return 1.0 - a1;
}

uint64_t LevelView.DataConfiguration.buckets(for:displayScale:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v9 = *(double *)v4;
  uint64_t v10 = *(void *)(v4 + 8);
  double MidX = CGRectGetMidX(*(CGRect *)&a1);
  if (qword_1EBB90030 != -1) {
    swift_once();
  }
  CGFloat v12 = *(double *)&qword_1EBB90028;
  double v13 = *(double *)&qword_1EBB90028 * 0.5;
  double v14 = MidX - *(double *)&qword_1EBB90028 * 0.5;
  v38.origin.CGFloat x = a1;
  v38.origin.CGFloat y = a2;
  v38.size.CGFloat width = a3;
  v38.size.CGFloat height = a4;
  double v15 = v9 * CGRectGetHeight(v38);
  CGFloat v16 = a1;
  double v17 = v15 - v13;
  v39.origin.CGFloat x = v16;
  v39.origin.CGFloat y = a2;
  v39.size.CGFloat width = a3;
  v39.size.CGFloat height = a4;
  double MinY = CGRectGetMinY(v39);
  v40.origin.CGFloat x = v14;
  v40.origin.CGFloat y = v17;
  v40.size.CGFloat width = v12;
  v40.size.CGFloat height = v12;
  double v19 = MinY - CGRectGetMinY(v40);
  if (v19 > 0.0) {
    double v20 = v19;
  }
  else {
    double v20 = 0.0;
  }
  v41.origin.CGFloat x = v14;
  v41.origin.CGFloat y = v17;
  v41.size.CGFloat width = v12;
  v41.size.CGFloat height = v12;
  double v21 = v20;
  double MaxY = CGRectGetMaxY(v41);
  v42.origin.CGFloat x = v16;
  v42.origin.CGFloat y = a2;
  v42.size.CGFloat width = a3;
  v42.size.CGFloat height = a4;
  double v23 = MaxY - CGRectGetMaxY(v42);
  if (v23 > 0.0) {
    double v24 = v23;
  }
  else {
    double v24 = 0.0;
  }
  if (v21 != 0.0 && v24 != 0.0) {
    return MEMORY[0x1E4FBC860];
  }
  v43.origin.CGFloat x = v16;
  v43.origin.CGFloat y = a2;
  v43.size.CGFloat width = a3;
  v43.size.CGFloat height = a4;
  double v26 = CGRectGetHeight(v43) - v21 - v24;
  int64_t v27 = *(void *)(v10 + 16);
  uint64_t v28 = MEMORY[0x1E4FBC860];
  if (v27)
  {
    uint64_t v37 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C2932680(0, v27, 0);
    uint64_t v28 = v37;
    unint64_t v29 = *(void *)(v37 + 16);
    id v30 = (double *)(v10 + 40);
    do
    {
      double v31 = *(v30 - 1);
      double v32 = *v30;
      unint64_t v33 = *(void *)(v37 + 24);
      if (v29 >= v33 >> 1) {
        sub_1C2932680(v33 > 1, v29 + 1, 1);
      }
      *(void *)(v37 + 16) = v29 + 1;
      *(double *)(v37 + 8 * v29 + 32) = v32 - v31;
      v30 += 3;
      ++v29;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
  }
  sub_1C2A18D9C(v28, v26);
  uint64_t v34 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v34);
  uint64_t v35 = swift_bridgeObjectRetain();
  uint64_t v25 = sub_1C2A1AAF8(v35, (void (*)(uint64_t *__return_ptr, uint64_t, long long *))sub_1C2A1AAD8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_1C2A18D9C(uint64_t result, double a2)
{
  uint64_t v3 = result;
  if (qword_1EBB90050 != -1) {
    __C::CGRect result = swift_once();
  }
  double v4 = *(double *)&qword_1EBB90048;
  int64_t v5 = *(void *)(v3 + 16);
  if (qword_1EBB90040 != -1) {
    __C::CGRect result = swift_once();
  }
  double v6 = a2 - *(double *)&qword_1EBB90038 * (double)(v5 - 1);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v41 = MEMORY[0x1E4FBC860];
    sub_1C2932680(0, v5, 0);
    uint64_t v8 = v41;
    double v9 = (double *)(v3 + 32);
    unint64_t v10 = *(void *)(v41 + 16);
    int64_t v11 = v5;
    do
    {
      double v12 = *v9;
      unint64_t v13 = *(void *)(v41 + 24);
      int64_t v14 = v10 + 1;
      if (v10 >= v13 >> 1) {
        sub_1C2932680(v13 > 1, v10 + 1, 1);
      }
      *(void *)(v41 + 16) = v14;
      *(double *)(v41 + 8 * v10 + 32) = v6 * v12;
      ++v9;
      ++v10;
      --v11;
    }
    while (v11);
LABEL_13:
    double v15 = *(double *)(v8 + 32);
    if (v14 != 1)
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = v8 + 8 * v16;
        if (*(double *)(v17 + 40) < v15) {
          double v15 = *(double *)(v17 + 40);
        }
        ++v16;
      }
      while (v14 - 1 != v16);
    }
    if (v4 < v15) {
      return v8;
    }
    double v18 = v6 - v4 * (double)v5;
    sub_1C2932680(0, v14, 0);
    uint64_t v19 = 0;
    unint64_t v20 = *(void *)(v7 + 16);
    do
    {
      double v21 = *(double *)(v8 + 8 * v19 + 32);
      unint64_t v22 = *(void *)(v7 + 24);
      if (v20 >= v22 >> 1) {
        sub_1C2932680(v22 > 1, v20 + 1, 1);
      }
      ++v19;
      *(void *)(v7 + 16) = v20 + 1;
      *(double *)(v7 + 8 * v20++ + 32) = v21 - v15;
    }
    while (v14 != v19);
    swift_bridgeObjectRelease();
    int64_t v23 = *(void *)(v7 + 16);
    if (!v23)
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = MEMORY[0x1E4FBC860];
      int64_t v27 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v27)
      {
LABEL_38:
        uint64_t v42 = v7;
        sub_1C2932680(0, v27, 0);
        uint64_t v37 = 0;
        uint64_t v8 = v42;
        unint64_t v38 = *(void *)(v42 + 16);
        do
        {
          double v39 = *(double *)(v26 + 8 * v37 + 32);
          unint64_t v40 = *(void *)(v42 + 24);
          if (v38 >= v40 >> 1) {
            sub_1C2932680(v40 > 1, v38 + 1, 1);
          }
          ++v37;
          *(void *)(v42 + 16) = v38 + 1;
          *(double *)(v42 + 8 * v38++ + 32) = v4 + v18 * v39;
        }
        while (v27 != v37);
        swift_bridgeObjectRelease();
        return v8;
      }
LABEL_27:
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    }
    if (v23 == 1)
    {
      uint64_t v24 = 0;
      double v25 = 0.0;
    }
    else
    {
      uint64_t v24 = v23 & 0x7FFFFFFFFFFFFFFELL;
      uint64_t v28 = (double *)(v7 + 40);
      double v25 = 0.0;
      uint64_t v29 = v23 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        double v25 = v25 + *(v28 - 1) + *v28;
        v28 += 2;
        v29 -= 2;
      }
      while (v29);
      if (v23 == v24) {
        goto LABEL_33;
      }
    }
    int64_t v30 = v23 - v24;
    double v31 = (double *)(v7 + 8 * v24 + 32);
    do
    {
      double v32 = *v31++;
      double v25 = v25 + v32;
      --v30;
    }
    while (v30);
LABEL_33:
    sub_1C2932680(0, v23, 0);
    uint64_t v33 = 0;
    uint64_t v26 = v7;
    unint64_t v34 = *(void *)(v7 + 16);
    do
    {
      double v35 = *(double *)(v7 + 8 * v33 + 32);
      unint64_t v36 = *(void *)(v7 + 24);
      if (v34 >= v36 >> 1) {
        sub_1C2932680(v36 > 1, v34 + 1, 1);
      }
      ++v33;
      *(void *)(v7 + 16) = v34 + 1;
      *(double *)(v7 + 8 * v34++ + 32) = v35 / v25;
    }
    while (v23 != v33);
    swift_bridgeObjectRelease();
    int64_t v27 = *(void *)(v7 + 16);
    if (v27) {
      goto LABEL_38;
    }
    goto LABEL_27;
  }
  int64_t v14 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (v14)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_1C2A1919C(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, CGFloat *a4@<X3>, void *a5@<X5>, uint64_t a6@<X8>, CGFloat a7@<D0>, CGFloat a8@<D1>, CGFloat a9@<D2>, CGFloat a10@<D3>, double Width@<D4>, double a12@<D5>)
{
  uint64_t v26 = sub_1C2A9E8B8();
  uint64_t v27 = *(void *)(v26 - 8);
  __n128 v28 = MEMORY[0x1F4188790](v26);
  int64_t v30 = (char *)v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > a1)
  {
    *(double *)&v34[1] = a12;
    double v35 = a5;
    LODWORD(a2) = *(unsigned __int8 *)(a2 + 16);
    double v12 = *(void (**)(char *, void, uint64_t, __n128))(v27 + 104);
    v12(v30, *MEMORY[0x1E4FBBEB0], v26, v28);
    *(CGFloat *)&v34[2] = a7;
    sub_1C2A9C8F8();
    double v13 = v31;
    a5 = *(void **)(v27 + 8);
    ((void (*)(char *, uint64_t))a5)(v30, v26);
    a7 = *a4;
    v36.origin.CGFloat x = a8;
    v36.origin.CGFloat y = a9;
    v36.size.CGFloat width = a10;
    v36.size.CGFloat height = Width;
    CGFloat Width = CGRectGetWidth(v36);
    if (qword_1EBB90040 == -1) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  __break(1u);
LABEL_11:
  swift_once();
LABEL_4:
  *a4 = *a4 + v13 + *(double *)&qword_1EBB90038;
  if (a2)
  {
    v37.origin.CGFloat x = 0.0;
    v37.origin.CGFloat y = a7;
    v37.size.CGFloat width = Width;
    v37.size.CGFloat height = v13;
    CGRectGetMinY(v37);
    v38.origin.CGFloat x = 0.0;
    v38.origin.CGFloat y = a7;
    v38.size.CGFloat width = Width;
    v38.size.CGFloat height = v13;
    CGRectGetHeight(v38);
    if (qword_1EBB90030 != -1) {
      swift_once();
    }
    ((void (*)(char *, void, uint64_t))v12)(v30, *MEMORY[0x1E4FBBEA0], v26);
    sub_1C2A9C8F8();
    uint64_t v33 = v32;
    ((void (*)(char *, uint64_t))a5)(v30, v26);
    v35[1] = v33;
  }
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = 0;
  *(CGFloat *)(a6 + 16) = a7;
  *(double *)(a6 + 24) = Width;
  *(double *)(a6 + 32) = v13;
  *(unsigned char *)(a6 + 40) = a2;
}

uint64_t static LevelView.DataConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2) {
    return sub_1C29631C0(*(void *)(a1 + 8), *(void *)(a2 + 8));
  }
  else {
    return 0;
  }
}

uint64_t sub_1C2A194AC()
{
  if (*v0) {
    return 0xD000000000000017;
  }
  else {
    return 0x7A696C616D726F6ELL;
  }
}

uint64_t sub_1C2A194F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A1B540(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A19520(uint64_t a1)
{
  unint64_t v2 = sub_1C2A1AC50();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A1955C(uint64_t a1)
{
  unint64_t v2 = sub_1C2A1AC50();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LevelView.DataConfiguration.encode(to:)(void *a1)
{
  sub_1C2A1AD50(0, &qword_1EBB90240, (uint64_t (*)(void))sub_1C2A1AC50, (uint64_t)&type metadata for LevelView.DataConfiguration.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v10 - v7;
  uint64_t v10 = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A1AC50();
  sub_1C2A9EA18();
  char v13 = 0;
  sub_1C2A9E848();
  if (!v2)
  {
    uint64_t v12 = v10;
    char v11 = 1;
    sub_1C2A1ACA4();
    sub_1C2A1ADB8(&qword_1EBB90238, (void (*)(void))sub_1C2A1ACFC);
    sub_1C2A9E868();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t LevelView.DataConfiguration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  double v15 = a2;
  sub_1C2A1AD50(0, &qword_1EBB90000, (uint64_t (*)(void))sub_1C2A1AC50, (uint64_t)&type metadata for LevelView.DataConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v15 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A1AC50();
  sub_1C2A9EA08();
  if (!v2)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v15;
    char v18 = 0;
    sub_1C2A9E788();
    uint64_t v12 = v11;
    sub_1C2A1ACA4();
    char v16 = 1;
    sub_1C2A1ADB8(&qword_1EBB90060, (void (*)(void))sub_1C2A1AE24);
    sub_1C2A9E7A8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    uint64_t v14 = v17;
    *uint64_t v10 = v12;
    v10[1] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C2A199C8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return LevelView.DataConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C2A199E0(void *a1)
{
  return LevelView.DataConfiguration.encode(to:)(a1);
}

uint64_t sub_1C2A199F8(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2) {
    return sub_1C29631C0(*(void *)(a1 + 8), *(void *)(a2 + 8));
  }
  else {
    return 0;
  }
}

id LevelView.ViewConfiguration.barColor.getter()
{
  return *v0;
}

void LevelView.ViewConfiguration.barColor.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*LevelView.ViewConfiguration.barColor.modify())()
{
  return nullsub_1;
}

id LevelView.ViewConfiguration.highlightedBarColor.getter()
{
  return *(id *)(v0 + 8);
}

void LevelView.ViewConfiguration.highlightedBarColor.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*LevelView.ViewConfiguration.highlightedBarColor.modify())()
{
  return nullsub_1;
}

id LevelView.ViewConfiguration.dotColor.getter()
{
  return *(id *)(v0 + 16);
}

void LevelView.ViewConfiguration.dotColor.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*LevelView.ViewConfiguration.dotColor.modify())()
{
  return nullsub_1;
}

HealthVisualization::LevelView::ViewConfiguration __swiftcall LevelView.ViewConfiguration.init(barColor:highlightedBarColor:dotColor:)(UIColor barColor, UIColor highlightedBarColor, UIColor dotColor)
{
  v3->super.isCGFloat a = barColor.super.isa;
  v3[1].super.isCGFloat a = highlightedBarColor.super.isa;
  v3[2].super.isCGFloat a = dotColor.super.isa;
  result.dotColor = dotColor;
  result.highlightedBarColor = highlightedBarColor;
  result.barColor = barColor;
  return result;
}

id static LevelView.ViewConfiguration.defaultConfiguration(highlightColor:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  uint64_t v17 = sub_1C2A19CD0;
  uint64_t v18 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v14 = 1107296256;
  double v15 = sub_1C2932F80;
  char v16 = &block_descriptor_9;
  uint64_t v5 = _Block_copy(&aBlock);
  id v6 = objc_msgSend(v4, sel_initWithDynamicProvider_, v5);
  _Block_release(v5);
  swift_release();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  id v8 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  uint64_t v17 = sub_1C2A1AEB0;
  uint64_t v18 = v7;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v14 = 1107296256;
  double v15 = sub_1C2932F80;
  char v16 = &block_descriptor_5;
  uint64_t v9 = _Block_copy(&aBlock);
  id v12 = a1;
  id v10 = objc_msgSend(v8, sel_initWithDynamicProvider_, v9);
  _Block_release(v9);
  swift_release();
  *a2 = v6;
  a2[1] = v10;
  a2[2] = v12;
  return v12;
}

id sub_1C2A19CD0(void *a1)
{
  id v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  uint64_t v2 = self;
  uint64_t v3 = &selRef_systemGray3Color;
  if (v1 != (id)2) {
    uint64_t v3 = &selRef_systemGray6Color;
  }
  id v4 = [v2 *v3];
  return v4;
}

void sub_1C2A19D3C()
{
  qword_1EBB90018 = 0x4008000000000000;
}

double static LevelView.ViewConfiguration.Constants.cornerRadius.getter()
{
  return sub_1C2A19E74(&qword_1EBB90020, (uint64_t)&qword_1EBB90018);
}

void sub_1C2A19D70()
{
  qword_1EBB90028 = 0x4024000000000000;
}

double static LevelView.ViewConfiguration.Constants.circleDiameter.getter()
{
  return sub_1C2A19E74(&qword_1EBB90030, (uint64_t)&qword_1EBB90028);
}

void sub_1C2A19DA4()
{
  qword_1EBB90008 = 0x4000000000000000;
}

double static LevelView.ViewConfiguration.Constants.circleGutter.getter()
{
  return sub_1C2A19E74(&qword_1EBB90010, (uint64_t)&qword_1EBB90008);
}

void sub_1C2A19DD8()
{
  qword_1EBB90038 = 0x4000000000000000;
}

double static LevelView.ViewConfiguration.Constants.interBucketSpacing.getter()
{
  return sub_1C2A19E74(&qword_1EBB90040, (uint64_t)&qword_1EBB90038);
}

void sub_1C2A19E0C()
{
  qword_1EBB90048 = 0x4008000000000000;
}

double static LevelView.ViewConfiguration.Constants.bucketMinimumHeight.getter()
{
  return sub_1C2A19E74(&qword_1EBB90050, (uint64_t)&qword_1EBB90048);
}

void sub_1C2A19E40()
{
  qword_1EA31EBE8 = 0x4000000000000000;
}

double static LevelView.ViewConfiguration.Constants.overUnderRunExtra.getter()
{
  return sub_1C2A19E74(&qword_1EA31DC98, (uint64_t)&qword_1EA31EBE8);
}

double sub_1C2A19E74(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *(double *)a2;
}

double LevelView.LayoutConfiguration.size.getter()
{
  return *(double *)v0;
}

void LevelView.LayoutConfiguration.size.setter(double a1, double a2)
{
  *uint64_t v2 = a1;
  v2[1] = a2;
}

uint64_t (*LevelView.LayoutConfiguration.size.modify())()
{
  return nullsub_1;
}

HealthVisualization::LevelView::LayoutConfiguration __swiftcall LevelView.LayoutConfiguration.init(size:)(HealthVisualization::LevelView::LayoutConfiguration size)
{
  *id v1 = size.size.width;
  v1[1] = size.size.height;
  return size;
}

int64x2_t sub_1C2A19EE8()
{
  int64x2_t result = vdupq_n_s64(0x4046000000000000uLL);
  xmmword_1EA31EBF0 = (__int128)result;
  return result;
}

double static LevelView.LayoutConfiguration.default.getter@<D0>(_OWORD *a1@<X8>)
{
  if (qword_1EA31DCA0 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_1EA31EBF0;
  *a1 = xmmword_1EA31EBF0;
  return result;
}

uint64_t sub_1C2A19F60(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C2A07418(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1C2A19FCC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1C2A19FCC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C2A9E888();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v85 = *a1;
      uint64_t v86 = -1;
      uint64_t v87 = 1;
      uint64_t v88 = *a1;
      do
      {
        uint64_t v89 = v86;
        uint64_t v90 = v88;
        do
        {
          double v91 = *(double *)(v90 + 24);
          if (v91 >= *(double *)v90) {
            break;
          }
          if (!v85) {
            goto LABEL_141;
          }
          uint64_t v92 = *(void *)(v90 + 32);
          char v93 = *(unsigned char *)(v90 + 40);
          *(_OWORD *)(v90 + 24) = *(_OWORD *)v90;
          *(void *)(v90 + 40) = *(void *)(v90 + 16);
          *(double *)uint64_t v90 = v91;
          *(void *)(v90 + 8) = v92;
          *(unsigned char *)(v90 + 16) = v93;
          v90 -= 24;
        }
        while (!__CFADD__(v89++, 1));
        ++v87;
        v88 += 24;
        --v86;
      }
      while (v87 != v3);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  double v104 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (double *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      id v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      CGPoint v95 = v12;
      uint64_t v106 = v9;
      if (v13 >= 2)
      {
        uint64_t v96 = *v104;
        do
        {
          unint64_t v97 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v96) {
            goto LABEL_145;
          }
          CGPoint v98 = v95;
          uint64_t v99 = *(void *)&v95[16 * v97 + 32];
          uint64_t v100 = *(void *)&v95[16 * v13 + 24];
          sub_1C2A1A6E4((double *)(v96 + 24 * v99), (double *)(v96 + 24 * *(void *)&v95[16 * v13 + 16]), v96 + 24 * v100, __dst);
          if (v1) {
            break;
          }
          if (v100 < v99) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            CGPoint v98 = sub_1C2A073DC((uint64_t)v98);
          }
          if (v97 >= *((void *)v98 + 2)) {
            goto LABEL_134;
          }
          uint64_t v101 = &v98[16 * v97 + 32];
          *(void *)uint64_t v101 = v99;
          *((void *)v101 + 1) = v100;
          unint64_t v102 = *((void *)v98 + 2);
          if (v13 > v102) {
            goto LABEL_135;
          }
          memmove(&v98[16 * v13 + 16], &v98[16 * v13 + 32], 16 * (v102 - v13));
          CGPoint v95 = v98;
          *((void *)v98 + 2) = v102 - 1;
          unint64_t v13 = v102 - 1;
        }
        while (v102 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v106 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v106 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1C2A9DED8();
    *(void *)(v8 + 16) = v7;
    uint64_t v106 = v8;
    __dst = (double *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v105 = *a1 + 24;
  uint64_t v103 = *a1 - 24;
  id v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v107 = v6;
  uint64_t v108 = v3;
  uint64_t v109 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 24 * v10);
      double v16 = *(double *)(v11 + 24 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = (double *)(v105 + 24 * v14);
        while (v15 < v16 != v17[3] >= *v17)
        {
          ++v10;
          v17 += 3;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v18 = 24 * v10;
          uint64_t v19 = 24 * v14;
          uint64_t v20 = v10;
          uint64_t v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v22 = v11 + v19;
              uint64_t v23 = v11 + v18;
              char v24 = *(unsigned char *)(v11 + v19 + 16);
              long long v25 = *(_OWORD *)(v11 + v19);
              uint64_t v26 = *(void *)(v11 + v18 - 8);
              *(_OWORD *)uint64_t v22 = *(_OWORD *)(v11 + v18 - 24);
              *(void *)(v22 + 16) = v26;
              *(_OWORD *)(v23 - 24) = v25;
              *(unsigned char *)(v23 - 8) = v24;
            }
            ++v21;
            v18 -= 24;
            v19 += 24;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v27 >= v3) {
      uint64_t v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      uint64_t v28 = v103 + 24 * v10;
      do
      {
        uint64_t v29 = v14;
        uint64_t v30 = v28;
        do
        {
          double v31 = *(double *)(v30 + 24);
          if (v31 >= *(double *)v30) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          uint64_t v32 = *(void *)(v30 + 32);
          char v33 = *(unsigned char *)(v30 + 40);
          *(_OWORD *)(v30 + 24) = *(_OWORD *)v30;
          *(void *)(v30 + 40) = *(void *)(v30 + 16);
          *(double *)uint64_t v30 = v31;
          *(void *)(v30 + 8) = v32;
          *(unsigned char *)(v30 + 16) = v33;
          v30 -= 24;
          ++v29;
        }
        while (v10 != v29);
        ++v10;
        v28 += 24;
      }
      while (v10 != v27);
      uint64_t v10 = v27;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v12 = sub_1C2A06F98(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v35 = *((void *)v12 + 2);
    unint64_t v34 = *((void *)v12 + 3);
    unint64_t v13 = v35 + 1;
    uint64_t v11 = v109;
    if (v35 >= v34 >> 1)
    {
      CGFloat v84 = sub_1C2A06F98((char *)(v34 > 1), v35 + 1, 1, v12);
      uint64_t v11 = v109;
      id v12 = v84;
    }
    *((void *)v12 + 2) = v13;
    CGRect v36 = v12 + 32;
    CGRect v37 = &v12[16 * v35 + 32];
    *(void *)CGRect v37 = v14;
    *((void *)v37 + 1) = v10;
    if (v35)
    {
      while (1)
      {
        unint64_t v38 = v13 - 1;
        if (v13 >= 4)
        {
          CGRect v43 = &v36[16 * v13];
          uint64_t v44 = *((void *)v43 - 8);
          uint64_t v45 = *((void *)v43 - 7);
          BOOL v49 = __OFSUB__(v45, v44);
          uint64_t v46 = v45 - v44;
          if (v49) {
            goto LABEL_120;
          }
          uint64_t v48 = *((void *)v43 - 6);
          uint64_t v47 = *((void *)v43 - 5);
          BOOL v49 = __OFSUB__(v47, v48);
          uint64_t v41 = v47 - v48;
          char v42 = v49;
          if (v49) {
            goto LABEL_121;
          }
          unint64_t v50 = v13 - 2;
          uint64_t v51 = &v36[16 * v13 - 32];
          uint64_t v53 = *(void *)v51;
          uint64_t v52 = *((void *)v51 + 1);
          BOOL v49 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          if (v49) {
            goto LABEL_123;
          }
          BOOL v49 = __OFADD__(v41, v54);
          uint64_t v55 = v41 + v54;
          if (v49) {
            goto LABEL_126;
          }
          if (v55 >= v46)
          {
            double v73 = &v36[16 * v38];
            uint64_t v75 = *(void *)v73;
            uint64_t v74 = *((void *)v73 + 1);
            BOOL v49 = __OFSUB__(v74, v75);
            uint64_t v76 = v74 - v75;
            if (v49) {
              goto LABEL_130;
            }
            BOOL v66 = v41 < v76;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v67 = *((void *)v12 + 4);
            uint64_t v68 = *((void *)v12 + 5);
            BOOL v49 = __OFSUB__(v68, v67);
            uint64_t v60 = v68 - v67;
            char v61 = v49;
            goto LABEL_77;
          }
          uint64_t v40 = *((void *)v12 + 4);
          uint64_t v39 = *((void *)v12 + 5);
          BOOL v49 = __OFSUB__(v39, v40);
          uint64_t v41 = v39 - v40;
          char v42 = v49;
        }
        if (v42) {
          goto LABEL_122;
        }
        unint64_t v50 = v13 - 2;
        id v56 = &v36[16 * v13 - 32];
        uint64_t v58 = *(void *)v56;
        uint64_t v57 = *((void *)v56 + 1);
        BOOL v59 = __OFSUB__(v57, v58);
        uint64_t v60 = v57 - v58;
        char v61 = v59;
        if (v59) {
          goto LABEL_125;
        }
        uint64_t v62 = &v36[16 * v38];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v49 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v49) {
          goto LABEL_128;
        }
        if (__OFADD__(v60, v65)) {
          goto LABEL_129;
        }
        if (v60 + v65 >= v41)
        {
          BOOL v66 = v41 < v65;
LABEL_83:
          if (v66) {
            unint64_t v38 = v50;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v61) {
          goto LABEL_124;
        }
        CGFloat v69 = &v36[16 * v38];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v49 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v49) {
          goto LABEL_127;
        }
        if (v72 < v60) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v77 = v38 - 1;
        if (v38 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        unint64_t v78 = v12;
        char v79 = &v36[16 * v77];
        uint64_t v80 = *(void *)v79;
        double v81 = &v36[16 * v38];
        uint64_t v82 = *((void *)v81 + 1);
        sub_1C2A1A6E4((double *)(v11 + 24 * *(void *)v79), (double *)(v11 + 24 * *(void *)v81), v11 + 24 * v82, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v82 < v80) {
          goto LABEL_117;
        }
        if (v38 > *((void *)v78 + 2)) {
          goto LABEL_118;
        }
        *(void *)char v79 = v80;
        *(void *)&v36[16 * v77 + 8] = v82;
        unint64_t v83 = *((void *)v78 + 2);
        if (v38 >= v83) {
          goto LABEL_119;
        }
        id v12 = v78;
        unint64_t v13 = v83 - 1;
        memmove(&v36[16 * v38], v81 + 16, 16 * (v83 - 1 - v38));
        *((void *)v78 + 2) = v83 - 1;
        uint64_t v11 = v109;
        if (v83 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v107;
    uint64_t v3 = v108;
    if (v10 >= v108)
    {
      uint64_t v9 = v106;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1C2A9E618();
  __break(1u);
  return result;
}

uint64_t sub_1C2A1A6E4(double *__src, double *a2, unint64_t a3, double *__dst)
{
  id v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = ((char *)a2 - (char *)__src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v27 = __dst;
  uint64_t v28 = __src;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      uint64_t v17 = 3 * v11;
      if (__dst != a2 || &a2[v17] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      uint64_t v18 = (char *)&v4[v17];
      uint64_t v26 = &v4[v17];
      uint64_t v28 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v19 = a3 - 24;
        uint64_t v20 = v6;
        while (1)
        {
          uint64_t v21 = (double *)(v19 + 24);
          double v22 = *(v20 - 3);
          v20 -= 3;
          if (*((double *)v18 - 3) >= v22)
          {
            uint64_t v26 = (double *)(v18 - 24);
            if (v21 < (double *)v18 || v19 >= (unint64_t)v18 || v21 != (double *)v18)
            {
              long long v24 = *(_OWORD *)(v18 - 24);
              *(void *)(v19 + 16) = *((void *)v18 - 1);
              *(_OWORD *)unint64_t v19 = v24;
            }
            uint64_t v20 = v6;
            v18 -= 24;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v21 != v6 || v19 >= (unint64_t)v6)
            {
              long long v23 = *(_OWORD *)v20;
              *(double *)(v19 + 16) = v20[2];
              *(_OWORD *)unint64_t v19 = v23;
            }
            uint64_t v28 = v20;
            if (v20 <= v7) {
              goto LABEL_38;
            }
          }
          v19 -= 24;
          uint64_t v6 = v20;
          if (v18 <= (char *)v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -23)
  {
    size_t v12 = 3 * v9;
    if (__dst != __src || &__src[v12] <= __dst) {
      memmove(__dst, __src, v12 * 8);
    }
    unint64_t v13 = &v4[v12];
    uint64_t v26 = &v4[v12];
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
          {
            long long v16 = *(_OWORD *)v4;
            v7[2] = v4[2];
            *(_OWORD *)uint64_t v7 = v16;
          }
          v4 += 3;
          uint64_t v27 = v4;
          uint64_t v14 = v6;
        }
        else
        {
          uint64_t v14 = v6 + 3;
          if (v7 < v6 || v7 >= v14 || v7 != v6)
          {
            long long v15 = *(_OWORD *)v6;
            v7[2] = v6[2];
            *(_OWORD *)uint64_t v7 = v15;
          }
        }
        v7 += 3;
        if (v4 >= v13) {
          break;
        }
        uint64_t v6 = v14;
      }
      while ((unint64_t)v14 < a3);
      uint64_t v28 = v7;
    }
LABEL_38:
    sub_1C2A07310((void **)&v28, (const void **)&v27, &v26);
    return 1;
  }
  uint64_t result = sub_1C2A9E6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C2A1A988(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65676E6172 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6867696C68676968 && a2 == 0xEB00000000646574)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C2A1AA8C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    goto LABEL_9;
  }
  BOOL v2 = (double *)(result + 40);
  double v3 = 1.79769313e308;
  double v4 = 2.22507386e-308;
  do
  {
    if (v3 >= *(v2 - 1)) {
      double v3 = *(v2 - 1);
    }
    if (*v2 > v4) {
      double v4 = *v2;
    }
    v2 += 3;
    --v1;
  }
  while (v1);
  if (v3 > v4) {
LABEL_9:
  }
    __break(1u);
  return result;
}

void sub_1C2A1AAD8(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C2A1919C(a1, a2, *(void *)(v3 + 16), *(CGFloat **)(v3 + 32), *(void **)(v3 + 88), a3, *(CGFloat *)(v3 + 24), *(CGFloat *)(v3 + 40), *(CGFloat *)(v3 + 48), *(CGFloat *)(v3 + 56), *(double *)(v3 + 64), *(double *)(v3 + 72));
}

uint64_t sub_1C2A1AAF8(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t, long long *))
{
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1C2978AAC(0, 0, 0);
  uint64_t v3 = v26;
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v5 = 0;
    char v6 = (unsigned char *)(a1 + 48);
    do
    {
      char v7 = *v6;
      uint64_t v23 = v5;
      long long v24 = *((_OWORD *)v6 - 1);
      char v25 = v7;
      a2(&v19, v5, &v24);
      uint64_t v8 = v19;
      long long v9 = v20;
      long long v10 = v21;
      char v11 = v22;
      uint64_t v26 = v3;
      unint64_t v13 = *(void *)(v3 + 16);
      unint64_t v12 = *(void *)(v3 + 24);
      if (v13 >= v12 >> 1)
      {
        long long v16 = v21;
        long long v17 = v20;
        sub_1C2978AAC(v12 > 1, v13 + 1, 1);
        long long v10 = v16;
        long long v9 = v17;
        uint64_t v3 = v26;
      }
      *(void *)(v3 + 16) = v13 + 1;
      uint64_t v14 = v3 + 48 * v13;
      *(void *)(v14 + 32) = v8;
      ++v5;
      *(_OWORD *)(v14 + 40) = v9;
      *(_OWORD *)(v14 + 56) = v10;
      *(unsigned char *)(v14 + 72) = v11;
      v6 += 24;
    }
    while (v4 != v5);
  }
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_1C2A1AC50()
{
  unint64_t result = qword_1EBB91980;
  if (!qword_1EBB91980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91980);
  }
  return result;
}

void sub_1C2A1ACA4()
{
  if (!qword_1EBB919B0)
  {
    unint64_t v0 = sub_1C2A9DEF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB919B0);
    }
  }
}

unint64_t sub_1C2A1ACFC()
{
  unint64_t result = qword_1EBB90230;
  if (!qword_1EBB90230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB90230);
  }
  return result;
}

void sub_1C2A1AD50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C2A1ADB8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2A1ACA4();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2A1AE24()
{
  unint64_t result = qword_1EBB90058;
  if (!qword_1EBB90058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB90058);
  }
  return result;
}

uint64_t sub_1C2A1AE78()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1C2A1AEB0(void *a1)
{
  BOOL v2 = *(void **)(v1 + 16);
  id v3 = objc_msgSend(a1, sel_userInterfaceStyle);
  double v4 = 0.2;
  if (v3 == (id)2) {
    double v4 = 0.5;
  }
  id v5 = objc_msgSend(v2, sel_colorWithAlphaComponent_, v4);
  return v5;
}

ValueMetadata *type metadata accessor for LevelView()
{
  return &type metadata for LevelView;
}

void *initializeBufferWithCopyOfBuffer for LevelView.DataConfiguration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LevelView.DataConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for LevelView.DataConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LevelView.DataConfiguration()
{
  return &type metadata for LevelView.DataConfiguration;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for LevelView.DataConfiguration.Bucket(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for LevelView.DataConfiguration.Bucket(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LevelView.DataConfiguration.Bucket()
{
  return &type metadata for LevelView.DataConfiguration.Bucket;
}

void *initializeBufferWithCopyOfBuffer for LevelView.ViewConfiguration(void *a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  BOOL v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  int v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

void destroy for LevelView.ViewConfiguration(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for LevelView.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void **)a2;
  int v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  unint64_t v10 = *(void **)(a2 + 16);
  uint64_t v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  return a1;
}

uint64_t assignWithTake for LevelView.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  int v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for LevelView.ViewConfiguration()
{
  return &type metadata for LevelView.ViewConfiguration;
}

ValueMetadata *type metadata accessor for LevelView.ViewConfiguration.Constants()
{
  return &type metadata for LevelView.ViewConfiguration.Constants;
}

ValueMetadata *type metadata accessor for LevelView.LayoutConfiguration()
{
  return &type metadata for LevelView.LayoutConfiguration;
}

ValueMetadata *type metadata accessor for LevelView.DataConfiguration.CodingKeys()
{
  return &type metadata for LevelView.DataConfiguration.CodingKeys;
}

unsigned char *_s19HealthVisualization9LevelViewV17DataConfigurationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2A1B2F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LevelView.DataConfiguration.Bucket.CodingKeys()
{
  return &type metadata for LevelView.DataConfiguration.Bucket.CodingKeys;
}

unint64_t sub_1C2A1B334()
{
  unint64_t result = qword_1EA31EC00;
  if (!qword_1EA31EC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EC00);
  }
  return result;
}

unint64_t sub_1C2A1B38C()
{
  unint64_t result = qword_1EA31EC08;
  if (!qword_1EA31EC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EC08);
  }
  return result;
}

unint64_t sub_1C2A1B3E4()
{
  unint64_t result = qword_1EBB91990;
  if (!qword_1EBB91990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91990);
  }
  return result;
}

unint64_t sub_1C2A1B43C()
{
  unint64_t result = qword_1EBB91988;
  if (!qword_1EBB91988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91988);
  }
  return result;
}

unint64_t sub_1C2A1B494()
{
  unint64_t result = qword_1EBB919A8;
  if (!qword_1EBB919A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB919A8);
  }
  return result;
}

unint64_t sub_1C2A1B4EC()
{
  unint64_t result = qword_1EBB919A0;
  if (!qword_1EBB919A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB919A0);
  }
  return result;
}

uint64_t sub_1C2A1B540(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7A696C616D726F6ELL && a2 == 0xEF65756C61566465;
  if (v2 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C2AB9960)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t AnchorDate.date.getter()
{
  uint64_t v1 = sub_1C2A9C868();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unsigned int v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C2A9C6E8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v0;
  _s19HealthVisualization25PresentationDateProvidingPAAE012presentationD010Foundation0D0VvgZ_0();
  sub_1C2A9C838();
  id v10 = (id)sub_1C2A9C7D8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  switch(v9)
  {
    case 1:
      uint64_t v11 = (void *)sub_1C2A9C658();
      id v13 = objc_msgSend(v10, sel_hk_startOfDateByAddingDays_toDate_, -1, v11);
      goto LABEL_7;
    case 2:
      id v14 = objc_msgSend(v10, sel_firstWeekday);
      uint64_t v11 = (void *)sub_1C2A9C658();
      id v13 = objc_msgSend(v10, sel_hk_startOfWeekWithFirstWeekday_beforeDate_addingWeeks_, v14, v11, 0);
      goto LABEL_7;
    case 3:
      uint64_t v11 = (void *)sub_1C2A9C658();
      id v13 = objc_msgSend(v10, sel_hk_startOfMonthForDate_, v11);
      goto LABEL_7;
    case 4:
      uint64_t v11 = (void *)sub_1C2A9C658();
      id v13 = objc_msgSend(v10, sel_hk_startOfYearForDate_addingYears_, v11, 0);
LABEL_7:
      id v12 = v13;
      break;
    default:
      uint64_t v11 = (void *)sub_1C2A9C658();
      id v12 = v10;
      id v10 = objc_msgSend(v10, sel_hk_startOfDateByAddingDays_toDate_, 0, v11);
      break;
  }

  sub_1C2A9C6A8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

HealthVisualization::AnchorDate_optional __swiftcall AnchorDate.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C2A9E6E8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static AnchorDate.allCases.getter()
{
  return &unk_1F1DEA8A0;
}

unint64_t AnchorDate.rawValue.getter()
{
  unint64_t result = 0x54664F7472617473;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x57664F7472617473;
      break;
    case 3:
      unint64_t result = 0x4D664F7472617473;
      break;
    case 4:
      unint64_t result = 0x59664F7472617473;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C2A1BA80()
{
  unint64_t result = qword_1EA31EC10;
  if (!qword_1EA31EC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EC10);
  }
  return result;
}

uint64_t sub_1C2A1BAD4()
{
  return sub_1C2A7C19C();
}

uint64_t sub_1C2A1BADC()
{
  sub_1C2A9DD78();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2A1BBE0()
{
  return sub_1C2A7CFB8();
}

HealthVisualization::AnchorDate_optional sub_1C2A1BBE8(Swift::String *a1)
{
  return AnchorDate.init(rawValue:)(*a1);
}

void sub_1C2A1BBF4(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEC0000007961646FLL;
  unint64_t v3 = 0x54664F7472617473;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0x80000001C2AB52F0;
      unint64_t v3 = 0xD000000000000010;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x57664F7472617473;
      *(void *)(a1 + 8) = 0xEB000000006B6565;
      break;
    case 3:
      strcpy((char *)a1, "startOfMonth");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 4:
      *(void *)a1 = 0x59664F7472617473;
      *(void *)(a1 + 8) = 0xEB00000000726165;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1C2A1BCD4()
{
  return sub_1C2A9DE58();
}

uint64_t sub_1C2A1BD34()
{
  return sub_1C2A9DE38();
}

unint64_t sub_1C2A1BD88()
{
  unint64_t result = qword_1EA31EC18;
  if (!qword_1EA31EC18)
  {
    sub_1C2A1BDE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EC18);
  }
  return result;
}

void sub_1C2A1BDE0()
{
  if (!qword_1EA31EC20)
  {
    unint64_t v0 = sub_1C2A9DEF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31EC20);
    }
  }
}

void sub_1C2A1BE38(void *a1@<X8>)
{
  *a1 = &unk_1F1DEA8C8;
}

uint64_t sub_1C2A1BE48(unsigned __int8 *a1, char *a2)
{
  return sub_1C29546FC(*a1, *a2);
}

unsigned char *storeEnumTagSinglePayload for AnchorDate(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2A1BF20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnchorDate()
{
  return &type metadata for AnchorDate;
}

unint64_t sub_1C2A1BF58()
{
  unint64_t result = qword_1EBB91C68;
  if (!qword_1EBB91C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91C68);
  }
  return result;
}

uint64_t ActivitySummaryQueryOperation.result.getter()
{
  swift_retain();
  sub_1C2A9C9B8();
  swift_release();
  return v1;
}

uint64_t sub_1C2A1BFFC@<X0>(uint64_t a1@<X8>)
{
  swift_retain();
  sub_1C2A9C9B8();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_1C2A1C05C(uint64_t a1)
{
  id v1 = *(id *)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  sub_1C296276C(*(id *)a1, v3);
  swift_retain();
  sub_1C2A9C9C8();
  sub_1C2962A14(v1, v3);
  return swift_release();
}

id sub_1C2A1C0EC()
{
  uint64_t v1 = qword_1EBB91018;
  unint64_t v2 = *(void **)(v0 + qword_1EBB91018);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EBB91018);
  }
  else
  {
    id v4 = sub_1C2A1C14C();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    unint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2A1C14C()
{
  uint64_t v1 = *(void *)&v0[qword_1EBB91030];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  id v3 = objc_allocWithZone(MEMORY[0x1E4F2ABB0]);
  v10[4] = sub_1C2A1E88C;
  v10[5] = v2;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  v10[2] = sub_1C2A1E1A8;
  v10[3] = &block_descriptor_10;
  id v4 = _Block_copy(v10);
  uint64_t v5 = v0;
  id v6 = objc_msgSend(v3, sel_initWithPredicate_resultsHandler_, v1, v4);
  _Block_release(v4);
  swift_release();
  objc_msgSend(v6, sel_setOrderByDateAscending_, v5[qword_1EBB91000]);
  objc_msgSend(v6, sel_setLimit_, *(void *)&v5[qword_1EBB91028]);
  id v7 = v6;
  id v8 = objc_msgSend(v5, sel_name);
  objc_msgSend(v7, sel_setDebugIdentifier_, v8);

  objc_msgSend(v7, sel_setQualityOfService_, *(void *)&v5[qword_1EBB91010]);
  return v7;
}

uint64_t sub_1C2A1C2EC@<X0>(uint64_t a1@<X8>)
{
  sub_1C2A1C8B8(0, &qword_1EBB91188, MEMORY[0x1E4FBD318], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  id v8 = &v15[-v7];
  uint64_t v9 = (uint64_t)v1 + qword_1EBB91020;
  swift_beginAccess();
  sub_1C2A1E8A0(v9, (uint64_t)v8);
  uint64_t v10 = sub_1C2A9CF58();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_1C2A1E7E4((uint64_t)v8, &qword_1EBB91188, MEMORY[0x1E4FBD318]);
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  id v12 = (id)qword_1EBB91C60;
  id v13 = v1;
  sub_1C2A9CF48();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess();
  sub_1C2A1E934((uint64_t)v5, v9);
  return swift_endAccess();
}

id ActivitySummaryQueryOperation.__allocating_init(predicate:orderedAscending:limit:name:queryQualityOfService:healthStore:)(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v15 = objc_allocWithZone(v7);
  return ActivitySummaryQueryOperation.init(predicate:orderedAscending:limit:name:queryQualityOfService:healthStore:)(a1, a2, a3, a4, a5, a6, a7);
}

id ActivitySummaryQueryOperation.init(predicate:orderedAscending:limit:name:queryQualityOfService:healthStore:)(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v14 = qword_1EBB91008;
  sub_1C296291C();
  uint64_t v15 = swift_allocError();
  *uint64_t v16 = 0xD00000000000001DLL;
  v16[1] = 0x80000001C2AAD5B0;
  void v16[2] = 0;
  uint64_t v29 = v15;
  char v30 = 1;
  sub_1C2A1C8B8(0, &qword_1EBB90E70, (uint64_t (*)(uint64_t))sub_1C2A1C808, MEMORY[0x1E4F674D8]);
  swift_allocObject();
  long long v17 = v7;
  *(void *)&v7[v14] = sub_1C2A9C9F8();
  *(void *)&v17[qword_1EBB91018] = 0;
  uint64_t v18 = &v17[qword_1EBB91020];
  uint64_t v19 = sub_1C2A9CF58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(void *)&v17[qword_1EBB91030] = a1;
  v17[qword_1EBB91000] = a2;
  *(void *)&v17[qword_1EBB91028] = a3;
  *(void *)&v17[qword_1EBB91010] = a6;
  *(void *)&v17[qword_1EBB90FF8] = a7;
  id v20 = a1;
  id v21 = a7;

  v28.receiver = v17;
  v28.super_class = ObjectType;
  id v22 = objc_msgSendSuper2(&v28, sel_init);
  id v23 = v22;
  if (a5)
  {
    long long v24 = (void *)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v24 = 0;
  }
  objc_msgSend(v22, sel_setName_, v24, a4);

  return v22;
}

void sub_1C2A1C808()
{
  if (!qword_1EBB911C8)
  {
    sub_1C2A1C8B8(255, &qword_1EBB911A8, (uint64_t (*)(uint64_t))sub_1C2A1C91C, MEMORY[0x1E4FBB320]);
    sub_1C29415E4(255, (unint64_t *)&qword_1EBB92210);
    unint64_t v0 = sub_1C2A9E9F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB911C8);
    }
  }
}

void sub_1C2A1C8B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C2A1C91C()
{
  unint64_t result = qword_1EBB927D0;
  if (!qword_1EBB927D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB927D0);
  }
  return result;
}

Swift::Void __swiftcall ActivitySummaryQueryOperation.main()()
{
  uint64_t v1 = sub_1C2A9CF58();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5._uint64_t countAndFlagsBits = 0x676E696E6E7572;
  v5._object = (void *)0xE700000000000000;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v5, v6);
  sub_1C2A9E1B8();
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  sub_1C2A1C2EC((uint64_t)v4);
  sub_1C29624A4();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C2AA6B00;
  uint64_t v8 = sub_1C2A9DD28();
  uint64_t v10 = v9;
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 64) = sub_1C296250C();
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v10;
  sub_1C2A9CF28();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v11 = *(void **)(v0 + qword_1EBB90FF8);
  id v12 = sub_1C2A1C0EC();
  objc_msgSend(v11, sel_executeQuery_, v12);
}

void sub_1C2A1CB68(void *a1)
{
  id v1 = a1;
  ActivitySummaryQueryOperation.main()();
}

Swift::Void __swiftcall ActivitySummaryQueryOperation.cleanUp()()
{
  uint64_t v1 = sub_1C2A9CF58();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5._uint64_t countAndFlagsBits = 0x676E696E61656C63;
  v5._object = (void *)0xEB00000000707520;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v5, v6);
  if (objc_msgSend(v0, sel_isCancelled))
  {
    v17[1] = swift_getObjectType();
    sub_1C2A1D694();
    v7._uint64_t countAndFlagsBits = sub_1C2A9DD58();
    uint64_t v9 = v8;
    v10._uint64_t countAndFlagsBits = 0x656C6C65636E6163;
    v10._object = (void *)0xE900000000000064;
    v7._object = v9;
    NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v10, v7);
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = *(void **)&v0[qword_1EBB90FF8];
  id v12 = sub_1C2A1C0EC();
  objc_msgSend(v11, sel_stopQuery_, v12);

  sub_1C2A9E1A8();
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  sub_1C2A1C2EC((uint64_t)v4);
  sub_1C29624A4();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C2AA6B00;
  uint64_t v14 = sub_1C2A1CE18();
  uint64_t v16 = v15;
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 64) = sub_1C296250C();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  sub_1C2A9CF28();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1C2A1CE18()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1C2A9C398();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v74 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A1C8B8(0, &qword_1EBB92520, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  Swift::String v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  Swift::String v10 = (char *)&v66 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v75 = (char *)&v66 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v66 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v66 - v17;
  MEMORY[0x1F4188790](v19);
  id v21 = (char *)&v66 - v20;
  uint64_t v22 = sub_1C2A9C6E8();
  uint64_t v77 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v72 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v71 = (char *)&v66 - v25;
  MEMORY[0x1F4188790](v26);
  double v73 = (char *)&v66 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v76 = (char *)&v66 - v29;
  swift_retain();
  sub_1C2A9C9B8();
  unint64_t v30 = swift_release();
  unint64_t v31 = v78;
  if (v79)
  {
    uint64_t countAndFlagsBits = 1701736302;
    char v33 = (void *)v78;
    char v34 = 1;
LABEL_46:
    sub_1C2962A14(v33, v34);
    return countAndFlagsBits;
  }
  uint64_t v69 = v3;
  uint64_t v70 = v2;
  if (!(v78 >> 62))
  {
    uint64_t v35 = *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v35) {
      goto LABEL_5;
    }
LABEL_45:
    uint64_t countAndFlagsBits = 1701736302;
    char v33 = (void *)v31;
    char v34 = 0;
    goto LABEL_46;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1C2A9E648();
  sub_1C2962A14((id)v31, 0);
  if (!v35) {
    goto LABEL_45;
  }
LABEL_5:
  int v36 = *(unsigned __int8 *)(v1 + qword_1EBB91000);
  int v68 = v36;
  if (v36 == 1)
  {
    if ((v31 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      id v37 = (id)MEMORY[0x1C8764390](0, v31);
      sub_1C2962A14((id)v31, 0);
      goto LABEL_9;
    }
    if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v37 = *(id *)(v31 + 32);
LABEL_9:
      id v38 = objc_msgSend(v37, sel__startDate);

      if (v38)
      {
        sub_1C2A9C6A8();

        uint64_t v39 = v77;
        uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56);
        uint64_t v41 = v18;
        uint64_t v42 = 0;
      }
      else
      {
        uint64_t v39 = v77;
        uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56);
        uint64_t v41 = v18;
        uint64_t v42 = 1;
      }
      uint64_t v67 = v40;
      v40(v41, v42, 1, v22);
      goto LABEL_22;
    }
    __break(1u);
    goto LABEL_50;
  }
  unint64_t v1 = v35 - 1;
  if (__OFSUB__(v35, 1))
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if ((v31 & 0xC000000000000001) != 0)
  {
LABEL_51:
    swift_bridgeObjectRetain();
    id v43 = (id)MEMORY[0x1C8764390](v1, v31);
    sub_1C2962A14((id)v31, 0);
    goto LABEL_16;
  }
  if ((v1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_53;
  }
  if (v1 >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  id v43 = *(id *)(v31 + 8 * v1 + 32);
LABEL_16:
  id v44 = objc_msgSend(v43, sel__startDate);

  if (v44)
  {
    sub_1C2A9C6A8();

    uint64_t v45 = v77;
    uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56);
    uint64_t v47 = v15;
    uint64_t v48 = 0;
  }
  else
  {
    uint64_t v45 = v77;
    uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56);
    uint64_t v47 = v15;
    uint64_t v48 = 1;
  }
  uint64_t v67 = v46;
  v46(v47, v48, 1, v22);
  uint64_t v18 = v15;
  uint64_t v39 = v45;
LABEL_22:
  sub_1C2A1E750((uint64_t)v18, (uint64_t)v21);
  unint64_t v1 = *(void *)(v39 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v1)(v21, 1, v22) == 1)
  {
    uint64_t countAndFlagsBits = 1701736302;
    sub_1C2962A14((id)v31, 0);
    sub_1C2A1E7E4((uint64_t)v21, &qword_1EBB92520, MEMORY[0x1E4F27928]);
    return countAndFlagsBits;
  }
  BOOL v66 = *(uint64_t (**)(char *, char *, uint64_t))(v39 + 32);
  uint64_t result = v66(v76, v21, v22);
  if (v68)
  {
    unint64_t v30 = v35 - 1;
    if (!__OFSUB__(v35, 1))
    {
      if ((v31 & 0xC000000000000001) == 0)
      {
        if ((v30 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v30 < *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v50 = *(id *)(v31 + 8 * v30 + 32);
LABEL_30:
          uint64_t v51 = v50;
          uint64_t v52 = v70;
          sub_1C2962A14((id)v31, 0);
          id v53 = objc_msgSend(v51, sel__endDate);

          if (v53)
          {
            sub_1C2A9C6A8();

            uint64_t v54 = 0;
          }
          else
          {
            uint64_t v54 = 1;
          }
          uint64_t v59 = (uint64_t)v75;
          v67(v10, v54, 1, v22);
LABEL_41:
          sub_1C2A1E750((uint64_t)v10, v59);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1)(v59, 1, v22) == 1)
          {
            uint64_t countAndFlagsBits = 1701736302;
            (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v22);
            sub_1C2A1E7E4(v59, &qword_1EBB92520, MEMORY[0x1E4F27928]);
          }
          else
          {
            uint64_t v60 = v73;
            v66(v73, (char *)v59, v22);
            uint64_t v62 = v76;
            uint64_t v61 = v77;
            uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
            v63(v71, v76, v22);
            v63(v72, v60, v22);
            uint64_t v64 = v74;
            sub_1C2A9C358();
            uint64_t countAndFlagsBits = DateInterval.stringWithISO8601Format()()._countAndFlagsBits;
            (*(void (**)(char *, uint64_t))(v69 + 8))(v64, v52);
            uint64_t v65 = *(void (**)(char *, uint64_t))(v61 + 8);
            v65(v60, v22);
            v65(v62, v22);
          }
          return countAndFlagsBits;
        }
        __break(1u);
        goto LABEL_58;
      }
LABEL_55:
      id v50 = (id)MEMORY[0x1C8764390](v30, v31);
      goto LABEL_30;
    }
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if ((v31 & 0xC000000000000001) != 0)
  {
LABEL_58:
    id v55 = (id)MEMORY[0x1C8764390](0, v31);
    goto LABEL_35;
  }
  if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v55 = *(id *)(v31 + 32);
LABEL_35:
    id v56 = v55;
    uint64_t v52 = v70;
    sub_1C2962A14((id)v31, 0);
    id v57 = objc_msgSend(v56, sel__endDate);

    if (v57)
    {
      sub_1C2A9C6A8();

      uint64_t v58 = 0;
    }
    else
    {
      uint64_t v58 = 1;
    }
    uint64_t v59 = (uint64_t)v75;
    v67(v7, v58, 1, v22);
    Swift::String v10 = v7;
    goto LABEL_41;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C2A1D694()
{
  unint64_t result = qword_1EA31EC28;
  if (!qword_1EA31EC28)
  {
    type metadata accessor for ActivitySummaryQueryOperation();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA31EC28);
  }
  return result;
}

uint64_t type metadata accessor for ActivitySummaryQueryOperation()
{
  uint64_t result = qword_1EBB91038;
  if (!qword_1EBB91038) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C2A1D71C(int a1, void *a2, unint64_t a3, id a4)
{
  if (objc_msgSend(a4, sel_isCancelled))
  {
    v7._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    v7._object = (void *)0x80000001C2AB6030;
    v8._uint64_t countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v7, v8);
  }
  else
  {
    uint64_t v9 = (uint64_t)objc_msgSend(a4, sel_isFinished);
    if ((v9 & 1) == 0)
    {
      Swift::String v10 = a2;
      if (!a2)
      {
        if (a3) {
          uint64_t v11 = 0xD000000000000024;
        }
        else {
          uint64_t v11 = 0;
        }
        if (a3) {
          uint64_t v12 = 0x80000001C2AB9AA0;
        }
        else {
          uint64_t v12 = 0;
        }
        if (a3) {
          unint64_t v13 = a3 | 0x8000000000000000;
        }
        else {
          unint64_t v13 = 0xC000000000000000;
        }
        sub_1C296291C();
        uint64_t v14 = (void *)swift_allocError();
        *uint64_t v15 = v11;
        v15[1] = v12;
        v15[2] = v13;
        swift_getErrorValue();
        id v16 = (id)a3;
        sub_1C2962970(v11, v12, v13);
        v17._uint64_t countAndFlagsBits = sub_1C2A9E938();
        v18._uint64_t countAndFlagsBits = 0;
        v18._object = (void *)0xE000000000000000;
        NSOperation.logErrorString(_:withInfo:)(v17, v18);
        swift_bridgeObjectRelease();

        uint64_t v9 = swift_allocError();
        Swift::String v10 = (void *)v9;
        *uint64_t v19 = v11;
        v19[1] = v12;
        void v19[2] = v13;
      }
      MEMORY[0x1F4188790](v9);
      swift_bridgeObjectRetain();
      sub_1C2A9CA08();
      sub_1C2962A14(v10, a2 == 0);
    }
  }
}

void sub_1C2A1D920(uint64_t a1, void *a2, char a3)
{
  char v4 = a3 & 1;
  sub_1C296276C(a2, a3 & 1);
  swift_retain();
  sub_1C2A9C9C8();
  sub_1C2962A14(a2, v4);
  swift_release();
  v5._uint64_t countAndFlagsBits = 0x64656873696E6966;
  v5._object = (void *)0xE800000000000000;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v5, v6);
}

id static ActivitySummaryQueryOperation.makePredicate(dateInterval:)(uint64_t a1)
{
  uint64_t v37 = a1;
  uint64_t v1 = sub_1C2A9C6E8();
  uint64_t v38 = *(void *)(v1 - 8);
  uint64_t v39 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C2A9C468();
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v35 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  int v36 = (char *)&v34 - v7;
  uint64_t v8 = sub_1C2A9C728();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C2A9C868();
  uint64_t v40 = *(void *)(v12 - 8);
  uint64_t v41 = v12;
  __n128 v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v9 + 104))(v11, *MEMORY[0x1E4F27B20], v8, v13);
  sub_1C2A9C738();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1C2A1C8B8(0, &qword_1EBB911C0, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v16 = sub_1C2A9C858();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 72);
  unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C2AA7FA0;
  id v21 = *(void (**)(unint64_t, void, uint64_t))(v17 + 104);
  v21(v20 + v19, *MEMORY[0x1E4F27C78], v16);
  v21(v20 + v19 + v18, *MEMORY[0x1E4F27C00], v16);
  v21(v20 + v19 + 2 * v18, *MEMORY[0x1E4F27C20], v16);
  v21(v20 + v19 + 3 * v18, *MEMORY[0x1E4F27C30], v16);
  v21(v20 + v19 + 4 * v18, *MEMORY[0x1E4F27BF0], v16);
  uint64_t v22 = v35;
  sub_1C2A1E250(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C2A9C378();
  uint64_t v23 = v36;
  sub_1C2A9C788();
  uint64_t v24 = v39;
  uint64_t v25 = *(void (**)(char *, uint64_t))(v38 + 8);
  v25(v3, v39);
  sub_1C2A9C348();
  sub_1C2A9C788();
  swift_bridgeObjectRelease();
  v25(v3, v24);
  LOBYTE(v17) = MEMORY[0x1C8762260](v23, v22);
  uint64_t v26 = self;
  uint64_t v27 = (void *)sub_1C2A9C3B8();
  if (v17)
  {
    id v28 = objc_msgSend(v26, sel_predicateForActivitySummaryWithDateComponents_, v27);
  }
  else
  {
    uint64_t v29 = sub_1C2A9C3B8();
    id v28 = objc_msgSend(v26, sel_predicateForActivitySummariesBetweenStartDateComponents_endDateComponents_, v27, v29);

    uint64_t v27 = (void *)v29;
  }

  unint64_t v30 = *(void (**)(char *, uint64_t))(v42 + 8);
  unint64_t v31 = v22;
  uint64_t v32 = v43;
  v30(v31, v43);
  v30(v23, v32);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v41);
  return v28;
}

id ActivitySummaryQueryOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ActivitySummaryQueryOperation.init()()
{
}

void sub_1C2A1DFD4()
{
}

uint64_t sub_1C2A1E004()
{
  swift_release();

  return sub_1C2A1E7E4(v0 + qword_1EBB91020, &qword_1EBB91188, MEMORY[0x1E4FBD318]);
}

id ActivitySummaryQueryOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2A1E0BC(uint64_t a1)
{
  return sub_1C2A1E7E4(a1 + qword_1EBB91020, &qword_1EBB91188, MEMORY[0x1E4FBD318]);
}

uint64_t sub_1C2A1E148@<X0>(uint64_t a1@<X8>)
{
  swift_retain();
  sub_1C2A9C9B8();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_1C2A1E1A8(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C2A1C91C();
    uint64_t v5 = sub_1C2A9DE98();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2A1E250(uint64_t a1)
{
  uint64_t v2 = sub_1C2A9C858();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1C2A1E68C();
    uint64_t v9 = sub_1C2A9E4B8();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    unint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1C2A1E70C(&qword_1EBB90E60);
      uint64_t v16 = sub_1C2A9DC88();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1C2A1E70C(&qword_1EBB90E68);
          char v23 = sub_1C2A9DCE8();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

void sub_1C2A1E544()
{
  sub_1C2A1C8B8(319, &qword_1EBB91188, MEMORY[0x1E4FBD318], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t method lookup function for ActivitySummaryQueryOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ActivitySummaryQueryOperation);
}

uint64_t dispatch thunk of ActivitySummaryQueryOperation.__allocating_init(predicate:orderedAscending:limit:name:queryQualityOfService:healthStore:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for ActivitySummaryQueryOperation + v0 + 64))();
}

uint64_t sub_1C2A1E684()
{
  return type metadata accessor for ActivitySummaryQueryOperation();
}

void sub_1C2A1E68C()
{
  if (!qword_1EBB911B0)
  {
    sub_1C2A9C858();
    sub_1C2A1E70C(&qword_1EBB90E60);
    unint64_t v0 = sub_1C2A9E4C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB911B0);
    }
  }
}

uint64_t sub_1C2A1E70C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2A9C858();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2A1E750(uint64_t a1, uint64_t a2)
{
  sub_1C2A1C8B8(0, &qword_1EBB92520, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2A1E7E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2A1C8B8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2A1E854()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C2A1E88C(int a1, void *a2, unint64_t a3)
{
  sub_1C2A1D71C(a1, a2, a3, *(id *)(v3 + 16));
}

void sub_1C2A1E894()
{
  sub_1C2A1D920(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_1C2A1E8A0(uint64_t a1, uint64_t a2)
{
  sub_1C2A1C8B8(0, &qword_1EBB91188, MEMORY[0x1E4FBD318], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2A1E934(uint64_t a1, uint64_t a2)
{
  sub_1C2A1C8B8(0, &qword_1EBB91188, MEMORY[0x1E4FBD318], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t AFibBurdenPDFHistogramSectionProvider.__allocating_init(headerProviders:footerProviders:healthStore:logger:analysisBlock:renderableFactory:)(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  AFibBurdenPDFHistogramSectionProvider.init(headerProviders:footerProviders:healthStore:logger:analysisBlock:renderableFactory:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

char *AFibBurdenPDFHistogramSectionProvider.init(headerProviders:footerProviders:healthStore:logger:analysisBlock:renderableFactory:)(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v34 = a5;
  uint64_t v35 = a7;
  uint64_t v14 = sub_1C2A9CFE8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v32 - v20;
  *((void *)v8 + 2) = a1;
  *((void *)v8 + 3) = a2;
  id v33 = a3;
  *((void *)v8 + 4) = a3;
  uint64_t v22 = *(void (**)(char *, void *, uint64_t, __n128))(v15 + 16);
  v22(&v8[OBJC_IVAR____TtC19HealthVisualization37AFibBurdenPDFHistogramSectionProvider_logger], a4, v14, v19);
  char v23 = &v8[OBJC_IVAR____TtC19HealthVisualization37AFibBurdenPDFHistogramSectionProvider_analysisBlock];
  uint64_t v24 = v35;
  *(void *)char v23 = v34;
  *((void *)v23 + 1) = a6;
  uint64_t v34 = a6;
  sub_1C2A1ED50(v24, (uint64_t)&v36);
  ((void (*)(char *, void *, uint64_t))v22)(v21, a4, v14);
  if (v37)
  {
    sub_1C2A21840(v24, &qword_1EA31EC40, &qword_1EA31EC48, (uint64_t)&protocol descriptor for AFibBurdenPDFHistogramRenderableFactoryProxy, MEMORY[0x1E4FBB718]);
    uint64_t v25 = *(void (**)(void *, uint64_t))(v15 + 8);
    v25(a4, v14);
    v25(v21, v14);
    sub_1C2943434(&v36, (uint64_t)&v38);
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v22)(v17, v21, v14);
    uint64_t v26 = type metadata accessor for AFibBurdenPDFHistogramRenderableFactory();
    swift_allocObject();
    id v27 = v33;
    id v33 = a4;
    swift_retain();
    BOOL v28 = sub_1C2980E74(v27, (uint64_t)v17);
    uint64_t v39 = v26;
    uint64_t v40 = &protocol witness table for AFibBurdenPDFHistogramRenderableFactory;

    swift_release();
    *(void *)&long long v38 = v28;
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
    sub_1C2A21840(v35, &qword_1EA31EC40, &qword_1EA31EC48, (uint64_t)&protocol descriptor for AFibBurdenPDFHistogramRenderableFactoryProxy, MEMORY[0x1E4FBB718]);
    uint64_t v30 = *(void (**)(id, uint64_t))(v15 + 8);
    v30(v33, v14);
    v30(v21, v14);
    sub_1C2A21840((uint64_t)&v36, &qword_1EA31EC40, &qword_1EA31EC48, (uint64_t)&protocol descriptor for AFibBurdenPDFHistogramRenderableFactoryProxy, v29);
  }
  sub_1C2943434(&v38, (uint64_t)&v8[OBJC_IVAR____TtC19HealthVisualization37AFibBurdenPDFHistogramSectionProvider_renderableFactory]);
  return v8;
}

uint64_t sub_1C2A1ED50(uint64_t a1, uint64_t a2)
{
  sub_1C2A2189C(0, &qword_1EA31EC40, &qword_1EA31EC48, (uint64_t)&protocol descriptor for AFibBurdenPDFHistogramRenderableFactoryProxy, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t AFibBurdenPDFHistogramSectionProvider.pdfSection.getter(uint64_t a1)
{
  v2[41] = a1;
  v2[42] = v1;
  v2[43] = *v1;
  sub_1C2A214C4(0, (unint64_t *)&unk_1EA31EC60, MEMORY[0x1E4F66210]);
  v2[44] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for TimeBasedDistribution();
  v2[45] = v3;
  v2[46] = *(void *)(v3 - 8);
  v2[47] = swift_task_alloc();
  v2[48] = swift_task_alloc();
  sub_1C2A214C4(0, (unint64_t *)&qword_1EA31E4E0, (void (*)(uint64_t))type metadata accessor for TimeBasedDistribution);
  v2[49] = swift_task_alloc();
  v2[50] = swift_task_alloc();
  v2[51] = swift_task_alloc();
  v2[52] = swift_task_alloc();
  v2[53] = type metadata accessor for AFibBurdenDistributionAnalysis.Result();
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  uint64_t v4 = sub_1C2A9CE68();
  v2[56] = v4;
  v2[57] = *(void *)(v4 - 8);
  v2[58] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2A1F02C, 0, 0);
}

uint64_t sub_1C2A1F02C()
{
  uint64_t v22 = v0;
  uint64_t v1 = *MEMORY[0x1E4F29D10];
  uint64_t v2 = *(void *)(v0[42] + 32);
  v0[59] = v2;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B068]), sel_initWithFeatureIdentifier_healthStore_, v1, v2);
  v0[60] = v3;
  sub_1C2A21518();
  sub_1C2A9CEC8();
  uint64_t v4 = (void *)sub_1C2A9CE78();
  LODWORD(v2) = objc_msgSend(v4, sel_areAllRequirementsSatisfied);

  if (v2)
  {
    (*(void (**)(void, void))(v0[57] + 8))(v0[58], v0[56]);
    v0[61] = OBJC_IVAR____TtC19HealthVisualization37AFibBurdenPDFHistogramSectionProvider_logger;
    return MEMORY[0x1F4188298](sub_1C2A1F588, 0, 0);
  }
  else
  {
    uint64_t v5 = sub_1C2A9CFC8();
    os_log_type_t v6 = sub_1C2A9E0C8();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v9 = v0[57];
    uint64_t v8 = v0[58];
    uint64_t v10 = v0[56];
    if (v7)
    {
      uint64_t v11 = v0[43];
      uint64_t v20 = v0[58];
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      v21[0] = v13;
      *(_DWORD *)uint64_t v12 = 136446210;
      v21[2] = v11;
      swift_getMetatypeMetadata();
      uint64_t v14 = sub_1C2A9DD58();
      v0[30] = sub_1C2957168(v14, v15, v21);
      sub_1C2A9E358();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C292A000, v5, v6, "[%{public}s] Not all requirements satisfied for highlight generation, not including in PDF", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v13, -1, -1);
      MEMORY[0x1C87656F0](v12, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v20, v10);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    }
    uint64_t v16 = v0[41];
    uint64_t v17 = sub_1C2A9CA88();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_1C2A1F588()
{
  uint64_t v1 = (void *)v0[59];
  uint64_t v2 = v0[43];
  uint64_t v3 = v0[42] + v0[61];
  v0[2] = v0;
  v0[7] = v0 + 31;
  v0[3] = sub_1C2A1F644;
  uint64_t v4 = swift_continuation_init();
  sub_1C2A20B04(v4, v3, v1, v2);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C2A1F644()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 496) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_1C2A1FB8C;
  }
  else
  {
    *(void *)(v1 + 504) = *(void *)(v1 + 248);
    uint64_t v3 = sub_1C2A1F768;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C2A1F768()
{
  unint64_t v31 = v0;
  uint64_t v2 = v0[54];
  uint64_t v1 = v0[55];
  uint64_t v3 = v0[52];
  uint64_t v4 = v0[45];
  uint64_t v5 = v0[46];
  (*(void (**)(void))(v0[42]
                                 + OBJC_IVAR____TtC19HealthVisualization37AFibBurdenPDFHistogramSectionProvider_analysisBlock))(v0[63]);
  sub_1C2998CE0(v1, v3);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v0[64] = v6;
  v0[65] = (v5 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  LODWORD(v4) = v6(v3, 1, v4);
  sub_1C2A21558(v3);
  sub_1C2A215D0(v1, v2);
  uint64_t v7 = v0[54];
  if (v4 == 1)
  {
    uint64_t v8 = v0[51];
    uint64_t v9 = v0[45];
    sub_1C2998CE0(v7 + *(int *)(v0[53] + 20), v8);
    sub_1C2A21698(v7, (uint64_t (*)(void))type metadata accessor for AFibBurdenDistributionAnalysis.Result);
    int v10 = v6(v8, 1, v9);
    sub_1C2A21558(v8);
    if (v10 == 1)
    {
      uint64_t v11 = sub_1C2A9CFC8();
      os_log_type_t v12 = sub_1C2A9E0C8();
      BOOL v13 = os_log_type_enabled(v11, v12);
      uint64_t v14 = (void *)v0[63];
      unint64_t v15 = (void *)v0[60];
      uint64_t v16 = v0[55];
      if (v13)
      {
        uint64_t v17 = v0[43];
        uint64_t v29 = v0[55];
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        v30[0] = v19;
        v30[1] = v17;
        *(_DWORD *)uint64_t v18 = 136446210;
        swift_getMetatypeMetadata();
        uint64_t v20 = sub_1C2A9DD58();
        v0[40] = sub_1C2957168(v20, v21, v30);
        sub_1C2A9E358();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C292A000, v11, v12, "[%{public}s] No histograms present after analysis, omitting section", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87656F0](v19, -1, -1);
        MEMORY[0x1C87656F0](v18, -1, -1);

        uint64_t v22 = v29;
      }
      else
      {

        uint64_t v22 = v16;
      }
      sub_1C2A21698(v22, (uint64_t (*)(void))type metadata accessor for AFibBurdenDistributionAnalysis.Result);
      uint64_t v25 = v0[41];
      uint64_t v26 = sub_1C2A9CA88();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v27 = (uint64_t (*)(void))v0[1];
      return v27();
    }
  }
  else
  {
    sub_1C2A21698(v0[54], (uint64_t (*)(void))type metadata accessor for AFibBurdenDistributionAnalysis.Result);
  }
  uint64_t v23 = *(void *)(v0[42] + 16);
  uint64_t v24 = (void *)swift_task_alloc();
  v0[66] = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_1C2A1FC7C;
  return MEMORY[0x1F411EE28](v23);
}

uint64_t sub_1C2A1FB8C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2A1FC7C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 536) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C2A208D4;
  }
  else
  {
    *(void *)(v4 + 544) = a1;
    uint64_t v5 = sub_1C2A1FDA4;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C2A1FDA4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 336) + 24);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 552) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C2A1FE40;
  return MEMORY[0x1F411EE28](v1);
}

uint64_t sub_1C2A1FE40(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 560) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1C2A209EC;
  }
  else
  {
    *(void *)(v4 + 568) = a1;
    uint64_t v5 = sub_1C2A1FF7C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C2A1FF7C()
{
  uint64_t v80 = v0;
  uint64_t v2 = (long long *)(v0 + 296);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, long long *))(v0 + 512);
  uint64_t v4 = *(void *)(v0 + 400);
  uint64_t v5 = *(long long **)(v0 + 360);
  if (*(void *)(v0 + 568)) {
    uint64_t v6 = *(void *)(v0 + 568);
  }
  else {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  uint64_t v77 = (void *)MEMORY[0x1E4FBC860];
  sub_1C2998CE0(*(void *)(v0 + 440), v4);
  int v7 = v3(v4, 1, v5);
  uint64_t v8 = *(void *)(v0 + 400);
  if (v7 != 1)
  {
    sub_1C2A21634(v8, *(void *)(v0 + 384));
    if (!TimeBasedDistribution.containsEnoughInformationToBeShownToUser.getter())
    {
      uint64_t v18 = sub_1C2A9CFC8();
      os_log_type_t v19 = sub_1C2A9E0C8();
      BOOL v20 = os_log_type_enabled(v18, v19);
      uint64_t v5 = *(long long **)(v0 + 384);
      if (v20)
      {
        uint64_t v21 = *(void *)(v0 + 344);
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v73 = v6;
        uint64_t v23 = swift_slowAlloc();
        uint64_t v79 = v23;
        *(_DWORD *)uint64_t v22 = 136446210;
        uint64_t v1 = v22 + 12;
        *(void *)(v0 + 304) = v21;
        swift_getMetatypeMetadata();
        uint64_t v24 = sub_1C2A9DD58();
        *(void *)(v0 + 312) = sub_1C2957168(v24, v25, &v79);
        uint64_t v2 = (long long *)(v0 + 296);
        sub_1C2A9E358();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C292A000, v18, v19, "[%{public}s] Not including time of day histogram as it does not contain enough information", v22, 0xCu);
        swift_arrayDestroy();
        uint64_t v26 = v23;
        uint64_t v6 = v73;
        MEMORY[0x1C87656F0](v26, -1, -1);
        MEMORY[0x1C87656F0](v22, -1, -1);
      }

      uint64_t v17 = (uint64_t)v5;
      goto LABEL_12;
    }
    uint64_t v5 = (long long *)(v0 + 80);
    uint64_t v9 = *(void *)(v0 + 384);
    int v10 = (void *)(*(void *)(v0 + 336)
                   + OBJC_IVAR____TtC19HealthVisualization37AFibBurdenPDFHistogramSectionProvider_renderableFactory);
    uint64_t v11 = v10[3];
    uint64_t v12 = v10[4];
    __swift_project_boxed_opaque_existential_1(v10, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(v9, v11, v12);
    BOOL v13 = sub_1C299D7A0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v15 = v13[2];
    unint64_t v14 = v13[3];
    uint64_t v1 = (uint8_t *)(v15 + 1);
    if (v15 >= v14 >> 1) {
      goto LABEL_39;
    }
    goto LABEL_8;
  }
  sub_1C2A21558(v8);
  while (1)
  {
    id v27 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v0 + 512);
    uint64_t v28 = *(void *)(v0 + 392);
    unint64_t v15 = *(void *)(v0 + 360);
    sub_1C2998CE0(*(void *)(v0 + 440) + *(int *)(*(void *)(v0 + 424) + 20), v28);
    int v29 = v27(v28, 1, v15);
    uint64_t v30 = *(void *)(v0 + 392);
    if (v29 == 1)
    {
      sub_1C2A21558(v30);
      goto LABEL_26;
    }
    sub_1C2A21634(v30, *(void *)(v0 + 376));
    if (TimeBasedDistribution.containsEnoughInformationToBeShownToUser.getter())
    {
      uint64_t v31 = *(void *)(v0 + 376);
      uint64_t v32 = (void *)(*(void *)(v0 + 336)
                     + OBJC_IVAR____TtC19HealthVisualization37AFibBurdenPDFHistogramSectionProvider_renderableFactory);
      uint64_t v33 = v32[3];
      uint64_t v34 = v32[4];
      __swift_project_boxed_opaque_existential_1(v32, v33);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 8))(v31, v33, v34);
      uint64_t v35 = v77;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v35 = sub_1C299D7A0(0, v77[2] + 1, 1, v77);
      }
      unint64_t v37 = v35[2];
      unint64_t v36 = v35[3];
      uint64_t v5 = (long long *)(v37 + 1);
      if (v37 >= v36 >> 1) {
        uint64_t v35 = sub_1C299D7A0((void *)(v36 > 1), v37 + 1, 1, v35);
      }
      unint64_t v15 = *(void *)(v0 + 376);
      v35[2] = v5;
      sub_1C2943434((long long *)(v0 + 120), (uint64_t)&v35[5 * v37 + 4]);
      uint64_t v77 = v35;
      goto LABEL_24;
    }
    long long v38 = sub_1C2A9CFC8();
    os_log_type_t v39 = sub_1C2A9E0C8();
    BOOL v40 = os_log_type_enabled(v38, v39);
    unint64_t v15 = *(void *)(v0 + 376);
    if (!v40)
    {

LABEL_24:
      uint64_t v46 = v15;
      goto LABEL_25;
    }
    uint64_t v75 = *(void *)(v0 + 376);
    uint64_t v41 = *(void *)(v0 + 344);
    uint64_t v5 = v2;
    uint64_t v1 = (uint8_t *)swift_slowAlloc();
    uint64_t v74 = v6;
    uint64_t v42 = swift_slowAlloc();
    uint64_t v79 = v42;
    *(_DWORD *)uint64_t v1 = 136446210;
    *(void *)(v0 + 264) = v41;
    swift_getMetatypeMetadata();
    uint64_t v43 = sub_1C2A9DD58();
    unint64_t v15 = v44;
    *(void *)(v0 + 296) = sub_1C2957168(v43, v44, &v79);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C292A000, v38, v39, "[%{public}s] Not including day of week histogram as it does not contain enough information", v1, 0xCu);
    swift_arrayDestroy();
    uint64_t v45 = v42;
    uint64_t v6 = v74;
    MEMORY[0x1C87656F0](v45, -1, -1);
    MEMORY[0x1C87656F0](v1, -1, -1);

    uint64_t v46 = v75;
LABEL_25:
    sub_1C2A21698(v46, (uint64_t (*)(void))type metadata accessor for TimeBasedDistribution);
LABEL_26:
    BOOL v13 = v77;
    uint64_t v47 = v77[2];
    if (!v47) {
      break;
    }
    if (v47 != 2) {
      goto LABEL_30;
    }
    uint64_t v48 = sub_1C2A9CB18();
    uint64_t v49 = MEMORY[0x1E4F662F8];
    *(void *)(v0 + 224) = v48;
    *(void *)(v0 + 232) = v49;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 200));
    sub_1C2A9CB08();
    unint64_t v14 = v77[2];
    if (v14)
    {
      sub_1C2943434((long long *)(v0 + 200), v0 + 160);
      sub_1C2A212E4(1, 1, v0 + 160);
LABEL_30:
      id v50 = *(void **)(v0 + 504);
      uint64_t v51 = *(void **)(v0 + 480);
      uint64_t v52 = *(void *)(v0 + 440);
      uint64_t v53 = *(void *)(v0 + 352);
      uint64_t v54 = *(void *)(v0 + 328);
      sub_1C2A9CA58();
      uint64_t v55 = sub_1C2A9CA68();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v53, 0, 1, v55);
      sub_1C2A9CA78();

      sub_1C2A21698(v52, (uint64_t (*)(void))type metadata accessor for AFibBurdenDistributionAnalysis.Result);
      uint64_t v56 = sub_1C2A9CA88();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v54, 0, 1, v56);
      goto LABEL_35;
    }
    __break(1u);
LABEL_39:
    BOOL v13 = sub_1C299D7A0((void *)(v14 > 1), (int64_t)v1, 1, v13);
LABEL_8:
    uint64_t v16 = *(void *)(v0 + 384);
    v13[2] = v1;
    sub_1C2943434(v5, (uint64_t)&v13[5 * v15 + 4]);
    uint64_t v77 = v13;
    uint64_t v17 = v16;
LABEL_12:
    sub_1C2A21698(v17, (uint64_t (*)(void))type metadata accessor for TimeBasedDistribution);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v57 = sub_1C2A9CFC8();
  os_log_type_t v58 = sub_1C2A9E0C8();
  BOOL v59 = os_log_type_enabled(v57, v58);
  uint64_t v60 = *(void **)(v0 + 504);
  uint64_t v61 = *(void **)(v0 + 480);
  uint64_t v62 = *(void *)(v0 + 440);
  if (v59)
  {
    uint64_t v63 = *(void *)(v0 + 344);
    uint64_t v76 = *(void *)(v0 + 440);
    uint64_t v64 = (uint8_t *)swift_slowAlloc();
    uint64_t v65 = swift_slowAlloc();
    uint64_t v78 = v65;
    uint64_t v79 = v63;
    *(_DWORD *)uint64_t v64 = 136446210;
    swift_getMetatypeMetadata();
    uint64_t v66 = sub_1C2A9DD58();
    *(void *)(v0 + 288) = sub_1C2957168(v66, v67, &v78);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C292A000, v57, v58, "[%{public}s] Both histograms excluded, excluding entire page", v64, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87656F0](v65, -1, -1);
    MEMORY[0x1C87656F0](v64, -1, -1);

    uint64_t v68 = v76;
  }
  else
  {

    uint64_t v68 = v62;
  }
  sub_1C2A21698(v68, (uint64_t (*)(void))type metadata accessor for AFibBurdenDistributionAnalysis.Result);
  uint64_t v69 = *(void *)(v0 + 328);
  uint64_t v70 = sub_1C2A9CA88();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v69, 1, 1, v70);
LABEL_35:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v71 = *(uint64_t (**)(void))(v0 + 8);
  return v71();
}

uint64_t sub_1C2A208D4()
{
  uint64_t v1 = *(void **)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 440);

  sub_1C2A21698(v2, (uint64_t (*)(void))type metadata accessor for AFibBurdenDistributionAnalysis.Result);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1C2A209EC()
{
  uint64_t v1 = *(void **)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 440);

  sub_1C2A21698(v2, (uint64_t (*)(void))type metadata accessor for AFibBurdenDistributionAnalysis.Result);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_1C2A20B04(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v22 = a3;
  uint64_t v7 = sub_1C2A9CFE8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  int v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v12 = MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v21 - v13;
  unint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  v15((char *)&v21 - v13, a2, v7, v12);
  ((void (*)(char *, char *, uint64_t))v15)(v10, v14, v7);
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17 + v16, v10, v7);
  *(void *)(v17 + ((v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = a4;
  id v18 = objc_allocWithZone(MEMORY[0x1E4F67DA0]);
  aBlock[4] = sub_1C2A219A0;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C29B8EEC;
  aBlock[3] = &block_descriptor_11;
  os_log_type_t v19 = _Block_copy(aBlock);
  id v20 = objc_msgSend(v18, sel_initWithResultsHandler_, v19);
  _Block_release(v19);
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  objc_msgSend(v22, sel_executeQuery_, v20);
}

uint64_t sub_1C2A20D4C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3)
  {
    sub_1C29415E4(0, (unint64_t *)&qword_1EBB92210);
    swift_allocError();
    void *v8 = a3;
    id v9 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(void **)(*(void *)(a4 + 64) + 40) = a2;
    id v11 = a2;
    return MEMORY[0x1F4188200](a4);
  }
  else
  {
    uint64_t v13 = sub_1C2A9CFC8();
    os_log_type_t v14 = sub_1C2A9E0B8();
    if (os_log_type_enabled(v13, v14))
    {
      unint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v22 = v16;
      uint64_t v23 = a6;
      *(_DWORD *)unint64_t v15 = 136446210;
      swift_getMetatypeMetadata();
      uint64_t v17 = sub_1C2A9DD58();
      uint64_t v23 = sub_1C2957168(v17, v18, &v22);
      sub_1C2A9E358();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C292A000, v13, v14, "[%{public}s] No error but did not receive results as expected", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v16, -1, -1);
      MEMORY[0x1C87656F0](v15, -1, -1);
    }

    sub_1C2A21A58();
    uint64_t v19 = swift_allocError();
    *id v20 = 1;
    sub_1C29415E4(0, (unint64_t *)&qword_1EBB92210);
    swift_allocError();
    *uint64_t v21 = v19;
    return swift_continuation_throwingResumeWithError();
  }
}

uint64_t AFibBurdenPDFHistogramSectionProvider.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthVisualization37AFibBurdenPDFHistogramSectionProvider_logger;
  uint64_t v2 = sub_1C2A9CFE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC19HealthVisualization37AFibBurdenPDFHistogramSectionProvider_renderableFactory);
  return v0;
}

uint64_t AFibBurdenPDFHistogramSectionProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthVisualization37AFibBurdenPDFHistogramSectionProvider_logger;
  uint64_t v2 = sub_1C2A9CFE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC19HealthVisualization37AFibBurdenPDFHistogramSectionProvider_renderableFactory);
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A21154(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C2A211F0;
  return AFibBurdenPDFHistogramSectionProvider.pdfSection.getter(a1);
}

uint64_t sub_1C2A211F0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C2A212E4(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t v5 = sub_1C299D7A0(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *(void *)uint64_t v3 = v5;
  }
  uint64_t v14 = (uint64_t)&v5[5 * a1 + 4];
  sub_1C29415E4(0, (unint64_t *)&qword_1EA31E2E8);
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v15 = v5[2];
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    unint64_t v18 = (char *)(v14 + 40);
    uint64_t v19 = (char *)&v5[5 * a2 + 4];
    if ((char *)(v14 + 40) != v19 || v18 >= &v19[40 * v17]) {
      memmove(v18, v19, 40 * v17);
    }
    uint64_t v20 = v5[2];
    BOOL v16 = __OFADD__(v20, v9);
    uint64_t v21 = v20 + v9;
    if (!v16)
    {
      uint64_t v5[2] = v21;
LABEL_20:
      sub_1C2981338(a3, v14);
      return sub_1C2A21840(a3, &qword_1EA31EC80, (unint64_t *)&qword_1EA31E2E8, MEMORY[0x1E4F662E0], MEMORY[0x1E4FBBB08]);
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1C2A9E6A8();
  __break(1u);
  return result;
}

void sub_1C2A214C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2A9E328();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C2A21518()
{
  unint64_t result = qword_1EBB8F888;
  if (!qword_1EBB8F888)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB8F888);
  }
  return result;
}

uint64_t sub_1C2A21558(uint64_t a1)
{
  sub_1C2A214C4(0, (unint64_t *)&qword_1EA31E4E0, (void (*)(uint64_t))type metadata accessor for TimeBasedDistribution);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2A215D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFibBurdenDistributionAnalysis.Result();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2A21634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimeBasedDistribution();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2A21698(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2A216F8()
{
  return type metadata accessor for AFibBurdenPDFHistogramSectionProvider();
}

uint64_t type metadata accessor for AFibBurdenPDFHistogramSectionProvider()
{
  uint64_t result = qword_1EA31EC70;
  if (!qword_1EA31EC70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2A2174C()
{
  uint64_t result = sub_1C2A9CFE8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AFibBurdenPDFHistogramSectionProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AFibBurdenPDFHistogramSectionProvider);
}

uint64_t dispatch thunk of AFibBurdenPDFHistogramSectionProvider.__allocating_init(headerProviders:footerProviders:healthStore:logger:analysisBlock:renderableFactory:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1C2A21840(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_1C2A2189C(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_1C2A2189C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C29415E4(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2A21904()
{
  uint64_t v1 = sub_1C2A9CFE8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1C2A219A0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v7 = *(void *)(sub_1C2A9CFE8() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C2A20D4C(a1, a2, a3, v9, v3 + v8, v10);
}

unint64_t sub_1C2A21A58()
{
  unint64_t result = qword_1EA31EC88;
  if (!qword_1EA31EC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EC88);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AFibBurdenPDFHistogramSectionProvider.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2A21B78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFHistogramSectionProvider.Errors()
{
  return &type metadata for AFibBurdenPDFHistogramSectionProvider.Errors;
}

unint64_t sub_1C2A21BB4()
{
  unint64_t result = qword_1EA31EC90;
  if (!qword_1EA31EC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EC90);
  }
  return result;
}

uint64_t DayOfWeekDistributionChartView.init(distribution:model:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C297013C(a1, a3, (uint64_t (*)(void))type metadata accessor for TimeBasedDistribution);
  uint64_t v6 = sub_1C2982348(a1, a2);
  sub_1C2A21E3C(a1, (uint64_t (*)(void))type metadata accessor for TimeBasedDistribution);
  uint64_t v7 = type metadata accessor for DayOfWeekDistributionChartView();
  *(void *)(a3 + *(int *)(v7 + 20)) = v6;
  uint64_t v8 = a3 + *(int *)(v7 + 24);
  return sub_1C29700D8((uint64_t)a2, v8);
}

uint64_t type metadata accessor for DayOfWeekDistributionChartView()
{
  uint64_t result = qword_1EA31ECA0;
  if (!qword_1EA31ECA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DayOfWeekDistributionChartView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AFibBurdenDayOfWeekChart();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t)&v7[*(int *)(v5 + 36)];
  sub_1C297013C(v2, v8, (uint64_t (*)(void))type metadata accessor for TimeBasedDistribution);
  uint64_t v9 = v2 + *(int *)(type metadata accessor for DayOfWeekDistributionChartView() + 24);
  uint64_t v10 = (unsigned __int8 *)&v7[*(int *)(v5 + 40)];
  sub_1C297013C(v9, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TimeBasedDistributionChartModel);
  uint64_t v11 = v9 + *(int *)(type metadata accessor for TimeBasedDistributionChartModel() + 24);
  uint64_t v12 = *(void *)(v11 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 72));
  *(void *)uint64_t v7 = 0;
  v7[8] = 1;
  *((void *)v7 + 2) = v12;
  *((_WORD *)v7 + 12) = 0;
  sub_1C29EEED0(v8, v10, 0, a1);
  return sub_1C2A21E3C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AFibBurdenDayOfWeekChart);
}

uint64_t sub_1C2A21E3C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2A21E9C@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C297013C(a1, a4, (uint64_t (*)(void))type metadata accessor for TimeBasedDistribution);
  uint64_t v8 = sub_1C2982348(a1, a2);
  sub_1C2A21E3C(a1, (uint64_t (*)(void))type metadata accessor for TimeBasedDistribution);
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)(a4 + *(int *)(a3 + 20)) = v8;
  return sub_1C29700D8((uint64_t)a2, a4 + v9);
}

uint64_t sub_1C2A21F40(uint64_t a1)
{
  uint64_t result = sub_1C2A23EA0(&qword_1EA31EC98, (void (*)(uint64_t))type metadata accessor for DayOfWeekDistributionChartView);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C2A21F98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C2A21FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AFibBurdenDayOfWeekChart();
  uint64_t v6 = v5 - 8;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)&v8[*(int *)(v6 + 36)];
  sub_1C297013C(v2, v9, (uint64_t (*)(void))type metadata accessor for TimeBasedDistribution);
  uint64_t v10 = v2 + *(int *)(a1 + 24);
  uint64_t v11 = (unsigned __int8 *)&v8[*(int *)(v6 + 40)];
  sub_1C297013C(v10, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TimeBasedDistributionChartModel);
  uint64_t v12 = v10 + *(int *)(type metadata accessor for TimeBasedDistributionChartModel() + 24);
  uint64_t v13 = *(void *)(v12 + *(int *)(type metadata accessor for TimeBasedDistributionChartDesign() + 72));
  *(void *)uint64_t v8 = 0;
  unsigned char v8[8] = 1;
  *((void *)v8 + 2) = v13;
  *((_WORD *)v8 + 12) = 0;
  sub_1C29EEED0(v9, v11, 0, a2);
  return sub_1C2A21E3C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AFibBurdenDayOfWeekChart);
}

void *initializeBufferWithCopyOfBuffer for DayOfWeekDistributionChartView(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    uint64_t v28 = v27 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2A9C858();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for TimeBasedDistribution();
    *(void *)((char *)a1 + *(int *)(v8 + 20)) = *(void *)((char *)a2 + *(int *)(v8 + 20));
    uint64_t v9 = *(int *)(v8 + 24);
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = *(int *)(a3 + 24);
    *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v53 = a1;
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    *uint64_t v14 = *((unsigned char *)a2 + v13);
    uint64_t v16 = (uint64_t)a1 + v13 + 8;
    long long v17 = *((_OWORD *)v15 + 2);
    *((_OWORD *)v14 + 2) = v17;
    uint64_t v18 = v17;
    uint64_t v19 = **(void (***)(uint64_t, char *, uint64_t))(v17 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(v16, v15 + 8, v18);
    id v50 = (int *)type metadata accessor for TimeBasedDistributionChartModel();
    uint64_t v51 = v15;
    uint64_t v20 = v50[6];
    uint64_t v52 = v14;
    uint64_t v21 = &v14[v20];
    uint64_t v22 = &v15[v20];
    uint64_t v23 = sub_1C2A9D2E8();
    uint64_t v24 = *(void *)(v23 - 8);
    unint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    if (v25(v22, 1, v23))
    {
      sub_1C2A23EE8(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    int v29 = (int *)type metadata accessor for TimeBasedDistributionChartDesign();
    uint64_t v30 = v29[5];
    uint64_t v31 = &v21[v30];
    uint64_t v32 = &v22[v30];
    if (v25(&v22[v30], 1, v23))
    {
      sub_1C2A23EE8(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v31, v32, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v31, 0, 1, v23);
    }
    *(void *)&v21[v29[6]] = *(void *)&v22[v29[6]];
    *(void *)&v21[v29[7]] = *(void *)&v22[v29[7]];
    *(void *)&v21[v29[8]] = *(void *)&v22[v29[8]];
    *(void *)&v21[v29[9]] = *(void *)&v22[v29[9]];
    uint64_t v34 = v29[10];
    uint64_t v48 = &v22[v34];
    uint64_t v49 = &v21[v34];
    uint64_t v35 = sub_1C2A9D598();
    unint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v36(v49, v48, v35);
    *(void *)&v21[v29[11]] = *(void *)&v22[v29[11]];
    *(void *)&v21[v29[12]] = *(void *)&v22[v29[12]];
    *(void *)&v21[v29[13]] = *(void *)&v22[v29[13]];
    *(void *)&v21[v29[14]] = *(void *)&v22[v29[14]];
    *(void *)&v21[v29[15]] = *(void *)&v22[v29[15]];
    *(void *)&v21[v29[16]] = *(void *)&v22[v29[16]];
    *(void *)&v21[v29[17]] = *(void *)&v22[v29[17]];
    *(void *)&v21[v29[18]] = *(void *)&v22[v29[18]];
    *(void *)&v21[v29[19]] = *(void *)&v22[v29[19]];
    *(void *)&v21[v29[20]] = *(void *)&v22[v29[20]];
    *(void *)&v21[v29[21]] = *(void *)&v22[v29[21]];
    *(void *)&v21[v29[22]] = *(void *)&v22[v29[22]];
    *(void *)&v21[v29[23]] = *(void *)&v22[v29[23]];
    *(void *)&v21[v29[24]] = *(void *)&v22[v29[24]];
    v21[v29[25]] = v22[v29[25]];
    uint64_t v37 = v50[7];
    long long v38 = &v52[v37];
    os_log_type_t v39 = &v51[v37];
    long long v40 = *(_OWORD *)&v51[v37 + 24];
    *(_OWORD *)&v52[v37 + 24] = v40;
    uint64_t v41 = v40;
    uint64_t v42 = **(void (***)(char *, char *, uint64_t))(v40 - 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42(v38, v39, v41);
    uint64_t v43 = v50[8];
    unint64_t v44 = &v52[v43];
    uint64_t v45 = &v51[v43];
    uint64_t v46 = sub_1C2A9CFE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
    return v53;
  }
  return (void *)v28;
}

uint64_t initializeWithCopy for DayOfWeekDistributionChartView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for TimeBasedDistribution();
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v50 = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(unsigned char *)uint64_t v13 = *(unsigned char *)(a2 + v12);
  uint64_t v15 = a1 + v12 + 8;
  long long v16 = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 32) = v16;
  uint64_t v17 = v16;
  uint64_t v18 = **(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(v15, v14 + 8, v17);
  uint64_t v47 = (int *)type metadata accessor for TimeBasedDistributionChartModel();
  uint64_t v48 = v14;
  uint64_t v19 = v47[6];
  uint64_t v49 = v13;
  uint64_t v20 = (char *)(v13 + v19);
  uint64_t v21 = (char *)(v14 + v19);
  uint64_t v22 = sub_1C2A9D2E8();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v24(v21, 1, v22))
  {
    sub_1C2A23EE8(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
    memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v26 = (int *)type metadata accessor for TimeBasedDistributionChartDesign();
  uint64_t v27 = v26[5];
  uint64_t v28 = &v20[v27];
  int v29 = &v21[v27];
  if (v24(&v21[v27], 1, v22))
  {
    sub_1C2A23EE8(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v28, v29, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v28, 0, 1, v22);
  }
  *(void *)&v20[v26[6]] = *(void *)&v21[v26[6]];
  *(void *)&v20[v26[7]] = *(void *)&v21[v26[7]];
  *(void *)&v20[v26[8]] = *(void *)&v21[v26[8]];
  *(void *)&v20[v26[9]] = *(void *)&v21[v26[9]];
  uint64_t v31 = v26[10];
  uint64_t v45 = &v21[v31];
  uint64_t v46 = &v20[v31];
  uint64_t v32 = sub_1C2A9D598();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v33(v46, v45, v32);
  *(void *)&v20[v26[11]] = *(void *)&v21[v26[11]];
  *(void *)&v20[v26[12]] = *(void *)&v21[v26[12]];
  *(void *)&v20[v26[13]] = *(void *)&v21[v26[13]];
  *(void *)&v20[v26[14]] = *(void *)&v21[v26[14]];
  *(void *)&v20[v26[15]] = *(void *)&v21[v26[15]];
  *(void *)&v20[v26[16]] = *(void *)&v21[v26[16]];
  *(void *)&v20[v26[17]] = *(void *)&v21[v26[17]];
  *(void *)&v20[v26[18]] = *(void *)&v21[v26[18]];
  *(void *)&v20[v26[19]] = *(void *)&v21[v26[19]];
  *(void *)&v20[v26[20]] = *(void *)&v21[v26[20]];
  *(void *)&v20[v26[21]] = *(void *)&v21[v26[21]];
  *(void *)&v20[v26[22]] = *(void *)&v21[v26[22]];
  *(void *)&v20[v26[23]] = *(void *)&v21[v26[23]];
  *(void *)&v20[v26[24]] = *(void *)&v21[v26[24]];
  v20[v26[25]] = v21[v26[25]];
  uint64_t v34 = v47[7];
  uint64_t v35 = v49 + v34;
  uint64_t v36 = v48 + v34;
  long long v37 = *(_OWORD *)(v48 + v34 + 24);
  *(_OWORD *)(v49 + v34 + 24) = v37;
  uint64_t v38 = v37;
  os_log_type_t v39 = **(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v39(v35, v36, v38);
  uint64_t v40 = v47[8];
  uint64_t v41 = v49 + v40;
  uint64_t v42 = v48 + v40;
  uint64_t v43 = sub_1C2A9CFE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  return v50;
}

uint64_t assignWithCopy for DayOfWeekDistributionChartView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for TimeBasedDistribution();
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v42 = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v12 + 8), (uint64_t *)(v13 + 8));
  os_log_type_t v39 = (int *)type metadata accessor for TimeBasedDistributionChartModel();
  uint64_t v40 = v13;
  uint64_t v14 = v39[6];
  uint64_t v41 = v12;
  uint64_t v15 = (char *)(v12 + v14);
  long long v16 = (char *)(v13 + v14);
  uint64_t v17 = sub_1C2A9D2E8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    sub_1C2A23EE8(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v15, v16, v17);
LABEL_7:
  uint64_t v23 = (int *)type metadata accessor for TimeBasedDistributionChartDesign();
  uint64_t v24 = v23[5];
  uint64_t v25 = &v15[v24];
  uint64_t v26 = &v16[v24];
  int v27 = v19(&v15[v24], 1, v17);
  int v28 = v19(v26, 1, v17);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v25, v26, v17);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v25, v17);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    sub_1C2A23EE8(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v25, v26, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v25, 0, 1, v17);
LABEL_13:
  *(void *)&v15[v23[6]] = *(void *)&v16[v23[6]];
  swift_retain();
  swift_release();
  *(void *)&v15[v23[7]] = *(void *)&v16[v23[7]];
  swift_retain();
  swift_release();
  *(void *)&v15[v23[8]] = *(void *)&v16[v23[8]];
  swift_retain();
  swift_release();
  *(void *)&v15[v23[9]] = *(void *)&v16[v23[9]];
  swift_retain();
  swift_release();
  uint64_t v30 = v23[10];
  uint64_t v31 = &v15[v30];
  uint64_t v32 = &v16[v30];
  uint64_t v33 = sub_1C2A9D598();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
  *(void *)&v15[v23[11]] = *(void *)&v16[v23[11]];
  swift_retain();
  swift_release();
  *(void *)&v15[v23[12]] = *(void *)&v16[v23[12]];
  swift_retain();
  swift_release();
  *(void *)&v15[v23[13]] = *(void *)&v16[v23[13]];
  swift_retain();
  swift_release();
  *(void *)&v15[v23[14]] = *(void *)&v16[v23[14]];
  swift_retain();
  swift_release();
  *(void *)&v15[v23[15]] = *(void *)&v16[v23[15]];
  swift_retain();
  swift_release();
  *(void *)&v15[v23[16]] = *(void *)&v16[v23[16]];
  swift_retain();
  swift_release();
  *(void *)&v15[v23[17]] = *(void *)&v16[v23[17]];
  *(void *)&v15[v23[18]] = *(void *)&v16[v23[18]];
  *(void *)&v15[v23[19]] = *(void *)&v16[v23[19]];
  *(void *)&v15[v23[20]] = *(void *)&v16[v23[20]];
  *(void *)&v15[v23[21]] = *(void *)&v16[v23[21]];
  *(void *)&v15[v23[22]] = *(void *)&v16[v23[22]];
  *(void *)&v15[v23[23]] = *(void *)&v16[v23[23]];
  *(void *)&v15[v23[24]] = *(void *)&v16[v23[24]];
  v15[v23[25]] = v16[v23[25]];
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v41 + v39[7]), (uint64_t *)(v13 + v39[7]));
  uint64_t v34 = v39[8];
  uint64_t v35 = v41 + v34;
  uint64_t v36 = v40 + v34;
  uint64_t v37 = sub_1C2A9CFE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  return v42;
}

uint64_t initializeWithTake for DayOfWeekDistributionChartView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for TimeBasedDistribution();
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  *(_OWORD *)(a1 + *(int *)(v7 + 24)) = *(_OWORD *)(a2 + *(int *)(v7 + 24));
  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v38 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)(a2 + v8);
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(a2 + v8 + 8);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(a2 + v8 + 24);
  *(void *)(v9 + 40) = *(void *)(a2 + v8 + 40);
  uint64_t v36 = (int *)type metadata accessor for TimeBasedDistributionChartModel();
  uint64_t v37 = v9;
  uint64_t v11 = v36[6];
  uint64_t v12 = (char *)(v9 + v11);
  uint64_t v13 = (char *)(v10 + v11);
  uint64_t v14 = sub_1C2A9D2E8();
  uint64_t v15 = *(void *)(v14 - 8);
  long long v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    sub_1C2A23EE8(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = (int *)type metadata accessor for TimeBasedDistributionChartDesign();
  uint64_t v19 = v18[5];
  int v20 = &v12[v19];
  int v21 = &v13[v19];
  if (v16(&v13[v19], 1, v14))
  {
    sub_1C2A23EE8(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v21, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v14);
  }
  *(void *)&v12[v18[6]] = *(void *)&v13[v18[6]];
  *(void *)&v12[v18[7]] = *(void *)&v13[v18[7]];
  *(void *)&v12[v18[8]] = *(void *)&v13[v18[8]];
  *(void *)&v12[v18[9]] = *(void *)&v13[v18[9]];
  uint64_t v23 = v18[10];
  uint64_t v24 = &v12[v23];
  uint64_t v25 = &v13[v23];
  uint64_t v26 = sub_1C2A9D598();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  *(void *)&v12[v18[11]] = *(void *)&v13[v18[11]];
  *(void *)&v12[v18[12]] = *(void *)&v13[v18[12]];
  *(void *)&v12[v18[13]] = *(void *)&v13[v18[13]];
  *(void *)&v12[v18[14]] = *(void *)&v13[v18[14]];
  *(void *)&v12[v18[15]] = *(void *)&v13[v18[15]];
  *(void *)&v12[v18[16]] = *(void *)&v13[v18[16]];
  *(void *)&v12[v18[17]] = *(void *)&v13[v18[17]];
  *(void *)&v12[v18[18]] = *(void *)&v13[v18[18]];
  *(void *)&v12[v18[19]] = *(void *)&v13[v18[19]];
  *(void *)&v12[v18[20]] = *(void *)&v13[v18[20]];
  *(void *)&v12[v18[21]] = *(void *)&v13[v18[21]];
  *(void *)&v12[v18[22]] = *(void *)&v13[v18[22]];
  *(void *)&v12[v18[23]] = *(void *)&v13[v18[23]];
  *(void *)&v12[v18[24]] = *(void *)&v13[v18[24]];
  v12[v18[25]] = v13[v18[25]];
  uint64_t v27 = v36[7];
  uint64_t v28 = v37 + v27;
  uint64_t v29 = v10 + v27;
  *(void *)(v28 + 32) = *(void *)(v29 + 32);
  long long v30 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v30;
  uint64_t v31 = v36[8];
  uint64_t v32 = v37 + v31;
  uint64_t v33 = v10 + v31;
  uint64_t v34 = sub_1C2A9CFE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  return v38;
}

uint64_t assignWithTake for DayOfWeekDistributionChartView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for TimeBasedDistribution();
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v48 = a1;
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)(a2 + v13);
  __swift_destroy_boxed_opaque_existential_1(v14 + 8);
  *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
  *(_OWORD *)(v14 + 24) = *(_OWORD *)(v15 + 24);
  *(void *)(v14 + 40) = *(void *)(v15 + 40);
  uint64_t v45 = (int *)type metadata accessor for TimeBasedDistributionChartModel();
  uint64_t v46 = v15;
  uint64_t v16 = v45[6];
  uint64_t v47 = v14;
  uint64_t v17 = (char *)(v14 + v16);
  uint64_t v18 = (char *)(v15 + v16);
  uint64_t v19 = sub_1C2A9D2E8();
  uint64_t v20 = *(void *)(v19 - 8);
  int v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_6:
    sub_1C2A23EE8(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_7:
  uint64_t v25 = (int *)type metadata accessor for TimeBasedDistributionChartDesign();
  uint64_t v26 = v25[5];
  uint64_t v27 = &v17[v26];
  uint64_t v28 = &v18[v26];
  int v29 = v21(&v17[v26], 1, v19);
  int v30 = v21(v28, 1, v19);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v27, v28, v19);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    sub_1C2A23EE8(0, (unint64_t *)&qword_1EA31DFF0, MEMORY[0x1E4F19478], MEMORY[0x1E4FBB718]);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v27, v28, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v27, 0, 1, v19);
LABEL_13:
  *(void *)&v17[v25[6]] = *(void *)&v18[v25[6]];
  swift_release();
  *(void *)&v17[v25[7]] = *(void *)&v18[v25[7]];
  swift_release();
  *(void *)&v17[v25[8]] = *(void *)&v18[v25[8]];
  swift_release();
  *(void *)&v17[v25[9]] = *(void *)&v18[v25[9]];
  swift_release();
  uint64_t v32 = v25[10];
  uint64_t v33 = &v17[v32];
  uint64_t v34 = &v18[v32];
  uint64_t v35 = sub_1C2A9D598();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  *(void *)&v17[v25[11]] = *(void *)&v18[v25[11]];
  swift_release();
  *(void *)&v17[v25[12]] = *(void *)&v18[v25[12]];
  swift_release();
  *(void *)&v17[v25[13]] = *(void *)&v18[v25[13]];
  swift_release();
  *(void *)&v17[v25[14]] = *(void *)&v18[v25[14]];
  swift_release();
  *(void *)&v17[v25[15]] = *(void *)&v18[v25[15]];
  swift_release();
  *(void *)&v17[v25[16]] = *(void *)&v18[v25[16]];
  swift_release();
  *(void *)&v17[v25[17]] = *(void *)&v18[v25[17]];
  *(void *)&v17[v25[18]] = *(void *)&v18[v25[18]];
  *(void *)&v17[v25[19]] = *(void *)&v18[v25[19]];
  *(void *)&v17[v25[20]] = *(void *)&v18[v25[20]];
  *(void *)&v17[v25[21]] = *(void *)&v18[v25[21]];
  *(void *)&v17[v25[22]] = *(void *)&v18[v25[22]];
  *(void *)&v17[v25[23]] = *(void *)&v18[v25[23]];
  *(void *)&v17[v25[24]] = *(void *)&v18[v25[24]];
  v17[v25[25]] = v18[v25[25]];
  uint64_t v36 = v45[7];
  uint64_t v37 = v47 + v36;
  uint64_t v38 = v15 + v36;
  __swift_destroy_boxed_opaque_existential_1(v47 + v36);
  long long v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  *(void *)(v37 + 32) = *(void *)(v38 + 32);
  uint64_t v40 = v45[8];
  uint64_t v41 = v47 + v40;
  uint64_t v42 = v46 + v40;
  uint64_t v43 = sub_1C2A9CFE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 40))(v41, v42, v43);
  return v48;
}

uint64_t getEnumTagSinglePayload for DayOfWeekDistributionChartView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2A23C30);
}

uint64_t sub_1C2A23C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TimeBasedDistribution();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for TimeBasedDistributionChartModel();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for DayOfWeekDistributionChartView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2A23D70);
}

uint64_t sub_1C2A23D70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TimeBasedDistribution();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for TimeBasedDistributionChartModel();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1C2A23EA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2A23EE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t TimeBasedDistribution.Bucket.init(componentRange:value:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *a3;
  char v5 = *((unsigned char *)a3 + 8);
  char v6 = *((unsigned char *)a3 + 9);
  uint64_t v7 = a3[2];
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = v4;
  *(unsigned char *)(a4 + 24) = v5;
  *(unsigned char *)(a4 + 25) = v6;
  *(void *)(a4 + 32) = v7;
  return result;
}

uint64_t TimeBasedDistribution.init(component:buckets:unitString:minimumComponentInterval:maximumComponentInterval:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v13 = sub_1C2A9CFE8();
  uint64_t v30 = *(void *)(v13 - 8);
  uint64_t v31 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TimeBasedDistribution();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C2A25BC4(a2, a5, a6))
  {
    uint64_t v20 = sub_1C2A9C858();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19, a1, v20);
    *(void *)&v19[*(int *)(v16 + 20)] = a2;
    int v21 = &v19[*(int *)(v16 + 24)];
    *(void *)int v21 = v29;
    *((void *)v21 + 1) = a4;
    sub_1C2A21634((uint64_t)v19, a7);
    uint64_t v22 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C2A9CF68();
    int v23 = sub_1C2A9CFC8();
    os_log_type_t v24 = sub_1C2A9E0B8();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_1C292A000, v23, v24, "[TimeBasedDistribution] Attempted to create invalid distribution", v25, 2u);
      MEMORY[0x1C87656F0](v25, -1, -1);
    }

    uint64_t v26 = sub_1C2A9C858();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(a1, v26);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v31);
    uint64_t v22 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a7, v22, 1, v16);
}

HealthVisualization::TimeBasedDistribution::DistributionValue __swiftcall TimeBasedDistribution.DistributionValue.init(value:isMax:customTags:)(Swift::Double_optional value, Swift::Bool isMax, Swift::OpaquePointer customTags)
{
  *(void *)uint64_t v4 = *(void *)&value.is_nil;
  *(unsigned char *)(v4 + 8) = isMax;
  *(unsigned char *)(v4 + 9) = customTags._rawValue;
  *(void *)(v4 + 16) = v3;
  result.value.value = value.value;
  result.value.is_nil = value.is_nil;
  LOBYTE(result.customTags._rawValue) = isMax;
  return result;
}

BOOL TimeBasedDistribution.containsEnoughInformationToBeShownToUser.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TimeBasedDistribution() + 20));
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)(v1 + 64);
    uint64_t v4 = MEMORY[0x1E4FBC860];
    do
    {
      if ((*(unsigned char *)(v3 - 1) & 1) == 0)
      {
        long long v13 = *((_OWORD *)v3 - 2);
        uint64_t v8 = *(v3 - 2);
        char v9 = *((unsigned char *)v3 - 7);
        uint64_t v10 = *v3;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C29789AC(0, *(void *)(v4 + 16) + 1, 1);
        }
        unint64_t v6 = *(void *)(v4 + 16);
        unint64_t v5 = *(void *)(v4 + 24);
        if (v6 >= v5 >> 1) {
          sub_1C29789AC(v5 > 1, v6 + 1, 1);
        }
        *(void *)(v4 + 16) = v6 + 1;
        uint64_t v7 = v4 + 40 * v6;
        *(_OWORD *)(v7 + 32) = v13;
        *(void *)(v7 + 48) = v8;
        *(unsigned char *)(v7 + 56) = 0;
        *(unsigned char *)(v7 + 57) = v9;
        *(void *)(v7 + 64) = v10;
      }
      v3 += 5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  unint64_t v11 = *(void *)(v4 + 16);
  swift_release();
  return v11 > 2;
}

uint64_t sub_1C2A24398(uint64_t a1)
{
  return sub_1C2A243F4(a1, qword_1EA31ECB0, MEMORY[0x1E4F27C10]);
}

uint64_t static TimeBasedDistribution.Constants.TimeOfDay.calendarComponent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A244A0(&qword_1EA31DCA8, (uint64_t)qword_1EA31ECB0, a1);
}

uint64_t static TimeBasedDistribution.Constants.TimeOfDay.minimumComponentInterval.getter()
{
  return 0;
}

uint64_t static TimeBasedDistribution.Constants.TimeOfDay.maximumComponentInterval.getter()
{
  return 24;
}

uint64_t sub_1C2A243E0(uint64_t a1)
{
  return sub_1C2A243F4(a1, qword_1EA31ECC8, MEMORY[0x1E4F27C68]);
}

uint64_t sub_1C2A243F4(uint64_t a1, uint64_t *a2, unsigned int *a3)
{
  uint64_t v5 = sub_1C2A9C858();
  __swift_allocate_value_buffer(v5, a2);
  uint64_t v6 = __swift_project_value_buffer(v5, (uint64_t)a2);
  uint64_t v7 = *a3;
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  return v8(v6, v7, v5);
}

uint64_t static TimeBasedDistribution.Constants.DayOfWeek.calendarComponent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A244A0(&qword_1EA31DCB0, (uint64_t)qword_1EA31ECC8, a1);
}

uint64_t sub_1C2A244A0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C2A9C858();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t static TimeBasedDistribution.Constants.DayOfWeek.minimumComponentInterval.getter()
{
  return 0;
}

uint64_t static TimeBasedDistribution.Constants.DayOfWeek.maximumComponentInterval.getter()
{
  return 7;
}

uint64_t TimeBasedDistribution.DistributionValue.value.getter()
{
  return *(void *)v0;
}

uint64_t TimeBasedDistribution.DistributionValue.isMax.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t TimeBasedDistribution.DistributionValue.customTags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2A24568()
{
  uint64_t v1 = 0x78614D7369;
  if (*v0 != 1) {
    uint64_t v1 = 0x61546D6F74737563;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t sub_1C2A245C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A26F7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A245E8(uint64_t a1)
{
  unint64_t v2 = sub_1C2A25D38();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A24624(uint64_t a1)
{
  unint64_t v2 = sub_1C2A25D38();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TimeBasedDistribution.DistributionValue.encode(to:)(void *a1)
{
  sub_1C2A26000(0, &qword_1EA31ECE0, (uint64_t (*)(void))sub_1C2A25D38, (uint64_t)&type metadata for TimeBasedDistribution.DistributionValue.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v11 - v6;
  int v15 = *(unsigned __int8 *)(v1 + 9);
  uint64_t v12 = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A25D38();
  sub_1C2A9EA18();
  char v18 = 0;
  uint64_t v8 = v13;
  sub_1C2A9E7F8();
  if (!v8)
  {
    uint64_t v9 = v12;
    char v17 = 1;
    sub_1C2A9E838();
    uint64_t v14 = v9;
    char v16 = 2;
    sub_1C2967B94(0, (unint64_t *)&qword_1EBB920B0);
    sub_1C2A25D8C(&qword_1EBB8F7F8);
    sub_1C2A9E868();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t TimeBasedDistribution.DistributionValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v16[0] = a2;
  sub_1C2A26000(0, &qword_1EA31ECF0, (uint64_t (*)(void))sub_1C2A25D38, (uint64_t)&type metadata for TimeBasedDistribution.DistributionValue.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v16 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A25D38();
  sub_1C2A9EA08();
  if (!v2)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v16[0];
    char v20 = 0;
    uint64_t v11 = sub_1C2A9E738();
    char v13 = v12;
    char v19 = 1;
    int v17 = sub_1C2A9E778();
    sub_1C2967B94(0, (unint64_t *)&qword_1EBB920B0);
    char v18 = 2;
    sub_1C2A25D8C(&qword_1EBB920B8);
    sub_1C2A9E7A8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    uint64_t v15 = v16[1];
    *(void *)uint64_t v10 = v11;
    *(unsigned char *)(v10 + 8) = v13 & 1;
    *(unsigned char *)(v10 + 9) = v17 & 1;
    *(void *)(v10 + 16) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C2A24B00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TimeBasedDistribution.DistributionValue.init(from:)(a1, a2);
}

uint64_t sub_1C2A24B18(void *a1)
{
  return TimeBasedDistribution.DistributionValue.encode(to:)(a1);
}

uint64_t TimeBasedDistribution.Bucket.componentRange.getter()
{
  return *(void *)v0;
}

uint64_t TimeBasedDistribution.Bucket.value.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 24);
  char v3 = *(unsigned char *)(v1 + 25);
  uint64_t v4 = *(void *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 16);
  *(unsigned char *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 9) = v3;
  *(void *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2A24B64()
{
  if (*v0) {
    return 0x65756C6176;
  }
  else {
    return 0x6E656E6F706D6F63;
  }
}

uint64_t sub_1C2A24BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A270D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A24BD0(uint64_t a1)
{
  unint64_t v2 = sub_1C2A25DFC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A24C0C(uint64_t a1)
{
  unint64_t v2 = sub_1C2A25DFC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TimeBasedDistribution.Bucket.encode(to:)(void *a1)
{
  sub_1C2A26000(0, &qword_1EA31ECF8, (uint64_t (*)(void))sub_1C2A25DFC, (uint64_t)&type metadata for TimeBasedDistribution.Bucket.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v12 - v6;
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v15 = v1[2];
  int v20 = *((unsigned __int8 *)v1 + 24);
  int v14 = *((unsigned __int8 *)v1 + 25);
  uint64_t v13 = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A25DFC();
  sub_1C2A9EA18();
  uint64_t v17 = v8;
  uint64_t v18 = v9;
  char v21 = 0;
  sub_1C297A9F8();
  sub_1C2A25E50(&qword_1EA31ED08);
  uint64_t v10 = v16;
  sub_1C2A9E868();
  if (!v10)
  {
    uint64_t v17 = v15;
    LOBYTE(v18) = v20;
    BYTE1(v18) = v14;
    uint64_t v19 = v13;
    char v21 = 1;
    sub_1C2A25EB0();
    sub_1C2A9E868();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t TimeBasedDistribution.Bucket.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C2A26000(0, &qword_1EA31ED18, (uint64_t (*)(void))sub_1C2A25DFC, (uint64_t)&type metadata for TimeBasedDistribution.Bucket.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A25DFC();
  sub_1C2A9EA08();
  if (!v2)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v18;
    sub_1C297A9F8();
    char v22 = 0;
    sub_1C2A25E50(&qword_1EA31ED20);
    sub_1C2A9E7A8();
    uint64_t v11 = v19;
    uint64_t v12 = v20;
    char v22 = 1;
    sub_1C2A25F04();
    sub_1C2A9E7A8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    uint64_t v14 = v19;
    char v15 = v20;
    char v16 = BYTE1(v20);
    uint64_t v17 = v21;
    *(void *)uint64_t v10 = v11;
    *(void *)(v10 + 8) = v12;
    *(void *)(v10 + 16) = v14;
    *(unsigned char *)(v10 + 24) = v15;
    *(unsigned char *)(v10 + 25) = v16;
    *(void *)(v10 + 32) = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C2A250C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TimeBasedDistribution.Bucket.init(from:)(a1, a2);
}

uint64_t sub_1C2A250DC(void *a1)
{
  return TimeBasedDistribution.Bucket.encode(to:)(a1);
}

uint64_t TimeBasedDistribution.component.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C2A9C858();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t TimeBasedDistribution.buckets.getter()
{
  type metadata accessor for TimeBasedDistribution();
  return swift_bridgeObjectRetain();
}

uint64_t TimeBasedDistribution.unitString.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TimeBasedDistribution() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C2A251D8()
{
  uint64_t v1 = 0x7374656B637562;
  if (*v0 != 1) {
    uint64_t v1 = 0x6972745374696E75;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E656E6F706D6F63;
  }
}

uint64_t sub_1C2A2523C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A271E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A25264(uint64_t a1)
{
  unint64_t v2 = sub_1C2A25F58();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A252A0(uint64_t a1)
{
  unint64_t v2 = sub_1C2A25F58();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TimeBasedDistribution.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C2A26000(0, &qword_1EA31ED30, (uint64_t (*)(void))sub_1C2A25F58, (uint64_t)&type metadata for TimeBasedDistribution.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A25F58();
  sub_1C2A9EA18();
  char v14 = 0;
  sub_1C2A9C858();
  sub_1C2A1E70C(&qword_1EA31ED40);
  sub_1C2A9E868();
  if (!v2)
  {
    v11[1] = *(void *)(v3 + *(int *)(type metadata accessor for TimeBasedDistribution() + 20));
    char v13 = 1;
    sub_1C2967B94(0, &qword_1EA31ED48);
    sub_1C2A26068(&qword_1EA31ED50, (void (*)(void))sub_1C2A25FAC);
    sub_1C2A9E868();
    char v12 = 2;
    sub_1C2A9E828();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t TimeBasedDistribution.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = sub_1C2A9C858();
  uint64_t v24 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A26000(0, &qword_1EA31ED60, (uint64_t (*)(void))sub_1C2A25F58, (uint64_t)&type metadata for TimeBasedDistribution.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v26 = v5;
  uint64_t v23 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = type metadata accessor for TimeBasedDistribution();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A25F58();
  uint64_t v27 = v7;
  uint64_t v11 = (uint64_t)v28;
  sub_1C2A9EA08();
  if (v11) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = v23;
  uint64_t v12 = v24;
  uint64_t v28 = a1;
  uint64_t v14 = (uint64_t)v10;
  char v32 = 0;
  sub_1C2A1E70C(&qword_1EA31ED68);
  char v15 = v25;
  uint64_t v16 = v26;
  sub_1C2A9E7A8();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v14, v15, v3);
  sub_1C2967B94(0, &qword_1EA31ED48);
  char v31 = 1;
  sub_1C2A26068(&qword_1EA31ED70, (void (*)(void))sub_1C2A260E4);
  sub_1C2A9E7A8();
  *(void *)(v14 + *(int *)(v8 + 20)) = v29;
  char v30 = 2;
  uint64_t v17 = sub_1C2A9E768();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v27, v16);
  uint64_t v20 = (uint64_t *)(v14 + *(int *)(v8 + 24));
  *uint64_t v20 = v17;
  v20[1] = v19;
  sub_1C299FC90(v14, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return sub_1C299B9F0(v14);
}

uint64_t sub_1C2A25964@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TimeBasedDistribution.init(from:)(a1, a2);
}

uint64_t sub_1C2A2597C(void *a1)
{
  return TimeBasedDistribution.encode(to:)(a1);
}

uint64_t static Range<>.TimeOfDay.midnightToFourAM.getter()
{
  return 0;
}

uint64_t static Range<>.TimeOfDay.fourAMToEightAM.getter()
{
  return 4;
}

uint64_t static Range<>.TimeOfDay.eightAMToNoon.getter()
{
  return 8;
}

uint64_t static Range<>.TimeOfDay.noonToFourPM.getter()
{
  return 12;
}

uint64_t static Range<>.TimeOfDay.fourPMToEightPM.getter()
{
  return 16;
}

uint64_t static Range<>.TimeOfDay.eightPMToMidnight.getter()
{
  return 20;
}

uint64_t static Range<>.DayOfWeek.sunday.getter()
{
  return 0;
}

uint64_t static Range<>.DayOfWeek.monday.getter()
{
  return 1;
}

uint64_t static Range<>.DayOfWeek.tuesday.getter()
{
  return 2;
}

uint64_t static Range<>.DayOfWeek.wednesday.getter()
{
  return 3;
}

uint64_t static Range<>.DayOfWeek.thursday.getter()
{
  return 4;
}

uint64_t static Range<>.DayOfWeek.friday.getter()
{
  return 5;
}

uint64_t static Range<>.DayOfWeek.saturday.getter()
{
  return 6;
}

uint64_t _s19HealthVisualization21TimeBasedDistributionV0E5ValueV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a1 + 8);
  int v5 = *(unsigned __int8 *)(a1 + 9);
  uint64_t v6 = *(void **)(a1 + 16);
  int v7 = *(unsigned __int8 *)(a2 + 8);
  int v8 = *(unsigned __int8 *)(a2 + 9);
  uint64_t v9 = *(void **)(a2 + 16);
  if (v4)
  {
    if (!v7) {
      return 0;
    }
  }
  else if ((v7 & 1) != 0 || *(double *)a1 != *(double *)a2)
  {
    return 0;
  }
  if (((v5 ^ v8) & 1) == 0) {
    return sub_1C29634E4(v6, v9);
  }
  return 0;
}

BOOL _s19HealthVisualization21TimeBasedDistributionV6BucketV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    int v5 = *(unsigned __int8 *)(a2 + 24);
    int v6 = *(unsigned __int8 *)(a2 + 25);
    int v7 = *(void **)(a2 + 32);
    if (*(unsigned char *)(a1 + 24))
    {
      if (!v5) {
        return 0;
      }
    }
    else if ((v5 & 1) != 0 || *(double *)(a1 + 16) != *(double *)(a2 + 16))
    {
      return 0;
    }
    return ((*(unsigned __int8 *)(a1 + 25) ^ v6) & 1) == 0 && (sub_1C29634E4(*(void **)(a1 + 32), v7) & 1) != 0;
  }
  return result;
}

uint64_t _s19HealthVisualization21TimeBasedDistributionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_1C2A9C848() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for TimeBasedDistribution();
  if ((sub_1C296334C(*(void *)(a1 + *(int *)(v4 + 20)), *(void *)(a2 + *(int *)(v4 + 20))) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  int v8 = (void *)(a2 + v5);
  if (v6 == *v8 && v7 == v8[1]) {
    return 1;
  }
  return sub_1C2A9E8D8();
}

uint64_t sub_1C2A25BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  unint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1C2978A2C(0, v5, 0);
    uint64_t result = v23;
    int v8 = (long long *)(a1 + 32);
    unint64_t v9 = *(void *)(v23 + 16);
    unint64_t v10 = v5;
    do
    {
      long long v11 = *v8;
      uint64_t v24 = result;
      unint64_t v12 = *(void *)(result + 24);
      unint64_t v13 = v9 + 1;
      if (v9 >= v12 >> 1)
      {
        long long v22 = *v8;
        sub_1C2978A2C(v12 > 1, v9 + 1, 1);
        long long v11 = v22;
        uint64_t result = v24;
      }
      *(void *)(result + 16) = v13;
      *(_OWORD *)(result + 16 * v9 + 32) = v11;
      int v8 = (long long *)((char *)v8 + 40);
      ++v9;
      --v10;
    }
    while (v10);
    if (v4 < a3)
    {
      unint64_t v14 = 0;
      unint64_t v15 = v13 - 1;
      do
      {
        if (v14 > v15)
        {
          __break(1u);
          return result;
        }
        uint64_t v16 = (uint64_t *)(result + 32 + 16 * v14);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        BOOL v19 = v4 >= v18 && v4 < v17;
        int v20 = !v19;
        if (!v19) {
          ++v14;
        }
        v4 += v20 ^ 1u;
      }
      while (v4 < a3 && v14 < v5);
      if (v4 == a3) {
        goto LABEL_27;
      }
      goto LABEL_28;
    }
  }
  else
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (a2 < a3)
    {
LABEL_28:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  if (v4 != a3) {
    goto LABEL_28;
  }
  unint64_t v14 = 0;
  unint64_t v15 = *(void *)(result + 16) - 1;
LABEL_27:
  swift_bridgeObjectRelease();
  return v14 == v15;
}

unint64_t sub_1C2A25D38()
{
  unint64_t result = qword_1EA31ECE8;
  if (!qword_1EA31ECE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31ECE8);
  }
  return result;
}

uint64_t sub_1C2A25D8C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2967B94(255, (unint64_t *)&qword_1EBB920B0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2A25DFC()
{
  unint64_t result = qword_1EA31ED00;
  if (!qword_1EA31ED00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31ED00);
  }
  return result;
}

uint64_t sub_1C2A25E50(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C297A9F8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2A25EB0()
{
  unint64_t result = qword_1EA31ED10;
  if (!qword_1EA31ED10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31ED10);
  }
  return result;
}

unint64_t sub_1C2A25F04()
{
  unint64_t result = qword_1EA31ED28;
  if (!qword_1EA31ED28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31ED28);
  }
  return result;
}

unint64_t sub_1C2A25F58()
{
  unint64_t result = qword_1EA31ED38;
  if (!qword_1EA31ED38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31ED38);
  }
  return result;
}

unint64_t sub_1C2A25FAC()
{
  unint64_t result = qword_1EA31ED58;
  if (!qword_1EA31ED58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31ED58);
  }
  return result;
}

void sub_1C2A26000(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C2A26068(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2967B94(255, &qword_1EA31ED48);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2A260E4()
{
  unint64_t result = qword_1EA31ED78[0];
  if (!qword_1EA31ED78[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA31ED78);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TimeBasedDistribution(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2A9C858();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    unint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TimeBasedDistribution(uint64_t a1)
{
  uint64_t v2 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TimeBasedDistribution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TimeBasedDistribution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TimeBasedDistribution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for TimeBasedDistribution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeBasedDistribution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2A2652C);
}

uint64_t sub_1C2A2652C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2A9C858();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TimeBasedDistribution(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2A26600);
}

uint64_t sub_1C2A26600(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2A9C858();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeBasedDistribution.Constants()
{
  return &type metadata for TimeBasedDistribution.Constants;
}

ValueMetadata *type metadata accessor for TimeBasedDistribution.Constants.TimeOfDay()
{
  return &type metadata for TimeBasedDistribution.Constants.TimeOfDay;
}

ValueMetadata *type metadata accessor for TimeBasedDistribution.Constants.DayOfWeek()
{
  return &type metadata for TimeBasedDistribution.Constants.DayOfWeek;
}

uint64_t sub_1C2A266F0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TimeBasedDistribution.DistributionValue(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TimeBasedDistribution.DistributionValue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeBasedDistribution.DistributionValue(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TimeBasedDistribution.DistributionValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeBasedDistribution.DistributionValue()
{
  return &type metadata for TimeBasedDistribution.DistributionValue;
}

uint64_t destroy for TimeBasedDistribution.Bucket()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TimeBasedDistribution.Bucket(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TimeBasedDistribution.Bucket(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TimeBasedDistribution.Bucket(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeBasedDistribution.Bucket(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TimeBasedDistribution.Bucket(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeBasedDistribution.Bucket()
{
  return &type metadata for TimeBasedDistribution.Bucket;
}

uint64_t sub_1C2A26A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 0);
}

uint64_t type metadata accessor for Range<>.TimeOfDay()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for Range<>.DayOfWeek()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for TimeBasedDistribution.CodingKeys()
{
  return &type metadata for TimeBasedDistribution.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TimeBasedDistribution.Bucket.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2A26B28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeBasedDistribution.Bucket.CodingKeys()
{
  return &type metadata for TimeBasedDistribution.Bucket.CodingKeys;
}

unsigned char *_s19HealthVisualization21TimeBasedDistributionV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2A26C2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeBasedDistribution.DistributionValue.CodingKeys()
{
  return &type metadata for TimeBasedDistribution.DistributionValue.CodingKeys;
}

unint64_t sub_1C2A26C68()
{
  unint64_t result = qword_1EA31EE80;
  if (!qword_1EA31EE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EE80);
  }
  return result;
}

unint64_t sub_1C2A26CC0()
{
  unint64_t result = qword_1EA31EE88;
  if (!qword_1EA31EE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EE88);
  }
  return result;
}

unint64_t sub_1C2A26D18()
{
  unint64_t result = qword_1EA31EE90;
  if (!qword_1EA31EE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EE90);
  }
  return result;
}

unint64_t sub_1C2A26D70()
{
  unint64_t result = qword_1EA31EE98;
  if (!qword_1EA31EE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EE98);
  }
  return result;
}

unint64_t sub_1C2A26DC8()
{
  unint64_t result = qword_1EA31EEA0;
  if (!qword_1EA31EEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EEA0);
  }
  return result;
}

unint64_t sub_1C2A26E20()
{
  unint64_t result = qword_1EA31EEA8;
  if (!qword_1EA31EEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EEA8);
  }
  return result;
}

unint64_t sub_1C2A26E78()
{
  unint64_t result = qword_1EA31EEB0;
  if (!qword_1EA31EEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EEB0);
  }
  return result;
}

unint64_t sub_1C2A26ED0()
{
  unint64_t result = qword_1EA31EEB8;
  if (!qword_1EA31EEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EEB8);
  }
  return result;
}

unint64_t sub_1C2A26F28()
{
  unint64_t result = qword_1EA31EEC0;
  if (!qword_1EA31EEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EEC0);
  }
  return result;
}

uint64_t sub_1C2A26F7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x78614D7369 && a2 == 0xE500000000000000 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61546D6F74737563 && a2 == 0xEA00000000007367)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C2A270D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E656E6F706D6F63 && a2 == 0xEE0065676E615274;
  if (v2 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C2A271E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E656E6F706D6F63 && a2 == 0xE900000000000074;
  if (v2 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7374656B637562 && a2 == 0xE700000000000000 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6972745374696E75 && a2 == 0xEA0000000000676ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t PluginFeedItemsConsuming<>.consumePluginFeedItemResults()()
{
  sub_1C2A27B28();
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29A8AF0();
  uint64_t v5 = v4;
  uint64_t v67 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v65 = (uint64_t *)((char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v66 = (uint64_t)&v61 - v8;
  *(void *)&double v10 = MEMORY[0x1F4188790](v9).n128_u64[0];
  id v61 = v0;
  uint64_t v62 = (uint64_t)&v61 - v11;
  id v12 = objc_msgSend(v0, sel_dependencies, v10);
  unint64_t v71 = sub_1C29AD370();
  unint64_t v13 = sub_1C2A9DE98();

  unint64_t v70 = v13;
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C2A9E648();
    int64_t v68 = result;
  }
  else
  {
    int64_t v68 = *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v64 = v5;
  if (v68)
  {
    if (v68 < 1)
    {
      __break(1u);
      goto LABEL_52;
    }
    uint64_t v15 = 0;
    unint64_t v16 = v70 & 0xC000000000000001;
    uint64_t v17 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56);
    unint64_t v69 = MEMORY[0x1E4FBC860];
    uint64_t v63 = (unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
    do
    {
      if (v16) {
        id v18 = (id)MEMORY[0x1C8764390](v15, v70);
      }
      else {
        id v18 = *(id *)(v70 + 8 * v15 + 32);
      }
      BOOL v19 = v18;
      v72[0] = v18;
      sub_1C29415E4(0, &qword_1EBB91DC8);
      id v20 = v19;
      if (swift_dynamicCast())
      {
        uint64_t v21 = *((void *)&v76 + 1);
        uint64_t v22 = v77;
        __swift_project_boxed_opaque_existential_1(&v75, *((uint64_t *)&v76 + 1));
        uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
        uint64_t v24 = v22;
        uint64_t v5 = v64;
        v23(v21, v24);
        (*v17)(v3, 0, 1, v5);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v75);
      }
      else
      {
        uint64_t v77 = 0;
        long long v75 = 0u;
        long long v76 = 0u;
        sub_1C2932C8C((uint64_t)&v75, &qword_1EBB91DD0, &qword_1EBB91DC8);
        (*v17)(v3, 1, 1, v5);
      }

      if ((*v63)(v3, 1, v5) == 1)
      {
        sub_1C2A27B80((uint64_t)v3);
      }
      else
      {
        uint64_t v25 = v62;
        sub_1C2A27BE8((uint64_t)v3, v62);
        sub_1C2A27BE8(v25, v66);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v69 = sub_1C299D8F0(0, *(void *)(v69 + 16) + 1, 1, v69);
        }
        unint64_t v27 = *(void *)(v69 + 16);
        unint64_t v26 = *(void *)(v69 + 24);
        if (v27 >= v26 >> 1) {
          unint64_t v69 = sub_1C299D8F0(v26 > 1, v27 + 1, 1, v69);
        }
        unint64_t v28 = v69;
        *(void *)(v69 + 16) = v27 + 1;
        sub_1C2A27BE8(v66, v28+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(void *)(v67 + 72) * v27);
      }
      ++v15;
    }
    while (v68 != v15);
  }
  else
  {
    unint64_t v69 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease_n();
  id v29 = objc_msgSend(v61, sel_dependencies);
  unint64_t v30 = sub_1C2A9DE98();

  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C2A9E648();
    uint64_t v31 = result;
  }
  else
  {
    uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  if (v31)
  {
    if (v31 >= 1)
    {
      uint64_t v32 = 0;
      unint64_t v70 = MEMORY[0x1E4FBC860];
      uint64_t v33 = (unint64_t *)&unk_1EBB91E68;
      unint64_t v34 = v30 & 0xC000000000000001;
      int64_t v68 = v30 & 0xC000000000000001;
      do
      {
        if (v34) {
          id v35 = (id)MEMORY[0x1C8764390](v32, v30);
        }
        else {
          id v35 = *(id *)(v30 + 8 * v32 + 32);
        }
        uint64_t v36 = v35;
        id v74 = v35;
        sub_1C29415E4(0, v33);
        id v37 = v36;
        if (swift_dynamicCast())
        {
          uint64_t v38 = v33;
          uint64_t v39 = v31;
          unint64_t v40 = v30;
          uint64_t v41 = *((void *)&v76 + 1);
          uint64_t v42 = v77;
          __swift_project_boxed_opaque_existential_1(&v75, *((uint64_t *)&v76 + 1));
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v42 + 8))(v72, v41, v42);
          uint64_t v43 = v72[0];
          uint64_t v44 = v72[1];
          uint64_t v45 = v72[2];
          char v46 = v73;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v75);

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v70 = (unint64_t)sub_1C299DBD8(0, *(void *)(v70 + 16) + 1, 1, (void *)v70);
          }
          unint64_t v48 = *(void *)(v70 + 16);
          unint64_t v47 = *(void *)(v70 + 24);
          if (v48 >= v47 >> 1) {
            unint64_t v70 = (unint64_t)sub_1C299DBD8((void *)(v47 > 1), v48 + 1, 1, (void *)v70);
          }
          unint64_t v49 = v70;
          *(void *)(v70 + 16) = v48 + 1;
          unint64_t v50 = v49 + 32 * v48;
          *(void *)(v50 + 32) = v43;
          *(void *)(v50 + 40) = v44;
          *(void *)(v50 + 48) = v45;
          *(unsigned char *)(v50 + 56) = v46;
          unint64_t v30 = v40;
          uint64_t v31 = v39;
          uint64_t v33 = v38;
          unint64_t v34 = v68;
        }
        else
        {
          uint64_t v77 = 0;
          long long v75 = 0u;
          long long v76 = 0u;
          sub_1C2932C8C((uint64_t)&v75, &qword_1EBB910D8, v33);
        }
        ++v32;
      }
      while (v31 != v32);
      goto LABEL_38;
    }
LABEL_52:
    __break(1u);
    return result;
  }
  unint64_t v70 = MEMORY[0x1E4FBC860];
LABEL_38:
  swift_bridgeObjectRelease_n();
  *(void *)&long long v75 = MEMORY[0x1E4FBC860];
  uint64_t v51 = *(void *)(v70 + 16);
  if (v51)
  {
    uint64_t v52 = (unsigned char *)(v70 + 56);
    do
    {
      uint64_t v54 = *((void *)v52 - 3);
      if (*v52)
      {
        uint64_t v55 = *((void *)v52 - 2);
        unint64_t v56 = *((void *)v52 - 1);
        id v57 = v65;
        *uint64_t v65 = v54;
        v57[1] = v55;
        _DWORD v57[2] = v56;
        swift_storeEnumTagMultiPayload();
        unint64_t v58 = v75;
        sub_1C2A27BDC(v54, v55, v56, 1);
        sub_1C2962970(v54, v55, v56);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v58 = sub_1C299D8F0(0, *(void *)(v58 + 16) + 1, 1, v58);
        }
        unint64_t v60 = *(void *)(v58 + 16);
        unint64_t v59 = *(void *)(v58 + 24);
        if (v60 >= v59 >> 1) {
          unint64_t v58 = sub_1C299D8F0(v59 > 1, v60 + 1, 1, v58);
        }
        *(void *)(v58 + 16) = v60 + 1;
        sub_1C2A27BE8((uint64_t)v65, v58+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(void *)(v67 + 72) * v60);
        sub_1C2A27C4C(v54, v55, v56, 1);
        *(void *)&long long v75 = v58;
      }
      else
      {
        uint64_t v53 = swift_bridgeObjectRetain();
        sub_1C29A77AC(v53);
      }
      v52 += 32;
      --v51;
    }
    while (v51);
  }
  swift_bridgeObjectRelease();
  v72[0] = v69;
  sub_1C29A77AC(v75);
  return v72[0];
}

void sub_1C2A27B28()
{
  if (!qword_1EBB92220)
  {
    sub_1C29A8AF0();
    unint64_t v0 = sub_1C2A9E328();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB92220);
    }
  }
}

uint64_t sub_1C2A27B80(uint64_t a1)
{
  sub_1C2A27B28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2A27BDC(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  if (a4) {
    return sub_1C2962970(a1, a2, a3);
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1C2A27BE8(uint64_t a1, uint64_t a2)
{
  sub_1C29A8AF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2A27C4C(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  if (a4) {
    return sub_1C2A15A3C(a1, a2, a3);
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t dispatch thunk of PluginFeedItemsConsuming.consumePluginFeedItemResults()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1C2A27C6C()
{
  qword_1EBB9F080 = 0x4041800000000000;
}

void sub_1C2A27C80()
{
  qword_1EBB9F088 = 0x4008000000000000;
}

__n128 sub_1C2A27C90()
{
  __asm { FMOV            V0.2D, #2.0 }
  xmmword_1EBB9EEB0 = (__int128)result;
  *(__n128 *)&qword_1EBB9EEC0 = result;
  return result;
}

uint64_t sub_1C2A27DF0@<X0>(uint64_t a1@<X8>)
{
  sub_1C2A29BB0(0, (unint64_t *)&qword_1EBB90668, type metadata accessor for AXProjectionState, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v16 - v4;
  uint64_t v6 = type metadata accessor for AXProjectionState(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v1 + OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model;
  uint64_t v11 = type metadata accessor for HighlightCalendarDayViewModel(0);
  sub_1C2A299CC(v10 + *(int *)(v11 + 52), (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1C2A29A60((uint64_t)v5);
    uint64_t v12 = sub_1C2A9C6E8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  else
  {
    sub_1C2A29AEC((uint64_t)v5, (uint64_t)v9);
    uint64_t v14 = sub_1C2A9C6E8();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(a1, v9, v14);
    sub_1C2A29B50((uint64_t)v9, type metadata accessor for AXProjectionState);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
  }
}

void sub_1C2A283EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model];
  int v3 = v2[48];
  if ((v3 - 1) >= 4)
  {
    if (v3 != 5)
    {
      sub_1C2A9E628();
      __break(1u);
      return;
    }
  }
  else
  {
    sub_1C29983CC(*((id *)v2 + 3), *((id *)v2 + 4), *((void *)v2 + 5), v3);
  }
  id v4 = sub_1C29AA5C0();
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, sel_setTextAlignment_, 1);
  uint64_t v6 = (void *)sub_1C2A9DCF8();
  objc_msgSend(v5, sel_setText_, v6);

  objc_msgSend(v5, sel_setTextColor_, v4);
  swift_bridgeObjectRelease();

  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_dayLabel];
  *(void *)&v1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_dayLabel] = v5;
  id v8 = v5;

  objc_msgSend(v1, sel_addSubview_, v8);
}

void sub_1C2A28584(double a1)
{
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_todayIndicatorLayer];
  if (v2)
  {
    int v3 = v1;
    id v5 = self;
    id v6 = v2;
    id v7 = objc_msgSend(v5, sel__currentTraitCollection);
    id v8 = objc_msgSend(v3, sel_traitCollection);
    objc_msgSend(v5, sel__setCurrentTraitCollection_, v8);

    id v9 = objc_msgSend(self, sel_labelColor);
    id v10 = objc_msgSend(v9, sel_colorWithAlphaComponent_, a1);

    id v11 = objc_msgSend(v10, sel_CGColor);
    objc_msgSend(v6, sel_setBorderColor_, v11);

    objc_msgSend(v5, sel__setCurrentTraitCollection_, v7);
    id v12 = objc_msgSend(v3, sel_traitCollection);
    objc_msgSend(v12, sel_userInterfaceStyle);

    sub_1C2A9DD28();
    id v13 = objc_allocWithZone(MEMORY[0x1E4F39BC0]);
    uint64_t v14 = (void *)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(v13, sel_initWithType_, v14);

    objc_msgSend(v6, sel_setCompositingFilter_, v15);
  }
}

void sub_1C2A288F8()
{
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for HighlightCalendarDayView();
  objc_msgSendSuper2(&v13, sel_layoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_activityRingsView];
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v0, sel_bounds);
    double v4 = v3;
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
    if (qword_1EBB8E358 != -1) {
      swift_once();
    }
    objc_msgSend(v2, sel_setFrame_, UIEdgeInsetsInsetRect(v4, v6, v8, v10, *(double *)&xmmword_1EBB9EEB0, *((double *)&xmmword_1EBB9EEB0 + 1)));
  }
  id v11 = *(void **)&v0[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_dayLabel];
  if (v11)
  {
    id v12 = v11;
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v12, sel_setFrame_);
  }
}

uint64_t sub_1C2A28B20()
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1C2A29BB0(0, (unint64_t *)&qword_1EA31E4C0, (uint64_t (*)(uint64_t))sub_1C29984CC, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C2AA6B00;
  uint64_t v2 = sub_1C2A9D018();
  uint64_t v3 = MEMORY[0x1E4FB1138];
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  *(void *)(swift_allocObject() + 16) = ObjectType;
  sub_1C2A9E268();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C2AA6B00;
  uint64_t v5 = sub_1C2A9D008();
  uint64_t v6 = MEMORY[0x1E4FB0F40];
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v6;
  sub_1C2A9E268();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_1C2A28C90(char *a1)
{
  id v2 = objc_msgSend(a1, sel_traitCollection);
  id v3 = objc_msgSend(v2, sel_preferredContentSizeCategory);

  uint64_t v4 = &a1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model];
  char v5 = a1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model + 89];
  double v7 = *(void **)&a1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model + 24];
  uint64_t v6 = *(void **)&a1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model + 32];
  uint64_t v8 = *(void *)&a1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model + 40];
  int v9 = a1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model + 48];
  if (a1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model + 48])
  {
    sub_1C29983CC(*(id *)&a1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model + 24], *(id *)&a1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model + 32], *(void *)&a1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model + 40], a1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model + 48]);
    if (sub_1C2A9E238())
    {
      char v47 = v5;
      double v10 = sub_1C2A29844((uint64_t)v3, &v47);

      sub_1C2998420(v7, v6, v8, v9);
      double v11 = v10 * 0.5;
    }
    else
    {

      sub_1C2998420(v7, v6, v8, v9);
      double v11 = 8.0;
    }
    switch(v9)
    {
      case 2:
      case 4:
        objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_todayIndicatorLayer], sel_setCornerRadius_, v11);
        goto LABEL_8;
      case 5:
        goto LABEL_35;
      default:
LABEL_8:
        objc_super v13 = *(void **)&a1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_dayLabel];
        if (!v13) {
          goto LABEL_34;
        }
        if (v4[88])
        {
          if (v4[88] == 1)
          {
            if (byte_1EA31EF08 == 1)
            {
              uint64_t v14 = qword_1EBB91258;
              id v15 = v13;
              if (v14 != -1) {
                swift_once();
              }
              uint64_t v16 = (void *)qword_1EBB907C8;
              sub_1C2A29804();
              id v17 = v16;
              id v18 = (void *)sub_1C2A9E2D8();
              id v19 = objc_msgSend(v17, sel_objectForKey_, v18);

              if (!v19)
              {
                id v20 = self;
                sub_1C2A9DD28();
                uint64_t v21 = (void *)sub_1C2A9DCF8();
                swift_bridgeObjectRelease();
                id v19 = objc_msgSend(v20, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v21, 0x8000, *MEMORY[0x1E4FB27B0]);

                if (byte_1EA31EF08 == 1)
                {
LABEL_28:
                  id v36 = (id)qword_1EBB907C8;
                  id v37 = (void *)sub_1C2A9E2D8();
                  objc_msgSend(v36, sel_setObject_forKey_, v19, v37);

LABEL_32:
                  goto LABEL_33;
                }
              }
              goto LABEL_33;
            }
            uint64_t v38 = self;
            sub_1C2A9DD28();
            id v39 = v13;
            id v37 = (void *)sub_1C2A9DCF8();
            swift_bridgeObjectRelease();
            id v40 = objc_msgSend(v38, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v37, 0x8000, *MEMORY[0x1E4FB27B0]);
LABEL_31:
            id v19 = v40;
            goto LABEL_32;
          }
          if (byte_1EA31EF08 == 1)
          {
            uint64_t v29 = qword_1EBB91258;
            id v30 = v13;
            if (v29 != -1) {
              swift_once();
            }
            uint64_t v31 = (void *)qword_1EBB907C8;
            sub_1C2A29804();
            id v32 = v31;
            uint64_t v33 = (void *)sub_1C2A9E2D8();
            id v19 = objc_msgSend(v32, sel_objectForKey_, v33);

            if (!v19)
            {
              unint64_t v34 = self;
              sub_1C2A9DD28();
              id v35 = (void *)sub_1C2A9DCF8();
              swift_bridgeObjectRelease();
              id v19 = objc_msgSend(v34, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v35, 32770, *MEMORY[0x1E4FB27B0]);

              if (byte_1EA31EF08 == 1) {
                goto LABEL_28;
              }
            }
            goto LABEL_33;
          }
        }
        else if (byte_1EA31EF08 == 1)
        {
          uint64_t v22 = qword_1EBB91258;
          id v23 = v13;
          if (v22 != -1) {
            swift_once();
          }
          uint64_t v24 = (void *)qword_1EBB907C8;
          sub_1C2A29804();
          id v25 = v24;
          unint64_t v26 = (void *)sub_1C2A9E2D8();
          id v19 = objc_msgSend(v25, sel_objectForKey_, v26);

          if (!v19)
          {
            unint64_t v27 = self;
            sub_1C2A9DD28();
            unint64_t v28 = (void *)sub_1C2A9DCF8();
            swift_bridgeObjectRelease();
            id v19 = objc_msgSend(v27, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v28, 32770, *MEMORY[0x1E4FB27B0]);

            if (byte_1EA31EF08 == 1) {
              goto LABEL_28;
            }
          }
LABEL_33:
          objc_msgSend(v13, sel_setFont_, v19);

          goto LABEL_34;
        }
        uint64_t v41 = self;
        sub_1C2A9DD28();
        id v42 = v13;
        id v37 = (void *)sub_1C2A9DCF8();
        swift_bridgeObjectRelease();
        id v40 = objc_msgSend(v41, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v37, 32770, *MEMORY[0x1E4FB27B0]);
        goto LABEL_31;
    }
  }
  char v46 = a1[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model + 89];
  sub_1C29983CC(v7, v6, v8, 0);
  double v12 = sub_1C2A29844((uint64_t)v3, &v46);

  sub_1C2998420(v7, v6, v8, 0);
  double v11 = v12 * 0.5;
LABEL_34:
  id v43 = sub_1C29AA488();
  objc_msgSend(a1, sel_setBackgroundColor_, v43);

  id v44 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v44, sel_setCornerRadius_, v11);

LABEL_35:
  return objc_msgSend(a1, sel_invalidateIntrinsicContentSize);
}

id sub_1C2A29444()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HighlightCalendarDayView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2A2950C()
{
  return type metadata accessor for HighlightCalendarDayView();
}

uint64_t type metadata accessor for HighlightCalendarDayView()
{
  uint64_t result = qword_1EBB90970;
  if (!qword_1EBB90970) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2A29560()
{
  uint64_t result = type metadata accessor for HighlightCalendarDayViewModel(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C2A29600()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1C2A29610(char *a1)
{
  return sub_1C2A28C90(a1);
}

uint64_t sub_1C2A29618()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2BFE0]), sel_initWithFrame_renderer_, *(void *)(v0 + OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_ringsRenderer), 0.0, 0.0, 0.0, 0.0);
  objc_super v2 = (void *)(v0 + OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model + 48) || (id v3 = v1) == 0)
  {
    uint64_t result = sub_1C2A9E628();
    __break(1u);
  }
  else
  {
    uint64_t v4 = (void *)v2[3];
    char v5 = (void *)v2[4];
    uint64_t v6 = v2[5];
    sub_1C29983CC(v4, v5, v6, 0);
    id v7 = v3;
    objc_msgSend(v7, sel_setActivitySummary_animated_, v4, 1);
    id v8 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(v7, sel__setActivityRingViewBackgroundColor_, v8);

    sub_1C2998420(v4, v5, v6, 0);
    return (uint64_t)v7;
  }
  return result;
}

void sub_1C2A297C0(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model + 48);
  if (v1 == 4 || v1 == 2) {
    sub_1C2A28584(*(double *)(a1 + OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model + 40));
  }
}

unint64_t sub_1C2A29804()
{
  unint64_t result = qword_1EBB90DA0;
  if (!qword_1EBB90DA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB90DA0);
  }
  return result;
}

double sub_1C2A29844(uint64_t a1, char *a2)
{
  char v2 = *a2;
  char v3 = sub_1C2A9E238();
  if ((v2 & 1) == 0)
  {
    if (v3) {
      return 32.0;
    }
    uint64_t v11 = sub_1C2A9DD28();
    uint64_t v13 = v12;
    if (v11 == sub_1C2A9DD28() && v13 == v14)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v16 = sub_1C2A9E8D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        if ((sub_1C2A9E228() & 1) == 0) {
          return 32.0;
        }
        return 34.0;
      }
    }
    return 33.0;
  }
  if (v3) {
    return 33.0;
  }
  uint64_t v4 = sub_1C2A9DD28();
  uint64_t v6 = v5;
  if (v4 == sub_1C2A9DD28() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    return 34.0;
  }
  char v9 = sub_1C2A9E8D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9) {
    return 34.0;
  }
  if ((sub_1C2A9E228() & 1) == 0) {
    return 32.0;
  }
  return 35.0;
}

uint64_t sub_1C2A299CC(uint64_t a1, uint64_t a2)
{
  sub_1C2A29BB0(0, (unint64_t *)&qword_1EBB90668, type metadata accessor for AXProjectionState, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2A29A60(uint64_t a1)
{
  sub_1C2A29BB0(0, (unint64_t *)&qword_1EBB90668, type metadata accessor for AXProjectionState, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2A29AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AXProjectionState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2A29B50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C2A29BB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

char *sub_1C2A29C14(uint64_t a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_dayLabel] = 0;
  *(void *)&v2[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_todayIndicatorLayer] = 0;
  *(void *)&v2[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_activityRingsView] = 0;
  sub_1C29982C0(a1, (uint64_t)&v2[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model]);
  *(void *)&v2[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_ringsRenderer] = a2;
  v149.receiver = v2;
  v149.super_class = (Class)type metadata accessor for HighlightCalendarDayView();
  id v5 = a2;
  uint64_t v6 = (char *)objc_msgSendSuper2(&v149, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1C2A28B20();
  id v7 = objc_msgSend(v6, sel_traitCollection);
  id v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

  char v9 = *(unsigned char *)(a1 + 89);
  uint64_t v11 = *(void **)(a1 + 24);
  double v10 = *(void **)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v147 = a1;
  int v13 = *(unsigned __int8 *)(a1 + 48);
  if (!v13)
  {
    LOBYTE(v148) = v9;
    id v16 = v11;
    double v17 = sub_1C2A29844((uint64_t)v8, (char *)&v148);

    sub_1C2998420(v11, v10, v12, 0);
    double v15 = v17 * 0.5;
    id v18 = (void *)sub_1C2A29618();
    id v19 = *(void **)&v6[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_activityRingsView];
    *(void *)&v6[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_activityRingsView] = v18;
    id v20 = v18;

    objc_msgSend(v6, sel_addSubview_, v20);
    id v21 = sub_1C29AA488();
    objc_msgSend(v6, sel_setBackgroundColor_, v21);

    id v22 = objc_msgSend(v6, sel_layer);
LABEL_46:
    id v79 = v22;
    objc_msgSend(v79, sel_setCornerRadius_, v15);

LABEL_108:
    uint64_t v27 = v147;
    goto LABEL_109;
  }
  sub_1C29983CC(v11, v10, v12, v13);
  if (sub_1C2A9E238())
  {
    LOBYTE(v148) = v9;
    double v14 = sub_1C2A29844((uint64_t)v8, (char *)&v148);

    sub_1C2998420(v11, v10, v12, v13);
    double v15 = v14 * 0.5;
  }
  else
  {

    sub_1C2998420(v11, v10, v12, v13);
    double v15 = 8.0;
  }
  switch(v13)
  {
    case 2:
      double v34 = *(double *)&v12;
      id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39BE8]), sel_init);
      id v36 = objc_msgSend(self, sel_clearColor);
      id v37 = objc_msgSend(v36, sel_CGColor);

      objc_msgSend(v35, sel_setBackgroundColor_, v37);
      if (qword_1EBB912B0 != -1) {
        swift_once();
      }
      objc_msgSend(v35, sel_setBorderWidth_, *(double *)&qword_1EBB9F088);
      uint64_t v38 = OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_todayIndicatorLayer;
      id v39 = *(void **)&v6[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_todayIndicatorLayer];
      *(void *)&v6[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_todayIndicatorLayer] = v35;
      id v40 = v35;

      id v41 = objc_msgSend(v6, sel_layer);
      objc_msgSend(v41, sel_addSublayer_, v40);

      sub_1C2A283EC();
      id v42 = &v6[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model];
      id v43 = sub_1C29AA488();
      objc_msgSend(v6, sel_setBackgroundColor_, v43);

      id v44 = objc_msgSend(v6, sel_layer);
      objc_msgSend(v44, sel_setCornerRadius_, v15);

      uint64_t v45 = *(void **)&v6[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_dayLabel];
      if (!v45) {
        goto LABEL_107;
      }
      if (!v42[88])
      {
        if (byte_1EA31EF08 != 1) {
          goto LABEL_103;
        }
        uint64_t v90 = qword_1EBB91258;
        id v91 = v45;
        if (v90 != -1) {
          swift_once();
        }
        uint64_t v92 = (void *)qword_1EBB907C8;
        sub_1C2A29804();
        id v93 = v92;
        id v94 = (void *)sub_1C2A9E2D8();
        id v51 = objc_msgSend(v93, sel_objectForKey_, v94);

        if (v51) {
          goto LABEL_106;
        }
        goto LABEL_83;
      }
      if (v42[88] == 1)
      {
        if (byte_1EA31EF08 != 1) {
          goto LABEL_92;
        }
        uint64_t v46 = qword_1EBB91258;
        id v47 = v45;
        if (v46 != -1) {
          swift_once();
        }
        unint64_t v48 = (void *)qword_1EBB907C8;
        sub_1C2A29804();
        id v49 = v48;
        unint64_t v50 = (void *)sub_1C2A9E2D8();
        id v51 = objc_msgSend(v49, sel_objectForKey_, v50);

        if (v51) {
          goto LABEL_106;
        }
        goto LABEL_43;
      }
      if (byte_1EA31EF08 != 1) {
        goto LABEL_103;
      }
      uint64_t v95 = qword_1EBB91258;
      id v96 = v45;
      if (v95 != -1) {
        swift_once();
      }
      unint64_t v97 = (void *)qword_1EBB907C8;
      sub_1C2A29804();
      id v98 = v97;
      uint64_t v99 = (void *)sub_1C2A9E2D8();
      id v51 = objc_msgSend(v98, sel_objectForKey_, v99);

      if (v51) {
        goto LABEL_106;
      }
      goto LABEL_89;
    case 3:
      sub_1C2A283EC();
      uint64_t v52 = &v6[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model];
      id v53 = sub_1C29AA488();
      objc_msgSend(v6, sel_setBackgroundColor_, v53);

      id v54 = objc_msgSend(v6, sel_layer);
      objc_msgSend(v54, sel_setCornerRadius_, v15);

      unint64_t v26 = *(void **)&v6[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_dayLabel];
      uint64_t v27 = v147;
      if (!v26) {
        goto LABEL_109;
      }
      if (!v52[88])
      {
        if (byte_1EA31EF08 != 1) {
          goto LABEL_99;
        }
        uint64_t v100 = qword_1EBB91258;
        id v101 = v26;
        if (v100 != -1) {
          swift_once();
        }
        unint64_t v102 = (void *)qword_1EBB907C8;
        sub_1C2A29804();
        id v103 = v102;
        double v104 = (void *)sub_1C2A9E2D8();
        id v33 = objc_msgSend(v103, sel_objectForKey_, v104);

        if (v33) {
          goto LABEL_102;
        }
        goto LABEL_71;
      }
      if (v52[88] == 1)
      {
        if (byte_1EA31EF08 != 1) {
          goto LABEL_91;
        }
        uint64_t v55 = qword_1EBB91258;
        id v56 = v26;
        if (v55 != -1) {
          swift_once();
        }
        id v57 = (void *)qword_1EBB907C8;
        sub_1C2A29804();
        id v58 = v57;
        unint64_t v59 = (void *)sub_1C2A9E2D8();
        id v33 = objc_msgSend(v58, sel_objectForKey_, v59);

        if (v33) {
          goto LABEL_102;
        }
        goto LABEL_32;
      }
      if (byte_1EA31EF08 != 1) {
        goto LABEL_99;
      }
      uint64_t v107 = qword_1EBB91258;
      id v108 = v26;
      if (v107 != -1) {
        swift_once();
      }
      uint64_t v109 = (void *)qword_1EBB907C8;
      sub_1C2A29804();
      id v110 = v109;
      double v111 = (void *)sub_1C2A9E2D8();
      id v33 = objc_msgSend(v110, sel_objectForKey_, v111);

      if (v33) {
        goto LABEL_102;
      }
      goto LABEL_77;
    case 4:
      double v34 = *(double *)&v12;
      id v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39BE8]), sel_init);
      id v63 = objc_msgSend(self, sel_clearColor);
      id v64 = objc_msgSend(v63, sel_CGColor);

      objc_msgSend(v62, sel_setBackgroundColor_, v64);
      if (qword_1EBB912B0 != -1) {
        swift_once();
      }
      objc_msgSend(v62, sel_setBorderWidth_, *(double *)&qword_1EBB9F088);
      uint64_t v38 = OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_todayIndicatorLayer;
      uint64_t v65 = *(void **)&v6[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_todayIndicatorLayer];
      *(void *)&v6[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_todayIndicatorLayer] = v62;
      id v66 = v62;

      id v67 = objc_msgSend(v6, sel_layer);
      objc_msgSend(v67, sel_addSublayer_, v66);

      sub_1C2A283EC();
      int64_t v68 = &v6[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model];
      id v69 = sub_1C29AA488();
      objc_msgSend(v6, sel_setBackgroundColor_, v69);

      id v70 = objc_msgSend(v6, sel_layer);
      objc_msgSend(v70, sel_setCornerRadius_, v15);

      uint64_t v45 = *(void **)&v6[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_dayLabel];
      if (!v45) {
        goto LABEL_107;
      }
      if (v68[88])
      {
        if (v68[88] == 1)
        {
          if (byte_1EA31EF08 == 1)
          {
            uint64_t v71 = qword_1EBB91258;
            id v72 = v45;
            if (v71 != -1) {
              swift_once();
            }
            char v73 = (void *)qword_1EBB907C8;
            sub_1C2A29804();
            id v74 = v73;
            long long v75 = (void *)sub_1C2A9E2D8();
            id v51 = objc_msgSend(v74, sel_objectForKey_, v75);

            if (!v51)
            {
LABEL_43:
              long long v76 = self;
              sub_1C2A9DD28();
              uint64_t v77 = (void *)sub_1C2A9DCF8();
              swift_bridgeObjectRelease();
              id v51 = objc_msgSend(v76, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v77, 0x8000, *MEMORY[0x1E4FB27B0]);

              if (byte_1EA31EF08 != 1) {
                goto LABEL_106;
              }
LABEL_90:
              id v130 = (id)qword_1EBB907C8;
              uint64_t v131 = (void *)sub_1C2A9E2D8();
              objc_msgSend(v130, sel_setObject_forKey_, v51, v131);

LABEL_105:
              goto LABEL_106;
            }
            goto LABEL_106;
          }
LABEL_92:
          unsigned int v135 = self;
          sub_1C2A9DD28();
          id v136 = v45;
          uint64_t v131 = (void *)sub_1C2A9DCF8();
          swift_bridgeObjectRelease();
          id v137 = objc_msgSend(v135, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v131, 0x8000, *MEMORY[0x1E4FB27B0]);
LABEL_104:
          id v51 = v137;
          goto LABEL_105;
        }
        if (byte_1EA31EF08 == 1)
        {
          uint64_t v123 = qword_1EBB91258;
          id v124 = v45;
          if (v123 != -1) {
            swift_once();
          }
          CGPoint v125 = (void *)qword_1EBB907C8;
          sub_1C2A29804();
          id v126 = v125;
          uint64_t v127 = (void *)sub_1C2A9E2D8();
          id v51 = objc_msgSend(v126, sel_objectForKey_, v127);

          if (!v51)
          {
LABEL_89:
            id v128 = self;
            sub_1C2A9DD28();
            uint64_t v129 = (void *)sub_1C2A9DCF8();
            swift_bridgeObjectRelease();
            id v51 = objc_msgSend(v128, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v129, 32770, *MEMORY[0x1E4FB27B0]);

            if (byte_1EA31EF08 != 1) {
              goto LABEL_106;
            }
            goto LABEL_90;
          }
LABEL_106:
          objc_msgSend(v45, sel_setFont_, v51);

LABEL_107:
          objc_msgSend(*(id *)&v6[v38], sel_setCornerRadius_, v15);
          sub_1C2A28584(v34);
          goto LABEL_108;
        }
      }
      else if (byte_1EA31EF08 == 1)
      {
        uint64_t v116 = qword_1EBB91258;
        id v117 = v45;
        if (v116 != -1) {
          swift_once();
        }
        CGPoint v118 = (void *)qword_1EBB907C8;
        sub_1C2A29804();
        id v119 = v118;
        CGPoint v120 = (void *)sub_1C2A9E2D8();
        id v51 = objc_msgSend(v119, sel_objectForKey_, v120);

        if (!v51)
        {
LABEL_83:
          CGPoint v121 = self;
          sub_1C2A9DD28();
          CGPoint v122 = (void *)sub_1C2A9DCF8();
          swift_bridgeObjectRelease();
          id v51 = objc_msgSend(v121, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v122, 32770, *MEMORY[0x1E4FB27B0]);

          if (byte_1EA31EF08 != 1) {
            goto LABEL_106;
          }
          goto LABEL_90;
        }
        goto LABEL_106;
      }
LABEL_103:
      uint64_t v140 = self;
      sub_1C2A9DD28();
      id v141 = v45;
      uint64_t v131 = (void *)sub_1C2A9DCF8();
      swift_bridgeObjectRelease();
      id v137 = objc_msgSend(v140, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v131, 32770, *MEMORY[0x1E4FB27B0]);
      goto LABEL_104;
    case 5:
      sub_1C2A283EC();
      id v78 = sub_1C29AA488();
      objc_msgSend(v6, sel_setBackgroundColor_, v78);

      id v22 = objc_msgSend(v6, sel_layer);
      goto LABEL_46;
    default:
      sub_1C2A283EC();
      id v23 = &v6[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_model];
      id v24 = sub_1C29AA488();
      objc_msgSend(v6, sel_setBackgroundColor_, v24);

      id v25 = objc_msgSend(v6, sel_layer);
      objc_msgSend(v25, sel_setCornerRadius_, v15);

      unint64_t v26 = *(void **)&v6[OBJC_IVAR____TtC19HealthVisualization24HighlightCalendarDayView_dayLabel];
      uint64_t v27 = v147;
      if (!v26) {
        goto LABEL_109;
      }
      if (v23[88])
      {
        if (v23[88] == 1)
        {
          if (byte_1EA31EF08 == 1)
          {
            uint64_t v28 = qword_1EBB91258;
            id v29 = v26;
            if (v28 != -1) {
              swift_once();
            }
            id v30 = (void *)qword_1EBB907C8;
            sub_1C2A29804();
            id v31 = v30;
            id v32 = (void *)sub_1C2A9E2D8();
            id v33 = objc_msgSend(v31, sel_objectForKey_, v32);

            if (!v33)
            {
LABEL_32:
              unint64_t v60 = self;
              sub_1C2A9DD28();
              id v61 = (void *)sub_1C2A9DCF8();
              swift_bridgeObjectRelease();
              id v33 = objc_msgSend(v60, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v61, 0x8000, *MEMORY[0x1E4FB27B0]);

              if (byte_1EA31EF08 != 1) {
                goto LABEL_102;
              }
LABEL_78:
              id v114 = (id)qword_1EBB907C8;
              double v115 = (void *)sub_1C2A9E2D8();
              objc_msgSend(v114, sel_setObject_forKey_, v33, v115);

LABEL_101:
              goto LABEL_102;
            }
            goto LABEL_102;
          }
LABEL_91:
          unsigned int v132 = self;
          sub_1C2A9DD28();
          id v133 = v26;
          double v115 = (void *)sub_1C2A9DCF8();
          swift_bridgeObjectRelease();
          id v134 = objc_msgSend(v132, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v115, 0x8000, *MEMORY[0x1E4FB27B0]);
LABEL_100:
          id v33 = v134;
          goto LABEL_101;
        }
        if (byte_1EA31EF08 == 1)
        {
          uint64_t v85 = qword_1EBB91258;
          id v86 = v26;
          if (v85 != -1) {
            swift_once();
          }
          uint64_t v87 = (void *)qword_1EBB907C8;
          sub_1C2A29804();
          id v88 = v87;
          uint64_t v89 = (void *)sub_1C2A9E2D8();
          id v33 = objc_msgSend(v88, sel_objectForKey_, v89);

          if (!v33)
          {
LABEL_77:
            uint64_t v112 = self;
            sub_1C2A9DD28();
            double v113 = (void *)sub_1C2A9DCF8();
            swift_bridgeObjectRelease();
            id v33 = objc_msgSend(v112, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v113, 32770, *MEMORY[0x1E4FB27B0]);

            if (byte_1EA31EF08 != 1) {
              goto LABEL_102;
            }
            goto LABEL_78;
          }
          goto LABEL_102;
        }
LABEL_99:
        uint64_t v138 = self;
        sub_1C2A9DD28();
        id v139 = v26;
        double v115 = (void *)sub_1C2A9DCF8();
        swift_bridgeObjectRelease();
        id v134 = objc_msgSend(v138, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v115, 32770, *MEMORY[0x1E4FB27B0]);
        goto LABEL_100;
      }
      if (byte_1EA31EF08 != 1) {
        goto LABEL_99;
      }
      uint64_t v80 = qword_1EBB91258;
      id v81 = v26;
      if (v80 != -1) {
        swift_once();
      }
      uint64_t v82 = (void *)qword_1EBB907C8;
      sub_1C2A29804();
      id v83 = v82;
      CGFloat v84 = (void *)sub_1C2A9E2D8();
      id v33 = objc_msgSend(v83, sel_objectForKey_, v84);

      if (!v33)
      {
LABEL_71:
        uint64_t v105 = self;
        sub_1C2A9DD28();
        uint64_t v106 = (void *)sub_1C2A9DCF8();
        swift_bridgeObjectRelease();
        id v33 = objc_msgSend(v105, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v106, 32770, *MEMORY[0x1E4FB27B0]);

        if (byte_1EA31EF08 != 1) {
          goto LABEL_102;
        }
        goto LABEL_78;
      }
LABEL_102:
      objc_msgSend(v26, sel_setFont_, v33);

LABEL_109:
      type metadata accessor for UILayoutPriority(0);
      sub_1C2998268();
      uint64_t v142 = v6;
      sub_1C2A9CFF8();
      LODWORD(v143) = v148;
      objc_msgSend(v142, sel_setContentCompressionResistancePriority_forAxis_, 1, v143);

      int v144 = v142;
      sub_1C2A9CFF8();
      LODWORD(v145) = v148;
      objc_msgSend(v144, sel_setContentCompressionResistancePriority_forAxis_, 0, v145);

      sub_1C2A29B50(v27, type metadata accessor for HighlightCalendarDayViewModel);
      return v144;
  }
}

uint64_t DiagramAxisOnly.__allocating_init(config:data:hbxViewControllerFactory:customMetricsFactory:)(unsigned int *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  DiagramAxisOnly.init(config:data:hbxViewControllerFactory:customMetricsFactory:)(a1, a2, a3, a4);
  return v8;
}

double sub_1C2A2B788()
{
  return sub_1C293CBC4();
}

double sub_1C2A2B7AC()
{
  uint64_t v1 = *(void *)(v0 + 40);
  double v2 = 0.0;
  if ((*(unsigned char *)(v1 + 144) & 1) == 0) {
    double v2 = *(double *)(v1 + 112);
  }
  uint64_t v3 = *(void *)(v1 + 40);
  if (v3
    && (unint64_t)*(unsigned __int8 *)(v1 + 68) << 32 != 0x300000000
    && (*(_DWORD *)(v1 + 72) & 0xFF000000) != 0x2000000)
  {
    swift_bridgeObjectRetain();
    DiagramConfiguration.TextAttributes.toTextAttributes()();
    uint64_t v4 = sub_1C295AEB0(v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C295AE6C(v4);
    swift_bridgeObjectRelease();
  }
  if ((*(void *)(v1 + 64) & 0xFE00000000 | 0x100000000) != 0x300000000)
  {
    DiagramConfiguration.TextAttributes.toTextAttributes()();
    id v5 = (void *)sub_1C2A9DCF8();
    type metadata accessor for Key(0);
    sub_1C2942D7C();
    uint64_t v6 = (void *)sub_1C2A9DC58();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_sizeWithAttributes_, v6);
  }
  return v2;
}

void (*sub_1C2A2B9BC())(CGContext *a1, CGFloat *a2, double a3, double a4)
{
  return sub_1C2A2C020;
}

void sub_1C2A2B9FC(CGContext *a1, CGFloat *a2, uint64_t a3, double a4, double a5)
{
  CGFloat v8 = *a2;
  CGFloat v9 = a2[1];
  CGFloat v10 = a2[2];
  CGFloat v11 = a2[3];
  CGFloat v12 = a2[4];
  CGFloat v13 = a2[5];
  double v14 = a2[6];
  if (*(unsigned char *)(a3 + 34) == 1)
  {
    id v15 = objc_msgSend(self, sel_blackColor);
    id v16 = (CGColor *)objc_msgSend(v15, sel_CGColor);

    double v30 = a4;
    double v17 = sub_1C293CBC4();
    CGFloat v32 = v13;
    CGFloat v33 = v14;
    CGFloat v18 = v11;
    double v20 = v19;
    double v22 = v21;
    double v24 = v23;
    CGContextSetFillColorWithColor(a1, v16);
    v41.CGFloat a = v9;
    v41.CGFloat b = v10;
    v41.CGFloat c = v18;
    v41.CGFloat d = v12;
    v41.CGFloat tx = v32;
    v41.CGFloat ty = v33;
    v45.origin.CGFloat x = v17;
    v45.origin.CGFloat y = v20;
    v45.size.CGFloat width = v22;
    v45.size.CGFloat height = v24;
    CGRect v46 = CGRectApplyAffineTransform(v45, &v41);
    CGContextFillRect(a1, v46);
    v41.CGFloat a = v9;
    v41.CGFloat b = v10;
    v41.CGFloat c = v18;
    v41.CGFloat d = v12;
    v41.CGFloat tx = v32;
    v41.CGFloat ty = v33;
    v43.CGFloat x = v17;
    v43.CGFloat y = v20;
    CGPointApplyAffineTransform(v43, &v41);
    v44.CGFloat x = v17 + v22;
    a4 = v30;
    v41.CGFloat a = v9;
    v41.CGFloat b = v10;
    v44.CGFloat y = v20 + v24;
    CGFloat v11 = v18;
    CGFloat v13 = v32;
    double v14 = v33;
    v41.CGFloat c = v11;
    v41.CGFloat d = v12;
    v41.CGFloat tx = v32;
    v41.CGFloat ty = v33;
    CGPointApplyAffineTransform(v44, &v41);
    sub_1C2A2C0E4(a1);
    sub_1C2A2C0E4(a1);
  }
  uint64_t v25 = *(void *)(a3 + 40);
  uint64_t v26 = *(void *)(v25 + 64);
  if ((v26 & 0xFF00000000) != 0x300000000)
  {
    unint64_t v27 = *(unsigned int *)(v25 + 72) | ((unint64_t)*(unsigned __int16 *)(v25 + 76) << 32);
    if ((v26 & 0xFF00000000) != 0x200000000)
    {
      uint64_t v28 = *(void *)(v25 + 16);
      if (v28)
      {
        v41.CGFloat a = v8;
        v41.CGFloat b = v9;
        v41.CGFloat c = v10;
        v41.CGFloat d = v11;
        v41.CGFloat tx = v12;
        v41.CGFloat ty = v13;
        double v42 = v14;
        *(_WORD *)id v36 = v26;
        void v36[2] = BYTE2(v26);
        char v37 = BYTE3(v26);
        char v38 = BYTE4(v26) & 1;
        char v39 = BYTE5(v26);
        char v40 = BYTE6(v26);
        uint64_t v34 = v28;
        long long v35 = *(_OWORD *)(v25 + 24);
        swift_bridgeObjectRetain();
        sub_1C293A2D8(a1, &v41.a, v36, (CGFloat *)&v34, a4);
        swift_bridgeObjectRelease();
      }
    }
    if ((v27 & 0xFF000000) != 0x2000000)
    {
      uint64_t v29 = *(void *)(v25 + 40);
      if (v29)
      {
        v41.CGFloat a = v8;
        v41.CGFloat b = v9;
        v41.CGFloat c = v10;
        v41.CGFloat d = v11;
        v41.CGFloat tx = v12;
        v41.CGFloat ty = v13;
        double v42 = v14;
        v36[0] = HIBYTE(v26);
        *(_WORD *)&v36[1] = v27;
        char v37 = BYTE2(v27);
        char v38 = BYTE3(v27) & 1;
        char v39 = BYTE4(v27);
        char v40 = BYTE5(v27);
        uint64_t v34 = v29;
        long long v35 = *(_OWORD *)(v25 + 48);
        swift_bridgeObjectRetain();
        sub_1C2A065F8(a1, &v41.a, v36, &v34, a4, a5);
        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t DiagramAxisOnly.init(config:data:hbxViewControllerFactory:customMetricsFactory:)(unsigned int *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v7 = *a1;
  uint64_t v8 = *((char *)a1 + 14);
  uint64_t v9 = *((char *)a1 + 15);
  uint64_t v10 = *((char *)a1 + 16);
  uint64_t v11 = *((char *)a1 + 17);
  char v12 = *((unsigned char *)a1 + 18);
  int v13 = *((unsigned __int8 *)a1 + 6);
  uint64_t v14 = *((unsigned __int16 *)a1 + 2) | (v13 << 16);
  uint64_t v15 = v7 | (v14 << 32);
  uint64_t v16 = *(unsigned int *)((char *)a1 + 7);
  int v17 = *((unsigned __int8 *)a1 + 13);
  uint64_t v18 = *(unsigned __int16 *)((char *)a1 + 11) | (v17 << 16);
  unint64_t v19 = v16 | (v18 << 32);
  char v20 = *(unsigned char *)(a2 + 32);
  uint64_t v21 = *(void *)(a2 + 40);
  *(_DWORD *)(v4 + 16) = v7;
  *(unsigned char *)(v4 + 22) = v13;
  *(_WORD *)(v4 + 20) = v14;
  *(_DWORD *)(v4 + 23) = v16;
  *(unsigned char *)(v4 + 29) = v17;
  *(_WORD *)(v4 + 27) = v18;
  *(unsigned char *)(v4 + 30) = v8;
  *(unsigned char *)(v4 + 31) = v9;
  *(unsigned char *)(v4 + 32) = v10;
  *(unsigned char *)(v4 + 33) = v11;
  *(unsigned char *)(v4 + 34) = v12;
  uint64_t v22 = qword_1C2AADE70[v8];
  uint64_t v23 = qword_1C2AADE70[v9];
  uint64_t v24 = qword_1C2AADE70[v11];
  uint64_t v25 = qword_1C2AADE70[v10];
  long long v26 = *(_OWORD *)(a2 + 16);
  v39[0] = *(_OWORD *)a2;
  v39[1] = v26;
  char v40 = v20;
  uint64_t v41 = v21;
  __C::CGRect v44 = DiagramData.diagramBounds(forceNonZeroSize:)(0);
  double x = v44.origin.x;
  double y = v44.origin.y;
  double width = v44.size.width;
  double height = v44.size.height;
  swift_bridgeObjectRelease();
  v45.origin.double x = x;
  v45.origin.double y = y;
  v45.size.double width = width;
  v45.size.double height = height;
  if (CGRectGetWidth(v45) <= 0.0
    || (v46.origin.double x = x, v46.origin.y = y,
                          v46.size.double width = width,
                          v46.size.double height = height,
                          CGRectGetHeight(v46) <= 0.0))
  {
    if (width <= 0.0)
    {
      double width = 1.0;
      double v31 = 1.0;
      if (height > 0.0)
      {
        double v31 = height;
        double width = height / 1000000.0;
      }
    }
    else
    {
      double v31 = width / 1000000.0;
    }
  }
  else
  {
    double v31 = height;
  }
  unint64_t v36 = v15 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)v19 << 56);
  __int16 v38 = HIDWORD(v19) >> 8;
  int v37 = v19 >> 8;
  v42[0] = v23;
  v42[1] = v22;
  v42[2] = v23;
  v42[3] = v22;
  char v43 = 0;
  sub_1C2932CE8(a4, (uint64_t)v39);
  type metadata accessor for DiagramAxis();
  swift_allocObject();
  sub_1C2932820((uint64_t *)&v36, (uint64_t)v42, 0, 0, v24, v25, 0, a3, x, y, width, v31, (uint64_t)v39);
  uint64_t v33 = v32;
  sub_1C29433A8(a4);
  *(void *)(v5 + 40) = v33;
  return v5;
}

uint64_t DiagramAxisOnly.deinit()
{
  swift_release();
  return v0;
}

uint64_t DiagramAxisOnly.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

double sub_1C2A2BF90()
{
  return sub_1C293CBC4();
}

double sub_1C2A2BFB8()
{
  return sub_1C2A2B7AC();
}

void (*sub_1C2A2BFDC())(CGContext *a1, CGFloat *a2, double a3, double a4)
{
  return sub_1C2A2C020;
}

void sub_1C2A2C020(CGContext *a1, CGFloat *a2, double a3, double a4)
{
  sub_1C2A2B9FC(a1, a2, v4, a3, a4);
}

uint64_t type metadata accessor for DiagramAxisOnly()
{
  return self;
}

uint64_t method lookup function for DiagramAxisOnly(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DiagramAxisOnly);
}

uint64_t dispatch thunk of DiagramAxisOnly.modelSpace.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of DiagramAxisOnly.screenInsets.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DiagramAxisOnly.drawingBlock.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DiagramAxisOnly.__allocating_init(config:data:hbxViewControllerFactory:customMetricsFactory:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

void sub_1C2A2C0E4(CGContext *a1)
{
  id v2 = objc_msgSend(self, sel_whiteColor);
  color = (CGColor *)objc_msgSend(v2, sel_CGColor);

  sub_1C2A9E028();
  sub_1C2A9E038();
  sub_1C2A9E028();
  sub_1C2A9E038();
  sub_1C2A9E028();
  sub_1C2A9E038();
  sub_1C2A9E028();
  sub_1C2A9E038();
  CGContextSetStrokeColorWithColor(a1, color);
  CGContextStrokePath(a1);
}

uint64_t _s19HealthVisualization23LocalizationReplacementO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v6 = *(uint64_t *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (v5 == 1)
    {
      if (v9 == 1)
      {
        if (v2 == v6 && v3 == v7)
        {
          LOBYTE(v9) = 1;
          LOBYTE(v5) = 1;
          char v11 = 1;
        }
        else
        {
          char v11 = sub_1C2A9E8D8();
          LOBYTE(v9) = 1;
          LOBYTE(v5) = 1;
        }
        goto LABEL_26;
      }
LABEL_20:
      char v11 = 0;
      goto LABEL_26;
    }
    if (v9 != 2) {
      goto LABEL_20;
    }
    if (*(double *)&v2 == *(double *)&v6)
    {
      if (v3 == v7 && v4 == v8) {
        char v11 = 1;
      }
      else {
        char v11 = sub_1C2A9E8D8();
      }
    }
    else
    {
      char v11 = 0;
    }
    LOBYTE(v9) = 2;
    LOBYTE(v5) = 2;
  }
  else
  {
    if (*(unsigned char *)(a2 + 24)) {
      goto LABEL_20;
    }
    if (v2 == v6 && v3 == v7)
    {
      LOBYTE(v9) = 0;
      LOBYTE(v5) = 0;
      char v11 = 1;
    }
    else
    {
      char v11 = sub_1C2A9E8D8();
      LOBYTE(v9) = 0;
      LOBYTE(v5) = 0;
    }
  }
LABEL_26:
  sub_1C2960A0C(v6, v7, v8, v9);
  sub_1C2960A0C(v2, v3, v4, v5);
  sub_1C2960A2C(v2, v3, v4, v5);
  sub_1C2960A2C(v6, v7, v8, v9);
  return v11 & 1;
}

uint64_t destroy for LocalizationReplacement(uint64_t a1)
{
  return sub_1C2960A2C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for LocalizationReplacement(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1C2960A0C(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for LocalizationReplacement(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1C2960A0C(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C2960A2C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for LocalizationReplacement(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C2960A2C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizationReplacement(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizationReplacement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C2A2C590(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1C2A2C598(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LocalizationReplacement()
{
  return &type metadata for LocalizationReplacement;
}

uint64_t StatisticsInterval.dateComponents.getter@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      if (qword_1EBB92318 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1C2A9C468();
      uint64_t v4 = v3;
      uint64_t v5 = qword_1EBB91BF0;
      break;
    case 2:
      if (qword_1EBB8E230 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1C2A9C468();
      uint64_t v4 = v3;
      uint64_t v5 = qword_1EBB8DEB8;
      break;
    case 3:
      if (qword_1EBB8E118 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1C2A9C468();
      uint64_t v4 = v3;
      uint64_t v5 = qword_1EBB8DEE8;
      break;
    case 4:
      if (qword_1EBB8E238 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1C2A9C468();
      uint64_t v4 = v3;
      uint64_t v5 = qword_1EBB8DED0;
      break;
    default:
      if (qword_1EBB90258 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1C2A9C468();
      uint64_t v4 = v3;
      uint64_t v5 = qword_1EBB90270;
      break;
  }
  uint64_t v6 = __swift_project_value_buffer(v3, (uint64_t)v5);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v7(a2, v6, v4);
}

uint64_t StatisticsInterval.calendarComponent.getter@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4F27BF0];
      break;
    case 2:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4F27BC0];
      break;
    case 3:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4F27C30];
      break;
    case 4:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4F27C20];
      break;
    default:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4F27C10];
      break;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_1C2A9C858();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  return v6(a2, v4, v5);
}

void *static StatisticsInterval.allCases.getter()
{
  return &unk_1F1DEA988;
}

uint64_t StatisticsInterval.rawValue.getter(char a1)
{
  uint64_t result = 0x72756F48656E6FLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x796144656E6FLL;
      break;
    case 2:
      uint64_t result = 0x6B656557656E6FLL;
      break;
    case 3:
      uint64_t result = 0x68746E6F4D656E6FLL;
      break;
    case 4:
      uint64_t result = 0x72616559656E6FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2A2C940()
{
  return sub_1C2A9E9E8();
}

uint64_t sub_1C2A2CA2C()
{
  sub_1C2A9DD78();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2A2CB00()
{
  return sub_1C2A9E9E8();
}

uint64_t sub_1C2A2CBE8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s19HealthVisualization18StatisticsIntervalO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1C2A2CC18(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x72756F48656E6FLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x796144656E6FLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x6B656557656E6FLL;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x68746E6F4D656E6FLL;
      a1[1] = 0xE800000000000000;
      break;
    case 4:
      *a1 = 0x72616559656E6FLL;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C2A2CCC8()
{
  return sub_1C2A9DE58();
}

uint64_t sub_1C2A2CD28()
{
  return sub_1C2A9DE38();
}

void sub_1C2A2CD78(void *a1@<X8>)
{
  *a1 = &unk_1F1DEA9B0;
}

uint64_t sub_1C2A2CD88(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 0x72756F48656E6FLL;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x72756F48656E6FLL;
  switch(v3)
  {
    case 1:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v5 = 0x796144656E6FLL;
      break;
    case 2:
      uint64_t v5 = 0x6B656557656E6FLL;
      break;
    case 3:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v5 = 0x68746E6F4D656E6FLL;
      break;
    case 4:
      uint64_t v5 = 0x72616559656E6FLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x796144656E6FLL) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      if (v5 != 0x6B656557656E6FLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x68746E6F4D656E6FLL;
      goto LABEL_12;
    case 4:
      if (v5 != 0x72616559656E6FLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1C2A9E8D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

id StatisticsInterval.unit.getter(char a1)
{
  switch(a1)
  {
    case 1:
      id v1 = objc_msgSend(self, sel_dayUnit);
      goto LABEL_4;
    case 2:
    case 3:
    case 4:
      uint64_t v3 = (void *)sub_1C2A9DCF8();
      id v4 = objc_msgSend(self, sel_unitFromString_, v3);

      id result = v4;
      break;
    default:
      id v1 = objc_msgSend(self, sel_hourUnit);
LABEL_4:
      id result = v1;
      break;
  }
  return result;
}

uint64_t StatisticsInterval.feedItemTimeScope.getter@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4F671D8];
      break;
    case 2:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4F671E8];
      break;
    case 3:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4F671F8];
      break;
    case 4:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4F671F0];
      break;
    default:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4F671E0];
      break;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_1C2A9C978();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  return v6(a2, v4, v5);
}

uint64_t StatisticsInterval.anchorDate.getter@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  char v2 = 0;
  switch((char)result)
  {
    case 1:
      break;
    case 2:
    case 3:
    case 4:
      char v2 = result;
      break;
    default:
      sub_1C2A9E628();
      __break(1u);
      JUMPOUT(0x1C2A2D208);
  }
  *a2 = v2;
  return result;
}

uint64_t _s19HealthVisualization18StatisticsIntervalO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1C2A9E6E8();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C2A2D26C()
{
  unint64_t result = qword_1EBB92428;
  if (!qword_1EBB92428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB92428);
  }
  return result;
}

unint64_t sub_1C2A2D2C4()
{
  unint64_t result = qword_1EA31EEC8;
  if (!qword_1EA31EEC8)
  {
    sub_1C2A2D31C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EEC8);
  }
  return result;
}

void sub_1C2A2D31C()
{
  if (!qword_1EA31EED0)
  {
    unint64_t v0 = sub_1C2A9DEF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31EED0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for StatisticsInterval(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2A2D440);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StatisticsInterval()
{
  return &type metadata for StatisticsInterval;
}

unint64_t sub_1C2A2D478()
{
  unint64_t result = qword_1EBB92430;
  if (!qword_1EBB92430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB92430);
  }
  return result;
}

id HKWorkout.makeEnergyBurnedAttributedText(healthStore:unitPreferenceController:valueFont:unitFont:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_1C296FC38();
  id v9 = (id)*MEMORY[0x1E4F2A5C0];
  unsigned __int8 v10 = (void *)MEMORY[0x1C8763F70]();
  id result = objc_msgSend(a1, sel_displayTypeController);
  if (result)
  {
    char v12 = result;
    id v13 = objc_msgSend(result, sel_displayTypeForObjectType_, v10);

    if (v13)
    {
      id v14 = objc_msgSend(a2, sel_unitForDisplayType_, v13);
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v16 = (void *)MEMORY[0x1C8763F70](v9);
        id v17 = objc_msgSend(v4, sel_statisticsForType_, v16);

        if (!v17)
        {

          return v17;
        }
        id v18 = objc_msgSend(v17, sel_sumQuantity);

        if (v18)
        {
          objc_msgSend(v18, sel_doubleValueForUnit_, v15);

          id v19 = objc_msgSend(v13, sel_hk_valueFormatterForUnit_, v15);
          char v20 = (void *)sub_1C2A9C8D8();
          id v17 = objc_msgSend(v19, sel_attributedStringFromValue_displayType_unitController_valueFont_unitFont_formatForChart_, v20, v13, a2, a3, a4, 1);

          return v17;
        }
      }
      else
      {
      }
    }
    else
    {
    }
    return 0;
  }
  __break(1u);
  return result;
}

id HKWorkout.makeDistanceAttributedText(healthStore:unitPreferenceController:valueFont:unitFont:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v10 = objc_msgSend(v4, sel_workoutActivityType);
  char v11 = (void **)MEMORY[0x1E4F2A7B0];
  switch((unint64_t)v10)
  {
    case 0xDuLL:
      break;
    case 0x2EuLL:
      char v11 = (void **)MEMORY[0x1E4F2A7D8];
      break;
    case 0x46uLL:
    case 0x47uLL:
      char v11 = (void **)MEMORY[0x1E4F2A7E8];
      break;
    default:
      char v11 = (void **)MEMORY[0x1E4F2A7E0];
      break;
  }
  char v12 = *v11;
  sub_1C296FC38();
  id v13 = (void *)MEMORY[0x1C8763F70](v12);
  id v14 = objc_msgSend(a1, sel_displayTypeController);
  if (!v14)
  {
    __break(1u);
    JUMPOUT(0x1C2A2D8E0);
  }
  uint64_t v15 = v14;
  id v16 = objc_msgSend(v14, sel_displayTypeForObjectType_, v13);

  if (!v16)
  {

    return 0;
  }
  id v17 = objc_msgSend(a2, sel_unitForDisplayType_, v16);
  if (!v17)
  {

    return 0;
  }
  id v18 = v17;
  objc_msgSend(v5, sel__totalDistanceIncludingAllTypesForUnit_, v17);
  if (v19 <= 2.22044605e-16)
  {

    return 0;
  }
  id v20 = objc_msgSend(v16, sel_hk_valueFormatterForUnit_, v18);
  uint64_t v21 = (void *)sub_1C2A9C8D8();
  id v22 = objc_msgSend(v20, sel_attributedStringFromValue_displayType_unitController_valueFont_unitFont_formatForChart_, v21, v16, a2, a3, a4, 1);

  return v22;
}

__C::HKQuantityTypeIdentifier __swiftcall HKWorkout.relevantDistanceIdentifier()()
{
  uint64_t v1 = (char *)objc_msgSend(v0, sel_workoutActivityType);
  char v2 = (void **)MEMORY[0x1E4F2A7E0];
  if (v1 == (char *)13) {
    char v2 = (void **)MEMORY[0x1E4F2A7B0];
  }
  if (v1 == (char *)46) {
    char v2 = (void **)MEMORY[0x1E4F2A7D8];
  }
  if ((unint64_t)(v1 - 70) < 2) {
    char v2 = (void **)MEMORY[0x1E4F2A7E8];
  }
  int v3 = *v2;
  return (__C::HKQuantityTypeIdentifier)v3;
}

HKUnit __swiftcall HKWorkout.preferredDistanceUnit(healthStore:)(HKHealthStore healthStore)
{
  id v2 = [(objc_class *)healthStore.super.isa viewControllerFactory];
  id v3 = objc_msgSend(v1, sel_workoutActivityType);
  unsigned int v4 = (void **)MEMORY[0x1E4F2A7B0];
  switch((unint64_t)v3)
  {
    case 0xDuLL:
      break;
    case 0x2EuLL:
      unsigned int v4 = (void **)MEMORY[0x1E4F2A7D8];
      break;
    case 0x46uLL:
    case 0x47uLL:
      unsigned int v4 = (void **)MEMORY[0x1E4F2A7E8];
      break;
    default:
      unsigned int v4 = (void **)MEMORY[0x1E4F2A7E0];
      break;
  }
  uint64_t v5 = *v4;
  sub_1C296FC38();
  unsigned int v6 = (void *)MEMORY[0x1C8763F70](v5);
  id v7 = objc_msgSend(v2, sel_preferredUnitForType_, v6);

  return (HKUnit)v7;
}

id HKWorkout.makeDurationAttributedText(healthStore:unitPreferenceController:valueFont:unitFont:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v10 = objc_msgSend(self, sel_hourUnit);
  id result = objc_msgSend(a1, sel_displayTypeController);
  if (result)
  {
    char v12 = result;
    id v13 = objc_msgSend(v5, sel_sampleType);
    id v14 = objc_msgSend(v12, sel_displayTypeForObjectType_, v13);

    if (v14)
    {
      id v15 = objc_msgSend(v14, sel_hk_valueFormatterForUnit_, v10);
      objc_msgSend(v5, sel_duration);
      id v16 = (void *)sub_1C2A9C8D8();
      id v17 = objc_msgSend(v15, sel_attributedStringFromValue_displayType_unitController_valueFont_unitFont_formatForChart_, v16, v14, a2, a3, a4, 1);
    }
    else
    {

      return 0;
    }
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

HealthVisualization::CorrelatedStatisticsQueryConfiguration __swiftcall CorrelatedStatisticsQueryConfiguration.init(correlatedTypeIdentifiers:statisticsQueryConfig:)(Swift::OpaquePointer correlatedTypeIdentifiers, HealthVisualization::StatisticsQueryConfiguration statisticsQueryConfig)
{
  char v3 = **(unsigned char **)&statisticsQueryConfig.dateRange;
  uint64_t v4 = *(void *)(*(void *)&statisticsQueryConfig.dateRange + 8);
  __int16 v5 = *(_WORD *)(*(void *)&statisticsQueryConfig.dateRange + 16);
  *(Swift::OpaquePointer *)uint64_t v2 = correlatedTypeIdentifiers;
  *(unsigned char *)(v2 + 8) = v3;
  *(void *)(v2 + 16) = v4;
  *(_WORD *)(v2 + 24) = v5;
  result.statisticsQueryConfig = statisticsQueryConfig;
  result.correlatedTypeIdentifiers = correlatedTypeIdentifiers;
  return result;
}

uint64_t CorrelatedStatisticsQueryConfiguration.correlatedTypeIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CorrelatedStatisticsQueryConfiguration.statisticsQueryConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  __int16 v3 = *(_WORD *)(v1 + 24);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 8);
  *(void *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C2A2DDC0()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000019;
  }
}

uint64_t sub_1C2A2DE00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A2EA84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A2DE28(uint64_t a1)
{
  unint64_t v2 = sub_1C2A2E590();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A2DE64(uint64_t a1)
{
  unint64_t v2 = sub_1C2A2E590();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CorrelatedStatisticsQueryConfiguration.encode(to:)(void *a1)
{
  sub_1C2A2E5E4(0, &qword_1EBB8F9D0, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned __int8 v8 = (char *)&v12 - v7;
  uint64_t v9 = *v1;
  int v20 = *((unsigned __int8 *)v1 + 8);
  uint64_t v15 = v1[2];
  int v10 = *((unsigned __int8 *)v1 + 24);
  int v13 = *((unsigned __int8 *)v1 + 25);
  int v14 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A2E590();
  sub_1C2A9EA18();
  uint64_t v16 = v9;
  char v21 = 0;
  sub_1C29A9864();
  sub_1C2A2E648(&qword_1EBB8F7F8);
  sub_1C2A9E868();
  if (!v2)
  {
    LOBYTE(v16) = v20;
    uint64_t v17 = v15;
    char v18 = v14;
    char v19 = v13;
    char v21 = 1;
    sub_1C2A01E6C();
    sub_1C2A9E868();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t CorrelatedStatisticsQueryConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C2A2E5E4(0, &qword_1EBB921A8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A2E590();
  sub_1C2A9EA08();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_1C29A9864();
  char v19 = 0;
  sub_1C2A2E648(&qword_1EBB920B8);
  sub_1C2A9E7A8();
  uint64_t v10 = v16;
  char v19 = 1;
  sub_1C2A02218();
  swift_bridgeObjectRetain();
  sub_1C2A9E7A8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v11 = v16;
  uint64_t v12 = v17;
  __int16 v13 = v18;
  *(void *)a2 = v10;
  *(unsigned char *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v12;
  *(_WORD *)(a2 + 24) = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2A2E324@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CorrelatedStatisticsQueryConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C2A2E33C(void *a1)
{
  return CorrelatedStatisticsQueryConfiguration.encode(to:)(a1);
}

uint64_t CorrelatedStatisticsQueryConfiguration.correlatedQuantityTypes.getter()
{
  uint64_t v1 = *v0;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2)
  {
    sub_1C296FC38();
    ObjCClassFromMetadatCGFloat a = (void *)swift_getObjCClassFromMetadata();
    swift_bridgeObjectRetain_n();
    uint64_t v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = (void *)sub_1C2A9DCF8();
      id v6 = objc_msgSend(ObjCClassFromMetadata, sel_quantityTypeForIdentifier_, v5);
      swift_bridgeObjectRelease();

      if (v6)
      {
        MEMORY[0x1C8763D10]();
        if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C2A9DEB8();
        }
        sub_1C2A9DEE8();
        sub_1C2A9DEA8();
      }
      v4 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    uint64_t v7 = v9;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t _s19HealthVisualization38CorrelatedStatisticsQueryConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 24);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 25);
  char v6 = *(unsigned char *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 25);
  if (sub_1C29634E4(*(void **)a1, *(void **)a2))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_1C29544B0(v2, v6) & 1) != 0 && (sub_1C2963A48(v3, v7) & 1) != 0 && (sub_1C29546FC(v4, v8))
    {
      char v10 = sub_1C2954904(v5, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v10) {
        return 1;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

unint64_t sub_1C2A2E590()
{
  unint64_t result = qword_1EBB91F98;
  if (!qword_1EBB91F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91F98);
  }
  return result;
}

void sub_1C2A2E5E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C2A2E590();
    unint64_t v7 = a3(a1, &type metadata for CorrelatedStatisticsQueryConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C2A2E648(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C29A9864();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeWithCopy for CorrelatedStatisticsQueryConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CorrelatedStatisticsQueryConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CorrelatedStatisticsQueryConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CorrelatedStatisticsQueryConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 26)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CorrelatedStatisticsQueryConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 26) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CorrelatedStatisticsQueryConfiguration()
{
  return &type metadata for CorrelatedStatisticsQueryConfiguration;
}

unsigned char *storeEnumTagSinglePayload for CorrelatedStatisticsQueryConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2A2E944);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CorrelatedStatisticsQueryConfiguration.CodingKeys()
{
  return &type metadata for CorrelatedStatisticsQueryConfiguration.CodingKeys;
}

unint64_t sub_1C2A2E980()
{
  unint64_t result = qword_1EA31EED8;
  if (!qword_1EA31EED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EED8);
  }
  return result;
}

unint64_t sub_1C2A2E9D8()
{
  unint64_t result = qword_1EBB91FA8;
  if (!qword_1EBB91FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91FA8);
  }
  return result;
}

unint64_t sub_1C2A2EA30()
{
  unint64_t result = qword_1EBB91FA0;
  if (!qword_1EBB91FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB91FA0);
  }
  return result;
}

uint64_t sub_1C2A2EA84(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x80000001C2AB9EB0 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C2AB9ED0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static ActivitySnidgetCurrentValueStringSupport.numericalFont.getter()
{
  return sub_1C2A9E258();
}

uint64_t static ActivitySnidgetCurrentValueStringSupport.valueLabelTextFont.getter()
{
  return sub_1C2A2EC48();
}

uint64_t static ActivitySnidgetCurrentValueStringSupport.supplementaryLabelFont.getter()
{
  return sub_1C2A2EC48();
}

uint64_t static ActivitySnidgetCurrentValueStringSupport.unitFont.getter()
{
  return sub_1C2A2EC48();
}

uint64_t static ActivitySnidgetCurrentValueStringSupport.pausedRingTitleFont.getter()
{
  return sub_1C2A2EC48();
}

uint64_t sub_1C2A2EC48()
{
  return sub_1C2A9E258();
}

uint64_t static ActivitySnidgetCurrentValueStringSupport.pausedRingDetailFont.getter()
{
  return sub_1C2A9E258();
}

ValueMetadata *type metadata accessor for ActivitySnidgetCurrentValueStringSupport()
{
  return &type metadata for ActivitySnidgetCurrentValueStringSupport;
}

uint64_t static ActivitySummaryQueryConfiguration.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1C2A2ED04(uint64_t a1)
{
  unint64_t v2 = sub_1C2A2EEE4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A2ED40(uint64_t a1)
{
  unint64_t v2 = sub_1C2A2EEE4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ActivitySummaryQueryConfiguration.encode(to:)(void *a1)
{
  sub_1C2A2EE88();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A2EEE4();
  sub_1C2A9EA18();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1C2A2EE88()
{
  if (!qword_1EA31EEE0)
  {
    sub_1C2A2EEE4();
    unint64_t v0 = sub_1C2A9E878();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA31EEE0);
    }
  }
}

unint64_t sub_1C2A2EEE4()
{
  unint64_t result = qword_1EA31EEE8;
  if (!qword_1EA31EEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EEE8);
  }
  return result;
}

uint64_t ActivitySummaryQueryConfiguration.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1C2A2EF60(void *a1)
{
  sub_1C2A2EE88();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A2EEE4();
  sub_1C2A9EA18();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for ActivitySummaryQueryConfiguration()
{
  return &type metadata for ActivitySummaryQueryConfiguration;
}

ValueMetadata *type metadata accessor for ActivitySummaryQueryConfiguration.CodingKeys()
{
  return &type metadata for ActivitySummaryQueryConfiguration.CodingKeys;
}

unint64_t sub_1C2A2F090()
{
  unint64_t result = qword_1EA31EEF0;
  if (!qword_1EA31EEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EEF0);
  }
  return result;
}

unint64_t sub_1C2A2F0E8()
{
  unint64_t result = qword_1EA31EEF8;
  if (!qword_1EA31EEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EEF8);
  }
  return result;
}

uint64_t CorrelatedStatisticsCollectionQueryOperation.result.getter()
{
  swift_retain();
  sub_1C2A9C9B8();
  swift_release();
  return v1;
}

uint64_t sub_1C2A2F18C@<X0>(uint64_t a1@<X8>)
{
  swift_retain();
  sub_1C2A9C9B8();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_1C2A2F1EC(uint64_t a1)
{
  id v1 = *(id *)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  sub_1C296276C(*(id *)a1, v3);
  swift_retain();
  sub_1C2A9C9C8();
  sub_1C2962A14(v1, v3);
  return swift_release();
}

id CorrelatedStatisticsCollectionQueryOperation.__allocating_init(correlationType:correlatedQuantityTypes:configuration:configurationOverrides:name:queryQualityOfService:healthStore:environment:resultHandler:)(void *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, char a9, uint64_t a10, uint64_t a11)
{
  id v18 = objc_allocWithZone(v11);
  id v19 = sub_1C2A30930(a1, a2, a3, a4, a5, a6, a7, a8, a9 & 1, a10, a11);

  swift_release();
  return v19;
}

id CorrelatedStatisticsCollectionQueryOperation.init(correlationType:correlatedQuantityTypes:configuration:configurationOverrides:name:queryQualityOfService:healthStore:environment:resultHandler:)(void *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, char a9, uint64_t a10, uint64_t a11)
{
  id v13 = sub_1C2A30930(a1, a2, a3, a4, a5, a6, a7, a8, a9 & 1, a10, a11);

  swift_release();
  return v13;
}

Swift::Void __swiftcall CorrelatedStatisticsCollectionQueryOperation.main()()
{
  uint64_t v47 = sub_1C2A9CF58();
  uint64_t v1 = *(void *)(v47 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  MEMORY[0x1F4188790](v47);
  CGRect v45 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v44 - v4;
  sub_1C2962438();
  unsigned int v6 = (void *)swift_allocError();
  *unint64_t v7 = 2;
  unint64_t v48 = v6;
  char v49 = 1;
  swift_retain();
  sub_1C2A9C9C8();

  swift_release();
  v8._uint64_t countAndFlagsBits = 0x676E696E6E7572;
  v8._object = (void *)0xE700000000000000;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v8, v9);
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EBB91C60;
  char v11 = v0;
  sub_1C2A9CF48();
  sub_1C2A9E1B8();
  sub_1C29624A4();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C2AA6B00;
  id v13 = objc_msgSend(*(id *)&v11[qword_1EBB8E060], sel_identifier);
  uint64_t v14 = sub_1C2A9DD28();
  uint64_t v16 = v15;

  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 64) = sub_1C296250C();
  *(void *)(v12 + 32) = v14;
  *(void *)(v12 + 40) = v16;
  sub_1C2A9CF28();
  swift_bridgeObjectRelease();
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v18 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  id v19 = v45;
  __C::CGRect v44 = v5;
  int v20 = v5;
  uint64_t v21 = v47;
  v18(v45, v20, v47);
  uint64_t v22 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v46 = v1;
  uint64_t v23 = (v22 + 16) & ~v22;
  uint64_t v24 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v24 + v23, v19, v21);
  *(void *)(v24 + ((v2 + v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = v17;
  aBlock[4] = sub_1C2A30D10;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C296D070;
  aBlock[3] = &block_descriptor_12;
  uint64_t v25 = _Block_copy(aBlock);
  long long v26 = self;
  swift_retain();
  id v27 = objc_msgSend(v26, sel_blockOperationWithBlock_, v25);
  _Block_release(v25);
  swift_release();
  swift_release();
  uint64_t v28 = v11;
  unint64_t v29 = swift_bridgeObjectRetain();
  unint64_t v30 = sub_1C2A305A8(v29, v28);
  swift_bridgeObjectRelease();

  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1C2A9E648();
    if (!v31) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v31) {
      goto LABEL_12;
    }
  }
  if (v31 < 1)
  {
    __break(1u);
    goto LABEL_28;
  }
  for (uint64_t i = 0; i != v31; ++i)
  {
    if ((v30 & 0xC000000000000001) != 0) {
      id v33 = (id)MEMORY[0x1C8764390](i, v30);
    }
    else {
      id v33 = *(id *)(v30 + 8 * i + 32);
    }
    uint64_t v34 = v33;
    objc_msgSend(v27, sel_addDependency_, v33);
  }
LABEL_12:
  swift_bridgeObjectRelease();
  if (v30 >> 62)
  {
    sub_1C29376D4(0, (unint64_t *)&qword_1EBB920F0);
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C2A9E638();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C2A9E8E8();
    sub_1C29376D4(0, (unint64_t *)&qword_1EBB920F0);
    uint64_t v35 = v30;
  }
  swift_bridgeObjectRelease();
  aBlock[0] = v35;
  id v36 = v27;
  uint64_t v37 = swift_bridgeObjectRetain();
  MEMORY[0x1C8763D10](v37);
  if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C2A9DEB8();
  }
  sub_1C2A9DEE8();
  sub_1C2A9DEA8();
  unint64_t v38 = aBlock[0];
  swift_bridgeObjectRelease();
  if (!(v38 >> 62))
  {
    uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v39) {
      goto LABEL_19;
    }
LABEL_26:
    swift_bridgeObjectRelease_n();
    objc_msgSend(*(id *)&v28[qword_1EBB8E058], sel_setSuspended_, 0);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v44, v47);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_1C2A9E648();
  if (!v39) {
    goto LABEL_26;
  }
LABEL_19:
  if (v39 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = *(void **)&v28[qword_1EBB8E058];
    do
    {
      if ((v38 & 0xC000000000000001) != 0) {
        id v42 = (id)MEMORY[0x1C8764390](v40, v38);
      }
      else {
        id v42 = *(id *)(v38 + 8 * v40 + 32);
      }
      char v43 = v42;
      ++v40;
      objc_msgSend(v41, sel_addOperation_, v42);
    }
    while (v39 != v40);
    goto LABEL_26;
  }
LABEL_28:
  __break(1u);
}

void sub_1C2A2FA50(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  sub_1C2A9E1A8();
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  sub_1C2A9CF38();
  swift_beginAccess();
  uint64_t v3 = (char *)MEMORY[0x1C87657D0](v2);
  if (v3)
  {
    uint64_t v4 = v3;
    if (objc_msgSend(v3, sel_isCancelled))
    {
      v5._object = (void *)0x80000001C2AB6030;
      v5._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v6._uint64_t countAndFlagsBits = 0;
      v6._object = (void *)0xE000000000000000;
      NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v5, v6);
LABEL_7:

      return;
    }
    if (objc_msgSend(v4, sel_isFinished)) {
      goto LABEL_7;
    }
    swift_retain();
    sub_1C2A9C9B8();
    uint64_t v7 = swift_release();
    Swift::String v8 = *(void (**)(uint64_t, void))&v4[qword_1EBB9EEF0];
    if (v8)
    {
      swift_retain();
      v8(v9, 0);
      uint64_t v7 = sub_1C29B34B0((uint64_t)v8);
    }
    MEMORY[0x1F4188790](v7);
    sub_1C2A9CA08();

    swift_bridgeObjectRelease();
  }
}

void sub_1C2A2FC28(void *a1)
{
  id v1 = a1;
  CorrelatedStatisticsCollectionQueryOperation.main()();
}

Swift::Void __swiftcall CorrelatedStatisticsCollectionQueryOperation.cleanUp()()
{
  v1._uint64_t countAndFlagsBits = 0x676E696E61656C63;
  v1._object = (void *)0xEB00000000707520;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v1, v2);
  if (objc_msgSend(v0, sel_isCancelled))
  {
    sub_1C2962438();
    uint64_t v3 = (void *)swift_allocError();
    *uint64_t v4 = 3;
    MEMORY[0x1F4188790](v3);
    swift_retain();
    sub_1C2A9C9C8();

    swift_release();
  }
  Swift::String v5 = &v0[qword_1EBB9EEF0];
  uint64_t v6 = *(void *)&v0[qword_1EBB9EEF0];
  *(void *)Swift::String v5 = 0;
  *((void *)v5 + 1) = 0;
  sub_1C29B34B0(v6);
  objc_msgSend(*(id *)&v0[qword_1EBB8E058], sel_cancelAllOperations);
}

id CorrelatedStatisticsCollectionQueryOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CorrelatedStatisticsCollectionQueryOperation.init()()
{
}

void sub_1C2A2FE10()
{
}

void sub_1C2A2FE40()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2A30FCC(v0 + qword_1EBB9EF00);

  swift_release();
  sub_1C29B34B0(*(void *)(v0 + qword_1EBB9EEF0));
  id v1 = *(void **)(v0 + qword_1EBB8E058);
}

id CorrelatedStatisticsCollectionQueryOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C2A2FF30(uint64_t a1)
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2A30FCC(a1 + qword_1EBB9EF00);

  swift_release();
  sub_1C29B34B0(*(void *)(a1 + qword_1EBB9EEF0));
  objc_super v2 = *(void **)(a1 + qword_1EBB8E058);
}

uint64_t sub_1C2A2FFF4@<X0>(uint64_t a1@<X8>)
{
  swift_retain();
  sub_1C2A9C9B8();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

void sub_1C2A30054(void *a1, char a2, uint64_t a3, void *a4)
{
  uint64_t v7 = a3 + 16;
  swift_beginAccess();
  Swift::String v8 = (char *)MEMORY[0x1C87657D0](v7);
  if (v8)
  {
    uint64_t v9 = v8;
    if (objc_msgSend(v8, sel_isCancelled))
    {
      sub_1C2A9E4D8();
      id v10 = objc_msgSend(a4, sel_identifier);
      sub_1C2A9DD28();

      sub_1C2A9DDB8();
      swift_bridgeObjectRelease();
      sub_1C2A9DDB8();
      v11._uint64_t countAndFlagsBits = 0;
      v12._object = (void *)0x80000001C2AB6030;
      v12._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v11._object = (void *)0xE000000000000000;
      NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v12, v11);

      swift_bridgeObjectRelease();
    }
    else
    {
      id v13 = objc_msgSend(v9, sel_isFinished);
      if ((v13 & 1) == 0)
      {
        if (a2)
        {
          swift_getErrorValue();
          id v14 = a1;
          v15._uint64_t countAndFlagsBits = sub_1C2A9E938();
          v16._uint64_t countAndFlagsBits = 0;
          v16._object = (void *)0xE000000000000000;
          NSOperation.logErrorString(_:withInfo:)(v15, v16);
          swift_bridgeObjectRelease();
          uint64_t v17 = *(void (**)(void *, uint64_t))&v9[qword_1EBB9EEF0];
          if (v17)
          {
            sub_1C29B9468(a1);
            sub_1C296EE5C((uint64_t)v17);
            v17(a1, 1);
            id v18 = (id)sub_1C29B34B0((uint64_t)v17);
          }
          else
          {
            id v18 = a1;
          }
          MEMORY[0x1F4188790](v18);
          sub_1C2A9CA08();
          sub_1C296FAA4(a1);
        }
        else
        {
          MEMORY[0x1F4188790](v13);
          sub_1C29B9468(a1);
          swift_retain();
          sub_1C2A9C9C8();
          swift_release();
        }
        sub_1C296FAA4(a1);
        sub_1C2A30334((uint64_t)v9, a4);
      }
    }
  }
}

uint64_t sub_1C2A30334(uint64_t a1, void *a2)
{
  sub_1C2A9E4D8();
  id v3 = objc_msgSend(a2, sel_identifier);
  sub_1C2A9DD28();

  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  sub_1C2A9DDB8();
  v4._uint64_t countAndFlagsBits = 0;
  v5._uint64_t countAndFlagsBits = 0x64656873696E6966;
  v5._object = (void *)0xE800000000000000;
  v4._object = (void *)0xE000000000000000;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v5, v4);
  return swift_bridgeObjectRelease();
}

void sub_1C2A30420(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  sub_1C2A304F4((uint64_t)a3, v4);
}

uint64_t sub_1C2A30474(uint64_t a1, void *a2, char a3)
{
  char v4 = a3 & 1;
  sub_1C296276C(a2, a3 & 1);
  swift_retain();
  sub_1C2A9C9C8();
  sub_1C2962A14(a2, v4);
  return swift_release();
}

uint64_t sub_1C2A304F4(uint64_t a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_1C2A9E428();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *id v3 = sub_1C2A9AA50(v7, result + 1);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v3;
  *id v3 = 0x8000000000000000;
  sub_1C2960D98(a1, a2, isUniquelyReferenced_nonNull_native);
  *id v3 = v10;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2A305A8(unint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  sub_1C2A30F60(0, &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v45 = (uint64_t)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v33 - v9;
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v11) {
      break;
    }
    uint64_t v51 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2A9E588();
    if (v11 < 0)
    {
      __break(1u);
      return result;
    }
    v33[1] = v3;
    uint64_t v13 = 0;
    uint64_t v41 = &a2[qword_1EBB9EF00];
    unint64_t v42 = a1 & 0xC000000000000001;
    int v14 = a2[qword_1EBB8E050];
    uint64_t v3 = *(void *)&a2[qword_1EBB8E050 + 8];
    int v39 = a2[qword_1EBB8E050 + 16];
    int v40 = v14;
    uint64_t v38 = *(void *)&a2[qword_1EBB9EEF8];
    id v37 = *(id *)&a2[qword_1EBB9EEE8];
    uint64_t v34 = a2;
    int v15 = a2[qword_1EBB9EF58];
    int v35 = a2[qword_1EBB8E050 + 17];
    int v36 = v15;
    uint64_t v43 = v11;
    unint64_t v44 = a1;
    while (v11 != v13)
    {
      if (v42) {
        id v29 = (id)MEMORY[0x1C8764390](v13, a1);
      }
      else {
        id v29 = *(id *)(a1 + 8 * v13 + 32);
      }
      unint64_t v30 = v29;
      uint64_t v31 = v34;
      sub_1C296F9B0((uint64_t)v41, (uint64_t)v10);
      swift_bridgeObjectRetain();
      id v32 = objc_msgSend(v31, sel_name);
      if (v32)
      {
        Swift::String v16 = v32;
        uint64_t v46 = (void *)sub_1C2A9DD28();
        uint64_t v18 = v17;
      }
      else
      {
        uint64_t v46 = 0;
        uint64_t v18 = 0;
      }
      ++v13;
      uint64_t v19 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v19;
      *(void *)(v20 + 24) = v30;
      v47[0] = v40;
      uint64_t v48 = v3;
      char v49 = v39;
      char v50 = v35;
      uint64_t v21 = (uint64_t)v10;
      uint64_t v22 = (uint64_t)v10;
      uint64_t v23 = v45;
      sub_1C296F9B0(v21, v45);
      id v24 = objc_allocWithZone((Class)type metadata accessor for StatisticsCollectionQueryOperation());
      id v25 = v30;
      swift_bridgeObjectRetain();
      long long v26 = (char *)v25;
      id v27 = (char *)v37;
      uint64_t v28 = v23;
      uint64_t v10 = (char *)v22;
      a2 = StatisticsCollectionQueryOperation.init(sampleType:configuration:configurationOverrides:name:queryQualityOfService:healthStore:environment:resultHandler:)(v26, v47, v28, v46, v18, v38, v27, v36, (unsigned int (*)(void, void, void))sub_1C2A31098, v20);
      sub_1C2A30FCC(v22);

      swift_bridgeObjectRelease();
      sub_1C2A9E568();
      sub_1C2A9E598();
      sub_1C2A9E5A8();
      sub_1C2A9E578();
      uint64_t v11 = v43;
      a1 = v44;
      if (v43 == v13) {
        return v51;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C2A9E648();
    swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1C2A30930(void *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, char a9, uint64_t a10, uint64_t a11)
{
  Swift::String v12 = v11;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v17 = *((void *)a3 + 1);
  __int16 v35 = *((_WORD *)a3 + 8);
  char v36 = *a3;
  uint64_t v18 = qword_1EBB8E068;
  sub_1C2962438();
  swift_allocError();
  *uint64_t v19 = 0;
  char v43 = 1;
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F674D8];
  sub_1C2A30F60(0, &qword_1EBB8DF08, (uint64_t (*)(uint64_t))sub_1C2A310E0, MEMORY[0x1E4F674D8]);
  swift_allocObject();
  uint64_t v21 = v12;
  *(void *)&v12[v18] = sub_1C2A9C9F8();
  uint64_t v22 = qword_1EBB9EEE0;
  unint64_t v42 = sub_1C2A7C054(MEMORY[0x1E4FBC860]);
  sub_1C2A30F60(0, &qword_1EBB8DF00, (uint64_t (*)(uint64_t))sub_1C2A31160, v20);
  swift_allocObject();
  *(void *)&v21[v22] = sub_1C2A9C9F8();
  uint64_t v23 = (uint64_t *)&v21[qword_1EBB9EEF0];
  *uint64_t v23 = 0;
  v23[1] = 0;
  uint64_t v24 = qword_1EBB8E058;
  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F08]), sel_init);
  objc_msgSend(v25, sel_setMaxConcurrentOperationCount_, 1);
  objc_msgSend(v25, sel_setSuspended_, 1);
  *(void *)&v21[v24] = v25;
  *(void *)&v21[qword_1EBB8E060] = a1;
  *(void *)&v21[qword_1EBB8E070] = a2;
  long long v26 = &v21[qword_1EBB8E050];
  *long long v26 = v36;
  *((void *)v26 + 1) = v17;
  *((_WORD *)v26 + 8) = v35;
  sub_1C296F9B0(a4, (uint64_t)&v21[qword_1EBB9EF00]);
  *(void *)&v21[qword_1EBB9EEF8] = a7;
  *(void *)&v21[qword_1EBB9EEE8] = a8;
  uint64_t v27 = *v23;
  *uint64_t v23 = a10;
  v23[1] = a11;
  id v28 = a1;
  id v29 = a8;
  swift_retain();
  sub_1C29B34B0(v27);
  v21[qword_1EBB9EF58] = a9 & 1;

  v41.receiver = v21;
  v41.super_class = ObjectType;
  id v30 = objc_msgSendSuper2(&v41, sel_init);
  id v31 = v30;
  if (a6)
  {
    id v32 = (void *)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v32 = 0;
  }
  objc_msgSend(v30, sel_setName_, v32, a5);

  sub_1C2A30FCC(a4);
  return v30;
}

uint64_t sub_1C2A30C34()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2A30C6C()
{
  uint64_t v1 = sub_1C2A9CF58();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1C2A30D10()
{
  uint64_t v1 = *(void *)(sub_1C2A9CF58() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1C2A2FA50(v0 + v2, v3);
}

uint64_t type metadata accessor for CorrelatedStatisticsCollectionQueryOperation()
{
  uint64_t result = qword_1EBB8E078;
  if (!qword_1EBB8E078) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C2A30DF0()
{
  sub_1C2A30F60(319, &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t method lookup function for CorrelatedStatisticsCollectionQueryOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CorrelatedStatisticsCollectionQueryOperation);
}

uint64_t dispatch thunk of CorrelatedStatisticsCollectionQueryOperation.__allocating_init(correlationType:correlatedQuantityTypes:configuration:configurationOverrides:name:queryQualityOfService:healthStore:environment:resultHandler:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for CorrelatedStatisticsCollectionQueryOperation + v0 + 88))();
}

void sub_1C2A30F60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2A30FC4()
{
  return type metadata accessor for CorrelatedStatisticsCollectionQueryOperation();
}

uint64_t sub_1C2A30FCC(uint64_t a1)
{
  sub_1C2A30F60(0, &qword_1EBB91F38, (uint64_t (*)(uint64_t))type metadata accessor for StatisticsQueryConfigurationOverrides, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2A31058()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C2A31098(void *a1, char a2)
{
  sub_1C2A30054(a1, a2 & 1, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1C2A310A4()
{
  return sub_1C2A30474(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

void sub_1C2A310D8(uint64_t a1)
{
  sub_1C2A30420(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1C2A310E0()
{
  if (!qword_1EBB8E0C0)
  {
    sub_1C2A31160();
    sub_1C29415E4(255, (unint64_t *)&qword_1EBB92210);
    unint64_t v0 = sub_1C2A9E9F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8E0C0);
    }
  }
}

void sub_1C2A31160()
{
  if (!qword_1EBB8E088)
  {
    sub_1C29376D4(255, (unint64_t *)&qword_1EBB92500);
    sub_1C29376D4(255, &qword_1EBB92130);
    sub_1C2A311FC();
    unint64_t v0 = sub_1C2A9DC78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8E088);
    }
  }
}

unint64_t sub_1C2A311FC()
{
  unint64_t result = qword_1EBB8E098;
  if (!qword_1EBB8E098)
  {
    sub_1C29376D4(255, (unint64_t *)&qword_1EBB92500);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8E098);
  }
  return result;
}

uint64_t static TrendConfiguration.correlatedConfigurations(for:)(void *a1)
{
  if (objc_msgSend(a1, sel_code) != (id)80) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C293BDFC(0, &qword_1EA31EF00);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C2AA8230;
  sub_1C293BDFC(0, &qword_1EBB8FAE8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C2AA6B00;
  *(void *)(v2 + 32) = 5;
  *(void *)(v2 + 40) = &unk_1F1DEB380;
  *(_OWORD *)(v2 + 48) = xmmword_1C2AAE420;
  *(unsigned char *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = 1;
  *(void *)(v2 + 80) = &unk_1F1DEB3A8;
  *(unsigned char *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = &unk_1F1DEB3D0;
  *(_OWORD *)(v2 + 104) = xmmword_1C2AAE490;
  *(unsigned char *)(v2 + 120) = 0;
  *(void *)(v1 + 32) = 0xD00000000000002ELL;
  *(void *)(v1 + 40) = 0x80000001C2AB51D0;
  *(void *)(v1 + 48) = v2;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C2AA6B00;
  *(void *)(v3 + 32) = 5;
  *(void *)(v3 + 40) = &unk_1F1DEB3F8;
  *(_OWORD *)(v3 + 48) = xmmword_1C2AAE420;
  *(unsigned char *)(v3 + 64) = 0;
  *(void *)(v3 + 72) = 1;
  *(void *)(v3 + 80) = &unk_1F1DEB420;
  *(unsigned char *)(v3 + 88) = 0;
  *(void *)(v3 + 96) = &unk_1F1DEB448;
  *(_OWORD *)(v3 + 104) = xmmword_1C2AAE490;
  *(unsigned char *)(v3 + 120) = 0;
  *(void *)(v1 + 56) = 0xD00000000000002DLL;
  *(void *)(v1 + 64) = 0x80000001C2AB51A0;
  *(void *)(v1 + 72) = v3;
  return v1;
}

unint64_t static HKCategoryValueContraceptive.getLocalizedContraceptiveStringKey(_:)(void *a1)
{
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (v2)
  {
    id v3 = a1;
    id v4 = objc_msgSend(v2, sel_categoryType);
    id v5 = objc_msgSend(v4, sel_identifier);

    uint64_t v6 = sub_1C2A9DD28();
    uint64_t v8 = v7;

    if (v6 == sub_1C2A9DD28() && v8 == v9)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v11 = sub_1C2A9E8D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
LABEL_12:
        unint64_t v12 = 0;
LABEL_19:

        return v12;
      }
    }
    switch((unint64_t)objc_msgSend(v2, sel_value))
    {
      case 1uLL:
        unint64_t v12 = 0xD000000000000019;
        break;
      case 2uLL:
        unint64_t v12 = 0xD000000000000015;
        break;
      case 3uLL:
        unint64_t v12 = 0xD000000000000017;
        break;
      case 4uLL:
        unint64_t v12 = 0xD000000000000021;
        break;
      case 5uLL:
        unint64_t v12 = 0xD00000000000001FLL;
        break;
      case 6uLL:
        unint64_t v12 = 0xD000000000000012;
        break;
      case 7uLL:
        unint64_t v12 = 0xD000000000000013;
        break;
      default:
        goto LABEL_12;
    }
    goto LABEL_19;
  }
  return 0;
}

unint64_t sub_1C2A318EC(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000021;
      break;
    case 5:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      unint64_t result = 0;
      break;
  }
  return result;
}

id UnitPreferenceProviding.unitPreferenceController.getter(uint64_t a1, uint64_t a2)
{
  id v4 = self;
  id v5 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(a2 + 8) + 8))(a1);
  id v6 = objc_msgSend(v4, sel_sharedInstanceForHealthStore_, v5);

  id v7 = objc_msgSend(v6, sel_createHKUnitPreferenceController);
  return v7;
}

uint64_t dispatch thunk of UnitPreferenceProviding.unitPreferenceController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t static HighlightCalendarCache.font(forKey:creation:)(uint64_t a1, uint64_t (*a2)(void))
{
  if (byte_1EA31EF08 != 1) {
    return a2();
  }
  if (qword_1EBB91258 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBB907C8;
  id v4 = (void *)HighlightCalendarCache.FontIdentifier.rawValue.getter();
  id v5 = objc_msgSend(v3, sel_objectForKey_, v4);

  if (!v5)
  {
    id v5 = (id)a2();
    if (byte_1EA31EF08 == 1)
    {
      id v6 = (id)qword_1EBB907C8;
      id v7 = (void *)HighlightCalendarCache.FontIdentifier.rawValue.getter();
      objc_msgSend(v6, sel_setObject_forKey_, v5, v7);
    }
  }
  return (uint64_t)v5;
}

id static HighlightCalendarCache.clearCaches()()
{
  if (qword_1EBB91258 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_1EBB907C8;
  return objc_msgSend(v0, sel_removeAllObjects);
}

HealthVisualization::HighlightCalendarCache::FontIdentifier_optional __swiftcall HighlightCalendarCache.FontIdentifier.init(rawValue:)(NSString rawValue)
{
  id v3 = v1;
  sub_1C2A29804();
  NSString v4 = rawValue;
  id v5 = (void *)sub_1C2A9E2D8();
  char v6 = sub_1C2A9E2B8();

  if (v6)
  {

    char v8 = 0;
  }
  else
  {
    id v9 = v4;
    uint64_t v10 = (void *)sub_1C2A9E2D8();
    char v11 = sub_1C2A9E2B8();

    if (v11)
    {

      char v8 = 1;
    }
    else
    {
      id v12 = v9;
      uint64_t v13 = (void *)sub_1C2A9E2D8();
      char v14 = sub_1C2A9E2B8();

      if (v14)
      {

        char v8 = 2;
      }
      else
      {
        id v15 = v12;
        Swift::String v16 = (void *)sub_1C2A9E2D8();
        char v17 = sub_1C2A9E2B8();

        if (v17)
        {

          char v8 = 3;
        }
        else
        {
          id v18 = v15;
          uint64_t v19 = (void *)sub_1C2A9E2D8();
          char v20 = sub_1C2A9E2B8();

          if (v20)
          {

            char v8 = 4;
          }
          else
          {
            id v21 = v18;
            uint64_t v22 = (void *)sub_1C2A9E2D8();
            char v23 = sub_1C2A9E2B8();

            if (v23)
            {

              char v8 = 5;
            }
            else
            {
              id v24 = v21;
              id v25 = (void *)sub_1C2A9E2D8();
              char v26 = sub_1C2A9E2B8();

              if (v26) {
                char v8 = 6;
              }
              else {
                char v8 = 7;
              }
            }
          }
        }
      }
    }
  }
  *id v3 = v8;
  return result;
}

uint64_t HighlightCalendarCache.FontIdentifier.rawValue.getter()
{
  return sub_1C2A9E2D8();
}

uint64_t sub_1C2A32008()
{
  sub_1C2A29804();
  unint64_t v0 = (void *)HighlightCalendarCache.FontIdentifier.rawValue.getter();
  uint64_t v1 = (void *)HighlightCalendarCache.FontIdentifier.rawValue.getter();
  char v2 = sub_1C2A9E2B8();

  return v2 & 1;
}

uint64_t sub_1C2A32088()
{
  sub_1C2A9E9B8();
  unint64_t v0 = (void *)HighlightCalendarCache.FontIdentifier.rawValue.getter();
  sub_1C2A9E2C8();

  return sub_1C2A9E9E8();
}

void sub_1C2A320E0()
{
  id v0 = (id)HighlightCalendarCache.FontIdentifier.rawValue.getter();
  sub_1C2A9E2C8();
}

uint64_t sub_1C2A32140()
{
  sub_1C2A9E9B8();
  id v0 = (void *)HighlightCalendarCache.FontIdentifier.rawValue.getter();
  sub_1C2A9E2C8();

  return sub_1C2A9E9E8();
}

HealthVisualization::HighlightCalendarCache::FontIdentifier_optional sub_1C2A32194(NSString *a1)
{
  return HighlightCalendarCache.FontIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_1C2A3219C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HighlightCalendarCache.FontIdentifier.rawValue.getter();
  *a1 = result;
  return result;
}

id sub_1C2A321C4()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C998]), sel_init);
  qword_1EBB907C8 = (uint64_t)result;
  return result;
}

id static HighlightCalendarCache.font(forKey:)()
{
  if (byte_1EA31EF08 != 1) {
    return 0;
  }
  if (qword_1EBB91258 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB907C8;
  uint64_t v1 = (void *)HighlightCalendarCache.FontIdentifier.rawValue.getter();
  id v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  return v2;
}

void static HighlightCalendarCache.setFont(_:forKey:)(uint64_t a1)
{
  if (byte_1EA31EF08 == 1)
  {
    if (qword_1EBB91258 != -1) {
      swift_once();
    }
    id v2 = (id)qword_1EBB907C8;
    id v3 = (id)HighlightCalendarCache.FontIdentifier.rawValue.getter();
    objc_msgSend(v2, sel_setObject_forKey_, a1, v3);
  }
}

id static HighlightCalendarCache.enabled(_:)(id result)
{
  byte_1EA31EF08 = (char)result;
  if ((result & 1) == 0)
  {
    if (qword_1EBB91258 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_1EBB907C8;
    return objc_msgSend(v1, sel_removeAllObjects);
  }
  return result;
}

unint64_t sub_1C2A32410()
{
  unint64_t result = qword_1EA31EF10;
  if (!qword_1EA31EF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EF10);
  }
  return result;
}

ValueMetadata *type metadata accessor for HighlightCalendarCache()
{
  return &type metadata for HighlightCalendarCache;
}

unsigned char *storeEnumTagSinglePayload for HighlightCalendarCache.FontIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2A32540);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HighlightCalendarCache.FontIdentifier()
{
  return &type metadata for HighlightCalendarCache.FontIdentifier;
}

uint64_t CoreChartTrendLineSeries.init(dataViewModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C2A3302C(a1, a2, type metadata accessor for CoreChartTrendViewModel);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  sub_1C2951E18(a1, type metadata accessor for CoreChartTrendViewModel);
  uint64_t v5 = a2 + *(int *)(type metadata accessor for CoreChartTrendLineSeries() + 20);
  switch(v4)
  {
    case 2:
      unsigned int v6 = (unsigned int *)MEMORY[0x1E4F27C10];
      break;
    case 5:
      unsigned int v6 = (unsigned int *)MEMORY[0x1E4F27BC0];
      break;
    default:
      unsigned int v6 = (unsigned int *)MEMORY[0x1E4F27BF0];
      break;
  }
  uint64_t v7 = *v6;
  uint64_t v8 = sub_1C2A9C858();
  id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);
  return v9(v5, v7, v8);
}

uint64_t type metadata accessor for CoreChartTrendLineSeries()
{
  uint64_t result = qword_1EBB8E528;
  if (!qword_1EBB8E528) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CoreChartTrendLineSeries.lineSeries.getter@<X0>(uint64_t a1@<X8>)
{
  v21[2] = a1;
  uint64_t v2 = type metadata accessor for CoreChartTrendLineSeries();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v26 = *(void *)(v1 + *(int *)(type metadata accessor for CoreChartTrendViewModel(0) + 36));
  sub_1C2A3302C(v1, (uint64_t)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for CoreChartTrendLineSeries);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_1C2A332A8((uint64_t)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  sub_1C2A34558(0, &qword_1EA31DCB8, type metadata accessor for CoreChartTrendDataElement, MEMORY[0x1E4FBB320]);
  v21[1] = v7;
  v21[0] = sub_1C2A9C6E8();
  sub_1C29DCA80();
  sub_1C2951154();
  sub_1C29DCBD8();
  uint64_t v9 = v8;
  sub_1C29DCCEC();
  uint64_t v11 = v10;
  uint64_t v12 = sub_1C2A9D308();
  sub_1C29DCDC8();
  unint64_t v14 = v13;
  unint64_t v15 = sub_1C29DCE54();
  unint64_t v16 = sub_1C29DCEA8();
  swift_bridgeObjectRetain();
  uint64_t v22 = MEMORY[0x1E4F3ED28];
  unint64_t v23 = v15;
  unint64_t v24 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = v12;
  unint64_t v23 = v14;
  unint64_t v24 = MEMORY[0x1E4F19480];
  uint64_t v25 = OpaqueTypeConformance2;
  uint64_t v18 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = v11;
  unint64_t v23 = v18;
  uint64_t v19 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = v9;
  unint64_t v23 = MEMORY[0x1E4F3EB98];
  unint64_t v24 = v19;
  uint64_t v25 = MEMORY[0x1E4F3EB78];
  swift_getOpaqueTypeConformance2();
  sub_1C2A3338C(&qword_1EA31DCE8, (void (*)(uint64_t))type metadata accessor for CoreChartTrendDataElement);
  return sub_1C2A9DB88();
}

uint64_t sub_1C2A329D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v46 = a2;
  sub_1C29DCDC8();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v44 = v2;
  uint64_t v45 = v3;
  MEMORY[0x1F4188790](v2);
  objc_super v41 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2953D14();
  MEMORY[0x1F4188790](v5 - 8);
  id v37 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A34558(0, &qword_1EBB92528, MEMORY[0x1E4F27CA0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v34 - v8;
  sub_1C2953DD8();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v11 = sub_1C2A9D308();
  uint64_t v38 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DCCEC();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v39 = v14;
  uint64_t v40 = v15;
  MEMORY[0x1F4188790](v14);
  char v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C29DCBD8();
  uint64_t v42 = *(void *)(v18 - 8);
  uint64_t v43 = v18;
  MEMORY[0x1F4188790](v18);
  __int16 v35 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A9D708();
  type metadata accessor for CoreChartTrendLineSeries();
  uint64_t v20 = sub_1C2A9C868();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v9, 1, 1, v20);
  uint64_t v21 = v36;
  sub_1C2A9D158();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2953E38((uint64_t)v9);
  sub_1C2A9D708();
  uint64_t v48 = *(void *)(v21 + *(int *)(type metadata accessor for CoreChartTrendDataElement(0) + 20));
  sub_1C2A9D168();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2A9C6E8();
  sub_1C2A9D2F8();
  unint64_t v22 = sub_1C29DCE54();
  unint64_t v23 = sub_1C29DCEA8();
  uint64_t v24 = MEMORY[0x1E4F3ED28];
  uint64_t v25 = v41;
  sub_1C2A9D1B8();
  uint64_t v48 = v24;
  unint64_t v49 = v22;
  unint64_t v50 = v23;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v27 = MEMORY[0x1E4F19480];
  unint64_t v28 = v44;
  sub_1C2A9D0A8();
  (*(void (**)(char *, unint64_t))(v45 + 8))(v25, v28);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v11);
  uint64_t v48 = v11;
  unint64_t v49 = v28;
  unint64_t v50 = v27;
  uint64_t v51 = OpaqueTypeConformance2;
  id v29 = v35;
  uint64_t v30 = swift_getOpaqueTypeConformance2();
  uint64_t v31 = v39;
  sub_1C2A9D068();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v31);
  if (qword_1EBB8E3E8 != -1) {
    swift_once();
  }
  uint64_t v47 = qword_1EBB9EF68;
  uint64_t v48 = v31;
  unint64_t v49 = v30;
  swift_getOpaqueTypeConformance2();
  uint64_t v32 = v43;
  sub_1C2A9D088();
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v29, v32);
}

uint64_t sub_1C2A3302C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2A33094()
{
  uint64_t v1 = type metadata accessor for CoreChartTrendLineSeries();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v13 = *(void *)(*(void *)(v1 - 8) + 64);

  uint64_t v4 = type metadata accessor for CoreChartTrendViewModel(0);
  uint64_t v5 = v0 + v3 + *(int *)(v4 + 28);
  uint64_t v6 = sub_1C2A9C398();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = type metadata accessor for CoreChartTrendLineViewModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v0 + v3 + *(int *)(v4 + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v9, 1, v8))
  {
    v7(v9, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = v0 + v3 + *(int *)(v1 + 20);
  uint64_t v11 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  return MEMORY[0x1F4186498](v0, v3 + v13, v2 | 7);
}

uint64_t sub_1C2A332A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CoreChartTrendLineSeries();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2A3330C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for CoreChartTrendLineSeries();
  return sub_1C2A329D4(a1, a2);
}

uint64_t sub_1C2A3338C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for CoreChartTrendLineSeries(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v6 = (void *)a2[1];
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = type metadata accessor for CoreChartTrendViewModel(0);
    uint64_t v8 = *(int *)(v7 + 28);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C2A9C398();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    id v13 = v6;
    uint64_t v45 = v12;
    v12(v9, v10, v11);
    uint64_t v14 = (int *)type metadata accessor for CoreChartTrendLineViewModel(0);
    *(void *)&v9[v14[5]] = *(void *)&v10[v14[5]];
    uint64_t v15 = v14[6];
    uint64_t v16 = &v9[v15];
    char v17 = &v10[v15];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = v14[7];
    uint64_t v20 = &v9[v19];
    uint64_t v21 = &v10[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    uint64_t v46 = v7;
    uint64_t v23 = *(int *)(v7 + 32);
    uint64_t v24 = (char *)v4 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = *((void *)v14 - 1);
    unint64_t v27 = *(unsigned int (**)(char *, uint64_t, int *))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v25, 1, v14))
    {
      sub_1C2A34558(0, &qword_1EBB91398, type metadata accessor for CoreChartTrendLineViewModel, MEMORY[0x1E4FBB718]);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      v45(v24, v25, v11);
      *(void *)&v24[v14[5]] = *(void *)&v25[v14[5]];
      uint64_t v30 = v14[6];
      uint64_t v31 = &v24[v30];
      uint64_t v32 = &v25[v30];
      uint64_t v33 = *((void *)v32 + 1);
      *(void *)uint64_t v31 = *(void *)v32;
      *((void *)v31 + 1) = v33;
      uint64_t v34 = v14[7];
      __int16 v35 = &v24[v34];
      uint64_t v36 = &v25[v34];
      uint64_t v37 = *((void *)v36 + 1);
      *(void *)__int16 v35 = *(void *)v36;
      *((void *)v35 + 1) = v37;
      uint64_t v38 = *(void (**)(char *, void, uint64_t, int *))(v26 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v24, 0, 1, v14);
    }
    *(void *)((char *)v4 + *(int *)(v46 + 36)) = *(uint64_t *)((char *)a2 + *(int *)(v46 + 36));
    uint64_t v39 = *(int *)(a3 + 20);
    uint64_t v40 = (char *)v4 + v39;
    uint64_t v41 = (uint64_t)a2 + v39;
    uint64_t v42 = sub_1C2A9C858();
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16);
    swift_bridgeObjectRetain();
    v43(v40, v41, v42);
  }
  return v4;
}

uint64_t initializeWithCopy for CoreChartTrendLineSeries(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  int v5 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = type metadata accessor for CoreChartTrendViewModel(0);
  uint64_t v7 = *(int *)(v6 + 28);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = sub_1C2A9C398();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v5;
  uint64_t v43 = v11;
  v11(v8, v9, v10);
  id v13 = (int *)type metadata accessor for CoreChartTrendLineViewModel(0);
  *(void *)&v8[v13[5]] = *(void *)&v9[v13[5]];
  uint64_t v14 = v13[6];
  uint64_t v15 = &v8[v14];
  uint64_t v16 = &v9[v14];
  uint64_t v17 = *((void *)v16 + 1);
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = v17;
  uint64_t v18 = v13[7];
  uint64_t v19 = &v8[v18];
  uint64_t v20 = &v9[v18];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  uint64_t v44 = v6;
  uint64_t v22 = *(int *)(v6 + 32);
  uint64_t v23 = (char *)(a1 + v22);
  uint64_t v24 = (char *)(a2 + v22);
  uint64_t v25 = *((void *)v13 - 1);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, int *))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v24, 1, v13))
  {
    sub_1C2A34558(0, &qword_1EBB91398, type metadata accessor for CoreChartTrendLineViewModel, MEMORY[0x1E4FBB718]);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v43(v23, v24, v10);
    *(void *)&v23[v13[5]] = *(void *)&v24[v13[5]];
    uint64_t v28 = v13[6];
    uint64_t v29 = &v23[v28];
    uint64_t v30 = &v24[v28];
    uint64_t v31 = *((void *)v30 + 1);
    *(void *)uint64_t v29 = *(void *)v30;
    *((void *)v29 + 1) = v31;
    uint64_t v32 = v13[7];
    uint64_t v33 = &v23[v32];
    uint64_t v34 = &v24[v32];
    uint64_t v35 = *((void *)v34 + 1);
    *(void *)uint64_t v33 = *(void *)v34;
    *((void *)v33 + 1) = v35;
    uint64_t v36 = *(void (**)(char *, void, uint64_t, int *))(v25 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36(v23, 0, 1, v13);
  }
  *(void *)(a1 + *(int *)(v44 + 36)) = *(void *)(a2 + *(int *)(v44 + 36));
  uint64_t v37 = *(int *)(a3 + 20);
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  uint64_t v40 = sub_1C2A9C858();
  uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16);
  swift_bridgeObjectRetain();
  v41(v38, v39, v40);
  return a1;
}

uint64_t assignWithCopy for CoreChartTrendLineSeries(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  int v5 = *(void **)(a2 + 8);
  uint64_t v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v5;
  id v7 = v5;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v8 = type metadata accessor for CoreChartTrendViewModel(0);
  uint64_t v9 = *(int *)(v8 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1C2A9C398();
  uint64_t v46 = *(void *)(v12 - 8);
  uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 24);
  v47(v10, v11, v12);
  id v13 = (int *)type metadata accessor for CoreChartTrendLineViewModel(0);
  *(void *)(v10 + v13[5]) = *(void *)(v11 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = (void *)(v10 + v14);
  uint64_t v16 = (void *)(v11 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v13[7];
  uint64_t v18 = (void *)(v10 + v17);
  uint64_t v19 = (void *)(v11 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v48 = v8;
  uint64_t v20 = *(int *)(v8 + 32);
  uint64_t v21 = (char *)(a1 + v20);
  uint64_t v50 = a2;
  uint64_t v22 = (char *)(a2 + v20);
  uint64_t v23 = *((void *)v13 - 1);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v23 + 48);
  int v25 = v24(a1 + v20, 1, v13);
  int v26 = v24((uint64_t)v22, 1, v13);
  if (!v25)
  {
    if (!v26)
    {
      v47((uint64_t)v21, (uint64_t)v22, v12);
      *(void *)&v21[v13[5]] = *(void *)&v22[v13[5]];
      uint64_t v40 = v13[6];
      uint64_t v41 = &v21[v40];
      uint64_t v42 = &v22[v40];
      *(void *)uint64_t v41 = *(void *)v42;
      *((void *)v41 + 1) = *((void *)v42 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v43 = v13[7];
      uint64_t v44 = &v21[v43];
      uint64_t v45 = &v22[v43];
      *(void *)uint64_t v44 = *(void *)v45;
      *((void *)v44 + 1) = *((void *)v45 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1C2951E18((uint64_t)v21, type metadata accessor for CoreChartTrendLineViewModel);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    sub_1C2A34558(0, &qword_1EBB91398, type metadata accessor for CoreChartTrendLineViewModel, MEMORY[0x1E4FBB718]);
    memcpy(v21, v22, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v21, v22, v12);
  *(void *)&v21[v13[5]] = *(void *)&v22[v13[5]];
  uint64_t v27 = v13[6];
  uint64_t v28 = &v21[v27];
  uint64_t v29 = &v22[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  uint64_t v30 = v13[7];
  uint64_t v31 = &v21[v30];
  uint64_t v32 = &v22[v30];
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  uint64_t v33 = *(void (**)(char *, void, uint64_t, int *))(v23 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33(v21, 0, 1, v13);
LABEL_7:
  *(void *)(a1 + *(int *)(v48 + 36)) = *(void *)(v50 + *(int *)(v48 + 36));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = *(int *)(a3 + 20);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = v50 + v35;
  uint64_t v38 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t initializeWithTake for CoreChartTrendLineSeries(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  int v5 = (int *)type metadata accessor for CoreChartTrendViewModel(0);
  uint64_t v6 = v5[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2A9C398();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = (int *)type metadata accessor for CoreChartTrendLineViewModel(0);
  *(void *)(v7 + v11[5]) = *(void *)(v8 + v11[5]);
  *(_OWORD *)(v7 + v11[6]) = *(_OWORD *)(v8 + v11[6]);
  *(_OWORD *)(v7 + v11[7]) = *(_OWORD *)(v8 + v11[7]);
  uint64_t v12 = v5[8];
  id v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v15 + 48))(a2 + v12, 1, v11))
  {
    sub_1C2A34558(0, &qword_1EBB91398, type metadata accessor for CoreChartTrendLineViewModel, MEMORY[0x1E4FBB718]);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v10((uint64_t)v13, (uint64_t)v14, v9);
    *(void *)&v13[v11[5]] = *(void *)&v14[v11[5]];
    *(_OWORD *)&v13[v11[6]] = *(_OWORD *)&v14[v11[6]];
    *(_OWORD *)&v13[v11[7]] = *(_OWORD *)&v14[v11[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v13, 0, 1, v11);
  }
  *(void *)(a1 + v5[9]) = *(void *)(a2 + v5[9]);
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for CoreChartTrendLineSeries(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  int v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = type metadata accessor for CoreChartTrendViewModel(0);
  uint64_t v7 = *(int *)(v6 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v46 = sub_1C2A9C398();
  uint64_t v44 = *(void *)(v46 - 8);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v44 + 40);
  v45(v8, v9);
  uint64_t v10 = (int *)type metadata accessor for CoreChartTrendLineViewModel(0);
  *(void *)(v8 + v10[5]) = *(void *)(v9 + v10[5]);
  uint64_t v11 = v10[6];
  uint64_t v12 = (void *)(v8 + v11);
  id v13 = (uint64_t *)(v9 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v10[7];
  uint64_t v17 = (void *)(v8 + v16);
  uint64_t v18 = (uint64_t *)(v9 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v47 = v6;
  uint64_t v21 = *(int *)(v6 + 32);
  uint64_t v22 = (char *)(a1 + v21);
  uint64_t v23 = (char *)(a2 + v21);
  uint64_t v24 = *((void *)v10 - 1);
  int v25 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v24 + 48);
  int v26 = v25(a1 + v21, 1, v10);
  int v27 = v25((uint64_t)v23, 1, v10);
  if (!v26)
  {
    if (!v27)
    {
      ((void (*)(char *, char *, uint64_t))v45)(v22, v23, v46);
      *(void *)&v22[v10[5]] = *(void *)&v23[v10[5]];
      uint64_t v34 = v10[6];
      uint64_t v35 = &v22[v34];
      uint64_t v36 = &v23[v34];
      uint64_t v38 = *(void *)v36;
      uint64_t v37 = *((void *)v36 + 1);
      *(void *)uint64_t v35 = v38;
      *((void *)v35 + 1) = v37;
      swift_bridgeObjectRelease();
      uint64_t v39 = v10[7];
      uint64_t v40 = &v22[v39];
      uint64_t v41 = &v23[v39];
      uint64_t v43 = *(void *)v41;
      uint64_t v42 = *((void *)v41 + 1);
      *(void *)uint64_t v40 = v43;
      *((void *)v40 + 1) = v42;
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1C2951E18((uint64_t)v22, type metadata accessor for CoreChartTrendLineViewModel);
    goto LABEL_6;
  }
  if (v27)
  {
LABEL_6:
    sub_1C2A34558(0, &qword_1EBB91398, type metadata accessor for CoreChartTrendLineViewModel, MEMORY[0x1E4FBB718]);
    memcpy(v22, v23, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v22, v23, v46);
  *(void *)&v22[v10[5]] = *(void *)&v23[v10[5]];
  *(_OWORD *)&v22[v10[6]] = *(_OWORD *)&v23[v10[6]];
  *(_OWORD *)&v22[v10[7]] = *(_OWORD *)&v23[v10[7]];
  (*(void (**)(char *, void, uint64_t, int *))(v24 + 56))(v22, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + *(int *)(v47 + 36)) = *(void *)(a2 + *(int *)(v47 + 36));
  swift_bridgeObjectRelease();
  uint64_t v29 = *(int *)(a3 + 20);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_1C2A9C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreChartTrendLineSeries(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2A34344);
}

uint64_t sub_1C2A34344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CoreChartTrendViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_1C2A9C858();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for CoreChartTrendLineSeries(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2A34450);
}

uint64_t sub_1C2A34450(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CoreChartTrendViewModel(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1C2A9C858();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1C2A34558(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t QuantityDistributionConfiguration.dateRange.getter()
{
  return *v0;
}

void QuantityDistributionConfiguration.anchorDate.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

uint64_t QuantityDistributionConfiguration.histogramWidth.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

void QuantityDistributionConfiguration.bucketSize.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 3);
}

uint64_t QuantityDistributionConfiguration.contextStyle.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t QuantityDistributionConfiguration.init(dateRange:anchorDate:histogramWidth:bucketAnchor:bucketSize:contextStyle:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, char a3@<W2>, char *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  char v6 = *a2;
  char v7 = *a4;
  *(unsigned char *)a6 = result;
  *(unsigned char *)(a6 + 1) = v6;
  *(unsigned char *)(a6 + 2) = a3;
  *(unsigned char *)(a6 + 3) = v7;
  *(void *)(a6 + 8) = a5;
  return result;
}

uint64_t sub_1C2A34614()
{
  uint64_t result = 0x676E615265746164;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6144726F68636E61;
      break;
    case 2:
      uint64_t result = 0x6172676F74736968;
      break;
    case 3:
      uint64_t result = 0x6E4174656B637562;
      break;
    case 4:
      uint64_t result = 0x695374656B637562;
      break;
    case 5:
      uint64_t result = 0x53747865746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2A34708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A360C8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C2A34730(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1C2A3473C(uint64_t a1)
{
  unint64_t v2 = sub_1C2A358A4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A34778(uint64_t a1)
{
  unint64_t v2 = sub_1C2A358A4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t QuantityDistributionConfiguration.encode(to:)(void *a1)
{
  sub_1C2A359A0(0, &qword_1EA31EF18, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v15 - v7;
  char v9 = *v1;
  int v20 = v1[1];
  int v10 = v1[2];
  int v17 = v1[3];
  int v18 = v10;
  uint64_t v16 = *((void *)v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A358A4();
  sub_1C2A9EA18();
  LOBYTE(v19) = v9;
  char v21 = 0;
  sub_1C295677C();
  sub_1C2A9E868();
  if (!v2)
  {
    char v12 = v17;
    char v11 = v18;
    uint64_t v13 = v16;
    LOBYTE(v19) = v20;
    char v21 = 1;
    sub_1C2966ED4();
    sub_1C2A9E868();
    LOBYTE(v19) = v11;
    char v21 = 2;
    sub_1C2975430();
    sub_1C2A9E868();
    LOBYTE(v19) = 3;
    sub_1C2A358F8();
    sub_1C2A9E868();
    LOBYTE(v19) = v12;
    char v21 = 4;
    sub_1C2A3594C();
    sub_1C2A9E868();
    uint64_t v19 = v13;
    char v21 = 5;
    type metadata accessor for _HKQuantityDistributionStyle(0);
    sub_1C2A35AAC(&qword_1EA31EF38);
    sub_1C2A9E868();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t QuantityDistributionConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C2A359A0(0, &qword_1EA31EF40, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A358A4();
  sub_1C2A9EA08();
  if (!v2)
  {
    char v18 = 0;
    sub_1C2956834();
    sub_1C2A9E7A8();
    char v10 = v16;
    char v18 = 1;
    sub_1C29671CC();
    sub_1C2A9E7A8();
    int v11 = v16;
    char v18 = 2;
    sub_1C29755A8();
    sub_1C2A9E7A8();
    int v17 = v11;
    int v12 = v16;
    LOBYTE(v16) = 3;
    sub_1C2A35A04();
    sub_1C2A9E7A8();
    HIDWORD(v15) = v12;
    char v18 = 4;
    sub_1C2A35A58();
    sub_1C2A9E7A8();
    LOBYTE(v12) = v16;
    type metadata accessor for _HKQuantityDistributionStyle(0);
    char v18 = 5;
    sub_1C2A35AAC(&qword_1EA31EF58);
    sub_1C2A9E7A8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v14 = v16;
    *(unsigned char *)a2 = v10;
    *(unsigned char *)(a2 + 1) = v17;
    *(unsigned char *)(a2 + 2) = BYTE4(v15);
    *(unsigned char *)(a2 + 3) = v12;
    *(void *)(a2 + 8) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C2A34DAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return QuantityDistributionConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C2A34DC4(void *a1)
{
  return QuantityDistributionConfiguration.encode(to:)(a1);
}

HKQuantity __swiftcall BucketAnchor.quantityForType(type:)(HKQuantityType type)
{
  result.super.isCGFloat a = (Class)[(objc_class *)type.super.super.super.isa canonicalUnit];
  if (result.super.isa)
  {
    isCGFloat a = result.super.isa;
    id v3 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, result.super.isa, 0.0);

    return (HKQuantity)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t BucketAnchor.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C2A9E6E8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static BucketAnchor.allCases.getter()
{
  return &unk_1F1DEB4A8;
}

uint64_t BucketAnchor.rawValue.getter()
{
  return 1869768058;
}

uint64_t sub_1C2A34EC4()
{
  return sub_1C2A9E9E8();
}

uint64_t sub_1C2A34F10()
{
  return sub_1C2A9DD78();
}

uint64_t sub_1C2A34F20()
{
  return sub_1C2A9E9E8();
}

uint64_t sub_1C2A34F68@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C2A9E6E8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C2A34FBC(void *a1@<X8>)
{
  *a1 = 1869768058;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1C2A34FD0()
{
  return sub_1C2A9DE58();
}

uint64_t sub_1C2A35030()
{
  return sub_1C2A9DE38();
}

void sub_1C2A35080(void *a1@<X8>)
{
  *a1 = &unk_1F1DEB508;
}

HKQuantity __swiftcall BucketSize.quantityForType(type:)(HKQuantityType type)
{
  switch(*v1)
  {
    case 2:
      id v3 = objc_msgSend(self, sel__countPerMinuteUnit);
      id v4 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v3, 4.0);
      break;
    case 3:
      id v5 = [(objc_class *)type.super.super.super.isa canonicalUnit];
      if (!v5) {
        goto LABEL_10;
      }
      id v3 = v5;
      id v4 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v5, 4.0);
      break;
    case 4:
      id v3 = objc_msgSend(self, sel__countPerMinuteUnit);
      id v4 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v3, 0.5);
      break;
    default:
      id v2 = [(objc_class *)type.super.super.super.isa canonicalUnit];
      if (!v2)
      {
        __break(1u);
LABEL_10:
        __break(1u);
        JUMPOUT(0x1C2A35204);
      }
      id v3 = v2;
      id v4 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v2, 2.0);
      break;
  }
  id v6 = v4;

  return (HKQuantity)v6;
}

void static BucketSize.makeBucketSize(quantityType:)(void *a1@<X0>, char *a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_identifier);
  if (!v3)
  {
    sub_1C2A9DD28();
    id v3 = (id)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = sub_1C2A9DD28();
  uint64_t v6 = v5;
  if (v4 == sub_1C2A9DD28() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  char v9 = sub_1C2A9E8D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_18:

    char v20 = 2;
    goto LABEL_19;
  }
  uint64_t v10 = sub_1C2A9DD28();
  uint64_t v12 = v11;
  if (v10 == sub_1C2A9DD28() && v12 == v13) {
    goto LABEL_15;
  }
  char v15 = sub_1C2A9E8D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_16:

    char v20 = 1;
    goto LABEL_19;
  }
  uint64_t v16 = sub_1C2A9DD28();
  uint64_t v18 = v17;
  if (v16 == sub_1C2A9DD28() && v18 == v19)
  {
LABEL_15:
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  char v21 = sub_1C2A9E8D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_16;
  }
  uint64_t v22 = sub_1C2A9DD28();
  uint64_t v24 = v23;
  if (v22 == sub_1C2A9DD28() && v24 == v25)
  {
    swift_bridgeObjectRelease_n();
LABEL_25:

    char v20 = 3;
    goto LABEL_19;
  }
  char v26 = sub_1C2A9E8D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v26) {
    goto LABEL_25;
  }
  uint64_t v27 = sub_1C2A9DD28();
  uint64_t v29 = v28;
  if (v27 == sub_1C2A9DD28() && v29 == v30)
  {

    swift_bridgeObjectRelease_n();
    char v20 = 4;
  }
  else
  {
    char v31 = sub_1C2A9E8D8();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v31) {
      char v20 = 4;
    }
    else {
      char v20 = 0;
    }
  }
LABEL_19:
  *a2 = v20;
}

HealthVisualization::BucketSize_optional __swiftcall BucketSize.init(rawValue:)(Swift::String rawValue)
{
  id v2 = v1;
  unint64_t v3 = sub_1C2A9E6E8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *id v2 = v5;
  return result;
}

void *static BucketSize.allCases.getter()
{
  return &unk_1F1DEB5C8;
}

unint64_t BucketSize.rawValue.getter()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x756C47646F6F6C62;
      break;
    case 4:
      unint64_t result = 0x7461726970736572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2A35600()
{
  return sub_1C2A7C2B8();
}

uint64_t sub_1C2A35608()
{
  return sub_1C2A7CEC4();
}

uint64_t sub_1C2A35610()
{
  return sub_1C2A7D0D0();
}

HealthVisualization::BucketSize_optional sub_1C2A35618(Swift::String *a1)
{
  return BucketSize.init(rawValue:)(*a1);
}

unint64_t sub_1C2A35624@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = BucketSize.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C2A3564C()
{
  return sub_1C2A9DE58();
}

uint64_t sub_1C2A356AC()
{
  return sub_1C2A9DE38();
}

void sub_1C2A356FC(void *a1@<X8>)
{
  *a1 = &unk_1F1DEB5F0;
}

uint64_t sub_1C2A3570C(unsigned __int8 *a1, char *a2)
{
  return sub_1C2954AB8(*a1, *a2);
}

uint64_t sub_1C2A35718()
{
  return sub_1C2A9DE68();
}

uint64_t sub_1C2A35794()
{
  return sub_1C2A9DE48();
}

uint64_t _s19HealthVisualization33QuantityDistributionConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2 = *(unsigned char *)(a1 + 1);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 2);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 3);
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a2 + 1);
  char v7 = *(unsigned char *)(a2 + 2);
  char v8 = *(unsigned char *)(a2 + 3);
  uint64_t v9 = *(void *)(a2 + 8);
  if ((sub_1C29544B0(*(unsigned char *)a1, *(unsigned char *)a2) & 1) != 0
    && (sub_1C29546FC(v2, v6) & 1) != 0
    && (sub_1C2954904(v3, v7) & 1) != 0)
  {
    return sub_1C2954AB8(v4, v8) & (v5 == v9);
  }
  else
  {
    return 0;
  }
}

unint64_t sub_1C2A358A4()
{
  unint64_t result = qword_1EA31EF20;
  if (!qword_1EA31EF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EF20);
  }
  return result;
}

unint64_t sub_1C2A358F8()
{
  unint64_t result = qword_1EA31EF28;
  if (!qword_1EA31EF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EF28);
  }
  return result;
}

unint64_t sub_1C2A3594C()
{
  unint64_t result = qword_1EA31EF30;
  if (!qword_1EA31EF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EF30);
  }
  return result;
}

void sub_1C2A359A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C2A358A4();
    unint64_t v7 = a3(a1, &type metadata for QuantityDistributionConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C2A35A04()
{
  unint64_t result = qword_1EA31EF48;
  if (!qword_1EA31EF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EF48);
  }
  return result;
}

unint64_t sub_1C2A35A58()
{
  unint64_t result = qword_1EA31EF50;
  if (!qword_1EA31EF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EF50);
  }
  return result;
}

uint64_t sub_1C2A35AAC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for _HKQuantityDistributionStyle(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2A35AF4()
{
  unint64_t result = qword_1EA31EF60;
  if (!qword_1EA31EF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EF60);
  }
  return result;
}

uint64_t sub_1C2A35B48()
{
  return sub_1C2A35B78(&qword_1EA31EF68, &qword_1EA31EF70);
}

uint64_t sub_1C2A35B78(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2967B94(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2A35BCC()
{
  unint64_t result = qword_1EA31EF78;
  if (!qword_1EA31EF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EF78);
  }
  return result;
}

uint64_t sub_1C2A35C20()
{
  return sub_1C2A35B78(&qword_1EA31EF80, &qword_1EA31EF88);
}

uint64_t getEnumTagSinglePayload for QuantityDistributionConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 1);
  BOOL v4 = v3 >= 5;
  int v5 = v3 - 5;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for QuantityDistributionConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)unint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 1) = a2 + 4;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuantityDistributionConfiguration()
{
  return &type metadata for QuantityDistributionConfiguration;
}

unsigned char *storeEnumTagSinglePayload for BucketAnchor(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2A35D80);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BucketAnchor()
{
  return &type metadata for BucketAnchor;
}

unsigned char *storeEnumTagSinglePayload for BucketSize(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2A35E84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BucketSize()
{
  return &type metadata for BucketSize;
}

unsigned char *storeEnumTagSinglePayload for QuantityDistributionConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2A35F88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuantityDistributionConfiguration.CodingKeys()
{
  return &type metadata for QuantityDistributionConfiguration.CodingKeys;
}

unint64_t sub_1C2A35FC4()
{
  unint64_t result = qword_1EA31EF90;
  if (!qword_1EA31EF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EF90);
  }
  return result;
}

unint64_t sub_1C2A3601C()
{
  unint64_t result = qword_1EA31EF98;
  if (!qword_1EA31EF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EF98);
  }
  return result;
}

unint64_t sub_1C2A36074()
{
  unint64_t result = qword_1EA31EFA0;
  if (!qword_1EA31EFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EFA0);
  }
  return result;
}

uint64_t sub_1C2A360C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E615265746164 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144726F68636E61 && a2 == 0xEA00000000006574 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6172676F74736968 && a2 == 0xEE0068746469576DLL || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E4174656B637562 && a2 == 0xEC000000726F6863 || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x695374656B637562 && a2 == 0xEA0000000000657ALL || (sub_1C2A9E8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x53747865746E6F63 && a2 == 0xEC000000656C7974)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_1C2A363BC()
{
  unint64_t result = qword_1EA31EFB0;
  if (!qword_1EA31EFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EFB0);
  }
  return result;
}

unint64_t sub_1C2A36410()
{
  unint64_t result = qword_1EA31EFB8;
  if (!qword_1EA31EFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EFB8);
  }
  return result;
}

void *sub_1C2A36464(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_1C295DE84((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void **)(*(void *)(a2 + 56) + 8 * v6);
        id v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = sub_1C2A9E5F8();

  if (!v4) {
    return 0;
  }
  sub_1C29376D4(0, (unint64_t *)&qword_1EBB92158);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_1C2A3653C()
{
  swift_retain();
  sub_1C2A9C9B8();
  swift_release();
  return v1;
}

uint64_t sub_1C2A3658C(void *a1, char a2)
{
  char v3 = a2 & 1;
  swift_retain();
  sub_1C2A9C9C8();
  sub_1C2A37BB8(a1, v3);
  return swift_release();
}

id sub_1C2A3660C()
{
  uint64_t v1 = qword_1EBB8F1C0;
  BOOL v2 = *(void **)((char *)v0 + qword_1EBB8F1C0);
  if (v2)
  {
    id v3 = *(id *)((char *)v0 + qword_1EBB8F1C0);
  }
  else
  {
    id v4 = sub_1C2A36670(v0);
    uint64_t v5 = *(void **)((char *)v0 + v1);
    *(void *)((char *)v0 + v1) = v4;
    id v3 = v4;

    BOOL v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2A36670(void *a1)
{
  uint64_t v23 = *MEMORY[0x1E4FBC8C8] & *a1;
  uint64_t v2 = sub_1C2A9CF58();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v22 - v7;
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  id v9 = (id)qword_1EBB91C60;
  uint64_t v10 = a1;
  sub_1C2A9CF48();
  uint64_t v22 = *(void *)((char *)v10 + qword_1EBB8F1A0);
  uint64_t v11 = *(void *)((char *)v10 + qword_1EBB8F1C8);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v14 = (v4 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = *(void *)(v23 + class metadata base offset for SampleCountQueryOperation);
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15 + v13, v5, v2);
  *(void *)(v15 + v14) = v12;
  id v16 = objc_allocWithZone(MEMORY[0x1E4F2B428]);
  aBlock[4] = sub_1C2A37AE8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2A374B8;
  aBlock[3] = &block_descriptor_13;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  id v18 = objc_msgSend(v16, sel_initWithSampleType_predicate_resultsHandler_, v22, v11, v17);
  _Block_release(v17);
  swift_release();
  swift_release();
  id v19 = v18;
  id v20 = objc_msgSend(v10, sel_name);
  objc_msgSend(v19, sel_setDebugIdentifier_, v20);

  objc_msgSend(v19, sel_setQualityOfService_, *(void *)((char *)v10 + qword_1EBB8F1B8));
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return v19;
}

void sub_1C2A369DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = a5 + 16;
  sub_1C2A9E1A8();
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  sub_1C2A9CF38();
  swift_beginAccess();
  id v8 = (void *)MEMORY[0x1C87657D0](v7);
  if (v8)
  {
    id v9 = v8;
    if (objc_msgSend(v8, sel_isCancelled))
    {
      v10._object = (void *)0x80000001C2AB6030;
      v10._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v11._uint64_t countAndFlagsBits = 0;
      v11._object = (void *)0xE000000000000000;
      NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v10, v11);
LABEL_7:

      return;
    }
    if (objc_msgSend(v9, sel_isFinished)) {
      goto LABEL_7;
    }
    id v12 = sub_1C2A3768C(a2, a3);
    char v14 = v13 & 1;
    MEMORY[0x1F4188790](v12);
    sub_1C2A9CA08();
    sub_1C2A37BB8(v12, v14);
  }
}

uint64_t sub_1C2A36B70(uint64_t a1, void *a2, char a3)
{
  char v5 = a3 & 1;
  sub_1C2A37A00(a2, a3 & 1);
  sub_1C2A3658C(a2, v5);
  id v6 = objc_msgSend(*(id *)(a1 + qword_1EBB8F1A0), sel_identifier);
  uint64_t v7 = sub_1C2A9DD28();
  id v9 = v8;

  v10._uint64_t countAndFlagsBits = 0x64656873696E6966;
  v10._object = (void *)0xE800000000000000;
  v11._uint64_t countAndFlagsBits = v7;
  v11._object = v9;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v10, v11);
  return swift_bridgeObjectRelease();
}

id SampleCountQueryOperation.__allocating_init(sampleType:predicate:name:queryQualityOfService:healthStore:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v13 = objc_allocWithZone(v6);
  return SampleCountQueryOperation.init(sampleType:predicate:name:queryQualityOfService:healthStore:)(a1, a2, a3, a4, a5, a6);
}

id SampleCountQueryOperation.init(sampleType:predicate:name:queryQualityOfService:healthStore:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = qword_1EBB8F1B0;
  sub_1C2962438();
  uint64_t v13 = swift_allocError();
  *char v14 = 0;
  uint64_t v24 = v13;
  char v25 = 1;
  sub_1C2A375A4();
  swift_allocObject();
  uint64_t v15 = v6;
  *(void *)&v6[v12] = sub_1C2A9C9F8();
  *(void *)&v15[qword_1EBB8F1C0] = 0;
  *(void *)&v15[qword_1EBB8F1A0] = a1;
  *(void *)&v15[qword_1EBB8F1C8] = a2;
  *(void *)&v15[qword_1EBB8F1B8] = a5;
  *(void *)&v15[qword_1EBB8F1A8] = a6;
  id v16 = a2;
  id v17 = a1;
  id v18 = a6;

  v23.receiver = v15;
  v23.super_class = (Class)type metadata accessor for SampleCountQueryOperation();
  id v19 = objc_msgSendSuper2(&v23, sel_init);
  id v20 = v19;
  if (a4)
  {
    char v21 = (void *)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v21 = 0;
  }
  objc_msgSend(v19, sel_setName_, v21);

  return v19;
}

uint64_t sub_1C2A36E74()
{
  uint64_t v1 = sub_1C2A9CF58();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2962438();
  char v5 = (void *)swift_allocError();
  unsigned char *v6 = 2;
  sub_1C2A3658C(v5, 1);
  uint64_t v7 = *(void **)&v0[qword_1EBB8F1A0];
  id v8 = objc_msgSend(v7, sel_identifier);
  uint64_t v9 = sub_1C2A9DD28();
  Swift::String v11 = v10;

  v12._uint64_t countAndFlagsBits = 0x676E696E6E7572;
  v12._object = (void *)0xE700000000000000;
  v13._uint64_t countAndFlagsBits = v9;
  v13._object = v11;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v12, v13);
  swift_bridgeObjectRelease();
  if (qword_1EBB92338 != -1) {
    swift_once();
  }
  id v14 = (id)qword_1EBB91C60;
  uint64_t v15 = v0;
  sub_1C2A9CF48();
  sub_1C2A9E1B8();
  sub_1C29624A4();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C2AA6B00;
  id v17 = objc_msgSend(v7, sel_identifier);
  uint64_t v18 = sub_1C2A9DD28();
  uint64_t v20 = v19;

  *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v16 + 64) = sub_1C296250C();
  *(void *)(v16 + 32) = v18;
  *(void *)(v16 + 40) = v20;
  sub_1C2A9CF28();
  swift_bridgeObjectRelease();
  char v21 = *(void **)&v15[qword_1EBB8F1A8];
  id v22 = sub_1C2A3660C();
  objc_msgSend(v21, sel_executeQuery_, v22);

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1C2A37114(void *a1)
{
  id v1 = a1;
  sub_1C2A36E74();
}

void sub_1C2A3715C()
{
  if (objc_msgSend(v0, sel_isCancelled))
  {
    sub_1C2962438();
    id v1 = (void *)swift_allocError();
    *uint64_t v2 = 3;
    sub_1C2A3658C(v1, 1);
    id v3 = objc_msgSend(*(id *)&v0[qword_1EBB8F1A0], sel_identifier);
    uint64_t v4 = sub_1C2A9DD28();
    id v6 = v5;

    v7._uint64_t countAndFlagsBits = 0x656C6C65636E6163;
    v7._object = (void *)0xE900000000000064;
    v8._uint64_t countAndFlagsBits = v4;
    v8._object = v6;
    NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v7, v8);
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = *(void **)&v0[qword_1EBB8F1A8];
  id v10 = sub_1C2A3660C();
  objc_msgSend(v9, sel_stopQuery_, v10);
}

id SampleCountQueryOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SampleCountQueryOperation.init()()
{
}

void sub_1C2A372DC()
{
}

void sub_1C2A37320()
{
  swift_release();

  id v1 = *(void **)(v0 + qword_1EBB8F1C0);
}

id SampleCountQueryOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SampleCountQueryOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C2A37408(uint64_t a1)
{
  swift_release();

  objc_super v2 = *(void **)(a1 + qword_1EBB8F1C0);
}

uint64_t sub_1C2A37484@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1C2A3653C();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1C2A374B8(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  Swift::String v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C29376D4(0, (unint64_t *)&qword_1EBB92468);
    sub_1C29376D4(0, (unint64_t *)&qword_1EBB92158);
    sub_1C29B3C38();
    uint64_t v5 = sub_1C2A9DC68();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1C2A375A4()
{
  if (!qword_1EBB8E8C0)
  {
    sub_1C2A375FC();
    unint64_t v0 = sub_1C2A9C9D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8E8C0);
    }
  }
}

void sub_1C2A375FC()
{
  if (!qword_1EBB8FA30)
  {
    sub_1C29415E4(255, (unint64_t *)&qword_1EBB92210);
    unint64_t v0 = sub_1C2A9E9F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8FA30);
    }
  }
}

uint64_t type metadata accessor for SampleCountQueryOperation()
{
  return __swift_instantiateGenericMetadata();
}

id sub_1C2A3768C(uint64_t a1, unint64_t a2)
{
  if (a1)
  {
    id v4 = *(id *)(v2 + qword_1EBB8F1A0);
    uint64_t v5 = sub_1C2A36464(v4, a1);

    if (v5)
    {
      id v6 = objc_msgSend(v5, sel_integerValue);
    }
    else
    {
      return 0;
    }
  }
  else
  {
    if (a2) {
      uint64_t v8 = 0xD000000000000020;
    }
    else {
      uint64_t v8 = 0;
    }
    if (a2) {
      uint64_t v9 = 0x80000001C2ABA260;
    }
    else {
      uint64_t v9 = 0;
    }
    if (a2) {
      unint64_t v10 = a2 | 0x8000000000000000;
    }
    else {
      unint64_t v10 = 0xC000000000000000;
    }
    sub_1C296291C();
    Swift::String v11 = (void *)swift_allocError();
    *Swift::String v12 = v8;
    v12[1] = v9;
    void v12[2] = v10;
    swift_getErrorValue();
    id v13 = (id)a2;
    sub_1C2962970(v8, v9, v10);
    v14._uint64_t countAndFlagsBits = sub_1C2A9E938();
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    NSOperation.logErrorString(_:withInfo:)(v14, v15);
    swift_bridgeObjectRelease();

    id v6 = (id)swift_allocError();
    *uint64_t v16 = v8;
    v16[1] = v9;
    void v16[2] = v10;
  }
  return v6;
}

void sub_1C2A37814()
{
}

uint64_t sub_1C2A37844@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1C2A3653C();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1C2A37878(uint64_t a1)
{
  id v1 = *(id *)a1;
  char v2 = *(unsigned char *)(a1 + 8);
  sub_1C2A37A00(*(id *)a1, v2);
  return sub_1C2A3658C(v1, v2);
}

uint64_t sub_1C2A378C0()
{
  return 8;
}

void *sub_1C2A378CC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C2A378D8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for SampleCountQueryOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SampleCountQueryOperation);
}

uint64_t dispatch thunk of SampleCountQueryOperation.result.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SampleCountQueryOperation
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 80))();
}

uint64_t dispatch thunk of SampleCountQueryOperation.__allocating_init(sampleType:predicate:name:queryQualityOfService:healthStore:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SampleCountQueryOperation + v0 + 128))();
}

id sub_1C2A37A00(id result, char a2)
{
  if (a2) {
    return result;
  }
  return result;
}

uint64_t sub_1C2A37A0C()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2A37A44()
{
  uint64_t v1 = sub_1C2A9CF58();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1C2A37AE8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7 = *(void *)(sub_1C2A9CF58() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1C2A369DC(a1, a2, a3, v3 + v8, v9);
}

uint64_t sub_1C2A37BAC()
{
  return sub_1C2A36B70(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

void sub_1C2A37BB8(id a1, char a2)
{
  if (a2) {
}
  }

id sub_1C2A37BC4(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 24);
  sub_1C2A37BB8(*(id *)a1, *(unsigned char *)(a1 + 8));
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return sub_1C2A37A00(v3, v4);
}

__n128 DiagramHeartRateRecovery.__allocating_init(recoveryConfiguration:diagramData:)(_DWORD *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  char v5 = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(v4 + 72) = 0;
  *(void *)(v4 + 80) = 0;
  *(_DWORD *)(v4 + 16) = *a1;
  __n128 result = *(__n128 *)a2;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 40) = v8;
  *(unsigned char *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = v6;
  return result;
}

void sub_1C2A37C84()
{
  qword_1EBB9F058 = 0x4010000000000000;
}

void sub_1C2A37C94()
{
  qword_1EBB9F068 = 0x4014000000000000;
}

void sub_1C2A37CA4()
{
  qword_1EBB9F070 = 0x4018000000000000;
}

void sub_1C2A37CB4()
{
  qword_1EBB9F060 = 0x404E000000000000;
}

unint64_t sub_1C2A37CC4@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1C2A39EE4(*a1);
  *a2 = result;
  return result;
}

void sub_1C2A37CF0(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_1C2A37CFC(void *a1@<X8>)
{
  *a1 = &unk_1F1DEB618;
}

void sub_1C2A37D0C()
{
  qword_1EBB9F048 = 0x4045000000000000;
}

id sub_1C2A37D1C()
{
  id result = (id)HKIntegerFormatter();
  if (result) {
    qword_1EBB907D0 = (uint64_t)result;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2A37D4C(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      long long v9 = 0u;
      long long v10 = 0u;
      if (qword_1EBB92310 != -1) {
        swift_once();
      }
      uint64_t v7 = "HEART_RATE_RECOVERY_1_MIN";
      goto LABEL_14;
    case 2:
      long long v9 = 0u;
      long long v10 = 0u;
      if (qword_1EBB92310 != -1) {
        swift_once();
      }
      uint64_t v7 = "HEART_RATE_RECOVERY_2_MIN";
      goto LABEL_14;
    case 3:
      long long v9 = 0u;
      long long v10 = 0u;
      if (qword_1EBB92310 != -1) {
        swift_once();
      }
      uint64_t v7 = "HEART_RATE_RECOVERY_3_MIN";
LABEL_14:
      uint64_t v8 = sub_1C2934FE8(0xD000000000000019, (unint64_t)(v7 - 32) | 0x8000000000000000, 0, (uint64_t)&v9, 0, 0);
      sub_1C2935868((uint64_t)&v9);
      uint64_t result = v8;
      break;
    default:
      if (qword_1EBB91278 != -1) {
        swift_once();
      }
      uint64_t v2 = (void *)qword_1EBB90800;
      uint64_t v3 = (void *)sub_1C2A9C658();
      id v4 = objc_msgSend(v2, sel_stringFromDate_, v3);

      uint64_t v5 = sub_1C2A9DD28();
      uint64_t result = v5;
      break;
  }
  return result;
}

void sub_1C2A37F50()
{
  qword_1EBB9F050 = 0x4030000000000000;
}

id sub_1C2A37F60()
{
  id result = (id)HKDateFormatterFromTemplate();
  if (result) {
    qword_1EBB90800 = (uint64_t)result;
  }
  else {
    __break(1u);
  }
  return result;
}

void sub_1C2A37F94(char a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  if ((a1 & 1) == 0)
  {
    if (qword_1EBB912A0 == -1) {
      return;
    }
LABEL_13:
    swift_once();
    return;
  }
  if (qword_1EBB91200 != -1) {
    swift_once();
  }
  long long v9 = (void *)qword_1EBB907F0;
  id v10 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a8);
  if (qword_1EBB91270 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1EBB907E8;
  if (qword_1EBB91208 != -1) {
    swift_once();
  }
  id v12 = objc_msgSend(v9, sel_stringFromValue_displayType_unitController_, v10, v11, qword_1EBB907F8);

  if (!v12)
  {
    __break(1u);
    return;
  }
  sub_1C2A9DD28();

  id v13 = (void *)sub_1C2A9DCF8();
  DiagramConfiguration.TextAttributes.toTextAttributes()();
  type metadata accessor for Key(0);
  sub_1C2942D7C();
  Swift::String v14 = (void *)sub_1C2A9DC58();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_sizeWithAttributes_, v14);
  swift_bridgeObjectRelease();

  if (qword_1EBB912A0 != -1) {
    goto LABEL_13;
  }
}

void sub_1C2A381E8()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = objc_msgSend(self, sel_heartRateType);
    id v3 = objc_msgSend(v1, sel_displayTypeForObjectType_, v2);

    if (v3)
    {
      qword_1EBB907E8 = (uint64_t)v3;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C2A38294()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C98]), sel_initWithHealthStore_, v0);

  qword_1EBB907F8 = (uint64_t)v1;
}

void sub_1C2A382F8()
{
  if (qword_1EBB91270 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_1EBB907E8;
  id v1 = objc_msgSend(self, sel__countPerMinuteUnit);
  id v2 = objc_msgSend(v0, sel_hk_valueFormatterForUnit_, v1);

  qword_1EBB907F0 = (uint64_t)v2;
}

uint64_t sub_1C2A3839C()
{
  if (*(void *)(v0 + 72))
  {
    uint64_t v1 = *(void *)(v0 + 72);
  }
  else
  {
    uint64_t v1 = sub_1C2A383FC(v0);
    *(void *)(v0 + 72) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C2A383FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 64);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void *)(v1 + 32);
    if (*(void *)(v2 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v3 = sub_1C293DDF4(0);
      if (v4)
      {
        uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 40 * v3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v5;
      }
      swift_bridgeObjectRelease();
    }
  }
  uint64_t result = sub_1C2A9E628();
  __break(1u);
  return result;
}

void *sub_1C2A384E0()
{
  if (*(void *)(v0 + 80))
  {
    uint64_t v1 = *(void **)(v0 + 80);
  }
  else
  {
    uint64_t v1 = sub_1C2A38540(v0);
    *(void *)(v0 + 80) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1C2A38540(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 64);
  if (!*(void *)(v1 + 16)) {
    goto LABEL_30;
  }
  uint64_t v2 = *(void *)(v1 + 32);
  if (!*(void *)(v2 + 16)) {
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  unint64_t v3 = sub_1C293DDF4(1u);
  if ((v4 & 1) == 0) {
    goto LABEL_32;
  }
  uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 40 * v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (double *)(v5 + 40);
    uint64_t v8 = (void *)MEMORY[0x1E4FBC868];
    while (1)
    {
      double v9 = *(v7 - 1);
      if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        while (1)
        {
LABEL_30:
          sub_1C2A9E628();
          __break(1u);
LABEL_31:
          sub_1C2A9E928();
          __break(1u);
LABEL_32:
          swift_bridgeObjectRelease();
        }
      }
      if (v9 <= -9.22337204e18) {
        goto LABEL_26;
      }
      if (v9 >= 9.22337204e18) {
        goto LABEL_27;
      }
      uint64_t v10 = (uint64_t)v9;
      if ((unint64_t)(uint64_t)v9 > 3) {
        goto LABEL_30;
      }
      double v11 = *v7;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v14 = sub_1C295DF24(v10);
      uint64_t v15 = v8[2];
      BOOL v16 = (v13 & 1) == 0;
      uint64_t v17 = v15 + v16;
      if (__OFADD__(v15, v16)) {
        goto LABEL_28;
      }
      char v18 = v13;
      if (v8[3] >= v17)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v13) {
            goto LABEL_6;
          }
        }
        else
        {
          sub_1C29606CC();
          if (v18) {
            goto LABEL_6;
          }
        }
      }
      else
      {
        sub_1C295F644(v17, isUniquelyReferenced_nonNull_native);
        unint64_t v19 = sub_1C295DF24(v10);
        if ((v18 & 1) != (v20 & 1)) {
          goto LABEL_31;
        }
        unint64_t v14 = v19;
        if (v18)
        {
LABEL_6:
          *(double *)(v8[7] + 8 * v14) = v11;
          goto LABEL_7;
        }
      }
      v8[(v14 >> 6) + 8] |= 1 << v14;
      *(unsigned char *)(v8[6] + v14) = v10;
      *(double *)(v8[7] + 8 * v14) = v11;
      uint64_t v21 = v8[2];
      BOOL v22 = __OFADD__(v21, 1);
      uint64_t v23 = v21 + 1;
      if (v22) {
        goto LABEL_29;
      }
      v8[2] = v23;
LABEL_7:
      swift_bridgeObjectRelease();
      v7 += 2;
      if (!--v6) {
        goto LABEL_24;
      }
    }
  }
  uint64_t v8 = (void *)MEMORY[0x1E4FBC868];
LABEL_24:
  swift_bridgeObjectRelease();
  return v8;
}

double static DiagramHeartRateRecovery.dataModelSpace(for:recoveryIntervalStartDate:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    CGFloat width = *(double *)(MEMORY[0x1E4F1DB20] + 16);
    CGFloat height = *(double *)(MEMORY[0x1E4F1DB20] + 24);
    CGFloat x = *MEMORY[0x1E4F1DB20];
    CGFloat y = *(double *)(MEMORY[0x1E4F1DB20] + 8);
    uint64_t v6 = (CGFloat *)(swift_bridgeObjectRetain() + 40);
    do
    {
      v15.origin.CGFloat x = *(v6 - 1);
      v15.origin.CGFloat y = *v6;
      v15.size.CGFloat width = 0.0;
      v15.size.CGFloat height = 0.0;
      v10.origin.CGFloat x = x;
      v10.origin.CGFloat y = y;
      v10.size.CGFloat width = width;
      v10.size.CGFloat height = height;
      CGRect v11 = CGRectUnion(v10, v15);
      CGFloat x = v11.origin.x;
      CGFloat y = v11.origin.y;
      CGFloat width = v11.size.width;
      CGFloat height = v11.size.height;
      v6 += 2;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    CGFloat x = 0.0;
    CGFloat y = 0.0;
    CGFloat width = 0.0;
    CGFloat height = 0.0;
  }
  sub_1C2A9C5F8();
  double v8 = v7;
  v12.origin.CGFloat x = x;
  v12.origin.CGFloat y = y;
  v12.size.CGFloat width = width;
  v12.size.CGFloat height = height;
  CGRectGetMaxX(v12);
  v13.origin.CGFloat x = x;
  v13.origin.CGFloat y = y;
  v13.size.CGFloat width = width;
  v13.size.CGFloat height = height;
  CGRectGetMinY(v13);
  v14.origin.CGFloat x = x;
  v14.origin.CGFloat y = y;
  v14.size.CGFloat width = width;
  v14.size.CGFloat height = height;
  CGRectGetHeight(v14);
  return v8;
}

uint64_t DiagramHeartRateRecovery.init(recoveryConfiguration:diagramData:)(int *a1, uint64_t a2)
{
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 80) = 0;
  int v3 = *a1;
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)a2;
  char v5 = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  *(_DWORD *)(v2 + 16) = v3;
  *(_OWORD *)(v2 + 40) = v4;
  *(unsigned char *)(v2 + 56) = v5;
  *(void *)(v2 + 64) = v6;
  return v2;
}

double sub_1C2A3898C()
{
  *(void *)&double result = (unint64_t)DiagramData.diagramBounds(forceNonZeroSize:)(1);
  return result;
}

void sub_1C2A389D8()
{
  __C::CGRect v13 = DiagramData.diagramBounds(forceNonZeroSize:)(1);
  double MaxY = CGRectGetMaxY((CGRect)v13);
  if (qword_1EBB91200 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1EBB907F0;
  id v2 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, MaxY);
  if (qword_1EBB91270 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EBB907E8;
  if (qword_1EBB91208 != -1) {
    swift_once();
  }
  id v4 = objc_msgSend(v1, sel_stringFromValue_displayType_unitController_, v2, v3, qword_1EBB907F8);

  if (!v4)
  {
    __break(1u);
    goto LABEL_16;
  }
  sub_1C2A9DD28();

  char v5 = (void *)sub_1C2A9DCF8();
  DiagramConfiguration.TextAttributes.toTextAttributes()();
  type metadata accessor for Key(0);
  sub_1C2942D7C();
  uint64_t v6 = (void *)sub_1C2A9DC58();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_sizeWithAttributes_, v6);
  swift_bridgeObjectRelease();

  __C::CGRect v14 = DiagramData.diagramBounds(forceNonZeroSize:)(1);
  double MinY = CGRectGetMinY((CGRect)v14);
  double v8 = (void *)qword_1EBB907F0;
  id v9 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, MinY);
  id v10 = objc_msgSend(v8, sel_stringFromValue_displayType_unitController_, v9, qword_1EBB907E8, qword_1EBB907F8);

  if (!v10)
  {
LABEL_16:
    __break(1u);
    return;
  }
  sub_1C2A9DD28();

  CGRect v11 = (void *)sub_1C2A9DCF8();
  DiagramConfiguration.TextAttributes.toTextAttributes()();
  CGRect v12 = (void *)sub_1C2A9DC58();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_sizeWithAttributes_, v12);
  swift_bridgeObjectRelease();

  if (qword_1EBB91288 != -1) {
    swift_once();
  }
  if (qword_1EBB912A0 != -1) {
    swift_once();
  }
  if (qword_1EBB91290 != -1) {
    swift_once();
  }
}

void (*sub_1C2A38E10())(CGContext *a1, double *a2, double a3, double a4)
{
  return sub_1C2A39B14;
}

void sub_1C2A38E50(CGContext *a1, double *a2, uint64_t a3, double a4, double a5)
{
  CGContextRef v110 = a1;
  double v118 = a5;
  uint64_t v109 = sub_1C2A9C6E8();
  uint64_t v104 = *(void *)(v109 - 8);
  MEMORY[0x1F4188790](v109);
  id v108 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = 0;
  CGFloat v9 = a2[1];
  CGFloat v10 = a2[2];
  CGFloat v11 = a2[4];
  CGFloat v111 = a2[3];
  CGFloat v13 = a2[5];
  unint64_t v12 = *((unint64_t *)a2 + 6);
  CGFloat v117 = *(double *)&v12;
  double v14 = *(double *)(a3 + 24);
  CGFloat v123 = *(double *)(a3 + 32);
  CGFloat v124 = v14;
  double v15 = *(double *)(a3 + 40);
  CGFloat v121 = *(double *)(a3 + 48);
  CGFloat v122 = v15;
  int v120 = *(unsigned __int8 *)(a3 + 56);
  CGFloat v119 = *(double *)(a3 + 64);
  char v16 = *(unsigned char *)(a3 + 19);
  uint64_t v116 = a3;
  char v17 = *(unsigned char *)(a3 + 18);
  do
  {
    LOBYTE(v12) = byte_1F1DEB640[v8 + 32];
    double v18 = (double)v12 * 60.0;
    v125.CGFloat a = v124;
    v125.CGFloat b = v123;
    v125.CGFloat c = v122;
    v125.CGFloat d = v121;
    LOBYTE(v125.tx) = v120;
    v125.CGFloat ty = v119;
    __C::CGRect v131 = DiagramData.diagramBounds(forceNonZeroSize:)(1);
    v126.CGFloat x = v18 + CGRectGetMinX((CGRect)v131);
    v125.CGFloat a = v9;
    v125.CGFloat b = v10;
    double v19 = v10;
    v125.CGFloat c = v111;
    v125.CGFloat d = v11;
    v125.CGFloat tx = v13;
    v125.CGFloat ty = v117;
    v126.CGFloat y = 0.0;
    CGPointApplyAffineTransform(v126, &v125);
    if (qword_1EBB91288 != -1) {
      swift_once();
    }
    ++v8;
    LOBYTE(v125.a) = v16;
    double v20 = DiagramConfiguration.LineWidth.toPoints()();
    LOBYTE(v125.a) = v17;
    isCGFloat a = DiagramConfiguration.Color.toColor()().super.isa;
    BOOL v22 = v110;
    CGContextSetLineWidth(v110, v20);
    CGContextSetLineCap(v22, kCGLineCapRound);
    uint64_t v23 = (CGColor *)[(objc_class *)isa CGColor];
    CGContextSetStrokeColorWithColor(v22, v23);

    sub_1C2A9E028();
    sub_1C2A9E038();
    CGContextStrokePath(v22);

    CGFloat v10 = v19;
  }
  while (v8 != 4);
  unint64_t v24 = 0;
  uint64_t v107 = *MEMORY[0x1E4FB2998];
  uint64_t v106 = *MEMORY[0x1E4FB09E0];
  uint64_t v25 = *MEMORY[0x1E4FB27B8];
  id v114 = (void *)*MEMORY[0x1E4FB06F8];
  uint64_t v115 = v25;
  double v113 = (void *)*MEMORY[0x1E4FB0700];
  long long v112 = xmmword_1C2AA8230;
  uint64_t v105 = MEMORY[0x1E4FBC840] + 8;
  CGFloat v26 = v111;
  CGFloat v27 = v117;
  do
  {
    if (v24 >= qword_1F1DEB678)
    {
      __break(1u);
      goto LABEL_51;
    }
    unsigned int v28 = *((unsigned __int8 *)&unk_1F1DEB668 + v24 + 32);
    if (*((unsigned char *)&unk_1F1DEB668 + v24 + 32))
    {
      unsigned __int8 v29 = *((unsigned char *)&unk_1F1DEB668 + v24 + 32);
      if (v28 > 3) {
        goto LABEL_53;
      }
    }
    else
    {
      unsigned __int8 v29 = 0;
    }
    uint64_t v30 = sub_1C2A384E0();
    if (v30[2] && (unint64_t v31 = sub_1C295DF24(v29), (v32 & 1) != 0))
    {
      double v33 = *(double *)(v30[7] + 8 * v31);
      swift_bridgeObjectRelease();
      if (qword_1EBB91260 != -1) {
        swift_once();
      }
      uint64_t v34 = (void *)qword_1EBB907D0;
      id v35 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v33);
      id v36 = objc_msgSend(v34, sel_stringFromNumber_, v35);

      if (!v36) {
        goto LABEL_54;
      }
      sub_1C2A9DD28();

      if (v28)
      {
        if (v28 > 3) {
          goto LABEL_55;
        }
        double v37 = dbl_1C2AAED18[(char)(v28 - 1)];
      }
      else
      {
        double v37 = 0.0;
      }
      if (qword_1EBB91298 != -1) {
        swift_once();
      }
      double v38 = v37 + *(double *)&qword_1EBB9F068;
      v125.CGFloat a = v124;
      v125.CGFloat b = v123;
      v125.CGFloat c = v122;
      v125.CGFloat d = v121;
      LOBYTE(v125.tx) = v120;
      v125.CGFloat ty = v119;
      __C::CGRect v132 = DiagramData.diagramBounds(forceNonZeroSize:)(1);
      v127.CGFloat x = v38 + CGRectGetMinX((CGRect)v132);
      v125.CGFloat a = v9;
      v125.CGFloat b = v10;
      v125.CGFloat c = v26;
      v125.CGFloat d = v11;
      v125.CGFloat tx = v13;
      v125.CGFloat ty = v27;
      v127.CGFloat y = 0.0;
      *(void *)&double v39 = *(_OWORD *)&CGPointApplyAffineTransform(v127, &v125);
      if (qword_1EBB91268 != -1) {
        swift_once();
      }
      double v40 = v118 - *(double *)&qword_1EBB9F048;
      uint64_t v41 = (void *)sub_1C2A9DCF8();
      uint64_t v42 = sub_1C29376D4(0, (unint64_t *)&qword_1EBB91BA8);
      uint64_t v43 = (void *)sub_1C2A9E258();
      sub_1C2937710();
      initeCGFloat d = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v112;
      uint64_t v45 = v114;
      *(void *)(inited + 32) = v114;
      *(void *)(inited + 40) = v43;
      *(void *)(inited + 64) = v42;
      uint64_t v46 = v113;
      *(void *)(inited + 72) = v113;
      LOBYTE(v125.a) = 24;
      id v47 = v45;
      id v48 = v43;
      id v49 = v46;
      Class v50 = DiagramConfiguration.Color.toColor()().super.isa;
      *(void *)(inited + 104) = sub_1C29376D4(0, (unint64_t *)&qword_1EBB90D88);
      *(void *)(inited + 80) = v50;
      sub_1C2937768(inited);

      type metadata accessor for Key(0);
      sub_1C2942D7C();
      uint64_t v51 = (void *)sub_1C2A9DC58();
      swift_bridgeObjectRelease();
      objc_msgSend(v41, sel_drawAtPoint_withAttributes_, v51, v39, v40);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    ++v24;
  }
  while (v24 != 4);
  uint64_t v52 = sub_1C29376D4(0, (unint64_t *)&qword_1EBB91BA8);
  uint64_t v53 = 0;
  id v54 = (void (**)(uint64_t, uint64_t))(v104 + 8);
  uint64_t v107 = *MEMORY[0x1E4FB28E0];
  uint64_t v106 = MEMORY[0x1E4FBC840] + 8;
  while (1)
  {
    unsigned int v55 = byte_1F1DEB690[v53 + 32];
    v125.CGFloat a = v124;
    v125.CGFloat b = v123;
    v125.CGFloat c = v122;
    v125.CGFloat d = v121;
    LOBYTE(v125.tx) = v120;
    v125.CGFloat ty = v119;
    __C::CGRect v133 = DiagramData.diagramBounds(forceNonZeroSize:)(1);
    CGRectGetMinX((CGRect)v133);
    uint64_t v56 = (uint64_t)v108;
    sub_1C2A9C5E8();
    sub_1C2A37D4C(v56, v55);
    (*v54)(v56, v109);
    if (v55 > 3) {
      break;
    }
    double v57 = dbl_1C2AAED30[(char)v55];
    if (qword_1EBB91298 != -1) {
      swift_once();
    }
    double v58 = v57 + *(double *)&qword_1EBB9F068;
    v125.CGFloat a = v124;
    v125.CGFloat b = v123;
    v125.CGFloat c = v122;
    v125.CGFloat d = v121;
    LOBYTE(v125.tx) = v120;
    v125.CGFloat ty = v119;
    __C::CGRect v134 = DiagramData.diagramBounds(forceNonZeroSize:)(1);
    v128.CGFloat x = v58 + CGRectGetMinX((CGRect)v134);
    v125.CGFloat a = v9;
    v125.CGFloat b = v10;
    v125.CGFloat c = v26;
    v125.CGFloat d = v11;
    v125.CGFloat tx = v13;
    v125.CGFloat ty = v27;
    v128.CGFloat y = 0.0;
    *(void *)&double v59 = *(_OWORD *)&CGPointApplyAffineTransform(v128, &v125);
    if (qword_1EBB91280 != -1) {
      swift_once();
    }
    ++v53;
    double v60 = v118 - *(double *)&qword_1EBB9F050;
    id v61 = (void *)sub_1C2A9DCF8();
    id v62 = (void *)sub_1C2A9E258();
    sub_1C2937710();
    uint64_t v63 = swift_initStackObject();
    *(_OWORD *)(v63 + 16) = v112;
    uint64_t v65 = v113;
    id v64 = v114;
    *(void *)(v63 + 32) = v114;
    *(void *)(v63 + 40) = v62;
    *(void *)(v63 + 64) = v52;
    *(void *)(v63 + 72) = v65;
    LOBYTE(v125.a) = 27;
    id v66 = v64;
    id v67 = v62;
    id v68 = v65;
    Class v69 = DiagramConfiguration.Color.toColor()().super.isa;
    *(void *)(v63 + 104) = sub_1C29376D4(0, (unint64_t *)&qword_1EBB90D88);
    *(void *)(v63 + 80) = v69;
    sub_1C2937768(v63);

    type metadata accessor for Key(0);
    sub_1C2942D7C();
    id v70 = (void *)sub_1C2A9DC58();
    swift_bridgeObjectRelease();
    objc_msgSend(v61, sel_drawAtPoint_withAttributes_, v70, v59, v60);
    swift_bridgeObjectRelease();

    if (v53 == 4)
    {
      char v71 = 0;
      for (uint64_t i = 0; ; uint64_t i = 1u)
      {
        char v73 = v71;
        char v74 = *((unsigned char *)&unk_1F1DEB6B8 + i + 32);
        v125.CGFloat a = v124;
        v125.CGFloat b = v123;
        v125.CGFloat c = v122;
        v125.CGFloat d = v121;
        LOBYTE(v125.tx) = v120;
        v125.CGFloat ty = v119;
        __C::CGRect v135 = DiagramData.diagramBounds(forceNonZeroSize:)(1);
        if (v74) {
          double MaxY = CGRectGetMaxY((CGRect)v135);
        }
        else {
          double MaxY = CGRectGetMinY((CGRect)v135);
        }
        double v76 = MaxY;
        if (qword_1EBB91200 != -1) {
          swift_once();
        }
        uint64_t v77 = (void *)qword_1EBB907F0;
        id v78 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v76);
        if (qword_1EBB91270 != -1) {
          swift_once();
        }
        uint64_t v79 = qword_1EBB907E8;
        if (qword_1EBB91208 != -1) {
          swift_once();
        }
        id v80 = objc_msgSend(v77, sel_stringFromValue_displayType_unitController_, v78, v79, qword_1EBB907F8, v104, v105, v106, v107);

        if (!v80) {
          break;
        }
        sub_1C2A9DD28();

        sub_1C2A389D8();
        sub_1C2A37F94(v74, v81, v118, v81, v83, v82, v84, v76);
        double v86 = v85;
        v125.CGFloat a = v124;
        v125.CGFloat b = v123;
        v125.CGFloat c = v122;
        v125.CGFloat d = v121;
        LOBYTE(v125.tx) = v120;
        v125.CGFloat ty = v119;
        char v71 = 1;
        __C::CGRect v136 = DiagramData.diagramBounds(forceNonZeroSize:)(1);
        v129.CGFloat x = CGRectGetMaxX((CGRect)v136);
        v125.CGFloat a = v9;
        v125.CGFloat b = v10;
        v125.CGFloat c = v26;
        v125.CGFloat d = v11;
        v125.CGFloat tx = v13;
        v125.CGFloat ty = v27;
        v129.CGFloat y = 0.0;
        CGFloat v87 = CGPointApplyAffineTransform(v129, &v125).x + *(double *)&qword_1EBB9F068;
        id v88 = (void *)sub_1C2A9DCF8();
        LOBYTE(v125.a) = 13;
        DiagramConfiguration.TextAttributes.toTextAttributes()();
        uint64_t v89 = (void *)sub_1C2A9DC58();
        swift_bridgeObjectRelease();
        objc_msgSend(v88, sel_drawAtPoint_withAttributes_, v89, v87, v86);
        swift_bridgeObjectRelease();

        if (v73)
        {
          uint64_t v90 = v116;
          uint64_t v91 = sub_1C2A3839C();
          uint64_t v92 = *(void *)(v91 + 16);
          id v93 = v110;
          if (v92)
          {
            char v94 = *(unsigned char *)(v90 + 17);
            char v95 = *(unsigned char *)(v90 + 16);
            uint64_t v96 = v91 + 40;
            do
            {
              CGPoint v130 = *(CGPoint *)(v96 - 8);
              v125.CGFloat a = v9;
              v125.CGFloat b = v10;
              v125.CGFloat c = v26;
              v125.CGFloat d = v11;
              v125.CGFloat tx = v13;
              v125.CGFloat ty = v27;
              CGPoint v97 = CGPointApplyAffineTransform(v130, &v125);
              LOBYTE(v125.a) = v94;
              double v98 = DiagramConfiguration.LineRadius.toFloat()();
              CGFloat v99 = v97.x - v98;
              CGFloat v100 = v97.y - v98;
              CGFloat v101 = v98 + v98;
              LOBYTE(v125.a) = v95;
              Class v102 = DiagramConfiguration.Color.toColor()().super.isa;
              id v103 = (CGColor *)[(objc_class *)v102 CGColor];

              CGContextSetFillColorWithColor(v93, v103);
              CGContextSetBlendMode(v93, kCGBlendModeNormal);
              v137.origin.CGFloat x = v99;
              CGFloat v27 = v117;
              v137.origin.CGFloat y = v100;
              v137.size.CGFloat width = v101;
              v137.size.CGFloat height = v101;
              CGContextFillEllipseInRect(v93, v137);
              v96 += 16;
              --v92;
            }
            while (v92);
          }
          swift_bridgeObjectRelease();
          return;
        }
      }
      goto LABEL_52;
    }
  }
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
}

void sub_1C2A39B14(CGContext *a1, double *a2, double a3, double a4)
{
  sub_1C2A38E50(a1, a2, v4, a3, a4);
}

uint64_t DiagramHeartRateRecovery.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DiagramHeartRateRecovery.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

double sub_1C2A39B94()
{
  *(void *)&double result = (unint64_t)DiagramData.diagramBounds(forceNonZeroSize:)(1);
  return result;
}

void sub_1C2A39BE4()
{
}

void (*sub_1C2A39C08())(CGContext *a1, double *a2, double a3, double a4)
{
  return sub_1C2A39B14;
}

uint64_t type metadata accessor for DiagramHeartRateRecovery()
{
  return self;
}

uint64_t method lookup function for DiagramHeartRateRecovery(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DiagramHeartRateRecovery);
}

uint64_t dispatch thunk of DiagramHeartRateRecovery.__allocating_init(recoveryConfiguration:diagramData:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of DiagramHeartRateRecovery.modelSpace.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DiagramHeartRateRecovery.screenInsets.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DiagramHeartRateRecovery.drawingBlock.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

unsigned char *storeEnumTagSinglePayload for DiagramHeartRateRecovery.MinuteLine(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *double result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2A39DD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiagramHeartRateRecovery.MinuteLine()
{
  return &type metadata for DiagramHeartRateRecovery.MinuteLine;
}

unint64_t sub_1C2A39E10()
{
  unint64_t result = qword_1EA31EFC0;
  if (!qword_1EA31EFC0)
  {
    sub_1C2A39EF4(255, &qword_1EA31EFC8, (uint64_t)&type metadata for DiagramHeartRateRecovery.MinuteLine, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EFC0);
  }
  return result;
}

unint64_t sub_1C2A39E90()
{
  unint64_t result = qword_1EBB907E0;
  if (!qword_1EBB907E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB907E0);
  }
  return result;
}

unint64_t sub_1C2A39EE4(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

void sub_1C2A39EF4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C2A39F40@<X0>(uint64_t a1@<X8>)
{
  swift_retain();
  sub_1C2A9C9B8();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_1C2A39FA0(uint64_t a1)
{
  id v1 = *(id *)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  sub_1C296276C(*(id *)a1, v3);
  swift_retain();
  sub_1C2A9C9C8();
  sub_1C2962A14(v1, v3);
  return swift_release();
}

uint64_t sub_1C2A3A030()
{
  swift_retain();
  sub_1C2A9C9B8();
  swift_release();
  return v1;
}

uint64_t QuantityDistributionQueryOperation.queryStartDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A3A100(&qword_1EBB9F170, MEMORY[0x1E4F27928], a1);
}

uint64_t QuantityDistributionQueryOperation.queryEndDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A3A100(&qword_1EBB9F158, MEMORY[0x1E4F27928], a1);
}

uint64_t QuantityDistributionQueryOperation.anchorDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A3A100(&qword_1EBB9F150, MEMORY[0x1E4F27928], a1);
}

uint64_t QuantityDistributionQueryOperation.intervalComponents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A3A100(&qword_1EBB9F178, MEMORY[0x1E4F26F90], a1);
}

uint64_t sub_1C2A3A100@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3 + *a1;
  uint64_t v6 = a2(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  return v7(a3, v5, v6);
}

void *QuantityDistributionQueryOperation.queryPredicate.getter()
{
  uint64_t v1 = *(void **)(v0 + qword_1EBB9F168);
  id v2 = v1;
  return v1;
}

id sub_1C2A3A1A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C2A9C468();
  uint64_t v3 = *(void (***)(char *, uint64_t, uint64_t))(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C2A9C6E8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  CGFloat v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (char *)&v36 - v11;
  *(void *)&double v14 = MEMORY[0x1F4188790](v13).n128_u64[0];
  char v16 = (char *)&v36 - v15;
  char v17 = *(void **)&v1[qword_1EBB91E90];
  if (v17)
  {
    id v18 = *(id *)&v1[qword_1EBB91E90];
LABEL_5:
    id v34 = v17;
    return v18;
  }
  uint64_t v42 = v3;
  uint64_t v43 = qword_1EBB91E90;
  v44.super.super.super.isCGFloat a = *(Class *)&v1[qword_1EBB91EA0];
  id result = [(objc_class *)v44.super.super.super.isa canonicalUnit];
  if (result)
  {
    double v20 = result;
    id v40 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, result, 0.0);

    uint64_t v21 = &v1[qword_1EBB9F160];
    char v45 = v1[qword_1EBB9F160 + 3];
    isCGFloat a = BucketSize.quantityForType(type:)(v44).super.isa;
    uint64_t v41 = *((void *)v21 + 1);
    BOOL v22 = *(void (**)(char *, unsigned char *, uint64_t))(v7 + 16);
    v22(v16, &v1[qword_1EBB9F170], v6);
    v22(v12, &v1[qword_1EBB9F158], v6);
    id v37 = *(id *)&v1[qword_1EBB9F168];
    v22(v9, &v1[qword_1EBB9F150], v6);
    v42[2](v5, (uint64_t)&v1[qword_1EBB9F178], v2);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v1;
    id v38 = objc_allocWithZone(MEMORY[0x1E4F2B950]);
    id v24 = v37;
    id v25 = v37;
    id v26 = v40;
    uint64_t v42 = (void (**)(char *, uint64_t, uint64_t))v40;
    CGFloat v27 = isa;
    unsigned int v28 = v1;
    unsigned __int8 v29 = v44.super.super.super.isa;
    uint64_t v35 = v23;
    uint64_t v30 = v27;
    id v31 = sub_1C2A3B9C8(v29, (uint64_t)v16, (uint64_t)v12, v41, v24, (uint64_t)v9, (uint64_t)v5, v26, v27, 5, (uint64_t)sub_1C2A3D810, v35);
    id v32 = objc_msgSend(v28, sel_name);
    objc_msgSend(v31, sel_setDebugIdentifier_, v32);

    objc_msgSend(v31, sel_setQualityOfService_, *(void *)&v28[qword_1EBB9F180]);
    double v33 = *(void **)&v1[v43];
    *(void *)&v1[v43] = v31;
    id v18 = v31;

    char v17 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id QuantityDistributionQueryOperation.__allocating_init(quantityType:configuration:configurationOverrides:name:queryQualityOfService:healthStore:baseDate:resultHandler:)(void *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7, uint64_t a8, void (*a9)(char *, uint64_t), uint64_t (*a10)(void, void))
{
  id v18 = objc_allocWithZone(v10);
  id v19 = sub_1C2A3C254(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);

  swift_release();
  return v19;
}

id QuantityDistributionQueryOperation.init(quantityType:configuration:configurationOverrides:name:queryQualityOfService:healthStore:baseDate:resultHandler:)(void *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7, uint64_t a8, void (*a9)(char *, uint64_t), uint64_t (*a10)(void, void))
{
  id v12 = sub_1C2A3C254(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);

  swift_release();
  return v12;
}

void *static QuantityDistributionQueryOperation.distributionPoints(for:zeroCountForGap:histogramBucketSize:mapDatesToX:)(unint64_t a1, uint64_t a2, void *a3, double (*a4)(char *, char *), uint64_t a5)
{
  double v98 = a4;
  uint64_t v99 = a5;
  uint64_t v97 = sub_1C2A9C6E8();
  unint64_t v8 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  uint64_t v96 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  char v95 = (char *)&v87 - v11;
  if (a1)
  {
    swift_bridgeObjectRetain();
    id v12 = objc_msgSend(a3, sel__unit);
    objc_msgSend(a3, sel_doubleValueForUnit_, v12);
    double v14 = v13;

    uint64_t v15 = a1 & 0xFFFFFFFFFFFFFF8;
    if (a1 >> 62) {
      goto LABEL_104;
    }
    uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v16)
    {
      unint64_t v17 = 0;
      unint64_t v94 = a1 & 0xC000000000000001;
      unint64_t v88 = a1 + 32;
      id v18 = (void *)MEMORY[0x1E4FBC860];
      id v93 = (void (**)(char *, uint64_t))(v8 + 8);
      unint64_t v92 = a1;
      uint64_t v91 = a3;
      uint64_t v90 = v15;
      uint64_t v89 = v16;
      while (1)
      {
        uint64_t v105 = v18;
        if (v94)
        {
          id v19 = (id)MEMORY[0x1C8764390](v17, a1);
        }
        else
        {
          if (v17 >= *(void *)(v15 + 16)) {
            goto LABEL_103;
          }
          id v19 = *(id *)(v88 + 8 * v17);
        }
        double v20 = v19;
        BOOL v21 = __OFADD__(v17, 1);
        unint64_t v22 = v17 + 1;
        if (v21) {
          break;
        }
        unint64_t v101 = v22;
        id v23 = objc_msgSend(v19, sel_startDate);
        id v24 = v95;
        sub_1C2A9C6A8();

        id v25 = objc_msgSend(v20, sel_endDate);
        id v26 = v96;
        sub_1C2A9C6A8();

        double v103 = v98(v24, v26);
        CGFloat v27 = *v93;
        uint64_t v28 = v97;
        (*v93)(v26, v97);
        v27(v24, v28);
        id v29 = objc_msgSend(v20, sel_minimumValue);
        id v30 = objc_msgSend(a3, sel__unit);
        objc_msgSend(v29, sel_doubleValueForUnit_, v30);
        double v32 = v31;

        id v33 = objc_msgSend(v20, sel_maximumValue);
        id v34 = objc_msgSend(a3, sel__unit);
        objc_msgSend(v33, sel_doubleValueForUnit_, v34);
        double v36 = v35;

        id v37 = objc_msgSend(v20, sel_minimumBucketValue);
        id v38 = objc_msgSend(a3, sel__unit);
        objc_msgSend(v37, sel_doubleValueForUnit_, v38);
        double v40 = v39;

        id v102 = v20;
        id v41 = objc_msgSend(v20, sel_histogramCounts);
        sub_1C29376D4(0, (unint64_t *)&qword_1EBB92158);
        unint64_t v8 = sub_1C2A9DE98();

        if (v8 >> 62)
        {
          swift_bridgeObjectRetain();
          a1 = sub_1C2A9E648();
          swift_bridgeObjectRelease();
          if (a1)
          {
LABEL_14:
            char v42 = 0;
            unint64_t v43 = 0;
            unint64_t v44 = v8 & 0xC000000000000001;
            uint64_t v104 = v8 & 0xFFFFFFFFFFFFFF8;
            unint64_t v100 = v8 + 32;
            double v45 = v40;
            while (2)
            {
              if (v45 > v32) {
                double v46 = v45;
              }
              else {
                double v46 = v32;
              }
              if (v36 >= v46) {
                double v47 = v46;
              }
              else {
                double v47 = v36;
              }
LABEL_21:
              uint64_t v15 = 0;
              if (v40 > v32) {
                double v48 = v40;
              }
              else {
                double v48 = v32;
              }
              if (v36 >= v48) {
                double v49 = v48;
              }
              else {
                double v49 = v36;
              }
              double v50 = v40;
              unint64_t v51 = v43;
              while (1)
              {
                if (v44)
                {
                  id v52 = (id)MEMORY[0x1C8764390](v51, v8);
                }
                else
                {
                  if (v51 >= *(void *)(v104 + 16)) {
                    goto LABEL_101;
                  }
                  id v52 = *(id *)(v100 + 8 * v51);
                }
                a3 = v52;
                unint64_t v43 = v51 + 1;
                if (__OFADD__(v51, 1)) {
                  goto LABEL_99;
                }
                id v53 = objc_msgSend(v52, sel_integerValue);
                uint64_t v54 = (uint64_t)v53;
                if ((v42 & 1) == 0) {
                  break;
                }
                if ((uint64_t)v53 > 0)
                {
LABEL_60:

                  double v40 = v14 + v50;
                  char v42 = 1;
                  if (v43 != a1) {
                    goto LABEL_21;
                  }
                  goto LABEL_75;
                }
                uint64_t v55 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_100;
                }
                if (v55 != a2)
                {

                  if (v43 != a1)
                  {
                    unint64_t v64 = v51 + 5;
                    do
                    {
                      unint64_t v65 = v64 - 4;
                      if (v44)
                      {
                        id v66 = (id)MEMORY[0x1C8764390](v64 - 4, v8);
                      }
                      else
                      {
                        if (v65 >= *(void *)(v104 + 16)) {
                          goto LABEL_101;
                        }
                        id v66 = *(id *)(v8 + 8 * v64);
                      }
                      a3 = v66;
                      BOOL v21 = __OFADD__(v65, 1);
                      unint64_t v51 = v64 - 3;
                      if (v21) {
                        goto LABEL_99;
                      }
                      double v50 = v14 + v50;
                      if ((uint64_t)objc_msgSend(v66, sel_integerValue) > 0)
                      {
                        unint64_t v43 = v64 - 3;
                        goto LABEL_60;
                      }
                      if (__OFADD__(v55, 1)) {
                        goto LABEL_100;
                      }
                      if (v55 + 1 == a2) {
                        goto LABEL_38;
                      }

                      ++v55;
                      ++v64;
                    }
                    while (v51 != a1);
                  }
LABEL_75:
                  double v50 = v45;
LABEL_76:
                  swift_bridgeObjectRelease();
                  if (v50 > v32) {
                    double v73 = v50;
                  }
                  else {
                    double v73 = v32;
                  }
                  if (v36 >= v73) {
                    double v74 = v73;
                  }
                  else {
                    double v74 = v36;
                  }
                  if (swift_isUniquelyReferenced_nonNull_native())
                  {
                    a1 = v92;
                    a3 = v91;
                    uint64_t v15 = v90;
                    uint64_t v16 = v89;
                    long long v75 = v105;
                  }
                  else
                  {
                    long long v75 = sub_1C299C988(0, v105[2] + 1, 1, v105);
                    a1 = v92;
                    a3 = v91;
                    uint64_t v15 = v90;
                    uint64_t v16 = v89;
                  }
                  unint64_t v77 = v75[2];
                  unint64_t v76 = v75[3];
                  int64_t v78 = v76 >> 1;
                  unint64_t v8 = v77 + 1;
                  double v79 = v103;
                  if (v76 >> 1 <= v77)
                  {
                    double v84 = sub_1C299C988((void *)(v76 > 1), v77 + 1, 1, v75);
                    double v79 = v103;
                    long long v75 = v84;
                    unint64_t v76 = v84[3];
                    int64_t v78 = v76 >> 1;
                  }
                  v75[2] = v8;
                  id v80 = (double *)&v75[2 * v77];
                  v80[4] = v79;
                  v80[5] = v74;
                  if (v40 > v32) {
                    double v81 = v40;
                  }
                  else {
                    double v81 = v32;
                  }
                  if (v36 >= v81) {
                    double v82 = v81;
                  }
                  else {
                    double v82 = v36;
                  }
                  if (v78 < (uint64_t)(v77 + 2))
                  {
                    double v85 = sub_1C299C988((void *)(v76 > 1), v77 + 2, 1, v75);
                    double v79 = v103;
                    long long v75 = v85;
                  }
                  v75[2] = v77 + 2;
                  uint64_t v105 = v75;
                  double v83 = (double *)&v75[2 * v8];
                  v83[4] = v79;
                  v83[5] = v82;
                  unint64_t v17 = v101;

                  goto LABEL_6;
                }
                ++v51;
LABEL_38:
                if (swift_isUniquelyReferenced_nonNull_native()) {
                  uint64_t v56 = v105;
                }
                else {
                  uint64_t v56 = sub_1C299C988(0, v105[2] + 1, 1, v105);
                }
                unint64_t v58 = v56[2];
                unint64_t v57 = v56[3];
                int64_t v59 = v57 >> 1;
                unint64_t v60 = v58 + 1;
                double v61 = v103;
                if (v57 >> 1 <= v58)
                {
                  id v67 = sub_1C299C988((void *)(v57 > 1), v58 + 1, 1, v56);
                  double v61 = v103;
                  uint64_t v56 = v67;
                  unint64_t v57 = v67[3];
                  int64_t v59 = v57 >> 1;
                }
                v56[2] = v60;
                id v62 = (double *)&v56[2 * v58];
                v62[4] = v61;
                v62[5] = v47;
                if (v59 < (uint64_t)(v58 + 2))
                {
                  id v68 = sub_1C299C988((void *)(v57 > 1), v58 + 2, 1, v56);
                  double v61 = v103;
                  uint64_t v56 = v68;
                }
                v56[2] = v58 + 2;
                uint64_t v105 = v56;
                uint64_t v63 = (double *)&v56[2 * v60];
                v63[4] = v61;
                v63[5] = v49;

                char v42 = 0;
                double v50 = v14 + v50;
                uint64_t v15 = a2;
                if (v51 == a1) {
                  goto LABEL_74;
                }
              }

              if (v54 > 0)
              {
LABEL_63:
                double v40 = v14 + v50;
                char v42 = 1;
                double v45 = v50;
                if (v43 != a1) {
                  continue;
                }
                goto LABEL_76;
              }
              break;
            }
            if (v43 == a1)
            {
LABEL_74:

              swift_bridgeObjectRelease();
              a1 = v92;
              a3 = v91;
              uint64_t v15 = v90;
              uint64_t v16 = v89;
              unint64_t v17 = v101;
              goto LABEL_6;
            }
            unint64_t v69 = v51 + 5;
            while (1)
            {
              unint64_t v70 = v69 - 4;
              if (v44)
              {
                id v71 = (id)MEMORY[0x1C8764390](v69 - 4, v8);
              }
              else
              {
                if (v70 >= *(void *)(v104 + 16)) {
                  goto LABEL_101;
                }
                id v71 = *(id *)(v8 + 8 * v69);
              }
              a3 = v71;
              unint64_t v43 = v69 - 3;
              if (__OFADD__(v70, 1)) {
                break;
              }
              double v50 = v14 + v50;
              uint64_t v72 = (uint64_t)objc_msgSend(v71, sel_integerValue);

              if (v72 >= 1) {
                goto LABEL_63;
              }
              ++v69;
              if (v43 == a1) {
                goto LABEL_74;
              }
            }
LABEL_99:
            __break(1u);
LABEL_100:
            __break(1u);
LABEL_101:
            __break(1u);
            break;
          }
        }
        else
        {
          a1 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (a1) {
            goto LABEL_14;
          }
        }

        swift_bridgeObjectRelease();
        unint64_t v17 = v101;
        a1 = v92;
LABEL_6:
        id v18 = v105;
        if (v17 == v16)
        {
          swift_bridgeObjectRelease();
          return v105;
        }
      }
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1C2A9E648();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  return (void *)MEMORY[0x1E4FBC860];
}

void sub_1C2A3AF90()
{
  uint64_t v1 = sub_1C2A9CFE8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2962438();
  uint64_t v5 = (void *)swift_allocError();
  unsigned char *v6 = 2;
  id v23 = v5;
  char v24 = 1;
  swift_retain();
  sub_1C2A9C9C8();

  swift_release();
  sub_1C2A9CF68();
  uint64_t v7 = v0;
  unint64_t v8 = sub_1C2A9CFC8();
  os_log_type_t v9 = sub_1C2A9E088();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    double v20 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v26 = v21;
    *(_DWORD *)uint64_t v10 = 136380931;
    uint64_t ObjectType = swift_getObjectType();
    sub_1C2A3D4A4();
    uint64_t v22 = v1;
    uint64_t v11 = sub_1C2A9DD58();
    uint64_t ObjectType = sub_1C2957168(v11, v12, &v26);
    sub_1C2A9E358();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2113;
    double v13 = *(void **)&v7[qword_1EBB91EA0];
    uint64_t ObjectType = (uint64_t)v13;
    id v14 = v13;
    sub_1C2A9E358();
    uint64_t v15 = v20;
    *double v20 = v13;

    _os_log_impl(&dword_1C292A000, v8, v9, "%{private}s: Quantity distribution running for %{private}@", (uint8_t *)v10, 0x16u);
    sub_1C2A3D8E4(0, &qword_1EBB8FDC0, &qword_1EBB923A0, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x1C87656F0](v15, -1, -1);
    uint64_t v16 = v21;
    swift_arrayDestroy();
    MEMORY[0x1C87656F0](v16, -1, -1);
    MEMORY[0x1C87656F0](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v22);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  unint64_t v17 = *(void **)&v7[qword_1EBB91E98];
  id v18 = sub_1C2A3A1A4();
  objc_msgSend(v17, sel_executeQuery_, v18);
}

void sub_1C2A3B314(void *a1)
{
  id v1 = a1;
  sub_1C2A3AF90();
}

void sub_1C2A3B35C()
{
  if (objc_msgSend(v0, sel_isCancelled))
  {
    sub_1C296291C();
    id v1 = (void *)swift_allocError();
    *uint64_t v2 = 0xD000000000000022;
    v2[1] = 0x80000001C2AAED30;
    v2[2] = 0x4000000000000000;
    MEMORY[0x1F4188790](v1);
    swift_retain();
    sub_1C2A9C9C8();

    swift_release();
    v3._uint64_t countAndFlagsBits = 0x656C6C65636E6163;
    v3._object = (void *)0xE900000000000064;
    v4._uint64_t countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v3, v4);
  }
  uint64_t v5 = &v0[qword_1EBB91EA8];
  uint64_t v6 = *(void *)&v0[qword_1EBB91EA8];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  sub_1C29B34B0(v6);
  uint64_t v7 = *(void **)&v0[qword_1EBB91E98];
  id v8 = sub_1C2A3A1A4();
  objc_msgSend(v7, sel_stopQuery_, v8);
}

void sub_1C2A3B4CC(uint64_t a1, void *a2, char a3)
{
  char v4 = a3 & 1;
  sub_1C296276C(a2, a3 & 1);
  swift_retain();
  sub_1C2A9C9C8();
  sub_1C2962A14(a2, v4);
  swift_release();
  v5._uint64_t countAndFlagsBits = 0x64656873696E6966;
  v5._object = (void *)0xE800000000000000;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v5, v6);
}

id QuantityDistributionQueryOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void QuantityDistributionQueryOperation.init()()
{
}

void sub_1C2A3B5E4()
{
}

void sub_1C2A3B614()
{
  swift_release();

  sub_1C29B34B0(*(void *)(v0 + qword_1EBB91EA8));
  sub_1C2A3D94C(v0 + qword_1EBB9F188, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  uint64_t v1 = v0 + qword_1EBB9F170;
  uint64_t v2 = sub_1C2A9C6E8();
  Swift::String v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + qword_1EBB9F158, v2);
  v3(v0 + qword_1EBB9F150, v2);
  uint64_t v4 = v0 + qword_1EBB9F178;
  uint64_t v5 = sub_1C2A9C468();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  Swift::String v6 = *(void **)(v0 + qword_1EBB91E90);
}

id QuantityDistributionQueryOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QuantityDistributionQueryOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C2A3B7D8(uint64_t a1)
{
  swift_release();

  sub_1C29B34B0(*(void *)(a1 + qword_1EBB91EA8));
  sub_1C2A3D94C(a1 + qword_1EBB9F188, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  uint64_t v2 = a1 + qword_1EBB9F170;
  uint64_t v3 = sub_1C2A9C6E8();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  v4(a1 + qword_1EBB9F158, v3);
  v4(a1 + qword_1EBB9F150, v3);
  uint64_t v5 = a1 + qword_1EBB9F178;
  uint64_t v6 = sub_1C2A9C468();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  uint64_t v7 = *(void **)(a1 + qword_1EBB91E90);
}

uint64_t sub_1C2A3B968@<X0>(uint64_t a1@<X8>)
{
  swift_retain();
  sub_1C2A9C9B8();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

id sub_1C2A3B9C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  id v14 = (void *)sub_1C2A9C658();
  uint64_t v15 = (void *)sub_1C2A9C658();
  uint64_t v16 = (void *)sub_1C2A9C658();
  unint64_t v17 = (void *)sub_1C2A9C3B8();
  aBlock[4] = a11;
  aBlock[5] = a12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2A3BBD4;
  aBlock[3] = &block_descriptor_14;
  id v18 = _Block_copy(aBlock);
  id v19 = objc_msgSend(v25, sel_initWithQuantityType_startDate_endDate_contextStyle_predicate_anchorDate_intervalComponents_histogramAnchor_histogramBucketSize_options_completionHandler_, a1, v14, v15, a4, a5, v16, v17, a8, a9, a10, v18);
  _Block_release(v18);

  uint64_t v20 = sub_1C2A9C468();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(a7, v20);
  uint64_t v21 = sub_1C2A9C6E8();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
  v22(a6, v21);
  v22(a3, v21);
  v22(a2, v21);
  swift_release();
  return v19;
}

uint64_t sub_1C2A3BBD4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C29376D4(0, &qword_1EBB92138);
    uint64_t v5 = sub_1C2A9DE98();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1C2A3BC8C(void *a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C2A9CFE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v11 = MEMORY[0x1F4188790](v10).n128_u64[0];
  double v13 = (char *)v41 - v12;
  if (objc_msgSend(v3, sel_isCancelled, v11))
  {
    sub_1C2A9CF68();
    id v14 = v3;
    uint64_t v15 = sub_1C2A9CFC8();
    os_log_type_t v16 = sub_1C2A9E098();
    if (os_log_type_enabled(v15, v16))
    {
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      v51[0] = v18;
      *(_DWORD *)unint64_t v17 = 136380675;
      uint64_t ObjectType = swift_getObjectType();
      sub_1C2A3D4A4();
      uint64_t v49 = v6;
      uint64_t v19 = sub_1C2A9DD58();
      uint64_t ObjectType = sub_1C2957168(v19, v20, v51);
      sub_1C2A9E358();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C292A000, v15, v16, "%{private}s: Query was cancelled; results will not be processed.",
        v17,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v18, -1, -1);
      MEMORY[0x1C87656F0](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v49);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  else if ((objc_msgSend(v3, sel_isFinished) & 1) == 0)
  {
    uint64_t v21 = a1;
    if (!a1)
    {
      if (a2) {
        uint64_t v22 = 0xD000000000000029;
      }
      else {
        uint64_t v22 = 0;
      }
      if (a2) {
        uint64_t v23 = 0x80000001C2ABA5D0;
      }
      else {
        uint64_t v23 = 0;
      }
      unint64_t v24 = 0xC000000000000000;
      if (a2) {
        unint64_t v24 = a2 | 0x8000000000000000;
      }
      v51[0] = v22;
      v51[1] = v23;
      unint64_t v48 = v24;
      uint64_t v49 = v23;
      v51[2] = v24;
      id v25 = (id)a2;
      unint64_t v26 = sub_1C296291C();
      uint64_t v47 = sub_1C2A9E938();
      unint64_t v28 = v27;
      sub_1C2A9CF68();
      id v29 = v3;
      swift_bridgeObjectRetain();
      id v30 = sub_1C2A9CFC8();
      os_log_type_t v31 = sub_1C2A9E0A8();
      int v46 = v31;
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        uint64_t v43 = v7;
        uint64_t v33 = v32;
        uint64_t v42 = swift_slowAlloc();
        v51[0] = v42;
        *(_DWORD *)uint64_t v33 = 136446466;
        v41[1] = v33 + 4;
        uint64_t ObjectType = swift_getObjectType();
        sub_1C2A3D4A4();
        uint64_t v45 = v22;
        uint64_t v34 = sub_1C2A9DD58();
        unint64_t v44 = v26;
        uint64_t ObjectType = sub_1C2957168(v34, v35, v51);
        sub_1C2A9E358();

        swift_bridgeObjectRelease();
        *(_WORD *)(v33 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t ObjectType = sub_1C2957168(v47, v28, v51);
        uint64_t v22 = v45;
        sub_1C2A9E358();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C292A000, v30, (os_log_type_t)v46, "%{public}s: Error while processing distribution query: %{public}s", (uint8_t *)v33, 0x16u);
        uint64_t v36 = v42;
        swift_arrayDestroy();
        MEMORY[0x1C87656F0](v36, -1, -1);
        MEMORY[0x1C87656F0](v33, -1, -1);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v6);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      }
      uint64_t v21 = (void *)swift_allocError();
      uint64_t v37 = v49;
      *id v38 = v22;
      v38[1] = v37;
      v38[2] = v48;
    }
    double v39 = *(void (**)(void *, BOOL))&v3[qword_1EBB91EA8];
    if (v39)
    {
      swift_bridgeObjectRetain();
      sub_1C296EE5C((uint64_t)v39);
      v39(v21, a1 == 0);
      uint64_t v40 = sub_1C29B34B0((uint64_t)v39);
    }
    else
    {
      uint64_t v40 = swift_bridgeObjectRetain();
    }
    MEMORY[0x1F4188790](v40);
    v41[-4] = v3;
    v41[-3] = v21;
    LOBYTE(v41[-2]) = a1 == 0;
    sub_1C2A9CA08();
    sub_1C2962A14(v21, a1 == 0);
  }
}

id sub_1C2A3C254(void *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7, uint64_t a8, void (*a9)(char *, uint64_t), uint64_t (*a10)(void, void))
{
  uint64_t v150 = a8;
  int v148 = a7;
  uint64_t v146 = a6;
  uint64_t v141 = a5;
  uint64_t v120 = a4;
  uint64_t v151 = a3;
  uint64_t v147 = a10;
  double v143 = a1;
  int v144 = (void (*)(char *, uint64_t))a9;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2A3D76C(0, &qword_1EBB91C08, MEMORY[0x1E4F26F90], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  __C::CGRect v136 = &v118[-v14];
  uint64_t v15 = sub_1C2A9C468();
  uint64_t v138 = *(void *)(v15 - 8);
  uint64_t v139 = v15;
  MEMORY[0x1F4188790](v15);
  CGRect v137 = &v118[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C2A3D76C(0, &qword_1EBB92000, (uint64_t (*)(uint64_t))type metadata accessor for QuantityDistributionConfigurationOverrides, v12);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v140 = &v118[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v19);
  __C::CGRect v135 = &v118[-v20];
  MEMORY[0x1F4188790](v21);
  double v145 = &v118[-v22];
  sub_1C2A3D76C(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], v12);
  MEMORY[0x1F4188790](v23 - 8);
  __C::CGRect v132 = &v118[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v25);
  CGPoint v126 = &v118[-v26];
  MEMORY[0x1F4188790](v27);
  objc_super v149 = &v118[-v28];
  MEMORY[0x1F4188790](v29);
  id v152 = &v118[-v30];
  uint64_t v142 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C2A3D76C(0, &qword_1EBB92520, MEMORY[0x1E4F27928], v12);
  MEMORY[0x1F4188790](v31 - 8);
  __C::CGRect v134 = &v118[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v33);
  CGPoint v128 = &v118[-v34];
  MEMORY[0x1F4188790](v35);
  CGFloat v124 = &v118[-v36];
  uint64_t v37 = sub_1C2A9C6E8();
  uint64_t v153 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  __C::CGRect v133 = &v118[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v39);
  CGPoint v129 = &v118[-v40];
  MEMORY[0x1F4188790](v41);
  __C::CGRect v131 = &v118[-v42];
  MEMORY[0x1F4188790](v43);
  CGPoint v127 = &v118[-v44];
  MEMORY[0x1F4188790](v45);
  CGAffineTransform v125 = &v118[-v46];
  MEMORY[0x1F4188790](v47);
  uint64_t v49 = &v118[-v48];
  int v50 = *a2;
  int v51 = a2[1];
  uint64_t v52 = a2[2];
  LODWORD(v123) = a2[3];
  uint64_t v122 = *((void *)a2 + 1);
  uint64_t v53 = qword_1EBB91EB0;
  sub_1C2962438();
  uint64_t v54 = swift_allocError();
  *uint64_t v55 = 0;
  uint64_t v155 = v54;
  char v156 = 1;
  sub_1C2A3D76C(0, &qword_1EBB91C38, (uint64_t (*)(uint64_t))sub_1C2A3D848, MEMORY[0x1E4F674D8]);
  swift_allocObject();
  uint64_t v56 = v10;
  *(void *)&v10[v53] = sub_1C2A9C9F8();
  uint64_t v57 = v37;
  unint64_t v58 = v56;
  int64_t v59 = (uint64_t *)&v56[qword_1EBB91EA8];
  *int64_t v59 = 0;
  v59[1] = 0;
  *(void *)&v56[qword_1EBB91E90] = 0;
  unint64_t v60 = v143;
  *(void *)&v56[qword_1EBB91EA0] = v143;
  double v61 = &v56[qword_1EBB9F160];
  int v119 = v50;
  *double v61 = v50;
  v61[1] = v51;
  uint64_t v121 = v52;
  v61[2] = v52;
  v61[3] = (char)v123;
  *((void *)v61 + 1) = v122;
  *(void *)&v56[qword_1EBB9F180] = v146;
  id v62 = v148;
  *(void *)&v56[qword_1EBB91E98] = v148;
  uint64_t v63 = *v59;
  unint64_t v64 = v147;
  *int64_t v59 = (uint64_t)v144;
  v59[1] = (uint64_t)v64;
  id v65 = v60;
  id v66 = v62;
  swift_retain();
  uint64_t v67 = v153;
  sub_1C29B34B0(v63);
  uint64_t v68 = v150;
  unint64_t v69 = v142;
  sub_1C2A3DA18(v150, (uint64_t)&v58[qword_1EBB9F188], &qword_1EBB92520, v142);
  uint64_t v70 = v68;
  id v71 = v124;
  sub_1C2A3DA18(v70, (uint64_t)v124, &qword_1EBB92520, v69);
  uint64_t v142 = *(uint64_t (**)(uint64_t))(v67 + 48);
  double v143 = (void *)(v67 + 48);
  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v142)(v71, 1, v57) == 1)
  {
    LOBYTE(v155) = v51;
    AnchorDate.date.getter();
    sub_1C2A3D94C((uint64_t)v71, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v67 + 32))(v49, v71, v57);
  }
  uint64_t v72 = v145;
  sub_1C2A3DA18(v151, (uint64_t)v145, &qword_1EBB92000, (uint64_t (*)(uint64_t))type metadata accessor for QuantityDistributionConfigurationOverrides);
  uint64_t v73 = type metadata accessor for QuantityDistributionConfigurationOverrides();
  uint64_t v74 = *(void *)(v73 - 8);
  uint64_t v147 = *(uint64_t (**)(void, void))(v74 + 48);
  int v148 = (int *)v73;
  uint64_t v146 = v74 + 48;
  int v75 = v147(v72, 1);
  unint64_t v76 = v152;
  uint64_t v77 = (uint64_t)v126;
  int64_t v78 = v125;
  int v130 = v51;
  if (v75 == 1)
  {
    sub_1C2A3D94C((uint64_t)v72, &qword_1EBB92000, (uint64_t (*)(uint64_t))type metadata accessor for QuantityDistributionConfigurationOverrides);
    uint64_t v79 = sub_1C2A9C398();
    id v80 = v149;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v149, 1, 1, v79);
  }
  else
  {
    id v80 = v149;
    sub_1C2A3DA18((uint64_t)v72, (uint64_t)v149, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
    sub_1C2A3D9BC((uint64_t)v72);
  }
  double v81 = *(void (**)(void, void, void))(v67 + 16);
  objc_super v149 = v49;
  CGFloat v124 = (unsigned char *)(v67 + 16);
  CGFloat v123 = (void (*)(unsigned char *, unsigned char *, uint64_t))v81;
  v81(v78, v49, v57);
  uint64_t v82 = sub_1C2A9C398();
  uint64_t v83 = *(void *)(v82 - 8);
  double v145 = *(unsigned char **)(v83 + 48);
  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v145)(v80, 1, v82) == 1)
  {
    DateRange.dateInterval(endingAt:)(v78, v119, (uint64_t)v76);
    int v144 = *(void (**)(char *, uint64_t))(v67 + 8);
    v144(v78, v57);
    sub_1C2A3D94C((uint64_t)v80, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
  }
  else
  {
    int v144 = *(void (**)(char *, uint64_t))(v67 + 8);
    v144(v78, v57);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v83 + 32))(v76, v80, v82);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v83 + 56))(v76, 0, 1, v82);
  }
  uint64_t v84 = (uint64_t)v128;
  sub_1C2A3DA18((uint64_t)v76, v77, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v145)(v77, 1, v82) == 1)
  {
    sub_1C2A3D94C(v77, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
    double v85 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56);
    v85(v84, 1, 1, v57);
LABEL_14:
    double v86 = v127;
    sub_1C2A9C688();
    sub_1C2A3D94C(v84, &qword_1EBB92520, MEMORY[0x1E4F27928]);
    uint64_t v87 = *(void (**)(char *, unsigned char *, uint64_t))(v67 + 32);
    v87(&v58[qword_1EBB9F170], v86, v57);
    goto LABEL_16;
  }
  sub_1C2A9C378();
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v77, v82);
  double v85 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56);
  v85(v84, 0, 1, v57);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v142)(v84, 1, v57) == 1)
  {
    unint64_t v76 = v152;
    goto LABEL_14;
  }
  uint64_t v88 = v84;
  uint64_t v87 = *(void (**)(char *, unsigned char *, uint64_t))(v67 + 32);
  uint64_t v89 = v127;
  v87(v127, (unsigned char *)v88, v57);
  unint64_t v76 = v152;
  v87(&v58[qword_1EBB9F170], v89, v57);
LABEL_16:
  uint64_t v90 = v132;
  sub_1C2A3DA18((uint64_t)v76, (uint64_t)v132, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v145)(v90, 1, v82) == 1)
  {
    sub_1C2A3D94C((uint64_t)v90, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
    uint64_t v91 = 1;
    uint64_t v92 = v151;
    uint64_t v93 = v138;
    uint64_t v94 = (uint64_t)v136;
    uint64_t v95 = (uint64_t)v134;
  }
  else
  {
    uint64_t v96 = v134;
    sub_1C2A9C348();
    uint64_t v95 = (uint64_t)v96;
    (*(void (**)(unsigned char *, uint64_t))(v83 + 8))(v90, v82);
    uint64_t v91 = 0;
    uint64_t v92 = v151;
    uint64_t v93 = v138;
    uint64_t v94 = (uint64_t)v136;
  }
  v85(v95, v91, 1, v57);
  uint64_t v97 = v129;
  v123(v129, v149, v57);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v142)(v95, 1, v57) == 1)
  {
    double v98 = v131;
    v87(v131, v97, v57);
    sub_1C2A3D94C(v95, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  }
  else
  {
    v144(v97, v57);
    double v98 = v131;
    v87(v131, (unsigned char *)v95, v57);
  }
  uint64_t v99 = v137;
  v87(&v58[qword_1EBB9F158], v98, v57);
  LOBYTE(v155) = v130;
  unint64_t v100 = v133;
  AnchorDate.date.getter();
  v87(&v58[qword_1EBB9F150], v100, v57);
  unint64_t v101 = v135;
  sub_1C2A3DA18(v92, (uint64_t)v135, &qword_1EBB92000, (uint64_t (*)(uint64_t))type metadata accessor for QuantityDistributionConfigurationOverrides);
  id v102 = v148;
  if (((unsigned int (*)(unsigned char *, uint64_t, int *))v147)(v101, 1, v148) == 1)
  {
    sub_1C2A3D94C((uint64_t)v101, &qword_1EBB92000, (uint64_t (*)(uint64_t))type metadata accessor for QuantityDistributionConfigurationOverrides);
    uint64_t v103 = v139;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56))(v94, 1, 1, v139);
    uint64_t v104 = v141;
  }
  else
  {
    sub_1C2A3DA18((uint64_t)&v101[v102[6]], v94, &qword_1EBB91C08, MEMORY[0x1E4F26F90]);
    sub_1C2A3D9BC((uint64_t)v101);
    uint64_t v103 = v139;
    int v105 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v94, 1, v139);
    uint64_t v104 = v141;
    if (v105 != 1)
    {
      id v108 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v93 + 32);
      v108(v99, v94, v103);
      uint64_t v106 = (uint64_t)v140;
      goto LABEL_43;
    }
  }
  uint64_t v106 = (uint64_t)v140;
  switch(v121)
  {
    case 1:
      if (qword_1EBB92318 != -1) {
        swift_once();
      }
      uint64_t v107 = qword_1EBB91BF0;
      break;
    case 2:
      if (qword_1EBB8E230 != -1) {
        swift_once();
      }
      uint64_t v107 = qword_1EBB8DEB8;
      break;
    case 3:
      if (qword_1EBB8E118 != -1) {
        swift_once();
      }
      uint64_t v107 = qword_1EBB8DEE8;
      break;
    case 4:
      if (qword_1EBB8E238 != -1) {
        swift_once();
      }
      uint64_t v107 = qword_1EBB8DED0;
      break;
    default:
      if (qword_1EBB90258 != -1) {
        swift_once();
      }
      uint64_t v107 = qword_1EBB90270;
      break;
  }
  uint64_t v109 = __swift_project_value_buffer(v103, (uint64_t)v107);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v93 + 16))(v99, v109, v103);
  sub_1C2A3D94C(v94, &qword_1EBB91C08, MEMORY[0x1E4F26F90]);
  id v108 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v93 + 32);
LABEL_43:
  v108(&v58[qword_1EBB9F178], (uint64_t)v99, v103);
  sub_1C2A3DA18(v92, v106, &qword_1EBB92000, (uint64_t (*)(uint64_t))type metadata accessor for QuantityDistributionConfigurationOverrides);
  CGContextRef v110 = v148;
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v147)(v106, 1, v148) == 1)
  {
    sub_1C2A3D94C(v106, &qword_1EBB92000, (uint64_t (*)(uint64_t))type metadata accessor for QuantityDistributionConfigurationOverrides);
    CGFloat v111 = 0;
  }
  else
  {
    CGFloat v111 = *(void **)(v106 + v110[5]);
    id v112 = v111;
    sub_1C2A3D9BC(v106);
  }
  *(void *)&v58[qword_1EBB9F168] = v111;

  Operation = (objc_class *)type metadata accessor for QuantityDistributionQueryOperation();
  v154.receiver = v58;
  v154.super_class = Operation;
  id v114 = objc_msgSendSuper2(&v154, sel_init);
  id v115 = v114;
  if (v104)
  {
    uint64_t v116 = (void *)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v116 = 0;
  }
  objc_msgSend(v114, sel_setName_, v116);

  sub_1C2A3D94C(v150, &qword_1EBB92520, MEMORY[0x1E4F27928]);
  sub_1C2A3D94C(v92, &qword_1EBB92000, (uint64_t (*)(uint64_t))type metadata accessor for QuantityDistributionConfigurationOverrides);
  sub_1C2A3D94C((uint64_t)v152, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
  v144(v149, v57);
  return v114;
}

unint64_t sub_1C2A3D4A4()
{
  unint64_t result = qword_1EBB91EC8;
  if (!qword_1EBB91EC8)
  {
    type metadata accessor for QuantityDistributionQueryOperation();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB91EC8);
  }
  return result;
}

uint64_t type metadata accessor for QuantityDistributionQueryOperation()
{
  uint64_t result = qword_1EBB91EB8;
  if (!qword_1EBB91EB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C2A3D534()
{
  sub_1C2A3D76C(319, &qword_1EBB92520, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F)
  {
    sub_1C2A9C6E8();
    if (v1 <= 0x3F)
    {
      sub_1C2A9C468();
      if (v2 <= 0x3F) {
        swift_initClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for QuantityDistributionQueryOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for QuantityDistributionQueryOperation);
}

uint64_t dispatch thunk of QuantityDistributionQueryOperation.result.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for QuantityDistributionQueryOperation
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 128))();
}

uint64_t dispatch thunk of QuantityDistributionQueryOperation.__allocating_init(quantityType:configuration:configurationOverrides:name:queryQualityOfService:healthStore:baseDate:resultHandler:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for QuantityDistributionQueryOperation + v0 + 200))();
}

void sub_1C2A3D76C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2A3D7D0()
{
  return type metadata accessor for QuantityDistributionQueryOperation();
}

uint64_t sub_1C2A3D7D8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C2A3D810(uint64_t a1, void *a2, unint64_t a3)
{
}

void sub_1C2A3D83C()
{
  sub_1C2A3B4CC(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

void sub_1C2A3D848()
{
  if (!qword_1EBB92238)
  {
    sub_1C2A3D8E4(255, &qword_1EBB920D0, &qword_1EBB92138, 0x1E4F2B948, MEMORY[0x1E4FBB320]);
    sub_1C2969188();
    unint64_t v0 = sub_1C2A9E9F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB92238);
    }
  }
}

void sub_1C2A3D8E4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C29376D4(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2A3D94C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2A3D76C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2A3D9BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for QuantityDistributionConfigurationOverrides();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2A3DA18(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C2A3D76C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t static MostRecentTimePeriodQueryConfiguration.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1C2A3DAA4(uint64_t a1)
{
  unint64_t v2 = sub_1C2A3DC84();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A3DAE0(uint64_t a1)
{
  unint64_t v2 = sub_1C2A3DC84();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MostRecentTimePeriodQueryConfiguration.encode(to:)(void *a1)
{
  sub_1C2A3DC28();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A3DC84();
  sub_1C2A9EA18();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1C2A3DC28()
{
  if (!qword_1EBB8F9D8)
  {
    sub_1C2A3DC84();
    unint64_t v0 = sub_1C2A9E878();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8F9D8);
    }
  }
}

unint64_t sub_1C2A3DC84()
{
  unint64_t result = qword_1EBB8F6E8;
  if (!qword_1EBB8F6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8F6E8);
  }
  return result;
}

uint64_t MostRecentTimePeriodQueryConfiguration.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1C2A3DD00(void *a1)
{
  sub_1C2A3DC28();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A3DC84();
  sub_1C2A9EA18();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for MostRecentTimePeriodQueryConfiguration()
{
  return &type metadata for MostRecentTimePeriodQueryConfiguration;
}

ValueMetadata *type metadata accessor for MostRecentTimePeriodQueryConfiguration.CodingKeys()
{
  return &type metadata for MostRecentTimePeriodQueryConfiguration.CodingKeys;
}

unint64_t sub_1C2A3DE30()
{
  unint64_t result = qword_1EBB8F6F8;
  if (!qword_1EBB8F6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8F6F8);
  }
  return result;
}

unint64_t sub_1C2A3DE88()
{
  unint64_t result = qword_1EBB8F6F0;
  if (!qword_1EBB8F6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8F6F0);
  }
  return result;
}

unint64_t sub_1C2A3DEDC()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C2A3DEF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A41A70(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C2A3DF24(uint64_t a1)
{
  unint64_t v2 = sub_1C2A3E0E8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A3DF60(uint64_t a1)
{
  unint64_t v2 = sub_1C2A3E0E8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TimeZoneChangePublisher.CacheData.encode(to:)(void *a1)
{
  sub_1C2A3E2C0(0, &qword_1EA31EFD0, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A3E0E8();
  sub_1C2A9EA18();
  sub_1C2A9E828();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C2A3E0E8()
{
  unint64_t result = qword_1EA31EFD8;
  if (!qword_1EA31EFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EFD8);
  }
  return result;
}

uint64_t TimeZoneChangePublisher.CacheData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C2A3E2C0(0, &qword_1EA31EFE0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A3E0E8();
  sub_1C2A9EA08();
  if (!v2)
  {
    uint64_t v10 = sub_1C2A9E768();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C2A3E2C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C2A3E0E8();
    unint64_t v7 = a3(a1, &type metadata for TimeZoneChangePublisher.CacheData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C2A3E324@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return TimeZoneChangePublisher.CacheData.init(from:)(a1, a2);
}

uint64_t sub_1C2A3E33C(void *a1)
{
  sub_1C2A3E2C0(0, &qword_1EA31EFD0, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A3E0E8();
  sub_1C2A9EA18();
  sub_1C2A9E828();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C2A3E488()
{
  uint64_t v1 = *v0;
  sub_1C2A3E6B8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = *(uint64_t *)((char *)v0
                      + OBJC_IVAR____TtC19HealthVisualization23TimeZoneChangePublisher_changeDetectionSubject);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v1;
  sub_1C2987CC0();
  sub_1C2A9C968();
  sub_1C2A3F14C(&qword_1EBB92070, (void (*)(uint64_t))sub_1C2987CC0);
  swift_retain();
  sub_1C2A9D4B8();
  swift_release();
  swift_release();
  sub_1C2A3F14C(&qword_1EBB8F760, (void (*)(uint64_t))sub_1C2A3E6B8);
  uint64_t v9 = sub_1C2A9D4A8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

void sub_1C2A3E6B8()
{
  if (!qword_1EBB8F768)
  {
    sub_1C2987CC0();
    sub_1C2A9C968();
    sub_1C2A3F14C(&qword_1EBB92070, (void (*)(uint64_t))sub_1C2987CC0);
    unint64_t v0 = sub_1C2A9D398();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8F768);
    }
  }
}

uint64_t sub_1C2A3E764()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2A3E79C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v76 = a1;
  uint64_t v3 = sub_1C2A9CFE8();
  uint64_t v78 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v74 = (char *)&v71 - v7;
  uint64_t v8 = sub_1C2A9C8B8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v71 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v71 - v16;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t v43 = sub_1C2A9C968();
    uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56);
    uint64_t v45 = a2;
    return v44(v45, 1, 1, v43);
  }
  uint64_t v19 = Strong;
  uint64_t v73 = a2;
  uint64_t v75 = v3;
  uint64_t v77 = v8;
  uint64_t v20 = *(void (**)(uint64_t))(Strong
                                       + OBJC_IVAR____TtC19HealthVisualization23TimeZoneChangePublisher_currentTimeZoneGenerator);
  uint64_t v21 = swift_retain();
  v20(v21);
  swift_release();
  swift_retain();
  sub_1C2A9C9B8();
  swift_release();
  uint64_t v23 = v80;
  unint64_t v22 = v81;
  uint64_t v24 = v17;
  if (v23 == sub_1C2A9C888() && v22 == v25)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  char v27 = sub_1C2A9E8D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27)
  {
LABEL_11:
    sub_1C2A9CF68();
    uint64_t v46 = v77;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v17, v77);
    swift_retain_n();
    uint64_t v47 = sub_1C2A9CFC8();
    os_log_type_t v48 = sub_1C2A9E0C8();
    int v49 = v48;
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v50 = swift_slowAlloc();
      uint64_t v72 = v9;
      uint64_t v51 = v50;
      uint64_t v74 = (char *)swift_slowAlloc();
      uint64_t v79 = v74;
      *(_DWORD *)uint64_t v51 = 136446978;
      uint64_t v52 = sub_1C2A9EA58();
      LODWORD(v76) = v49;
      uint64_t v80 = sub_1C2957168(v52, v53, (uint64_t *)&v79);
      sub_1C2A9E358();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2082;
      uint64_t v54 = *(void *)(v19 + 16);
      unint64_t v55 = *(void *)(v19 + 24);
      swift_bridgeObjectRetain();
      uint64_t v80 = sub_1C2957168(v54, v55, (uint64_t *)&v79);
      sub_1C2A9E358();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 22) = 2082;
      swift_retain();
      sub_1C2A9C9B8();
      swift_release();
      uint64_t v80 = sub_1C2957168(v80, v81, (uint64_t *)&v79);
      sub_1C2A9E358();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 32) = 2082;
      uint64_t v56 = sub_1C2A9C888();
      uint64_t v80 = sub_1C2957168(v56, v57, (uint64_t *)&v79);
      uint64_t v58 = v73;
      sub_1C2A9E358();
      swift_bridgeObjectRelease();
      int64_t v59 = *(void (**)(char *, uint64_t))(v72 + 8);
      unint64_t v60 = v11;
      uint64_t v61 = v77;
      v59(v60, v77);
      _os_log_impl(&dword_1C292A000, v47, (os_log_type_t)v76, "[%{public}s:%{public}s] Time zone not changed (past: %{public}s, current: %{public}s), not sending changes.", (uint8_t *)v51, 0x2Au);
      id v62 = v74;
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v62, -1, -1);
      MEMORY[0x1C87656F0](v51, -1, -1);
      swift_release();

      (*(void (**)(char *, uint64_t))(v78 + 8))(v5, v75);
      uint64_t v63 = v58;
      v59(v24, v61);
    }
    else
    {

      unint64_t v64 = *(void (**)(char *, uint64_t))(v9 + 8);
      v64(v11, v46);
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v5, v75);
      v64(v17, v46);
      uint64_t v63 = v73;
    }
    uint64_t v43 = sub_1C2A9C968();
    uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56);
    uint64_t v45 = v63;
    return v44(v45, 1, 1, v43);
  }
  uint64_t v28 = v74;
  sub_1C2A9CF68();
  uint64_t v29 = v77;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v14, v17, v77);
  swift_retain_n();
  uint64_t v30 = sub_1C2A9CFC8();
  os_log_type_t v31 = sub_1C2A9E0C8();
  int v32 = v31;
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    uint64_t v79 = (char *)v72;
    *(_DWORD *)uint64_t v33 = 136446978;
    os_log_t v71 = v30;
    uint64_t v34 = sub_1C2A9EA58();
    uint64_t v80 = sub_1C2957168(v34, v35, (uint64_t *)&v79);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2082;
    LODWORD(v76) = v32;
    uint64_t v36 = *(void *)(v19 + 16);
    unint64_t v37 = *(void *)(v19 + 24);
    swift_bridgeObjectRetain();
    uint64_t v80 = sub_1C2957168(v36, v37, (uint64_t *)&v79);
    sub_1C2A9E358();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 22) = 2082;
    swift_retain();
    sub_1C2A9C9B8();
    swift_release();
    uint64_t v80 = sub_1C2957168(v80, v81, (uint64_t *)&v79);
    sub_1C2A9E358();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 32) = 2082;
    uint64_t v38 = sub_1C2A9C888();
    uint64_t v80 = sub_1C2957168(v38, v39, (uint64_t *)&v79);
    uint64_t v29 = v77;
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    uint64_t v40 = *(void (**)(char *, uint64_t))(v9 + 8);
    v40(v14, v29);
    os_log_t v41 = v71;
    _os_log_impl(&dword_1C292A000, v71, (os_log_type_t)v76, "[%{public}s:%{public}s] Time zone changed from %{public}s to %{public}s, sending changes.", (uint8_t *)v33, 0x2Au);
    uint64_t v42 = v72;
    swift_arrayDestroy();
    MEMORY[0x1C87656F0](v42, -1, -1);
    MEMORY[0x1C87656F0](v33, -1, -1);

    (*(void (**)(char *, uint64_t))(v78 + 8))(v74, v75);
  }
  else
  {
    swift_release_n();
    uint64_t v40 = *(void (**)(char *, uint64_t))(v9 + 8);
    v40(v14, v29);

    (*(void (**)(char *, uint64_t))(v78 + 8))(v28, v75);
  }
  uint64_t v66 = sub_1C2A9C888();
  MEMORY[0x1F4188790](v66);
  *(&v71 - 2) = v67;
  *(&v71 - 1) = v68;
  swift_retain();
  sub_1C2A9C9C8();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v69 = v73;
  sub_1C2A3F29C(v73);
  swift_release();
  v40(v17, v29);
  uint64_t v70 = sub_1C2A9C968();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v69, 0, 1, v70);
}

uint64_t sub_1C2A3F10C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2A3F144@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A3E79C(*(void *)(v1 + 24), a1);
}

uint64_t sub_1C2A3F14C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2A3F194@<X0>(void *a1@<X8>)
{
  swift_retain();
  sub_1C2A9C9B8();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C2A3F1E4()
{
  return swift_release();
}

uint64_t sub_1C2A3F254()
{
  swift_retain();
  sub_1C2A9C9B8();
  return swift_release();
}

uint64_t sub_1C2A3F29C@<X0>(uint64_t a1@<X8>)
{
  sub_1C2A3FF84();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v13[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC19HealthVisualization23TimeZoneChangePublisher____lazy_storage___changeSetToUse;
  swift_beginAccess();
  sub_1C29B3A9C(v9, (uint64_t)v8);
  uint64_t v10 = sub_1C2A9C968();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_1C29B34C0((uint64_t)v8);
  sub_1C2A3F468();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess();
  sub_1C29B3B30((uint64_t)v5, v9);
  return swift_endAccess();
}

uint64_t sub_1C2A3F468()
{
  unint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C2A4191C(v0);
  swift_bridgeObjectRelease();
  unint64_t v27 = v1 & 0xC000000000000001;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_1C2A9E428();
    if (v2) {
      goto LABEL_3;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    if (*(void *)(MEMORY[0x1E4FBC860] + 16))
    {
LABEL_22:
      sub_1C2960AA0();
      uint64_t v6 = sub_1C2A9E688();
      goto LABEL_23;
    }
LABEL_7:
    uint64_t v6 = MEMORY[0x1E4FBC868];
LABEL_23:
    v28[0] = v6;
    uint64_t v24 = (void *)swift_bridgeObjectRetain();
    sub_1C2A404B4(v24, 1, v28);
    swift_bridgeObjectRelease();
    return sub_1C2A9C938();
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v32 = MEMORY[0x1E4FBC860];
  sub_1C2978A4C(0, v2 & ~(v2 >> 63), 0);
  if (v27)
  {
    uint64_t v3 = sub_1C2A9E3D8();
    char v5 = 1;
  }
  else
  {
    uint64_t v3 = sub_1C2A41894(v1);
    char v5 = v7 & 1;
  }
  uint64_t v29 = v3;
  uint64_t v30 = v4;
  char v31 = v5;
  if ((v2 & 0x8000000000000000) == 0)
  {
    id v26 = self;
    do
    {
      while (1)
      {
        int64_t v14 = v29;
        uint64_t v13 = v30;
        char v15 = v31;
        sub_1C2A4161C(v29, v30, v31, v1);
        uint64_t v17 = v16;
        id v18 = objc_msgSend(v26, sel_sampleTypeChangeWithSampleType_dateInterval_hasUnfrozenSeries_, v16, 0, 0);
        uint64_t v19 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C2978A4C(0, *(void *)(v19 + 16) + 1, 1);
          uint64_t v19 = v32;
        }
        unint64_t v21 = *(void *)(v19 + 16);
        unint64_t v20 = *(void *)(v19 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1C2978A4C(v20 > 1, v21 + 1, 1);
          uint64_t v19 = v32;
        }
        *(void *)(v19 + 16) = v21 + 1;
        uint64_t v22 = v19 + 16 * v21;
        *(void *)(v22 + 32) = v17;
        *(void *)(v22 + 40) = v18;
        if (v27) {
          break;
        }
        int64_t v8 = sub_1C2A31630(v14, v13, v15, v1);
        uint64_t v10 = v9;
        char v12 = v11;
        sub_1C2942E7C(v14, v13, v15);
        uint64_t v29 = v8;
        uint64_t v30 = v10;
        char v31 = v12 & 1;
        if (!--v2) {
          goto LABEL_21;
        }
      }
      if ((v15 & 1) == 0) {
        goto LABEL_25;
      }
      if (sub_1C2A9E3F8()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_1C2A41AF8(0, (unint64_t *)&qword_1EA31E600, MEMORY[0x1E4FBB4E0]);
      uint64_t v23 = (void (*)(void *, void))sub_1C2A9DFA8();
      sub_1C2A9E478();
      v23(v28, 0);
      --v2;
    }
    while (v2);
LABEL_21:
    sub_1C2942E7C(v29, v30, v31);
    swift_bridgeObjectRelease();
    if (*(void *)(v32 + 16)) {
      goto LABEL_22;
    }
    goto LABEL_7;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t TimeZoneChangePublisher.__allocating_init(cacheData:sampleTypesToNotifyOnChange:context:currentTimeZoneGenerator:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  uint64_t v12 = swift_allocObject();
  TimeZoneChangePublisher.init(cacheData:sampleTypesToNotifyOnChange:context:currentTimeZoneGenerator:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t *TimeZoneChangePublisher.init(cacheData:sampleTypesToNotifyOnChange:context:currentTimeZoneGenerator:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  char v7 = v6;
  unint64_t v37 = a5;
  uint64_t v38 = a6;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v41 = *v7;
  uint64_t v10 = sub_1C2A9E1E8();
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v43 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C2A9C8B8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v19 = (char *)v7 + OBJC_IVAR____TtC19HealthVisualization23TimeZoneChangePublisher____lazy_storage___changeSetToUse;
  uint64_t v20 = sub_1C2A9C968();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  uint64_t v21 = OBJC_IVAR____TtC19HealthVisualization23TimeZoneChangePublisher_changeDetectionSubject;
  sub_1C2987CC0();
  swift_allocObject();
  *(uint64_t *)((char *)v7 + v21) = sub_1C2A9D438();
  *(uint64_t *)((char *)v7 + OBJC_IVAR____TtC19HealthVisualization23TimeZoneChangePublisher_notificationCancellationToken) = 0;
  v7[5] = a2;
  if (v17)
  {
    uint64_t v23 = v37;
    uint64_t v22 = v38;
  }
  else
  {
    uint64_t v24 = v37;
    uint64_t v22 = v38;
    v37();
    uint64_t v18 = sub_1C2A9C888();
    uint64_t v17 = v25;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v23 = v24;
  }
  uint64_t v44 = v18;
  uint64_t v45 = v17;
  sub_1C2A3FC00();
  swift_allocObject();
  uint64_t v26 = sub_1C2A9C9F8();
  v7[2] = v39;
  v7[3] = v40;
  v7[4] = v26;
  unint64_t v27 = (void (**)(void))((char *)v7
                        + OBJC_IVAR____TtC19HealthVisualization23TimeZoneChangePublisher_currentTimeZoneGenerator);
  *unint64_t v27 = v23;
  v27[1] = v22;
  uint64_t v28 = self;
  swift_retain();
  id v29 = objc_msgSend(v28, sel_defaultCenter);
  sub_1C2A9E1F8();

  uint64_t v30 = swift_allocObject();
  swift_weakInit();
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v41;
  *(void *)(v31 + 16) = v30;
  *(void *)(v31 + 24) = v32;
  sub_1C2A3F14C(&qword_1EBB8F880, MEMORY[0x1E4F27FC8]);
  uint64_t v33 = v43;
  uint64_t v34 = sub_1C2A9D4F8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v33);
  *(uint64_t *)((char *)v7 + OBJC_IVAR____TtC19HealthVisualization23TimeZoneChangePublisher_notificationCancellationToken) = v34;
  swift_release();
  return v7;
}

void sub_1C2A3FC00()
{
  if (!qword_1EBB8E888)
  {
    unint64_t v0 = sub_1C2A9C9D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB8E888);
    }
  }
}

uint64_t sub_1C2A3FC58()
{
  uint64_t v0 = sub_1C2A9CFE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    sub_1C2A9CF68();
    swift_retain_n();
    uint64_t v6 = sub_1C2A9CFC8();
    os_log_type_t v7 = sub_1C2A9E0C8();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v17 = v0;
      uint64_t v9 = v8;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v19 = v16;
      *(_DWORD *)uint64_t v9 = 136446466;
      uint64_t v10 = sub_1C2A9EA58();
      uint64_t v18 = sub_1C2957168(v10, v11, &v19);
      sub_1C2A9E358();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2082;
      uint64_t v13 = *(void *)(v5 + 16);
      unint64_t v12 = *(void *)(v5 + 24);
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1C2957168(v13, v12, &v19);
      sub_1C2A9E358();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C292A000, v6, v7, "[%{public}s:%{public}s] Time zone change notification fired", (uint8_t *)v9, 0x16u);
      uint64_t v14 = v16;
      swift_arrayDestroy();
      MEMORY[0x1C87656F0](v14, -1, -1);
      MEMORY[0x1C87656F0](v9, -1, -1);

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v17);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
    swift_retain();
    sub_1C2A9D418();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2A3FF08()
{
  return sub_1C2A3FC58();
}

uint64_t TimeZoneChangePublisher.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C29B34C0(v0 + OBJC_IVAR____TtC19HealthVisualization23TimeZoneChangePublisher____lazy_storage___changeSetToUse);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

void sub_1C2A3FF84()
{
  if (!qword_1EBB923C8)
  {
    sub_1C2A9C968();
    unint64_t v0 = sub_1C2A9E328();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB923C8);
    }
  }
}

uint64_t TimeZoneChangePublisher.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C29B34C0(v0 + OBJC_IVAR____TtC19HealthVisualization23TimeZoneChangePublisher____lazy_storage___changeSetToUse);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A4008C()
{
  return sub_1C2A3E488();
}

uint64_t sub_1C2A400B8()
{
  return type metadata accessor for TimeZoneChangePublisher();
}

uint64_t type metadata accessor for TimeZoneChangePublisher()
{
  uint64_t result = qword_1EBB8F010;
  if (!qword_1EBB8F010) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C2A4010C()
{
  sub_1C2A3FF84();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for TimeZoneChangePublisher(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TimeZoneChangePublisher);
}

uint64_t dispatch thunk of TimeZoneChangePublisher.publisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of TimeZoneChangePublisher.cacheData.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of TimeZoneChangePublisher.__allocating_init(cacheData:sampleTypesToNotifyOnChange:context:currentTimeZoneGenerator:)()
{
  return (*(uint64_t (**)(void))(v0 + 264))();
}

void *assignWithCopy for TimeZoneChangePublisher.CacheData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for TimeZoneChangePublisher.CacheData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TimeZoneChangePublisher.CacheData()
{
  return &type metadata for TimeZoneChangePublisher.CacheData;
}

unsigned char *storeEnumTagSinglePayload for TimeZoneChangePublisher.CacheData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2A40374);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeZoneChangePublisher.CacheData.CodingKeys()
{
  return &type metadata for TimeZoneChangePublisher.CacheData.CodingKeys;
}

unint64_t sub_1C2A403B0()
{
  unint64_t result = qword_1EA31EFE8;
  if (!qword_1EA31EFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EFE8);
  }
  return result;
}

unint64_t sub_1C2A40408()
{
  unint64_t result = qword_1EA31EFF0;
  if (!qword_1EA31EFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EFF0);
  }
  return result;
}

unint64_t sub_1C2A40460()
{
  unint64_t result = qword_1EA31EFF8;
  if (!qword_1EA31EFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31EFF8);
  }
  return result;
}

void sub_1C2A404B4(void *a1, char a2, void *a3)
{
  uint64_t v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  os_log_type_t v7 = (void *)a1[4];
  uint64_t v8 = (void *)a1[5];
  swift_bridgeObjectRetain();
  uint64_t v43 = v7;
  uint64_t v9 = (void *)*a3;
  id v10 = v7;
  id v11 = v8;
  unint64_t v13 = sub_1C295DE84((uint64_t)v10);
  uint64_t v14 = v9[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15)) {
    goto LABEL_23;
  }
  char v17 = v12;
  if (v9[3] >= v16)
  {
    if (a2)
    {
      if (v12) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1C2960508();
      if (v17) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v13 >> 6) + 64) |= 1 << v13;
    uint64_t v23 = 8 * v13;
    *(void *)(v22[6] + v23) = v10;
    *(void *)(v22[7] + v23) = v11;
    uint64_t v24 = v22[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v22[2] = v26;
    uint64_t v27 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v28 = (void **)(a1 + 7);
    while (1)
    {
      id v29 = *v28;
      uint64_t v43 = *(v28 - 1);
      uint64_t v30 = (void *)*a3;
      id v31 = v43;
      id v11 = v29;
      unint64_t v32 = sub_1C295DE84((uint64_t)v31);
      uint64_t v34 = v30[2];
      BOOL v35 = (v33 & 1) == 0;
      BOOL v25 = __OFADD__(v34, v35);
      uint64_t v36 = v34 + v35;
      if (v25) {
        break;
      }
      char v37 = v33;
      if (v30[3] < v36)
      {
        sub_1C295F340(v36, 1);
        unint64_t v32 = sub_1C295DE84((uint64_t)v31);
        if ((v37 & 1) != (v38 & 1)) {
          goto LABEL_25;
        }
      }
      if (v37) {
        goto LABEL_10;
      }
      uint64_t v39 = (void *)*a3;
      *(void *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      uint64_t v40 = 8 * v32;
      *(void *)(v39[6] + v40) = v31;
      *(void *)(v39[7] + v40) = v11;
      uint64_t v41 = v39[2];
      BOOL v25 = __OFADD__(v41, 1);
      uint64_t v42 = v41 + 1;
      if (v25) {
        goto LABEL_24;
      }
      _OWORD v39[2] = v42;
      v28 += 2;
      if (!--v27) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1C295F340(v16, a2 & 1);
  unint64_t v18 = sub_1C295DE84((uint64_t)v10);
  if ((v17 & 1) == (v19 & 1))
  {
    unint64_t v13 = v18;
    if ((v17 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v20 = (void *)swift_allocError();
    swift_willThrow();
    id v21 = v20;
    sub_1C2969188();
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1C29376D4(0, (unint64_t *)&qword_1EBB92468);
  sub_1C2A9E928();
  __break(1u);
LABEL_26:
  sub_1C2A9E4D8();
  sub_1C2A9DDB8();
  sub_1C29376D4(0, (unint64_t *)&qword_1EBB92468);
  sub_1C2A9E5C8();
  sub_1C2A9DDB8();
  sub_1C2A9E628();
  __break(1u);
}

uint64_t sub_1C2A40850(void *a1, void *a2)
{
  int v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C2A9E438();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C29376D4(0, (unint64_t *)&qword_1EBB92468);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C2A9E428();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C2A40AF0(v7, result + 1);
    uint64_t v27 = v21;
    if (*(void *)(v21 + 24) <= *(void *)(v21 + 16))
    {
      id v25 = v8;
      sub_1C2A40D00();
      uint64_t v22 = v27;
    }
    else
    {
      uint64_t v22 = v21;
      id v23 = v8;
    }
    sub_1C2A40FB8((uint64_t)v8, v22);
    *int v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C2A9E2A8();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C29376D4(0, (unint64_t *)&qword_1EBB92468);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C2A9E2B8();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        char v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C2A9E2B8();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C2A4103C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C2A40AF0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C2A41AF8(0, &qword_1EBB8F8B8, MEMORY[0x1E4FBB9A8]);
    uint64_t v2 = sub_1C2A9E4A8();
    uint64_t v14 = v2;
    sub_1C2A9E3E8();
    if (sub_1C2A9E458())
    {
      sub_1C29376D4(0, (unint64_t *)&qword_1EBB92468);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1C2A40D00();
          uint64_t v2 = v14;
        }
        uint64_t result = sub_1C2A9E2A8();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_1C2A9E458());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1C2A40D00()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C2A41AF8(0, &qword_1EBB8F8B8, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1C2A9E498();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_1C2A9E2A8();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1C2A40FB8(uint64_t a1, uint64_t a2)
{
  sub_1C2A9E2A8();
  unint64_t result = sub_1C2A9E3C8();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

void sub_1C2A4103C(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C2A40D00();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C2A411C4();
      goto LABEL_14;
    }
    sub_1C2A41388();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_1C2A9E2A8();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C29376D4(0, (unint64_t *)&qword_1EBB92468);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_1C2A9E2B8();

    if (v12)
    {
LABEL_13:
      sub_1C2A9E918();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_1C2A9E2B8();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

id sub_1C2A411C4()
{
  uint64_t v1 = v0;
  sub_1C2A41AF8(0, &qword_1EBB8F8B8, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2A9E488();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C2A41388()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C2A41AF8(0, &qword_1EBB8F8B8, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1C2A9E498();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_1C2A9E2A8();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1C2A4161C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v7 = a4;
      }
      else {
        uint64_t v7 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x1C87642E0](a1, a2, v7);
      sub_1C29376D4(0, (unint64_t *)&qword_1EBB92468);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_1C2A9E408() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1C2A9E418();
  sub_1C29376D4(0, (unint64_t *)&qword_1EBB92468);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v4 = v17;
  swift_unknownObjectRelease();
  uint64_t v8 = sub_1C2A9E2A8();
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v11 = sub_1C2A9E2B8();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v6 = (v6 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_26;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v14 = sub_1C2A9E2B8();
    }
    while ((v14 & 1) == 0);
  }

LABEL_20:
  unint64_t v15 = *(void **)(*(void *)(a4 + 48) + 8 * v6);
  id v16 = v15;
}

uint64_t sub_1C2A41894(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1C2A4191C(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C2A9E648();
    swift_bridgeObjectRelease();
  }
  sub_1C29376D4(0, (unint64_t *)&qword_1EBB92468);
  sub_1C29B3C38();
  uint64_t result = sub_1C2A9DF98();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2A9E648();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        unsigned int v6 = (void *)MEMORY[0x1C8764390](i, a1);
        sub_1C2A40850(&v9, v6);
      }
    }
    else
    {
      unint64_t v7 = (void **)(a1 + 32);
      do
      {
        unint64_t v8 = *v7++;
        sub_1C2A40850(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2A41A70(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ALL && a2 == 0x80000001C2ABA6A0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void sub_1C2A41AF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C29376D4(255, (unint64_t *)&qword_1EBB92468);
    unint64_t v7 = sub_1C29B3C38();
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2A41B78(void *a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t HealthTypeProxy.objectTypeIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *HealthTypeProxy.healthStore.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t HealthTypeProxy.init(for:healthStore:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

void *sub_1C2A41C2C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void destroy for HealthTypeProxy(uint64_t a1)
{
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 16);
}

void *_s19HealthVisualization15HealthTypeProxyVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for HealthTypeProxy(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[2];
  id v5 = (void *)a2[2];
  a1[2] = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for HealthTypeProxy(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for HealthTypeProxy()
{
  return &type metadata for HealthTypeProxy;
}

uint64_t sub_1C2A41D8C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 24) = a1;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a7;
  *(void *)(v14 + 24) = a8;
  id v15 = objc_allocWithZone(MEMORY[0x1E4F2B8A0]);
  sub_1C29376D4(0, (unint64_t *)&qword_1EBB92468);
  id v16 = a1;
  swift_retain();
  id v17 = a3;
  int64_t v18 = (void *)sub_1C2A9DE88();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1C2A43428;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2A9A60C;
  aBlock[3] = &block_descriptor_15;
  id v19 = _Block_copy(aBlock);
  id v20 = objc_msgSend(v15, sel_initWithTypes_anchor_resultsHandler_, v18, v17, v19);

  _Block_release(v19);
  swift_release();
  *(void *)(v8 + 16) = v20;
  id v21 = v20;
  if (a5)
  {
    unint64_t v22 = (void *)sub_1C2A9DCF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v22 = 0;
  }
  objc_msgSend(v20, sel_setDebugIdentifier_, v22, a4);

  id v23 = *(id *)(v8 + 16);
  objc_msgSend(v23, sel_setIncludeChangeDetails_, a6 & 1);

  swift_release();
  return v8;
}

uint64_t sub_1C2A41F8C()
{
  return swift_deallocClassInstance();
}

id sub_1C2A41FCC()
{
  return objc_msgSend(*(id *)(*(void *)v0 + 24), sel_executeQuery_, *(void *)(*(void *)v0 + 16));
}

id sub_1C2A41FE0()
{
  return objc_msgSend(*(id *)(*(void *)v0 + 24), sel_stopQuery_, *(void *)(*(void *)v0 + 16));
}

uint64_t sub_1C2A41FF4(uint64_t a1, void *a2)
{
  sub_1C2A42168();
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A42104(a1, (uint64_t)v6);
  uint64_t v7 = *a2 + qword_1EBB9EF18;
  swift_beginAccess();
  sub_1C2A4338C((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t sub_1C2A420B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1EBB9EF18;
  swift_beginAccess();
  return sub_1C2A42104(v3, a1);
}

uint64_t sub_1C2A42104(uint64_t a1, uint64_t a2)
{
  sub_1C2A42168();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C2A42168()
{
  if (!qword_1EBB92360)
  {
    sub_1C2A9C968();
    sub_1C29415E4(255, (unint64_t *)&qword_1EBB92210);
    unint64_t v0 = sub_1C2A9E9F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB92360);
    }
  }
}

id ChangeDetectorOperation.__allocating_init(types:anchor:healthStore:waitForChanges:includeChangeDetails:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  id v11 = objc_allocWithZone(v5);
  return ChangeDetectorOperation.init(types:anchor:healthStore:waitForChanges:includeChangeDetails:)(a1, a2, a3, a4, a5);
}

id ChangeDetectorOperation.init(types:anchor:healthStore:waitForChanges:includeChangeDetails:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  id v11 = &v5[qword_1EBB8DF60];
  *(_OWORD *)id v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((void *)v11 + 4) = 0;
  uint64_t v12 = (uint64_t *)&v5[qword_1EBB9EF18];
  sub_1C2A42358();
  uint64_t v13 = swift_allocError();
  *uint64_t v14 = 1;
  *uint64_t v12 = v13;
  sub_1C2A42168();
  swift_storeEnumTagMultiPayload();
  *(void *)&v5[qword_1EBB8DF68] = a1;
  *(void *)&v5[qword_1EBB8DF70] = a2;
  *(void *)&v5[qword_1EBB8DF50] = a3;
  v5[qword_1EBB8DF58] = a4;
  v5[qword_1EBB8DF48] = a5;
  v16.receiver = v5;
  v16.super_class = (Class)type metadata accessor for ChangeDetectorOperation();
  return objc_msgSendSuper2(&v16, sel_init);
}

unint64_t sub_1C2A42358()
{
  unint64_t result = qword_1EBB8DF10;
  if (!qword_1EBB8DF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8DF10);
  }
  return result;
}

uint64_t type metadata accessor for ChangeDetectorOperation()
{
  uint64_t result = qword_1EBB8DF78;
  if (!qword_1EBB8DF78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2A423F8()
{
  void (*v12)(void *__return_ptr, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, void (*)(void *, int, int), uint64_t);
  void *v13;
  uint64_t v14;
  id v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v20[2];
  void v21[3];
  uint64_t v22;
  uint64_t v23;

  uint64_t v1 = v0;
  uint64_t v2 = *(void *)((char *)v0 + qword_1EBB8DF50);
  uint64_t v3 = *(void *)((char *)v1 + qword_1EBB8DF68);
  uint64_t v4 = *(void **)((char *)v1 + qword_1EBB8DF70);
  id v5 = objc_msgSend(v1, sel_name);
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = sub_1C2A9DD28();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  uint64_t v10 = *((unsigned __int8 *)v1 + qword_1EBB8DF48);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  uint64_t v12 = *(void (**)(void *__return_ptr, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, void (*)(void *, int, int), uint64_t))(class metadata base offset for ChangeDetectorOperation + (*MEMORY[0x1E4FBC8C8] & *v1) + 112);
  uint64_t v13 = v1;
  v12(v21, v2, v3, v4, v7, v9, v10, sub_1C2A42880, v11);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C2981338((uint64_t)v21, (uint64_t)v20);
  uint64_t v14 = (uint64_t)v13 + qword_1EBB8DF60;
  swift_beginAccess();
  sub_1C2A42888((uint64_t)v20, v14);
  swift_endAccess();
  v20[0]._uint64_t countAndFlagsBits = 0;
  v20[0]._object = (void *)0xE000000000000000;
  sub_1C2A9E4D8();
  swift_bridgeObjectRelease();
  v20[0]._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v20[0]._object = (void *)0x80000001C2ABA6C0;
  sub_1C2A42918(0, &qword_1EBB92110, (uint64_t)&unk_1EBB92108, 0x1E4F2B3C8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C29376D4);
  id v15 = v4;
  sub_1C2A9DD58();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v20[0], v16);
  swift_bridgeObjectRelease();
  id v17 = v22;
  int64_t v18 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

void sub_1C2A42698(void *a1, int a2, int a3, id a4)
{
  if (objc_msgSend(a4, sel_isCancelled))
  {
    v6._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    v6._object = (void *)0x80000001C2AB6030;
    v7._uint64_t countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v6, v7);
  }
  else if ((objc_msgSend(a4, sel_isFinished) & 1) == 0)
  {
    sub_1C2A9E4D8();
    swift_bridgeObjectRelease();
    sub_1C2A42918(0, &qword_1EBB92110, (uint64_t)&unk_1EBB92108, 0x1E4F2B3C8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C29376D4);
    id v8 = a1;
    sub_1C2A9DD58();
    sub_1C2A9DDB8();
    swift_bridgeObjectRelease();
    sub_1C2A9DDB8();
    v9._uint64_t countAndFlagsBits = 0xD000000000000026;
    v9._object = (void *)0x80000001C2ABA850;
    v10._uint64_t countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v9, v10);
    uint64_t v11 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v11);
    sub_1C2A9CA08();
  }
}

uint64_t sub_1C2A42848()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C2A42880(void *a1, int a2, int a3)
{
  sub_1C2A42698(a1, a2, a3, *(id *)(v3 + 16));
}

uint64_t sub_1C2A42888(uint64_t a1, uint64_t a2)
{
  sub_1C2A42918(0, &qword_1EBB8E048, (uint64_t)&unk_1EBB8E040, (uint64_t)&protocol descriptor for DatabaseChangesProducing, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C29415E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1C2A42918(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1C2A9E328();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C2A42974(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  sub_1C2A42168();
  MEMORY[0x1F4188790](v8);
  Swift::String v10 = (uint64_t *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    if (*(unsigned char *)(a1 + qword_1EBB8DF58))
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        if (!sub_1C2A9E428()) {
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v22 = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        if (!v22)
        {
LABEL_13:
          swift_bridgeObjectRelease();
          v23._object = (void *)0x80000001C2ABA880;
          v23._uint64_t countAndFlagsBits = 0xD000000000000019;
          v24._uint64_t countAndFlagsBits = 0;
          v24._object = (void *)0xE000000000000000;
          NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v23, v24);
          return;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    id v12 = a4;
    sub_1C2A9C938();
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a1 + qword_1EBB9EF18;
    swift_beginAccess();
    sub_1C2A4338C((uint64_t)v10, v13);
    swift_endAccess();
    v14._uint64_t countAndFlagsBits = 0x64656873696E6966;
    v14._object = (void *)0xE800000000000000;
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    NSOperation.logLifeCycleEvent(_:withPrivateInfo:)(v14, v15);
    sub_1C2A42C34();
    sub_1C2A9CA18();
    return;
  }
  if (a3)
  {
    uint64_t v11 = a3;
  }
  else
  {
    sub_1C2A42358();
    uint64_t v11 = (void *)swift_allocError();
    *objc_super v16 = 1;
  }
  *Swift::String v10 = v11;
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a1 + qword_1EBB9EF18;
  swift_beginAccess();
  id v18 = a3;
  id v19 = v11;
  sub_1C2A4338C((uint64_t)v10, v17);
  swift_endAccess();
  swift_getErrorValue();
  v20._uint64_t countAndFlagsBits = sub_1C2A9E938();
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  NSOperation.logErrorString(_:withInfo:)(v20, v21);
  swift_bridgeObjectRelease();
  sub_1C2A42C34();
  sub_1C2A9CA18();
}

void sub_1C2A42BEC(void *a1)
{
  id v1 = a1;
  sub_1C2A423F8();
}

uint64_t sub_1C2A42C34()
{
  uint64_t v1 = v0 + qword_1EBB8DF60;
  swift_beginAccess();
  sub_1C2A42D18(v1, (uint64_t)&v5);
  if (v6)
  {
    sub_1C2943434(&v5, (uint64_t)&v7);
    uint64_t v2 = *((void *)&v8 + 1);
    uint64_t v3 = v9;
    __swift_project_boxed_opaque_existential_1(&v7, *((uint64_t *)&v8 + 1));
    (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
  }
  else
  {
    sub_1C2A42DA8((uint64_t)&v5);
  }
  uint64_t v9 = 0;
  long long v7 = 0u;
  long long v8 = 0u;
  swift_beginAccess();
  sub_1C2A42888((uint64_t)&v7, v1);
  return swift_endAccess();
}

uint64_t sub_1C2A42D18(uint64_t a1, uint64_t a2)
{
  sub_1C2A42918(0, &qword_1EBB8E048, (uint64_t)&unk_1EBB8E040, (uint64_t)&protocol descriptor for DatabaseChangesProducing, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C29415E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2A42DA8(uint64_t a1)
{
  sub_1C2A42918(0, &qword_1EBB8E048, (uint64_t)&unk_1EBB8E040, (uint64_t)&protocol descriptor for DatabaseChangesProducing, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C29415E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2A42E30@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v17 = type metadata accessor for DatabaseChangesProducer();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  id v18 = a1;
  swift_bridgeObjectRetain();
  id v19 = a3;
  uint64_t result = sub_1C2A41D8C(v18, a2, a3, a4, a5, a6, a7, a8);
  a9[3] = v17;
  a9[4] = (uint64_t)&off_1F1DF16F8;
  *a9 = result;
  return result;
}

uint64_t type metadata accessor for DatabaseChangesProducer()
{
  return self;
}

id ChangeDetectorOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ChangeDetectorOperation.init()()
{
}

void sub_1C2A42F94()
{
}

uint64_t sub_1C2A42FC4()
{
  swift_bridgeObjectRelease();

  sub_1C2A42DA8(v0 + qword_1EBB8DF60);
  uint64_t v1 = v0 + qword_1EBB9EF18;
  return sub_1C2A43330(v1);
}

id ChangeDetectorOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChangeDetectorOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2A4306C(uint64_t a1)
{
  swift_bridgeObjectRelease();

  sub_1C2A42DA8(a1 + qword_1EBB8DF60);
  uint64_t v2 = a1 + qword_1EBB9EF18;
  return sub_1C2A43330(v2);
}

uint64_t sub_1C2A430E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + qword_1EBB9EF18;
  swift_beginAccess();
  return sub_1C2A42104(v3, a2);
}

uint64_t dispatch thunk of AnchoredChangeSetProviding.result.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DatabaseChangesProducing.start()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DatabaseChangesProducing.stop()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_1C2A43180()
{
  sub_1C2A42168();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t method lookup function for ChangeDetectorOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChangeDetectorOperation);
}

uint64_t dispatch thunk of ChangeDetectorOperation.result.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for ChangeDetectorOperation
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 80))();
}

uint64_t dispatch thunk of ChangeDetectorOperation.__allocating_init(types:anchor:healthStore:waitForChanges:includeChangeDetails:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for ChangeDetectorOperation + v0 + 104))();
}

uint64_t dispatch thunk of ChangeDetectorOperation.makeQuery(healthStore:types:anchor:name:includeChangeDetails:resultsHandler:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for ChangeDetectorOperation
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 112))();
}

uint64_t sub_1C2A43328()
{
  return type metadata accessor for ChangeDetectorOperation();
}

uint64_t sub_1C2A43330(uint64_t a1)
{
  sub_1C2A42168();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2A4338C(uint64_t a1, uint64_t a2)
{
  sub_1C2A42168();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2A433F0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2A43428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a2, a3, a4);
}

void sub_1C2A4345C()
{
  sub_1C2A42974(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t static SignificantChangeEngine.Parameters.makeParameters(dateRange:trendAnalysisKinds:parameterOverrides:absoluteChangeThreshold:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v6 = a1;
  uint64_t v8 = *(void *)(a2 + 16);
  if (!v8)
  {
    sub_1C2A43A10((uint64_t)v57);
    Swift::String v15 = v57;
LABEL_49:
    sub_1C2A79C68((uint64_t)v15, (uint64_t)v56, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
    sub_1C2A79C68((uint64_t)v56, (uint64_t)v57, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    char v43 = 1;
    goto LABEL_58;
  }
  uint64_t v48 = *(void *)(a3 + 8);
  double v49 = *(double *)a3;
  uint64_t v51 = *(void *)(a3 + 24);
  uint64_t v52 = *(void *)(a3 + 16);
  int v53 = *(unsigned __int8 *)(a3 + 32);
  swift_bridgeObjectRetain();
  if (*(unsigned char *)(a2 + 32) == 1)
  {
    uint64_t v12 = 0;
    while (1)
    {
      char v13 = sub_1C2A9E8D8();
      swift_bridgeObjectRelease();
      if (v13) {
        break;
      }
      if (v8 - 1 == v12)
      {
        swift_bridgeObjectRelease();
        sub_1C2A43A10((uint64_t)v57);
        sub_1C2A79C68((uint64_t)v57, (uint64_t)v55, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
        char v6 = a1;
        goto LABEL_43;
      }
      char v14 = *(unsigned char *)(a2 + v12++ + 33);
      if ((v14 & 1) == 0) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
  }
  char v16 = a5 & 1;
  swift_bridgeObjectRelease();
  char v6 = a1;
  if (a1 == 4)
  {
    if (v53) {
      uint64_t v21 = 0;
    }
    else {
      uint64_t v21 = v51;
    }
    if (v53) {
      uint64_t v22 = 0;
    }
    else {
      uint64_t v22 = v52;
    }
    if (v53) {
      double v23 = 0.0;
    }
    else {
      double v23 = v49;
    }
    if (v53) {
      char v24 = 1;
    }
    else {
      char v24 = v48 & 1;
    }
    static SignificantChangeEngine.Parameters.MeanShift.oneMonth(absoluteChangeThreshold:minimumEffectSize:minimumSegmentLength:minimumDataCount:)(a4, v16, v23, v24, v22, v53, v21, v53, (uint64_t)v57);
    goto LABEL_37;
  }
  if (a1 == 5)
  {
    if (v53) {
      uint64_t v17 = 0;
    }
    else {
      uint64_t v17 = v51;
    }
    if (v53) {
      uint64_t v18 = 0;
    }
    else {
      uint64_t v18 = v52;
    }
    if (v53) {
      double v19 = 0.0;
    }
    else {
      double v19 = v49;
    }
    if (v53) {
      char v20 = 1;
    }
    else {
      char v20 = v48 & 1;
    }
    static SignificantChangeEngine.Parameters.MeanShift.sixMonths(absoluteChangeThreshold:minimumEffectSize:minimumSegmentLength:minimumDataCount:)(a4, v16, v19, v20, v18, v53, v17, v53, (uint64_t)v57);
LABEL_37:
    nullsub_1(v57);
    goto LABEL_42;
  }
  if (qword_1EBB8FF08 != -1) {
LABEL_61:
  }
    swift_once();
  uint64_t v25 = sub_1C2A9CFE8();
  __swift_project_value_buffer(v25, (uint64_t)qword_1EBB8FEF0);
  uint64_t v26 = sub_1C2A9CFC8();
  os_log_type_t v27 = sub_1C2A9E0A8();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    v57[0] = v50;
    *(_DWORD *)uint64_t v28 = 136446466;
    v56[0] = &type metadata for SignificantChangeEngine.Parameters;
    sub_1C2A62308();
    uint64_t v29 = sub_1C2A9DD58();
    v56[0] = sub_1C2957168(v29, v30, v57);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2082;
    LOBYTE(v56[0]) = a1;
    uint64_t v31 = sub_1C2A9DD58();
    v56[0] = sub_1C2957168(v31, v32, v57);
    sub_1C2A9E358();
    char v6 = a1;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C292A000, v26, v27, "[%{public}s]: Unsupported date range submitted: %{public}s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87656F0](v50, -1, -1);
    MEMORY[0x1C87656F0](v28, -1, -1);
  }

  sub_1C2A43A10((uint64_t)v57);
LABEL_42:
  sub_1C2A79C68((uint64_t)v57, (uint64_t)v55, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
LABEL_43:
  swift_bridgeObjectRetain();
  uint64_t v33 = 0;
  while (1)
  {
    uint64_t v34 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
      goto LABEL_61;
    }
    if (*(unsigned char *)(a2 + v33 + 32) == 1) {
      break;
    }
    char v35 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_51;
    }
    ++v33;
    if (v34 == v8)
    {
      swift_bridgeObjectRelease();
      Swift::String v15 = (uint64_t *)v55;
      goto LABEL_49;
    }
  }
  swift_bridgeObjectRelease();
LABEL_51:
  swift_bridgeObjectRelease();
  if (v53) {
    uint64_t v44 = 0;
  }
  else {
    uint64_t v44 = v51;
  }
  if (v53) {
    uint64_t v45 = 0;
  }
  else {
    uint64_t v45 = v52;
  }
  sub_1C2A452DC(v45, v53, v44, v53, (uint64_t)v57);
  uint64_t v36 = v57[0];
  uint64_t v37 = v57[1];
  uint64_t v38 = v57[2];
  uint64_t v39 = v57[3];
  uint64_t v40 = v57[4];
  uint64_t v41 = v57[5];
  uint64_t v42 = v57[6];
  sub_1C2A79C68((uint64_t)v55, (uint64_t)v57, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
  char v43 = 0;
LABEL_58:
  double v46 = sub_1C2A620F4(v6);
  *(void *)a6 = 10;
  *(double *)(a6 + 8) = v46;
  uint64_t result = sub_1C2A79C68((uint64_t)v57, a6 + 16, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
  *(void *)(a6 + 152) = v36;
  *(void *)(a6 + 160) = v37;
  *(void *)(a6 + 168) = v38;
  *(void *)(a6 + 176) = v39;
  *(void *)(a6 + 184) = v40;
  *(void *)(a6 + 192) = v41;
  *(void *)(a6 + 200) = v42;
  *(unsigned char *)(a6 + 208) = v43;
  return result;
}

double sub_1C2A43A10(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 1024;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(void *)(a1 + 128) = 0;
  return result;
}

void sub_1C2A43A34(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_1C297A894();
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v22 = (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v19 - v10;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v21 = *(void *)(a3 + 16);
  if (v21)
  {
    unint64_t v12 = 0;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    v19[1] = a2;
    uint64_t v20 = a3;
    v19[0] = a1;
    while (v12 < *(void *)(a3 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v15 = *(void *)(v23 + 72);
      sub_1C2A623C8(a3 + v14 + v15 * v12, (uint64_t)v11, (uint64_t (*)(void))sub_1C297A894);
      char v16 = a1(v11);
      if (v3)
      {
        sub_1C2A62588((uint64_t)v11, (uint64_t (*)(void))sub_1C297A894);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if (v16)
      {
        sub_1C2A62484((uint64_t)v11, v22, (uint64_t (*)(void))sub_1C297A894);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C2978AEC(0, *(void *)(v13 + 16) + 1, 1);
        }
        uint64_t v13 = v24;
        unint64_t v18 = *(void *)(v24 + 16);
        unint64_t v17 = *(void *)(v24 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1C2978AEC(v17 > 1, v18 + 1, 1);
          uint64_t v13 = v24;
        }
        *(void *)(v13 + 16) = v18 + 1;
        sub_1C2A62484(v22, v13 + v14 + v18 * v15, (uint64_t (*)(void))sub_1C297A894);
        a3 = v20;
        a1 = (uint64_t (*)(char *))v19[0];
      }
      else
      {
        sub_1C2A62588((uint64_t)v11, (uint64_t (*)(void))sub_1C297A894);
      }
      if (v21 == ++v12) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

void sub_1C2A43CCC(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_1C297A7F4();
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v22 = (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v19 - v10;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v21 = *(void *)(a3 + 16);
  if (v21)
  {
    unint64_t v12 = 0;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    v19[1] = a2;
    uint64_t v20 = a3;
    v19[0] = a1;
    while (v12 < *(void *)(a3 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v15 = *(void *)(v23 + 72);
      sub_1C2A623C8(a3 + v14 + v15 * v12, (uint64_t)v11, (uint64_t (*)(void))sub_1C297A7F4);
      char v16 = a1(v11);
      if (v3)
      {
        sub_1C2A62588((uint64_t)v11, (uint64_t (*)(void))sub_1C297A7F4);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if (v16)
      {
        sub_1C2A62484((uint64_t)v11, v22, (uint64_t (*)(void))sub_1C297A7F4);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C2978B3C(0, *(void *)(v13 + 16) + 1, 1);
        }
        uint64_t v13 = v24;
        unint64_t v18 = *(void *)(v24 + 16);
        unint64_t v17 = *(void *)(v24 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1C2978B3C(v17 > 1, v18 + 1, 1);
          uint64_t v13 = v24;
        }
        *(void *)(v13 + 16) = v18 + 1;
        sub_1C2A62484(v22, v13 + v14 + v18 * v15, (uint64_t (*)(void))sub_1C297A7F4);
        a3 = v20;
        a1 = (uint64_t (*)(char *))v19[0];
      }
      else
      {
        sub_1C2A62588((uint64_t)v11, (uint64_t (*)(void))sub_1C297A7F4);
      }
      if (v21 == ++v12) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C2A43F64()
{
  uint64_t v0 = sub_1C2A9CFE8();
  __swift_allocate_value_buffer(v0, qword_1EBB8FEF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB8FEF0);
  sub_1C2A9CF78();
  return sub_1C2A9CFD8();
}

uint64_t static Logger.trendGeneration.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBB8FF08 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C2A9CFE8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBB8FEF0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t SignificantChangeEngine.Output.frequencyChange.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A47B88(type metadata accessor for SignificantChangeEngine.Output, sub_1C2A62344, a1);
}

uint64_t SignificantChangeEngine.Output.state.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A47C14(type metadata accessor for SignificantChangeEngine.Output, sub_1C2A623B0, a1);
}

uint64_t SignificantChangeEngine.Output.init(meanShiftChange:frequencyChange:state:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C2A47DDC(a1, a2, a3, type metadata accessor for SignificantChangeEngine.Output, (uint64_t (*)(void))sub_1C2A6235C, (uint64_t (*)(void))sub_1C2A62430, a4);
}

uint64_t sub_1C2A44114()
{
  uint64_t v1 = 0x636E657571657266;
  if (*v0 != 1) {
    uint64_t v1 = 0x6574617473;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x666968536E61656DLL;
  }
}

uint64_t sub_1C2A44178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A786C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A441A0(uint64_t a1)
{
  unint64_t v2 = sub_1C2A624EC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A441DC(uint64_t a1)
{
  unint64_t v2 = sub_1C2A624EC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SignificantChangeEngine.Output.encode(to:)(void *a1)
{
  sub_1C2A62E9C(0, &qword_1EBB8F998, (uint64_t (*)(void))sub_1C2A624EC, (uint64_t)&type metadata for SignificantChangeEngine.Output.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A624EC();
  sub_1C2A9EA18();
  char v12 = 0;
  type metadata accessor for SignificantChange(0);
  sub_1C2A62540(&qword_1EBB8EAB8, (void (*)(uint64_t))type metadata accessor for SignificantChange);
  sub_1C2A9E818();
  if (!v1)
  {
    type metadata accessor for SignificantChangeEngine.Output(0);
    char v11 = 1;
    sub_1C2A9E818();
    char v10 = 2;
    type metadata accessor for SignificantChangeEngine.State(0);
    sub_1C2A62540(&qword_1EBB8EE80, (void (*)(uint64_t))type metadata accessor for SignificantChangeEngine.State);
    sub_1C2A9E818();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SignificantChangeEngine.Output.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  sub_1C2A62430(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v22 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A6235C(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v24 = (char *)&v20 - v9;
  sub_1C2A62E9C(0, &qword_1EBB8F910, (uint64_t (*)(void))sub_1C2A624EC, (uint64_t)&type metadata for SignificantChangeEngine.Output.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v25 = v10;
  uint64_t v23 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v20 - v11;
  uint64_t v13 = type metadata accessor for SignificantChangeEngine.Output(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A624EC();
  uint64_t v26 = v12;
  uint64_t v16 = (uint64_t)v27;
  sub_1C2A9EA08();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  os_log_type_t v27 = a1;
  type metadata accessor for SignificantChange(0);
  char v30 = 0;
  sub_1C2A62540(&qword_1EBB8EAC0, (void (*)(uint64_t))type metadata accessor for SignificantChange);
  uint64_t v17 = (uint64_t)v24;
  sub_1C2A9E758();
  sub_1C2A62484(v17, (uint64_t)v15, (uint64_t (*)(void))sub_1C2A6235C);
  char v29 = 1;
  sub_1C2A9E758();
  sub_1C2A62484((uint64_t)v7, (uint64_t)&v15[*(int *)(v13 + 20)], (uint64_t (*)(void))sub_1C2A6235C);
  type metadata accessor for SignificantChangeEngine.State(0);
  char v28 = 2;
  sub_1C2A62540(&qword_1EBB8EE88, (void (*)(uint64_t))type metadata accessor for SignificantChangeEngine.State);
  uint64_t v18 = (uint64_t)v22;
  sub_1C2A9E758();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v25);
  sub_1C2A62484(v18, (uint64_t)&v15[*(int *)(v13 + 24)], (uint64_t (*)(void))sub_1C2A62430);
  sub_1C2A623C8((uint64_t)v15, v21, type metadata accessor for SignificantChangeEngine.Output);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return sub_1C2A62588((uint64_t)v15, type metadata accessor for SignificantChangeEngine.Output);
}

uint64_t sub_1C2A44964@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SignificantChangeEngine.Output.init(from:)(a1, a2);
}

uint64_t sub_1C2A4497C(void *a1)
{
  return SignificantChangeEngine.Output.encode(to:)(a1);
}

double SignificantChangeEngine.Parameters.windowDuration.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t SignificantChangeEngine.Parameters.meanShift.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C2A79C68(v1 + 16, (uint64_t)v4, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
  return sub_1C2A79C68((uint64_t)v4, a1, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
}

__n128 SignificantChangeEngine.Parameters.frequencyShift.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 200);
  char v3 = *(unsigned char *)(v1 + 208);
  long long v4 = *(_OWORD *)(v1 + 168);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 152);
  *(_OWORD *)(a1 + 16) = v4;
  __n128 result = *(__n128 *)(v1 + 184);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 56) = v3;
  return result;
}

uint64_t static SignificantChangeEngine.Parameters.MeanShift.oneMonth(absoluteChangeThreshold:minimumEffectSize:minimumSegmentLength:minimumDataCount:)@<X0>(uint64_t result@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v9 = 5;
  if ((a6 & 1) == 0) {
    uint64_t v9 = a5;
  }
  uint64_t v10 = 10;
  if ((a8 & 1) == 0) {
    uint64_t v10 = a7;
  }
  if (v9 + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else if (v10 >= 2 * v9)
  {
    if (a4) {
      a3 = 2.0;
    }
    *(void *)a9 = 0x3F50624DD2F1A9FCLL;
    *(unsigned char *)(a9 + 8) = 0;
    double v12 = *(double *)&result * 0.5;
    char v13 = a2 & 1;
    if (a2) {
      double v12 = *(double *)&result;
    }
    *(double *)(a9 + 16) = a3;
    *(unsigned char *)(a9 + 24) = 0;
    *(double *)(a9 + 32) = *(double *)&result;
    *(unsigned char *)(a9 + 40) = v13;
    *(void *)(a9 + 48) = 0x3F747AE147AE147BLL;
    *(unsigned char *)(a9 + 56) = 0;
    *(double *)(a9 + 64) = a3 * 0.75;
    *(unsigned char *)(a9 + 72) = 0;
    *(double *)(a9 + 80) = v12;
    *(unsigned char *)(a9 + 88) = v13;
    *(unsigned char *)(a9 + 89) = 1;
    *(void *)(a9 + 96) = v9;
    *(void *)(a9 + 104) = v10;
    *(void *)(a9 + 112) = 4;
    *(unsigned char *)(a9 + 120) = 0;
    *(void *)(a9 + 128) = 0x4122750000000000;
    return result;
  }
  if (qword_1EBB8FF08 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C2A9CFE8();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EBB8FEF0);
  uint64_t v15 = sub_1C2A9CFC8();
  os_log_type_t v16 = sub_1C2A9E0A8();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446722;
    v25[0] = v18;
    sub_1C2A625E8();
    uint64_t v19 = sub_1C2A9DD58();
    sub_1C2957168(v19, v20, v25);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    uint64_t v21 = sub_1C2A9E898();
    sub_1C2957168(v21, v22, v25);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2082;
    uint64_t v23 = sub_1C2A9E898();
    sub_1C2957168(v23, v24, v25);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C292A000, v15, v16, "[%{public}s]: Invalid parameter values for minimumSegmentLength (%{public}s) and minimumDataCount (%{public}s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C87656F0](v18, -1, -1);
    MEMORY[0x1C87656F0](v17, -1, -1);
  }

  v25[0] = 0;
  v25[1] = 0xE000000000000000;
  sub_1C2A9E4D8();
  sub_1C2A9DDB8();
  sub_1C2A625E8();
  sub_1C2A9DD58();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  sub_1C2A9DDB8();
  sub_1C2A9E898();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  sub_1C2A9DDB8();
  sub_1C2A9E898();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  *(double *)&__n128 result = COERCE_DOUBLE(sub_1C2A9E628());
  __break(1u);
  return result;
}

uint64_t static SignificantChangeEngine.Parameters.MeanShift.sixMonths(absoluteChangeThreshold:minimumEffectSize:minimumSegmentLength:minimumDataCount:)@<X0>(uint64_t result@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v9 = 25;
  if ((a6 & 1) == 0) {
    uint64_t v9 = a5;
  }
  uint64_t v10 = 50;
  if ((a8 & 1) == 0) {
    uint64_t v10 = a7;
  }
  if (v9 + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else if (v10 >= 2 * v9)
  {
    if (a4) {
      a3 = 1.0;
    }
    *(void *)a9 = 0x3F50624DD2F1A9FCLL;
    *(unsigned char *)(a9 + 8) = 0;
    double v12 = *(double *)&result * 0.5;
    char v13 = a2 & 1;
    if (a2) {
      double v12 = *(double *)&result;
    }
    *(double *)(a9 + 16) = a3;
    *(unsigned char *)(a9 + 24) = 0;
    *(double *)(a9 + 32) = *(double *)&result;
    *(unsigned char *)(a9 + 40) = v13;
    *(void *)(a9 + 48) = 0x3F747AE147AE147BLL;
    *(unsigned char *)(a9 + 56) = 0;
    *(double *)(a9 + 64) = a3 * 0.75;
    *(unsigned char *)(a9 + 72) = 0;
    *(double *)(a9 + 80) = v12;
    *(unsigned char *)(a9 + 88) = v13;
    *(unsigned char *)(a9 + 89) = 1;
    *(void *)(a9 + 96) = v9;
    *(void *)(a9 + 104) = v10;
    *(void *)(a9 + 112) = 28;
    *(unsigned char *)(a9 + 120) = 0;
    *(void *)(a9 + 128) = 0x41407AC000000000;
    return result;
  }
  if (qword_1EBB8FF08 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C2A9CFE8();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EBB8FEF0);
  uint64_t v15 = sub_1C2A9CFC8();
  os_log_type_t v16 = sub_1C2A9E0A8();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446722;
    v25[0] = v18;
    sub_1C2A625E8();
    uint64_t v19 = sub_1C2A9DD58();
    sub_1C2957168(v19, v20, v25);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    uint64_t v21 = sub_1C2A9E898();
    sub_1C2957168(v21, v22, v25);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2082;
    uint64_t v23 = sub_1C2A9E898();
    sub_1C2957168(v23, v24, v25);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C292A000, v15, v16, "[%{public}s]: Invalid parameter values for minimumSegmentLength (%{public}s) and minimumDataCount (%{public}s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C87656F0](v18, -1, -1);
    MEMORY[0x1C87656F0](v17, -1, -1);
  }

  v25[0] = 0;
  v25[1] = 0xE000000000000000;
  sub_1C2A9E4D8();
  sub_1C2A9DDB8();
  sub_1C2A625E8();
  sub_1C2A9DD58();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  sub_1C2A9DDB8();
  sub_1C2A9E898();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  sub_1C2A9DDB8();
  sub_1C2A9E898();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  *(double *)&__n128 result = COERCE_DOUBLE(sub_1C2A9E628());
  __break(1u);
  return result;
}

uint64_t sub_1C2A452DC@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5 = 5;
  if ((a2 & 1) == 0) {
    uint64_t v5 = result;
  }
  uint64_t v6 = 10;
  if ((a4 & 1) == 0) {
    uint64_t v6 = a3;
  }
  if (v5 + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else if (v6 >= 2 * v5)
  {
    *(void *)a5 = 0x3F847AE147AE147BLL;
    *(void *)(a5 + 8) = v5;
    *(void *)(a5 + 16) = v6;
    *(_OWORD *)(a5 + 24) = xmmword_1C2AAF2A0;
    *(void *)(a5 + 40) = 28;
    *(void *)(a5 + 48) = 0x4122750000000000;
    return result;
  }
  if (qword_1EBB8FF08 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1C2A9CFE8();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBB8FEF0);
  uint64_t v8 = sub_1C2A9CFC8();
  os_log_type_t v9 = sub_1C2A9E0A8();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446722;
    v18[0] = v11;
    sub_1C2A79FFC();
    uint64_t v12 = sub_1C2A9DD58();
    sub_1C2957168(v12, v13, v18);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    uint64_t v14 = sub_1C2A9E898();
    sub_1C2957168(v14, v15, v18);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2082;
    uint64_t v16 = sub_1C2A9E898();
    sub_1C2957168(v16, v17, v18);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C292A000, v8, v9, "[%{public}s]: Invalid parameter values for minimumSegmentLength (%{public}s) and minimumDataCount (%{public}s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C87656F0](v11, -1, -1);
    MEMORY[0x1C87656F0](v10, -1, -1);
  }

  v18[0] = 0;
  v18[1] = 0xE000000000000000;
  sub_1C2A9E4D8();
  sub_1C2A9DDB8();
  sub_1C2A79FFC();
  sub_1C2A9DD58();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  sub_1C2A9DDB8();
  sub_1C2A9E898();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  sub_1C2A9DDB8();
  sub_1C2A9E898();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  __n128 result = sub_1C2A9E628();
  __break(1u);
  return result;
}

uint64_t SignificantChangeEngine.Parameters.Thresholds.maximumPValue.getter()
{
  return *(void *)v0;
}

uint64_t SignificantChangeEngine.Parameters.Thresholds.minimumEffectSize.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t SignificantChangeEngine.Parameters.Thresholds.minimumAbsoluteChange.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_1C2A456EC()
{
  unint64_t v1 = 0xD000000000000011;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000015;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x506D756D6978616DLL;
  }
}

uint64_t sub_1C2A45758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A7883C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A45780(uint64_t a1)
{
  unint64_t v2 = sub_1C2A62624();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A457BC(uint64_t a1)
{
  unint64_t v2 = sub_1C2A62624();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SignificantChangeEngine.Parameters.Thresholds.encode(to:)(void *a1)
{
  sub_1C2A62E9C(0, &qword_1EA31F010, (uint64_t (*)(void))sub_1C2A62624, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.Thresholds.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  int v15 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v12 = *(void *)(v1 + 32);
  uint64_t v13 = v8;
  v11[1] = *(unsigned __int8 *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A62624();
  sub_1C2A9EA18();
  char v18 = 0;
  uint64_t v9 = v14;
  sub_1C2A9E7F8();
  if (!v9)
  {
    char v17 = 1;
    sub_1C2A9E7F8();
    char v16 = 2;
    sub_1C2A9E7F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SignificantChangeEngine.Parameters.Thresholds.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  sub_1C2A62E9C(0, &qword_1EA31F020, (uint64_t (*)(void))sub_1C2A62624, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.Thresholds.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v21 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A62624();
  sub_1C2A9EA08();
  if (!v2)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v22;
    char v26 = 0;
    uint64_t v11 = sub_1C2A9E738();
    char v13 = v12;
    char v25 = 1;
    uint64_t v14 = sub_1C2A9E738();
    int v23 = v15;
    uint64_t v21 = v14;
    char v24 = 2;
    uint64_t v17 = sub_1C2A9E738();
    char v18 = v8;
    char v20 = v19;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v5);
    *(void *)uint64_t v10 = v11;
    *(unsigned char *)(v10 + 8) = v13 & 1;
    *(void *)(v10 + 16) = v21;
    *(unsigned char *)(v10 + 24) = v23 & 1;
    *(void *)(v10 + 32) = v17;
    *(unsigned char *)(v10 + 40) = v20 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C2A45C24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SignificantChangeEngine.Parameters.Thresholds.init(from:)(a1, a2);
}

uint64_t sub_1C2A45C3C(void *a1)
{
  return SignificantChangeEngine.Parameters.Thresholds.encode(to:)(a1);
}

HealthVisualization::SignificantChangeEngine::Parameters::ChangepointMode_optional __swiftcall SignificantChangeEngine.Parameters.ChangepointMode.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C2A9E6E8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t SignificantChangeEngine.Parameters.ChangepointMode.rawValue.getter()
{
  uint64_t result = 0x65756C615670;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6953746365666665;
      break;
    case 2:
      uint64_t result = 0x6D726F4E326CLL;
      break;
    case 3:
      uint64_t result = 0x7473697461745374;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2A45D40()
{
  return sub_1C2A9E9E8();
}

uint64_t sub_1C2A45E1C()
{
  sub_1C2A9DD78();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2A45EE0()
{
  return sub_1C2A9E9E8();
}

HealthVisualization::SignificantChangeEngine::Parameters::ChangepointMode_optional sub_1C2A45FB8(Swift::String *a1)
{
  return SignificantChangeEngine.Parameters.ChangepointMode.init(rawValue:)(*a1);
}

void sub_1C2A45FC4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x65756C615670;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA0000000000657ALL;
      uint64_t v3 = 0x6953746365666665;
      goto LABEL_3;
    case 2:
      *a1 = 0x6D726F4E326CLL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x7473697461745374;
      a1[1] = 0xEA00000000006369;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C2A46060(unsigned __int8 *a1, char *a2)
{
  return sub_1C2954E40(*a1, *a2);
}

uint64_t sub_1C2A4606C()
{
  return sub_1C2A9DE58();
}

uint64_t sub_1C2A460CC()
{
  return sub_1C2A9DE38();
}

void SignificantChangeEngine.Parameters.MeanShift.thresholds.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  char v6 = *(unsigned char *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
}

void SignificantChangeEngine.Parameters.MeanShift.opportunisticThresholds.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  char v4 = *(unsigned char *)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  char v6 = *(unsigned char *)(v1 + 88);
  *(void *)a1 = *(void *)(v1 + 48);
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
}

void SignificantChangeEngine.Parameters.MeanShift.mode.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 89);
}

uint64_t SignificantChangeEngine.Parameters.MeanShift.minimumSegmentLength.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t SignificantChangeEngine.Parameters.MeanShift.minimumDataCount.getter()
{
  return *(void *)(v0 + 104);
}

uint64_t SignificantChangeEngine.Parameters.MeanShift.maxSegmentLengthWithoutRecentData.getter()
{
  return *(void *)(v0 + 112);
}

double SignificantChangeEngine.Parameters.MeanShift.cooldownPeriodLength.getter()
{
  return *(double *)(v0 + 128);
}

unint64_t sub_1C2A461B8(char a1)
{
  unint64_t result = 0x6C6F687365726874;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 1701080941;
      break;
    case 3:
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C2A4629C()
{
  return sub_1C2A461B8(*v0);
}

uint64_t sub_1C2A462A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A789AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A462CC(uint64_t a1)
{
  unint64_t v2 = sub_1C2A62678();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A46308(uint64_t a1)
{
  unint64_t v2 = sub_1C2A62678();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SignificantChangeEngine.Parameters.MeanShift.encode(to:)(void *a1)
{
  sub_1C2A62E9C(0, &qword_1EA31F028, (uint64_t (*)(void))sub_1C2A62678, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v31 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = *v1;
  char v6 = *((unsigned char *)v1 + 8);
  uint64_t v7 = v1[2];
  int v8 = *((unsigned __int8 *)v1 + 24);
  uint64_t v9 = v1[4];
  int v32 = *((unsigned __int8 *)v1 + 40);
  int v33 = v8;
  uint64_t v30 = v1[6];
  int v29 = *((unsigned __int8 *)v1 + 56);
  uint64_t v28 = v1[8];
  int v27 = *((unsigned __int8 *)v1 + 72);
  uint64_t v26 = v1[10];
  int v10 = *((unsigned __int8 *)v1 + 88);
  int v24 = *((unsigned __int8 *)v1 + 89);
  int v25 = v10;
  uint64_t v11 = v1[12];
  uint64_t v22 = v1[13];
  uint64_t v23 = v11;
  uint64_t v21 = v1[14];
  v20[1] = *((unsigned __int8 *)v1 + 120);
  uint64_t v12 = a1[3];
  char v13 = a1;
  int v15 = (char *)v20 - v14;
  __swift_project_boxed_opaque_existential_1(v13, v12);
  sub_1C2A62678();
  sub_1C2A9EA18();
  uint64_t v36 = v5;
  char v37 = v6;
  uint64_t v38 = v7;
  char v39 = v33;
  uint64_t v40 = v9;
  char v41 = v32;
  char v35 = 0;
  sub_1C2A626CC();
  uint64_t v16 = v34;
  sub_1C2A9E868();
  if (v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v15, v4);
  }
  uint64_t v18 = v31;
  uint64_t v36 = v30;
  char v37 = v29;
  uint64_t v38 = v28;
  char v39 = v27;
  uint64_t v40 = v26;
  char v19 = v24;
  char v41 = v25;
  char v35 = 1;
  sub_1C2A9E868();
  LOBYTE(v36) = v19;
  char v35 = 2;
  sub_1C2A62720();
  sub_1C2A9E868();
  LOBYTE(v36) = 3;
  sub_1C2A9E858();
  LOBYTE(v36) = 4;
  sub_1C2A9E858();
  LOBYTE(v36) = 5;
  sub_1C2A9E808();
  LOBYTE(v36) = 6;
  sub_1C2A9E848();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v15, v4);
}

uint64_t SignificantChangeEngine.Parameters.MeanShift.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C2A62E9C(0, &qword_1EA31F048, (uint64_t (*)(void))sub_1C2A62678, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = a1[3];
  double v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1C2A62678();
  sub_1C2A9EA08();
  if (!v2)
  {
    uint64_t v44 = a2;
    uint64_t v45 = v7;
    v58[0] = 0;
    sub_1C2A62774();
    uint64_t v11 = v6;
    sub_1C2A9E7A8();
    uint64_t v43 = v62;
    int v42 = v63;
    uint64_t v12 = v64;
    int v13 = v65;
    uint64_t v14 = v66;
    int v15 = v67;
    v58[0] = 1;
    sub_1C2A9E7A8();
    int v38 = v15;
    int v39 = v13;
    uint64_t v40 = v14;
    uint64_t v41 = v12;
    uint64_t v37 = v62;
    LODWORD(v14) = v63;
    uint64_t v16 = v64;
    int v17 = v65;
    uint64_t v18 = v66;
    int v19 = v67;
    v58[0] = 2;
    sub_1C2A627C8();
    sub_1C2A9E7A8();
    int v32 = v19;
    int v33 = v17;
    uint64_t v34 = v16;
    int v35 = v14;
    uint64_t v36 = v18;
    LODWORD(v18) = v62;
    LOBYTE(v62) = 3;
    uint64_t v30 = sub_1C2A9E798();
    int v31 = v18;
    LOBYTE(v62) = 4;
    uint64_t v20 = sub_1C2A9E798();
    LOBYTE(v62) = 5;
    uint64_t v21 = sub_1C2A9E748();
    LOBYTE(v16) = v22;
    char v61 = 6;
    sub_1C2A9E788();
    uint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v11);
    LOBYTE(v17) = v42;
    char v60 = v42;
    char v26 = v39;
    char v59 = v39;
    char v57 = v38;
    char v55 = v35;
    char v53 = v33;
    char v51 = v32;
    char v48 = v16 & 1;
    int v27 = v44;
    *uint64_t v44 = v43;
    *((unsigned char *)v27 + 8) = v17;
    *(_DWORD *)((char *)v27 + 9) = v62;
    *((_DWORD *)v27 + 3) = *(_DWORD *)((char *)&v62 + 3);
    void v27[2] = v41;
    *((unsigned char *)v27 + 24) = v26;
    int v28 = *(_DWORD *)v58;
    *((_DWORD *)v27 + 7) = *(_DWORD *)&v58[3];
    *(_DWORD *)((char *)v27 + 25) = v28;
    v27[4] = v40;
    *((unsigned char *)v27 + 40) = v57;
    *(_DWORD *)((char *)v27 + 41) = *(_DWORD *)v56;
    *((_DWORD *)v27 + 11) = *(_DWORD *)&v56[3];
    v27[6] = v37;
    *((unsigned char *)v27 + 56) = v55;
    *(_DWORD *)((char *)v27 + 57) = *(_DWORD *)v54;
    *((_DWORD *)v27 + 15) = *(_DWORD *)&v54[3];
    v27[8] = v34;
    *((unsigned char *)v27 + 72) = v53;
    *((_DWORD *)v27 + 19) = *(_DWORD *)&v52[3];
    *(_DWORD *)((char *)v27 + 73) = *(_DWORD *)v52;
    v27[10] = v36;
    *((unsigned char *)v27 + 88) = v51;
    *((unsigned char *)v27 + 89) = v31;
    *((_WORD *)v27 + 47) = v50;
    *(_DWORD *)((char *)v27 + 90) = v49;
    v27[12] = v30;
    v27[13] = v20;
    v27[14] = v21;
    *((unsigned char *)v27 + 120) = v48;
    int v29 = *(_DWORD *)v47;
    *((_DWORD *)v27 + 31) = *(_DWORD *)&v47[3];
    *(_DWORD *)((char *)v27 + 121) = v29;
    v27[16] = v25;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
}

uint64_t sub_1C2A46B94@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SignificantChangeEngine.Parameters.MeanShift.init(from:)(a1, a2);
}

uint64_t sub_1C2A46BAC(void *a1)
{
  return SignificantChangeEngine.Parameters.MeanShift.encode(to:)(a1);
}

double SignificantChangeEngine.Parameters.FrequencyShift.pThreshold.getter()
{
  return *(double *)v0;
}

uint64_t SignificantChangeEngine.Parameters.FrequencyShift.minimumSegmentLength.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t SignificantChangeEngine.Parameters.FrequencyShift.minimumDataCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t SignificantChangeEngine.Parameters.FrequencyShift.confirmedLoggingThreshold.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t SignificantChangeEngine.Parameters.FrequencyShift.minimumAbsenceCount.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t SignificantChangeEngine.Parameters.FrequencyShift.maxInactivePeriods.getter()
{
  return *(void *)(v0 + 40);
}

double SignificantChangeEngine.Parameters.FrequencyShift.coldStartLoggingThreshold.getter()
{
  return *(double *)(v0 + 48);
}

unint64_t sub_1C2A46C00(char a1)
{
  unint64_t result = 0x6F68736572685470;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
    case 6:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C2A46CEC()
{
  return sub_1C2A46C00(*v0);
}

uint64_t sub_1C2A46CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A78C5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A46D1C(uint64_t a1)
{
  unint64_t v2 = sub_1C2A6281C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A46D58(uint64_t a1)
{
  unint64_t v2 = sub_1C2A6281C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SignificantChangeEngine.Parameters.FrequencyShift.encode(to:)(void *a1)
{
  sub_1C2A62E9C(0, &qword_1EA31F060, (uint64_t (*)(void))sub_1C2A6281C, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.FrequencyShift.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v12 - v6;
  uint64_t v8 = v1[1];
  v12[3] = v1[2];
  v12[4] = v8;
  uint64_t v9 = v1[3];
  v12[1] = v1[4];
  void v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A6281C();
  sub_1C2A9EA18();
  char v19 = 0;
  uint64_t v10 = v12[5];
  sub_1C2A9E848();
  if (!v10)
  {
    char v18 = 1;
    sub_1C2A9E858();
    char v17 = 2;
    sub_1C2A9E858();
    char v16 = 3;
    sub_1C2A9E858();
    char v15 = 4;
    sub_1C2A9E858();
    char v14 = 5;
    sub_1C2A9E858();
    char v13 = 6;
    sub_1C2A9E848();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SignificantChangeEngine.Parameters.FrequencyShift.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C2A62E9C(0, &qword_1EA31F070, (uint64_t (*)(void))sub_1C2A6281C, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.FrequencyShift.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v22 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A6281C();
  sub_1C2A9EA08();
  if (!v2)
  {
    uint64_t v9 = v6;
    char v29 = 0;
    sub_1C2A9E788();
    uint64_t v11 = v10;
    char v28 = 1;
    uint64_t v12 = sub_1C2A9E798();
    char v27 = 2;
    uint64_t v14 = sub_1C2A9E798();
    char v26 = 3;
    uint64_t v15 = sub_1C2A9E798();
    char v25 = 4;
    uint64_t v21 = sub_1C2A9E798();
    char v24 = 5;
    uint64_t v20 = sub_1C2A9E798();
    char v23 = 6;
    sub_1C2A9E788();
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v22);
    *a2 = v11;
    a2[1] = v12;
    a2[2] = v14;
    uint64_t v18 = v21;
    a2[3] = v15;
    a2[4] = v18;
    a2[5] = v20;
    a2[6] = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C2A4732C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SignificantChangeEngine.Parameters.FrequencyShift.init(from:)(a1, a2);
}

uint64_t sub_1C2A47344(void *a1)
{
  return SignificantChangeEngine.Parameters.FrequencyShift.encode(to:)(a1);
}

unint64_t sub_1C2A47360()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7544776F646E6977;
      break;
    case 2:
      unint64_t result = 0x666968536E61656DLL;
      break;
    case 3:
      unint64_t result = 0x636E657571657266;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2A47410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A78F14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A47438(uint64_t a1)
{
  unint64_t v2 = sub_1C2A62870();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A47474(uint64_t a1)
{
  unint64_t v2 = sub_1C2A62870();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SignificantChangeEngine.Parameters.encode(to:)(void *a1)
{
  sub_1C2A62E9C(0, &qword_1EA31F078, (uint64_t (*)(void))sub_1C2A62870, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v15 - v6;
  sub_1C2A79C68(v1 + 16, (uint64_t)v28, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
  uint64_t v8 = *(void *)(v1 + 152);
  uint64_t v22 = *(void *)(v1 + 160);
  uint64_t v23 = v8;
  uint64_t v9 = *(void *)(v1 + 168);
  uint64_t v20 = *(void *)(v1 + 176);
  uint64_t v21 = v9;
  uint64_t v10 = *(void *)(v1 + 184);
  uint64_t v18 = *(void *)(v1 + 192);
  uint64_t v19 = v10;
  uint64_t v17 = *(void *)(v1 + 200);
  int v16 = *(unsigned __int8 *)(v1 + 208);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A62870();
  sub_1C2A9EA18();
  LOBYTE(v26[0]) = 0;
  uint64_t v11 = v24;
  sub_1C2A9E858();
  if (!v11)
  {
    uint64_t v13 = v22;
    uint64_t v12 = v23;
    LOBYTE(v26[0]) = 1;
    sub_1C2A9E848();
    sub_1C2A79C68((uint64_t)v28, (uint64_t)v26, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
    char v25 = 2;
    sub_1C2A628C4();
    sub_1C2A9E818();
    v26[0] = v12;
    v26[1] = v13;
    v26[2] = v21;
    v26[3] = v20;
    v26[4] = v19;
    v26[5] = v18;
    v26[6] = v17;
    char v27 = v16;
    char v25 = 3;
    sub_1C2A62918();
    sub_1C2A9E818();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SignificantChangeEngine.Parameters.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  sub_1C2A62E9C(0, &qword_1EA31F098, (uint64_t (*)(void))sub_1C2A62870, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.CodingKeys, MEMORY[0x1E4FBBDC0]);
  *(void *)&long long v29 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v27 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A62870();
  sub_1C2A9EA08();
  if (v2)
  {
    uint64_t v26 = (uint64_t)a1;
  }
  else
  {
    uint64_t v8 = a1;
    uint64_t v9 = v5;
    LOBYTE(v30) = 0;
    uint64_t v10 = v29;
    uint64_t v11 = sub_1C2A9E798();
    LOBYTE(v30) = 1;
    sub_1C2A9E788();
    uint64_t v13 = v12;
    v43[143] = 2;
    sub_1C2A6296C();
    sub_1C2A9E758();
    sub_1C2A79C68((uint64_t)v44, (uint64_t)v43, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
    char v36 = 3;
    sub_1C2A629C0();
    sub_1C2A9E758();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v10);
    long long v29 = v37;
    long long v27 = v39;
    uint64_t v15 = v38;
    uint64_t v16 = v40;
    uint64_t v17 = v41;
    char v18 = v42;
    *(void *)&long long v30 = v11;
    *((void *)&v30 + 1) = v13;
    sub_1C2A79C68((uint64_t)v43, (uint64_t)v31, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
    *(_OWORD *)((char *)v32 + 8) = v29;
    *((void *)&v32[1] + 1) = v15;
    long long v33 = v27;
    *(void *)&long long v34 = v16;
    *((void *)&v34 + 1) = v17;
    char v35 = v18;
    uint64_t v19 = (_OWORD *)v28;
    *(unsigned char *)(v28 + 208) = v18;
    long long v20 = v31[6];
    v19[6] = v31[5];
    v19[7] = v20;
    long long v21 = v31[2];
    void v19[2] = v31[1];
    void v19[3] = v21;
    long long v22 = v31[4];
    v19[4] = v31[3];
    v19[5] = v22;
    long long v23 = v31[0];
    *uint64_t v19 = v30;
    v19[1] = v23;
    long long v24 = v33;
    v19[10] = v32[1];
    v19[11] = v24;
    v19[12] = v34;
    long long v25 = v32[0];
    v19[8] = v31[7];
    v19[9] = v25;
    uint64_t v26 = (uint64_t)v8;
  }
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_1C2A47AC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SignificantChangeEngine.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1C2A47ADC(void *a1)
{
  return SignificantChangeEngine.Parameters.encode(to:)(a1);
}

uint64_t SignificantChangeEngine.State.lastWindowEndpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C2A9C398();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SignificantChangeEngine.State.meanShift.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A47B88(type metadata accessor for SignificantChangeEngine.State, sub_1C2A62A14, a1);
}

uint64_t sub_1C2A47B88@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3 + *(int *)(a1(0) + 20);
  return a2(v5, a3);
}

uint64_t SignificantChangeEngine.State.frequencyShift.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A47C14(type metadata accessor for SignificantChangeEngine.State, sub_1C2A62A80, a1);
}

uint64_t sub_1C2A47C14@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3 + *(int *)(a1(0) + 24);
  return a2(v5, a3);
}

uint64_t SignificantChangeEngine.State.init(lastWindowEndpoint:meanShift:frequencyShift:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1C2A9C398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for SignificantChangeEngine.State(0);
  sub_1C2A62484(a2, a4 + *(int *)(v9 + 20), (uint64_t (*)(void))sub_1C2A62A2C);
  return sub_1C2A62484(a3, a4 + *(int *)(v9 + 24), (uint64_t (*)(void))sub_1C2A62A98);
}

uint64_t SignificantChangeEngine.State.MeanShift.activeChange.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A62344(v1, a1);
}

uint64_t SignificantChangeEngine.State.MeanShift.activeChangepoint.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A47B88(type metadata accessor for SignificantChangeEngine.State.MeanShift, sub_1C2A62AEC, a1);
}

uint64_t SignificantChangeEngine.State.MeanShift.lastChangepointStartDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A47C14(type metadata accessor for SignificantChangeEngine.State.MeanShift, sub_1C2939D90, a1);
}

uint64_t SignificantChangeEngine.State.MeanShift.init(activeChange:activeChangepoint:lastChangepointStartDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C2A47DDC(a1, a2, a3, type metadata accessor for SignificantChangeEngine.State.MeanShift, (uint64_t (*)(void))sub_1C299F0F4, (uint64_t (*)(void))sub_1C2A62B24, a4);
}

uint64_t sub_1C2A47DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t (*a6)(void)@<X5>, uint64_t a7@<X8>)
{
  sub_1C2A62484(a1, a7, (uint64_t (*)(void))sub_1C2A6235C);
  uint64_t v13 = a4(0);
  sub_1C2A62484(a2, a7 + *(int *)(v13 + 20), a5);
  return sub_1C2A62484(a3, a7 + *(int *)(v13 + 24), a6);
}

uint64_t sub_1C2A47E78()
{
  unint64_t v1 = 0xD000000000000011;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000018;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6843657669746361;
  }
}

uint64_t sub_1C2A47EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A79120(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A47F08(uint64_t a1)
{
  unint64_t v2 = sub_1C2A62B58();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A47F44(uint64_t a1)
{
  unint64_t v2 = sub_1C2A62B58();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SignificantChangeEngine.State.MeanShift.encode(to:)(void *a1)
{
  sub_1C2A62E9C(0, &qword_1EBB8F990, (uint64_t (*)(void))sub_1C2A62B58, (uint64_t)&type metadata for SignificantChangeEngine.State.MeanShift.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A62B58();
  sub_1C2A9EA18();
  char v12 = 0;
  type metadata accessor for SignificantChange(0);
  sub_1C2A62540(&qword_1EBB8EAB8, (void (*)(uint64_t))type metadata accessor for SignificantChange);
  sub_1C2A9E818();
  if (!v1)
  {
    type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
    char v11 = 1;
    type metadata accessor for SignificantChangeEngine.Changepoint(0);
    sub_1C2A62540(&qword_1EBB8EBD8, (void (*)(uint64_t))type metadata accessor for SignificantChangeEngine.Changepoint);
    sub_1C2A9E818();
    char v10 = 2;
    sub_1C2A9C6E8();
    sub_1C2A62540(&qword_1EBB91C18, MEMORY[0x1E4F27928]);
    sub_1C2A9E818();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SignificantChangeEngine.State.MeanShift.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  sub_1C2A62B24(0);
  MEMORY[0x1F4188790](v3 - 8);
  long long v24 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C299F0F4(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A6235C(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v26 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A62E9C(0, &qword_1EBB8F908, (uint64_t (*)(void))sub_1C2A62B58, (uint64_t)&type metadata for SignificantChangeEngine.State.MeanShift.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v27 = v10;
  uint64_t v25 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v23 - v11;
  uint64_t v13 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A62B58();
  uint64_t v16 = (uint64_t)v28;
  sub_1C2A9EA08();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v17 = v25;
  uint64_t v28 = a1;
  type metadata accessor for SignificantChange(0);
  char v31 = 0;
  sub_1C2A62540(&qword_1EBB8EAC0, (void (*)(uint64_t))type metadata accessor for SignificantChange);
  char v18 = v26;
  sub_1C2A9E758();
  uint64_t v19 = (uint64_t)v18;
  uint64_t v20 = (uint64_t)v15;
  sub_1C2A62484(v19, (uint64_t)v15, (uint64_t (*)(void))sub_1C2A6235C);
  type metadata accessor for SignificantChangeEngine.Changepoint(0);
  char v30 = 1;
  sub_1C2A62540(&qword_1EBB8EBE0, (void (*)(uint64_t))type metadata accessor for SignificantChangeEngine.Changepoint);
  sub_1C2A9E758();
  sub_1C2A62484((uint64_t)v7, (uint64_t)&v15[*(int *)(v13 + 20)], (uint64_t (*)(void))sub_1C299F0F4);
  sub_1C2A9C6E8();
  char v29 = 2;
  sub_1C2A62540(&qword_1EBB927B8, MEMORY[0x1E4F27928]);
  uint64_t v21 = (uint64_t)v24;
  sub_1C2A9E758();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v27);
  sub_1C2A62484(v21, v20 + *(int *)(v13 + 24), (uint64_t (*)(void))sub_1C2A62B24);
  sub_1C2A623C8(v20, v23, type metadata accessor for SignificantChangeEngine.State.MeanShift);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return sub_1C2A62588(v20, type metadata accessor for SignificantChangeEngine.State.MeanShift);
}

uint64_t sub_1C2A48770@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SignificantChangeEngine.State.MeanShift.init(from:)(a1, a2);
}

uint64_t sub_1C2A48788(void *a1)
{
  return SignificantChangeEngine.State.MeanShift.encode(to:)(a1);
}

HealthVisualization::SignificantChangeEngine::State::FrequencyShift::Mode_optional __swiftcall SignificantChangeEngine.State.FrequencyShift.Mode.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_1C2A9E6E8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t SignificantChangeEngine.State.FrequencyShift.Mode.rawValue.getter()
{
  if (*v0) {
    return 0x6967676F4C746F6ELL;
  }
  else {
    return 0x676E6967676F6CLL;
  }
}

uint64_t sub_1C2A48844()
{
  return sub_1C2A9E9E8();
}

uint64_t sub_1C2A488CC()
{
  sub_1C2A9DD78();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2A48940()
{
  return sub_1C2A9E9E8();
}

HealthVisualization::SignificantChangeEngine::State::FrequencyShift::Mode_optional sub_1C2A489C4(Swift::String *a1)
{
  return SignificantChangeEngine.State.FrequencyShift.Mode.init(rawValue:)(*a1);
}

void sub_1C2A489D0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x676E6967676F6CLL;
  if (*v1) {
    uint64_t v2 = 0x6967676F4C746F6ELL;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xEA0000000000676ELL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C2A48A14(char *a1, char *a2)
{
  return sub_1C2954D94(*a1, *a2);
}

uint64_t sub_1C2A48A20()
{
  return sub_1C2A9DE58();
}

uint64_t sub_1C2A48A80()
{
  return sub_1C2A9DE38();
}

uint64_t SignificantChangeEngine.State.FrequencyShift.init(transitionDate:mode:activeChange:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v6 = *a2;
  sub_1C2A62484(a1, a4, (uint64_t (*)(void))sub_1C2A62B24);
  uint64_t v7 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
  *(unsigned char *)(a4 + *(int *)(v7 + 20)) = v6;
  return sub_1C2A62484(a3, a4 + *(int *)(v7 + 24), (uint64_t (*)(void))sub_1C2A6235C);
}

uint64_t sub_1C2A48B54()
{
  uint64_t v1 = 1701080941;
  if (*v0 != 1) {
    uint64_t v1 = 0x6843657669746361;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x697469736E617274;
  }
}

uint64_t sub_1C2A48BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A79284(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A48BE4(uint64_t a1)
{
  unint64_t v2 = sub_1C2A62BAC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A48C20(uint64_t a1)
{
  unint64_t v2 = sub_1C2A62BAC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SignificantChangeEngine.State.FrequencyShift.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C2A62E9C(0, &qword_1EBB8F988, (uint64_t (*)(void))sub_1C2A62BAC, (uint64_t)&type metadata for SignificantChangeEngine.State.FrequencyShift.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A62BAC();
  sub_1C2A9EA18();
  char v15 = 0;
  sub_1C2A9C6E8();
  sub_1C2A62540(&qword_1EBB91C18, MEMORY[0x1E4F27928]);
  sub_1C2A9E818();
  if (!v2)
  {
    char v14 = *(unsigned char *)(v3 + *(int *)(type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0) + 20));
    char v13 = 1;
    sub_1C2A62C00();
    sub_1C2A9E868();
    char v12 = 2;
    type metadata accessor for SignificantChange(0);
    sub_1C2A62540(&qword_1EBB8EAB8, (void (*)(uint64_t))type metadata accessor for SignificantChange);
    sub_1C2A9E818();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t SignificantChangeEngine.State.FrequencyShift.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  sub_1C2A6235C(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A62B24(0);
  MEMORY[0x1F4188790](v6 - 8);
  long long v22 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A62E9C(0, &qword_1EBB8F900, (uint64_t (*)(void))sub_1C2A62BAC, (uint64_t)&type metadata for SignificantChangeEngine.State.FrequencyShift.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v23 = v8;
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A62BAC();
  uint64_t v14 = v24;
  sub_1C2A9EA08();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = v21;
  uint64_t v16 = (uint64_t)v5;
  sub_1C2A9C6E8();
  char v28 = 0;
  sub_1C2A62540(&qword_1EBB927B8, MEMORY[0x1E4F27928]);
  uint64_t v17 = (uint64_t)v22;
  sub_1C2A9E758();
  sub_1C2A62484(v17, (uint64_t)v13, (uint64_t (*)(void))sub_1C2A62B24);
  char v26 = 1;
  sub_1C2A62C54();
  sub_1C2A9E7A8();
  v13[*(int *)(v11 + 20)] = v27;
  type metadata accessor for SignificantChange(0);
  char v25 = 2;
  sub_1C2A62540(&qword_1EBB8EAC0, (void (*)(uint64_t))type metadata accessor for SignificantChange);
  sub_1C2A9E758();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v23);
  sub_1C2A62484(v16, (uint64_t)&v13[*(int *)(v11 + 24)], (uint64_t (*)(void))sub_1C2A6235C);
  sub_1C2A623C8((uint64_t)v13, v20, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1C2A62588((uint64_t)v13, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
}

uint64_t sub_1C2A49330@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SignificantChangeEngine.State.FrequencyShift.init(from:)(a1, a2);
}

uint64_t sub_1C2A49348(void *a1)
{
  return SignificantChangeEngine.State.FrequencyShift.encode(to:)(a1);
}

unint64_t sub_1C2A49364()
{
  uint64_t v1 = 0x666968536E61656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x636E657571657266;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_1C2A493D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A79408(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A493FC(uint64_t a1)
{
  unint64_t v2 = sub_1C2A62CA8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A49438(uint64_t a1)
{
  unint64_t v2 = sub_1C2A62CA8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SignificantChangeEngine.State.encode(to:)(void *a1)
{
  sub_1C2A62E9C(0, &qword_1EBB8F980, (uint64_t (*)(void))sub_1C2A62CA8, (uint64_t)&type metadata for SignificantChangeEngine.State.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A62CA8();
  sub_1C2A9EA18();
  char v12 = 0;
  sub_1C2A9C398();
  sub_1C2A62540(&qword_1EBB8E848, MEMORY[0x1E4F26E60]);
  sub_1C2A9E868();
  if (!v1)
  {
    type metadata accessor for SignificantChangeEngine.State(0);
    char v11 = 1;
    type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
    sub_1C2A62540(&qword_1EBB8EDD0, (void (*)(uint64_t))type metadata accessor for SignificantChangeEngine.State.MeanShift);
    sub_1C2A9E818();
    char v10 = 2;
    type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
    sub_1C2A62540(&qword_1EBB8ED08, (void (*)(uint64_t))type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
    sub_1C2A9E818();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SignificantChangeEngine.State.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  sub_1C2A62A98(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v23 = (uint64_t)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A62A2C(0);
  MEMORY[0x1F4188790](v5 - 8);
  char v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C2A9C398();
  uint64_t v24 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v27 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A62E9C(0, &qword_1EBB8F8F8, (uint64_t (*)(void))sub_1C2A62CA8, (uint64_t)&type metadata for SignificantChangeEngine.State.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v28 = v9;
  uint64_t v25 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v21 - v10;
  uint64_t v12 = type metadata accessor for SignificantChangeEngine.State(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A62CA8();
  char v29 = v11;
  uint64_t v15 = v30;
  sub_1C2A9EA08();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v17 = v25;
  uint64_t v16 = (uint64_t)v26;
  char v30 = v14;
  char v33 = 0;
  sub_1C2A62540(&qword_1EBB8E850, MEMORY[0x1E4F26E60]);
  sub_1C2A9E7A8();
  uint64_t v18 = v7;
  uint64_t v19 = (uint64_t)v30;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v30, v27, v18);
  type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
  char v32 = 1;
  sub_1C2A62540(&qword_1EBB8EDD8, (void (*)(uint64_t))type metadata accessor for SignificantChangeEngine.State.MeanShift);
  sub_1C2A9E758();
  sub_1C2A62484(v16, v19 + *(int *)(v12 + 20), (uint64_t (*)(void))sub_1C2A62A2C);
  type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
  char v31 = 2;
  sub_1C2A62540(&qword_1EBB8ED10, (void (*)(uint64_t))type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
  sub_1C2A9E758();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v29, v28);
  sub_1C2A62484(v23, v19 + *(int *)(v12 + 24), (uint64_t (*)(void))sub_1C2A62A98);
  sub_1C2A623C8(v19, v22, type metadata accessor for SignificantChangeEngine.State);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1C2A62588(v19, type metadata accessor for SignificantChangeEngine.State);
}

uint64_t sub_1C2A49C88@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SignificantChangeEngine.State.init(from:)(a1, a2);
}

uint64_t sub_1C2A49CA0(void *a1)
{
  return SignificantChangeEngine.State.encode(to:)(a1);
}

uint64_t SignificantChangeEngine.analyzeForSignificantChanges(_:parameters:state:)@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v109 = a2;
  uint64_t v110 = a3;
  sub_1C2A6235C(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v103 = (uint64_t)v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v102 = (uint64_t)v91 - v7;
  sub_1C2A62A98(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v99 = (char *)v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A62430(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v97 = (char *)v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v94 = (uint64_t)v91 - v13;
  sub_1C2A62A2C(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v105 = (uint64_t)v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for SignificantChangeEngine.State(0);
  uint64_t v107 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v106 = (char *)v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A62CFC(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v100 = (uint64_t)v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v98 = (uint64_t)v91 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v96 = (char *)v91 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v95 = (uint64_t)v91 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v104 = (uint64_t)v91 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v108 = (uint64_t)v91 - v28;
  sub_1C297A894();
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29 - 8);
  char v32 = (char *)v91 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A79E18(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v33 - 8);
  char v35 = (char *)v91 - v34;
  uint64_t v36 = sub_1C2A9C398();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  MEMORY[0x1F4188790](v38);
  uint64_t v43 = (char *)v91 - v42;
  uint64_t v44 = *a1;
  long long v45 = *(_OWORD *)(a1 + 19);
  long long v46 = *(_OWORD *)(a1 + 23);
  long long v134 = *(_OWORD *)(a1 + 21);
  v135[0] = v46;
  *(_OWORD *)((char *)v135 + 9) = *(_OWORD *)((char *)a1 + 193);
  long long v47 = *(_OWORD *)(a1 + 11);
  long long v48 = *(_OWORD *)(a1 + 15);
  long long v130 = *(_OWORD *)(a1 + 13);
  long long v131 = v48;
  long long v132 = *(_OWORD *)(a1 + 17);
  long long v133 = v45;
  long long v49 = *(_OWORD *)(a1 + 3);
  long long v50 = *(_OWORD *)(a1 + 7);
  long long v126 = *(_OWORD *)(a1 + 5);
  long long v127 = v50;
  long long v128 = *(_OWORD *)(a1 + 9);
  long long v129 = v47;
  long long v124 = *(_OWORD *)(a1 + 1);
  long long v125 = v49;
  uint64_t v51 = *((void *)v41 + 2);
  if (v51 < v44)
  {
    uint64_t v52 = type metadata accessor for SignificantChange(0);
    char v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56);
    uint64_t v54 = v110;
    v53(v110, 1, 1, v52);
    uint64_t v55 = type metadata accessor for SignificantChangeEngine.Output(0);
    v53(v54 + *(int *)(v55 + 20), 1, 1, v52);
    return sub_1C2A623B0(v109, v54 + *(int *)(v55 + 24));
  }
  if (!v51)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 56))(v35, 1, 1);
    goto LABEL_8;
  }
  uint64_t v92 = v41;
  uint64_t v93 = v40;
  uint64_t v57 = (uint64_t)v41
      + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))
      + *(void *)(v30 + 72) * (v51 - 1);
  uint64_t v58 = v39;
  sub_1C2A623C8(v57, (uint64_t)v32, (uint64_t (*)(void))sub_1C297A894);
  char v59 = v32;
  char v60 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v60(v35, v59, v58);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v35, 0, 1, v58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v58) == 1)
  {
LABEL_8:
    sub_1C2A62D30((uint64_t)v35, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
    uint64_t v71 = type metadata accessor for SignificantChange(0);
    uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56);
    uint64_t v73 = v110;
    v72(v110, 1, 1, v71);
    uint64_t v74 = type metadata accessor for SignificantChangeEngine.Output(0);
    v72(v73 + *(int *)(v74 + 20), 1, 1, v71);
    return sub_1C2A623B0(v109, v73 + *(int *)(v74 + 24));
  }
  v60(v43, v35, v58);
  long long v121 = v133;
  long long v122 = v134;
  v123[0] = v135[0];
  *(_OWORD *)((char *)v123 + 9) = *(_OWORD *)((char *)v135 + 9);
  long long v117 = v129;
  long long v118 = v130;
  long long v119 = v131;
  long long v120 = v132;
  long long v113 = v125;
  long long v114 = v126;
  long long v115 = v127;
  long long v116 = v128;
  uint64_t v111 = v44;
  long long v112 = v124;
  uint64_t v61 = v109;
  v91[1] = v37 + 32;
  uint64_t v62 = v92;
  sub_1C2A4AA74((uint64_t)v92, (uint64_t)&v111, v109, v108);
  long long v121 = v133;
  long long v122 = v134;
  v123[0] = v135[0];
  *(_OWORD *)((char *)v123 + 9) = *(_OWORD *)((char *)v135 + 9);
  long long v117 = v129;
  long long v118 = v130;
  long long v119 = v131;
  long long v120 = v132;
  long long v113 = v125;
  long long v114 = v126;
  long long v115 = v127;
  long long v116 = v128;
  uint64_t v111 = v44;
  long long v112 = v124;
  uint64_t v63 = v104;
  sub_1C2A4BA68((uint64_t)v62, (uint64_t)&v111, v61, v104);
  uint64_t v109 = v58;
  uint64_t v92 = v60;
  v60(v93, v43, v58);
  uint64_t v64 = v95;
  sub_1C2A623C8(v63, v95, (uint64_t (*)(void))sub_1C2A62CFC);
  uint64_t v65 = type metadata accessor for SignificantChangeEngine.Output(0);
  uint64_t v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 48);
  if (v66(v64, 1, v65) == 1)
  {
    sub_1C2A62588(v64, (uint64_t (*)(void))sub_1C2A62CFC);
    uint64_t v67 = v101;
    uint64_t v68 = (uint64_t)v99;
    uint64_t v69 = (uint64_t)v96;
    uint64_t v70 = (uint64_t)v97;
LABEL_11:
    uint64_t v77 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v105, 1, 1, v77);
    goto LABEL_13;
  }
  v91[0] = v66;
  uint64_t v75 = v94;
  sub_1C2A623B0(v64 + *(int *)(v65 + 24), v94);
  sub_1C2A62588(v64, type metadata accessor for SignificantChangeEngine.Output);
  uint64_t v67 = v101;
  int v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v75, 1, v101);
  uint64_t v68 = (uint64_t)v99;
  uint64_t v69 = (uint64_t)v96;
  uint64_t v70 = (uint64_t)v97;
  if (v76 == 1)
  {
    sub_1C2A62588(v75, (uint64_t (*)(void))sub_1C2A62430);
    uint64_t v66 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v91[0];
    goto LABEL_11;
  }
  sub_1C2A62A14(v75 + *(int *)(v67 + 20), v105);
  sub_1C2A62588(v75, type metadata accessor for SignificantChangeEngine.State);
  uint64_t v66 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v91[0];
LABEL_13:
  sub_1C2A623C8(v108, v69, (uint64_t (*)(void))sub_1C2A62CFC);
  if (v66(v69, 1, v65) == 1)
  {
    uint64_t v78 = sub_1C2A62CFC;
    uint64_t v79 = v69;
  }
  else
  {
    sub_1C2A623B0(v69 + *(int *)(v65 + 24), v70);
    sub_1C2A62588(v69, type metadata accessor for SignificantChangeEngine.Output);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v70, 1, v67) != 1)
    {
      sub_1C2A62A80(v70 + *(int *)(v67 + 24), v68);
      sub_1C2A62588(v70, type metadata accessor for SignificantChangeEngine.State);
      goto LABEL_19;
    }
    uint64_t v78 = sub_1C2A62430;
    uint64_t v79 = v70;
  }
  sub_1C2A62588(v79, (uint64_t (*)(void))v78);
  uint64_t v80 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v68, 1, 1, v80);
LABEL_19:
  uint64_t v81 = v68;
  uint64_t v82 = (uint64_t)v106;
  v92(v106, v93, v109);
  sub_1C2A62484(v105, v82 + *(int *)(v67 + 20), (uint64_t (*)(void))sub_1C2A62A2C);
  sub_1C2A62484(v81, v82 + *(int *)(v67 + 24), (uint64_t (*)(void))sub_1C2A62A98);
  uint64_t v83 = v98;
  sub_1C2A62484(v104, v98, (uint64_t (*)(void))sub_1C2A62CFC);
  if (v66(v83, 1, v65) == 1)
  {
    sub_1C2A62588(v83, (uint64_t (*)(void))sub_1C2A62CFC);
    uint64_t v84 = type metadata accessor for SignificantChange(0);
    uint64_t v85 = v102;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v102, 1, 1, v84);
  }
  else
  {
    uint64_t v85 = v102;
    sub_1C2A62344(v83, v102);
    sub_1C2A62588(v83, type metadata accessor for SignificantChangeEngine.Output);
  }
  uint64_t v86 = v110;
  uint64_t v87 = v100;
  sub_1C2A62484(v108, v100, (uint64_t (*)(void))sub_1C2A62CFC);
  if (v66(v87, 1, v65) == 1)
  {
    sub_1C2A62588(v87, (uint64_t (*)(void))sub_1C2A62CFC);
    uint64_t v88 = type metadata accessor for SignificantChange(0);
    uint64_t v89 = v103;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v103, 1, 1, v88);
  }
  else
  {
    uint64_t v89 = v103;
    sub_1C2A62344(v87 + *(int *)(v65 + 20), v103);
    sub_1C2A62588(v87, type metadata accessor for SignificantChangeEngine.Output);
  }
  uint64_t v90 = v86 + *(int *)(v65 + 24);
  sub_1C2A62484((uint64_t)v106, v90, type metadata accessor for SignificantChangeEngine.State);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v107 + 56))(v90, 0, 1, v67);
  sub_1C2A62484(v85, v86, (uint64_t (*)(void))sub_1C2A6235C);
  return sub_1C2A62484(v89, v86 + *(int *)(v65 + 20), (uint64_t (*)(void))sub_1C2A6235C);
}

uint64_t sub_1C2A4AA74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v141 = a3;
  uint64_t v140 = a4;
  uint64_t v6 = sub_1C2A9C6E8();
  uint64_t v129 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v147 = (char *)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v146 = (char *)&v119 - v9;
  sub_1C2A62A98(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v123 = (uint64_t)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A6235C(0);
  MEMORY[0x1F4188790](v12 - 8);
  long long v130 = (void (**)(uint64_t, uint64_t))((char *)&v119 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  long long v127 = (char *)&v119 - v15;
  sub_1C2A62CFC(0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v145 = (uint64_t)&v119 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v149 = (uint64_t)&v119 - v19;
  sub_1C2A62430(0);
  MEMORY[0x1F4188790](v20 - 8);
  long long v126 = (char *)&v119 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v144 = (uint64_t)&v119 - v23;
  MEMORY[0x1F4188790](v24);
  int v148 = (char *)&v119 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v125 = (uint64_t)&v119 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v119 - v29;
  sub_1C297A894();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v143 = (uint64_t)&v119 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)&v119 - v35;
  sub_1C2A79E18(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v37 - 8);
  uint64_t v39 = (char *)&v119 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (char *)&v119 - v41;
  uint64_t v43 = sub_1C2A9C398();
  uint64_t v44 = *(void *)(v43 - 8);
  __n128 v45 = MEMORY[0x1F4188790](v43);
  long long v131 = (char *)&v119 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = *(void *)(a1 + 16);
  if (!v47)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v44 + 56))(v42, 1, 1, v43, v45);
    goto LABEL_6;
  }
  uint64_t v139 = v6;
  uint64_t v48 = *(void *)(a2 + 152);
  uint64_t v138 = *(void *)(a2 + 160);
  uint64_t v137 = *(void *)(a2 + 168);
  uint64_t v136 = *(void *)(a2 + 176);
  uint64_t v135 = *(void *)(a2 + 184);
  uint64_t v134 = *(void *)(a2 + 192);
  uint64_t v49 = *(void *)(a2 + 200);
  char v50 = *(unsigned char *)(a2 + 208);
  uint64_t v122 = v47;
  uint64_t v51 = v47 - 1;
  unint64_t v52 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v142 = a1;
  unint64_t v121 = v52;
  uint64_t v133 = *(void *)(v32 + 72);
  sub_1C2A623C8(a1 + v52 + v133 * v51, (uint64_t)v36, (uint64_t (*)(void))sub_1C297A894);
  uint64_t v53 = v44;
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
  v54(v42, v36, v43);
  uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56);
  v55(v42, 0, 1, v43);
  uint64_t v124 = v53;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v42, 1, v43) == 1)
  {
LABEL_6:
    sub_1C2A62D30((uint64_t)v42, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
    uint64_t v59 = type metadata accessor for SignificantChange(0);
    char v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56);
    uint64_t v61 = v140;
    v60(v140, 1, 1, v59);
    uint64_t v62 = type metadata accessor for SignificantChangeEngine.Output(0);
    v60(v61 + *(int *)(v62 + 20), 1, 1, v59);
    sub_1C2A623B0(v141, v61 + *(int *)(v62 + 24));
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v61, 0, 1, v62);
  }
  uint64_t v56 = v131;
  v54(v131, v42, v43);
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v56, v43);
    uint64_t v57 = type metadata accessor for SignificantChangeEngine.Output(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v140, 1, 1, v57);
  }
  uint64_t v132 = v43;
  sub_1C2A623B0(v141, (uint64_t)v30);
  uint64_t v63 = type metadata accessor for SignificantChangeEngine.State(0);
  uint64_t v120 = *(void *)(v63 - 8);
  uint64_t v64 = *(uint64_t (**)(char *, uint64_t))(v120 + 48);
  uint64_t v65 = 1;
  uint64_t v128 = v63;
  int v66 = v64(v30, 1);
  uint64_t v67 = (uint64_t (*)(void))sub_1C2A62430;
  if (v66 == 1)
  {
    uint64_t v68 = v142;
    uint64_t v69 = v132;
  }
  else
  {
    uint64_t v69 = v132;
    (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v39, v30, v132);
    uint64_t v65 = 0;
    uint64_t v67 = type metadata accessor for SignificantChangeEngine.State;
    uint64_t v68 = v142;
  }
  sub_1C2A62588((uint64_t)v30, v67);
  v55(v39, v65, 1, v69);
  uint64_t v70 = sub_1C2A53538((uint64_t)v39);
  char v72 = v71;
  sub_1C2A62D30((uint64_t)v39, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
  if (v72)
  {
    uint64_t v81 = v146;
    sub_1C2A9C348();
    uint64_t v82 = v147;
    uint64_t v83 = sub_1C2A9C648();
    MEMORY[0x1F4188790](v83);
    *(&v119 - 2) = (uint64_t)v81;
    *(&v119 - 1) = (uint64_t)v82;
    swift_bridgeObjectRetain();
    sub_1C2A43A34((uint64_t (*)(char *))sub_1C2A7A038, (uint64_t)(&v119 - 4), v68);
    uint64_t v85 = v84;
    uint64_t v86 = *(void (**)(char *, uint64_t))(v129 + 8);
    uint64_t v87 = v82;
    uint64_t v88 = v139;
    v86(v87, v139);
    v86(v81, v88);
    uint64_t v150 = v48;
    uint64_t v151 = v138;
    uint64_t v152 = v137;
    uint64_t v153 = v136;
    uint64_t v154 = v135;
    uint64_t v155 = v134;
    uint64_t v156 = v49;
    uint64_t v89 = (uint64_t)v126;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v120 + 56))(v126, 1, 1, v128);
    sub_1C2A537BC(v85, (uint64_t)&v150, v89, v140);
    swift_bridgeObjectRelease();
    sub_1C2A62588(v89, (uint64_t (*)(void))sub_1C2A62430);
    return (*(uint64_t (**)(char *, uint64_t))(v124 + 8))(v56, v69);
  }
  uint64_t v73 = v70;
  uint64_t v74 = type metadata accessor for SignificantChange(0);
  uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56);
  uint64_t v76 = (uint64_t)v127;
  v75(v127, 1, 1, v74);
  uint64_t v77 = v125;
  sub_1C2A623B0(v141, v125);
  uint64_t v78 = v128;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v64)(v77, 1, v128) == 1)
  {
    sub_1C2A62588(v77, (uint64_t (*)(void))sub_1C2A62430);
    uint64_t v79 = (uint64_t)v148;
    uint64_t v80 = v130;
LABEL_16:
    v75((char *)v80, 1, 1, v74);
    goto LABEL_18;
  }
  uint64_t v90 = v123;
  sub_1C2A62A80(v77 + *(int *)(v78 + 24), v123);
  sub_1C2A62588(v77, type metadata accessor for SignificantChangeEngine.State);
  uint64_t v91 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
  int v92 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 48))(v90, 1, v91);
  uint64_t v79 = (uint64_t)v148;
  uint64_t v80 = v130;
  if (v92 == 1)
  {
    sub_1C2A62588(v90, (uint64_t (*)(void))sub_1C2A62A98);
    goto LABEL_16;
  }
  sub_1C2A62344(v90 + *(int *)(v91 + 24), (uint64_t)v130);
  sub_1C2A62588(v90, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
LABEL_18:
  uint64_t v93 = type metadata accessor for SignificantChangeEngine.Output(0);
  uint64_t v94 = v149;
  uint64_t v95 = v141;
  sub_1C2A623B0(v141, v149 + *(int *)(v93 + 24));
  sub_1C2A62484(v76, v94, (uint64_t (*)(void))sub_1C2A6235C);
  sub_1C2A62484((uint64_t)v80, v94 + *(int *)(v93 + 20), (uint64_t (*)(void))sub_1C2A6235C);
  uint64_t v96 = *(void *)(v93 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v96 + 56))(v94, 0, 1, v93);
  uint64_t result = sub_1C2A623B0(v95, v79);
  uint64_t v97 = v73 + 1;
  if (__OFADD__(v73, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v141 = v93;
  if (v122 < v97)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v97 == v122)
  {
LABEL_21:
    sub_1C2A62588(v79, (uint64_t (*)(void))sub_1C2A62430);
    (*(void (**)(char *, uint64_t))(v124 + 8))(v131, v132);
    uint64_t v98 = v149;
    sub_1C2A623C8(v149, v140, (uint64_t (*)(void))sub_1C2A62CFC);
    return sub_1C2A62588(v98, (uint64_t (*)(void))sub_1C2A62CFC);
  }
  if (v97 >= v122) {
    goto LABEL_31;
  }
  if ((v97 & 0x8000000000000000) == 0)
  {
    long long v130 = (void (**)(uint64_t, uint64_t))(v124 + 8);
    uint64_t v99 = (void (**)(char *, uint64_t))(v129 + 8);
    uint64_t v100 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48);
    uint64_t v129 = v120 + 56;
    uint64_t v101 = ~v73 + v122;
    uint64_t v102 = v142 + v121 + v133 * v97;
    uint64_t v103 = v142;
    do
    {
      uint64_t v106 = v143;
      sub_1C2A623C8(v102, v143, (uint64_t (*)(void))sub_1C297A894);
      uint64_t v107 = v146;
      sub_1C2A9C348();
      (*v130)(v106, v132);
      uint64_t v108 = v147;
      uint64_t v109 = sub_1C2A9C648();
      MEMORY[0x1F4188790](v109);
      *(&v119 - 2) = (uint64_t)v107;
      *(&v119 - 1) = (uint64_t)v108;
      swift_bridgeObjectRetain();
      sub_1C2A43A34((uint64_t (*)(char *))sub_1C2A7A038, (uint64_t)(&v119 - 4), v103);
      uint64_t v111 = v110;
      long long v112 = *v99;
      long long v113 = v108;
      uint64_t v114 = v139;
      (*v99)(v113, v139);
      long long v115 = v107;
      uint64_t v79 = (uint64_t)v148;
      v112(v115, v114);
      uint64_t v150 = v48;
      uint64_t v151 = v138;
      uint64_t v152 = v137;
      uint64_t v153 = v136;
      uint64_t v154 = v135;
      uint64_t v155 = v134;
      uint64_t v156 = v49;
      uint64_t v116 = v145;
      sub_1C2A537BC(v111, (uint64_t)&v150, v79, v145);
      swift_bridgeObjectRelease();
      sub_1C2A62588(v79, (uint64_t (*)(void))sub_1C2A62430);
      uint64_t v117 = v149;
      sub_1C2A79D3C(v116, v149);
      uint64_t v118 = v141;
      if ((*v100)(v117, 1, v141))
      {
        uint64_t v105 = v144;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v129)(v144, 1, 1, v128);
      }
      else
      {
        uint64_t v104 = v117 + *(int *)(v118 + 24);
        uint64_t v105 = v144;
        sub_1C2A623B0(v104, v144);
      }
      sub_1C2A62484(v105, v79, (uint64_t (*)(void))sub_1C2A62430);
      v102 += v133;
      --v101;
    }
    while (v101);
    goto LABEL_21;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C2A4BA68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v6 = sub_1C2A9C6E8();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v36 - v9;
  sub_1C297A894();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A79E18(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v18 = sub_1C2A9C398();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A79C68(a2 + 16, (uint64_t)v46, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
  uint64_t v22 = *(void *)(a1 + 16);
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
    goto LABEL_6;
  }
  sub_1C2A623C8(a1+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * (v22 - 1), (uint64_t)v14, (uint64_t (*)(void))sub_1C297A894);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v23(v17, v14, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
LABEL_6:
    sub_1C2A62D30((uint64_t)v17, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
    uint64_t v26 = type metadata accessor for SignificantChange(0);
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    uint64_t v28 = v41;
    v27(v41, 1, 1, v26);
    uint64_t v29 = type metadata accessor for SignificantChangeEngine.Output(0);
    v27(v28 + *(int *)(v29 + 20), 1, 1, v26);
    sub_1C2A623B0(v40, v28 + *(int *)(v29 + 24));
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 0, 1, v29);
  }
  v23(v21, v17, v18);
  sub_1C2A79C68((uint64_t)v46, (uint64_t)v44, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
  if (sub_1C2A79B9C((uint64_t)v44) == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    uint64_t v24 = type metadata accessor for SignificantChangeEngine.Output(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v41, 1, 1, v24);
  }
  else
  {
    sub_1C2A9C348();
    uint64_t v30 = v37;
    uint64_t v31 = sub_1C2A9C648();
    MEMORY[0x1F4188790](v31);
    *(&v36 - 2) = (uint64_t)v10;
    *(&v36 - 1) = (uint64_t)v30;
    swift_bridgeObjectRetain();
    sub_1C2A43A34((uint64_t (*)(char *))sub_1C2A79BB0, (uint64_t)(&v36 - 4), a1);
    uint64_t v33 = v32;
    uint64_t v34 = v39;
    uint64_t v35 = *(void (**)(char *, uint64_t))(v38 + 8);
    v35(v30, v39);
    v35(v10, v34);
    v42[6] = v44[6];
    v42[7] = v44[7];
    uint64_t v43 = v45;
    v42[2] = v44[2];
    v42[3] = v44[3];
    void v42[4] = v44[4];
    v42[5] = v44[5];
    v42[0] = v44[0];
    v42[1] = v44[1];
    sub_1C2A4C054(v33, v42, v40, v41);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
}

uint64_t sub_1C2A4C03C@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return SignificantChangeEngine.analyzeForSignificantChanges(_:parameters:state:)(a1, a2, a3);
}

uint64_t sub_1C2A4C054@<X0>(void (*a1)(void, void, void, void)@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v506 = a3;
  uint64_t v503 = a4;
  sub_1C2A64008(0);
  MEMORY[0x1F4188790](v6 - 8);
  v445 = (char *)&v423 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SignificantChange.Notification(0);
  uint64_t v479 = *(void *)(v8 - 8);
  uint64_t v480 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v469 = (uint64_t)&v423 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C299F0F4(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v471 = (uint64_t)&v423 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v442 = (uint64_t)&v423 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v437 = (uint64_t)&v423 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v468 = (uint64_t)&v423 - v17;
  MEMORY[0x1F4188790](v18);
  v460 = (char *)&v423 - v19;
  sub_1C2A6235C(0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v452 = (uint64_t)&v423 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v428 = (uint64_t)&v423 - v23;
  MEMORY[0x1F4188790](v24);
  v478 = (uint64_t (*)(uint64_t))((char *)&v423 - v25);
  uint64_t v491 = type metadata accessor for SignificantChangeEngine.State(0);
  uint64_t v486 = *(void *)(v491 - 8);
  MEMORY[0x1F4188790](v491);
  v449 = (char *)&v423 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  v461 = (char *)&v423 - v28;
  uint64_t v504 = type metadata accessor for SignificantChange(0);
  uint64_t v505 = *(void *)(v504 - 8);
  MEMORY[0x1F4188790](v504);
  v470 = (uint8_t *)&v423 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  v459 = (char *)&v423 - v31;
  uint64_t v474 = type metadata accessor for SignificantChange.Period(0);
  uint64_t v446 = *(void *)(v474 - 8);
  MEMORY[0x1F4188790](v474);
  v447 = (char *)&v423 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v465 = (uint64_t)&v423 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v475 = (uint64_t)&v423 - v36;
  MEMORY[0x1F4188790](v37);
  v456 = (char *)&v423 - v38;
  uint64_t v492 = type metadata accessor for SignificantChangeEngine.Changepoint(0);
  uint64_t v483 = *(void *)(v492 - 8);
  MEMORY[0x1F4188790](v492);
  uint64_t v451 = (uint64_t)&v423 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A62430(0);
  MEMORY[0x1F4188790](v40 - 8);
  uint64_t v434 = (uint64_t)&v423 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v42);
  uint64_t v443 = (uint64_t)&v423 - v43;
  MEMORY[0x1F4188790](v44);
  uint64_t v439 = (uint64_t)&v423 - v45;
  MEMORY[0x1F4188790](v46);
  uint64_t v457 = (uint64_t)&v423 - v47;
  MEMORY[0x1F4188790](v48);
  os_log_t v473 = (os_log_t)((char *)&v423 - v49);
  sub_1C2A62A2C(0);
  MEMORY[0x1F4188790](v50 - 8);
  uint64_t v429 = (uint64_t)&v423 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v52);
  uint64_t v448 = (uint64_t)&v423 - v53;
  MEMORY[0x1F4188790](v54);
  uint64_t v432 = (uint64_t)&v423 - v55;
  MEMORY[0x1F4188790](v56);
  uint64_t v431 = (uint64_t)&v423 - v57;
  MEMORY[0x1F4188790](v58);
  uint64_t v436 = (uint64_t)&v423 - v59;
  MEMORY[0x1F4188790](v60);
  uint64_t v458 = (uint64_t)&v423 - v61;
  MEMORY[0x1F4188790](v62);
  uint64_t v450 = (uint64_t)&v423 - v63;
  sub_1C2A62B24(0);
  MEMORY[0x1F4188790](v64 - 8);
  uint64_t v435 = (uint64_t)&v423 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v66);
  v438 = (char *)&v423 - v67;
  MEMORY[0x1F4188790](v68);
  uint64_t v462 = (uint64_t)&v423 - v69;
  MEMORY[0x1F4188790](v70);
  v476 = (long long *)((char *)&v423 - v71);
  uint64_t v490 = sub_1C2A9C6E8();
  uint64_t v489 = *(void *)(v490 - 8);
  MEMORY[0x1F4188790](v490);
  v481 = (char *)&v423 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v73);
  v484 = (char *)&v423 - v74;
  MEMORY[0x1F4188790](v75);
  v430 = (char *)&v423 - v76;
  uint64_t v77 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2A79E18(0, &qword_1EBB8E388, (uint64_t (*)(uint64_t))sub_1C2A79BD0, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v78 - 8);
  uint64_t v488 = (uint64_t)&v423 - v79;
  sub_1C2A79BD0(0);
  uint64_t v496 = v80;
  v487 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 - 8);
  MEMORY[0x1F4188790](v80);
  v433 = (char *)&v423 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v82);
  v467 = (char *)&v423 - v83;
  MEMORY[0x1F4188790](v84);
  v463 = (uint64_t *)((char *)&v423 - v85);
  MEMORY[0x1F4188790](v86);
  uint64_t v441 = (uint64_t)&v423 - v87;
  MEMORY[0x1F4188790](v88);
  v440 = (char *)&v423 - v89;
  MEMORY[0x1F4188790](v90);
  v485 = (char *)&v423 - v91;
  MEMORY[0x1F4188790](v92);
  uint64_t v472 = (uint64_t)&v423 - v93;
  MEMORY[0x1F4188790](v94);
  uint64_t v454 = (uint64_t)&v423 - v95;
  MEMORY[0x1F4188790](v96);
  v453 = (char *)&v423 - v97;
  MEMORY[0x1F4188790](v98);
  uint64_t v495 = (uint64_t)&v423 - v99;
  sub_1C2A79E18(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], v77);
  MEMORY[0x1F4188790](v100 - 8);
  v493 = ((char *)&v423 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v102);
  v499 = (char *)&v423 - v103;
  uint64_t v104 = sub_1C2A9C398();
  uint64_t v502 = *(void *)(v104 - 8);
  MEMORY[0x1F4188790](v104);
  v466 = (char *)&v423 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v106);
  v444 = (char *)&v423 - v107;
  MEMORY[0x1F4188790](v108);
  v482 = (char *)&v423 - v109;
  MEMORY[0x1F4188790](v110);
  v464 = (char *)&v423 - v111;
  MEMORY[0x1F4188790](v112);
  v477 = (char *)&v423 - v113;
  MEMORY[0x1F4188790](v114);
  v455 = (char *)&v423 - v115;
  MEMORY[0x1F4188790](v116);
  uint64_t v118 = (char *)&v423 - v117;
  MEMORY[0x1F4188790](v119);
  v498 = (char *)&v423 - v120;
  sub_1C297A894();
  uint64_t v122 = v121;
  MEMORY[0x1F4188790](v121);
  v508 = (char *)&v423 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v124);
  v509 = (char *)&v423 - v125;
  MEMORY[0x1F4188790](v126);
  v497 = (uint64_t *)((char *)&v423 - v127);
  MEMORY[0x1F4188790](v128);
  long long v130 = (char *)&v423 - v129;
  MEMORY[0x1F4188790](v131);
  uint64_t v134 = (char *)&v423 - v133;
  long long v135 = a2[7];
  long long v525 = a2[6];
  long long v526 = v135;
  uint64_t v527 = *((void *)a2 + 16);
  long long v136 = a2[3];
  v521[1] = a2[2];
  long long v522 = v136;
  long long v137 = a2[5];
  long long v523 = a2[4];
  long long v524 = v137;
  long long v138 = a2[1];
  long long v520 = *a2;
  v521[0] = v138;
  uint64_t v139 = (int *)*((void *)a1 + 2);
  v507 = a1;
  v494 = v118;
  v501 = v139;
  v500 = (uint64_t (*)(void))v132;
  if (v139)
  {
    uint64_t v140 = v104;
    uint64_t v141 = (uint64_t)a1 + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
    unint64_t v142 = *(void *)(v132 + 72);
    swift_bridgeObjectRetain();
    uint64_t v143 = 0;
    do
    {
      sub_1C2A623C8(v141, (uint64_t)v134, (uint64_t (*)(void))sub_1C297A894);
      uint64_t v144 = (v134[*(int *)(v122 + 48) + 8] & 1) == 0;
      BOOL v145 = __OFADD__(v143, v144);
      v143 += v144;
      if (v145)
      {
        __break(1u);
        goto LABEL_45;
      }
      sub_1C2A62588((uint64_t)v134, (uint64_t (*)(void))sub_1C297A894);
      v141 += v142;
      uint64_t v139 = (int *)((char *)v139 - 1);
    }
    while (v139);
    swift_bridgeObjectRelease();
    uint64_t v104 = v140;
    if (v143 >= *((uint64_t *)&v525 + 1)) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
  if (*((uint64_t *)&v525 + 1) <= 0)
  {
    uint64_t v143 = 0;
LABEL_9:
    uint64_t v146 = v104;
    uint64_t v147 = MEMORY[0x1E4FBB550];
    sub_1C2A79C68((uint64_t)&v526, (uint64_t)v533, (unint64_t *)&qword_1EBB913F8, MEMORY[0x1E4FBB550]);
    sub_1C2A79C68((uint64_t)v533, (uint64_t)&v534, (unint64_t *)&qword_1EBB913F8, v147);
    if ((v535 & 1) == 0)
    {
      uint64_t v426 = sub_1C2A4F730(v534, (uint64_t)v507);
      int64_t v151 = v150 >> 1;
      if (v149 == v150 >> 1)
      {
        swift_bridgeObjectRetain();
LABEL_16:
        swift_unknownObjectRelease();
        goto LABEL_24;
      }
      unint64_t v142 = v148;
      uint64_t v152 = v149;
      v427 = (uint64_t (*)(void))v146;
      swift_bridgeObjectRetain();
      uint64_t v153 = v500;
      while (v152 < v151)
      {
        sub_1C2A623C8(v142 + *((void *)v153 + 9) * v152, (uint64_t)v130, (uint64_t (*)(void))sub_1C297A894);
        if ((v130[*(int *)(v122 + 48) + 8] & 1) == 0)
        {
          sub_1C2A62588((uint64_t)v130, (uint64_t (*)(void))sub_1C297A894);
          swift_unknownObjectRelease();
          uint64_t v146 = (uint64_t)v427;
          goto LABEL_18;
        }
        ++v152;
        sub_1C2A62588((uint64_t)v130, (uint64_t (*)(void))sub_1C297A894);
        if (v151 == v152) {
          goto LABEL_16;
        }
      }
      __break(1u);
      goto LABEL_94;
    }
LABEL_18:
    if (!v501)
    {
      long long v158 = v499;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v502 + 56))(v499, 1, 1, v146);
      goto LABEL_23;
    }
    uint64_t v154 = (uint64_t)v507
         + ((*((unsigned __int8 *)v500 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v500 + 80));
    uint64_t v155 = (void (*)(void, void, void))v497;
    sub_1C2A623C8(v154, (uint64_t)v497, (uint64_t (*)(void))sub_1C297A894);
    uint64_t v156 = v502;
    uint64_t v157 = *(void **)(v502 + 32);
    long long v158 = v499;
    uint64_t v426 = v502 + 32;
    v497 = v157;
    ((void (*)(char *, void, uint64_t))v157)(v499, v155, v146);
    v425 = *(void (**)(NSObject *, void, uint64_t, uint64_t))(v156 + 56);
    v425(v158, 0, 1, v146);
    uint64_t v159 = *(unsigned int (**)(NSObject *, uint64_t, uint64_t))(v156 + 48);
    if (v159(v158, 1, v146) == 1)
    {
LABEL_23:
      sub_1C2A62D30((uint64_t)v158, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
      goto LABEL_24;
    }
    v427 = (uint64_t (*)(void))v146;
    v499 = (char *)v159;
    long long v160 = (void (*)(NSObject *, char *, uint64_t (*)(void)))v497;
    ((void (*)(char *, NSObject *, uint64_t))v497)(v498, v158, v146);
    uint64_t v161 = *((void *)v500 + 9);
    uint64_t v424 = v154;
    uint64_t v162 = v154 + v161 * ((void)v501 - 1);
    uint64_t v163 = v161;
    sub_1C2A623C8(v162, (uint64_t)v134, (uint64_t (*)(void))sub_1C297A894);
    long long v158 = v493;
    v160(v493, v134, v427);
    v164 = v427;
    v425(v158, 0, 1, (uint64_t)v427);
    if (((unsigned int (*)(NSObject *, uint64_t, uint64_t (*)(void)))v499)(v158, 1, v164) == 1)
    {
      (*(void (**)(char *, uint64_t (*)(void)))(v502 + 8))(v498, v164);
      goto LABEL_23;
    }
    uint64_t v423 = v163;
    uint64_t v170 = (void (*)(void))v497;
    ((void (*)(char *, NSObject *, uint64_t (*)(void)))v497)(v494, v158, v164);
    uint64_t v171 = (uint64_t (*)(void))sub_1C2A4F7B8((uint64_t)v507, v525);
    MEMORY[0x1F4188790](v171);
    *(&v423 - 2) = (uint64_t)&v520;
    *(&v423 - 1) = v506;
    swift_bridgeObjectRetain();
    sub_1C2A43CCC((uint64_t (*)(char *))sub_1C2A79CE8, (uint64_t)(&v423 - 4), (uint64_t)v171);
    LOBYTE(v511) = BYTE9(v524);
    uint64_t v172 = v488;
    sub_1C2A50CB8(v173, (unsigned __int8 *)&v511, v488);
    swift_bridgeObjectRelease();
    uint64_t v174 = v496;
    int v175 = (*((uint64_t (**)(uint64_t, uint64_t, uint64_t))v487 + 6))(v172, 1, v496);
    uint64_t v176 = v505;
    if (v175 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v177 = *(void (**)(char *, uint64_t (*)(void)))(v502 + 8);
      v177(v494, v164);
      v177(v498, v164);
      sub_1C2A62D30(v172, &qword_1EBB8E388, (uint64_t (*)(uint64_t))sub_1C2A79BD0);
      uint64_t v178 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v176 + 56);
      uint64_t v166 = v503;
      uint64_t v179 = v504;
      v178(v503, 1, 1, v504);
      uint64_t v168 = type metadata accessor for SignificantChangeEngine.Output(0);
      v178(v166 + *(int *)(v168 + 20), 1, 1, v179);
      goto LABEL_25;
    }
    unsigned int v180 = v170;
    v500 = v171;
    uint64_t v181 = *(int *)(v174 + 48);
    uint64_t v182 = (v495 + v181);
    uint64_t v183 = v172 + v181;
    v180();
    v493 = v182;
    sub_1C2A62484(v183, (uint64_t)v182, type metadata accessor for SignificantChangeEngine.Changepoint);
    os_log_t v184 = v473;
    sub_1C2A623B0(v506, (uint64_t)v473);
    uint64_t v185 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v486 + 48);
    uint64_t v186 = v491;
    uint64_t v488 = v486 + 48;
    v487 = v185;
    uint64_t v153 = v164;
    if (v185((uint64_t)v184, 1, v491) == 1)
    {
      sub_1C2A62588((uint64_t)v184, (uint64_t (*)(void))sub_1C2A62430);
      uint64_t v139 = (int *)v492;
    }
    else
    {
      uint64_t v187 = v450;
      sub_1C2A62A14((uint64_t)v184 + *(int *)(v186 + 20), v450);
      sub_1C2A62588((uint64_t)v184, type metadata accessor for SignificantChangeEngine.State);
      uint64_t v188 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
      int v189 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v188 - 8) + 48))(v187, 1, v188);
      uint64_t v139 = (int *)v492;
      if (v189 != 1)
      {
        uint64_t v259 = v187 + *(int *)(v188 + 24);
        uint64_t v190 = (uint64_t)v476;
        sub_1C2939D90(v259, (uint64_t)v476);
        sub_1C2A62588(v187, type metadata accessor for SignificantChangeEngine.State.MeanShift);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v489 + 48))(v190, 1, v490) != 1)
        {
          uint64_t v260 = v489;
          v261 = v430;
          uint64_t v262 = v490;
          (*(void (**)(char *, uint64_t, uint64_t))(v489 + 32))(v430, v190, v490);
          *(void *)&long long v511 = 0;
          *((void *)&v511 + 1) = 0xE000000000000000;
          sub_1C2A9E4D8();
          swift_bridgeObjectRelease();
          *(void *)&long long v511 = 0x676E697472617453;
          *((void *)&v511 + 1) = 0xEF203A6D6F726620;
          sub_1C2A62540(&qword_1EBB92368, MEMORY[0x1E4F27928]);
          sub_1C2A9E898();
          sub_1C2A9DDB8();
          uint64_t v153 = v164;
          swift_bridgeObjectRelease();
          unint64_t v142 = *((void *)&v511 + 1);
          v476 = (long long *)v511;
          uint64_t v263 = v260;
          uint64_t v139 = (int *)v492;
          (*(void (**)(char *, uint64_t))(v263 + 8))(v261, v262);
LABEL_35:
          long long v528 = v520;
          *(_OWORD *)v529 = v521[0];
          *(_OWORD *)&v529[9] = *(_OWORD *)((char *)v521 + 9);
          uint64_t v191 = MEMORY[0x1E4FBB3D0];
          sub_1C2A79C68((uint64_t)&v528, (uint64_t)v532, &qword_1EBB8F830, MEMORY[0x1E4FBB3D0]);
          sub_1C2A79C68((uint64_t)v532, (uint64_t)&v536, &qword_1EBB8F830, v191);
          if ((v537 & 1) == 0 && v536 < *(double *)((char *)&v493->isa + v139[5])
            || (sub_1C2A79C68((uint64_t)v529, (uint64_t)v531, &qword_1EBB8F830, v191),
                sub_1C2A79C68((uint64_t)v531, (uint64_t)&v538, &qword_1EBB8F830, v191),
                (v539 & 1) == 0)
            && *(double *)((char *)&v493->isa + v139[9]) < v538
            || (sub_1C2A79C68((uint64_t)&v529[16], (uint64_t)v530, &qword_1EBB8F830, v191),
                sub_1C2A79C68((uint64_t)v530, (uint64_t)&v540, &qword_1EBB8F830, v191),
                (v541 & 1) == 0)
            && fabs(*(double *)((char *)&v493->isa + v139[7])) < v540)
          {
            swift_bridgeObjectRelease();
            if (qword_1EBB8FF08 == -1)
            {
LABEL_42:
              uint64_t v192 = sub_1C2A9CFE8();
              __swift_project_value_buffer(v192, (uint64_t)qword_1EBB8FEF0);
              uint64_t v193 = (uint64_t)v453;
              uint64_t v194 = (uint64_t)&v453[*(int *)(v496 + 48)];
              unint64_t v195 = (uint64_t (*)(void))(v502 + 16);
              uint64_t v196 = *(char **)(v502 + 16);
              ((void (*)(char *, uint64_t, uint64_t (*)(void)))v196)(v453, v495, v153);
              sub_1C2A623C8((uint64_t)v493, v194, type metadata accessor for SignificantChangeEngine.Changepoint);
              uint64_t v197 = v454;
              sub_1C2A623C8(v193, v454, (uint64_t (*)(void))sub_1C2A79BD0);
              uint64_t v198 = v193;
              uint64_t v199 = v472;
              sub_1C2A62484(v198, v472, (uint64_t (*)(void))sub_1C2A79BD0);
              swift_bridgeObjectRetain();
              uint64_t v200 = sub_1C2A9CFC8();
              os_log_type_t v201 = sub_1C2A9E0C8();
              v493 = v200;
              LODWORD(v482) = v201;
              BOOL v202 = os_log_type_enabled(v200, v201);
              v500 = v195;
              v499 = v196;
              if (v202)
              {
                unint64_t v203 = v142;
                uint64_t v204 = swift_slowAlloc();
                os_log_t v473 = (os_log_t)swift_slowAlloc();
                *(void *)&long long v511 = v473;
                *(_DWORD *)uint64_t v204 = 136315394;
                uint64_t v471 = v204 + 4;
                swift_bridgeObjectRetain();
                uint64_t v510 = sub_1C2957168((uint64_t)v476, v203, (uint64_t *)&v511);
                v476 = &v511;
                sub_1C2A9E358();
                swift_bridgeObjectRelease_n();
                *(_WORD *)(v204 + 12) = 2080;
                v470 = (uint8_t *)v204;
                uint64_t v471 = v204 + 14;
                uint64_t v205 = *(int *)(v496 + 48);
                uint64_t v206 = v485;
                uint64_t v207 = (uint64_t)&v485[v205];
                uint64_t v208 = v197;
                uint64_t v209 = v197 + v205;
                ((void (*)(char *, uint64_t, uint64_t (*)(void)))v196)(v485, v208, v153);
                sub_1C2A623C8(v209, v207, type metadata accessor for SignificantChangeEngine.Changepoint);
                uint64_t v210 = v207;
                uint64_t v211 = v451;
                sub_1C2A62484(v210, v451, type metadata accessor for SignificantChangeEngine.Changepoint);
                uint64_t v212 = v502;
                uint64_t v213 = v153;
                (*(void (**)(char *, uint64_t (*)(void)))(v502 + 8))(v206, v153);
                uint64_t v214 = SignificantChangeEngine.Changepoint.description.getter();
                unint64_t v216 = v215;
                sub_1C2A62588(v211, type metadata accessor for SignificantChangeEngine.Changepoint);
                uint64_t v217 = sub_1C2957168(v214, v216, (uint64_t *)&v511);
                v218 = v470;
                uint64_t v510 = v217;
                sub_1C2A9E358();
                swift_bridgeObjectRelease();
                sub_1C2A62588(v472, (uint64_t (*)(void))sub_1C2A79BD0);
                sub_1C2A62588(v208, (uint64_t (*)(void))sub_1C2A79BD0);
                uint64_t v219 = v493;
                _os_log_impl(&dword_1C292A000, v493, (os_log_type_t)v482, "[%s] No significant mean shift; maximum changepoint is: %s",
                  v218,
                  0x16u);
                os_log_t v220 = v473;
                swift_arrayDestroy();
                MEMORY[0x1C87656F0](v220, -1, -1);
                MEMORY[0x1C87656F0](v218, -1, -1);

                uint64_t v221 = v212;
              }
              else
              {
                uint64_t v213 = v153;
                swift_bridgeObjectRelease_n();
                sub_1C2A62588(v199, (uint64_t (*)(void))sub_1C2A79BD0);
                sub_1C2A62588(v197, (uint64_t (*)(void))sub_1C2A79BD0);

                uint64_t v221 = v502;
              }
              v228 = (void (**)(char *, uint64_t (*)(void)))(v221 + 8);
              swift_bridgeObjectRetain();
              double v229 = 0.0;
              uint64_t v230 = (uint64_t)v509;
              uint64_t v231 = v501;
              v232 = v213;
              uint64_t v233 = v423;
              uint64_t v234 = v424;
              do
              {
                sub_1C2A623C8(v234, v230, (uint64_t (*)(void))sub_1C297A894);
                uint64_t v235 = *(int *)(v122 + 48);
                uint64_t v236 = &v508[v235];
                uint64_t v237 = &v509[v235];
                ((void (*)(char *, char *, uint64_t (*)(void)))v499)(v508, v509, v232);
                double v238 = *(double *)v237;
                int v239 = v237[8];
                *(void *)uint64_t v236 = *(void *)v237;
                v236[8] = v239;
                uint64_t v230 = (uint64_t)v509;
                double v240 = v238;
                if (v239) {
                  double v240 = -0.0;
                }
                double v229 = v229 + v240;
                uint64_t v241 = (void (*)(uint64_t, uint64_t (*)(void)))*v228;
                (*v228)(v508, v232);
                sub_1C2A62588(v230, (uint64_t (*)(void))sub_1C297A894);
                v234 += v233;
                uint64_t v231 = (int *)((char *)v231 - 1);
              }
              while (v231);
              uint64_t v242 = v507;
              swift_bridgeObjectRelease();
              sub_1C2A9C378();
              uint64_t v243 = v494;
              sub_1C2A9C348();
              uint64_t v244 = (uint64_t)v455;
              sub_1C2A9C358();
              uint64_t v245 = (uint64_t)v456;
              ((void (*)(char *, uint64_t, uint64_t (*)(void)))v499)(v456, v244, v232);
              sub_1C2A51F94((uint64_t)v242, v244);
              uint64_t v246 = v474;
              uint64_t v247 = v475;
              *(double *)(v245 + *(int *)(v474 + 20)) = v229 / (double)v143;
              *(void *)(v245 + *(int *)(v246 + 24)) = v248;
              *(unsigned char *)(v245 + *(int *)(v246 + 28)) = 2;
              sub_1C2A62484(v245, v247, type metadata accessor for SignificantChange.Period);
              v241(v244, v232);
              sub_1C2A62588(v495, (uint64_t (*)(void))sub_1C2A79BD0);
              v241((uint64_t)v498, v232);
              uint64_t v249 = v504;
              uint64_t v250 = (uint64_t)v459;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v479 + 56))(&v459[*(int *)(v504 + 24)], 1, 1, v480);
              sub_1C2A62484(v247, v250, type metadata accessor for SignificantChange.Period);
              *(void *)(v250 + *(int *)(v249 + 20)) = MEMORY[0x1E4FBC860];
              ((void (*)(char *, char *, uint64_t (*)(void)))v497)(v477, v243, v232);
              uint64_t v251 = v478;
              sub_1C2A623C8(v250, (uint64_t)v478, type metadata accessor for SignificantChange);
              v509 = *(char **)(v505 + 56);
              ((void (*)(uint64_t (*)(uint64_t), void, uint64_t, uint64_t))v509)(v251, 0, 1, v249);
              uint64_t v252 = (uint64_t)v460;
              (*(void (**)(void))(v483 + 56))();
              uint64_t v253 = v457;
              sub_1C2A623B0(v506, v457);
              uint64_t v254 = v491;
              if (v487(v253, 1, v491) == 1)
              {
                sub_1C2A62588(v253, (uint64_t (*)(void))sub_1C2A62430);
                uint64_t v166 = v503;
                uint64_t v255 = v462;
              }
              else
              {
                uint64_t v256 = v436;
                sub_1C2A62A14(v253 + *(int *)(v254 + 20), v436);
                sub_1C2A62588(v253, type metadata accessor for SignificantChangeEngine.State);
                uint64_t v257 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
                int v258 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v257 - 8) + 48))(v256, 1, v257);
                uint64_t v166 = v503;
                uint64_t v255 = v462;
                if (v258 != 1)
                {
                  sub_1C2939D90(v256 + *(int *)(v257 + 24), v462);
                  sub_1C2A62588(v256, type metadata accessor for SignificantChangeEngine.State.MeanShift);
                  goto LABEL_63;
                }
                sub_1C2A62588(v256, (uint64_t (*)(void))sub_1C2A62A2C);
              }
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v489 + 56))(v255, 1, 1, v490);
LABEL_63:
              uint64_t v267 = v255;
              uint64_t v268 = v458;
              sub_1C2A62484((uint64_t)v478, v458, (uint64_t (*)(void))sub_1C2A6235C);
              uint64_t v269 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
              sub_1C2A62484(v252, v268 + *(int *)(v269 + 20), (uint64_t (*)(void))sub_1C299F0F4);
              sub_1C2A62484(v267, v268 + *(int *)(v269 + 24), (uint64_t (*)(void))sub_1C2A62B24);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v269 - 8) + 56))(v268, 0, 1, v269);
              v270 = v461;
              uint64_t v271 = &v461[*(int *)(v254 + 24)];
              uint64_t v272 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v272 - 8) + 56))(v271, 1, 1, v272);
              ((void (*)(char *, char *, uint64_t (*)(void)))v497)(v270, v477, v427);
              sub_1C2A62484(v268, (uint64_t)&v270[*(int *)(v254 + 20)], (uint64_t (*)(void))sub_1C2A62A2C);
              sub_1C2A62484(v250, v166, type metadata accessor for SignificantChange);
              uint64_t v273 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v509;
              ((void (*)(uint64_t, void, uint64_t, uint64_t))v509)(v166, 0, 1, v249);
              uint64_t v168 = type metadata accessor for SignificantChangeEngine.Output(0);
              v273(v166 + *(int *)(v168 + 20), 1, 1, v249);
              uint64_t v274 = v166 + *(int *)(v168 + 24);
              uint64_t v275 = (uint64_t)v270;
LABEL_92:
              sub_1C2A62484(v275, v274, type metadata accessor for SignificantChangeEngine.State);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v486 + 56))(v274, 0, 1, v254);
              return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v168 - 8) + 56))(v166, 0, 1, v168);
            }
LABEL_94:
            swift_once();
            goto LABEL_42;
          }
LABEL_45:
          v478 = (uint64_t (*)(uint64_t))v142;
          uint64_t v222 = v439;
          sub_1C2A623B0(v506, v439);
          uint64_t v223 = v491;
          if (v487(v222, 1, v491) == 1)
          {
            sub_1C2A62588(v222, (uint64_t (*)(void))sub_1C2A62430);
            uint64_t v224 = v483;
            uint64_t v225 = v495;
            id v226 = v485;
            uint64_t v227 = v437;
          }
          else
          {
            uint64_t v264 = v431;
            sub_1C2A62A14(v222 + *(int *)(v223 + 20), v431);
            sub_1C2A62588(v222, type metadata accessor for SignificantChangeEngine.State);
            uint64_t v265 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
            int v266 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v265 - 8) + 48))(v264, 1, v265);
            uint64_t v224 = v483;
            uint64_t v225 = v495;
            id v226 = v485;
            uint64_t v227 = v437;
            if (v266 != 1)
            {
              sub_1C2A62AEC(v264 + *(int *)(v265 + 20), v437);
              sub_1C2A62588(v264, type metadata accessor for SignificantChangeEngine.State.MeanShift);
LABEL_65:
              long long v517 = v525;
              long long v518 = v526;
              uint64_t v519 = v527;
              long long v513 = v521[1];
              long long v514 = v522;
              long long v515 = v523;
              long long v516 = v524;
              long long v511 = v520;
              long long v512 = v521[0];
              uint64_t v276 = v468;
              sub_1C2A52618(v227, (uint64_t)v500, (uint64_t)&v511, v468);
              swift_bridgeObjectRelease();
              sub_1C2A62588(v227, (uint64_t (*)(void))sub_1C299F0F4);
              uint64_t v277 = (uint64_t)&v226[*(int *)(v496 + 48)];
              uint64_t v278 = v502;
              uint64_t v279 = (char *)(v502 + 16);
              uint64_t v280 = v225;
              uint64_t v281 = v427;
              v501 = *(int **)(v502 + 16);
              ((void (*)(char *, uint64_t, uint64_t (*)(void)))v501)(v226, v280, v427);
              sub_1C2A623C8((uint64_t)v493, v277, type metadata accessor for SignificantChangeEngine.Changepoint);
              uint64_t v282 = v277;
              uint64_t v283 = v442;
              sub_1C2A62484(v282, v442, type metadata accessor for SignificantChangeEngine.Changepoint);
              uint64_t v284 = *(char **)(v224 + 56);
              uint64_t v285 = v492;
              uint64_t v483 = v224 + 56;
              v477 = v284;
              ((void (*)(uint64_t, void, uint64_t, uint64_t))v284)(v283, 0, 1, v492);
              long long v517 = v525;
              long long v518 = v526;
              uint64_t v519 = v527;
              long long v513 = v521[1];
              long long v514 = v522;
              long long v515 = v523;
              long long v516 = v524;
              long long v511 = v520;
              long long v512 = v521[0];
              uint64_t v286 = v276;
              v287 = v281;
              LODWORD(v499) = sub_1C2A52E30(v286, v283, (uint64_t)&v511);
              sub_1C2A62588(v283, (uint64_t (*)(void))sub_1C299F0F4);
              uint64_t v288 = *(char **)(v278 + 8);
              uint64_t v502 = v278 + 8;
              ((void (*)(char *, uint64_t (*)(void)))v288)(v485, v281);
              uint64_t v289 = v285;
              if (qword_1EBB8FF08 != -1) {
                swift_once();
              }
              v508 = v288;
              uint64_t v290 = sub_1C2A9CFE8();
              __swift_project_value_buffer(v290, (uint64_t)qword_1EBB8FEF0);
              uint64_t v291 = (uint64_t)v440;
              uint64_t v292 = (uint64_t)&v440[*(int *)(v496 + 48)];
              uint64_t v293 = v501;
              ((void (*)(char *, uint64_t, uint64_t (*)(void)))v501)(v440, v495, v281);
              sub_1C2A623C8((uint64_t)v493, v292, type metadata accessor for SignificantChangeEngine.Changepoint);
              uint64_t v294 = v441;
              sub_1C2A623C8(v291, v441, (uint64_t (*)(void))sub_1C2A79BD0);
              uint64_t v295 = v291;
              uint64_t v296 = (void (*)(void, void, void))v463;
              sub_1C2A62484(v295, (uint64_t)v463, (uint64_t (*)(void))sub_1C2A79BD0);
              uint64_t v297 = v478;
              swift_bridgeObjectRetain();
              v298 = sub_1C2A9CFC8();
              os_log_type_t v299 = sub_1C2A9E0C8();
              int v300 = v299;
              BOOL v301 = os_log_type_enabled(v298, v299);
              v509 = v279;
              if (v301)
              {
                uint64_t v302 = swift_slowAlloc();
                os_log_t v473 = v298;
                uint64_t v303 = v302;
                v500 = (uint64_t (*)(void))swift_slowAlloc();
                *(void *)&long long v511 = v500;
                *(_DWORD *)uint64_t v303 = 136315394;
                LODWORD(v472) = v300;
                swift_bridgeObjectRetain();
                uint64_t v510 = sub_1C2957168((uint64_t)v476, (unint64_t)v297, (uint64_t *)&v511);
                v476 = &v511;
                sub_1C2A9E358();
                swift_bridgeObjectRelease_n();
                *(_WORD *)(v303 + 12) = 2080;
                uint64_t v304 = *(int *)(v496 + 48);
                unint64_t v305 = v485;
                uint64_t v306 = (uint64_t)&v485[v304];
                uint64_t v307 = v294 + v304;
                ((void (*)(char *, uint64_t, uint64_t (*)(void)))v293)(v485, v294, v287);
                sub_1C2A623C8(v307, v306, type metadata accessor for SignificantChangeEngine.Changepoint);
                uint64_t v308 = v306;
                uint64_t v309 = v451;
                sub_1C2A62484(v308, v451, type metadata accessor for SignificantChangeEngine.Changepoint);
                ((void (*)(char *, uint64_t (*)(void)))v508)(v305, v287);
                uint64_t v310 = SignificantChangeEngine.Changepoint.description.getter();
                unint64_t v312 = v311;
                sub_1C2A62588(v309, type metadata accessor for SignificantChangeEngine.Changepoint);
                uint64_t v510 = sub_1C2957168(v310, v312, (uint64_t *)&v511);
                sub_1C2A9E358();
                uint64_t v289 = v492;
                swift_bridgeObjectRelease();
                sub_1C2A62588((uint64_t)v463, (uint64_t (*)(void))sub_1C2A79BD0);
                sub_1C2A62588(v294, (uint64_t (*)(void))sub_1C2A79BD0);
                os_log_t v313 = v473;
                _os_log_impl(&dword_1C292A000, v473, (os_log_type_t)v472, "[%s] Significant Mean Shift Changepoint: %s", (uint8_t *)v303, 0x16u);
                v314 = v500;
                swift_arrayDestroy();
                MEMORY[0x1C87656F0](v314, -1, -1);
                MEMORY[0x1C87656F0](v303, -1, -1);

                uint64_t v316 = v479;
                uint64_t v315 = v480;
              }
              else
              {
                swift_bridgeObjectRelease_n();
                sub_1C2A62588((uint64_t)v296, (uint64_t (*)(void))sub_1C2A79BD0);
                sub_1C2A62588(v294, (uint64_t (*)(void))sub_1C2A79BD0);

                uint64_t v316 = v479;
                uint64_t v315 = v480;
                unint64_t v305 = v485;
              }
              uint64_t v317 = (uint64_t)&v305[*(int *)(v496 + 48)];
              uint64_t v318 = v495;
              v319 = v501;
              ((void (*)(char *, uint64_t, uint64_t (*)(void)))v501)(v305, v495, v287);
              sub_1C2A623C8((uint64_t)v493, v317, type metadata accessor for SignificantChangeEngine.Changepoint);
              double v320 = *(double *)(v317 + *(int *)(v289 + 28));
              sub_1C2A62588(v317, type metadata accessor for SignificantChangeEngine.Changepoint);
              ((void (*)(char *, uint64_t (*)(void)))v508)(v305, v287);
              uint64_t v321 = v443;
              sub_1C2A623B0(v506, v443);
              uint64_t v322 = v491;
              unsigned int v323 = v487(v321, 1, v491);
              uint64_t v324 = (uint64_t)v445;
              if (v323 == 1)
              {
                v325 = sub_1C2A62430;
              }
              else
              {
                uint64_t v326 = v321 + *(int *)(v322 + 20);
                uint64_t v327 = v432;
                sub_1C2A62A14(v326, v432);
                sub_1C2A62588(v321, type metadata accessor for SignificantChangeEngine.State);
                uint64_t v328 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v328 - 8) + 48))(v327, 1, v328) == 1)
                {
                  v329 = sub_1C2A62A2C;
                  uint64_t v330 = v327;
LABEL_77:
                  sub_1C2A62588(v330, (uint64_t (*)(void))v329);
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v316 + 56))(v324, 1, 1, v315);
                  goto LABEL_78;
                }
                uint64_t v321 = v428;
                sub_1C2A62344(v327, v428);
                sub_1C2A62588(v327, type metadata accessor for SignificantChangeEngine.State.MeanShift);
                uint64_t v331 = v504;
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v505 + 48))(v321, 1, v504) != 1)
                {
                  sub_1C2A623C8(v321 + *(int *)(v331 + 24), v324, (uint64_t (*)(void))sub_1C2A64008);
                  sub_1C2A62588(v321, type metadata accessor for SignificantChange);
LABEL_78:
                  LODWORD(v476) = v320 <= 0.0;
                  uint64_t v332 = (uint64_t)&v305[*(int *)(v496 + 48)];
                  v333 = v427;
                  ((void (*)(char *, uint64_t))v319)(v305, v318);
                  v500 = type metadata accessor for SignificantChangeEngine.Changepoint;
                  v334 = v319;
                  sub_1C2A623C8((uint64_t)v493, v332, type metadata accessor for SignificantChangeEngine.Changepoint);
                  uint64_t v335 = v489;
                  v336 = *(void **)(v489 + 16);
                  uint64_t v337 = (uint64_t)v484;
                  uint64_t v338 = v490;
                  uint64_t v472 = v489 + 16;
                  v463 = v336;
                  ((void (*)(char *, uint64_t, uint64_t))v336)(v484, v332, v490);
                  v478 = type metadata accessor for SignificantChangeEngine.Changepoint;
                  sub_1C2A62588(v332, type metadata accessor for SignificantChangeEngine.Changepoint);
                  LOBYTE(v511) = v320 <= 0.0;
                  sub_1C2A53100(v324, v499 & 1, v337, 1, v469);
                  (*(void (**)(uint64_t, uint64_t))(v335 + 8))(v337, v338);
                  sub_1C2A62588(v324, (uint64_t (*)(void))sub_1C2A64008);
                  v339 = v333;
                  v340 = v508;
                  ((void (*)(char *, uint64_t (*)(void)))v508)(v305, v333);
                  sub_1C2A9C378();
                  uint64_t v341 = (uint64_t)&v305[*(int *)(v496 + 48)];
                  uint64_t v342 = v495;
                  ((void (*)(char *, uint64_t, uint64_t (*)(void)))v334)(v305, v495, v339);
                  v343 = v500;
                  sub_1C2A623C8((uint64_t)v493, v341, v500);
                  sub_1C2A9C378();
                  ((void (*)(char *, uint64_t (*)(void)))v340)(v305, v339);
                  v344 = v464;
                  sub_1C2A9C358();
                  uint64_t v345 = v341;
                  v346 = v478;
                  sub_1C2A62588(v345, v478);
                  v347 = v501;
                  uint64_t v348 = (uint64_t)v344;
                  ((void (*)(char *, char *, uint64_t (*)(void)))v501)(v482, v344, v339);
                  uint64_t v349 = (uint64_t)&v305[*(int *)(v496 + 48)];
                  ((void (*)(char *, uint64_t, uint64_t (*)(void)))v347)(v305, v342, v339);
                  v350 = v493;
                  sub_1C2A623C8((uint64_t)v493, v349, v343);
                  uint64_t v351 = *(void *)(v349 + *(int *)(v492 + 44) + 24);
                  sub_1C2A62588(v349, v346);
                  sub_1C2A51F94((uint64_t)v507, v348);
                  uint64_t v353 = v352;
                  uint64_t v354 = v465;
                  ((void (*)(uint64_t, char *, uint64_t (*)(void)))v497)(v465, v482, v339);
                  v355 = (int *)v474;
                  *(void *)(v354 + *(int *)(v474 + 20)) = v351;
                  *(void *)(v354 + v355[6]) = v353;
                  *(unsigned char *)(v354 + v355[7]) = 2;
                  v356 = v339;
                  v357 = v508;
                  ((void (*)(char *, uint64_t (*)(void)))v508)(v305, v339);
                  uint64_t v358 = v496;
                  os_log_t v473 = (os_log_t)&v305[*(int *)(v496 + 48)];
                  os_log_t v359 = v473;
                  v360 = v501;
                  ((void (*)(char *, uint64_t, uint64_t (*)(void)))v501)(v305, v495, v356);
                  sub_1C2A623C8((uint64_t)v350, (uint64_t)v359, v500);
                  sub_1C2A9C378();
                  ((void (*)(char *, uint64_t (*)(void)))v357)(v305, v356);
                  sub_1C2A9C348();
                  uint64_t v361 = (uint64_t)v444;
                  sub_1C2A9C358();
                  v362 = v478;
                  sub_1C2A62588((uint64_t)v473, v478);
                  v363 = v427;
                  ((void (*)(char *, uint64_t, uint64_t (*)(void)))v360)(v482, v361, v427);
                  uint64_t v364 = (uint64_t)&v305[*(int *)(v358 + 48)];
                  ((void (*)(char *, uint64_t, uint64_t (*)(void)))v360)(v305, v495, v363);
                  sub_1C2A623C8((uint64_t)v493, v364, v500);
                  uint64_t v365 = *(void *)(v364 + *(int *)(v492 + 48) + 24);
                  sub_1C2A62588(v364, v362);
                  sub_1C2A51F94((uint64_t)v507, v361);
                  uint64_t v367 = v366;
                  uint64_t v368 = (uint64_t)v447;
                  ((void (*)(char *, char *, uint64_t (*)(void)))v497)(v447, v482, v363);
                  *(void *)(v368 + v355[5]) = v365;
                  *(void *)(v368 + v355[6]) = v367;
                  *(unsigned char *)(v368 + v355[7]) = (_BYTE)v476;
                  v369 = v305;
                  v370 = v363;
                  v371 = v508;
                  ((void (*)(char *, uint64_t (*)(void)))v508)(v369, v363);
                  uint64_t v372 = v465;
                  uint64_t v373 = v475;
                  sub_1C2A623C8(v465, v475, type metadata accessor for SignificantChange.Period);
                  sub_1C2A79D08(0);
                  unint64_t v374 = (*(unsigned __int8 *)(v446 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v446 + 80);
                  uint64_t v375 = swift_allocObject();
                  *(_OWORD *)(v375 + 16) = xmmword_1C2AA6B00;
                  sub_1C2A62484(v368, v375 + v374, type metadata accessor for SignificantChange.Period);
                  ((void (*)(uint64_t, uint64_t (*)(void)))v371)(v361, v370);
                  sub_1C2A62588(v372, type metadata accessor for SignificantChange.Period);
                  ((void (*)(char *, uint64_t (*)(void)))v371)(v464, v370);
                  sub_1C2A62588(v468, (uint64_t (*)(void))sub_1C299F0F4);
                  ((void (*)(char *, uint64_t (*)(void)))v371)(v498, v370);
                  uint64_t v376 = v504;
                  uint64_t v377 = (uint64_t)v470;
                  uint64_t v378 = (uint64_t)&v470[*(int *)(v504 + 24)];
                  sub_1C2A62484(v469, v378, type metadata accessor for SignificantChange.Notification);
                  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v479 + 56))(v378, 0, 1, v480);
                  sub_1C2A62484(v373, v377, type metadata accessor for SignificantChange.Period);
                  *(void *)(v377 + *(int *)(v376 + 20)) = v375;
                  ((void (*)(char *, char *, uint64_t (*)(void)))v497)(v466, v494, v370);
                  uint64_t v379 = v377;
                  v380 = v493;
                  uint64_t v381 = v452;
                  sub_1C2A623C8(v379, v452, type metadata accessor for SignificantChange);
                  uint64_t v382 = v505 + 56;
                  uint64_t v383 = v376;
                  uint64_t v384 = v495;
                  v507 = *(void (**)(void, void, void, void))(v505 + 56);
                  v507(v381, 0, 1, v383);
                  uint64_t v385 = v496;
                  uint64_t v386 = (uint64_t)&v467[*(int *)(v496 + 48)];
                  ((void (*)(void))v501)();
                  sub_1C2A623C8((uint64_t)v380, v386, v500);
                  uint64_t v387 = v386;
                  uint64_t v388 = v471;
                  sub_1C2A62484(v387, v471, type metadata accessor for SignificantChangeEngine.Changepoint);
                  ((void (*)(uint64_t, void, uint64_t, uint64_t))v477)(v388, 0, 1, v492);
                  if ((v499 & 1) == 0)
                  {
                    v395 = v485;
                    uint64_t v396 = (uint64_t)&v485[*(int *)(v385 + 48)];
                    ((void (*)(char *, uint64_t, uint64_t (*)(void)))v497)(v485, v384, v370);
                    sub_1C2A62484((uint64_t)v380, v396, type metadata accessor for SignificantChangeEngine.Changepoint);
                    v397 = v438;
                    uint64_t v392 = v490;
                    ((void (*)(char *, uint64_t, uint64_t))v463)(v438, v396, v490);
                    uint64_t v398 = v396;
                    v399 = v397;
                    sub_1C2A62588(v398, type metadata accessor for SignificantChangeEngine.Changepoint);
                    v400 = v395;
                    v401 = v508;
                    ((void (*)(char *, uint64_t (*)(void)))v508)(v400, v370);
                    uint64_t v402 = v491;
                    uint64_t v393 = v489;
LABEL_91:
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v393 + 56))(v399, 0, 1, v392);
                    uint64_t v414 = v381;
                    uint64_t v415 = v448;
                    sub_1C2A62484(v414, v448, (uint64_t (*)(void))sub_1C2A6235C);
                    uint64_t v416 = (uint64_t)v399;
                    uint64_t v417 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
                    sub_1C2A62484(v471, v415 + *(int *)(v417 + 20), (uint64_t (*)(void))sub_1C299F0F4);
                    sub_1C2A62484(v416, v415 + *(int *)(v417 + 24), (uint64_t (*)(void))sub_1C2A62B24);
                    ((void (*)(char *, uint64_t (*)(void)))v401)(v467, v370);
                    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v417 - 8) + 56))(v415, 0, 1, v417);
                    uint64_t v254 = v402;
                    v418 = v449;
                    v419 = &v449[*(int *)(v402 + 24)];
                    uint64_t v420 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v420 - 8) + 56))(v419, 1, 1, v420);
                    ((void (*)(char *, char *, uint64_t (*)(void)))v497)(v418, v466, v370);
                    sub_1C2A62484(v415, (uint64_t)&v418[*(int *)(v402 + 20)], (uint64_t (*)(void))sub_1C2A62A2C);
                    uint64_t v166 = v503;
                    sub_1C2A62484((uint64_t)v470, v503, type metadata accessor for SignificantChange);
                    uint64_t v421 = v504;
                    v422 = v507;
                    v507(v166, 0, 1, v504);
                    uint64_t v168 = type metadata accessor for SignificantChangeEngine.Output(0);
                    v422(v166 + *(int *)(v168 + 20), 1, 1, v421);
                    uint64_t v274 = v166 + *(int *)(v168 + 24);
                    uint64_t v275 = (uint64_t)v418;
                    goto LABEL_92;
                  }
                  uint64_t v389 = v434;
                  sub_1C2A623B0(v506, v434);
                  uint64_t v390 = v491;
                  unsigned int v391 = v487(v389, 1, v491);
                  uint64_t v392 = v490;
                  uint64_t v393 = v489;
                  uint64_t v505 = v382;
                  if (v391 == 1)
                  {
                    sub_1C2A62588(v389, (uint64_t (*)(void))sub_1C2A62430);
                    v370 = v427;
                    uint64_t v394 = v435;
                  }
                  else
                  {
                    uint64_t v403 = v429;
                    sub_1C2A62A14(v389 + *(int *)(v390 + 20), v429);
                    sub_1C2A62588(v389, type metadata accessor for SignificantChangeEngine.State);
                    uint64_t v404 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
                    int v405 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v404 - 8) + 48))(v403, 1, v404);
                    v370 = v427;
                    uint64_t v394 = v435;
                    if (v405 != 1)
                    {
                      sub_1C2939D90(v403 + *(int *)(v404 + 24), v435);
                      sub_1C2A62588(v403, type metadata accessor for SignificantChangeEngine.State.MeanShift);
                      goto LABEL_87;
                    }
                    sub_1C2A62588(v403, (uint64_t (*)(void))sub_1C2A62A2C);
                  }
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v393 + 56))(v394, 1, 1, v392);
LABEL_87:
                  uint64_t v406 = (uint64_t)v433;
                  uint64_t v407 = v496;
                  uint64_t v408 = (uint64_t)&v433[*(int *)(v496 + 48)];
                  ((void (*)(char *, uint64_t, uint64_t (*)(void)))v497)(v433, v495, v370);
                  sub_1C2A62484((uint64_t)v493, v408, type metadata accessor for SignificantChangeEngine.Changepoint);
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v393 + 48))(v394, 1, v392) == 1)
                  {
                    uint64_t v409 = *(int *)(v407 + 48);
                    v410 = v485;
                    uint64_t v411 = (uint64_t)&v485[v409];
                    ((void (*)(char *, uint64_t, uint64_t (*)(void)))v497)(v485, v406, v370);
                    sub_1C2A62484(v408, v411, type metadata accessor for SignificantChangeEngine.Changepoint);
                    v399 = v438;
                    ((void (*)(char *, uint64_t, uint64_t))v463)(v438, v411, v392);
                    uint64_t v412 = v411;
                    uint64_t v381 = v452;
                    sub_1C2A62588(v412, type metadata accessor for SignificantChangeEngine.Changepoint);
                    v413 = v410;
                    v401 = v508;
                    ((void (*)(char *, uint64_t (*)(void)))v508)(v413, v370);
                    sub_1C2A62588(v394, (uint64_t (*)(void))sub_1C2A62B24);
                  }
                  else
                  {
                    sub_1C2A62588(v406, (uint64_t (*)(void))sub_1C2A79BD0);
                    v399 = v438;
                    (*(void (**)(char *, uint64_t, uint64_t))(v393 + 32))(v438, v394, v392);
                    v401 = v508;
                  }
                  uint64_t v402 = v491;
                  goto LABEL_91;
                }
                v325 = sub_1C2A6235C;
              }
              v329 = v325;
              uint64_t v330 = v321;
              goto LABEL_77;
            }
            sub_1C2A62588(v264, (uint64_t (*)(void))sub_1C2A62A2C);
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v224 + 56))(v227, 1, 1, v139);
          goto LABEL_65;
        }
LABEL_34:
        sub_1C2A62588(v190, (uint64_t (*)(void))sub_1C2A62B24);
        unint64_t v142 = 0x80000001C2ABAB10;
        v476 = (long long *)0xD000000000000019;
        goto LABEL_35;
      }
      sub_1C2A62588(v187, (uint64_t (*)(void))sub_1C2A62A2C);
    }
    uint64_t v190 = (uint64_t)v476;
    (*(void (**)(long long *, uint64_t, uint64_t, uint64_t))(v489 + 56))(v476, 1, 1, v490);
    goto LABEL_34;
  }
LABEL_24:
  v165 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v505 + 56);
  uint64_t v166 = v503;
  uint64_t v167 = v504;
  v165(v503, 1, 1, v504);
  uint64_t v168 = type metadata accessor for SignificantChangeEngine.Output(0);
  v165(v166 + *(int *)(v168 + 20), 1, 1, v167);
LABEL_25:
  sub_1C2A623B0(v506, v166 + *(int *)(v168 + 24));
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v168 - 8) + 56))(v166, 0, 1, v168);
}

uint64_t sub_1C2A4F730(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1C297A894();
    return a2;
  }
  return result;
}

unint64_t sub_1C2A4F7B8(uint64_t a1, uint64_t a2)
{
  sub_1C297A7F4();
  uint64_t v118 = v4;
  uint64_t v117 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v130 = (uint64_t)v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_1C2A9C6E8();
  double v6 = *(double *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v115 = (char *)v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C299F0F4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v114 = (uint64_t)v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C297A894();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v113 = (char *)v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v129 = (char *)v109 - v14;
  MEMORY[0x1F4188790](v15);
  MEMORY[0x1F4188790](v16);
  uint64_t v121 = (char *)v109 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v131 = (uint64_t)v109 - v19;
  MEMORY[0x1F4188790](v20);
  MEMORY[0x1F4188790](v21);
  MEMORY[0x1F4188790]((char *)v109 - v22);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)v109 - v24;
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)v109 - v27;
  MEMORY[0x1F4188790](v29);
  uint64_t v36 = (char *)v109 - v35;
  unint64_t v37 = *(void *)(a1 + 16);
  if (!v37) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v133 = v31;
  double v134 = v30;
  double v135 = v34;
  double v126 = v6;
  uint64_t v120 = v33;
  uint64_t v112 = a2;
  uint64_t v38 = a1 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
  uint64_t v39 = *(void *)(v32 + 72);
  v109[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v141 = v38;
  uint64_t v40 = v38;
  unint64_t v41 = v37;
  double v42 = 0.0;
  do
  {
    sub_1C2A623C8(v40, (uint64_t)v36, (uint64_t (*)(void))sub_1C297A894);
    if (v36[*(int *)(v11 + 48) + 8]) {
      double v43 = 0.0;
    }
    else {
      double v43 = 1.0;
    }
    double v42 = v42 + v43;
    sub_1C2A62588((uint64_t)v36, (uint64_t (*)(void))sub_1C297A894);
    v40 += v39;
    --v41;
  }
  while (v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v44 = v141;
  unint64_t v140 = v37;
  unint64_t v45 = v37;
  double v46 = 0.0;
  uint64_t v143 = v11;
  uint64_t v142 = v39;
  uint64_t v47 = (uint64_t)v28;
  do
  {
    sub_1C2A623C8(v44, v47, (uint64_t (*)(void))sub_1C297A894);
    uint64_t v48 = *(int *)(v143 + 48);
    uint64_t v49 = &v25[v48];
    uint64_t v50 = v47 + v48;
    uint64_t v51 = sub_1C2A9C398();
    double v52 = *(double *)(v51 - 8);
    uint64_t v53 = *(void (**)(void))(*(void *)&v52 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v53)(v25, v47, v51);
    double v54 = *(double *)v50;
    int v55 = *(unsigned __int8 *)(v50 + 8);
    *(void *)uint64_t v49 = *(void *)v50;
    v49[8] = v55;
    if (v55) {
      double v56 = 0.0;
    }
    else {
      double v56 = v54;
    }
    uint64_t v57 = *(void (**)(char *, uint64_t))(*(void *)&v52 + 8);
    v57(v25, v51);
    double v46 = v46 + v56;
    sub_1C2A62588(v47, (uint64_t (*)(void))sub_1C297A894);
    v44 += v142;
    --v45;
  }
  while (v45);
  double v125 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v58 = v141;
  unint64_t v59 = v140;
  double v60 = 0.0;
  uint64_t v139 = v53;
  uint64_t v138 = *(void *)&v52 + 8;
  uint64_t v137 = *(void *)&v52 + 16;
  uint64_t v61 = (uint64_t)v133;
  uint64_t v62 = v53;
  do
  {
    unint64_t v136 = v59;
    sub_1C2A623C8(v58, v61, (uint64_t (*)(void))sub_1C297A894);
    uint64_t v63 = v143;
    uint64_t v64 = *(int *)(v143 + 48);
    double v65 = v134;
    uint64_t v66 = *(void *)&v134 + v64;
    uint64_t v67 = v61 + v64;
    ((void (*)(void, uint64_t, uint64_t))v62)(*(void *)&v134, v61, v51);
    double v68 = *(double *)v67;
    int v69 = *(unsigned __int8 *)(v67 + 8);
    *(void *)uint64_t v66 = *(void *)v67;
    *(unsigned char *)(v66 + 8) = v69;
    if (v69) {
      double v70 = 0.0;
    }
    else {
      double v70 = v68;
    }
    v57(*(char **)&v65, v51);
    uint64_t v71 = *(int *)(v63 + 48);
    double v72 = v135;
    uint64_t v73 = *(void *)&v135 + v71;
    ((void (*)(void, uint64_t, uint64_t))v62)(*(void *)&v135, v61, v51);
    double v74 = *(double *)v67;
    int v75 = *(unsigned __int8 *)(v67 + 8);
    *(void *)uint64_t v73 = *(void *)v67;
    *(unsigned char *)(v73 + 8) = v75;
    if (v75) {
      double v76 = 0.0;
    }
    else {
      double v76 = v74;
    }
    v57(*(char **)&v72, v51);
    double v60 = v60 + v70 * v76;
    sub_1C2A62588(v61, (uint64_t (*)(void))sub_1C297A894);
    v58 += v142;
    unint64_t v59 = v136 - 1;
  }
  while (v136 != 1);
  uint64_t v128 = (void (*)(uint64_t, uint64_t))v57;
  swift_bridgeObjectRelease();
  double v132 = 0.00000001;
  double v77 = 0.00000001;
  uint64_t v78 = (uint64_t)v121;
  if (v42 >= 2.0)
  {
    if ((v60 - v46 * v46 / v42) / (v42 + -1.0) > 0.00000001) {
      double v77 = (v60 - v46 * v46 / v42) / (v42 + -1.0);
    }
    else {
      double v77 = 0.00000001;
    }
  }
  uint64_t v127 = v131 + *(int *)(v143 + 48);
  uint64_t v110 = (void (**)(uint64_t, uint64_t))(*(void *)&v126 + 8);
  uint64_t v79 = (void (**)(void))(*(void *)&v125 + 32);
  double v119 = v46 / v42;
  swift_bridgeObjectRetain();
  unint64_t v80 = MEMORY[0x1E4FBC860];
  double v81 = 0.0;
  double v126 = NAN;
  double v82 = 0.0;
  double v125 = v132;
  double v83 = v42;
  double v135 = 0.0;
  double v84 = v46;
  double v134 = v60;
  double v124 = v119;
  double v123 = v77;
  uint64_t v85 = v120;
  uint64_t v86 = v141;
  double v111 = v77;
  uint64_t v87 = v51;
  uint64_t v122 = v79;
  do
  {
    unint64_t v136 = v80;
    uint64_t v141 = v86;
    uint64_t v89 = v131;
    sub_1C2A623C8(v86, v131, (uint64_t (*)(void))sub_1C297A894);
    double v90 = *(double *)v127;
    char v91 = *(unsigned char *)(v127 + 8);
    uint64_t v92 = v143;
    uint64_t v93 = v78 + *(int *)(v143 + 48);
    uint64_t v133 = *v79;
    ((void (*)(uint64_t, uint64_t, uint64_t))v133)(v78, v89, v87);
    *(double *)uint64_t v93 = v90;
    *(unsigned char *)(v93 + 8) = v91;
    uint64_t v94 = v85 + *(int *)(v92 + 48);
    uint64_t v95 = v139;
    ((void (*)(uint64_t, uint64_t, uint64_t))v139)(v85, v78, v87);
    *(double *)uint64_t v94 = v90;
    *(unsigned char *)(v94 + 8) = v91;
    if (v91)
    {
      sub_1C2A62588(v78, (uint64_t (*)(void))sub_1C297A894);
      v128(v85, v87);
      uint64_t v88 = v141;
      uint64_t v79 = v122;
      unint64_t v80 = v136;
    }
    else
    {
      uint64_t v96 = (void (*)(char *, uint64_t))v128;
      v128(v85, v87);
      uint64_t v97 = &v129[*(int *)(v92 + 48)];
      v95();
      *(double *)uint64_t v97 = v90;
      v97[8] = 0;
      *(double *)uint64_t v146 = v81;
      *(double *)&v146[1] = v82;
      *(double *)&v146[2] = v135;
      *(double *)&v146[3] = v126;
      *(double *)&v146[4] = v125;
      *(double *)BOOL v145 = v83;
      *(double *)&v145[1] = v84;
      *(double *)&v145[2] = v134;
      *(double *)&v145[3] = v124;
      *(double *)&v145[4] = v123;
      v144[0] = v42;
      v144[1] = v46;
      v144[2] = v60;
      v144[3] = v119;
      uint64_t v98 = v113;
      uint64_t v99 = &v113[*(int *)(v92 + 48)];
      v144[4] = v77;
      ((void (*)(char *, uint64_t, uint64_t))v95)(v113, v78, v87);
      *(double *)uint64_t v99 = v90;
      v99[8] = 0;
      uint64_t v100 = (uint64_t)v115;
      sub_1C2A9C378();
      v96(v98, v87);
      uint64_t v101 = v114;
      sub_1C2A5DFBC((uint64_t)v146, (uint64_t)v145, v144, v100, v112, v114);
      (*v110)(v100, v116);
      uint64_t v102 = v130 + *(int *)(v118 + 48);
      uint64_t v79 = v122;
      v133();
      sub_1C2A62484(v101, v102, (uint64_t (*)(void))sub_1C299F0F4);
      unint64_t v80 = v136;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v80 = sub_1C299DDAC(0, *(void *)(v80 + 16) + 1, 1, v80);
      }
      unint64_t v104 = *(void *)(v80 + 16);
      unint64_t v103 = *(void *)(v80 + 24);
      uint64_t v85 = v120;
      uint64_t v78 = (uint64_t)v121;
      if (v104 >= v103 >> 1) {
        unint64_t v80 = sub_1C299DDAC(v103 > 1, v104 + 1, 1, v80);
      }
      *(void *)(v80 + 16) = v104 + 1;
      sub_1C2A62484(v130, v80+ ((*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80))+ *(void *)(v117 + 72) * v104, (uint64_t (*)(void))sub_1C297A7F4);
      sub_1C2A62588(v78, (uint64_t (*)(void))sub_1C297A894);
      double v81 = v81 + 1.0;
      double v82 = v82 + v90;
      double v135 = v135 + v90 * v90;
      double v105 = v132;
      if (v81 >= 2.0)
      {
        double v105 = (v135 - v82 * v82 / v81) / (v81 + -1.0);
        if (v105 <= v132) {
          double v105 = v132;
        }
      }
      double v125 = v105;
      double v126 = v82 / v81;
      double v83 = v83 + -1.0;
      double v84 = v84 - v90;
      double v106 = v134 - v90 * v90;
      double v124 = v84 / v83;
      uint64_t v88 = v141;
      double v134 = v106;
      if (v83 >= 2.0)
      {
        double v107 = (v106 - v84 * v84 / v83) / (v83 + -1.0);
        if (v107 <= v132) {
          double v107 = v132;
        }
      }
      else
      {
        double v107 = v132;
      }
      double v123 = v107;
      double v77 = v111;
    }
    uint64_t v86 = v88 + v142;
    --v140;
  }
  while (v140);
  swift_bridgeObjectRelease();
  return v80;
}

uint64_t sub_1C2A50524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v65 = a3;
  uint64_t v71 = (char *)a2;
  sub_1C2A62430(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v66 = (uint64_t)v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A62A2C(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v64 = (uint64_t)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A62B24(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v67 = (uint64_t)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C2A9C6E8();
  uint64_t v68 = *(void *)(v10 - 8);
  uint64_t v69 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v62 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v61 = (char *)v57 - v13;
  sub_1C297A7F4();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v14);
  double v60 = (char *)v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v57 - v18;
  uint64_t v20 = type metadata accessor for SignificantChangeEngine.Changepoint(0);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v70 = (uint64_t)v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)v57 - v24;
  uint64_t v59 = v15;
  uint64_t v26 = *(int *)(v15 + 48);
  uint64_t v27 = (uint64_t)&v19[v26];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = sub_1C2A9C398();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  uint64_t v32 = v30 + 16;
  uint64_t v63 = a1;
  v57[0] = v31;
  v31(v19, a1, v29);
  uint64_t v58 = v28;
  sub_1C2A62AEC(v28, v27);
  int v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v27, 1, v20);
  v57[1] = v32;
  double v34 = (void (**)(char *, uint64_t))(v32 - 8);
  if (v33 != 1)
  {
    sub_1C2A62484(v27, (uint64_t)v25, type metadata accessor for SignificantChangeEngine.Changepoint);
    uint64_t v35 = *v34;
    (*v34)(v19, v29);
    double v36 = *(double *)&v25[*(int *)(v20 + 44)];
    uint64_t v37 = v70;
    double v38 = (double)*((uint64_t *)v71 + 12);
    sub_1C2A623C8((uint64_t)v25, v70, type metadata accessor for SignificantChangeEngine.Changepoint);
    if (v36 < v38)
    {
      sub_1C2A62588(v37, type metadata accessor for SignificantChangeEngine.Changepoint);
LABEL_6:
      sub_1C2A62588((uint64_t)v25, type metadata accessor for SignificantChangeEngine.Changepoint);
      goto LABEL_7;
    }
    uint64_t v39 = v29;
    double v40 = *(double *)(v37 + *(int *)(v20 + 48));
    sub_1C2A62588(v37, type metadata accessor for SignificantChangeEngine.Changepoint);
    if (v40 < v38) {
      goto LABEL_6;
    }
    uint64_t v43 = v66;
    sub_1C2A623B0(v65, v66);
    uint64_t v44 = type metadata accessor for SignificantChangeEngine.State(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v43, 1, v44) == 1)
    {
      sub_1C2A62588(v43, (uint64_t (*)(void))sub_1C2A62430);
      uint64_t v46 = v68;
      uint64_t v45 = v69;
    }
    else
    {
      uint64_t v47 = v64;
      sub_1C2A62A14(v43 + *(int *)(v44 + 20), v64);
      sub_1C2A62588(v43, type metadata accessor for SignificantChangeEngine.State);
      uint64_t v48 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
      int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v47, 1, v48);
      uint64_t v46 = v68;
      uint64_t v45 = v69;
      if (v49 != 1)
      {
        uint64_t v51 = v47 + *(int *)(v48 + 24);
        uint64_t v50 = v67;
        sub_1C2939D90(v51, v67);
        sub_1C2A62588(v47, type metadata accessor for SignificantChangeEngine.State.MeanShift);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v50, 1, v45) != 1)
        {
          double v52 = v61;
          (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v61, v50, v45);
          uint64_t v53 = v60;
          uint64_t v71 = &v60[*(int *)(v59 + 48)];
          uint64_t v54 = (uint64_t)v71;
          ((void (*)(char *, uint64_t, uint64_t))v57[0])(v60, v63, v39);
          sub_1C2A62AEC(v58, v54);
          int v55 = v62;
          sub_1C2A9C378();
          v35(v53, v39);
          sub_1C2A62540(&qword_1EBB92488, MEMORY[0x1E4F27928]);
          char v41 = sub_1C2A9DCB8() ^ 1;
          double v56 = *(void (**)(char *, uint64_t))(v46 + 8);
          v56(v55, v45);
          v56(v52, v45);
          sub_1C2A62588((uint64_t)v25, type metadata accessor for SignificantChangeEngine.Changepoint);
          sub_1C2A62588((uint64_t)v71, (uint64_t (*)(void))sub_1C299F0F4);
          return v41 & 1;
        }
        goto LABEL_14;
      }
      sub_1C2A62588(v47, (uint64_t (*)(void))sub_1C2A62A2C);
    }
    uint64_t v50 = v67;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v67, 1, 1, v45);
LABEL_14:
    sub_1C2A62588((uint64_t)v25, type metadata accessor for SignificantChangeEngine.Changepoint);
    sub_1C2A62588(v50, (uint64_t (*)(void))sub_1C2A62B24);
    char v41 = 1;
    return v41 & 1;
  }
  sub_1C2A62588(v27, (uint64_t (*)(void))sub_1C299F0F4);
  (*v34)(v19, v29);
LABEL_7:
  char v41 = 0;
  return v41 & 1;
}

uint64_t sub_1C2A50CB8@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v150 = a3;
  uint64_t v174 = type metadata accessor for SignificantChangeEngine.Changepoint(0);
  uint64_t v5 = *(void *)(v174 - 8);
  MEMORY[0x1F4188790](v174);
  uint64_t v162 = (uint64_t)v149 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A79E18(0, &qword_1EBB8E388, (uint64_t (*)(uint64_t))sub_1C2A79BD0, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v149 - v8;
  sub_1C2A79BD0(0);
  uint64_t v177 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v156 = (uint64_t)v149 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v158 = (uint64_t)v149 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v153 = (uint64_t)v149 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v155 = (uint64_t)v149 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v152 = (uint64_t)v149 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v157 = (uint64_t)v149 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v159 = (char *)v149 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v170 = (char *)v149 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v151 = (uint64_t)v149 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v154 = (uint64_t)v149 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v171 = (uint64_t)v149 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v161 = (uint64_t)v149 - v34;
  sub_1C297A7F4();
  uint64_t v36 = v35;
  MEMORY[0x1F4188790](v35);
  long long v160 = (char *)v149 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38);
  uint64_t v163 = (char *)v149 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v43 = (char *)v149 - v42;
  uint64_t v44 = *a2;
  uint64_t v45 = *(void (**)(void))(a1 + 16);
  uint64_t v172 = v11;
  if (v45)
  {
    v149[0] = v44;
    uint64_t v46 = (uint64_t (*)(uint64_t))(a1
                                          + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80)));
    uint64_t v47 = *(void *)(v41 + 72);
    uint64_t v168 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v169 = v47;
    uint64_t v166 = (uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v167 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v149[1] = a1;
    swift_bridgeObjectRetain();
    unint64_t v48 = MEMORY[0x1E4FBC860];
    uint64_t v173 = v36;
    int v49 = v163;
    do
    {
      int v175 = v46;
      uint64_t v176 = v45;
      unint64_t v178 = v48;
      sub_1C2A623C8((uint64_t)v46, (uint64_t)v43, (uint64_t (*)(void))sub_1C297A7F4);
      uint64_t v50 = *(int *)(v36 + 48);
      uint64_t v51 = (uint64_t)&v49[v50];
      uint64_t v52 = (uint64_t)&v43[v50];
      uint64_t v53 = sub_1C2A9C398();
      uint64_t v54 = *(void *)(v53 - 8);
      int v55 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
      v55(v49, v43, v53);
      sub_1C2A62AEC(v52, v51);
      uint64_t v56 = (uint64_t)v43;
      if ((*v168)(v51, 1, v174) == 1)
      {
        sub_1C2A62588(v51, (uint64_t (*)(void))sub_1C299F0F4);
        (*(void (**)(char *, uint64_t))(v54 + 8))(v49, v53);
        uint64_t v57 = v177;
        (*v167)(v9, 1, 1, v177);
      }
      else
      {
        v165 = type metadata accessor for SignificantChangeEngine.Changepoint;
        uint64_t v58 = v51;
        uint64_t v59 = v162;
        sub_1C2A62484(v58, v162, type metadata accessor for SignificantChangeEngine.Changepoint);
        (*(void (**)(char *, uint64_t))(v54 + 8))(v49, v53);
        v164 = &v9[*(int *)(v177 + 48)];
        double v60 = v160;
        uint64_t v61 = (uint64_t)&v160[*(int *)(v173 + 48)];
        v55(v160, (char *)v56, v53);
        sub_1C2A62AEC(v52, v61);
        uint64_t v62 = v60;
        int v49 = v163;
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v9, v62, v53);
        uint64_t v57 = v177;
        sub_1C2A62484(v59, (uint64_t)v164, v165);
        (*v167)(v9, 0, 1, v57);
        sub_1C2A62588(v61, (uint64_t (*)(void))sub_1C299F0F4);
      }
      sub_1C2A62588(v56, (uint64_t (*)(void))sub_1C297A7F4);
      int v63 = (*v166)(v9, 1, v57);
      unint64_t v48 = v178;
      uint64_t v43 = (char *)v56;
      uint64_t v65 = v175;
      uint64_t v64 = v176;
      if (v63 == 1)
      {
        sub_1C2A62D30((uint64_t)v9, &qword_1EBB8E388, (uint64_t (*)(uint64_t))sub_1C2A79BD0);
        uint64_t v36 = v173;
      }
      else
      {
        uint64_t v66 = v161;
        sub_1C2A62484((uint64_t)v9, v161, (uint64_t (*)(void))sub_1C2A79BD0);
        sub_1C2A62484(v66, v171, (uint64_t (*)(void))sub_1C2A79BD0);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v36 = v173;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v48 = sub_1C299E094(0, *(void *)(v48 + 16) + 1, 1, v48);
        }
        unint64_t v69 = *(void *)(v48 + 16);
        unint64_t v68 = *(void *)(v48 + 24);
        if (v69 >= v68 >> 1) {
          unint64_t v48 = sub_1C299E094(v68 > 1, v69 + 1, 1, v48);
        }
        *(void *)(v48 + 16) = v69 + 1;
        sub_1C2A62484(v171, v48+ ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80))+ *(void *)(v172 + 72) * v69, (uint64_t (*)(void))sub_1C2A79BD0);
      }
      uint64_t v46 = (uint64_t (*)(uint64_t))((char *)v65 + v169);
      uint64_t v45 = (void (*)(void))((char *)v64 - 1);
    }
    while (v45);
    swift_bridgeObjectRelease();
    uint64_t v70 = v156;
    uint64_t v44 = v149[0];
  }
  else
  {
    unint64_t v48 = MEMORY[0x1E4FBC860];
    uint64_t v70 = v156;
  }
  uint64_t v71 = v172;
  uint64_t v72 = v155;
  uint64_t v73 = v154;
  unint64_t v178 = v48;
  switch(v44)
  {
    case 1:
      uint64_t v77 = *(void *)(v48 + 16);
      if (!v77) {
        goto LABEL_34;
      }
      uint64_t v171 = v48 + ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80));
      sub_1C2A623C8(v171, v155, (uint64_t (*)(void))sub_1C2A79BD0);
      swift_bridgeObjectRetain();
      if (v77 == 1) {
        goto LABEL_22;
      }
      unint64_t v116 = 1;
      uint64_t v117 = v153;
      uint64_t v169 = v77;
      do
      {
        if (v116 >= *(void *)(v48 + 16)) {
          goto LABEL_59;
        }
        sub_1C2A623C8(v171 + *(void *)(v71 + 72) * v116, v117, (uint64_t (*)(void))sub_1C2A79BD0);
        uint64_t v118 = v177;
        uint64_t v119 = *(int *)(v177 + 48);
        uint64_t v120 = v170;
        uint64_t v121 = (uint64_t)&v170[v119];
        uint64_t v173 = v72 + v119;
        uint64_t v122 = sub_1C2A9C398();
        uint64_t v123 = *(void *)(v122 - 8);
        uint64_t v176 = *(void (**)(void))(v123 + 16);
        ((void (*)(char *, uint64_t, uint64_t))v176)(v120, v72, v122);
        int v175 = type metadata accessor for SignificantChangeEngine.Changepoint;
        sub_1C2A623C8(v173, v121, type metadata accessor for SignificantChangeEngine.Changepoint);
        uint64_t v124 = v174;
        double v125 = *(double *)(v121 + *(int *)(v174 + 36));
        sub_1C2A62588(v121, type metadata accessor for SignificantChangeEngine.Changepoint);
        uint64_t v126 = *(int *)(v118 + 48);
        uint64_t v127 = v159;
        uint64_t v128 = (uint64_t)&v159[v126];
        uint64_t v129 = v117 + v126;
        ((void (*)(char *, uint64_t, uint64_t))v176)(v159, v117, v122);
        sub_1C2A623C8(v129, v128, v175);
        double v130 = *(double *)(v128 + *(int *)(v124 + 36));
        sub_1C2A62588(v128, type metadata accessor for SignificantChangeEngine.Changepoint);
        uint64_t v131 = *(void (**)(char *, uint64_t))(v123 + 8);
        v131(v127, v122);
        v131(v170, v122);
        if (v125 >= v130)
        {
          uint64_t v117 = v153;
          sub_1C2A62588(v153, (uint64_t (*)(void))sub_1C2A79BD0);
          uint64_t v72 = v155;
        }
        else
        {
          uint64_t v72 = v155;
          sub_1C2A62588(v155, (uint64_t (*)(void))sub_1C2A79BD0);
          uint64_t v117 = v153;
          sub_1C2A62484(v153, v72, (uint64_t (*)(void))sub_1C2A79BD0);
        }
        ++v116;
        uint64_t v71 = v172;
        unint64_t v48 = v178;
      }
      while (v169 != v116);
LABEL_22:
      uint64_t v78 = v72;
      uint64_t v75 = v177;
      goto LABEL_55;
    case 2:
      uint64_t v79 = *(void *)(v48 + 16);
      if (!v79) {
        goto LABEL_34;
      }
      int v175 = (uint64_t (*)(uint64_t))(v48
                                             + ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80)));
      uint64_t v78 = v157;
      sub_1C2A623C8((uint64_t)v175, v157, (uint64_t (*)(void))sub_1C2A79BD0);
      swift_bridgeObjectRetain();
      uint64_t v75 = v177;
      if (v79 == 1) {
        goto LABEL_55;
      }
      unint64_t v80 = 1;
      uint64_t v81 = v152;
      uint64_t v173 = v79;
      uint64_t v82 = v174;
      do
      {
        if (v80 >= *(void *)(v48 + 16))
        {
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
          JUMPOUT(0x1C2A51F84);
        }
        sub_1C2A623C8((uint64_t)v175 + *(void *)(v71 + 72) * v80, v81, (uint64_t (*)(void))sub_1C2A79BD0);
        uint64_t v83 = *(int *)(v75 + 48);
        double v84 = v170;
        uint64_t v85 = (uint64_t)&v170[v83];
        uint64_t v86 = v81 + v83;
        uint64_t v87 = sub_1C2A9C398();
        uint64_t v88 = *(void *)(v87 - 8);
        uint64_t v176 = *(void (**)(void))(v88 + 16);
        ((void (*)(char *, uint64_t, uint64_t))v176)(v84, v81, v87);
        sub_1C2A623C8(v86, v85, type metadata accessor for SignificantChangeEngine.Changepoint);
        double v89 = *(double *)(v85 + *(int *)(v82 + 40));
        sub_1C2A62588(v85, type metadata accessor for SignificantChangeEngine.Changepoint);
        uint64_t v90 = *(int *)(v75 + 48);
        char v91 = v159;
        uint64_t v92 = (uint64_t)&v159[v90];
        uint64_t v93 = v157 + v90;
        v176(v159);
        sub_1C2A623C8(v93, v92, type metadata accessor for SignificantChangeEngine.Changepoint);
        double v94 = *(double *)(v92 + *(int *)(v82 + 40));
        sub_1C2A62588(v92, type metadata accessor for SignificantChangeEngine.Changepoint);
        uint64_t v95 = *(void (**)(char *, uint64_t))(v88 + 8);
        v95(v91, v87);
        v95(v170, v87);
        if (v89 >= v94)
        {
          uint64_t v81 = v152;
          sub_1C2A62588(v152, (uint64_t (*)(void))sub_1C2A79BD0);
        }
        else
        {
          uint64_t v96 = v157;
          sub_1C2A62588(v157, (uint64_t (*)(void))sub_1C2A79BD0);
          uint64_t v81 = v152;
          sub_1C2A62484(v152, v96, (uint64_t (*)(void))sub_1C2A79BD0);
        }
        uint64_t v71 = v172;
        ++v80;
        uint64_t v75 = v177;
        unint64_t v48 = v178;
      }
      while (v173 != v80);
      double v76 = &v179;
LABEL_54:
      uint64_t v78 = *(v76 - 32);
LABEL_55:
      swift_bridgeObjectRelease();
      uint64_t v147 = v78;
      uint64_t v99 = v150;
      sub_1C2A62484(v147, v150, (uint64_t (*)(void))sub_1C2A79BD0);
      uint64_t v98 = 0;
LABEL_56:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56))(v99, v98, 1, v75);
      return swift_bridgeObjectRelease();
    case 3:
      uint64_t v97 = *(void *)(v48 + 16);
      if (!v97) {
        goto LABEL_34;
      }
      uint64_t v171 = v48 + ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80));
      sub_1C2A623C8(v171, v154, (uint64_t (*)(void))sub_1C2A79BD0);
      swift_bridgeObjectRetain();
      uint64_t v75 = v177;
      if (v97 == 1) {
        goto LABEL_33;
      }
      unint64_t v132 = 1;
      uint64_t v133 = v151;
      uint64_t v169 = v97;
      while (v132 < *(void *)(v48 + 16))
      {
        sub_1C2A623C8(v171 + *(void *)(v71 + 72) * v132, v133, (uint64_t (*)(void))sub_1C2A79BD0);
        uint64_t v134 = *(int *)(v75 + 48);
        double v135 = v170;
        uint64_t v136 = (uint64_t)&v170[v134];
        uint64_t v173 = v73 + v134;
        uint64_t v137 = sub_1C2A9C398();
        uint64_t v138 = *(void *)(v137 - 8);
        uint64_t v176 = *(void (**)(void))(v138 + 16);
        ((void (*)(char *, uint64_t, uint64_t))v176)(v135, v73, v137);
        int v175 = type metadata accessor for SignificantChangeEngine.Changepoint;
        sub_1C2A623C8(v173, v136, type metadata accessor for SignificantChangeEngine.Changepoint);
        uint64_t v139 = v174;
        double v140 = *(double *)(v136 + *(int *)(v174 + 24));
        sub_1C2A62588(v136, type metadata accessor for SignificantChangeEngine.Changepoint);
        uint64_t v141 = *(int *)(v75 + 48);
        uint64_t v142 = v159;
        uint64_t v143 = (uint64_t)&v159[v141];
        uint64_t v144 = v133 + v141;
        ((void (*)(char *, uint64_t, uint64_t))v176)(v159, v133, v137);
        sub_1C2A623C8(v144, v143, v175);
        double v145 = *(double *)(v143 + *(int *)(v139 + 24));
        sub_1C2A62588(v143, type metadata accessor for SignificantChangeEngine.Changepoint);
        uint64_t v146 = *(void (**)(char *, uint64_t))(v138 + 8);
        v146(v142, v137);
        v146(v170, v137);
        if (v140 >= v145)
        {
          uint64_t v133 = v151;
          sub_1C2A62588(v151, (uint64_t (*)(void))sub_1C2A79BD0);
          uint64_t v73 = v154;
        }
        else
        {
          uint64_t v73 = v154;
          sub_1C2A62588(v154, (uint64_t (*)(void))sub_1C2A79BD0);
          uint64_t v133 = v151;
          sub_1C2A62484(v151, v73, (uint64_t (*)(void))sub_1C2A79BD0);
        }
        ++v132;
        uint64_t v75 = v177;
        unint64_t v48 = v178;
        uint64_t v71 = v172;
        if (v169 == v132)
        {
LABEL_33:
          uint64_t v78 = v73;
          goto LABEL_55;
        }
      }
      goto LABEL_60;
    default:
      uint64_t v74 = *(void *)(v48 + 16);
      if (!v74)
      {
LABEL_34:
        uint64_t v98 = 1;
        uint64_t v99 = v150;
        uint64_t v75 = v177;
        goto LABEL_56;
      }
      int v175 = (uint64_t (*)(uint64_t))(v48
                                             + ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80)));
      sub_1C2A623C8((uint64_t)v175, v158, (uint64_t (*)(void))sub_1C2A79BD0);
      swift_bridgeObjectRetain();
      uint64_t v75 = v177;
      if (v74 == 1) {
        goto LABEL_19;
      }
      unint64_t v100 = 1;
      uint64_t v173 = v74;
      uint64_t v101 = v174;
      while (v100 < *(void *)(v48 + 16))
      {
        sub_1C2A623C8((uint64_t)v175 + *(void *)(v71 + 72) * v100, v70, (uint64_t (*)(void))sub_1C2A79BD0);
        uint64_t v102 = *(int *)(v75 + 48);
        unint64_t v103 = v170;
        uint64_t v104 = (uint64_t)&v170[v102];
        uint64_t v105 = v70 + v102;
        uint64_t v106 = sub_1C2A9C398();
        uint64_t v107 = *(void *)(v106 - 8);
        uint64_t v176 = *(void (**)(void))(v107 + 16);
        ((void (*)(char *, uint64_t, uint64_t))v176)(v103, v70, v106);
        sub_1C2A623C8(v105, v104, type metadata accessor for SignificantChangeEngine.Changepoint);
        double v108 = *(double *)(v104 + *(int *)(v101 + 20));
        sub_1C2A62588(v104, type metadata accessor for SignificantChangeEngine.Changepoint);
        uint64_t v109 = *(int *)(v75 + 48);
        uint64_t v110 = v159;
        uint64_t v111 = (uint64_t)&v159[v109];
        uint64_t v112 = v158 + v109;
        v176(v159);
        sub_1C2A623C8(v112, v111, type metadata accessor for SignificantChangeEngine.Changepoint);
        double v113 = *(double *)(v111 + *(int *)(v101 + 20));
        sub_1C2A62588(v111, type metadata accessor for SignificantChangeEngine.Changepoint);
        uint64_t v114 = *(void (**)(char *, uint64_t))(v107 + 8);
        v114(v110, v106);
        v114(v170, v106);
        if (v108 >= v113)
        {
          uint64_t v70 = v156;
          sub_1C2A62588(v156, (uint64_t (*)(void))sub_1C2A79BD0);
        }
        else
        {
          uint64_t v115 = v158;
          sub_1C2A62588(v158, (uint64_t (*)(void))sub_1C2A79BD0);
          uint64_t v70 = v156;
          sub_1C2A62484(v156, v115, (uint64_t (*)(void))sub_1C2A79BD0);
        }
        uint64_t v71 = v172;
        ++v100;
        uint64_t v75 = v177;
        unint64_t v48 = v178;
        if (v173 == v100)
        {
LABEL_19:
          double v76 = &v180;
          goto LABEL_54;
        }
      }
      goto LABEL_58;
  }
}

void sub_1C2A51F94(uint64_t a1, uint64_t a2)
{
  uint64_t v80 = a2;
  uint64_t v81 = sub_1C2A9C398();
  uint64_t v3 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v72 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C2A9C6E8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v56 - v10;
  sub_1C297A894();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v56 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v56 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)v56 - v24;
  if (*(void *)(a1 + 16))
  {
    uint64_t v78 = *(void *)(a1 + 16);
    uint64_t v70 = v22;
    uint64_t v71 = v11;
    uint64_t v65 = v8;
    uint64_t v66 = v5;
    uint64_t v64 = &v25[*(int *)(v22 + 48)];
    uint64_t v26 = a1 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    uint64_t v63 = *(void *)(v23 + 72);
    uint64_t v62 = (void (**)(char *, char *, uint64_t))(v3 + 32);
    uint64_t v61 = (void (**)(void))(v3 + 16);
    uint64_t v79 = (void (**)(char *, uint64_t))(v3 + 8);
    double v60 = (void (**)(char *, uint64_t))(v6 + 8);
    v56[1] = a1;
    swift_bridgeObjectRetain();
    double v27 = 0.0;
    double v28 = 0.0;
    uint64_t v59 = v14;
    uint64_t v57 = v25;
    uint64_t v58 = v20;
    unint64_t v69 = v17;
    do
    {
      uint64_t v29 = v81;
      uint64_t v74 = v26;
      sub_1C2A623C8(v26, (uint64_t)v25, (uint64_t (*)(void))sub_1C297A894);
      uint64_t v77 = *(void *)v64;
      uint64_t v30 = v77;
      int v31 = v64[8];
      uint64_t v32 = v70;
      uint64_t v33 = &v20[*(int *)(v70 + 48)];
      (*v62)(v20, v25, v29);
      *(void *)uint64_t v33 = v30;
      v33[8] = v31;
      uint64_t v34 = &v17[*(int *)(v32 + 48)];
      uint64_t v35 = *v61;
      ((void (*)(char *, char *, uint64_t))*v61)(v17, v20, v29);
      *(void *)uint64_t v34 = v30;
      v34[8] = v31;
      uint64_t v36 = v71;
      sub_1C2A9C378();
      uint64_t v75 = *v79;
      v75(v17, v29);
      uint64_t v37 = v65;
      sub_1C2A9C378();
      uint64_t v38 = sub_1C2A62540(&qword_1EBB92488, MEMORY[0x1E4F27928]);
      uint64_t v39 = v66;
      uint64_t v67 = v38;
      int v76 = sub_1C2A9DCB8();
      uint64_t v40 = *v60;
      (*v60)(v37, v39);
      unint64_t v68 = v40;
      v40(v36, v39);
      uint64_t v41 = *(int *)(v32 + 48);
      uint64_t v42 = (uint64_t)v59;
      uint64_t v43 = &v59[v41];
      uint64_t v44 = v20;
      uint64_t v45 = v77;
      ((void (*)(char *, char *, uint64_t))v35)(v59, v44, v81);
      *(void *)uint64_t v43 = v45;
      int v73 = v31;
      v43[8] = v31;
      uint64_t v46 = v72;
      uint64_t v47 = v35;
      ((void (*)(char *, uint64_t, uint64_t))v35)(v72, v80, v81);
      if (v76)
      {
        v75(v46, v81);
        sub_1C2A62588(v42, (uint64_t (*)(void))sub_1C297A894);
        uint64_t v20 = v58;
        sub_1C2A62588((uint64_t)v58, (uint64_t (*)(void))sub_1C297A894);
        uint64_t v17 = v69;
      }
      else
      {
        unint64_t v48 = &v69[*(int *)(v70 + 48)];
        int v49 = v69;
        uint64_t v50 = v81;
        v47();
        *(void *)unint64_t v48 = v45;
        v48[8] = v73;
        uint64_t v51 = v71;
        uint64_t v52 = v72;
        sub_1C2A9C348();
        uint64_t v53 = v75;
        v75(v49, v50);
        uint64_t v54 = v52;
        sub_1C2A9C348();
        LOBYTE(v49) = sub_1C2A9DCB8();
        int v55 = v68;
        v68(v37, v39);
        v55(v51, v39);
        v53(v54, v81);
        sub_1C2A62588(v42, (uint64_t (*)(void))sub_1C297A894);
        uint64_t v20 = v58;
        sub_1C2A62588((uint64_t)v58, (uint64_t (*)(void))sub_1C297A894);
        uint64_t v17 = v69;
        if ((v49 & 1) == 0)
        {
          double v28 = v28 + 1.0;
          if (!v73) {
            double v27 = v27 + 1.0;
          }
        }
      }
      uint64_t v25 = v57;
      uint64_t v26 = v74 + v63;
      --v78;
    }
    while (v78);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C2A52618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v79 = a4;
  uint64_t v84 = sub_1C2A9C6E8();
  uint64_t v81 = *(void (***)(unsigned char *, uint64_t))(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v83 = &v62[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C297A7F4();
  uint64_t v85 = v7;
  uint64_t v80 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v62[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  int v76 = &v62[-v11];
  MEMORY[0x1F4188790](v12);
  uint64_t v75 = &v62[-v13];
  sub_1C299F0F4(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v77 = &v62[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = &v62[-v17];
  uint64_t v19 = (int *)type metadata accessor for SignificantChangeEngine.Changepoint(0);
  uint64_t v20 = *((void *)v19 - 1);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = &v62[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = &v62[-v24];
  MEMORY[0x1F4188790](v26);
  double v28 = &v62[-v27];
  double v29 = *(double *)a3;
  int v30 = *(unsigned __int8 *)(a3 + 8);
  double v31 = *(double *)(a3 + 16);
  int v73 = *(unsigned __int8 *)(a3 + 24);
  int v74 = v30;
  double v32 = *(double *)(a3 + 32);
  double v33 = *(double *)(a3 + 48);
  int v34 = *(unsigned __int8 *)(a3 + 56);
  int v71 = *(unsigned __int8 *)(a3 + 40);
  int v72 = v34;
  double v35 = *(double *)(a3 + 64);
  int v70 = *(unsigned __int8 *)(a3 + 72);
  double v36 = *(double *)(a3 + 80);
  int v37 = *(unsigned __int8 *)(a3 + 88);
  sub_1C2A62AEC(a1, (uint64_t)v18);
  uint64_t v38 = *(unsigned int (**)(unsigned char *, uint64_t, int *))(v20 + 48);
  if (v38(v18, 1, v19) == 1)
  {
    sub_1C2A62588((uint64_t)v18, (uint64_t (*)(void))sub_1C299F0F4);
    uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v20 + 56);
    uint64_t v40 = v79;
    return v39(v40, 1, 1, v19);
  }
  unint64_t v68 = (uint64_t (*)(unsigned char *, uint64_t, int *))v38;
  uint64_t v69 = v20 + 48;
  uint64_t v64 = v22;
  uint64_t v65 = v25;
  sub_1C2A62484((uint64_t)v18, (uint64_t)v28, type metadata accessor for SignificantChangeEngine.Changepoint);
  uint64_t v41 = v79;
  uint64_t v42 = *(void *)(v78 + 16);
  if (!v42)
  {
LABEL_8:
    uint64_t v53 = v77;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, int *))(v20 + 56))(v77, 1, 1, v19);
LABEL_9:
    sub_1C2A62588((uint64_t)v28, type metadata accessor for SignificantChangeEngine.Changepoint);
    uint64_t v54 = (uint64_t (*)(void))sub_1C299F0F4;
    uint64_t v55 = (uint64_t)v53;
LABEL_10:
    sub_1C2A62588(v55, v54);
    uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v20 + 56);
    uint64_t v40 = v41;
    return v39(v40, 1, 1, v19);
  }
  int v63 = v37;
  uint64_t v82 = v28;
  uint64_t v66 = v20;
  uint64_t v67 = v19;
  uint64_t v43 = v78 + ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80));
  uint64_t v80 = *(void *)(v80 + 72);
  ++v81;
  swift_bridgeObjectRetain();
  uint64_t v44 = v85;
  uint64_t v45 = (uint64_t)v76;
  uint64_t v46 = v83;
  while (1)
  {
    sub_1C2A623C8(v43, v45, (uint64_t (*)(void))sub_1C297A7F4);
    uint64_t v47 = *(int *)(v44 + 48);
    uint64_t v48 = (uint64_t)&v9[v47];
    uint64_t v49 = v45 + v47;
    uint64_t v50 = sub_1C2A9C398();
    uint64_t v51 = *(void *)(v50 - 8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v51 + 16))(v9, v45, v50);
    sub_1C2A62AEC(v49, v48);
    sub_1C2A9C378();
    uint64_t v52 = *(void (**)(unsigned char *, uint64_t))(v51 + 8);
    v52(v9, v50);
    LOBYTE(v49) = sub_1C2A9C698();
    (*v81)(v46, v84);
    sub_1C2A62588(v48, (uint64_t (*)(void))sub_1C299F0F4);
    if (v49) {
      break;
    }
    sub_1C2A62588(v45, (uint64_t (*)(void))sub_1C297A7F4);
    v43 += v80;
    --v42;
    uint64_t v44 = v85;
    if (!v42)
    {
      swift_bridgeObjectRelease();
      uint64_t v41 = v79;
      uint64_t v19 = v67;
      uint64_t v20 = v66;
      double v28 = v82;
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v57 = v75;
  sub_1C2A62484(v45, (uint64_t)v75, (uint64_t (*)(void))sub_1C297A7F4);
  uint64_t v53 = v77;
  sub_1C2A62484((uint64_t)&v57[*(int *)(v85 + 48)], (uint64_t)v77, (uint64_t (*)(void))sub_1C299F0F4);
  v52(v57, v50);
  uint64_t v19 = v67;
  int v58 = v68(v53, 1, v67);
  uint64_t v41 = v79;
  uint64_t v20 = v66;
  double v28 = v82;
  if (v58 == 1) {
    goto LABEL_9;
  }
  uint64_t v59 = (uint64_t)v53;
  uint64_t v60 = (uint64_t)v65;
  sub_1C2A62484(v59, (uint64_t)v65, type metadata accessor for SignificantChangeEngine.Changepoint);
  if (((v74 & 1) != 0 || v29 >= *(double *)(v60 + v19[5]))
    && ((v73 & 1) != 0 || *(double *)(v60 + v19[9]) >= v31)
    && ((v71 & 1) != 0 || fabs(*(double *)(v60 + v19[7])) >= v32))
  {
    uint64_t v61 = (uint64_t)v64;
    sub_1C2A623C8(v60, (uint64_t)v64, type metadata accessor for SignificantChangeEngine.Changepoint);
  }
  else
  {
    uint64_t v61 = (uint64_t)v64;
    sub_1C2A623C8(v60, (uint64_t)v64, type metadata accessor for SignificantChangeEngine.Changepoint);
    if ((v72 & 1) == 0 && v33 < *(double *)(v61 + v19[5])
      || (v70 & 1) == 0 && *(double *)(v61 + v19[9]) < v35
      || (v63 & 1) == 0 && fabs(*(double *)(v61 + v19[7])) < v36)
    {
      sub_1C2A62588(v61, type metadata accessor for SignificantChangeEngine.Changepoint);
      sub_1C2A62588((uint64_t)v82, type metadata accessor for SignificantChangeEngine.Changepoint);
      uint64_t v55 = v60;
      uint64_t v54 = type metadata accessor for SignificantChangeEngine.Changepoint;
      goto LABEL_10;
    }
  }
  sub_1C2A62588(v61, type metadata accessor for SignificantChangeEngine.Changepoint);
  sub_1C2A62588((uint64_t)v82, type metadata accessor for SignificantChangeEngine.Changepoint);
  sub_1C2A62484(v60, v41, type metadata accessor for SignificantChangeEngine.Changepoint);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v20 + 56))(v41, 0, 1, v19);
}

BOOL sub_1C2A52E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C299F0F4(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = type metadata accessor for SignificantChangeEngine.Changepoint(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v28 - v17;
  double v19 = *(double *)(a3 + 128);
  sub_1C2A62AEC(a1, (uint64_t)v11);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v20(v11, 1, v12) != 1)
  {
    sub_1C2A62484((uint64_t)v11, (uint64_t)v18, type metadata accessor for SignificantChangeEngine.Changepoint);
    sub_1C2A62AEC(a2, (uint64_t)v8);
    if (v20(v8, 1, v12) == 1)
    {
      sub_1C2A62588((uint64_t)v18, type metadata accessor for SignificantChangeEngine.Changepoint);
      uint64_t v21 = (uint64_t (*)(void))sub_1C299F0F4;
      uint64_t v22 = (uint64_t)v8;
      goto LABEL_10;
    }
    sub_1C2A62484((uint64_t)v8, (uint64_t)v15, type metadata accessor for SignificantChangeEngine.Changepoint);
    uint64_t v23 = *(int *)(v12 + 28);
    uint64_t v24 = *(void *)&v18[v23];
    if ((*(void *)&v15[v23] & 0x8000000000000000) != 0)
    {
      if (v24 < 0) {
        goto LABEL_7;
      }
    }
    else if ((v24 & 0x8000000000000000) == 0)
    {
LABEL_7:
      sub_1C2A9C628();
      double v26 = fabs(v25);
      sub_1C2A62588((uint64_t)v15, type metadata accessor for SignificantChangeEngine.Changepoint);
      sub_1C2A62588((uint64_t)v18, type metadata accessor for SignificantChangeEngine.Changepoint);
      return v19 >= v26;
    }
    sub_1C2A62588((uint64_t)v15, type metadata accessor for SignificantChangeEngine.Changepoint);
    uint64_t v22 = (uint64_t)v18;
    uint64_t v21 = type metadata accessor for SignificantChangeEngine.Changepoint;
    goto LABEL_10;
  }
  uint64_t v21 = (uint64_t (*)(void))sub_1C299F0F4;
  uint64_t v22 = (uint64_t)v11;
LABEL_10:
  sub_1C2A62588(v22, v21);
  return 0;
}

uint64_t sub_1C2A53100@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  LODWORD(v37) = a4;
  uint64_t v36 = a3;
  int v35 = a2;
  uint64_t v7 = sub_1C2A9C638();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v34[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C2A64008(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = &v34[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for SignificantChange.Notification(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = &v34[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C2A623C8(a1, (uint64_t)v13, (uint64_t (*)(void))sub_1C2A64008);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    uint64_t v18 = (uint64_t (*)(void))sub_1C2A64008;
    uint64_t v19 = (uint64_t)v13;
LABEL_7:
    sub_1C2A62588(v19, v18);
    char v27 = v37;
    uint64_t v28 = v36;
    sub_1C2A9C288();
    sub_1C2A62540(&qword_1EA31E6A0, MEMORY[0x1E4F278A8]);
    sub_1C2A9C6C8();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_1C2A9DDB8();
    sub_1C2A9DDB8();
    swift_bridgeObjectRelease();
    uint64_t v29 = v38;
    uint64_t v30 = v39;
    _s19HealthVisualization25PresentationDateProvidingPAAE012presentationD010Foundation0D0VvgZ_0();
    uint64_t v31 = a5 + *(int *)(v14 + 28);
    uint64_t v32 = sub_1C2A9C6E8();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v31, v28, v32);
    *(void *)a5 = v29;
    *(void *)(a5 + 8) = v30;
    *(unsigned char *)(a5 + 16) = v27 & 1;
    return result;
  }
  sub_1C2A62484((uint64_t)v13, (uint64_t)v17, type metadata accessor for SignificantChange.Notification);
  if ((v35 & 1) == 0)
  {
    uint64_t v18 = type metadata accessor for SignificantChange.Notification;
    uint64_t v19 = (uint64_t)v17;
    goto LABEL_7;
  }
  char v20 = v37 & 1;
  if (v17[16] == (v37 & 1))
  {
    sub_1C2A623C8((uint64_t)v17, a5, type metadata accessor for SignificantChange.Notification);
  }
  else
  {
    uint64_t v21 = *((void *)v17 + 1);
    uint64_t v37 = *(void *)v17;
    uint64_t v22 = *(int *)(v14 + 24);
    uint64_t v23 = &v17[v22];
    uint64_t v24 = a5 + v22;
    uint64_t v25 = sub_1C2A9C6E8();
    double v26 = *(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 16);
    v26(v24, v23, v25);
    v26(a5 + *(int *)(v14 + 28), &v17[*(int *)(v14 + 28)], v25);
    *(void *)a5 = v37;
    *(void *)(a5 + 8) = v21;
    *(unsigned char *)(a5 + 16) = v20;
    swift_bridgeObjectRetain();
  }
  return sub_1C2A62588((uint64_t)v17, type metadata accessor for SignificantChange.Notification);
}

uint64_t sub_1C2A53538(uint64_t a1)
{
  sub_1C2A79E18(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v21[-v3];
  uint64_t v5 = sub_1C2A9C398();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C29F612C(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1C2A62D30((uint64_t)v4, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
    return 0;
  }
  else
  {
    uint64_t v10 = (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v4, v5);
    MEMORY[0x1F4188790](v10);
    *(void *)&v21[-16] = v8;
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C2A783E0(v11, (uint64_t (*)(void))sub_1C2A79E7C, (uint64_t)&v21[-32]);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v12 + 16);
    if (v13)
    {
      uint64_t v9 = *(void *)(v12 + 32);
      uint64_t v14 = v13 - 1;
      if (v14)
      {
        double v15 = *(double *)(v12 + 40);
        uint64_t v16 = (double *)(v12 + 56);
        do
        {
          uint64_t v17 = *((void *)v16 - 1);
          double v18 = *v16;
          v16 += 2;
          double v19 = v18;
          if (v18 <= v15)
          {
            uint64_t v9 = v17;
            double v15 = v19;
          }
          --v14;
        }
        while (v14);
      }
    }
    else
    {
      uint64_t v9 = 0;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

unint64_t sub_1C2A537BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v743 = a3;
  uint64_t v744 = a4;
  v747 = (void *)a1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2A79E18(0, &qword_1EBB8E368, type metadata accessor for SignificantChange.Period, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v655 = (uint64_t)&v611 - v7;
  uint64_t v700 = sub_1C2A9C718();
  uint64_t v699 = *(void *)(v700 - 8);
  MEMORY[0x1F4188790](v700);
  v698 = (char *)&v611 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v710 = type metadata accessor for SignificantChange.Notification(0);
  uint64_t v701 = *(void *)(v710 - 8);
  MEMORY[0x1F4188790](v710);
  v679 = (char *)&v611 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v705 = (uint64_t)&v611 - v11;
  MEMORY[0x1F4188790](v12);
  v647 = (char *)&v611 - v13;
  sub_1C2A64008(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v639 = (uint64_t)&v611 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  v648 = (char *)&v611 - v17;
  uint64_t v703 = type metadata accessor for SignificantChange.Period(0);
  uint64_t v711 = *(void *)(v703 - 8);
  MEMORY[0x1F4188790](v703);
  uint64_t v638 = (uint64_t)&v611 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v722 = (uint64_t)&v611 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v716 = (uint64_t)&v611 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v671 = (uint64_t)&v611 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v675 = (uint64_t)&v611 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v674 = (uint64_t)&v611 - v28;
  sub_1C2A79E18(0, &qword_1EBB8E870, (uint64_t (*)(uint64_t))sub_1C297A894, v5);
  MEMORY[0x1F4188790](v29 - 8);
  v707 = (char *)&v611 - v30;
  sub_1C2A62A2C(0);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v664 = (uint64_t)&v611 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v656 = (uint64_t)&v611 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v657 = (uint64_t)&v611 - v36;
  MEMORY[0x1F4188790](v37);
  uint64_t v649 = (uint64_t)&v611 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v641 = (uint64_t)&v611 - v40;
  sub_1C2A6235C(0);
  MEMORY[0x1F4188790](v41 - 8);
  uint64_t v697 = (uint64_t)&v611 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v43);
  uint64_t v696 = (uint64_t)&v611 - v44;
  MEMORY[0x1F4188790](v45);
  uint64_t v709 = (uint64_t)&v611 - v46;
  MEMORY[0x1F4188790](v47);
  uint64_t v689 = (uint64_t)&v611 - v48;
  MEMORY[0x1F4188790](v49);
  uint64_t v687 = (uint64_t)&v611 - v50;
  MEMORY[0x1F4188790](v51);
  uint64_t v690 = (uint64_t)&v611 - v52;
  MEMORY[0x1F4188790](v53);
  uint64_t v688 = (uint64_t)&v611 - v54;
  MEMORY[0x1F4188790](v55);
  uint64_t v637 = (uint64_t)&v611 - v56;
  MEMORY[0x1F4188790](v57);
  uint64_t v681 = (uint64_t)&v611 - v58;
  MEMORY[0x1F4188790](v59);
  uint64_t v668 = (uint64_t)&v611 - v60;
  MEMORY[0x1F4188790](v61);
  uint64_t v667 = (uint64_t)&v611 - v62;
  MEMORY[0x1F4188790](v63);
  uint64_t v673 = (uint64_t)&v611 - v64;
  MEMORY[0x1F4188790](v65);
  uint64_t v672 = (uint64_t)&v611 - v66;
  MEMORY[0x1F4188790](v67);
  uint64_t v654 = (uint64_t)&v611 - v68;
  MEMORY[0x1F4188790](v69);
  uint64_t v653 = (uint64_t)&v611 - v70;
  MEMORY[0x1F4188790](v71);
  uint64_t v676 = (uint64_t)&v611 - v72;
  uint64_t v73 = type metadata accessor for SignificantChange(0);
  int v74 = *(void **)(v73 - 8);
  uint64_t v745 = v73;
  v746 = v74;
  MEMORY[0x1F4188790](v73);
  uint64_t v695 = (uint64_t)&v611 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v76);
  uint64_t v694 = (uint64_t)&v611 - v77;
  MEMORY[0x1F4188790](v78);
  uint64_t v706 = (uint64_t)&v611 - v79;
  MEMORY[0x1F4188790](v80);
  uint64_t v670 = (uint64_t)&v611 - v81;
  MEMORY[0x1F4188790](v82);
  uint64_t v652 = (uint64_t)&v611 - v83;
  MEMORY[0x1F4188790](v84);
  uint64_t v666 = (uint64_t)&v611 - v85;
  sub_1C2A62B24(0);
  MEMORY[0x1F4188790](v86 - 8);
  uint64_t v719 = (uint64_t)&v611 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v88);
  v678 = (char *)&v611 - v89;
  MEMORY[0x1F4188790](v90);
  uint64_t v718 = (uint64_t)&v611 - v91;
  uint64_t v92 = sub_1C2A9C6E8();
  uint64_t v93 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  uint64_t v95 = (char *)&v611 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v96);
  v702 = (char *)&v611 - v97;
  MEMORY[0x1F4188790](v98);
  v713 = (char *)&v611 - v99;
  MEMORY[0x1F4188790](v100);
  v724 = (char *)&v611 - v101;
  sub_1C2A62A98(0);
  MEMORY[0x1F4188790](v102 - 8);
  uint64_t v693 = (uint64_t)&v611 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v104);
  uint64_t v708 = (uint64_t)&v611 - v105;
  MEMORY[0x1F4188790](v106);
  uint64_t v662 = (uint64_t)&v611 - v107;
  MEMORY[0x1F4188790](v108);
  uint64_t v686 = (uint64_t)&v611 - v109;
  MEMORY[0x1F4188790](v110);
  uint64_t v646 = (uint64_t)&v611 - v111;
  MEMORY[0x1F4188790](v112);
  uint64_t v651 = (uint64_t)&v611 - v113;
  MEMORY[0x1F4188790](v114);
  uint64_t v677 = (uint64_t)&v611 - v115;
  MEMORY[0x1F4188790](v116);
  v725 = (char **)((char *)&v611 - v117);
  uint64_t v730 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
  uint64_t v726 = *(void *)(v730 - 8);
  MEMORY[0x1F4188790](v730);
  uint64_t v684 = (uint64_t)&v611 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v119);
  uint64_t v685 = (uint64_t)&v611 - v120;
  MEMORY[0x1F4188790](v121);
  uint64_t v669 = (uint64_t)&v611 - v122;
  MEMORY[0x1F4188790](v123);
  double v125 = (char *)&v611 - v124;
  sub_1C2A62430(0);
  MEMORY[0x1F4188790](v126 - 8);
  uint64_t v665 = (uint64_t)&v611 - ((v127 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v128);
  uint64_t v692 = (uint64_t)&v611 - v129;
  MEMORY[0x1F4188790](v130);
  v663 = (char *)&v611 - v131;
  MEMORY[0x1F4188790](v132);
  uint64_t v658 = (uint64_t)&v611 - v133;
  MEMORY[0x1F4188790](v134);
  uint64_t v682 = (uint64_t)&v611 - v135;
  MEMORY[0x1F4188790](v136);
  v660 = (char *)&v611 - v137;
  MEMORY[0x1F4188790](v138);
  uint64_t v659 = (uint64_t)&v611 - v139;
  MEMORY[0x1F4188790](v140);
  uint64_t v683 = (uint64_t)&v611 - v141;
  MEMORY[0x1F4188790](v142);
  v661 = (char *)&v611 - v143;
  MEMORY[0x1F4188790](v144);
  uint64_t v643 = (uint64_t)&v611 - v145;
  MEMORY[0x1F4188790](v146);
  uint64_t v644 = (uint64_t)&v611 - v147;
  MEMORY[0x1F4188790](v148);
  v645 = (char *)&v611 - v149;
  MEMORY[0x1F4188790](v150);
  uint64_t v714 = (uint64_t)&v611 - v151;
  MEMORY[0x1F4188790](v152);
  uint64_t v735 = (uint64_t)&v611 - v153;
  MEMORY[0x1F4188790](v154);
  uint64_t v642 = (uint64_t)&v611 - v155;
  MEMORY[0x1F4188790](v156);
  uint64_t v650 = (uint64_t)&v611 - v157;
  MEMORY[0x1F4188790](v158);
  v640 = (char *)&v611 - v159;
  MEMORY[0x1F4188790](v160);
  v737 = (uint64_t *)((char *)&v611 - v161);
  uint64_t v162 = type metadata accessor for SignificantChangeEngine.State(0);
  uint64_t v163 = *(void *)(v162 - 8);
  uint64_t v738 = v162;
  uint64_t v739 = v163;
  MEMORY[0x1F4188790](v162);
  uint64_t v733 = (uint64_t)&v611 - ((v164 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v165);
  uint64_t v729 = (uint64_t)&v611 - v166;
  sub_1C297A894();
  uint64_t v736 = v167;
  v742 = *(unsigned __int8 **)(v167 - 8);
  MEMORY[0x1F4188790](v167);
  v731 = (char *)&v611 - ((v168 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v169);
  v680 = (char *)&v611 - v170;
  MEMORY[0x1F4188790](v171);
  v732 = (char *)&v611 - v172;
  MEMORY[0x1F4188790](v173);
  v717 = (char *)&v611 - v174;
  MEMORY[0x1F4188790](v175);
  uint64_t v691 = (uint64_t)&v611 - v176;
  MEMORY[0x1F4188790](v177);
  uint64_t v723 = (uint64_t)&v611 - v178;
  MEMORY[0x1F4188790](v179);
  v727 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v611 - v180);
  MEMORY[0x1F4188790](v181);
  v728 = (char *)&v611 - v182;
  MEMORY[0x1F4188790](v183);
  uint64_t v185 = (char *)&v611 - v184;
  MEMORY[0x1F4188790](v186);
  uint64_t v715 = (uint64_t)&v611 - v187;
  MEMORY[0x1F4188790](v188);
  uint64_t v721 = (uint64_t)&v611 - v189;
  MEMORY[0x1F4188790](v190);
  uint64_t v704 = (uint64_t)&v611 - v191;
  MEMORY[0x1F4188790](v192);
  v720 = (char *)&v611 - v193;
  MEMORY[0x1F4188790](v194);
  uint64_t v741 = (uint64_t)&v611 - v195;
  MEMORY[0x1F4188790](v196);
  uint64_t v198 = (char *)&v611 - v197;
  sub_1C2A79E18(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], v5);
  MEMORY[0x1F4188790](v199 - 8);
  v740 = (char *)&v611 - ((v200 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v201);
  unint64_t v203 = (char *)&v611 - v202;
  uint64_t v204 = sub_1C2A9C398();
  uint64_t v205 = *(void *)(v204 - 8);
  MEMORY[0x1F4188790](v204);
  MEMORY[0x1F4188790](v206);
  MEMORY[0x1F4188790](v207);
  MEMORY[0x1F4188790](v208);
  MEMORY[0x1F4188790](v209);
  MEMORY[0x1F4188790](v210);
  MEMORY[0x1F4188790](v211);
  MEMORY[0x1F4188790](v212);
  MEMORY[0x1F4188790]((char *)&v611 - v213);
  MEMORY[0x1F4188790](v214);
  MEMORY[0x1F4188790](v215);
  __n128 v229 = MEMORY[0x1F4188790](v216);
  unint64_t v230 = v747[2];
  if (!v230)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v205 + 56))(v203, 1, 1, v204, v229);
    goto LABEL_6;
  }
  uint64_t v623 = v224;
  uint64_t v624 = v223;
  v616 = v185;
  unint64_t v636 = v230;
  uint64_t v619 = v222;
  uint64_t v614 = v221;
  uint64_t v615 = v220;
  uint64_t v620 = v219;
  uint64_t v621 = v218;
  uint64_t v622 = v217;
  uint64_t v617 = v228;
  uint64_t v618 = v227;
  v625 = v95;
  uint64_t v635 = v226;
  v734 = (char *)&v611 - v225;
  v632 = v125;
  uint64_t v631 = v92;
  uint64_t v633 = v93;
  double v231 = *(double *)a2;
  v629 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(a2 + 8);
  uint64_t v232 = *(void *)(a2 + 24);
  uint64_t v628 = *(void *)(a2 + 16);
  Swift::Int v630 = *(void *)(a2 + 32);
  uint64_t v627 = *(void *)(a2 + 40);
  double v233 = *(double *)(a2 + 48);
  unint64_t v634 = (v742[80] + 32) & ~(unint64_t)v742[80];
  uint64_t v234 = (char *)v747 + v634;
  sub_1C2A623C8((uint64_t)v747 + v634, (uint64_t)v198, (uint64_t (*)(void))sub_1C297A894);
  uint64_t v235 = v205;
  double v238 = *(char **)(v205 + 32);
  uint64_t v237 = v205 + 32;
  uint64_t v236 = v238;
  ((void (*)(char *, char *, uint64_t))v238)(v203, v198, v204);
  int v239 = *(void (**)(char *, void, uint64_t, uint64_t))(v235 + 56);
  v239(v203, 0, 1, v204);
  uint64_t v712 = v235;
  double v240 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v235 + 48);
  if (v240(v203, 1, v204) == 1)
  {
LABEL_6:
    uint64_t v245 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F26E60];
    uint64_t v246 = (uint64_t)v203;
    goto LABEL_7;
  }
  uint64_t v613 = v232;
  uint64_t v241 = v734;
  ((void (*)(char *, char *, uint64_t))v236)(v734, v203, v204);
  uint64_t v626 = *((void *)v742 + 9);
  v612 = v234;
  uint64_t v242 = v741;
  sub_1C2A623C8((uint64_t)&v234[v626 * (v636 - 1)], v741, (uint64_t (*)(void))sub_1C297A894);
  uint64_t v243 = v740;
  ((void (*)(char *, uint64_t, uint64_t))v236)(v740, v242, v204);
  v239(v243, 0, 1, v204);
  uint64_t v244 = v204;
  if (v240(v243, 1, v204) == 1)
  {
    (*(void (**)(char *, uint64_t))(v712 + 8))(v241, v204);
    uint64_t v245 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F26E60];
    uint64_t v246 = (uint64_t)v243;
LABEL_7:
    sub_1C2A62D30(v246, (unint64_t *)&qword_1EBB92480, v245);
    uint64_t v247 = v745;
    uint64_t v248 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v746[7];
    uint64_t v249 = v744;
    v248(v744, 1, 1, v745);
    uint64_t v250 = type metadata accessor for SignificantChangeEngine.Output(0);
    v248(v249 + *(int *)(v250 + 20), 1, 1, v247);
    sub_1C2A623B0(v743, v249 + *(int *)(v250 + 24));
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v250 - 8) + 56))(v249, 0, 1, v250);
  }
  uint64_t v252 = v635;
  ((void (*)(uint64_t, char *, uint64_t))v236)(v635, v243, v204);
  uint64_t v253 = (unsigned int (*)(void, void, void))v737;
  sub_1C2A623B0(v743, (uint64_t)v737);
  uint64_t v254 = v738;
  uint64_t v256 = v739 + 48;
  uint64_t v255 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v739 + 48);
  if (v255((uint64_t)v253, 1, v738) == 1)
  {
    sub_1C2A62588((uint64_t)v253, (uint64_t (*)(void))sub_1C2A62430);
    uint64_t v257 = v735;
    sub_1C2A59118((uint64_t)v747, v613, v735, v233);
    int v258 = *(void (**)(uint64_t, uint64_t))(v712 + 8);
    v258(v252, v244);
    v258((uint64_t)v734, v244);
LABEL_13:
    uint64_t v267 = v745;
    uint64_t v268 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v746[7];
    uint64_t v249 = v744;
    v268(v744, 1, 1, v745);
    uint64_t v250 = type metadata accessor for SignificantChangeEngine.Output(0);
    v268(v249 + *(int *)(v250 + 20), 1, 1, v267);
    sub_1C2A62484(v257, v249 + *(int *)(v250 + 24), (uint64_t (*)(void))sub_1C2A62430);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v250 - 8) + 56))(v249, 0, 1, v250);
  }
  v740 = v236;
  uint64_t v743 = v237;
  uint64_t v611 = v244;
  uint64_t v259 = v729;
  sub_1C2A62484((uint64_t)v253, v729, type metadata accessor for SignificantChangeEngine.State);
  *(double *)v748 = v231;
  v748[1] = v629;
  v748[2] = v628;
  uint64_t v260 = v613;
  v748[3] = v613;
  v748[4] = v630;
  v748[5] = v627;
  *(double *)&v748[6] = v233;
  uint64_t v261 = v733;
  uint64_t v262 = (uint64_t)v747;
  sub_1C2A5A3B0((uint64_t)v747, (uint64_t)v748, v259, v733);
  uint64_t v263 = (uint64_t)v725;
  sub_1C2A62A80(v259 + *(int *)(v254 + 24), (uint64_t)v725);
  uint64_t v264 = v730;
  v737 = *(void **)(v726 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v737)(v263, 1, v730) == 1)
  {
    sub_1C2A62588(v263, (uint64_t (*)(void))sub_1C2A62A98);
    uint64_t v257 = v735;
    sub_1C2A59118(v262, v260, v735, v233);
    sub_1C2A62588(v261, type metadata accessor for SignificantChangeEngine.State);
    sub_1C2A62588(v259, type metadata accessor for SignificantChangeEngine.State);
    uint64_t v265 = *(void (**)(uint64_t, uint64_t))(v712 + 8);
    uint64_t v266 = v611;
    v265(v635, v611);
    v265((uint64_t)v734, v266);
    goto LABEL_13;
  }
  v629 = v255;
  uint64_t v269 = (uint64_t)v632;
  sub_1C2A62484(v263, (uint64_t)v632, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
  v270 = (char **)(v712 + 16);
  uint64_t v271 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v633 + 48);
  uint64_t v272 = v269;
  if (*(unsigned char *)(v269 + *(int *)(v264 + 20)))
  {
    uint64_t v273 = v719;
    sub_1C2939D90(v269, v719);
    uint64_t v274 = v624;
    uint64_t v275 = v611;
    v728 = *v270;
    ((void (*)(uint64_t, char *, uint64_t))v728)(v624, v734, v611);
    uint64_t v276 = v631;
    int v277 = (*v271)(v273, 1, v631);
    v725 = v270;
    if (v277 == 1)
    {
      uint64_t v278 = v625;
      sub_1C2A9C378();
      v742 = *(unsigned __int8 **)(v712 + 8);
      ((void (*)(uint64_t, uint64_t))v742)(v274, v275);
      uint64_t v279 = sub_1C2A62588(v273, (uint64_t (*)(void))sub_1C2A62B24);
    }
    else
    {
      v742 = *(unsigned __int8 **)(v712 + 8);
      ((void (*)(uint64_t, uint64_t))v742)(v274, v275);
      uint64_t v278 = v625;
      uint64_t v279 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v633 + 32))(v625, v273, v276);
    }
    uint64_t v284 = v736;
    uint64_t v285 = (uint64_t)v717;
    MEMORY[0x1F4188790](v279);
    *(&v611 - 2) = (uint64_t)v278;
    uint64_t v286 = swift_bridgeObjectRetain();
    uint64_t v287 = sub_1C2A7817C(v286, (uint64_t (*)(char *, void, void))sub_1C2A79DA0);
    swift_bridgeObjectRelease();
    uint64_t v288 = *(void *)(v287 + 16);
    uint64_t v289 = v746;
    if (v288)
    {
      uint64_t v719 = v256;
      uint64_t v290 = v287 + v634;
      uint64_t v291 = v287 + v634;
      while (1)
      {
        sub_1C2A623C8(v291, v285, (uint64_t (*)(void))sub_1C297A894);
        uint64_t v292 = *(int *)(v284 + 48);
        if (*(unsigned char *)(v285 + 8 + v292) != 1) {
          break;
        }
        sub_1C2A62588(v285, (uint64_t (*)(void))sub_1C297A894);
        v291 += v626;
        if (!--v288)
        {
          swift_bridgeObjectRelease();
          uint64_t v254 = v738;
          uint64_t v256 = v719;
          goto LABEL_34;
        }
      }
      uint64_t v328 = v723;
      uint64_t v329 = v723 + v292;
      uint64_t v330 = v691;
      sub_1C2A62484(v285, v691, (uint64_t (*)(void))sub_1C297A894);
      uint64_t v331 = v330 + *(int *)(v284 + 48);
      ((void (*)(uint64_t, uint64_t, uint64_t))v740)(v328, v330, v611);
      int v332 = *(unsigned __int8 *)(v331 + 8);
      v737 = *(void **)v331;
      *(void *)uint64_t v329 = v737;
      LODWORD(v747) = v332;
      *(unsigned char *)(v329 + 8) = v332;
      uint64_t v333 = MEMORY[0x1E4FBC860];
      v748[0] = MEMORY[0x1E4FBC860];
      uint64_t v334 = *(void *)(v287 + 16);
      unint64_t result = swift_bridgeObjectRetain();
      if (v334)
      {
        unint64_t v335 = 0;
        uint64_t v336 = (uint64_t)v732;
        uint64_t v337 = v732 + 8;
        uint64_t v338 = v626;
        while (v335 < *(void *)(v287 + 16))
        {
          sub_1C2A623C8(v290, v336, (uint64_t (*)(void))sub_1C297A894);
          if (v337[*(int *)(v284 + 48)])
          {
            unint64_t result = sub_1C2A62588(v336, (uint64_t (*)(void))sub_1C297A894);
          }
          else
          {
            sub_1C2A62484(v336, (uint64_t)v731, (uint64_t (*)(void))sub_1C297A894);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_1C2978AEC(0, *(void *)(v333 + 16) + 1, 1);
            }
            uint64_t v333 = v748[0];
            unint64_t v340 = *(void *)(v748[0] + 16);
            unint64_t v339 = *(void *)(v748[0] + 24);
            if (v340 >= v339 >> 1)
            {
              sub_1C2978AEC(v339 > 1, v340 + 1, 1);
              uint64_t v333 = v748[0];
            }
            *(void *)(v333 + 16) = v340 + 1;
            uint64_t v338 = v626;
            unint64_t result = sub_1C2A62484((uint64_t)v731, v333 + v634 + v340 * v626, (uint64_t (*)(void))sub_1C297A894);
            uint64_t v284 = v736;
          }
          ++v335;
          v290 += v338;
          uint64_t v336 = (uint64_t)v732;
          if (v334 == v335)
          {
            uint64_t v361 = (uint64_t (*)(char *, uint64_t))v728;
            uint64_t v333 = v748[0];
            goto LABEL_74;
          }
        }
        __break(1u);
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
        goto LABEL_130;
      }
      uint64_t v361 = (uint64_t (*)(char *, uint64_t))v728;
LABEL_74:
      swift_bridgeObjectRelease();
      uint64_t v444 = *(void *)(v333 + 16);
      swift_release();
      v732 = (char *)v444;
      double v445 = (double)v444;
      uint64_t v446 = (uint64_t)v680;
      v447 = &v680[*(int *)(v284 + 48)];
      uint64_t v448 = v723;
      uint64_t v449 = v611;
      uint64_t v450 = v361(v680, v723);
      *(void *)v447 = v737;
      v447[8] = (char)v747;
      MEMORY[0x1F4188790](v450);
      *(&v611 - 2) = v446;
      sub_1C2A43A34((uint64_t (*)(char *))sub_1C2A79DAC, (uint64_t)(&v611 - 4), v287);
      uint64_t v452 = v451;
      sub_1C2A62588(v446, (uint64_t (*)(void))sub_1C297A894);
      uint64_t v453 = *(void *)(v452 + 16);
      swift_bridgeObjectRelease();
      uint64_t v454 = *(void (**)(uint64_t, uint64_t, uint64_t))(v633 + 16);
      v455 = v713;
      v731 = (char *)(v633 + 16);
      v727 = v454;
      v454((uint64_t)v713, (uint64_t)v625, v631);
      uint64_t v456 = v741;
      uint64_t v457 = v741 + *(int *)(v284 + 48);
      uint64_t v458 = v449;
      uint64_t v459 = v449;
      v460 = (void (*)(uint64_t, uint64_t, uint64_t))v728;
      ((void (*)(uint64_t, uint64_t, uint64_t))v728)(v741, v448, v459);
      v461 = (unsigned int (*)(void, void, void))v737;
      *(void *)uint64_t v457 = v737;
      *(unsigned char *)(v457 + 8) = (_BYTE)v747;
      sub_1C2A9C378();
      uint64_t v462 = v712 + 8;
      v463 = (void (*)(uint64_t, uint64_t))v742;
      ((void (*)(uint64_t, uint64_t))v742)(v456, v458);
      uint64_t v464 = v716;
      sub_1C2A9C358();
      uint64_t v465 = (int *)v703;
      *(void *)(v464 + *(int *)(v703 + 20)) = 0;
      *(void *)(v464 + v465[6]) = 0;
      *(unsigned char *)(v464 + v465[7]) = 2;
      uint64_t v466 = v456 + *(int *)(v736 + 48);
      v460(v456, v723, v458);
      *(void *)uint64_t v466 = v461;
      *(unsigned char *)(v466 + 8) = (_BYTE)v747;
      sub_1C2A9C378();
      uint64_t v735 = v462;
      v463(v456, v458);
      sub_1C2A9C348();
      uint64_t v467 = v722;
      uint64_t v468 = v455;
      sub_1C2A9C358();
      *(void *)(v467 + v465[5]) = 0;
      *(double *)(v467 + v465[6]) = v445 / (double)v453;
      *(unsigned char *)(v467 + v465[7]) = 0;
      uint64_t v469 = (uint64_t)&v632[*(int *)(v730 + 24)];
      uint64_t v470 = v681;
      sub_1C2A62344(v469, v681);
      uint64_t v471 = v745;
      uint64_t v472 = v746;
      os_log_t v473 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v746[6];
      int v474 = v473(v470, 1, v745);
      uint64_t v475 = v711;
      if (v474 == 1)
      {
        sub_1C2A62588(v470, (uint64_t (*)(void))sub_1C2A6235C);
      }
      else
      {
        uint64_t v476 = *(void *)(v470 + *(int *)(v471 + 20));
        swift_bridgeObjectRetain();
        sub_1C2A62588(v470, type metadata accessor for SignificantChange);
        if (*(void *)(v476 + 16))
        {
          uint64_t v477 = v655;
          sub_1C2A623C8(v476 + ((*(unsigned __int8 *)(v475 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v475 + 80)), v655, type metadata accessor for SignificantChange.Period);
          uint64_t v478 = 0;
        }
        else
        {
          uint64_t v478 = 1;
          uint64_t v477 = v655;
        }
        uint64_t v501 = v703;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v475 + 56))(v477, v478, 1, v703);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v475 + 48))(v477, 1, v501) != 1)
        {
          double v554 = *(double *)(v477 + *(int *)(v501 + 24));
          sub_1C2A62588(v477, type metadata accessor for SignificantChange.Period);
          uint64_t v502 = (uint64_t)v679;
          if (v554 > 0.0)
          {
            uint64_t v555 = v637;
            sub_1C2A62344(v469, v637);
            uint64_t v556 = v745;
            if (v473(v555, 1, v745) == 1)
            {
              sub_1C2A62588(v555, (uint64_t (*)(void))sub_1C2A6235C);
              uint64_t v557 = v701;
              uint64_t v558 = v639;
              uint64_t v559 = v710;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v701 + 56))(v639, 1, 1, v710);
            }
            else
            {
              uint64_t v558 = v639;
              sub_1C2A623C8(v555 + *(int *)(v556 + 24), v639, (uint64_t (*)(void))sub_1C2A64008);
              sub_1C2A62588(v555, type metadata accessor for SignificantChange);
              uint64_t v559 = v710;
              uint64_t v557 = v701;
            }
            uint64_t v597 = v638;
            sub_1C2A623C8(v722, v638, type metadata accessor for SignificantChange.Period);
            int v598 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v557 + 48))(v558, 1, v559);
            uint64_t v599 = v559;
            uint64_t v249 = v744;
            uint64_t v600 = v633;
            if (v598 == 1)
            {
              v601 = v468;
              sub_1C2A9C378();
              v602 = v698;
              sub_1C2A9C708();
              uint64_t v603 = v600;
              uint64_t v604 = sub_1C2A9C6F8();
              uint64_t v606 = v605;
              (*(void (**)(char *, uint64_t))(v699 + 8))(v602, v700);
              v607 = v702;
              _s19HealthVisualization25PresentationDateProvidingPAAE012presentationD010Foundation0D0VvgZ_0();
              sub_1C2A62588(v597, type metadata accessor for SignificantChange.Period);
              *(void *)uint64_t v502 = v604;
              *(void *)(v502 + 8) = v606;
              *(unsigned char *)(v502 + 16) = 0;
              v608 = *(void (**)(uint64_t, char *, uint64_t))(v603 + 32);
              uint64_t v609 = v631;
              v608(v502 + *(int *)(v599 + 24), v607, v631);
              v610 = v601;
              uint64_t v472 = v746;
              v608(v502 + *(int *)(v599 + 28), v610, v609);
              sub_1C2A62588(v639, (uint64_t (*)(void))sub_1C2A64008);
            }
            else
            {
              sub_1C2A62588(v597, type metadata accessor for SignificantChange.Period);
              sub_1C2A62484(v558, v502, type metadata accessor for SignificantChange.Notification);
            }
            uint64_t v508 = v706;
            v463 = (void (*)(uint64_t, uint64_t))v742;
            goto LABEL_97;
          }
LABEL_96:
          sub_1C2A9C378();
          uint64_t v503 = v698;
          sub_1C2A9C708();
          uint64_t v504 = sub_1C2A9C6F8();
          uint64_t v506 = v505;
          (*(void (**)(char *, uint64_t))(v699 + 8))(v503, v700);
          uint64_t v507 = v710;
          _s19HealthVisualization25PresentationDateProvidingPAAE012presentationD010Foundation0D0VvgZ_0();
          *(void *)uint64_t v502 = v504;
          *(void *)(v502 + 8) = v506;
          *(unsigned char *)(v502 + 16) = 0;
          (*(void (**)(uint64_t, char *, uint64_t))(v633 + 32))(v502 + *(int *)(v507 + 28), v468, v631);
          uint64_t v249 = v744;
          uint64_t v508 = v706;
LABEL_97:
          if (*(unsigned char *)(v502 + 16) == 1)
          {
            v742 = (unsigned __int8 *)v463;
            v509 = v472;
            uint64_t v510 = v705;
            sub_1C2A623C8(v502, v705, type metadata accessor for SignificantChange.Notification);
            uint64_t v511 = v710;
          }
          else
          {
            uint64_t v513 = *(void *)v502;
            uint64_t v512 = *(void *)(v502 + 8);
            uint64_t v511 = v710;
            uint64_t v510 = v705;
            uint64_t v514 = v631;
            uint64_t v515 = v508;
            long long v516 = v727;
            v727(v705 + *(int *)(v710 + 24), v502 + *(int *)(v710 + 24), v631);
            uint64_t v517 = v514;
            v509 = v746;
            v516(v510 + *(int *)(v511 + 28), v502 + *(int *)(v511 + 28), v517);
            uint64_t v508 = v515;
            *(void *)uint64_t v510 = v513;
            *(void *)(v510 + 8) = v512;
            *(unsigned char *)(v510 + 16) = 1;
            swift_bridgeObjectRetain();
          }
          sub_1C2A62588(v502, type metadata accessor for SignificantChange.Notification);
          sub_1C2A623C8(v716, v508, type metadata accessor for SignificantChange.Period);
          sub_1C2A79D08(0);
          unint64_t v518 = (*(unsigned __int8 *)(v711 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v711 + 80);
          uint64_t v519 = swift_allocObject();
          *(_OWORD *)(v519 + 16) = xmmword_1C2AA6B00;
          sub_1C2A623C8(v722, v519 + v518, type metadata accessor for SignificantChange.Period);
          uint64_t v520 = v745;
          uint64_t v521 = v508 + *(int *)(v745 + 24);
          sub_1C2A623C8(v510, v521, type metadata accessor for SignificantChange.Notification);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v701 + 56))(v521, 0, 1, v511);
          *(void *)(v508 + *(int *)(v520 + 20)) = v519;
          if ((uint64_t)v732 >= v613)
          {
            uint64_t v536 = v741;
            uint64_t v537 = v741 + *(int *)(v736 + 48);
            uint64_t v538 = v611;
            ((void (*)(uint64_t, uint64_t, uint64_t))v728)(v741, v723, v611);
            *(void *)uint64_t v537 = v737;
            *(unsigned char *)(v537 + 8) = (_BYTE)v747;
            char v539 = v678;
            sub_1C2A9C348();
            ((void (*)(uint64_t, uint64_t))v742)(v536, v538);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v633 + 56))(v539, 0, 1, v631);
            uint64_t v540 = v730;
            uint64_t v541 = v685;
            uint64_t v542 = v685 + *(int *)(v730 + 24);
            sub_1C2A623C8(v706, v542, type metadata accessor for SignificantChange);
            v543 = (void (*)(uint64_t, void, uint64_t, uint64_t))v509[7];
            v543(v542, 0, 1, v520);
            uint64_t v544 = (uint64_t)v539;
            uint64_t v545 = v706;
            sub_1C2A62484(v544, v541, (uint64_t (*)(void))sub_1C2A62B24);
            *(unsigned char *)(v541 + *(int *)(v540 + 20)) = 0;
            v543(v688, 1, 1, v520);
            uint64_t v546 = v690;
            sub_1C2A623C8(v545, v690, type metadata accessor for SignificantChange);
            v543(v546, 0, 1, v520);
            uint64_t v547 = v683;
            sub_1C2A623C8(v733, v683, type metadata accessor for SignificantChangeEngine.State);
            uint64_t v548 = v738;
            v549 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v739 + 56);
            v739 += 56;
            v549(v547, 0, 1, v738);
            uint64_t v550 = v686;
            sub_1C2A623C8(v541, v686, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v726 + 56))(v550, 0, 1, v540);
            ((void (*)(uint64_t, uint64_t, uint64_t))v728)(v618, v635, v538);
            uint64_t v551 = v659;
            sub_1C2A623B0(v547, v659);
            if (v629(v551, 1, v548) == 1)
            {
              sub_1C2A62588(v551, (uint64_t (*)(void))sub_1C2A62430);
              uint64_t v552 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
              uint64_t v553 = v657;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v552 - 8) + 56))(v657, 1, 1, v552);
            }
            else
            {
              uint64_t v553 = v657;
              sub_1C2A62A14(v551 + *(int *)(v548 + 20), v657);
              sub_1C2A62588(v551, type metadata accessor for SignificantChangeEngine.State);
            }
            uint64_t v565 = (uint64_t)v632;
            uint64_t v566 = v705;
            uint64_t v567 = (uint64_t)v661;
            uint64_t v568 = v686;
            sub_1C2A62A80(v686, (uint64_t)&v661[*(int *)(v548 + 24)]);
            uint64_t v569 = v611;
            ((void (*)(uint64_t, uint64_t, uint64_t))v740)(v567, v618, v611);
            sub_1C2A62484(v553, v567 + *(int *)(v548 + 20), (uint64_t (*)(void))sub_1C2A62A2C);
            sub_1C2A62588(v568, (uint64_t (*)(void))sub_1C2A62A98);
            sub_1C2A62588(v683, (uint64_t (*)(void))sub_1C2A62430);
            sub_1C2A62588(v685, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
            sub_1C2A62588(v545, type metadata accessor for SignificantChange);
            sub_1C2A62588(v566, type metadata accessor for SignificantChange.Notification);
            sub_1C2A62588(v722, type metadata accessor for SignificantChange.Period);
            sub_1C2A62588(v716, type metadata accessor for SignificantChange.Period);
            sub_1C2A62588(v723, (uint64_t (*)(void))sub_1C297A894);
            sub_1C2A62588(v733, type metadata accessor for SignificantChangeEngine.State);
            sub_1C2A62588(v729, type metadata accessor for SignificantChangeEngine.State);
            v570 = (void (*)(char *, uint64_t))v742;
            ((void (*)(uint64_t, uint64_t))v742)(v635, v569);
            v570(v734, v569);
            v549(v567, 0, 1, v548);
            sub_1C2A62484(v688, v249, (uint64_t (*)(void))sub_1C2A6235C);
            uint64_t v250 = type metadata accessor for SignificantChangeEngine.Output(0);
            sub_1C2A62484(v690, v249 + *(int *)(v250 + 20), (uint64_t (*)(void))sub_1C2A6235C);
            sub_1C2A62484(v567, v249 + *(int *)(v250 + 24), (uint64_t (*)(void))sub_1C2A62430);
            (*(void (**)(char *, uint64_t))(v633 + 8))(v625, v631);
            uint64_t v564 = v565;
            goto LABEL_113;
          }
          uint64_t v522 = v684;
          sub_1C2939D90((uint64_t)v632, v684);
          uint64_t v523 = v730;
          uint64_t v524 = v522 + *(int *)(v730 + 24);
          sub_1C2A623C8(v508, v524, type metadata accessor for SignificantChange);
          long long v525 = (void (*)(uint64_t, void, uint64_t, uint64_t))v509[7];
          v525(v524, 0, 1, v520);
          *(unsigned char *)(v522 + *(int *)(v523 + 20)) = 1;
          v525(v687, 1, 1, v520);
          uint64_t v526 = v689;
          sub_1C2A623C8(v508, v689, type metadata accessor for SignificantChange);
          v525(v526, 0, 1, v520);
          uint64_t v527 = v682;
          sub_1C2A623C8(v733, v682, type metadata accessor for SignificantChangeEngine.State);
          uint64_t v528 = v738;
          v529 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v739 + 56);
          v739 += 56;
          v529(v527, 0, 1, v738);
          uint64_t v530 = v522;
          uint64_t v531 = v662;
          sub_1C2A623C8(v530, v662, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v726 + 56))(v531, 0, 1, v523);
          ((void (*)(uint64_t, uint64_t, uint64_t))v728)(v617, v635, v611);
          uint64_t v532 = v527;
          uint64_t v533 = v658;
          sub_1C2A623B0(v532, v658);
          if (v629(v533, 1, v528) == 1)
          {
            sub_1C2A62588(v533, (uint64_t (*)(void))sub_1C2A62430);
            uint64_t v534 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
            uint64_t v535 = v656;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v534 - 8) + 56))(v656, 1, 1, v534);
          }
          else
          {
            uint64_t v535 = v656;
            sub_1C2A62A14(v533 + *(int *)(v528 + 20), v656);
            sub_1C2A62588(v533, type metadata accessor for SignificantChangeEngine.State);
          }
          uint64_t v560 = v705;
          v561 = (void (*)(uint64_t, uint64_t))v742;
          uint64_t v562 = (uint64_t)v660;
          sub_1C2A62A80(v531, (uint64_t)&v660[*(int *)(v528 + 24)]);
          uint64_t v563 = v611;
          ((void (*)(uint64_t, uint64_t, uint64_t))v740)(v562, v617, v611);
          sub_1C2A62484(v535, v562 + *(int *)(v528 + 20), (uint64_t (*)(void))sub_1C2A62A2C);
          sub_1C2A62588(v531, (uint64_t (*)(void))sub_1C2A62A98);
          sub_1C2A62588(v682, (uint64_t (*)(void))sub_1C2A62430);
          sub_1C2A62588(v684, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
          sub_1C2A62588(v508, type metadata accessor for SignificantChange);
          sub_1C2A62588(v560, type metadata accessor for SignificantChange.Notification);
          sub_1C2A62588(v722, type metadata accessor for SignificantChange.Period);
          sub_1C2A62588(v716, type metadata accessor for SignificantChange.Period);
          sub_1C2A62588(v723, (uint64_t (*)(void))sub_1C297A894);
          sub_1C2A62588(v733, type metadata accessor for SignificantChangeEngine.State);
          sub_1C2A62588(v729, type metadata accessor for SignificantChangeEngine.State);
          v561(v635, v563);
          v561((uint64_t)v734, v563);
          v529(v562, 0, 1, v528);
          sub_1C2A62484(v687, v249, (uint64_t (*)(void))sub_1C2A6235C);
          uint64_t v250 = type metadata accessor for SignificantChangeEngine.Output(0);
          sub_1C2A62484(v689, v249 + *(int *)(v250 + 20), (uint64_t (*)(void))sub_1C2A6235C);
          sub_1C2A62484(v562, v249 + *(int *)(v250 + 24), (uint64_t (*)(void))sub_1C2A62430);
          (*(void (**)(char *, uint64_t))(v633 + 8))(v625, v631);
LABEL_110:
          uint64_t v564 = (uint64_t)v632;
LABEL_113:
          sub_1C2A62588(v564, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v250 - 8) + 56))(v249, 0, 1, v250);
        }
        sub_1C2A62D30(v477, &qword_1EBB8E368, type metadata accessor for SignificantChange.Period);
      }
      uint64_t v502 = (uint64_t)v679;
      goto LABEL_96;
    }
    swift_bridgeObjectRelease();
LABEL_34:
    uint64_t v312 = v733;
    uint64_t v313 = v708;
    sub_1C2A62A80(v733 + *(int *)(v254 + 24), v708);
    uint64_t v314 = v730;
    unsigned int v315 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v737)(v313, 1, v730);
    uint64_t v316 = v745;
    uint64_t v317 = v709;
    if (v315 == 1)
    {
      sub_1C2A62588(v313, (uint64_t (*)(void))sub_1C2A62A98);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v289[7])(v317, 1, 1, v316);
      uint64_t v249 = v744;
LABEL_37:
      sub_1C2A62588(v317, (uint64_t (*)(void))sub_1C2A6235C);
      uint64_t v319 = v714;
      sub_1C2A623C8(v312, v714, type metadata accessor for SignificantChangeEngine.State);
      double v320 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v739 + 56);
      v320(v319, 0, 1, v254);
      uint64_t v321 = v735;
      uint64_t v322 = v635;
      sub_1C2A5C364(v319, v635, v735);
      sub_1C2A62588(v319, (uint64_t (*)(void))sub_1C2A62430);
      sub_1C2A62588(v312, type metadata accessor for SignificantChangeEngine.State);
      sub_1C2A62588(v729, type metadata accessor for SignificantChangeEngine.State);
      uint64_t v323 = v322;
      uint64_t v324 = v611;
      v325 = (void (*)(char *, uint64_t))v742;
      ((void (*)(uint64_t, uint64_t))v742)(v323, v611);
      v325(v734, v324);
      v320(v321, 0, 1, v254);
      uint64_t v326 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v289[7];
      uint64_t v327 = v745;
      v326(v249, 1, 1, v745);
      uint64_t v250 = type metadata accessor for SignificantChangeEngine.Output(0);
      v326(v249 + *(int *)(v250 + 20), 1, 1, v327);
      sub_1C2A62484(v321, v249 + *(int *)(v250 + 24), (uint64_t (*)(void))sub_1C2A62430);
      (*(void (**)(char *, uint64_t))(v633 + 8))(v625, v631);
LABEL_121:
      sub_1C2A62588((uint64_t)v632, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v250 - 8) + 56))(v249, 0, 1, v250);
    }
    sub_1C2A62344(v313 + *(int *)(v314 + 24), v709);
    sub_1C2A62588(v313, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
    int v318 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v289[6])(v317, 1, v316);
    uint64_t v249 = v744;
    if (v318 == 1) {
      goto LABEL_37;
    }
    sub_1C2A62484(v317, v694, type metadata accessor for SignificantChange);
    uint64_t v362 = (uint64_t)v713;
    sub_1C2A9C348();
    uint64_t v363 = v695;
    sub_1C2A5BD48(v362, v695, 0.0, 0.0);
    uint64_t v364 = *(void **)(v633 + 8);
    v633 += 8;
    v747 = v364;
    ((void (*)(uint64_t, uint64_t))v364)(v362, v631);
    uint64_t v365 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v289[7];
    v365(v696, 1, 1, v316);
    uint64_t v366 = v697;
    sub_1C2A623C8(v363, v697, type metadata accessor for SignificantChange);
    v365(v366, 0, 1, v316);
    uint64_t v367 = v316;
    uint64_t v368 = v692;
    sub_1C2A623C8(v312, v692, type metadata accessor for SignificantChangeEngine.State);
    uint64_t v719 = v256;
    uint64_t v369 = v254;
    v370 = *(void **)(v739 + 56);
    v739 += 56;
    v746 = v370;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v370)(v368, 0, 1, v254);
    uint64_t v371 = v693;
    sub_1C2939D90((uint64_t)v632, v693);
    uint64_t v372 = v371 + *(int *)(v314 + 24);
    sub_1C2A623C8(v363, v372, type metadata accessor for SignificantChange);
    v365(v372, 0, 1, v367);
    *(unsigned char *)(v371 + *(int *)(v314 + 20)) = 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v726 + 56))(v371, 0, 1, v314);
    ((void (*)(uint64_t, uint64_t, uint64_t))v728)(v619, v635, v611);
    uint64_t v373 = v665;
    sub_1C2A623B0(v368, v665);
    if (v629(v373, 1, v369) == 1)
    {
      sub_1C2A62588(v373, (uint64_t (*)(void))sub_1C2A62430);
      uint64_t v374 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
      uint64_t v375 = v664;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v374 - 8) + 56))(v664, 1, 1, v374);
    }
    else
    {
      uint64_t v375 = v664;
      sub_1C2A62A14(v373 + *(int *)(v369 + 20), v664);
      sub_1C2A62588(v373, type metadata accessor for SignificantChangeEngine.State);
    }
    uint64_t v249 = v744;
    uint64_t v479 = v729;
    uint64_t v480 = (uint64_t)v663;
    uint64_t v481 = v693;
    sub_1C2A62A80(v693, (uint64_t)&v663[*(int *)(v369 + 24)]);
    uint64_t v482 = v611;
    ((void (*)(uint64_t, uint64_t, uint64_t))v740)(v480, v619, v611);
    sub_1C2A62484(v375, v480 + *(int *)(v369 + 20), (uint64_t (*)(void))sub_1C2A62A2C);
    sub_1C2A62588(v481, (uint64_t (*)(void))sub_1C2A62A98);
    sub_1C2A62588(v692, (uint64_t (*)(void))sub_1C2A62430);
    sub_1C2A62588(v695, type metadata accessor for SignificantChange);
    sub_1C2A62588(v694, type metadata accessor for SignificantChange);
    sub_1C2A62588(v733, type metadata accessor for SignificantChangeEngine.State);
    sub_1C2A62588(v479, type metadata accessor for SignificantChangeEngine.State);
    uint64_t v483 = (void (*)(char *, uint64_t))v742;
    ((void (*)(uint64_t, uint64_t))v742)(v635, v482);
    v483(v734, v482);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v746)(v480, 0, 1, v369);
    sub_1C2A62484(v696, v249, (uint64_t (*)(void))sub_1C2A6235C);
    uint64_t v250 = type metadata accessor for SignificantChangeEngine.Output(0);
    sub_1C2A62484(v697, v249 + *(int *)(v250 + 20), (uint64_t (*)(void))sub_1C2A6235C);
    sub_1C2A62484(v480, v249 + *(int *)(v250 + 24), (uint64_t (*)(void))sub_1C2A62430);
    v484 = &v657;
LABEL_120:
    ((void (*)(void, uint64_t))v747)(*(v484 - 32), v631);
    goto LABEL_121;
  }
  uint64_t v280 = v718;
  sub_1C2939D90(v272, v718);
  uint64_t v281 = v623;
  uint64_t v282 = v611;
  v731 = *v270;
  ((void (*)(uint64_t, char *, uint64_t))v731)(v623, v734, v611);
  uint64_t v283 = v631;
  if ((*v271)(v280, 1, v631) == 1)
  {
    sub_1C2A9C378();
    v732 = *(char **)(v712 + 8);
    ((void (*)(uint64_t, uint64_t))v732)(v281, v282);
    sub_1C2A62588(v280, (uint64_t (*)(void))sub_1C2A62B24);
  }
  else
  {
    v732 = *(char **)(v712 + 8);
    ((void (*)(uint64_t, uint64_t))v732)(v281, v282);
    (*(void (**)(char *, uint64_t, uint64_t))(v633 + 32))(v724, v280, v283);
  }
  uint64_t v294 = v746;
  uint64_t v293 = (uint64_t)v747;
  unint64_t result = sub_1C2A5BA58((uint64_t)v747);
  uint64_t v295 = (uint64_t)v632;
  if (v296)
  {
    uint64_t v307 = v735;
    sub_1C2A59118(v293, v613, v735, v233);
    sub_1C2A62588(v733, type metadata accessor for SignificantChangeEngine.State);
    sub_1C2A62588(v259, type metadata accessor for SignificantChangeEngine.State);
    uint64_t v308 = v611;
    uint64_t v309 = (void (*)(char *, uint64_t))v732;
    ((void (*)(uint64_t, uint64_t))v732)(v635, v611);
    v309(v734, v308);
    uint64_t v310 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v294[7];
    uint64_t v249 = v744;
    uint64_t v311 = v745;
    v310(v744, 1, 1, v745);
    uint64_t v250 = type metadata accessor for SignificantChangeEngine.Output(0);
    v310(v249 + *(int *)(v250 + 20), 1, 1, v311);
    sub_1C2A62484(v307, v249 + *(int *)(v250 + 24), (uint64_t (*)(void))sub_1C2A62430);
    (*(void (**)(char *, uint64_t))(v633 + 8))(v724, v631);
    sub_1C2A62588(v295, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v250 - 8) + 56))(v249, 0, 1, v250);
  }
  v725 = v270;
  uint64_t v719 = v256;
  unint64_t v297 = result + 1;
  if (__OFADD__(result, 1)) {
    goto LABEL_129;
  }
  Swift::Int v298 = v636 - v297;
  uint64_t v299 = v730;
  if (__OFSUB__(v636, v297))
  {
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
  if (v298 < v630)
  {
    MEMORY[0x1F4188790](result);
    *(&v611 - 2) = v295;
    uint64_t v300 = swift_bridgeObjectRetain();
    uint64_t v301 = sub_1C2A7817C(v300, (uint64_t (*)(char *, void, void))sub_1C2A79DD8);
    swift_bridgeObjectRelease();
    uint64_t v302 = v733;
    uint64_t v303 = v677;
    sub_1C2A62A80(v733 + *(int *)(v254 + 24), v677);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v737)(v303, 1, v299) == 1)
    {
      sub_1C2A62588(v303, (uint64_t (*)(void))sub_1C2A62A98);
      uint64_t v304 = v745;
      unint64_t v305 = v746;
      uint64_t v306 = v676;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v746[7])(v676, 1, 1, v745);
      uint64_t v249 = v744;
    }
    else
    {
      uint64_t v306 = v676;
      sub_1C2A62344(v303 + *(int *)(v299 + 24), v676);
      sub_1C2A62588(v303, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
      uint64_t v304 = v745;
      unint64_t v305 = v746;
      int v394 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v746[6])(v306, 1, v745);
      uint64_t v249 = v744;
      if (v394 != 1)
      {
        sub_1C2A62484(v306, v666, type metadata accessor for SignificantChange);
        uint64_t v485 = *(void *)(v301 + 16);
        if (v485)
        {
          uint64_t v486 = v301 + v634;
          v487 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v742 + 56);
          uint64_t v488 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v742 + 48);
          swift_bridgeObjectRetain();
          unint64_t v489 = MEMORY[0x1E4FBC860];
          uint64_t v490 = v736;
          uint64_t v491 = (uint64_t)v707;
          uint64_t v492 = (uint64_t)v720;
          do
          {
            sub_1C2A623C8(v486, v492, (uint64_t (*)(void))sub_1C297A894);
            sub_1C2A623C8(v492, v491, (uint64_t (*)(void))sub_1C297A894);
            (*v487)(v491, 0, 1, v490);
            sub_1C2A62588(v492, (uint64_t (*)(void))sub_1C297A894);
            if ((*v488)(v491, 1, v490) == 1)
            {
              sub_1C2A62D30(v491, &qword_1EBB8E870, (uint64_t (*)(uint64_t))sub_1C297A894);
              uint64_t v493 = v626;
            }
            else
            {
              uint64_t v494 = v491;
              uint64_t v495 = v704;
              sub_1C2A62484(v494, v704, (uint64_t (*)(void))sub_1C297A894);
              sub_1C2A62484(v495, v721, (uint64_t (*)(void))sub_1C297A894);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v489 = sub_1C299DD64(0, *(void *)(v489 + 16) + 1, 1, v489);
              }
              unint64_t v497 = *(void *)(v489 + 16);
              unint64_t v496 = *(void *)(v489 + 24);
              if (v497 >= v496 >> 1) {
                unint64_t v489 = sub_1C299DD64(v496 > 1, v497 + 1, 1, v489);
              }
              *(void *)(v489 + 16) = v497 + 1;
              uint64_t v493 = v626;
              sub_1C2A62484(v721, v489 + v634 + v497 * v626, (uint64_t (*)(void))sub_1C297A894);
              uint64_t v491 = (uint64_t)v707;
            }
            v486 += v493;
            --v485;
          }
          while (v485);
          swift_bridgeObjectRelease();
          uint64_t v571 = (uint64_t)v632;
          unint64_t v305 = v746;
        }
        else
        {
          unint64_t v489 = MEMORY[0x1E4FBC860];
          uint64_t v571 = (uint64_t)v632;
        }
        uint64_t v572 = *(void *)(v489 + 16);
        swift_bridgeObjectRelease();
        uint64_t v573 = *(void *)(v301 + 16);
        swift_bridgeObjectRelease();
        uint64_t v574 = (uint64_t)v713;
        sub_1C2A9C348();
        uint64_t v575 = v652;
        sub_1C2A5BD48(v574, v652, 0.0, (double)v572 / (double)v573);
        v576 = *(void **)(v633 + 8);
        v633 += 8;
        v747 = v576;
        ((void (*)(uint64_t, uint64_t))v576)(v574, v631);
        v577 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v305[7];
        uint64_t v578 = v745;
        v577(v653, 1, 1, v745);
        uint64_t v579 = v654;
        sub_1C2A623C8(v575, v654, type metadata accessor for SignificantChange);
        v577(v579, 0, 1, v578);
        uint64_t v580 = v650;
        sub_1C2A623C8(v733, v650, type metadata accessor for SignificantChangeEngine.State);
        uint64_t v581 = v738;
        v582 = *(void **)(v739 + 56);
        v739 += 56;
        v746 = v582;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v582)(v580, 0, 1, v738);
        uint64_t v583 = v651;
        sub_1C2939D90(v571, v651);
        uint64_t v584 = v730;
        uint64_t v585 = v583 + *(int *)(v730 + 24);
        sub_1C2A623C8(v575, v585, type metadata accessor for SignificantChange);
        v577(v585, 0, 1, v578);
        *(unsigned char *)(v583 + *(int *)(v584 + 20)) = 0;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v726 + 56))(v583, 0, 1, v584);
        ((void (*)(uint64_t, uint64_t, uint64_t))v731)(v614, v635, v611);
        uint64_t v586 = v580;
        uint64_t v587 = v581;
        uint64_t v588 = v642;
        sub_1C2A623B0(v586, v642);
        unsigned int v589 = v629(v588, 1, v581);
        uint64_t v249 = v744;
        if (v589 == 1)
        {
          sub_1C2A62588(v588, (uint64_t (*)(void))sub_1C2A62430);
          uint64_t v590 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
          uint64_t v591 = v641;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v590 - 8) + 56))(v641, 1, 1, v590);
        }
        else
        {
          uint64_t v591 = v641;
          sub_1C2A62A14(v588 + *(int *)(v581 + 20), v641);
          sub_1C2A62588(v588, type metadata accessor for SignificantChangeEngine.State);
        }
        uint64_t v592 = v729;
        uint64_t v593 = (uint64_t)v640;
        uint64_t v594 = v651;
        sub_1C2A62A80(v651, (uint64_t)&v640[*(int *)(v587 + 24)]);
        uint64_t v595 = v611;
        ((void (*)(uint64_t, uint64_t, uint64_t))v740)(v593, v614, v611);
        sub_1C2A62484(v591, v593 + *(int *)(v587 + 20), (uint64_t (*)(void))sub_1C2A62A2C);
        sub_1C2A62588(v594, (uint64_t (*)(void))sub_1C2A62A98);
        sub_1C2A62588(v650, (uint64_t (*)(void))sub_1C2A62430);
        sub_1C2A62588(v652, type metadata accessor for SignificantChange);
        sub_1C2A62588(v666, type metadata accessor for SignificantChange);
        sub_1C2A62588(v733, type metadata accessor for SignificantChangeEngine.State);
        sub_1C2A62588(v592, type metadata accessor for SignificantChangeEngine.State);
        v596 = (void (*)(char *, uint64_t))v732;
        ((void (*)(uint64_t, uint64_t))v732)(v635, v595);
        v596(v734, v595);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v746)(v593, 0, 1, v587);
        sub_1C2A62484(v653, v249, (uint64_t (*)(void))sub_1C2A6235C);
        uint64_t v250 = type metadata accessor for SignificantChangeEngine.Output(0);
        sub_1C2A62484(v654, v249 + *(int *)(v250 + 20), (uint64_t (*)(void))sub_1C2A6235C);
        sub_1C2A62484(v593, v249 + *(int *)(v250 + 24), (uint64_t (*)(void))sub_1C2A62430);
        v484 = (uint64_t *)&v749;
        goto LABEL_120;
      }
    }
    swift_bridgeObjectRelease();
    sub_1C2A62588(v306, (uint64_t (*)(void))sub_1C2A6235C);
    uint64_t v395 = v714;
    sub_1C2A623C8(v302, v714, type metadata accessor for SignificantChangeEngine.State);
    uint64_t v396 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v739 + 56);
    v396(v395, 0, 1, v254);
    uint64_t v397 = v735;
    uint64_t v398 = v305;
    uint64_t v399 = v635;
    sub_1C2A5C364(v395, v635, v735);
    sub_1C2A62588(v395, (uint64_t (*)(void))sub_1C2A62430);
    sub_1C2A62588(v733, type metadata accessor for SignificantChangeEngine.State);
    sub_1C2A62588(v259, type metadata accessor for SignificantChangeEngine.State);
    uint64_t v400 = v399;
    uint64_t v401 = v611;
    uint64_t v402 = (void (*)(char *, uint64_t))v732;
    ((void (*)(uint64_t, uint64_t))v732)(v400, v611);
    v402(v734, v401);
    v396(v397, 0, 1, v254);
    uint64_t v403 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v398[7];
    v403(v249, 1, 1, v304);
    uint64_t v250 = type metadata accessor for SignificantChangeEngine.Output(0);
    v403(v249 + *(int *)(v250 + 20), 1, 1, v304);
    uint64_t v392 = v249 + *(int *)(v250 + 24);
    uint64_t v393 = v397;
LABEL_70:
    sub_1C2A62484(v393, v392, (uint64_t (*)(void))sub_1C2A62430);
    (*(void (**)(char *, uint64_t))(v633 + 8))(v724, v631);
    goto LABEL_121;
  }
  if (result >= v636)
  {
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  uint64_t v341 = v736;
  uint64_t v342 = v715;
  v343 = (unsigned __int8 *)(v715 + *(int *)(v736 + 48));
  sub_1C2A623C8((uint64_t)&v612[result * v626], v715, (uint64_t (*)(void))sub_1C297A894);
  uint64_t v344 = (uint64_t)v616;
  uint64_t v345 = &v616[*(int *)(v341 + 48)];
  uint64_t v346 = v611;
  uint64_t v347 = ((uint64_t (*)(char *, uint64_t, uint64_t))v731)(v616, v342, v611);
  uint64_t v348 = *(void *)v343;
  v742 = v343;
  char v349 = v343[8];
  *(void *)uint64_t v345 = v348;
  v345[8] = v349;
  MEMORY[0x1F4188790](v347);
  *(&v611 - 2) = (uint64_t)v724;
  *(&v611 - 1) = v344;
  uint64_t v350 = swift_bridgeObjectRetain();
  uint64_t v351 = sub_1C2A7817C(v350, (uint64_t (*)(char *, void, void))sub_1C2A79DCC);
  swift_bridgeObjectRelease();
  sub_1C2A62588(v344, (uint64_t (*)(void))sub_1C297A894);
  uint64_t v352 = MEMORY[0x1E4FBC860];
  v748[0] = MEMORY[0x1E4FBC860];
  uint64_t v353 = *(void *)(v351 + 16);
  unint64_t result = swift_bridgeObjectRetain();
  if (v353)
  {
    unint64_t v354 = 0;
    uint64_t v355 = (uint64_t)v728;
    v356 = v728 + 8;
    uint64_t v357 = v351 + v634;
    while (v354 < *(void *)(v351 + 16))
    {
      sub_1C2A623C8(v357, v355, (uint64_t (*)(void))sub_1C297A894);
      if (v356[*(int *)(v341 + 48)])
      {
        unint64_t result = sub_1C2A62588(v355, (uint64_t (*)(void))sub_1C297A894);
        uint64_t v358 = v626;
      }
      else
      {
        sub_1C2A62484(v355, (uint64_t)v727, (uint64_t (*)(void))sub_1C297A894);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C2978AEC(0, *(void *)(v352 + 16) + 1, 1);
        }
        uint64_t v352 = v748[0];
        unint64_t v360 = *(void *)(v748[0] + 16);
        unint64_t v359 = *(void *)(v748[0] + 24);
        if (v360 >= v359 >> 1)
        {
          sub_1C2978AEC(v359 > 1, v360 + 1, 1);
          uint64_t v352 = v748[0];
        }
        *(void *)(v352 + 16) = v360 + 1;
        uint64_t v358 = v626;
        unint64_t result = sub_1C2A62484((uint64_t)v727, v352 + v634 + v360 * v626, (uint64_t (*)(void))sub_1C297A894);
        uint64_t v341 = v736;
      }
      ++v354;
      v357 += v358;
      uint64_t v355 = (uint64_t)v728;
      if (v353 == v354)
      {
        uint64_t v352 = v748[0];
        uint64_t v346 = v611;
        goto LABEL_65;
      }
    }
    goto LABEL_128;
  }
LABEL_65:
  swift_bridgeObjectRelease();
  Swift::Int v376 = *(void *)(v352 + 16);
  swift_release();
  uint64_t v377 = *(void *)(v351 + 16);
  swift_bridgeObjectRelease();
  uint64_t v378 = v713;
  sub_1C2A9C378();
  uint64_t v379 = v741;
  uint64_t v380 = v741 + *(int *)(v341 + 48);
  ((void (*)(uint64_t, uint64_t, uint64_t))v731)(v741, v715, v346);
  unsigned __int8 v381 = v742[8];
  *(void *)uint64_t v380 = *(void *)v742;
  *(unsigned char *)(v380 + 8) = v381;
  sub_1C2A9C348();
  v747 = (void *)(v712 + 8);
  ((void (*)(uint64_t, uint64_t))v732)(v379, v346);
  unint64_t result = sub_1C2A9C358();
  uint64_t v249 = v744;
  if (v297 < v636)
  {
    uint64_t v382 = v741;
    sub_1C2A623C8((uint64_t)&v612[v297 * v626], v741, (uint64_t (*)(void))sub_1C297A894);
    uint64_t v383 = v621;
    ((void (*)(uint64_t, uint64_t, uint64_t))v740)(v621, v382, v346);
    sub_1C2A9C378();
    sub_1C2A9C348();
    uint64_t v384 = v620;
    sub_1C2A9C358();
    if (SignificantChangeEngine.fisherExactLess(a:b:c:d:)(v377 - v376, v298, v376, 0) <= v231)
    {
      double v404 = (double)v376 / (double)v377;
      uint64_t v405 = v674;
      uint64_t v406 = v611;
      uint64_t v407 = (void (*)(uint64_t, uint64_t, uint64_t))v731;
      ((void (*)(uint64_t, uint64_t, uint64_t))v731)(v674, v622, v611);
      uint64_t v408 = (int *)v703;
      *(void *)(v405 + *(int *)(v703 + 20)) = 0;
      *(double *)(v405 + v408[6]) = v404;
      *(unsigned char *)(v405 + v408[7]) = 2;
      uint64_t v409 = v675;
      v407(v675, v384, v406);
      *(void *)(v409 + v408[5]) = 0;
      *(void *)(v409 + v408[6]) = 0;
      *(unsigned char *)(v409 + v408[7]) = 1;
      sub_1C2A623C8(v405, v671, type metadata accessor for SignificantChange.Period);
      sub_1C2A79D08(0);
      v410 = v378;
      unint64_t v411 = (*(unsigned __int8 *)(v711 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v711 + 80);
      uint64_t v412 = (_OWORD *)swift_allocObject();
      v737 = v412;
      v412[1] = xmmword_1C2AA6B00;
      sub_1C2A623C8(v409, (uint64_t)v412 + v411, type metadata accessor for SignificantChange.Period);
      sub_1C2A9C378();
      v413 = v698;
      sub_1C2A9C708();
      uint64_t v414 = sub_1C2A9C6F8();
      uint64_t v416 = v415;
      (*(void (**)(char *, uint64_t))(v699 + 8))(v413, v700);
      uint64_t v417 = v710;
      uint64_t v418 = (uint64_t)v647;
      v419 = &v647[*(int *)(v710 + 24)];
      _s19HealthVisualization25PresentationDateProvidingPAAE012presentationD010Foundation0D0VvgZ_0();
      *(void *)uint64_t v418 = v414;
      *(void *)(v418 + 8) = v416;
      *(unsigned char *)(v418 + 16) = 0;
      uint64_t v420 = v418 + *(int *)(v417 + 28);
      uint64_t v421 = v633;
      uint64_t v422 = v631;
      (*(void (**)(uint64_t, char *, uint64_t))(v633 + 32))(v420, v410, v631);
      uint64_t v423 = (uint64_t)v648;
      uint64_t v424 = *(void (**)(char *, char *, uint64_t))(v421 + 16);
      v424(&v648[*(int *)(v417 + 24)], v419, v422);
      v424((char *)(v423 + *(int *)(v417 + 28)), (char *)v420, v422);
      *(void *)uint64_t v423 = v414;
      *(void *)(v423 + 8) = v416;
      *(unsigned char *)(v423 + 16) = 1;
      swift_bridgeObjectRetain();
      sub_1C2A62588(v418, type metadata accessor for SignificantChange.Notification);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v701 + 56))(v423, 0, 1, v417);
      uint64_t v425 = v670;
      sub_1C2A62484(v671, v670, type metadata accessor for SignificantChange.Period);
      uint64_t v426 = v745;
      *(void *)(v425 + *(int *)(v745 + 20)) = v737;
      sub_1C2A62484(v423, v425 + *(int *)(v426 + 24), (uint64_t (*)(void))sub_1C2A64008);
      uint64_t v427 = v741;
      uint64_t v428 = v741 + *(int *)(v736 + 48);
      uint64_t v429 = v611;
      ((void (*)(uint64_t, uint64_t, uint64_t))v731)(v741, v715, v611);
      unsigned __int8 v430 = v742[8];
      *(void *)uint64_t v428 = *(void *)v742;
      *(unsigned char *)(v428 + 8) = v430;
      uint64_t v431 = (uint64_t)v678;
      sub_1C2A9C348();
      ((void (*)(uint64_t, uint64_t))v732)(v427, v429);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v633 + 56))(v431, 0, 1, v422);
      uint64_t v432 = v730;
      uint64_t v433 = v669;
      uint64_t v434 = v669 + *(int *)(v730 + 24);
      sub_1C2A623C8(v425, v434, type metadata accessor for SignificantChange);
      uint64_t v435 = (void (*)(uint64_t, void, uint64_t, uint64_t))v746[7];
      v435(v434, 0, 1, v426);
      sub_1C2A62484(v431, v433, (uint64_t (*)(void))sub_1C2A62B24);
      *(unsigned char *)(v433 + *(int *)(v432 + 20)) = 1;
      v435(v672, 1, 1, v426);
      uint64_t v436 = v673;
      sub_1C2A623C8(v425, v673, type metadata accessor for SignificantChange);
      v435(v436, 0, 1, v426);
      uint64_t v437 = v644;
      sub_1C2A623C8(v733, v644, type metadata accessor for SignificantChangeEngine.State);
      uint64_t v438 = v738;
      uint64_t v439 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v739 + 56);
      v739 += 56;
      v439(v437, 0, 1, v738);
      uint64_t v440 = v646;
      sub_1C2A623C8(v433, v646, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v726 + 56))(v440, 0, 1, v432);
      ((void (*)(uint64_t, uint64_t, uint64_t))v731)(v615, v635, v429);
      uint64_t v441 = v643;
      sub_1C2A623B0(v437, v643);
      if (v629(v441, 1, v438) == 1)
      {
        sub_1C2A62588(v441, (uint64_t (*)(void))sub_1C2A62430);
        uint64_t v442 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
        uint64_t v443 = v649;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v442 - 8) + 56))(v649, 1, 1, v442);
      }
      else
      {
        uint64_t v443 = v649;
        sub_1C2A62A14(v441 + *(int *)(v438 + 20), v649);
        sub_1C2A62588(v441, type metadata accessor for SignificantChangeEngine.State);
      }
      uint64_t v249 = v744;
      uint64_t v498 = (uint64_t)v645;
      sub_1C2A62A80(v440, (uint64_t)&v645[*(int *)(v438 + 24)]);
      uint64_t v499 = v611;
      ((void (*)(uint64_t, uint64_t, uint64_t))v740)(v498, v615, v611);
      sub_1C2A62484(v443, v498 + *(int *)(v438 + 20), (uint64_t (*)(void))sub_1C2A62A2C);
      sub_1C2A62588(v440, (uint64_t (*)(void))sub_1C2A62A98);
      sub_1C2A62588(v437, (uint64_t (*)(void))sub_1C2A62430);
      sub_1C2A62588(v669, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
      sub_1C2A62588(v670, type metadata accessor for SignificantChange);
      sub_1C2A62588(v675, type metadata accessor for SignificantChange.Period);
      sub_1C2A62588(v674, type metadata accessor for SignificantChange.Period);
      v500 = (void (*)(uint64_t, uint64_t))v732;
      ((void (*)(uint64_t, uint64_t))v732)(v620, v499);
      v500(v621, v499);
      v500(v622, v499);
      sub_1C2A62588(v715, (uint64_t (*)(void))sub_1C297A894);
      sub_1C2A62588(v733, type metadata accessor for SignificantChangeEngine.State);
      sub_1C2A62588(v729, type metadata accessor for SignificantChangeEngine.State);
      v500(v635, v499);
      v500((uint64_t)v734, v499);
      v439(v498, 0, 1, v438);
      sub_1C2A62484(v672, v249, (uint64_t (*)(void))sub_1C2A6235C);
      uint64_t v250 = type metadata accessor for SignificantChangeEngine.Output(0);
      sub_1C2A62484(v673, v249 + *(int *)(v250 + 20), (uint64_t (*)(void))sub_1C2A6235C);
      sub_1C2A62484(v498, v249 + *(int *)(v250 + 24), (uint64_t (*)(void))sub_1C2A62430);
      (*(void (**)(char *, uint64_t))(v633 + 8))(v724, v631);
      goto LABEL_110;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v746[7])(v667, 1, 1, v745);
    sub_1C2A62344((uint64_t)&v632[*(int *)(v730 + 24)], v668);
    uint64_t v385 = v733;
    uint64_t v386 = v714;
    sub_1C2A623C8(v733, v714, type metadata accessor for SignificantChangeEngine.State);
    v746 = *(void **)(v739 + 56);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v746)(v386, 0, 1, v738);
    uint64_t v387 = v735;
    uint64_t v388 = v635;
    sub_1C2A5C364(v386, v635, v735);
    sub_1C2A62588(v386, (uint64_t (*)(void))sub_1C2A62430);
    uint64_t v389 = v384;
    uint64_t v390 = v611;
    unsigned int v391 = (void (*)(uint64_t, uint64_t))v732;
    ((void (*)(uint64_t, uint64_t))v732)(v389, v611);
    v391(v383, v390);
    v391(v622, v390);
    sub_1C2A62588(v715, (uint64_t (*)(void))sub_1C297A894);
    sub_1C2A62588(v385, type metadata accessor for SignificantChangeEngine.State);
    sub_1C2A62588(v729, type metadata accessor for SignificantChangeEngine.State);
    v391(v388, v390);
    v391((uint64_t)v734, v390);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v746)(v387, 0, 1, v738);
    sub_1C2A62484(v667, v249, (uint64_t (*)(void))sub_1C2A6235C);
    uint64_t v250 = type metadata accessor for SignificantChangeEngine.Output(0);
    sub_1C2A62484(v668, v249 + *(int *)(v250 + 20), (uint64_t (*)(void))sub_1C2A6235C);
    uint64_t v392 = v249 + *(int *)(v250 + 24);
    uint64_t v393 = v387;
    goto LABEL_70;
  }
LABEL_132:
  __break(1u);
  return result;
}

uint64_t sub_1C2A59118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v149 = a2;
  uint64_t v159 = a3;
  sub_1C2A62A98(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A62A2C(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v136 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C2A9C6E8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v148 = (char *)&v136 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v136 - v16;
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2A79E18(0, &qword_1EBB8E870, (uint64_t (*)(uint64_t))sub_1C297A894, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v153 = (char *)&v136 - v20;
  sub_1C297A894();
  uint64_t v158 = v21;
  uint64_t v160 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v151 = (char *)&v136 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v150 = (uint64_t)&v136 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v152 = (uint64_t)&v136 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v154 = (uint64_t)&v136 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v157 = (uint64_t)&v136 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v136 - v32;
  sub_1C2A79E18(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], v18);
  MEMORY[0x1F4188790](v34 - 8);
  uint64_t v156 = (char *)&v136 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v136 - v37;
  uint64_t v39 = sub_1C2A9C398();
  uint64_t v40 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  MEMORY[0x1F4188790](v41);
  __n128 v47 = MEMORY[0x1F4188790](v42);
  uint64_t v48 = *(void *)(a1 + 16);
  if (!v48)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v40 + 56))(v38, 1, 1, v39, v47);
    goto LABEL_6;
  }
  uint64_t v147 = v45;
  uint64_t v155 = (char *)&v136 - v43;
  uint64_t v140 = v44;
  uint64_t v143 = v17;
  uint64_t v144 = v13;
  uint64_t v141 = v12;
  uint64_t v142 = v11;
  uint64_t v139 = v8;
  unint64_t v49 = (*(unsigned __int8 *)(v160 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v160 + 80);
  uint64_t v145 = v46;
  uint64_t v50 = v46 + v49;
  sub_1C2A623C8(v46 + v49, (uint64_t)v33, (uint64_t (*)(void))sub_1C297A894);
  uint64_t v51 = v40;
  uint64_t v54 = *(void (**)(void))(v40 + 32);
  uint64_t v53 = v40 + 32;
  uint64_t v52 = v54;
  ((void (*)(char *, char *, uint64_t))v54)(v38, v33, v39);
  uint64_t v55 = *(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56);
  v55(v38, 0, 1, v39);
  uint64_t v146 = v51;
  uint64_t v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
  if (v56(v38, 1, v39) == 1)
  {
LABEL_6:
    sub_1C2A62D30((uint64_t)v38, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60]);
    uint64_t v57 = type metadata accessor for SignificantChangeEngine.State(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v159, 1, 1, v57);
  }
  ((void (*)(char *, char *, uint64_t))v52)(v155, v38, v39);
  uint64_t v161 = *(void (**)(char *, uint64_t))(v160 + 72);
  sub_1C2A623C8(v50 + (void)v161 * (v48 - 1), v157, (uint64_t (*)(void))sub_1C297A894);
  uint64_t v38 = v156;
  v52();
  v55(v38, 0, 1, v39);
  if (v56(v38, 1, v39) == 1)
  {
    (*(void (**)(char *, uint64_t))(v146 + 8))(v155, v39);
    goto LABEL_6;
  }
  uint64_t v59 = v52;
  ((void (*)(uint64_t, char *, uint64_t))v52)(v147, v38, v39);
  uint64_t v60 = v153;
  sub_1C2A5A264(v145, (uint64_t)v153);
  uint64_t v61 = v158;
  int v62 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v160 + 48))(v60, 1, v158);
  uint64_t v138 = v53;
  uint64_t v137 = v59;
  if (v62 == 1)
  {
    sub_1C2A62D30((uint64_t)v60, &qword_1EBB8E870, (uint64_t (*)(uint64_t))sub_1C297A894);
    uint64_t v63 = (uint64_t)v142;
    uint64_t v64 = v143;
LABEL_13:
    uint64_t v75 = v146;
    uint64_t v76 = v147;
    uint64_t v77 = v140;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v146 + 16))(v140, v147, v39);
    uint64_t v78 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v63, 1, 1, v78);
    uint64_t v79 = v155;
    sub_1C2A9C378();
    uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v80(v76, v39);
    v80((uint64_t)v79, v39);
    uint64_t v81 = v144;
    uint64_t v82 = (uint64_t)v139;
    uint64_t v83 = v141;
    (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v139, v64, v141);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56))(v82, 0, 1, v83);
    uint64_t v84 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
    uint64_t v85 = v82 + *(int *)(v84 + 24);
    uint64_t v86 = type metadata accessor for SignificantChange(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v85, 1, 1, v86);
    *(unsigned char *)(v82 + *(int *)(v84 + 20)) = 1;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v64, v83);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v82, 0, 1, v84);
    uint64_t v87 = v159;
    ((void (*)(uint64_t, uint64_t, uint64_t))v137)(v159, v77, v39);
    uint64_t v88 = type metadata accessor for SignificantChangeEngine.State(0);
    sub_1C2A62484(v63, v87 + *(int *)(v88 + 20), (uint64_t (*)(void))sub_1C2A62A2C);
    uint64_t v89 = v87 + *(int *)(v88 + 24);
    uint64_t v90 = v82;
  }
  else
  {
    uint64_t v65 = *(int *)(v61 + 48);
    uint64_t v66 = v154 + v65;
    uint64_t v67 = &v60[v65];
    uint64_t v68 = v39;
    v59();
    int v69 = v67[8];
    uint64_t v70 = v158;
    uint64_t v160 = *(void *)v67;
    *(void *)uint64_t v66 = v160;
    LODWORD(v156) = v69;
    *(unsigned char *)(v66 + 8) = v69;
    uint64_t v71 = (uint64_t)v151;
    swift_bridgeObjectRetain();
    uint64_t v72 = v50;
    uint64_t v73 = v48;
    uint64_t v64 = v143;
    uint64_t v74 = v157;
    while (1)
    {
      sub_1C2A623C8(v72, v71, (uint64_t (*)(void))sub_1C297A894);
      if (*(unsigned char *)(v71 + 8 + *(int *)(v70 + 48)) != 1) {
        break;
      }
      sub_1C2A62588(v71, (uint64_t (*)(void))sub_1C297A894);
      v72 += (uint64_t)v161;
      if (!--v73)
      {
        swift_bridgeObjectRelease();
        sub_1C2A62588(v154, (uint64_t (*)(void))sub_1C297A894);
        uint64_t v39 = v68;
        uint64_t v63 = (uint64_t)v142;
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v91 = v152;
    uint64_t v92 = v152 + *(int *)(v158 + 48);
    uint64_t v93 = v150;
    sub_1C2A62484(v71, v150, (uint64_t (*)(void))sub_1C297A894);
    uint64_t v94 = v93 + *(int *)(v158 + 48);
    uint64_t v95 = v93;
    uint64_t v96 = v68;
    ((void (*)(uint64_t, uint64_t, uint64_t))v137)(v91, v95, v68);
    uint64_t v97 = *(char **)v94;
    int v98 = *(unsigned __int8 *)(v94 + 8);
    *(void *)uint64_t v92 = *(void *)v94;
    *(unsigned char *)(v92 + 8) = v98;
    uint64_t v99 = v158;
    swift_bridgeObjectRetain();
    uint64_t v100 = 0;
    do
    {
      uint64_t result = sub_1C2A623C8(v50, v74, (uint64_t (*)(void))sub_1C297A894);
      uint64_t v101 = (*(unsigned char *)(v74 + 8 + *(int *)(v99 + 48)) & 1) == 0;
      BOOL v102 = __OFADD__(v100, v101);
      v100 += v101;
      if (v102)
      {
        __break(1u);
        return result;
      }
      sub_1C2A62588(v74, (uint64_t (*)(void))sub_1C297A894);
      v50 += (uint64_t)v161;
      --v48;
    }
    while (v48);
    LODWORD(v150) = v98;
    uint64_t v151 = v97;
    swift_bridgeObjectRelease();
    sub_1C2A9C348();
    sub_1C2A9C5F8();
    double v104 = v103;
    uint64_t v105 = v144 + 8;
    uint64_t v161 = *(void (**)(char *, uint64_t))(v144 + 8);
    uint64_t v106 = v141;
    v161(v64, v141);
    uint64_t v107 = v74 + *(int *)(v99 + 48);
    uint64_t v108 = v146;
    uint64_t v109 = *(void (**)(uint64_t, uint64_t, uint64_t))(v146 + 16);
    v109(v74, v154, v96);
    *(void *)uint64_t v107 = v160;
    *(unsigned char *)(v107 + 8) = (_BYTE)v156;
    uint64_t v110 = v148;
    sub_1C2A9C348();
    uint64_t v153 = *(char **)(v108 + 8);
    uint64_t v146 = v108 + 8;
    ((void (*)(uint64_t, uint64_t))v153)(v74, v96);
    sub_1C2A9C5F8();
    double v112 = v111;
    v161(v110, v106);
    double v113 = v104 - v112;
    uint64_t v114 = v96;
    v109(v140, v147, v96);
    uint64_t v115 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56))(v142, 1, 1, v115);
    uint64_t v116 = v74 + *(int *)(v158 + 48);
    uint64_t v144 = v105;
    uint64_t v158 = v105 + 48;
    if (v100 >= v149 && v113 < a4)
    {
      uint64_t v129 = v152;
      v109(v74, v152, v96);
      *(void *)uint64_t v116 = v151;
      *(unsigned char *)(v116 + 8) = v150;
      uint64_t v130 = v143;
      sub_1C2A9C378();
      sub_1C2A62588(v129, (uint64_t (*)(void))sub_1C297A894);
      sub_1C2A62588(v154, (uint64_t (*)(void))sub_1C297A894);
      uint64_t v131 = v153;
      ((void (*)(uint64_t, uint64_t))v153)(v147, v114);
      ((void (*)(char *, uint64_t))v131)(v155, v114);
      ((void (*)(uint64_t, uint64_t))v131)(v74, v114);
      uint64_t v121 = (uint64_t)v139;
      uint64_t v132 = v141;
      (*(void (**)(char *, char *, uint64_t))(v105 + 8))(v139, v130, v141);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))v158)(v121, 0, 1, v132);
      uint64_t v133 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
      uint64_t v134 = v121 + *(int *)(v133 + 24);
      uint64_t v135 = type metadata accessor for SignificantChange(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56))(v134, 1, 1, v135);
      *(unsigned char *)(v121 + *(int *)(v133 + 20)) = 0;
      v161(v130, v132);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v133 - 8) + 56))(v121, 0, 1, v133);
      uint64_t v87 = v159;
      uint64_t v126 = v159;
      uint64_t v127 = v140;
      uint64_t v128 = v114;
    }
    else
    {
      uint64_t v118 = v154;
      v109(v74, v154, v96);
      *(void *)uint64_t v116 = v160;
      *(unsigned char *)(v116 + 8) = (_BYTE)v156;
      uint64_t v119 = v143;
      sub_1C2A9C348();
      sub_1C2A62588(v152, (uint64_t (*)(void))sub_1C297A894);
      sub_1C2A62588(v118, (uint64_t (*)(void))sub_1C297A894);
      uint64_t v120 = v153;
      ((void (*)(uint64_t, uint64_t))v153)(v147, v96);
      ((void (*)(char *, uint64_t))v120)(v155, v96);
      ((void (*)(uint64_t, uint64_t))v120)(v74, v96);
      uint64_t v121 = (uint64_t)v139;
      uint64_t v122 = v141;
      (*(void (**)(char *, char *, uint64_t))(v105 + 8))(v139, v119, v141);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))v158)(v121, 0, 1, v122);
      uint64_t v123 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
      uint64_t v124 = v121 + *(int *)(v123 + 24);
      uint64_t v125 = type metadata accessor for SignificantChange(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v124, 1, 1, v125);
      *(unsigned char *)(v121 + *(int *)(v123 + 20)) = 1;
      v161(v119, v122);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56))(v121, 0, 1, v123);
      uint64_t v87 = v159;
      uint64_t v126 = v159;
      uint64_t v127 = v140;
      uint64_t v128 = v96;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t))v137)(v126, v127, v128);
    uint64_t v88 = type metadata accessor for SignificantChangeEngine.State(0);
    sub_1C2A62484((uint64_t)v142, v87 + *(int *)(v88 + 20), (uint64_t (*)(void))sub_1C2A62A2C);
    uint64_t v89 = v87 + *(int *)(v88 + 24);
    uint64_t v90 = v121;
  }
  sub_1C2A62484(v90, v89, (uint64_t (*)(void))sub_1C2A62A98);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v87, 0, 1, v88);
}

uint64_t sub_1C2A5A264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    sub_1C297A894();
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v7 + 72);
    uint64_t v9 = *(int *)(v5 + 48);
    uint64_t v10 = a1
        + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
        + v8 * (v3 - 1);
    while ((*(unsigned char *)(v10 + v9 + 8) & 1) != 0)
    {
      v10 -= v8;
      if (!--v3) {
        goto LABEL_5;
      }
    }
    sub_1C2A623C8(v10, a2, (uint64_t (*)(void))sub_1C297A894);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
  }
  else
  {
LABEL_5:
    sub_1C297A894();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
}

uint64_t sub_1C2A5A3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C2A62A2C(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v185 = (uint64_t)&v169 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A62430(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v186 = (uint64_t)&v169 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v189 = (uint64_t)&v169 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v198 = (uint64_t)&v169 - v15;
  uint64_t v202 = type metadata accessor for SignificantChangeEngine.State(0);
  uint64_t v192 = *(void *)(v202 - 8);
  MEMORY[0x1F4188790](v202);
  uint64_t v197 = (uint64_t)&v169 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v169 - v18;
  uint64_t v196 = sub_1C2A9C6E8();
  uint64_t v193 = *(void *)(v196 - 8);
  MEMORY[0x1F4188790](v196);
  uint64_t v191 = (char *)&v169 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v194 = (char *)&v169 - v22;
  sub_1C2A62A98(0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v190 = (char *)&v169 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v188 = (uint64_t)&v169 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v200 = (uint64_t)&v169 - v28;
  uint64_t v203 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
  uint64_t v201 = *(void *)(v203 - 8);
  MEMORY[0x1F4188790](v203);
  uint64_t v30 = (char *)&v169 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A79E18(0, (unint64_t *)&qword_1EBB92480, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v208 = (char *)&v169 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v211 = (char *)&v169 - v34;
  uint64_t v35 = sub_1C2A9C398();
  uint64_t v36 = *(char **)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v187 = (char *)&v169 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38);
  uint64_t v195 = (char *)&v169 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v199 = (char *)&v169 - v41;
  MEMORY[0x1F4188790](v42);
  uint64_t v204 = (char *)&v169 - v43;
  MEMORY[0x1F4188790](v44);
  uint64_t v210 = (char *)&v169 - v45;
  sub_1C297A894();
  MEMORY[0x1F4188790](v46);
  MEMORY[0x1F4188790](v47);
  MEMORY[0x1F4188790](v48);
  MEMORY[0x1F4188790](v49);
  MEMORY[0x1F4188790](v50);
  uint64_t v52 = (char *)&v169 - v51;
  MEMORY[0x1F4188790](v53);
  uint64_t v61 = *(void *)(a1 + 16);
  if (!v61)
  {
    uint64_t v84 = a3;
    uint64_t v85 = a4;
    return sub_1C2A623C8(v84, v85, type metadata accessor for SignificantChangeEngine.State);
  }
  uint64_t v175 = v56;
  uint64_t v178 = v60;
  uint64_t v181 = v59;
  uint64_t v182 = v30;
  uint64_t v170 = v19;
  uint64_t v209 = a3;
  uint64_t v205 = a4;
  uint64_t v176 = *(void *)(a2 + 24);
  double v62 = *(double *)(a2 + 48);
  uint64_t v206 = (void (**)(char *, uint64_t))((char *)&v169 + *(int *)(v54 + 48) - v58);
  uint64_t v63 = (void (*)(char *, uint64_t))(v61 - 1);
  unint64_t v64 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  uint64_t v65 = v35;
  uint64_t v180 = (void (*)(char *, uint64_t))a1;
  unint64_t v172 = v64;
  uint64_t v66 = a1 + v64;
  uint64_t v171 = *(void *)(v57 + 72);
  uint64_t v179 = v63;
  uint64_t v67 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(a1 + v64 + v171 * (void)v63);
  uint64_t v68 = (void (**)(char *, uint64_t))v36;
  int v69 = (char *)&v169 - v58;
  uint64_t v70 = v54;
  uint64_t v183 = v67;
  uint64_t v71 = v55;
  sub_1C2A623C8((uint64_t)v67, (uint64_t)v52, (uint64_t (*)(void))sub_1C297A894);
  uint64_t v177 = v70;
  uint64_t v72 = &v52[*(int *)(v70 + 48)];
  uint64_t v74 = (uint64_t)(v36 + 32);
  uint64_t v73 = (void (*)(char *, char *, uint64_t))*((void *)v36 + 4);
  uint64_t v207 = v69;
  uint64_t v75 = v69;
  uint64_t v76 = (char *)v71;
  v73(v75, v52, v65);
  int v77 = v72[8];
  uint64_t v174 = *(void (**)(char *, uint64_t))v72;
  uint64_t v78 = v206;
  *uint64_t v206 = v174;
  int v173 = v77;
  *((unsigned char *)v78 + 8) = v77;
  sub_1C2A623C8(v66, v71, (uint64_t (*)(void))sub_1C297A894);
  uint64_t v79 = (void (*)(void, void, void))v211;
  uint64_t v184 = v73;
  v73(v211, (char *)v71, v65);
  uint64_t v80 = (void (*)(void (*)(void, void, void), void, uint64_t, uint64_t))*((void *)v36 + 7);
  v80(v79, 0, 1, v65);
  uint64_t v206 = v68;
  uint64_t v81 = v68[6];
  if (((unsigned int (*)(void, uint64_t, uint64_t))v81)(v79, 1, v65) == 1)
  {
    sub_1C2A62588((uint64_t)v207, (uint64_t (*)(void))sub_1C297A894);
    uint64_t v82 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F26E60];
    uint64_t v83 = (void (*)(void, void, void))v211;
LABEL_7:
    sub_1C2A62D30((uint64_t)v83, (unint64_t *)&qword_1EBB92480, v82);
LABEL_8:
    uint64_t v84 = v209;
LABEL_9:
    uint64_t v85 = v205;
    return sub_1C2A623C8(v84, v85, type metadata accessor for SignificantChangeEngine.State);
  }
  uint64_t v86 = v210;
  uint64_t v87 = v184;
  v184(v210, v211, v65);
  sub_1C2A623C8((uint64_t)v183, (uint64_t)v76, (uint64_t (*)(void))sub_1C297A894);
  uint64_t v88 = v208;
  uint64_t v211 = v76;
  v87(v208, v76, v65);
  v80((void (*)(void, void, void))v88, 0, 1, v65);
  uint64_t v89 = v65;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v81)(v88, 1, v65) == 1)
  {
    v206[1](v86, v65);
    sub_1C2A62588((uint64_t)v207, (uint64_t (*)(void))sub_1C297A894);
    uint64_t v82 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F26E60];
    uint64_t v83 = (void (*)(void, void, void))v88;
    goto LABEL_7;
  }
  uint64_t v91 = v74;
  uint64_t v92 = v204;
  v87(v204, v88, v65);
  uint64_t v93 = v209;
  uint64_t v94 = v200;
  sub_1C2A62A80(v209 + *(int *)(v202 + 24), v200);
  uint64_t v95 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v201 + 48);
  uint64_t v96 = v203;
  uint64_t v208 = (char *)(v201 + 48);
  unsigned int v97 = v95(v94, 1, v203);
  int v98 = v206;
  if (v97 == 1)
  {
    uint64_t v99 = v206[1];
    v99(v92, v89);
    v99(v210, v89);
    sub_1C2A62588((uint64_t)v207, (uint64_t (*)(void))sub_1C297A894);
    uint64_t v100 = (uint64_t (*)(void))sub_1C2A62A98;
    uint64_t v101 = v94;
LABEL_18:
    sub_1C2A62588(v101, v100);
    uint64_t v84 = v93;
    goto LABEL_9;
  }
  uint64_t v183 = v95;
  uint64_t v102 = (uint64_t)v182;
  sub_1C2A62484(v94, (uint64_t)v182, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
  if ((*(unsigned char *)(v102 + *(int *)(v96 + 20)) & 1) == 0)
  {
    sub_1C2A62588(v102, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
    double v111 = v98[1];
    v111(v92, v89);
    v111(v210, v89);
    uint64_t v100 = (uint64_t (*)(void))sub_1C297A894;
    uint64_t v101 = (uint64_t)v207;
    goto LABEL_18;
  }
  uint64_t v200 = v91;
  uint64_t v103 = sub_1C2A5B9C4((uint64_t)v179, (uint64_t)v180);
  uint64_t v105 = v104;
  uint64_t v107 = v106;
  unint64_t v109 = v108;
  if ((v108 & 1) == 0)
  {
    swift_bridgeObjectRetain();
LABEL_16:
    uint64_t v110 = (char *)sub_1C2A5F2A0(v103, v105, v107, v109, sub_1C2A79DE4, (uint64_t (*)(void))sub_1C297A894);
    goto LABEL_25;
  }
  sub_1C2A9E8F8();
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v112 = swift_dynamicCastClass();
  if (!v112)
  {
    swift_unknownObjectRelease();
    uint64_t v112 = MEMORY[0x1E4FBC860];
  }
  uint64_t v113 = *(void *)(v112 + 16);
  swift_release();
  if (__OFSUB__(v109 >> 1, v107))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v113 != (v109 >> 1) - v107)
  {
LABEL_42:
    swift_unknownObjectRelease();
    goto LABEL_16;
  }
  uint64_t v110 = (char *)swift_dynamicCastClass();
  if (!v110)
  {
    swift_unknownObjectRelease();
    uint64_t v110 = (char *)MEMORY[0x1E4FBC860];
  }
LABEL_25:
  swift_unknownObjectRelease();
  uint64_t v114 = *((void *)v110 + 2);
  uint64_t v115 = v206;
  if (!v114)
  {
    swift_release();
    sub_1C2A62588(v102, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
    uint64_t v157 = v115[1];
    v157(v204, v89);
    v157(v210, v89);
    sub_1C2A62588((uint64_t)v207, (uint64_t (*)(void))sub_1C297A894);
    goto LABEL_8;
  }
  uint64_t v116 = v177;
  uint64_t v117 = v181;
  uint64_t v118 = v181 + *(int *)(v177 + 48);
  uint64_t v119 = v175;
  sub_1C2A623C8((uint64_t)&v110[v172 + (v114 - 1) * v171], v175, (uint64_t (*)(void))sub_1C297A894);
  uint64_t v120 = v119 + *(int *)(v116 + 48);
  v184((char *)v117, (char *)v119, v89);
  uint64_t v179 = *(void (**)(char *, uint64_t))v120;
  unsigned __int8 v121 = *(unsigned char *)(v120 + 8);
  LODWORD(v175) = v121;
  *(void *)uint64_t v118 = v179;
  *(unsigned char *)(v118 + 8) = v121;
  uint64_t v122 = v211;
  uint64_t v123 = &v211[*(int *)(v116 + 48)];
  uint64_t v124 = v115[2];
  ((void (*)(char *, char *, uint64_t))v124)(v211, v207, v89);
  *(void *)uint64_t v123 = v174;
  v123[8] = v173;
  uint64_t v125 = v194;
  sub_1C2A9C348();
  uint64_t v127 = v115[1];
  uint64_t v126 = v115 + 1;
  uint64_t v180 = v127;
  v127(v122, v89);
  sub_1C2A9C5F8();
  double v129 = v128;
  uint64_t v211 = v110;
  uint64_t v131 = (char *)(v193 + 8);
  uint64_t v130 = *(void (**)(char *, uint64_t))(v193 + 8);
  uint64_t v132 = v196;
  v130(v125, v196);
  uint64_t v133 = *(int *)(v116 + 48);
  uint64_t v134 = v89;
  uint64_t v135 = v178;
  uint64_t v136 = &v178[v133];
  ((void (*)(char *, uint64_t, uint64_t))v124)(v178, v181, v89);
  *(void *)uint64_t v136 = v179;
  v136[8] = v175;
  uint64_t v137 = v180;
  uint64_t v138 = v191;
  sub_1C2A9C348();
  v137(v135, v134);
  sub_1C2A9C5F8();
  double v140 = v139;
  uint64_t v191 = v131;
  uint64_t v179 = v130;
  v130(v138, v132);
  uint64_t v141 = v198;
  sub_1C2A59118((uint64_t)v211, v176, v198, v62 - (v129 - v140));
  swift_release();
  uint64_t v142 = v197;
  sub_1C2A623C8(v209, v197, type metadata accessor for SignificantChangeEngine.State);
  ((void (*)(char *, char *, uint64_t))v124)(v199, v204, v134);
  uint64_t v143 = v195;
  uint64_t v211 = (char *)v124;
  ((void (*)(char *, char *, uint64_t))v124)(v195, v210, v134);
  uint64_t v144 = v192;
  uint64_t v145 = v202;
  uint64_t v178 = *(char **)(v192 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v178)(v141, 1, v202) == 1)
  {
    uint64_t v206 = v126;
    uint64_t v146 = v189;
    sub_1C2A623C8(v142, v189, type metadata accessor for SignificantChangeEngine.State);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v144 + 56))(v146, 0, 1, v145);
    uint64_t v147 = v194;
    sub_1C2A9C378();
    uint64_t v148 = v193;
    uint64_t v149 = v196;
    uint64_t v150 = v188;
    (*(void (**)(uint64_t, char *, uint64_t))(v193 + 16))(v188, v147, v196);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v148 + 56))(v150, 0, 1, v149);
    uint64_t v151 = v203;
    uint64_t v152 = v150 + *(int *)(v203 + 24);
    uint64_t v153 = type metadata accessor for SignificantChange(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 56))(v152, 1, 1, v153);
    *(unsigned char *)(v150 + *(int *)(v151 + 20)) = 1;
    v179(v147, v149);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v201 + 56))(v150, 0, 1, v151);
    ((void (*)(char *, char *, uint64_t))v211)(v187, v199, v134);
    uint64_t v154 = v186;
    sub_1C2A623B0(v146, v186);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v178)(v154, 1, v145) == 1)
    {
      sub_1C2A62588(v154, (uint64_t (*)(void))sub_1C2A62430);
      uint64_t v155 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
      uint64_t v156 = v185;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 56))(v185, 1, 1, v155);
    }
    else
    {
      uint64_t v156 = v185;
      sub_1C2A62A14(v154 + *(int *)(v145 + 20), v185);
      sub_1C2A62588(v154, type metadata accessor for SignificantChangeEngine.State);
    }
    uint64_t v160 = v209;
    uint64_t v159 = (uint64_t)v170;
    uint64_t v161 = (uint64_t)v182;
    uint64_t v164 = v180;
    uint64_t v165 = v188;
    sub_1C2A62A80(v188, (uint64_t)&v170[*(int *)(v145 + 24)]);
    v184((char *)v159, v187, v134);
    sub_1C2A62484(v156, v159 + *(int *)(v145 + 20), (uint64_t (*)(void))sub_1C2A62A2C);
    sub_1C2A62588(v165, (uint64_t (*)(void))sub_1C2A62A98);
    sub_1C2A62588(v189, (uint64_t (*)(void))sub_1C2A62430);
    v164(v195, v134);
    v164(v199, v134);
    sub_1C2A62588(v197, type metadata accessor for SignificantChangeEngine.State);
    sub_1C2A62588(v198, (uint64_t (*)(void))sub_1C2A62430);
    uint64_t v162 = (uint64_t)v190;
    uint64_t v163 = v203;
  }
  else
  {
    v137(v143, v134);
    v137(v199, v134);
    sub_1C2A62588(v142, type metadata accessor for SignificantChangeEngine.State);
    uint64_t v158 = v141;
    uint64_t v159 = (uint64_t)v170;
    sub_1C2A62484(v158, (uint64_t)v170, type metadata accessor for SignificantChangeEngine.State);
    uint64_t v160 = v209;
    uint64_t v161 = (uint64_t)v182;
    uint64_t v162 = (uint64_t)v190;
    uint64_t v163 = v203;
    uint64_t v164 = v137;
  }
  sub_1C2A62A80(v159 + *(int *)(v145 + 24), v162);
  if (v183(v162, 1, v163) == 1)
  {
    sub_1C2A62588(v162, (uint64_t (*)(void))sub_1C2A62A98);
    sub_1C2A62588(v181, (uint64_t (*)(void))sub_1C297A894);
    sub_1C2A62588(v161, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
    v164(v204, v134);
    v164(v210, v134);
    sub_1C2A62588((uint64_t)v207, (uint64_t (*)(void))sub_1C297A894);
    uint64_t v166 = v205;
LABEL_35:
    sub_1C2A62588(v159, type metadata accessor for SignificantChangeEngine.State);
    uint64_t v84 = v160;
    uint64_t v85 = v166;
    return sub_1C2A623C8(v84, v85, type metadata accessor for SignificantChangeEngine.State);
  }
  char v167 = *(unsigned char *)(v162 + *(int *)(v163 + 20));
  sub_1C2A62588(v162, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
  uint64_t v166 = v205;
  if (v167)
  {
    char v168 = sub_1C2A9E8D8();
    swift_bridgeObjectRelease();
    sub_1C2A62588(v181, (uint64_t (*)(void))sub_1C297A894);
    sub_1C2A62588(v161, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
    v164(v204, v134);
    v164(v210, v134);
    sub_1C2A62588((uint64_t)v207, (uint64_t (*)(void))sub_1C297A894);
    if ((v168 & 1) == 0) {
      goto LABEL_35;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C2A62588(v181, (uint64_t (*)(void))sub_1C297A894);
    sub_1C2A62588(v161, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
    v164(v204, v134);
    v164(v210, v134);
    sub_1C2A62588((uint64_t)v207, (uint64_t (*)(void))sub_1C297A894);
  }
  return sub_1C2A62484(v159, v166, type metadata accessor for SignificantChangeEngine.State);
}

uint64_t sub_1C2A5B9C4(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void *)(a2 + 16);
    if ((uint64_t)v3 >= result) {
      unint64_t v4 = result;
    }
    else {
      unint64_t v4 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v5 = v4;
    }
    else {
      unint64_t v5 = 0;
    }
    if (v3 >= v5)
    {
      sub_1C297A894();
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2A5BA58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  sub_1C297A894();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 72);
  uint64_t v6 = *(int *)(v3 + 48);
  uint64_t result = v1 - 1;
  uint64_t v8 = (unsigned char *)(((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
               + v5 * (v1 - 1)
               + v6
               + a1
               + 8);
  uint64_t v9 = -v5;
  while (*v8 == 1)
  {
    --result;
    v8 += v9;
    if (result == -1) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C2A5BB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C2A62B24(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C2A9C6E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v18 - v13;
  sub_1C2939D90(a4, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1C2A62588((uint64_t)v7, (uint64_t (*)(void))sub_1C2A62B24);
    char v15 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    sub_1C2A9C348();
    sub_1C2A62540(&qword_1EBB92488, MEMORY[0x1E4F27928]);
    char v15 = sub_1C2A9DCB8() ^ 1;
    uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
    v16(v11, v8);
    v16(v14, v8);
  }
  return v15 & 1;
}

uint64_t sub_1C2A5BD48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v5 = v4;
  uint64_t v61 = a1;
  uint64_t v62 = a2;
  uint64_t v8 = sub_1C2A9C398();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v58 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C2A9C6E8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v53 - v15;
  uint64_t v17 = (int *)type metadata accessor for SignificantChange.Period(0);
  uint64_t v18 = *((void *)v17 - 1);
  MEMORY[0x1F4188790](v17);
  uint64_t v56 = (uint64_t)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v57 = (char *)&v53 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v53 - v23;
  uint64_t v25 = type metadata accessor for SignificantChange(0);
  uint64_t v26 = *(int *)(v25 + 20);
  uint64_t v27 = v5;
  uint64_t v28 = *(void *)(v5 + v26);
  uint64_t v29 = *(void *)(v28 + 16);
  if (!v29) {
    return sub_1C2A623C8(v27, v62, type metadata accessor for SignificantChange);
  }
  unint64_t v30 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v54 = *(void *)(v18 + 72);
  uint64_t v55 = v25;
  sub_1C2A623C8(v28 + v30 + v54 * (v29 - 1), (uint64_t)v24, type metadata accessor for SignificantChange.Period);
  sub_1C2A9C378();
  sub_1C2A62540(&qword_1EBB92488, MEMORY[0x1E4F27928]);
  char v31 = sub_1C2A9DCB8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  if (v31)
  {
    sub_1C2A62588((uint64_t)v24, type metadata accessor for SignificantChange.Period);
    return sub_1C2A623C8(v27, v62, type metadata accessor for SignificantChange);
  }
  unint64_t v53 = v30;
  sub_1C2A9C378();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v61, v10);
  uint64_t v33 = v58;
  sub_1C2A9C358();
  uint64_t v34 = (uint64_t)v57;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v57, v33, v60);
  char v35 = v24[v17[7]];
  *(double *)(v34 + v17[5]) = a3;
  *(double *)(v34 + v17[6]) = a4;
  *(unsigned char *)(v34 + v17[7]) = v35;
  uint64_t v36 = v27;
  uint64_t v37 = sub_1C2A5E8D4(1, *(void *)(v27 + v26));
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  unint64_t v43 = v42;
  if (v42)
  {
    sub_1C2A9E8F8();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v46 = swift_dynamicCastClass();
    if (!v46)
    {
      swift_unknownObjectRelease();
      uint64_t v46 = MEMORY[0x1E4FBC860];
    }
    uint64_t v47 = *(void *)(v46 + 16);
    swift_release();
    unint64_t v44 = v53;
    if (__OFSUB__(v43 >> 1, v41))
    {
      __break(1u);
    }
    else if (v47 == (v43 >> 1) - v41)
    {
      unint64_t v45 = swift_dynamicCastClass();
      uint64_t v34 = (uint64_t)v57;
      if (!v45)
      {
        swift_unknownObjectRelease();
        unint64_t v45 = MEMORY[0x1E4FBC860];
      }
      goto LABEL_14;
    }
    swift_unknownObjectRelease();
    uint64_t v34 = (uint64_t)v57;
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v44 = v53;
  }
  unint64_t v45 = sub_1C2A5F2A0(v37, v39, v41, v43, sub_1C2A79D08, type metadata accessor for SignificantChange.Period);
LABEL_14:
  swift_unknownObjectRelease();
  uint64_t v48 = v56;
  sub_1C2A623C8(v34, v56, type metadata accessor for SignificantChange.Period);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v45 = sub_1C299DD1C(0, *(void *)(v45 + 16) + 1, 1, v45);
  }
  unint64_t v50 = *(void *)(v45 + 16);
  unint64_t v49 = *(void *)(v45 + 24);
  if (v50 >= v49 >> 1) {
    unint64_t v45 = sub_1C299DD1C(v49 > 1, v50 + 1, 1, v45);
  }
  *(void *)(v45 + 16) = v50 + 1;
  sub_1C2A62484(v48, v45 + v44 + v50 * v54, type metadata accessor for SignificantChange.Period);
  sub_1C2A62588(v34, type metadata accessor for SignificantChange.Period);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v60);
  sub_1C2A62588((uint64_t)v24, type metadata accessor for SignificantChange.Period);
  uint64_t v51 = v62;
  sub_1C2A623C8(v36, v62, type metadata accessor for SignificantChange.Period);
  uint64_t v52 = v55;
  uint64_t result = sub_1C2A623C8(v36 + *(int *)(v55 + 24), v51 + *(int *)(v55 + 24), (uint64_t (*)(void))sub_1C2A64008);
  *(void *)(v51 + *(int *)(v52 + 20)) = v45;
  return result;
}

uint64_t sub_1C2A5C364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a3;
  sub_1C2A62A98(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v29 = (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A62430(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v29 - v11;
  sub_1C2A62A2C(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C2A9C398();
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16))(v20, a2, v16, v18);
  uint64_t v21 = a1;
  sub_1C2A623B0(a1, (uint64_t)v12);
  uint64_t v22 = type metadata accessor for SignificantChangeEngine.State(0);
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  if (v23(v12, 1, v22) == 1)
  {
    sub_1C2A62588((uint64_t)v12, (uint64_t (*)(void))sub_1C2A62430);
    uint64_t v24 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v15, 1, 1, v24);
  }
  else
  {
    sub_1C2A62A14((uint64_t)&v12[*(int *)(v22 + 20)], (uint64_t)v15);
    sub_1C2A62588((uint64_t)v12, type metadata accessor for SignificantChangeEngine.State);
  }
  sub_1C2A623B0(v21, (uint64_t)v9);
  if (v23(v9, 1, v22) == 1)
  {
    sub_1C2A62588((uint64_t)v9, (uint64_t (*)(void))sub_1C2A62430);
    uint64_t v25 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
    uint64_t v26 = v29;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v29, 1, 1, v25);
  }
  else
  {
    uint64_t v26 = v29;
    sub_1C2A62A80((uint64_t)&v9[*(int *)(v22 + 24)], v29);
    sub_1C2A62588((uint64_t)v9, type metadata accessor for SignificantChangeEngine.State);
  }
  uint64_t v27 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v30, v20, v16);
  sub_1C2A62484((uint64_t)v15, v27 + *(int *)(v22 + 20), (uint64_t (*)(void))sub_1C2A62A2C);
  return sub_1C2A62484(v26, v27 + *(int *)(v22 + 24), (uint64_t (*)(void))sub_1C2A62A98);
}

uint64_t sub_1C2A5C748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v43 = a5;
  sub_1C297A894();
  uint64_t v45 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v42 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v38 - v9;
  uint64_t v11 = sub_1C2A9C398();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C2A9C6E8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v40 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v38 - v19;
  sub_1C2A9C348();
  v38[1] = sub_1C2A62540(&qword_1EBB92488, MEMORY[0x1E4F27928]);
  char v21 = sub_1C2A9DCB8();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v41 = v16 + 8;
  uint64_t v39 = v22;
  v22(v20, v15);
  uint64_t v44 = v12;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v46 = v14;
  v23(v14, a1, v11);
  uint64_t v24 = *(int *)(v45 + 48);
  uint64_t v25 = &v10[v24];
  uint64_t v26 = (uint64_t *)(v43 + v24);
  uint64_t v27 = (uint64_t)v10;
  uint64_t v43 = v11;
  ((void (*)(char *))v23)(v10);
  uint64_t v28 = *v26;
  char v29 = *((unsigned char *)v26 + 8);
  *(void *)uint64_t v25 = v28;
  v25[8] = v29;
  if (v21)
  {
    sub_1C2A62588(v27, (uint64_t (*)(void))sub_1C297A894);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v43);
    char v30 = 0;
  }
  else
  {
    sub_1C2A9C348();
    char v31 = v42;
    uint64_t v32 = v43;
    uint64_t v33 = &v42[*(int *)(v45 + 48)];
    v23(v42, v27, v43);
    *(void *)uint64_t v33 = v28;
    v33[8] = v29;
    uint64_t v34 = v40;
    sub_1C2A9C348();
    char v35 = *(void (**)(char *, uint64_t))(v44 + 8);
    v35(v31, v32);
    char v30 = sub_1C2A9DCB8() ^ 1;
    uint64_t v36 = v39;
    v39(v34, v15);
    v36(v20, v15);
    sub_1C2A62588(v27, (uint64_t (*)(void))sub_1C297A894);
    v35(v46, v32);
  }
  return v30 & 1;
}

BOOL sub_1C2A5CB24()
{
  uint64_t v0 = sub_1C2A9C6E8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A9C378();
  sub_1C2A62540(&qword_1EBB92488, MEMORY[0x1E4F27928]);
  char v4 = sub_1C2A9DCB8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (v4 & 1) == 0;
}

BOOL sub_1C2A5CC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v33 = a1;
  uint64_t v3 = sub_1C2A9C6E8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  uint64_t v37 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v38 = (char *)&v33 - v7;
  sub_1C297A894();
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = *(int *)(v9 + 56);
  uint64_t v16 = (char *)&v33 + v15 - v13;
  uint64_t v17 = a1 + v15;
  uint64_t v18 = sub_1C2A9C398();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v20(v14, v33, v18);
  char v21 = *(unsigned char *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v21;
  sub_1C2A9C378();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v19 + 8);
  v22(v14, v18);
  uint64_t v23 = *(int *)(v9 + 56);
  uint64_t v24 = &v11[v23];
  uint64_t v25 = v35 + v23;
  ((void (*)(char *))v20)(v11);
  char v26 = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v26;
  uint64_t v27 = v34;
  sub_1C2A9C378();
  v22(v11, v18);
  sub_1C2A62540(&qword_1EBB92488, MEMORY[0x1E4F27928]);
  uint64_t v28 = v38;
  char v29 = v27;
  uint64_t v30 = v36;
  LOBYTE(v18) = sub_1C2A9DCB8();
  char v31 = *(void (**)(char *, uint64_t))(v37 + 8);
  v31(v29, v30);
  v31(v28, v30);
  return (v18 & 1) == 0;
}

uint64_t sub_1C2A5CF30()
{
  uint64_t result = 0x746E756F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7173491;
      break;
    case 2:
      uint64_t result = 0x5364657261757173;
      break;
    case 3:
      uint64_t result = 1851876717;
      break;
    case 4:
      uint64_t result = 0x65636E6169726176;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2A5CFCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A7958C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A5CFF4(uint64_t a1)
{
  unint64_t v2 = sub_1C2A62DA0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A5D030(uint64_t a1)
{
  unint64_t v2 = sub_1C2A62DA0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SignificantChangeEngine.ChangepointComponent.encode(to:)(void *a1)
{
  sub_1C2A62E9C(0, &qword_1EBB8F978, (uint64_t (*)(void))sub_1C2A62DA0, (uint64_t)&type metadata for SignificantChangeEngine.ChangepointComponent.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A62DA0();
  sub_1C2A9EA18();
  v9[15] = 0;
  sub_1C2A9E848();
  if (!v1)
  {
    v9[14] = 1;
    sub_1C2A9E848();
    v9[13] = 2;
    sub_1C2A9E848();
    v9[12] = 3;
    sub_1C2A9E848();
    v9[11] = 4;
    sub_1C2A9E848();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SignificantChangeEngine.ChangepointComponent.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v21 = a2;
  sub_1C2A62E9C(0, &qword_1EBB8F8F0, (uint64_t (*)(void))sub_1C2A62DA0, (uint64_t)&type metadata for SignificantChangeEngine.ChangepointComponent.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v21 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A62DA0();
  sub_1C2A9EA08();
  if (!v2)
  {
    uint64_t v9 = v21;
    char v26 = 0;
    sub_1C2A9E788();
    uint64_t v11 = v10;
    char v25 = 1;
    sub_1C2A9E788();
    uint64_t v13 = v12;
    char v24 = 2;
    sub_1C2A9E788();
    uint64_t v15 = v14;
    char v23 = 3;
    sub_1C2A9E788();
    uint64_t v17 = v16;
    char v22 = 4;
    sub_1C2A9E788();
    uint64_t v20 = v19;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *uint64_t v9 = v11;
    v9[1] = v13;
    v9[2] = v15;
    v9[3] = v17;
    v9[4] = v20;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C2A5D514@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SignificantChangeEngine.ChangepointComponent.init(from:)(a1, a2);
}

uint64_t sub_1C2A5D52C(void *a1)
{
  return SignificantChangeEngine.ChangepointComponent.encode(to:)(a1);
}

unint64_t sub_1C2A5D548(char a1)
{
  unint64_t result = 1702125924;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65756C615670;
      break;
    case 2:
      unint64_t result = 0x7473655474;
      break;
    case 3:
      unint64_t result = 0x666968536E61656DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x6953746365666665;
      break;
    case 6:
      unint64_t result = 12908;
      break;
    case 7:
      unint64_t result = 7563372;
      break;
    case 8:
      unint64_t result = 7563378;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C2A5D64C()
{
  return sub_1C2A5D548(*v0);
}

uint64_t sub_1C2A5D654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2A79790(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C2A5D67C(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1C2A5D688(uint64_t a1)
{
  unint64_t v2 = sub_1C2A62DF4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2A5D6C4(uint64_t a1)
{
  unint64_t v2 = sub_1C2A62DF4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SignificantChangeEngine.Changepoint.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C2A62E9C(0, &qword_1EBB8F970, (uint64_t (*)(void))sub_1C2A62DF4, (uint64_t)&type metadata for SignificantChangeEngine.Changepoint.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A62DF4();
  sub_1C2A9EA18();
  LOBYTE(v18) = 0;
  sub_1C2A9C6E8();
  sub_1C2A62540(&qword_1EBB91C18, MEMORY[0x1E4F27928]);
  sub_1C2A9E868();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for SignificantChangeEngine.Changepoint(0);
    LOBYTE(v18) = 1;
    sub_1C2A9E848();
    LOBYTE(v18) = 2;
    sub_1C2A9E848();
    LOBYTE(v18) = 3;
    sub_1C2A9E848();
    LOBYTE(v18) = 4;
    sub_1C2A9E848();
    LOBYTE(v18) = 5;
    sub_1C2A9E848();
    LOBYTE(v18) = 6;
    sub_1C2A9E848();
    uint64_t v11 = (long long *)(v3 + *(int *)(v10 + 44));
    uint64_t v12 = *((void *)v11 + 4);
    long long v13 = v11[1];
    long long v18 = *v11;
    long long v19 = v13;
    uint64_t v20 = v12;
    char v21 = 7;
    sub_1C2A62E48();
    sub_1C2A9E868();
    uint64_t v14 = (long long *)(v3 + *(int *)(v10 + 48));
    uint64_t v15 = *((void *)v14 + 4);
    long long v16 = v14[1];
    long long v18 = *v14;
    long long v19 = v16;
    uint64_t v20 = v15;
    char v21 = 8;
    sub_1C2A9E868();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t SignificantChangeEngine.Changepoint.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_1C2A9C6E8();
  uint64_t v30 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v31 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A62E9C(0, &qword_1EBB8F8E8, (uint64_t (*)(void))sub_1C2A62DF4, (uint64_t)&type metadata for SignificantChangeEngine.Changepoint.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v33 = v5;
  uint64_t v29 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v8 = (int *)type metadata accessor for SignificantChangeEngine.Changepoint(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A62DF4();
  uint64_t v32 = v7;
  uint64_t v11 = v34;
  sub_1C2A9EA08();
  if (v11) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = v29;
  uint64_t v12 = v30;
  LOBYTE(v35) = 0;
  sub_1C2A62540(&qword_1EBB927B8, MEMORY[0x1E4F27928]);
  sub_1C2A9E7A8();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v31, v3);
  LOBYTE(v35) = 1;
  sub_1C2A9E788();
  *(void *)&v10[v8[5]] = v14;
  LOBYTE(v35) = 2;
  sub_1C2A9E788();
  *(void *)&v10[v8[6]] = v15;
  LOBYTE(v35) = 3;
  sub_1C2A9E788();
  *(void *)&v10[v8[7]] = v16;
  LOBYTE(v35) = 4;
  sub_1C2A9E788();
  *(void *)&v10[v8[8]] = v17;
  LOBYTE(v35) = 5;
  sub_1C2A9E788();
  *(void *)&v10[v8[9]] = v18;
  LOBYTE(v35) = 6;
  sub_1C2A9E788();
  *(void *)&v10[v8[10]] = v19;
  char v38 = 7;
  sub_1C2A62F04();
  sub_1C2A9E7A8();
  uint64_t v20 = v37;
  char v21 = &v10[v8[11]];
  long long v22 = v36;
  *(_OWORD *)char v21 = v35;
  *((_OWORD *)v21 + 1) = v22;
  *((void *)v21 + 4) = v20;
  char v38 = 8;
  sub_1C2A9E7A8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v33);
  uint64_t v23 = v37;
  char v24 = &v10[v8[12]];
  long long v25 = v36;
  *(_OWORD *)char v24 = v35;
  *((_OWORD *)v24 + 1) = v25;
  *((void *)v24 + 4) = v23;
  sub_1C2A623C8((uint64_t)v10, v28, type metadata accessor for SignificantChangeEngine.Changepoint);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1C2A62588((uint64_t)v10, type metadata accessor for SignificantChangeEngine.Changepoint);
}

uint64_t sub_1C2A5DF8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SignificantChangeEngine.Changepoint.init(from:)(a1, a2);
}

uint64_t sub_1C2A5DFA4(void *a1)
{
  return SignificantChangeEngine.Changepoint.encode(to:)(a1);
}

uint64_t sub_1C2A5DFBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  double v7 = *(double *)a1;
  if (*(double *)a1 >= (double)a5 && (double v8 = *(double *)a2, *(double *)a2 >= (double)a5))
  {
    double v15 = *(double *)(a1 + 32);
    uint64_t v38 = *(void *)(a1 + 24);
    uint64_t v39 = *(void *)(a1 + 16);
    double v16 = *(double *)(a2 + 32);
    uint64_t v41 = *(void *)(a2 + 24);
    uint64_t v42 = *(void *)(a2 + 16);
    double v35 = a3[4];
    double v37 = *a3;
    double v40 = *(double *)(a1 + 8);
    double v17 = v40 / v7;
    double v43 = *(double *)(a2 + 8);
    double v18 = v43 / v8;
    double v22 = vabdd_f64(v40 / v7, v43 / v8) * pow(v15 / v7 + v16 / v8, -0.5);
    double v23 = v8 * v8 * (v8 + -1.0);
    double v24 = v16 * v16 / v23;
    double v25 = v15 * v15 / (v7 * v7 * (v7 + -1.0)) + v24;
    if (v25 <= 0.0)
    {
      double v23 = v37;
      double v24 = v23 * v23;
      double v25 = v35 * v35 / (v23 * v23 * (v37 + -1.0));
    }
    double v19 = v15 / v7 + v16 / v8;
    if (v19 * v19 / v25 > 0.00000001) {
      double v26 = v19 * v19 / v25;
    }
    else {
      double v26 = 0.00000001;
    }
    double v36 = v18 - v17;
    double v27 = vabdd_f64(v18, v17) / sqrt((v15 + v16) * 0.5);
    double v28 = StudentsCDF(v22, v26, 0.5, v24, v23, v8 + -1.0, v20, v21);
    if (v22 > 0.0) {
      double v28 = 1.0 - v28;
    }
    double v29 = v28 + v28;
    uint64_t v30 = sub_1C2A9C6E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(a6, a4, v30);
    char v31 = (int *)type metadata accessor for SignificantChangeEngine.Changepoint(0);
    *(double *)(a6 + v31[5]) = v29;
    *(double *)(a6 + v31[6]) = v22;
    *(double *)(a6 + v31[7]) = v36;
    *(double *)(a6 + v31[8]) = v26;
    *(double *)(a6 + v31[9]) = v27;
    *(double *)(a6 + v31[10]) = v7 * v15 + v8 * v16;
    uint64_t v32 = a6 + v31[11];
    *(double *)uint64_t v32 = v7;
    *(double *)(v32 + 8) = v40;
    *(void *)(v32 + 16) = v39;
    *(void *)(v32 + 24) = v38;
    *(double *)(v32 + 32) = v15;
    uint64_t v33 = a6 + v31[12];
    *(double *)uint64_t v33 = v8;
    *(double *)(v33 + 8) = v43;
    *(void *)(v33 + 16) = v42;
    *(void *)(v33 + 24) = v41;
    *(double *)(v33 + 32) = v16;
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*((void *)v31 - 1) + 56);
    uint64_t v11 = (uint64_t)v31;
    uint64_t v12 = a6;
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v9 = type metadata accessor for SignificantChangeEngine.Changepoint(0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    uint64_t v11 = v9;
    uint64_t v12 = a6;
    uint64_t v13 = 1;
  }
  return v10(v12, v13, 1, v11);
}

double sub_1C2A5E260(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1C297A894();
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C2A9C398();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, a2, v11);
  uint64_t v12 = &v10[*(int *)(v8 + 56)];
  *(void *)uint64_t v12 = a3;
  v12[8] = a4 & 1;
  double v13 = sub_1C2A5E380();
  sub_1C2A62588((uint64_t)v10, (uint64_t (*)(void))sub_1C297A894);
  return v13;
}

double sub_1C2A5E380()
{
  uint64_t v0 = sub_1C2A9C6E8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - v5;
  sub_1C2A9C378();
  sub_1C2A9C5F8();
  double v8 = v7;
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v6, v0);
  sub_1C2A9C378();
  sub_1C2A9C5F8();
  double v11 = v10;
  v9(v3, v0);
  double v12 = vabdd_f64(v8, v11);
  sub_1C2A9C348();
  sub_1C2A9C5F8();
  double v14 = v13;
  v9(v6, v0);
  sub_1C2A9C348();
  sub_1C2A9C5F8();
  double v16 = v15;
  v9(v3, v0);
  return v12 + vabdd_f64(v14, v16);
}

uint64_t sub_1C2A5E528(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3)
{
  uint64_t v42 = a3;
  uint64_t v41 = a2;
  uint64_t v4 = sub_1C2A9C6E8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  uint64_t v40 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v45 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v36 - v8;
  sub_1C297A894();
  uint64_t v44 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v46 = (uint64_t)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  double v14 = (char *)v36 - v13;
  uint64_t v16 = *(int *)(v15 + 48);
  double v17 = (char *)v36 + v16 - v13;
  uint64_t v38 = a1;
  uint64_t v18 = (uint64_t *)(a1 + v16);
  uint64_t v19 = sub_1C2A9C398();
  uint64_t v20 = *(void *)(v19 - 8);
  double v43 = *(void (**)(void))(v20 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v43)(v14, a1, v19);
  char v21 = *((unsigned char *)v18 + 8);
  *(void *)double v17 = *v18;
  v17[8] = v21;
  sub_1C2A9C348();
  v36[0] = *(void *)(v20 + 8);
  v36[1] = v20 + 8;
  ((void (*)(char *, uint64_t))v36[0])(v14, v19);
  sub_1C2A62540(&qword_1EBB92488, MEMORY[0x1E4F27928]);
  uint64_t v22 = v39;
  LOBYTE(v17) = sub_1C2A9DCB8();
  uint64_t v23 = v40;
  double v24 = *(void (**)(char *, uint64_t))(v40 + 8);
  double v37 = v9;
  uint64_t v41 = v24;
  v24(v9, v22);
  uint64_t v25 = v46 + *(int *)(v44 + 48);
  uint64_t v38 = v19;
  v43();
  uint64_t v26 = *v18;
  char v27 = *((unsigned char *)v18 + 8);
  *(void *)uint64_t v25 = v26;
  *(unsigned char *)(v25 + 8) = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v45, v42, v22);
  if (v17)
  {
    char v28 = 0;
    v41(v45, v22);
  }
  else
  {
    double v29 = &v14[*(int *)(v44 + 48)];
    uint64_t v30 = v38;
    ((void (*)(char *, uint64_t, uint64_t))v43)(v14, v46, v38);
    *(void *)double v29 = v26;
    unsigned __int8 v29[8] = v27;
    char v31 = v37;
    sub_1C2A9C348();
    ((void (*)(char *, uint64_t))v36[0])(v14, v30);
    uint64_t v32 = v45;
    char v28 = sub_1C2A9C668();
    uint64_t v33 = v31;
    uint64_t v34 = v41;
    v41(v33, v22);
    v34(v32, v22);
  }
  sub_1C2A62588(v46, (uint64_t (*)(void))sub_1C297A894);
  return v28 & 1;
}

uint64_t sub_1C2A5E8D4(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for SignificantChange.Period(0);
    return a2;
  }
  return result;
}

uint64_t SignificantChangeEngine.Changepoint.description.getter()
{
  uint64_t v1 = v0;
  sub_1C2A79E18(0, (unint64_t *)&qword_1EBB927E0, (uint64_t (*)(uint64_t))sub_1C29AD2DC, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C2AA6B00;
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for SignificantChangeEngine.Changepoint(0) + 28));
  uint64_t v4 = MEMORY[0x1E4FBB460];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB3D0];
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = v3;
  sub_1C2A9DD48();
  sub_1C2A9E4D8();
  sub_1C2A9DDB8();
  sub_1C2A9C6E8();
  sub_1C2A62540(&qword_1EBB92368, MEMORY[0x1E4F27928]);
  sub_1C2A9E898();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  sub_1C2A9DDB8();
  sub_1C2A9DF28();
  sub_1C2A9DDB8();
  sub_1C2A9DF28();
  sub_1C2A9DDB8();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  sub_1C2A9DDB8();
  sub_1C2A9DF28();
  sub_1C2A9DDB8();
  sub_1C2A9DF28();
  sub_1C2A9DDB8();
  sub_1C2A9DF28();
  sub_1C2A9DDB8();
  sub_1C2A9DF28();
  sub_1C2A9DDB8();
  sub_1C2A9DF28();
  sub_1C2A9DDB8();
  sub_1C2A9DF28();
  sub_1C2A9DDB8();
  return 0;
}

uint64_t SignificantChange.description.getter()
{
  uint64_t v1 = type metadata accessor for SignificantChange.Period(0);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = 0x2865676E616843;
  unint64_t v26 = 0xE700000000000000;
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for SignificantChange(0) + 20));
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  SignificantChange.Period.description.getter();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  sub_1C2A9DDB8();
  int64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C29788FC(0, v6, 0);
    uint64_t v8 = *(unsigned __int8 *)(v2 + 80);
    v22[1] = v5;
    uint64_t v9 = v5 + ((v8 + 32) & ~v8);
    uint64_t v10 = *(void *)(v2 + 72);
    uint64_t v7 = v23;
    do
    {
      sub_1C2A623C8(v9, (uint64_t)v4, type metadata accessor for SignificantChange.Period);
      uint64_t v11 = SignificantChange.Period.description.getter();
      uint64_t v13 = v12;
      sub_1C2A62588((uint64_t)v4, type metadata accessor for SignificantChange.Period);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C29788FC(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v23;
      }
      unint64_t v15 = *(void *)(v7 + 16);
      unint64_t v14 = *(void *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C29788FC(v14 > 1, v15 + 1, 1);
        uint64_t v7 = v23;
      }
      *(void *)(v7 + 16) = v15 + 1;
      uint64_t v16 = v7 + 16 * v15;
      *(void *)(v16 + 32) = v11;
      *(void *)(v16 + 40) = v13;
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = *(void *)(v7 + 16);
  if (v17)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = 0;
    uint64_t v19 = v7 + 40;
    unint64_t v20 = 0xE000000000000000;
    do
    {
      uint64_t v23 = v18;
      unint64_t v24 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C2A9DDB8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = v23;
      unint64_t v20 = v24;
      v19 += 16;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t SignificantChange.Period.description.getter()
{
  if (*(unsigned char *)(v0 + *(int *)(type metadata accessor for SignificantChange.Period(0) + 28)) == 2)
  {
    sub_1C2A9E4D8();
  }
  else
  {
    sub_1C2A9E4D8();
    sub_1C2A9DDB8();
    sub_1C2A9DDB8();
    swift_bridgeObjectRelease();
  }
  sub_1C2A9DDB8();
  sub_1C2A9DF28();
  sub_1C2A9DDB8();
  sub_1C2A9DF28();
  sub_1C2A9DDB8();
  sub_1C2A9C398();
  sub_1C2A62540((unint64_t *)&qword_1EBB91BE8, MEMORY[0x1E4F26E60]);
  sub_1C2A9E898();
  sub_1C2A9DDB8();
  swift_bridgeObjectRelease();
  sub_1C2A9DDB8();
  return 0;
}

uint64_t sub_1C2A5F1AC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v3 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v2 == -1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = result;
  if (v3 <= 0)
  {
    int64_t v6 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1C2A79FB0(0, &qword_1EBB91BE0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBBE00]);
    int64_t v6 = (void *)swift_allocObject();
    int64_t v7 = _swift_stdlib_malloc_size(v6);
    uint64_t v8 = v7 - 32;
    if (v7 < 32) {
      uint64_t v8 = v7 - 25;
    }
    v6[2] = v3;
    v6[3] = 2 * (v8 >> 3);
  }
  uint64_t result = sub_1C2A5F4EC((uint64_t)&v9, (uint64_t)(v6 + 4), v3, v5, a2);
  if (result == v3) {
    return (uint64_t)v6;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1C2A5F2A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void), uint64_t (*a6)(void))
{
  unint64_t v6 = a4 >> 1;
  uint64_t v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v7) {
    return MEMORY[0x1E4FBC860];
  }
  if (v7 <= 0)
  {
    unint64_t v14 = (void *)MEMORY[0x1E4FBC860];
    if (v6 != a3)
    {
LABEL_10:
      if (v7 < 0) {
        goto LABEL_24;
      }
      uint64_t v17 = *(void *)(a6(0) - 8);
      uint64_t v18 = (char *)v14 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      uint64_t v19 = *(void *)(v17 + 72);
      unint64_t v20 = a2 + v19 * a3;
      uint64_t v21 = v19 * v7;
      uint64_t v22 = &v18[v21];
      unint64_t v23 = v20 + v21;
      if (v20 < (unint64_t)v22 && (unint64_t)v18 < v23) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return (uint64_t)v14;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  a5(0);
  uint64_t v11 = *(void *)(a6(0) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (void *)swift_allocObject();
  size_t v15 = _swift_stdlib_malloc_size(v14);
  if (v12)
  {
    if (v15 - v13 == 0x8000000000000000 && v12 == -1) {
      goto LABEL_23;
    }
    v14[2] = v7;
    v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
    if (v6 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C2A9E6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C2A5F4EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    BOOL v7 = 0;
    a3 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    BOOL v7 = 0;
LABEL_14:
    uint64_t v8 = a4;
LABEL_15:
    *(void *)uint64_t result = a4;
    *(void *)(result + 8) = a5;
    *(void *)(result + 16) = v8;
    *(unsigned char *)(result + 24) = v7;
    return a3;
  }
  if (a3 < 0) {
    goto LABEL_17;
  }
  uint64_t v5 = 0;
  uint64_t v6 = a4;
  while (1)
  {
    BOOL v7 = v6 == a5;
    if (v6 != a5) {
      break;
    }
    uint64_t v8 = 0;
LABEL_8:
    *(void *)(a2 + 8 * v5) = v6;
    if (a3 - 1 == v5) {
      goto LABEL_15;
    }
    ++v5;
    BOOL v9 = v6 == a5;
    uint64_t v6 = v8;
    if (v9)
    {
      BOOL v7 = 1;
      a3 = v5;
      goto LABEL_15;
    }
  }
  uint64_t v8 = v6 + 1;
  if (!__OFADD__(v6, 1)) {
    goto LABEL_8;
  }
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

BOOL _s19HealthVisualization23SignificantChangeEngineV10ParametersV10ThresholdsV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  char v3 = *(unsigned char *)(a2 + 24);
  char v4 = *(unsigned char *)(a2 + 40);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16)) {
      char v3 = 1;
    }
    if (v3) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 40) & 1) == 0)
  {
    if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
      char v4 = 1;
    }
    return (v4 & 1) == 0;
  }
  return (*(unsigned char *)(a2 + 40) & 1) != 0;
}

BOOL _s19HealthVisualization23SignificantChangeEngineV10ParametersV14FrequencyShiftV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (*(double *)a1 == *(double *)a2
    && (~vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 8), *(int64x2_t *)(a2 + 8)), (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 24), *(int64x2_t *)(a2 + 24)))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) == 0&& *(void *)(a1 + 40) == *(void *)(a2 + 40))
  {
    return *(double *)(a1 + 48) == *(double *)(a2 + 48);
  }
  return result;
}

BOOL _s19HealthVisualization23SignificantChangeEngineV10ParametersV9MeanShiftV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a1 + 8);
  double v5 = *(double *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  double v7 = *(double *)(a1 + 32);
  char v8 = *(unsigned char *)(a1 + 40);
  double v9 = *(double *)(a1 + 48);
  char v10 = *(unsigned char *)(a1 + 56);
  double v11 = *(double *)(a1 + 64);
  char v12 = *(unsigned char *)(a1 + 72);
  double v13 = *(double *)(a1 + 80);
  char v14 = *(unsigned char *)(a1 + 88);
  unsigned __int8 v15 = *(unsigned char *)(a1 + 89);
  uint64_t v17 = *(void *)(a1 + 96);
  uint64_t v16 = *(void *)(a1 + 104);
  uint64_t v18 = *(void *)(a1 + 112);
  char v19 = *(unsigned char *)(a1 + 120);
  double v20 = *(double *)(a1 + 128);
  int v21 = *(unsigned __int8 *)(a2 + 8);
  double v22 = *(double *)(a2 + 16);
  int v23 = *(unsigned __int8 *)(a2 + 24);
  double v24 = *(double *)(a2 + 32);
  int v25 = *(unsigned __int8 *)(a2 + 40);
  double v26 = *(double *)(a2 + 48);
  int v27 = *(unsigned __int8 *)(a2 + 56);
  double v28 = *(double *)(a2 + 64);
  int v29 = *(unsigned __int8 *)(a2 + 72);
  double v30 = *(double *)(a2 + 80);
  int v31 = *(unsigned __int8 *)(a2 + 88);
  char v32 = *(unsigned char *)(a2 + 89);
  uint64_t v34 = *(void *)(a2 + 96);
  uint64_t v33 = *(void *)(a2 + 104);
  uint64_t v35 = *(void *)(a2 + 112);
  int v36 = *(unsigned __int8 *)(a2 + 120);
  double v37 = *(double *)(a2 + 128);
  if (v4)
  {
    if (!v21) {
      return 0;
    }
  }
  else
  {
    if (*(double *)a1 == *(double *)a2) {
      char v38 = v21;
    }
    else {
      char v38 = 1;
    }
    if (v38) {
      return 0;
    }
  }
  if (v6)
  {
    if (!v23) {
      return 0;
    }
  }
  else
  {
    if (v5 == v22) {
      char v39 = v23;
    }
    else {
      char v39 = 1;
    }
    if (v39) {
      return 0;
    }
  }
  if (v8)
  {
    if (!v25) {
      return 0;
    }
  }
  else
  {
    if (v7 == v24) {
      char v40 = v25;
    }
    else {
      char v40 = 1;
    }
    if (v40) {
      return 0;
    }
  }
  if (v10)
  {
    if (!v27) {
      return 0;
    }
  }
  else
  {
    if (v9 == v26) {
      char v41 = v27;
    }
    else {
      char v41 = 1;
    }
    if (v41) {
      return 0;
    }
  }
  if (v12)
  {
    if (!v29) {
      return 0;
    }
  }
  else
  {
    if (v11 == v28) {
      char v42 = v29;
    }
    else {
      char v42 = 1;
    }
    if (v42) {
      return 0;
    }
  }
  if (v14)
  {
    if (v31) {
      goto LABEL_43;
    }
    return 0;
  }
  if (v13 == v30) {
    char v43 = v31;
  }
  else {
    char v43 = 1;
  }
  if (v43) {
    return 0;
  }
LABEL_43:
  char v44 = sub_1C2954E40(v15, v32);
  BOOL result = 0;
  if ((v44 & 1) != 0 && v17 == v34 && v16 == v33)
  {
    if (v19)
    {
      if (v36) {
        return v20 == v37;
      }
    }
    else
    {
      if (v18 == v35) {
        char v46 = v36;
      }
      else {
        char v46 = 1;
      }
      if ((v46 & 1) == 0) {
        return v20 == v37;
      }
    }
    return 0;
  }
  return result;
}

uint64_t _s19HealthVisualization23SignificantChangeEngineV10ParametersV2eeoiySbAE_AEtFZ_0(double *a1, double *a2)
{
  double v4 = *a1;
  double v5 = a1[1];
  sub_1C2A79C68((uint64_t)(a1 + 2), (uint64_t)v28, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
  double v6 = a1[19];
  uint64_t v7 = *((void *)a1 + 24);
  double v8 = a1[25];
  char v9 = *((unsigned char *)a1 + 208);
  double v10 = *a2;
  double v11 = a2[1];
  int64x2_t v19 = *(int64x2_t *)(a1 + 20);
  int64x2_t v20 = *(int64x2_t *)(a1 + 22);
  sub_1C2A79C68((uint64_t)(a2 + 2), (uint64_t)v29, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
  uint64_t result = 0;
  if (*(void *)&v4 == *(void *)&v10 && v5 == v11)
  {
    double v13 = a2[19];
    int64x2_t v17 = *(int64x2_t *)(a2 + 20);
    int64x2_t v18 = *(int64x2_t *)(a2 + 22);
    uint64_t v14 = *((void *)a2 + 24);
    double v15 = a2[25];
    int v16 = *((unsigned __int8 *)a2 + 208);
    sub_1C2A79C68((uint64_t)v28, (uint64_t)v27, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
    if (sub_1C2A79B9C((uint64_t)v27) == 1)
    {
      sub_1C2A79C68((uint64_t)v29, (uint64_t)v26, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
      if (sub_1C2A79B9C((uint64_t)v26) != 1) {
        return 0;
      }
    }
    else
    {
      sub_1C2A79C68((uint64_t)v28, (uint64_t)v25, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
      sub_1C2A79C68((uint64_t)v29, (uint64_t)v26, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
      if (sub_1C2A79B9C((uint64_t)v26) == 1) {
        return 0;
      }
      sub_1C2A79C68((uint64_t)v29, (uint64_t)v23, &qword_1EBB8FAC0, (uint64_t)&type metadata for SignificantChangeEngine.Parameters.MeanShift);
      v21[6] = v23[6];
      v21[7] = v23[7];
      uint64_t v22 = v24;
      v21[2] = v23[2];
      void v21[3] = v23[3];
      v21[4] = v23[4];
      v21[5] = v23[5];
      v21[0] = v23[0];
      v21[1] = v23[1];
      if (!_s19HealthVisualization23SignificantChangeEngineV10ParametersV9MeanShiftV2eeoiySbAG_AGtFZ_0((uint64_t)v25, (uint64_t)v21))return 0; {
    }
      }
    if (v9)
    {
      if (!v16) {
        return 0;
      }
    }
    else if ((v16 & 1) != 0 {
           || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(v19, v17), (int32x4_t)vceqq_s64(v20, v18))), 0xFuLL))) & 1) == 0|| v7 != v14|| v6 != v13|| v8 != v15)
    }
    {
      return 0;
    }
    return 1;
  }
  return result;
}

BOOL _s19HealthVisualization23SignificantChangeEngineV20ChangepointComponentV2eeoiySbAE_AEtFZ_0(float64x2_t *a1, float64x2_t *a2)
{
  return (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0];
}

BOOL _s19HealthVisualization23SignificantChangeEngineV11ChangepointV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_1C2A9C698() & 1) == 0) {
    return 0;
  }
  double v4 = (int *)type metadata accessor for SignificantChangeEngine.Changepoint(0);
  if (*(double *)(a1 + v4[5]) != *(double *)(a2 + v4[5])
    || *(double *)(a1 + v4[6]) != *(double *)(a2 + v4[6])
    || *(double *)(a1 + v4[7]) != *(double *)(a2 + v4[7])
    || *(double *)(a1 + v4[8]) != *(double *)(a2 + v4[8])
    || *(double *)(a1 + v4[9]) != *(double *)(a2 + v4[9]))
  {
    return 0;
  }
  uint64_t v5 = v4[10];
  double v6 = *(double *)(a1 + v5);
  double v7 = *(double *)(a2 + v5);
  uint64_t v8 = 0;
  if (v6 == v7)
  {
    uint64_t v9 = v4[11];
    double v10 = (float64x2_t *)(a1 + v9);
    double v11 = (float64x2_t *)(a2 + v9);
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*v10, *v11), (int32x4_t)vceqq_f64(v10[1], v11[1]))), 0xFuLL))) & 1) != 0&& v10[2].f64[0] == v11[2].f64[0])
    {
      uint64_t v12 = v4[12];
      double v13 = (float64x2_t *)(a1 + v12);
      uint64_t v14 = (float64x2_t *)(a2 + v12);
      if (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*v13, *v14), (int32x4_t)vceqq_f64(v13[1], v14[1]))), 0xFuLL))))return v13[2].f64[0] == v14[2].f64[0]; {
      return 0;
      }
    }
  }
  return v8;
}

BOOL _s19HealthVisualization23SignificantChangeEngineV6OutputV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SignificantChangeEngine.State(0);
  uint64_t v73 = *(void *)(v4 - 8);
  uint64_t v74 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v68 = &v65[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C2A79EF4(0, &qword_1EA31F178, sub_1C2A62430);
  uint64_t v70 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v76 = &v65[-v7];
  sub_1C2A62430(0);
  MEMORY[0x1F4188790](v8 - 8);
  int v69 = &v65[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v71 = &v65[-v11];
  MEMORY[0x1F4188790](v12);
  uint64_t v72 = &v65[-v13];
  uint64_t v14 = type metadata accessor for SignificantChange(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v75 = &v65[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C2A79EF4(0, &qword_1EA31F168, sub_1C2A6235C);
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v78 = &v65[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = &v65[-v21];
  sub_1C2A6235C(0);
  MEMORY[0x1F4188790](v23 - 8);
  int v25 = &v65[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v26);
  uint64_t v81 = &v65[-v27];
  MEMORY[0x1F4188790](v28);
  int v77 = &v65[-v29];
  MEMORY[0x1F4188790](v30);
  char v32 = &v65[-v31];
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = &v65[-v34];
  MEMORY[0x1F4188790](v36);
  char v38 = &v65[-v37];
  uint64_t v80 = a1;
  sub_1C2A62344(a1, (uint64_t)&v65[-v37]);
  uint64_t v79 = a2;
  sub_1C2A62344(a2, (uint64_t)v35);
  uint64_t v39 = (uint64_t)&v22[*(int *)(v18 + 48)];
  sub_1C2A62344((uint64_t)v38, (uint64_t)v22);
  sub_1C2A62344((uint64_t)v35, v39);
  char v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v40((uint64_t)v22, 1, v14) == 1)
  {
    sub_1C2A62588((uint64_t)v35, (uint64_t (*)(void))sub_1C2A6235C);
    sub_1C2A62588((uint64_t)v38, (uint64_t (*)(void))sub_1C2A6235C);
    if (v40(v39, 1, v14) == 1)
    {
      sub_1C2A62588((uint64_t)v22, (uint64_t (*)(void))sub_1C2A6235C);
      goto LABEL_8;
    }
LABEL_6:
    char v41 = &qword_1EA31F168;
    char v42 = sub_1C2A6235C;
    char v43 = v22;
LABEL_21:
    sub_1C2A79F54((uint64_t)v43, v41, v42);
    return 0;
  }
  sub_1C2A62344((uint64_t)v22, (uint64_t)v32);
  if (v40(v39, 1, v14) == 1)
  {
    sub_1C2A62588((uint64_t)v35, (uint64_t (*)(void))sub_1C2A6235C);
    sub_1C2A62588((uint64_t)v38, (uint64_t (*)(void))sub_1C2A6235C);
    sub_1C2A62588((uint64_t)v32, type metadata accessor for SignificantChange);
    goto LABEL_6;
  }
  uint64_t v67 = v25;
  char v44 = v75;
  sub_1C2A62484(v39, (uint64_t)v75, type metadata accessor for SignificantChange);
  int v66 = _s19HealthVisualization17SignificantChangeV2eeoiySbAC_ACtFZ_0((uint64_t)v32, (uint64_t)v44);
  sub_1C2A62588((uint64_t)v44, type metadata accessor for SignificantChange);
  sub_1C2A62588((uint64_t)v35, (uint64_t (*)(void))sub_1C2A6235C);
  sub_1C2A62588((uint64_t)v38, (uint64_t (*)(void))sub_1C2A6235C);
  sub_1C2A62588((uint64_t)v32, type metadata accessor for SignificantChange);
  int v25 = v67;
  sub_1C2A62588((uint64_t)v22, (uint64_t (*)(void))sub_1C2A6235C);
  if ((v66 & 1) == 0) {
    return 0;
  }
LABEL_8:
  uint64_t v45 = type metadata accessor for SignificantChangeEngine.Output(0);
  char v46 = v77;
  sub_1C2A62344(v80 + *(int *)(v45 + 20), (uint64_t)v77);
  uint64_t v47 = v79;
  uint64_t v48 = v81;
  sub_1C2A62344(v79 + *(int *)(v45 + 20), (uint64_t)v81);
  uint64_t v49 = *(int *)(v18 + 48);
  unint64_t v50 = v78;
  uint64_t v51 = (uint64_t)&v78[v49];
  sub_1C2A62344((uint64_t)v46, (uint64_t)v78);
  sub_1C2A62344((uint64_t)v48, v51);
  if (v40((uint64_t)v50, 1, v14) != 1)
  {
    sub_1C2A62344((uint64_t)v50, (uint64_t)v25);
    if (v40(v51, 1, v14) != 1)
    {
      uint64_t v52 = v75;
      sub_1C2A62484(v51, (uint64_t)v75, type metadata accessor for SignificantChange);
      char v53 = _s19HealthVisualization17SignificantChangeV2eeoiySbAC_ACtFZ_0((uint64_t)v25, (uint64_t)v52);
      sub_1C2A62588((uint64_t)v52, type metadata accessor for SignificantChange);
      sub_1C2A62588((uint64_t)v81, (uint64_t (*)(void))sub_1C2A6235C);
      sub_1C2A62588((uint64_t)v46, (uint64_t (*)(void))sub_1C2A6235C);
      sub_1C2A62588((uint64_t)v25, type metadata accessor for SignificantChange);
      sub_1C2A62588((uint64_t)v50, (uint64_t (*)(void))sub_1C2A6235C);
      if ((v53 & 1) == 0) {
        return 0;
      }
      goto LABEL_15;
    }
    sub_1C2A62588((uint64_t)v81, (uint64_t (*)(void))sub_1C2A6235C);
    sub_1C2A62588((uint64_t)v46, (uint64_t (*)(void))sub_1C2A6235C);
    sub_1C2A62588((uint64_t)v25, type metadata accessor for SignificantChange);
    goto LABEL_13;
  }
  sub_1C2A62588((uint64_t)v48, (uint64_t (*)(void))sub_1C2A6235C);
  sub_1C2A62588((uint64_t)v46, (uint64_t (*)(void))sub_1C2A6235C);
  if (v40(v51, 1, v14) != 1)
  {
LABEL_13:
    char v41 = &qword_1EA31F168;
    char v42 = sub_1C2A6235C;
    char v43 = v50;
    goto LABEL_21;
  }
  sub_1C2A62588((uint64_t)v50, (uint64_t (*)(void))sub_1C2A6235C);
LABEL_15:
  uint64_t v54 = v72;
  sub_1C2A623B0(v80 + *(int *)(v45 + 24), (uint64_t)v72);
  uint64_t v55 = v47 + *(int *)(v45 + 24);
  uint64_t v56 = v71;
  sub_1C2A623B0(v55, (uint64_t)v71);
  uint64_t v57 = v76;
  uint64_t v58 = (uint64_t)&v76[*(int *)(v70 + 48)];
  sub_1C2A623B0((uint64_t)v54, (uint64_t)v76);
  sub_1C2A623B0((uint64_t)v56, v58);
  uint64_t v59 = v74;
  uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
  if (v60((uint64_t)v57, 1, v74) == 1)
  {
    sub_1C2A62588((uint64_t)v56, (uint64_t (*)(void))sub_1C2A62430);
    sub_1C2A62588((uint64_t)v54, (uint64_t (*)(void))sub_1C2A62430);
    if (v60(v58, 1, v59) == 1)
    {
      sub_1C2A62588((uint64_t)v76, (uint64_t (*)(void))sub_1C2A62430);
      return 1;
    }
    goto LABEL_20;
  }
  uint64_t v61 = v69;
  sub_1C2A623B0((uint64_t)v76, (uint64_t)v69);
  if (v60(v58, 1, v59) == 1)
  {
    sub_1C2A62588((uint64_t)v56, (uint64_t (*)(void))sub_1C2A62430);
    sub_1C2A62588((uint64_t)v54, (uint64_t (*)(void))sub_1C2A62430);
    sub_1C2A62588((uint64_t)v61, type metadata accessor for SignificantChangeEngine.State);
LABEL_20:
    char v41 = &qword_1EA31F178;
    char v42 = sub_1C2A62430;
    char v43 = v76;
    goto LABEL_21;
  }
  uint64_t v63 = v68;
  sub_1C2A62484(v58, (uint64_t)v68, type metadata accessor for SignificantChangeEngine.State);
  BOOL v64 = _s19HealthVisualization23SignificantChangeEngineV5StateV2eeoiySbAE_AEtFZ_0((uint64_t)v61, (uint64_t)v63);
  sub_1C2A62588((uint64_t)v63, type metadata accessor for SignificantChangeEngine.State);
  sub_1C2A62588((uint64_t)v56, (uint64_t (*)(void))sub_1C2A62430);
  sub_1C2A62588((uint64_t)v54, (uint64_t (*)(void))sub_1C2A62430);
  sub_1C2A62588((uint64_t)v61, type metadata accessor for SignificantChangeEngine.State);
  sub_1C2A62588((uint64_t)v76, (uint64_t (*)(void))sub_1C2A62430);
  return v64;
}

BOOL _s19HealthVisualization23SignificantChangeEngineV5StateV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v67 = a2;
  uint64_t v3 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
  uint64_t v62 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v59 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A79EF4(0, &qword_1EA31F158, sub_1C2A62A98);
  uint64_t v61 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v64 = (uint64_t)&v54 - v6;
  sub_1C2A62A98(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v60 = (uint64_t)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v54 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v54 - v13;
  uint64_t v15 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
  uint64_t v65 = *(void *)(v15 - 8);
  uint64_t v66 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A79EF4(0, &qword_1EA31F160, sub_1C2A62A2C);
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v54 - v20;
  sub_1C2A62A2C(0);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v54 - v26;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v54 - v29;
  uint64_t v31 = a1;
  uint64_t v32 = v67;
  if ((sub_1C2A9C328() & 1) == 0) {
    return 0;
  }
  uint64_t v57 = v14;
  uint64_t v58 = v24;
  uint64_t v55 = v17;
  uint64_t v56 = v11;
  uint64_t v33 = type metadata accessor for SignificantChangeEngine.State(0);
  sub_1C2A62A14(v31 + *(int *)(v33 + 20), (uint64_t)v30);
  uint64_t v34 = v32;
  sub_1C2A62A14(v32 + *(int *)(v33 + 20), (uint64_t)v27);
  uint64_t v35 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_1C2A62A14((uint64_t)v30, (uint64_t)v21);
  sub_1C2A62A14((uint64_t)v27, v35);
  uint64_t v36 = v66;
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  if (v37((uint64_t)v21, 1, v66) != 1)
  {
    sub_1C2A62A14((uint64_t)v21, (uint64_t)v58);
    if (v37(v35, 1, v36) != 1)
    {
      uint64_t v65 = v31;
      uint64_t v41 = (uint64_t)v55;
      sub_1C2A62484(v35, (uint64_t)v55, type metadata accessor for SignificantChangeEngine.State.MeanShift);
      uint64_t v42 = (uint64_t)v58;
      BOOL v43 = _s19HealthVisualization23SignificantChangeEngineV5StateV9MeanShiftV2eeoiySbAG_AGtFZ_0((uint64_t)v58, v41);
      sub_1C2A62588(v41, type metadata accessor for SignificantChangeEngine.State.MeanShift);
      sub_1C2A62588((uint64_t)v27, (uint64_t (*)(void))sub_1C2A62A2C);
      sub_1C2A62588((uint64_t)v30, (uint64_t (*)(void))sub_1C2A62A2C);
      sub_1C2A62588(v42, type metadata accessor for SignificantChangeEngine.State.MeanShift);
      sub_1C2A62588((uint64_t)v21, (uint64_t (*)(void))sub_1C2A62A2C);
      if (!v43) {
        return 0;
      }
      goto LABEL_9;
    }
    sub_1C2A62588((uint64_t)v27, (uint64_t (*)(void))sub_1C2A62A2C);
    sub_1C2A62588((uint64_t)v30, (uint64_t (*)(void))sub_1C2A62A2C);
    sub_1C2A62588((uint64_t)v58, type metadata accessor for SignificantChangeEngine.State.MeanShift);
LABEL_7:
    char v38 = &qword_1EA31F160;
    uint64_t v39 = sub_1C2A62A2C;
    uint64_t v40 = (uint64_t)v21;
LABEL_15:
    sub_1C2A79F54(v40, v38, v39);
    return 0;
  }
  uint64_t v65 = v31;
  sub_1C2A62588((uint64_t)v27, (uint64_t (*)(void))sub_1C2A62A2C);
  sub_1C2A62588((uint64_t)v30, (uint64_t (*)(void))sub_1C2A62A2C);
  if (v37(v35, 1, v36) != 1) {
    goto LABEL_7;
  }
  sub_1C2A62588((uint64_t)v21, (uint64_t (*)(void))sub_1C2A62A2C);
LABEL_9:
  uint64_t v44 = (uint64_t)v57;
  sub_1C2A62A80(v65 + *(int *)(v33 + 24), (uint64_t)v57);
  uint64_t v45 = (uint64_t)v56;
  sub_1C2A62A80(v34 + *(int *)(v33 + 24), (uint64_t)v56);
  uint64_t v46 = v64;
  uint64_t v47 = v64 + *(int *)(v61 + 48);
  sub_1C2A62A80(v44, v64);
  sub_1C2A62A80(v45, v47);
  uint64_t v48 = v63;
  uint64_t v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
  if (v49(v46, 1, v63) == 1)
  {
    sub_1C2A62588(v45, (uint64_t (*)(void))sub_1C2A62A98);
    sub_1C2A62588(v44, (uint64_t (*)(void))sub_1C2A62A98);
    if (v49(v47, 1, v48) == 1)
    {
      sub_1C2A62588(v46, (uint64_t (*)(void))sub_1C2A62A98);
      return 1;
    }
    goto LABEL_14;
  }
  uint64_t v50 = v60;
  sub_1C2A62A80(v46, v60);
  if (v49(v47, 1, v48) == 1)
  {
    sub_1C2A62588(v45, (uint64_t (*)(void))sub_1C2A62A98);
    sub_1C2A62588(v44, (uint64_t (*)(void))sub_1C2A62A98);
    sub_1C2A62588(v50, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
LABEL_14:
    char v38 = &qword_1EA31F158;
    uint64_t v39 = sub_1C2A62A98;
    uint64_t v40 = v46;
    goto LABEL_15;
  }
  uint64_t v52 = v59;
  sub_1C2A62484(v47, v59, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
  BOOL v53 = _s19HealthVisualization23SignificantChangeEngineV5StateV14FrequencyShiftV2eeoiySbAG_AGtFZ_0(v50, v52);
  sub_1C2A62588(v52, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
  sub_1C2A62588(v45, (uint64_t (*)(void))sub_1C2A62A98);
  sub_1C2A62588(v44, (uint64_t (*)(void))sub_1C2A62A98);
  sub_1C2A62588(v50, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
  sub_1C2A62588(v46, (uint64_t (*)(void))sub_1C2A62A98);
  return v53;
}

BOOL _s19HealthVisualization23SignificantChangeEngineV5StateV9MeanShiftV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v78 = sub_1C2A9C6E8();
  uint64_t v76 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v70 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A79EF4(0, (unint64_t *)&qword_1EBB8E880, sub_1C2A62B24);
  uint64_t v73 = v5;
  MEMORY[0x1F4188790](v5);
  int v77 = (char *)&v70 - v6;
  sub_1C2A62B24(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v71 = (uint64_t)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v74 = (uint64_t)&v70 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v75 = (uint64_t)&v70 - v12;
  uint64_t v13 = type metadata accessor for SignificantChangeEngine.Changepoint(0);
  uint64_t v82 = *(void *)(v13 - 8);
  uint64_t v83 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v72 = (uint64_t)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A79EF4(0, &qword_1EA31F170, sub_1C299F0F4);
  uint64_t v80 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v84 = (uint64_t)&v70 - v16;
  sub_1C299F0F4(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v79 = (uint64_t)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v81 = (uint64_t)&v70 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v87 = (uint64_t)&v70 - v22;
  uint64_t v23 = type metadata accessor for SignificantChange(0);
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A79EF4(0, &qword_1EA31F168, sub_1C2A6235C);
  uint64_t v28 = v27 - 8;
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&v70 - v29;
  sub_1C2A6235C(0);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v33 = (char *)&v70 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)&v70 - v35;
  MEMORY[0x1F4188790](v37);
  uint64_t v39 = (char *)&v70 - v38;
  uint64_t v85 = a1;
  sub_1C2A62344(a1, (uint64_t)&v70 - v38);
  uint64_t v86 = a2;
  sub_1C2A62344(a2, (uint64_t)v36);
  uint64_t v40 = (uint64_t)&v30[*(int *)(v28 + 56)];
  sub_1C2A62344((uint64_t)v39, (uint64_t)v30);
  sub_1C2A62344((uint64_t)v36, v40);
  uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  if (v41((uint64_t)v30, 1, v23) == 1)
  {
    sub_1C2A62588((uint64_t)v36, (uint64_t (*)(void))sub_1C2A6235C);
    sub_1C2A62588((uint64_t)v39, (uint64_t (*)(void))sub_1C2A6235C);
    if (v41(v40, 1, v23) == 1)
    {
      sub_1C2A62588((uint64_t)v30, (uint64_t (*)(void))sub_1C2A6235C);
      goto LABEL_9;
    }
LABEL_6:
    uint64_t v42 = &qword_1EA31F168;
    BOOL v43 = sub_1C2A6235C;
LABEL_7:
    uint64_t v44 = v43;
    uint64_t v45 = (uint64_t)v30;
LABEL_15:
    sub_1C2A79F54(v45, v42, v44);
    return 0;
  }
  sub_1C2A62344((uint64_t)v30, (uint64_t)v33);
  if (v41(v40, 1, v23) == 1)
  {
    sub_1C2A62588((uint64_t)v36, (uint64_t (*)(void))sub_1C2A6235C);
    sub_1C2A62588((uint64_t)v39, (uint64_t (*)(void))sub_1C2A6235C);
    sub_1C2A62588((uint64_t)v33, type metadata accessor for SignificantChange);
    goto LABEL_6;
  }
  sub_1C2A62484(v40, (uint64_t)v26, type metadata accessor for SignificantChange);
  char v46 = _s19HealthVisualization17SignificantChangeV2eeoiySbAC_ACtFZ_0((uint64_t)v33, (uint64_t)v26);
  sub_1C2A62588((uint64_t)v26, type metadata accessor for SignificantChange);
  sub_1C2A62588((uint64_t)v36, (uint64_t (*)(void))sub_1C2A6235C);
  sub_1C2A62588((uint64_t)v39, (uint64_t (*)(void))sub_1C2A6235C);
  sub_1C2A62588((uint64_t)v33, type metadata accessor for SignificantChange);
  sub_1C2A62588((uint64_t)v30, (uint64_t (*)(void))sub_1C2A6235C);
  if ((v46 & 1) == 0) {
    return 0;
  }
LABEL_9:
  uint64_t v47 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
  uint64_t v48 = v85;
  uint64_t v49 = v87;
  sub_1C2A62AEC(v85 + *(int *)(v47 + 20), v87);
  uint64_t v50 = v86;
  uint64_t v51 = v81;
  sub_1C2A62AEC(v86 + *(int *)(v47 + 20), v81);
  uint64_t v52 = v84;
  uint64_t v53 = v84 + *(int *)(v80 + 48);
  sub_1C2A62AEC(v49, v84);
  sub_1C2A62AEC(v51, v53);
  uint64_t v54 = v83;
  uint64_t v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48);
  if (v55(v52, 1, v83) != 1)
  {
    uint64_t v56 = v79;
    sub_1C2A62AEC(v52, v79);
    if (v55(v53, 1, v54) != 1)
    {
      uint64_t v58 = v72;
      sub_1C2A62484(v53, v72, type metadata accessor for SignificantChangeEngine.Changepoint);
      BOOL v59 = _s19HealthVisualization23SignificantChangeEngineV11ChangepointV2eeoiySbAE_AEtFZ_0(v56, v58);
      sub_1C2A62588(v58, type metadata accessor for SignificantChangeEngine.Changepoint);
      sub_1C2A62588(v51, (uint64_t (*)(void))sub_1C299F0F4);
      sub_1C2A62588(v87, (uint64_t (*)(void))sub_1C299F0F4);
      sub_1C2A62588(v56, type metadata accessor for SignificantChangeEngine.Changepoint);
      sub_1C2A62588(v52, (uint64_t (*)(void))sub_1C299F0F4);
      if (!v59) {
        return 0;
      }
      goto LABEL_19;
    }
    sub_1C2A62588(v51, (uint64_t (*)(void))sub_1C299F0F4);
    sub_1C2A62588(v87, (uint64_t (*)(void))sub_1C299F0F4);
    sub_1C2A62588(v56, type metadata accessor for SignificantChangeEngine.Changepoint);
LABEL_14:
    uint64_t v42 = &qword_1EA31F170;
    uint64_t v44 = sub_1C299F0F4;
    uint64_t v45 = v52;
    goto LABEL_15;
  }
  sub_1C2A62588(v51, (uint64_t (*)(void))sub_1C299F0F4);
  sub_1C2A62588(v49, (uint64_t (*)(void))sub_1C299F0F4);
  if (v55(v53, 1, v54) != 1) {
    goto LABEL_14;
  }
  sub_1C2A62588(v52, (uint64_t (*)(void))sub_1C299F0F4);
LABEL_19:
  uint64_t v60 = v75;
  sub_1C2939D90(v48 + *(int *)(v47 + 24), v75);
  uint64_t v61 = v74;
  sub_1C2939D90(v50 + *(int *)(v47 + 24), v74);
  uint64_t v30 = v77;
  uint64_t v62 = (uint64_t)&v77[*(int *)(v73 + 48)];
  sub_1C2939D90(v60, (uint64_t)v77);
  sub_1C2939D90(v61, v62);
  uint64_t v63 = v76;
  uint64_t v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
  uint64_t v65 = v78;
  if (v64((uint64_t)v30, 1, v78) == 1)
  {
    sub_1C2A62588(v61, (uint64_t (*)(void))sub_1C2A62B24);
    sub_1C2A62588(v60, (uint64_t (*)(void))sub_1C2A62B24);
    if (v64(v62, 1, v65) == 1)
    {
      sub_1C2A62588((uint64_t)v30, (uint64_t (*)(void))sub_1C2A62B24);
      return 1;
    }
    goto LABEL_24;
  }
  uint64_t v66 = v71;
  sub_1C2939D90((uint64_t)v30, v71);
  if (v64(v62, 1, v65) == 1)
  {
    sub_1C2A62588(v61, (uint64_t (*)(void))sub_1C2A62B24);
    sub_1C2A62588(v60, (uint64_t (*)(void))sub_1C2A62B24);
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v66, v65);
LABEL_24:
    uint64_t v42 = (unint64_t *)&qword_1EBB8E880;
    BOOL v43 = sub_1C2A62B24;
    goto LABEL_7;
  }
  uint64_t v67 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v70, v62, v65);
  sub_1C2A62540(&qword_1EA31E8C0, MEMORY[0x1E4F27928]);
  char v68 = sub_1C2A9DCE8();
  int v69 = *(void (**)(char *, uint64_t))(v63 + 8);
  v69(v67, v65);
  sub_1C2A62588(v61, (uint64_t (*)(void))sub_1C2A62B24);
  sub_1C2A62588(v60, (uint64_t (*)(void))sub_1C2A62B24);
  v69((char *)v66, v65);
  sub_1C2A62588((uint64_t)v30, (uint64_t (*)(void))sub_1C2A62B24);
  return (v68 & 1) != 0;
}

BOOL _s19HealthVisualization23SignificantChangeEngineV5StateV14FrequencyShiftV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SignificantChange(0);
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v57 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A79EF4(0, &qword_1EA31F168, sub_1C2A6235C);
  uint64_t v59 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v64 = (char *)&v57 - v7;
  sub_1C2A6235C(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v58 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v60 = (uint64_t)&v57 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v61 = (uint64_t)&v57 - v13;
  uint64_t v14 = sub_1C2A9C6E8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2A79EF4(0, (unint64_t *)&qword_1EBB8E880, sub_1C2A62B24);
  uint64_t v19 = v18 - 8;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v57 - v20;
  sub_1C2A62B24(0);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v57 - v26;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v57 - v29;
  uint64_t v65 = a1;
  sub_1C2939D90(a1, (uint64_t)&v57 - v29);
  uint64_t v66 = a2;
  sub_1C2939D90(a2, (uint64_t)v27);
  uint64_t v31 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_1C2939D90((uint64_t)v30, (uint64_t)v21);
  sub_1C2939D90((uint64_t)v27, v31);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v21, 1, v14) == 1)
  {
    sub_1C2A62588((uint64_t)v27, (uint64_t (*)(void))sub_1C2A62B24);
    sub_1C2A62588((uint64_t)v30, (uint64_t (*)(void))sub_1C2A62B24);
    if (v32(v31, 1, v14) == 1)
    {
      sub_1C2A62588((uint64_t)v21, (uint64_t (*)(void))sub_1C2A62B24);
LABEL_8:
      uint64_t v37 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
      uint64_t v38 = *(int *)(v37 + 20);
      uint64_t v40 = v65;
      uint64_t v39 = v66;
      int v41 = *(unsigned __int8 *)(v65 + v38);
      int v42 = *(unsigned __int8 *)(v66 + v38);
      if (v41) {
        uint64_t v43 = 0x6967676F4C746F6ELL;
      }
      else {
        uint64_t v43 = 0x676E6967676F6CLL;
      }
      if (v41) {
        unint64_t v44 = 0xEA0000000000676ELL;
      }
      else {
        unint64_t v44 = 0xE700000000000000;
      }
      if (v42) {
        uint64_t v45 = 0x6967676F4C746F6ELL;
      }
      else {
        uint64_t v45 = 0x676E6967676F6CLL;
      }
      if (v42) {
        unint64_t v46 = 0xEA0000000000676ELL;
      }
      else {
        unint64_t v46 = 0xE700000000000000;
      }
      if (v43 == v45 && v44 == v46)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v47 = sub_1C2A9E8D8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL result = 0;
        if ((v47 & 1) == 0) {
          return result;
        }
      }
      uint64_t v49 = v61;
      sub_1C2A62344(v40 + *(int *)(v37 + 24), v61);
      uint64_t v50 = v60;
      sub_1C2A62344(v39 + *(int *)(v37 + 24), v60);
      uint64_t v21 = v64;
      uint64_t v51 = (uint64_t)&v64[*(int *)(v59 + 48)];
      sub_1C2A62344(v49, (uint64_t)v64);
      sub_1C2A62344(v50, v51);
      uint64_t v52 = v63;
      uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
      if (v53((uint64_t)v21, 1, v63) == 1)
      {
        sub_1C2A62588(v50, (uint64_t (*)(void))sub_1C2A6235C);
        sub_1C2A62588(v49, (uint64_t (*)(void))sub_1C2A6235C);
        if (v53(v51, 1, v52) == 1)
        {
          sub_1C2A62588((uint64_t)v21, (uint64_t (*)(void))sub_1C2A6235C);
          return 1;
        }
      }
      else
      {
        uint64_t v54 = v58;
        sub_1C2A62344((uint64_t)v21, v58);
        if (v53(v51, 1, v52) != 1)
        {
          uint64_t v55 = v57;
          sub_1C2A62484(v51, v57, type metadata accessor for SignificantChange);
          char v56 = _s19HealthVisualization17SignificantChangeV2eeoiySbAC_ACtFZ_0(v54, v55);
          sub_1C2A62588(v55, type metadata accessor for SignificantChange);
          sub_1C2A62588(v50, (uint64_t (*)(void))sub_1C2A6235C);
          sub_1C2A62588(v49, (uint64_t (*)(void))sub_1C2A6235C);
          sub_1C2A62588(v54, type metadata accessor for SignificantChange);
          sub_1C2A62588((uint64_t)v21, (uint64_t (*)(void))sub_1C2A6235C);
          return (v56 & 1) != 0;
        }
        sub_1C2A62588(v50, (uint64_t (*)(void))sub_1C2A6235C);
        sub_1C2A62588(v49, (uint64_t (*)(void))sub_1C2A6235C);
        sub_1C2A62588(v54, type metadata accessor for SignificantChange);
      }
      uint64_t v33 = &qword_1EA31F168;
      uint64_t v34 = sub_1C2A6235C;
      goto LABEL_30;
    }
LABEL_6:
    uint64_t v33 = (unint64_t *)&qword_1EBB8E880;
    uint64_t v34 = sub_1C2A62B24;
LABEL_30:
    sub_1C2A79F54((uint64_t)v21, v33, v34);
    return 0;
  }
  sub_1C2939D90((uint64_t)v21, (uint64_t)v24);
  if (v32(v31, 1, v14) == 1)
  {
    sub_1C2A62588((uint64_t)v27, (uint64_t (*)(void))sub_1C2A62B24);
    sub_1C2A62588((uint64_t)v30, (uint64_t (*)(void))sub_1C2A62B24);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v17, v31, v14);
  sub_1C2A62540(&qword_1EA31E8C0, MEMORY[0x1E4F27928]);
  char v35 = sub_1C2A9DCE8();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v15 + 8);
  v36(v17, v14);
  sub_1C2A62588((uint64_t)v27, (uint64_t (*)(void))sub_1C2A62B24);
  sub_1C2A62588((uint64_t)v30, (uint64_t (*)(void))sub_1C2A62B24);
  v36(v24, v14);
  sub_1C2A62588((uint64_t)v21, (uint64_t (*)(void))sub_1C2A62B24);
  if (v35) {
    goto LABEL_8;
  }
  return 0;
}

double sub_1C2A620F4(char a1)
{
  if (a1 == 4) {
    return 2419200.0;
  }
  if (a1 == 5) {
    return 15724800.0;
  }
  v13[9] = v1;
  v13[10] = v2;
  if (qword_1EBB8FF08 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1C2A9CFE8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBB8FEF0);
  uint64_t v5 = sub_1C2A9CFC8();
  os_log_type_t v6 = sub_1C2A9E0A8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446466;
    v13[0] = v8;
    sub_1C2A62308();
    uint64_t v9 = sub_1C2A9DD58();
    sub_1C2957168(v9, v10, v13);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    uint64_t v11 = sub_1C2A9DD58();
    sub_1C2957168(v11, v12, v13);
    sub_1C2A9E358();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C292A000, v5, v6, "[%{public}s]: Unsupported date range submitted: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87656F0](v8, -1, -1);
    MEMORY[0x1C87656F0](v7, -1, -1);
  }

  return 0.0;
}

unint64_t sub_1C2A62308()
{
  unint64_t result = qword_1EA31F000;
  if (!qword_1EA31F000)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA31F000);
  }
  return result;
}

uint64_t sub_1C2A62344(uint64_t a1, uint64_t a2)
{
  return sub_1C2A623C8(a1, a2, (uint64_t (*)(void))sub_1C2A6235C);
}

void sub_1C2A6235C(uint64_t a1)
{
}

uint64_t type metadata accessor for SignificantChangeEngine.Output(uint64_t a1)
{
  return sub_1C296F4B8(a1, qword_1EBB8EF48);
}

uint64_t sub_1C2A623B0(uint64_t a1, uint64_t a2)
{
  return sub_1C2A623C8(a1, a2, (uint64_t (*)(void))sub_1C2A62430);
}

uint64_t sub_1C2A623C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C2A62430(uint64_t a1)
{
}

uint64_t type metadata accessor for SignificantChangeEngine.State(uint64_t a1)
{
  return sub_1C296F4B8(a1, qword_1EBB8EE90);
}

uint64_t sub_1C2A62484(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C2A624EC()
{
  unint64_t result = qword_1EBB8EF30;
  if (!qword_1EBB8EF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8EF30);
  }
  return result;
}

uint64_t sub_1C2A62540(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2A62588(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1C2A625E8()
{
  unint64_t result = qword_1EA31F008;
  if (!qword_1EA31F008)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA31F008);
  }
  return result;
}

unint64_t sub_1C2A62624()
{
  unint64_t result = qword_1EA31F018;
  if (!qword_1EA31F018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31F018);
  }
  return result;
}

unint64_t sub_1C2A62678()
{
  unint64_t result = qword_1EA31F030;
  if (!qword_1EA31F030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31F030);
  }
  return result;
}

unint64_t sub_1C2A626CC()
{
  unint64_t result = qword_1EA31F038;
  if (!qword_1EA31F038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31F038);
  }
  return result;
}

unint64_t sub_1C2A62720()
{
  unint64_t result = qword_1EA31F040;
  if (!qword_1EA31F040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31F040);
  }
  return result;
}

unint64_t sub_1C2A62774()
{
  unint64_t result = qword_1EA31F050;
  if (!qword_1EA31F050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31F050);
  }
  return result;
}

unint64_t sub_1C2A627C8()
{
  unint64_t result = qword_1EA31F058;
  if (!qword_1EA31F058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31F058);
  }
  return result;
}

unint64_t sub_1C2A6281C()
{
  unint64_t result = qword_1EA31F068;
  if (!qword_1EA31F068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31F068);
  }
  return result;
}

unint64_t sub_1C2A62870()
{
  unint64_t result = qword_1EA31F080;
  if (!qword_1EA31F080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31F080);
  }
  return result;
}

unint64_t sub_1C2A628C4()
{
  unint64_t result = qword_1EA31F088;
  if (!qword_1EA31F088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31F088);
  }
  return result;
}

unint64_t sub_1C2A62918()
{
  unint64_t result = qword_1EA31F090;
  if (!qword_1EA31F090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31F090);
  }
  return result;
}

unint64_t sub_1C2A6296C()
{
  unint64_t result = qword_1EA31F0A0;
  if (!qword_1EA31F0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31F0A0);
  }
  return result;
}

unint64_t sub_1C2A629C0()
{
  unint64_t result = qword_1EA31F0A8;
  if (!qword_1EA31F0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31F0A8);
  }
  return result;
}

uint64_t sub_1C2A62A14(uint64_t a1, uint64_t a2)
{
  return sub_1C2A623C8(a1, a2, (uint64_t (*)(void))sub_1C2A62A2C);
}

void sub_1C2A62A2C(uint64_t a1)
{
}

uint64_t type metadata accessor for SignificantChangeEngine.State.MeanShift(uint64_t a1)
{
  return sub_1C296F4B8(a1, qword_1EBB8EDE0);
}

uint64_t sub_1C2A62A80(uint64_t a1, uint64_t a2)
{
  return sub_1C2A623C8(a1, a2, (uint64_t (*)(void))sub_1C2A62A98);
}

void sub_1C2A62A98(uint64_t a1)
{
}

uint64_t type metadata accessor for SignificantChangeEngine.State.FrequencyShift(uint64_t a1)
{
  return sub_1C296F4B8(a1, qword_1EBB8ED18);
}

uint64_t sub_1C2A62AEC(uint64_t a1, uint64_t a2)
{
  return sub_1C2A623C8(a1, a2, (uint64_t (*)(void))sub_1C299F0F4);
}

uint64_t type metadata accessor for SignificantChangeEngine.Changepoint(uint64_t a1)
{
  return sub_1C296F4B8(a1, qword_1EBB8EBE8);
}

void sub_1C2A62B24(uint64_t a1)
{
}

unint64_t sub_1C2A62B58()
{
  unint64_t result = qword_1EBB8EDB8;
  if (!qword_1EBB8EDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8EDB8);
  }
  return result;
}

unint64_t sub_1C2A62BAC()
{
  unint64_t result = qword_1EBB8ECD8;
  if (!qword_1EBB8ECD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8ECD8);
  }
  return result;
}

unint64_t sub_1C2A62C00()
{
  unint64_t result = qword_1EBB8ECF0;
  if (!qword_1EBB8ECF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8ECF0);
  }
  return result;
}

unint64_t sub_1C2A62C54()
{
  unint64_t result = qword_1EBB8ED00;
  if (!qword_1EBB8ED00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8ED00);
  }
  return result;
}

unint64_t sub_1C2A62CA8()
{
  unint64_t result = qword_1EBB8ECC0;
  if (!qword_1EBB8ECC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8ECC0);
  }
  return result;
}

void sub_1C2A62CFC(uint64_t a1)
{
}

uint64_t sub_1C2A62D30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2A79E18(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1C2A62DA0()
{
  unint64_t result = qword_1EBB8EC98;
  if (!qword_1EBB8EC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8EC98);
  }
  return result;
}

unint64_t sub_1C2A62DF4()
{
  unint64_t result = qword_1EBB8EBC0;
  if (!qword_1EBB8EBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8EBC0);
  }
  return result;
}

unint64_t sub_1C2A62E48()
{
  unint64_t result = qword_1EBB8ECB0;
  if (!qword_1EBB8ECB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8ECB0);
  }
  return result;
}

void sub_1C2A62E9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C2A62F04()
{
  unint64_t result = qword_1EBB8ECB8;
  if (!qword_1EBB8ECB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB8ECB8);
  }
  return result;
}

unint64_t sub_1C2A62F5C()
{
  unint64_t result = qword_1EA31F0B0;
  if (!qword_1EA31F0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31F0B0);
  }
  return result;
}

unint64_t sub_1C2A62FB4()
{
  unint64_t result = qword_1EA31F0B8;
  if (!qword_1EA31F0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA31F0B8);
  }
  return result;
}

uint64_t dispatch thunk of SignificantChangeAnalyzing.analyzeForSignificantChanges(_:parameters:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

ValueMetadata *type metadata accessor for SignificantChangeEngine()
{
  return &type metadata for SignificantChangeEngine;
}

uint64_t *initializeBufferWithCopyOfBuffer for SignificantChangeEngine.Output(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for SignificantChange(0);
    uint64_t v141 = *(void *)(v7 - 8);
    uint64_t v8 = *(unsigned int (**)(void, void, void))(v141 + 48);
    uint64_t v142 = v7;
    if (v8(a2, 1, v7))
    {
      sub_1C2A6235C(0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v137 = v8;
      uint64_t v11 = sub_1C2A9C398();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      unint64_t v12 = (int *)type metadata accessor for SignificantChange.Period(0);
      *(uint64_t *)((char *)a1 + v12[5]) = *(uint64_t *)((char *)a2 + v12[5]);
      *(uint64_t *)((char *)a1 + v12[6]) = *(uint64_t *)((char *)a2 + v12[6]);
      *((unsigned char *)a1 + v12[7]) = *((unsigned char *)a2 + v12[7]);
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 20));
      uint64_t v13 = *(int *)(v7 + 24);
      uint64_t v14 = (uint64_t *)((char *)a1 + v13);
      uint64_t v15 = (uint64_t *)((char *)a2 + v13);
      uint64_t v16 = type metadata accessor for SignificantChange.Notification(0);
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v18 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48);
      swift_bridgeObjectRetain();
      if (v18(v15, 1, v16))
      {
        sub_1C2A64008(0);
        memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v20 = v15[1];
        *uint64_t v14 = *v15;
        v14[1] = v20;
        *((unsigned char *)v14 + 16) = *((unsigned char *)v15 + 16);
        uint64_t v21 = *(int *)(v16 + 24);
        double v129 = (char *)v15 + v21;
        uint64_t v133 = (char *)v14 + v21;
        uint64_t v22 = sub_1C2A9C6E8();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v133, v129, v22);
        v23((char *)v14 + *(int *)(v16 + 28), (char *)v15 + *(int *)(v16 + 28), v22);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      uint64_t v7 = v142;
      uint64_t v8 = v137;
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v141 + 56))(a1, 0, 1, v142);
    }
    uint64_t v24 = *(int *)(a3 + 20);
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    if (v8((char *)a2 + v24, 1, v7))
    {
      sub_1C2A6235C(0);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v138 = v8;
      uint64_t v28 = sub_1C2A9C398();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v25, v26, v28);
      uint64_t v29 = (int *)type metadata accessor for SignificantChange.Period(0);
      *(void *)&v25[v29[5]] = *(void *)&v26[v29[5]];
      *(void *)&v25[v29[6]] = *(void *)&v26[v29[6]];
      v25[v29[7]] = v26[v29[7]];
      *(void *)&v25[*(int *)(v7 + 20)] = *(void *)&v26[*(int *)(v7 + 20)];
      uint64_t v30 = *(int *)(v7 + 24);
      uint64_t v31 = &v25[v30];
      uint64_t v32 = &v26[v30];
      uint64_t v33 = type metadata accessor for SignificantChange.Notification(0);
      uint64_t v34 = *(void *)(v33 - 8);
      char v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
      swift_bridgeObjectRetain();
      if (v35(v32, 1, v33))
      {
        sub_1C2A64008(0);
        memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        uint64_t v37 = *((void *)v32 + 1);
        *(void *)uint64_t v31 = *(void *)v32;
        *((void *)v31 + 1) = v37;
        v31[16] = v32[16];
        uint64_t v38 = *(int *)(v33 + 24);
        uint64_t v130 = &v32[v38];
        uint64_t v134 = &v31[v38];
        uint64_t v39 = sub_1C2A9C6E8();
        uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        v40(v134, v130, v39);
        v40(&v31[*(int *)(v33 + 28)], &v32[*(int *)(v33 + 28)], v39);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      uint64_t v7 = v142;
      uint64_t v8 = v138;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v141 + 56))(v25, 0, 1, v142);
    }
    uint64_t v41 = *(int *)(a3 + 24);
    int v42 = (char *)a1 + v41;
    uint64_t v43 = (char *)a2 + v41;
    uint64_t v44 = type metadata accessor for SignificantChangeEngine.State(0);
    uint64_t v45 = *(void *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      sub_1C2A62430(0);
      memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      uint64_t v47 = sub_1C2A9C398();
      uint64_t v123 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
      v123(v42, v43, v47);
      uint64_t v131 = v42;
      uint64_t v135 = v44;
      uint64_t v48 = *(int *)(v44 + 20);
      uint64_t v49 = &v42[v48];
      uint64_t v50 = &v43[v48];
      uint64_t v51 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v120 = v47;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        sub_1C2A62A2C(0);
        memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
        uint64_t v54 = v131;
        uint64_t v55 = v135;
      }
      else
      {
        uint64_t v119 = v52;
        uint64_t v125 = v51;
        char v56 = v50;
        double v139 = v8;
        uint64_t v127 = v45;
        if (v8(v50, 1, v7))
        {
          sub_1C2A6235C(0);
          uint64_t v58 = v49;
          memcpy(v49, v50, *(void *)(*(void *)(v57 - 8) + 64));
          uint64_t v59 = v51;
          uint64_t v54 = v131;
          uint64_t v55 = v135;
        }
        else
        {
          v123(v49, v50, v47);
          uint64_t v60 = (int *)type metadata accessor for SignificantChange.Period(0);
          *(void *)&v49[v60[5]] = *(void *)&v50[v60[5]];
          *(void *)&v49[v60[6]] = *(void *)&v50[v60[6]];
          v49[v60[7]] = v50[v60[7]];
          *(void *)&v49[*(int *)(v7 + 20)] = *(void *)&v50[*(int *)(v7 + 20)];
          uint64_t v61 = *(int *)(v7 + 24);
          uint64_t v118 = &v49[v61];
          uint64_t v62 = &v50[v61];
          uint64_t v63 = type metadata accessor for SignificantChange.Notification(0);
          uint64_t v117 = *(void *)(v63 - 8);
          uint64_t v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48);
          swift_bridgeObjectRetain();
          uint64_t v54 = v131;
          uint64_t v55 = v135;
          if (v64(v62, 1, v63))
          {
            sub_1C2A64008(0);
            memcpy(v118, v62, *(void *)(*(void *)(v65 - 8) + 64));
          }
          else
          {
            uint64_t v66 = *((void *)v62 + 1);
            *(void *)uint64_t v118 = *(void *)v62;
            *((void *)v118 + 1) = v66;
            v118[16] = v62[16];
            uint64_t v67 = *(int *)(v63 + 24);
            uint64_t v115 = &v62[v67];
            uint64_t v116 = &v118[v67];
            uint64_t v68 = sub_1C2A9C6E8();
            int v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16);
            swift_bridgeObjectRetain();
            v69(v116, v115, v68);
            v69(&v118[*(int *)(v63 + 28)], &v62[*(int *)(v63 + 28)], v68);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v117 + 56))(v118, 0, 1, v63);
          }
          uint64_t v58 = v49;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v141 + 56))(v49, 0, 1, v142);
          uint64_t v59 = v125;
        }
        uint64_t v70 = *(int *)(v59 + 20);
        uint64_t v71 = &v58[v70];
        uint64_t v72 = &v56[v70];
        uint64_t v73 = (int *)type metadata accessor for SignificantChangeEngine.Changepoint(0);
        uint64_t v74 = *((void *)v73 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v74 + 48))(v72, 1, v73))
        {
          sub_1C299F0F4(0);
          memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          uint64_t v76 = sub_1C2A9C6E8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v71, v72, v76);
          *(void *)&v71[v73[5]] = *(void *)&v72[v73[5]];
          *(void *)&v71[v73[6]] = *(void *)&v72[v73[6]];
          *(void *)&v71[v73[7]] = *(void *)&v72[v73[7]];
          *(void *)&v71[v73[8]] = *(void *)&v72[v73[8]];
          *(void *)&v71[v73[9]] = *(void *)&v72[v73[9]];
          *(void *)&v71[v73[10]] = *(void *)&v72[v73[10]];
          uint64_t v77 = v73[11];
          uint64_t v78 = &v71[v77];
          uint64_t v79 = &v72[v77];
          long long v80 = *((_OWORD *)v79 + 1);
          *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
          *((_OWORD *)v78 + 1) = v80;
          *((void *)v78 + 4) = *((void *)v79 + 4);
          uint64_t v81 = v73[12];
          uint64_t v82 = &v71[v81];
          uint64_t v83 = &v72[v81];
          long long v84 = *((_OWORD *)v83 + 1);
          *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
          *((_OWORD *)v82 + 1) = v84;
          *((void *)v82 + 4) = *((void *)v83 + 4);
          (*(void (**)(char *, void, uint64_t, int *))(v74 + 56))(v71, 0, 1, v73);
        }
        uint64_t v85 = *(int *)(v125 + 24);
        uint64_t v86 = &v49[v85];
        uint64_t v87 = &v56[v85];
        uint64_t v88 = sub_1C2A9C6E8();
        uint64_t v89 = *(void *)(v88 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
        {
          sub_1C2A62B24(0);
          memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v87, v88);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
        }
        uint64_t v8 = v139;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v49, 0, 1, v125);
        uint64_t v45 = v127;
      }
      uint64_t v91 = *(int *)(v55 + 24);
      uint64_t v92 = &v54[v91];
      uint64_t v93 = &v43[v91];
      uint64_t v94 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
      uint64_t v95 = *(void *)(v94 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
      {
        sub_1C2A62A98(0);
        memcpy(v92, v93, *(void *)(*(void *)(v96 - 8) + 64));
      }
      else
      {
        uint64_t v132 = v95;
        uint64_t v97 = sub_1C2A9C6E8();
        uint64_t v98 = *(void *)(v97 - 8);
        uint64_t v126 = v98;
        uint64_t v128 = v45;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v93, 1, v97))
        {
          sub_1C2A62B24(0);
          memcpy(v92, v93, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v92, v93, v97);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v92, 0, 1, v97);
        }
        v92[*(int *)(v94 + 20)] = v93[*(int *)(v94 + 20)];
        uint64_t v100 = *(int *)(v94 + 24);
        uint64_t v101 = &v92[v100];
        uint64_t v102 = &v93[v100];
        if (v8(&v93[v100], 1, v142))
        {
          sub_1C2A6235C(0);
          memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
          uint64_t v45 = v128;
          uint64_t v104 = v132;
        }
        else
        {
          uint64_t v136 = a1;
          v123(v101, v102, v120);
          uint64_t v105 = (int *)type metadata accessor for SignificantChange.Period(0);
          *(void *)&v101[v105[5]] = *(void *)&v102[v105[5]];
          *(void *)&v101[v105[6]] = *(void *)&v102[v105[6]];
          v101[v105[7]] = v102[v105[7]];
          *(void *)&v101[*(int *)(v142 + 20)] = *(void *)&v102[*(int *)(v142 + 20)];
          uint64_t v106 = *(int *)(v142 + 24);
          double v140 = &v101[v106];
          uint64_t v107 = &v102[v106];
          uint64_t v108 = type metadata accessor for SignificantChange.Notification(0);
          uint64_t v124 = *(void *)(v108 - 8);
          unint64_t v109 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48);
          swift_bridgeObjectRetain();
          if (v109(v107, 1, v108))
          {
            sub_1C2A64008(0);
            memcpy(v140, v107, *(void *)(*(void *)(v110 - 8) + 64));
          }
          else
          {
            uint64_t v111 = *((void *)v107 + 1);
            *(void *)double v140 = *(void *)v107;
            *((void *)v140 + 1) = v111;
            v140[16] = v107[16];
            uint64_t v112 = *(int *)(v108 + 24);
            __dst = &v107[v112];
            uint64_t v122 = &v140[v112];
            uint64_t v113 = *(void (**)(char *, char *, uint64_t))(v126 + 16);
            swift_bridgeObjectRetain();
            v113(v122, __dst, v97);
            v113(&v140[*(int *)(v108 + 28)], &v107[*(int *)(v108 + 28)], v97);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v140, 0, 1, v108);
          }
          uint64_t v55 = v135;
          a1 = v136;
          uint64_t v45 = v128;
          uint64_t v104 = v132;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v141 + 56))(v101, 0, 1, v142);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v92, 0, 1, v94);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v54, 0, 1, v55);
    }
  }
  return a1;
}

void sub_1C2A64008(uint64_t a1)
{
}

uint64_t destroy for SignificantChangeEngine.Output(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SignificantChange(0);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  if (!v5(a1, 1, v4))
  {
    uint64_t v6 = sub_1C2A9C398();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    swift_bridgeObjectRelease();
    uint64_t v7 = a1 + *(int *)(v4 + 24);
    uint64_t v8 = type metadata accessor for SignificantChange.Notification(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      uint64_t v46 = v7 + *(int *)(v8 + 24);
      uint64_t v9 = sub_1C2A9C6E8();
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
      v10(v46, v9);
      v10(v7 + *(int *)(v8 + 28), v9);
    }
  }
  uint64_t v11 = a1 + *(int *)(a2 + 20);
  if (!v5(v11, 1, v4))
  {
    uint64_t v12 = sub_1C2A9C398();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    swift_bridgeObjectRelease();
    uint64_t v13 = v11 + *(int *)(v4 + 24);
    uint64_t v14 = type metadata accessor for SignificantChange.Notification(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
    {
      swift_bridgeObjectRelease();
      uint64_t v47 = v13 + *(int *)(v14 + 24);
      uint64_t v15 = sub_1C2A9C6E8();
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
      v16(v47, v15);
      v16(v13 + *(int *)(v14 + 28), v15);
    }
  }
  uint64_t v17 = a1 + *(int *)(a2 + 24);
  uint64_t v18 = type metadata accessor for SignificantChangeEngine.State(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18);
  if (!result)
  {
    uint64_t v20 = sub_1C2A9C398();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
    v21(v17, v20);
    uint64_t v22 = v17 + *(int *)(v18 + 20);
    uint64_t v23 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v22, 1, v23))
    {
      uint64_t v44 = v21;
      if (!v5(v22, 1, v4))
      {
        v21(v22, v20);
        swift_bridgeObjectRelease();
        uint64_t v24 = v22 + *(int *)(v4 + 24);
        uint64_t v25 = type metadata accessor for SignificantChange.Notification(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v24, 1, v25))
        {
          swift_bridgeObjectRelease();
          uint64_t v42 = v24 + *(int *)(v25 + 24);
          uint64_t v41 = sub_1C2A9C6E8();
          uint64_t v43 = v5;
          uint64_t v26 = (void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8);
          uint64_t v27 = *v26;
          (*v26)(v42, v41);
          v27(v24 + *(int *)(v25 + 28), v41);
          int v5 = v43;
        }
      }
      uint64_t v28 = v22 + *(int *)(v23 + 20);
      uint64_t v29 = type metadata accessor for SignificantChangeEngine.Changepoint(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29))
      {
        uint64_t v30 = sub_1C2A9C6E8();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v28, v30);
      }
      uint64_t v31 = v22 + *(int *)(v23 + 24);
      uint64_t v32 = sub_1C2A9C6E8();
      uint64_t v33 = *(void *)(v32 - 8);
      uint64_t v21 = v44;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32)) {
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
      }
    }
    uint64_t v34 = v17 + *(int *)(v18 + 24);
    uint64_t v35 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35);
    if (!result)
    {
      uint64_t v36 = sub_1C2A9C6E8();
      uint64_t v45 = *(void *)(v36 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v34, 1, v36)) {
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v34, v36);
      }
      uint64_t v37 = v34 + *(int *)(v35 + 24);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v37, 1, v4);
      if (!result)
      {
        v21(v37, v20);
        swift_bridgeObjectRelease();
        uint64_t v38 = v37 + *(int *)(v4 + 24);
        uint64_t v39 = type metadata accessor for SignificantChange.Notification(0);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v38, 1, v39);
        if (!result)
        {
          swift_bridgeObjectRelease();
          uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
          v48(v38 + *(int *)(v39 + 24), v36);
          uint64_t v40 = v38 + *(int *)(v39 + 28);
          return ((uint64_t (*)(uint64_t, uint64_t))v48)(v40, v36);
        }
      }
    }
  }
  return result;
}

char *initializeWithCopy for SignificantChangeEngine.Output(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SignificantChange(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(void, void, void))(v7 + 48);
  uint64_t v137 = v6;
  uint64_t v128 = v7;
  uint64_t v135 = v8;
  if (v8(a2, 1, v6))
  {
    sub_1C2A6235C(0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v129 = a3;
    uint64_t v10 = sub_1C2A9C398();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    uint64_t v11 = (int *)type metadata accessor for SignificantChange.Period(0);
    *(void *)&a1[v11[5]] = *(void *)&a2[v11[5]];
    *(void *)&a1[v11[6]] = *(void *)&a2[v11[6]];
    a1[v11[7]] = a2[v11[7]];
    *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
    uint64_t v12 = *(int *)(v6 + 24);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = type metadata accessor for SignificantChange.Notification(0);
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      sub_1C2A64008(0);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = *((void *)v14 + 1);
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = v19;
      unsigned char v13[16] = v14[16];
      uint64_t v20 = *(int *)(v15 + 24);
      unsigned __int8 v121 = &v14[v20];
      uint64_t v124 = &v13[v20];
      uint64_t v21 = sub_1C2A9C6E8();
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v124, v121, v21);
      v22(&v13[*(int *)(v15 + 28)], &v14[*(int *)(v15 + 28)], v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v8 = v135;
    uint64_t v6 = v137;
    a3 = v129;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v137);
  }
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  if (v8(&a2[v23], 1, v6))
  {
    sub_1C2A6235C(0);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v130 = a3;
    uint64_t v132 = a1;
    uint64_t v27 = sub_1C2A9C398();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v24, v25, v27);
    uint64_t v28 = (int *)type metadata accessor for SignificantChange.Period(0);
    *(void *)&v24[v28[5]] = *(void *)&v25[v28[5]];
    *(void *)&v24[v28[6]] = *(void *)&v25[v28[6]];
    v24[v28[7]] = v25[v28[7]];
    *(void *)&v24[*(int *)(v6 + 20)] = *(void *)&v25[*(int *)(v6 + 20)];
    uint64_t v29 = *(int *)(v6 + 24);
    uint64_t v30 = &v24[v29];
    uint64_t v31 = &v25[v29];
    uint64_t v32 = type metadata accessor for SignificantChange.Notification(0);
    uint64_t v33 = *(void *)(v32 - 8);
    uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    swift_bridgeObjectRetain();
    if (v34(v31, 1, v32))
    {
      sub_1C2A64008(0);
      memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      uint64_t v36 = *((void *)v31 + 1);
      *(void *)uint64_t v30 = *(void *)v31;
      *((void *)v30 + 1) = v36;
      v30[16] = v31[16];
      uint64_t v37 = *(int *)(v32 + 24);
      uint64_t v122 = &v31[v37];
      uint64_t v125 = &v30[v37];
      uint64_t v38 = sub_1C2A9C6E8();
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      v39(v125, v122, v38);
      v39(&v30[*(int *)(v32 + 28)], &v31[*(int *)(v32 + 28)], v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    a3 = v130;
    a1 = v132;
    uint64_t v6 = v137;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v24, 0, 1, v137);
  }
  uint64_t v40 = *(int *)(a3 + 24);
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  uint64_t v43 = type metadata accessor for SignificantChangeEngine.State(0);
  uint64_t v44 = *(void *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    sub_1C2A62430(0);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v46 = sub_1C2A9C398();
    uint64_t v123 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
    v123(v41, v42, v46);
    uint64_t v47 = *(int *)(v43 + 20);
    uint64_t v131 = v41;
    uint64_t v48 = &v41[v47];
    uint64_t v49 = &v42[v47];
    uint64_t v50 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
    uint64_t v51 = *(void *)(v50 - 8);
    uint64_t v133 = a1;
    uint64_t v116 = v46;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      sub_1C2A62A2C(0);
      memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
      uint64_t v53 = v131;
    }
    else
    {
      __dst = v48;
      uint64_t v126 = v44;
      if (v135(v49, 1, v6))
      {
        sub_1C2A6235C(0);
        uint64_t v55 = v48;
        memcpy(v48, v49, *(void *)(*(void *)(v54 - 8) + 64));
        uint64_t v56 = v51;
      }
      else
      {
        v123(v48, v49, v46);
        uint64_t v57 = (int *)type metadata accessor for SignificantChange.Period(0);
        *(void *)&v48[v57[5]] = *(void *)&v49[v57[5]];
        *(void *)&v48[v57[6]] = *(void *)&v49[v57[6]];
        v48[v57[7]] = v49[v57[7]];
        *(void *)&v48[*(int *)(v6 + 20)] = *(void *)&v49[*(int *)(v6 + 20)];
        uint64_t v58 = *(int *)(v6 + 24);
        uint64_t v114 = &v48[v58];
        uint64_t v59 = &v49[v58];
        uint64_t v60 = type metadata accessor for SignificantChange.Notification(0);
        uint64_t v113 = *(void *)(v60 - 8);
        uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48);
        swift_bridgeObjectRetain();
        if (v61(v59, 1, v60))
        {
          sub_1C2A64008(0);
          memcpy(v114, v59, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          uint64_t v63 = *((void *)v59 + 1);
          *(void *)uint64_t v114 = *(void *)v59;
          *((void *)v114 + 1) = v63;
          v114[16] = v59[16];
          uint64_t v64 = *(int *)(v60 + 24);
          uint64_t v112 = &v114[v64];
          uint64_t v111 = &v59[v64];
          uint64_t v65 = sub_1C2A9C6E8();
          uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
          swift_bridgeObjectRetain();
          v66(v112, v111, v65);
          v66(&v114[*(int *)(v60 + 28)], &v59[*(int *)(v60 + 28)], v65);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v114, 0, 1, v60);
        }
        uint64_t v56 = v51;
        uint64_t v55 = __dst;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(__dst, 0, 1, v137);
      }
      uint64_t v67 = v50;
      uint64_t v68 = *(int *)(v50 + 20);
      int v69 = &v55[v68];
      uint64_t v70 = &v49[v68];
      uint64_t v71 = (int *)type metadata accessor for SignificantChangeEngine.Changepoint(0);
      uint64_t v72 = *((void *)v71 - 1);
      uint64_t v53 = v131;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v72 + 48))(v70, 1, v71))
      {
        sub_1C299F0F4(0);
        memcpy(v69, v70, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        uint64_t v74 = sub_1C2A9C6E8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v69, v70, v74);
        *(void *)&v69[v71[5]] = *(void *)&v70[v71[5]];
        *(void *)&v69[v71[6]] = *(void *)&v70[v71[6]];
        *(void *)&v69[v71[7]] = *(void *)&v70[v71[7]];
        *(void *)&v69[v71[8]] = *(void *)&v70[v71[8]];
        *(void *)&v69[v71[9]] = *(void *)&v70[v71[9]];
        *(void *)&v69[v71[10]] = *(void *)&v70[v71[10]];
        uint64_t v75 = v71[11];
        uint64_t v76 = &v69[v75];
        uint64_t v77 = &v70[v75];
        long long v78 = *((_OWORD *)v77 + 1);
        *(_OWORD *)uint64_t v76 = *(_OWORD *)v77;
        *((_OWORD *)v76 + 1) = v78;
        *((void *)v76 + 4) = *((void *)v77 + 4);
        uint64_t v79 = v71[12];
        long long v80 = &v69[v79];
        uint64_t v81 = &v70[v79];
        long long v82 = *((_OWORD *)v81 + 1);
        *(_OWORD *)long long v80 = *(_OWORD *)v81;
        *((_OWORD *)v80 + 1) = v82;
        *((void *)v80 + 4) = *((void *)v81 + 4);
        (*(void (**)(char *, void, uint64_t, int *))(v72 + 56))(v69, 0, 1, v71);
      }
      uint64_t v83 = *(int *)(v67 + 24);
      long long v84 = &__dst[v83];
      uint64_t v85 = &v49[v83];
      uint64_t v86 = sub_1C2A9C6E8();
      uint64_t v87 = *(void *)(v86 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
      {
        sub_1C2A62B24(0);
        memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v84, v85, v86);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
      }
      uint64_t v6 = v137;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(__dst, 0, 1, v67);
      uint64_t v44 = v126;
    }
    uint64_t v89 = *(int *)(v43 + 24);
    uint64_t v90 = &v53[v89];
    uint64_t v91 = &v42[v89];
    uint64_t v92 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
    uint64_t v93 = *(void *)(v92 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v91, 1, v92))
    {
      sub_1C2A62A98(0);
      memcpy(v90, v91, *(void *)(*(void *)(v94 - 8) + 64));
      a1 = v133;
    }
    else
    {
      uint64_t v95 = sub_1C2A9C6E8();
      uint64_t v96 = *(void *)(v95 - 8);
      uint64_t v127 = v44;
      __dstCGFloat a = (void *)v96;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v91, 1, v95))
      {
        sub_1C2A62B24(0);
        memcpy(v90, v91, *(void *)(*(void *)(v97 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v90, v91, v95);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v90, 0, 1, v95);
      }
      v90[*(int *)(v92 + 20)] = v91[*(int *)(v92 + 20)];
      uint64_t v98 = *(int *)(v92 + 24);
      uint64_t v99 = &v90[v98];
      uint64_t v100 = &v91[v98];
      if (v135(&v91[v98], 1, v6))
      {
        sub_1C2A6235C(0);
        memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
        a1 = v133;
      }
      else
      {
        v123(v99, v100, v116);
        uint64_t v102 = (int *)type metadata accessor for SignificantChange.Period(0);
        *(void *)&v99[v102[5]] = *(void *)&v100[v102[5]];
        *(void *)&v99[v102[6]] = *(void *)&v100[v102[6]];
        v99[v102[7]] = v100[v102[7]];
        *(void *)&v99[*(int *)(v6 + 20)] = *(void *)&v100[*(int *)(v6 + 20)];
        uint64_t v103 = *(int *)(v6 + 24);
        uint64_t v134 = &v100[v103];
        uint64_t v136 = &v99[v103];
        uint64_t v104 = type metadata accessor for SignificantChange.Notification(0);
        uint64_t v120 = *(void *)(v104 - 8);
        uint64_t v105 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48);
        swift_bridgeObjectRetain();
        if (v105(v134, 1, v104))
        {
          sub_1C2A64008(0);
          memcpy(v136, v134, *(void *)(*(void *)(v106 - 8) + 64));
        }
        else
        {
          uint64_t v107 = *((void *)v134 + 1);
          *(void *)uint64_t v136 = *(void *)v134;
          *((void *)v136 + 1) = v107;
          v136[16] = v134[16];
          uint64_t v108 = *(int *)(v104 + 24);
          uint64_t v115 = &v134[v108];
          uint64_t v117 = &v136[v108];
          unint64_t v109 = (void (*)(char *, char *, uint64_t))__dsta[2];
          swift_bridgeObjectRetain();
          v109(v117, v115, v95);
          v109(&v136[*(int *)(v104 + 28)], &v134[*(int *)(v104 + 28)], v95);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v136, 0, 1, v104);
        }
        uint64_t v53 = v131;
        a1 = v133;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v99, 0, 1, v137);
      }
      uint64_t v44 = v127;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v53, 0, 1, v43);
  }
  return a1;
}

unsigned char *assignWithCopy for SignificantChangeEngine.Output(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SignificantChange(0);
  uint64_t v404 = *(void *)(v6 - 8);
  uint64_t v7 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v404 + 48);
  unsigned int v8 = v7(a1, 1, v6);
  unsigned int v9 = v7(a2, 1, v6);
  uint64_t v405 = v7;
  if (!v8)
  {
    if (v9)
    {
      sub_1C2A62588((uint64_t)a1, type metadata accessor for SignificantChange);
      goto LABEL_7;
    }
    uint64_t v399 = a3;
    uint64_t v20 = sub_1C2A9C398();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 24))(a1, a2, v20);
    uint64_t v21 = (int *)type metadata accessor for SignificantChange.Period(0);
    *(void *)&a1[v21[5]] = *(void *)&a2[v21[5]];
    *(void *)&a1[v21[6]] = *(void *)&a2[v21[6]];
    a1[v21[7]] = a2[v21[7]];
    *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v22 = *(int *)(v6 + 24);
    uint64_t v23 = &a1[v22];
    uint64_t v24 = &a2[v22];
    uint64_t v25 = type metadata accessor for SignificantChange.Notification(0);
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    int v28 = v27(v23, 1, v25);
    int v29 = v27(v24, 1, v25);
    if (v28)
    {
      if (!v29)
      {
        *(void *)uint64_t v23 = *(void *)v24;
        *((void *)v23 + 1) = *((void *)v24 + 1);
        unsigned char v23[16] = v24[16];
        uint64_t v30 = *(int *)(v25 + 24);
        __srcCGFloat b = &v23[v30];
        uint64_t v383 = a1;
        uint64_t v31 = &v24[v30];
        uint64_t v389 = v6;
        uint64_t v32 = sub_1C2A9C6E8();
        uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v34 = v31;
        a1 = v383;
        v33(__srcb, v34, v32);
        uint64_t v35 = v32;
        uint64_t v6 = v389;
        v33(&v23[*(int *)(v25 + 28)], &v24[*(int *)(v25 + 28)], v35);
        uint64_t v7 = v405;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_16:
        a3 = v399;
        goto LABEL_17;
      }
    }
    else
    {
      if (!v29)
      {
        *(void *)uint64_t v23 = *(void *)v24;
        *((void *)v23 + 1) = *((void *)v24 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        unsigned char v23[16] = v24[16];
        uint64_t v116 = *(int *)(v25 + 24);
        uint64_t v117 = &v23[v116];
        uint64_t v118 = v6;
        uint64_t v119 = &v24[v116];
        uint64_t v388 = a1;
        uint64_t v120 = sub_1C2A9C6E8();
        unsigned __int8 v121 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 24);
        uint64_t v122 = v119;
        uint64_t v6 = v118;
        v121(v117, v122, v120);
        uint64_t v123 = v120;
        a1 = v388;
        v121(&v23[*(int *)(v25 + 28)], &v24[*(int *)(v25 + 28)], v123);
        goto LABEL_16;
      }
      sub_1C2A62588((uint64_t)v23, type metadata accessor for SignificantChange.Notification);
    }
    sub_1C2A64008(0);
    memcpy(v23, v24, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_16;
  }
  if (v9)
  {
LABEL_7:
    sub_1C2A6235C(0);
    memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v398 = a3;
  uint64_t v10 = sub_1C2A9C398();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
  uint64_t v11 = (int *)type metadata accessor for SignificantChange.Period(0);
  *(void *)&a1[v11[5]] = *(void *)&a2[v11[5]];
  *(void *)&a1[v11[6]] = *(void *)&a2[v11[6]];
  a1[v11[7]] = a2[v11[7]];
  *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
  uint64_t v12 = *(int *)(v6 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for SignificantChange.Notification(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    sub_1C2A64008(0);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    void *v13 = *v14;
    v13[1] = v14[1];
    *((unsigned char *)v13 + 16) = *((unsigned char *)v14 + 16);
    uint64_t v36 = *(int *)(v15 + 24);
    __srcCGFloat c = (char *)v13 + v36;
    uint64_t v384 = a1;
    uint64_t v37 = (char *)v14 + v36;
    uint64_t v38 = sub_1C2A9C6E8();
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v40 = v37;
    a1 = v384;
    v39(__srcc, v40, v38);
    v39((char *)v13 + *(int *)(v15 + 28), (char *)v14 + *(int *)(v15 + 28), v38);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v7 = v405;
  a3 = v398;
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v404 + 56))(a1, 0, 1, v6);
LABEL_17:
  uint64_t v42 = *(int *)(a3 + 20);
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  unsigned int v45 = v7(&a1[v42], 1, v6);
  unsigned int v46 = v7(v44, 1, v6);
  if (v45)
  {
    if (!v46)
    {
      uint64_t v400 = a3;
      uint64_t v47 = sub_1C2A9C398();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v47 - 8) + 16))(v43, v44, v47);
      uint64_t v48 = (int *)type metadata accessor for SignificantChange.Period(0);
      *(void *)&v43[v48[5]] = *(void *)&v44[v48[5]];
      *(void *)&v43[v48[6]] = *(void *)&v44[v48[6]];
      v43[v48[7]] = v44[v48[7]];
      *(void *)&v43[*(int *)(v6 + 20)] = *(void *)&v44[*(int *)(v6 + 20)];
      uint64_t v390 = v6;
      uint64_t v49 = *(int *)(v6 + 24);
      uint64_t v50 = &v43[v49];
      uint64_t v51 = &v44[v49];
      uint64_t v52 = type metadata accessor for SignificantChange.Notification(0);
      uint64_t v53 = *(void *)(v52 - 8);
      uint64_t v54 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v53 + 48);
      swift_bridgeObjectRetain();
      if (v54(v51, 1, v52))
      {
        sub_1C2A64008(0);
        memcpy(v50, v51, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        void *v50 = *v51;
        v50[1] = v51[1];
        *((unsigned char *)v50 + 16) = *((unsigned char *)v51 + 16);
        uint64_t v73 = *(int *)(v52 + 24);
        uint64_t v371 = (char *)v51 + v73;
        __srce = (char *)v50 + v73;
        uint64_t v74 = sub_1C2A9C6E8();
        uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
        swift_bridgeObjectRetain();
        v75(__srce, v371, v74);
        v75((char *)v50 + *(int *)(v52 + 28), (char *)v51 + *(int *)(v52 + 28), v74);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      uint64_t v6 = v390;
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v404 + 56))(v43, 0, 1, v390);
      goto LABEL_32;
    }
LABEL_23:
    sub_1C2A6235C(0);
    memcpy(v43, v44, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_33;
  }
  if (v46)
  {
    sub_1C2A62588((uint64_t)v43, type metadata accessor for SignificantChange);
    goto LABEL_23;
  }
  uint64_t v400 = a3;
  uint64_t v57 = sub_1C2A9C398();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v57 - 8) + 24))(v43, v44, v57);
  uint64_t v58 = (int *)type metadata accessor for SignificantChange.Period(0);
  *(void *)&v43[v58[5]] = *(void *)&v44[v58[5]];
  *(void *)&v43[v58[6]] = *(void *)&v44[v58[6]];
  v43[v58[7]] = v44[v58[7]];
  *(void *)&v43[*(int *)(v6 + 20)] = *(void *)&v44[*(int *)(v6 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v59 = *(int *)(v6 + 24);
  uint64_t v60 = (uint64_t)&v43[v59];
  uint64_t v61 = &v44[v59];
  uint64_t v62 = type metadata accessor for SignificantChange.Notification(0);
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  int v65 = v64(v60, 1, v62);
  int v66 = v64((uint64_t)v61, 1, v62);
  if (!v65)
  {
    if (!v66)
    {
      *(void *)uint64_t v60 = *(void *)v61;
      *(void *)(v60 + 8) = *((void *)v61 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v60 + 16) = v61[16];
      uint64_t v124 = *(int *)(v62 + 24);
      uint64_t v125 = v60 + v124;
      uint64_t v126 = &v61[v124];
      uint64_t v394 = v6;
      uint64_t v127 = sub_1C2A9C6E8();
      uint64_t v128 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v127 - 8) + 24);
      v128(v125, v126, v127);
      uint64_t v129 = v127;
      uint64_t v6 = v394;
      v128(v60 + *(int *)(v62 + 28), &v61[*(int *)(v62 + 28)], v129);
      goto LABEL_32;
    }
    sub_1C2A62588(v60, type metadata accessor for SignificantChange.Notification);
    goto LABEL_31;
  }
  if (v66)
  {
LABEL_31:
    sub_1C2A64008(0);
    memcpy((void *)v60, v61, *(void *)(*(void *)(v76 - 8) + 64));
    goto LABEL_32;
  }
  *(void *)uint64_t v60 = *(void *)v61;
  *(void *)(v60 + 8) = *((void *)v61 + 1);
  *(unsigned char *)(v60 + 16) = v61[16];
  uint64_t v67 = *(int *)(v62 + 24);
  __srcCGFloat d = (void *)(v60 + v67);
  uint64_t v391 = v6;
  uint64_t v68 = &v61[v67];
  uint64_t v385 = a1;
  uint64_t v69 = sub_1C2A9C6E8();
  uint64_t v70 = *(void (**)(void *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
  swift_bridgeObjectRetain();
  uint64_t v71 = v68;
  uint64_t v6 = v391;
  v70(__srcd, v71, v69);
  uint64_t v72 = v69;
  a1 = v385;
  v70((void *)(v60 + *(int *)(v62 + 28)), &v61[*(int *)(v62 + 28)], v72);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
LABEL_32:
  a3 = v400;
LABEL_33:
  uint64_t v77 = *(int *)(a3 + 24);
  uint64_t v78 = (uint64_t)&a1[v77];
  uint64_t v79 = &a2[v77];
  uint64_t v80 = type metadata accessor for SignificantChangeEngine.State(0);
  uint64_t v81 = *(void *)(v80 - 8);
  long long v82 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
  int v83 = v82(v78, 1, v80);
  int v84 = v82((uint64_t)v79, 1, v80);
  if (!v83)
  {
    if (v84)
    {
      sub_1C2A62588(v78, type metadata accessor for SignificantChangeEngine.State);
      goto LABEL_39;
    }
    uint64_t v97 = sub_1C2A9C398();
    uint64_t v368 = *(void *)(v97 - 8);
    uint64_t v373 = v97;
    unint64_t v360 = *(void (**)(uint64_t, char *))(v368 + 24);
    v360(v78, v79);
    uint64_t v98 = *(int *)(v80 + 20);
    uint64_t v402 = v78;
    uint64_t v99 = (char *)(v78 + v98);
    uint64_t v100 = &v79[v98];
    uint64_t v101 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
    uint64_t v363 = *(void **)(v101 - 8);
    uint64_t v102 = (uint64_t (*)(char *, uint64_t, uint64_t))v363[6];
    uint64_t v103 = v99;
    LODWORD(v99) = v102(v99, 1, v101);
    __srCGFloat c = v100;
    int v104 = v102(v100, 1, v101);
    uint64_t v387 = a1;
    if (v99)
    {
      if (!v104)
      {
        uint64_t v105 = v100;
        uint64_t v106 = v103;
        uint64_t v393 = v6;
        if (v405(__src, 1, v6))
        {
          sub_1C2A6235C(0);
          memcpy(v103, __src, *(void *)(*(void *)(v107 - 8) + 64));
          uint64_t v108 = v363;
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v368 + 16))(v103, __src, v373);
          double v140 = (int *)type metadata accessor for SignificantChange.Period(0);
          *(void *)&v103[v140[5]] = *(void *)&__src[v140[5]];
          *(void *)&v103[v140[6]] = *(void *)&__src[v140[6]];
          v103[v140[7]] = __src[v140[7]];
          *(void *)&v103[*(int *)(v6 + 20)] = *(void *)&__src[*(int *)(v6 + 20)];
          uint64_t v141 = *(int *)(v6 + 24);
          __dstCGFloat a = &v103[v141];
          uint64_t v142 = &__src[v141];
          uint64_t v143 = type metadata accessor for SignificantChange.Notification(0);
          uint64_t v348 = *(void *)(v143 - 8);
          uint64_t v144 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v348 + 48);
          swift_bridgeObjectRetain();
          uint64_t v108 = v363;
          if (v144(v142, 1, v143))
          {
            sub_1C2A64008(0);
            memcpy(__dsta, v142, *(void *)(*(void *)(v145 - 8) + 64));
          }
          else
          {
            *(void *)__dstCGFloat a = *(void *)v142;
            *((void *)__dsta + 1) = *((void *)v142 + 1);
            __dsta[16] = v142[16];
            uint64_t v197 = *(int *)(v143 + 24);
            uint64_t v342 = &v142[v197];
            uint64_t v344 = &__dsta[v197];
            uint64_t v198 = sub_1C2A9C6E8();
            uint64_t v199 = *(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16);
            swift_bridgeObjectRetain();
            v199(v344, v342, v198);
            v199(&__dsta[*(int *)(v143 + 28)], &v142[*(int *)(v143 + 28)], v198);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v348 + 56))(__dsta, 0, 1, v143);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v404 + 56))(v106, 0, 1, v393);
          uint64_t v105 = __src;
        }
        uint64_t v200 = *(int *)(v101 + 20);
        uint64_t v201 = &v106[v200];
        uint64_t v202 = &v105[v200];
        uint64_t v203 = (int *)type metadata accessor for SignificantChangeEngine.Changepoint(0);
        uint64_t v204 = *((void *)v203 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v204 + 48))(v202, 1, v203))
        {
          sub_1C299F0F4(0);
          memcpy(v201, v202, *(void *)(*(void *)(v205 - 8) + 64));
        }
        else
        {
          uint64_t v206 = sub_1C2A9C6E8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 16))(v201, v202, v206);
          *(void *)&v201[v203[5]] = *(void *)&v202[v203[5]];
          *(void *)&v201[v203[6]] = *(void *)&v202[v203[6]];
          *(void *)&v201[v203[7]] = *(void *)&v202[v203[7]];
          *(void *)&v201[v203[8]] = *(void *)&v202[v203[8]];
          *(void *)&v201[v203[9]] = *(void *)&v202[v203[9]];
          *(void *)&v201[v203[10]] = *(void *)&v202[v203[10]];
          uint64_t v207 = v203[11];
          uint64_t v208 = &v201[v207];
          uint64_t v209 = &v202[v207];
          uint64_t v210 = *((void *)v209 + 4);
          long long v211 = *((_OWORD *)v209 + 1);
          *(_OWORD *)uint64_t v208 = *(_OWORD *)v209;
          *((_OWORD *)v208 + 1) = v211;
          *((void *)v208 + 4) = v210;
          uint64_t v212 = v203[12];
          uint64_t v213 = &v201[v212];
          uint64_t v214 = &v202[v212];
          long long v216 = *(_OWORD *)v214;
          long long v215 = *((_OWORD *)v214 + 1);
          *((void *)v213 + 4) = *((void *)v214 + 4);
          *(_OWORD *)uint64_t v213 = v216;
          *((_OWORD *)v213 + 1) = v215;
          (*(void (**)(char *, void, uint64_t, int *))(v204 + 56))(v201, 0, 1, v203);
        }
        uint64_t v217 = *(int *)(v101 + 24);
        uint64_t v218 = &v106[v217];
        uint64_t v219 = &__src[v217];
        uint64_t v220 = sub_1C2A9C6E8();
        uint64_t v221 = *(void *)(v220 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v221 + 48))(v219, 1, v220))
        {
          sub_1C2A62B24(0);
          memcpy(v218, v219, *(void *)(*(void *)(v222 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v221 + 16))(v218, v219, v220);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v221 + 56))(v218, 0, 1, v220);
        }
        uint64_t v6 = v393;
        ((void (*)(char *, void, uint64_t, uint64_t))v108[7])(v106, 0, 1, v101);
        goto LABEL_95;
      }
LABEL_49:
      sub_1C2A62A2C(0);
      memcpy(v103, v100, *(void *)(*(void *)(v110 - 8) + 64));
LABEL_95:
      uint64_t v223 = v402;
      goto LABEL_96;
    }
    if (v104)
    {
      sub_1C2A62588((uint64_t)v103, type metadata accessor for SignificantChangeEngine.State.MeanShift);
      goto LABEL_49;
    }
    uint64_t v130 = v103;
    unsigned int v131 = v405(v103, 1, v6);
    unsigned int v132 = v405(__src, 1, v6);
    uint64_t v395 = v6;
    if (v131)
    {
      if (!v132)
      {
        (*(void (**)(char *, char *, uint64_t))(v368 + 16))(v103, __src, v373);
        uint64_t v133 = (int *)type metadata accessor for SignificantChange.Period(0);
        *(void *)&v103[v133[5]] = *(void *)&__src[v133[5]];
        *(void *)&v103[v133[6]] = *(void *)&__src[v133[6]];
        v103[v133[7]] = __src[v133[7]];
        *(void *)&v103[*(int *)(v6 + 20)] = *(void *)&__src[*(int *)(v6 + 20)];
        uint64_t v134 = *(int *)(v6 + 24);
        uint64_t v135 = &v103[v134];
        uint64_t v136 = &__src[v134];
        uint64_t v137 = type metadata accessor for SignificantChange.Notification(0);
        uint64_t v365 = *(void **)(v137 - 8);
        uint64_t v138 = (unsigned int (*)(char *, uint64_t, uint64_t))v365[6];
        swift_bridgeObjectRetain();
        if (v138(v136, 1, v137))
        {
          sub_1C2A64008(0);
          memcpy(v135, v136, *(void *)(*(void *)(v139 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v135 = *(void *)v136;
          *((void *)v135 + 1) = *((void *)v136 + 1);
          v135[16] = v136[16];
          uint64_t v294 = *(int *)(v137 + 24);
          uint64_t v350 = &v136[v294];
          __dstCGFloat d = &v135[v294];
          uint64_t v295 = sub_1C2A9C6E8();
          char v296 = *(void (**)(char *, char *, uint64_t))(*(void *)(v295 - 8) + 16);
          swift_bridgeObjectRetain();
          v296(__dstd, v350, v295);
          v296(&v135[*(int *)(v137 + 28)], &v136[*(int *)(v137 + 28)], v295);
          ((void (*)(char *, void, uint64_t, uint64_t))v365[7])(v135, 0, 1, v137);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v404 + 56))(v130, 0, 1, v395);
        goto LABEL_138;
      }
LABEL_85:
      sub_1C2A6235C(0);
      uint64_t v196 = __src;
      memcpy(v103, __src, *(void *)(*(void *)(v195 - 8) + 64));
      goto LABEL_139;
    }
    if (v132)
    {
      sub_1C2A62588((uint64_t)v103, type metadata accessor for SignificantChange);
      goto LABEL_85;
    }
    ((void (*)(char *, char *, uint64_t))v360)(v103, __src, v373);
    v270 = (int *)type metadata accessor for SignificantChange.Period(0);
    *(void *)&v103[v270[5]] = *(void *)&__src[v270[5]];
    *(void *)&v103[v270[6]] = *(void *)&__src[v270[6]];
    v103[v270[7]] = __src[v270[7]];
    *(void *)&v103[*(int *)(v6 + 20)] = *(void *)&__src[*(int *)(v6 + 20)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v271 = *(int *)(v6 + 24);
    uint64_t v272 = &v103[v271];
    uint64_t v273 = &__src[v271];
    uint64_t v274 = type metadata accessor for SignificantChange.Notification(0);
    __dstCGFloat b = *(void **)(v274 - 8);
    uint64_t v275 = (uint64_t (*)(char *, uint64_t, uint64_t))__dstb[6];
    int v276 = v275(v272, 1, v274);
    int v277 = v275(v273, 1, v274);
    if (v276)
    {
      if (!v277)
      {
        *(void *)uint64_t v272 = *(void *)v273;
        *((void *)v272 + 1) = *((void *)v273 + 1);
        v272[16] = v273[16];
        uint64_t v278 = *(int *)(v274 + 24);
        uint64_t v346 = &v273[v278];
        char v349 = &v272[v278];
        uint64_t v279 = sub_1C2A9C6E8();
        uint64_t v280 = *(void (**)(char *, char *, uint64_t))(*(void *)(v279 - 8) + 16);
        swift_bridgeObjectRetain();
        v280(v349, v346, v279);
        v280(&v272[*(int *)(v274 + 28)], &v273[*(int *)(v274 + 28)], v279);
        ((void (*)(char *, void, uint64_t, uint64_t))__dstb[7])(v272, 0, 1, v274);
LABEL_138:
        uint64_t v196 = __src;
LABEL_139:
        uint64_t v302 = *(int *)(v101 + 20);
        uint64_t v367 = v130;
        uint64_t v303 = &v130[v302];
        uint64_t v304 = &v196[v302];
        unint64_t v305 = (int *)type metadata accessor for SignificantChangeEngine.Changepoint(0);
        __dstCGFloat c = (void *)*((void *)v305 - 1);
        uint64_t v306 = (uint64_t (*)(char *, uint64_t, int *))__dstc[6];
        int v307 = v306(v303, 1, v305);
        int v308 = v306(v304, 1, v305);
        if (v307)
        {
          if (!v308)
          {
            uint64_t v309 = sub_1C2A9C6E8();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v309 - 8) + 16))(v303, v304, v309);
            *(void *)&v303[v305[5]] = *(void *)&v304[v305[5]];
            *(void *)&v303[v305[6]] = *(void *)&v304[v305[6]];
            *(void *)&v303[v305[7]] = *(void *)&v304[v305[7]];
            *(void *)&v303[v305[8]] = *(void *)&v304[v305[8]];
            *(void *)&v303[v305[9]] = *(void *)&v304[v305[9]];
            *(void *)&v303[v305[10]] = *(void *)&v304[v305[10]];
            uint64_t v310 = v305[11];
            uint64_t v311 = &v303[v310];
            uint64_t v312 = &v304[v310];
            uint64_t v313 = *((void *)v312 + 4);
            long long v314 = *((_OWORD *)v312 + 1);
            *(_OWORD *)uint64_t v311 = *(_OWORD *)v312;
            *((_OWORD *)v311 + 1) = v314;
            *((void *)v311 + 4) = v313;
            uint64_t v315 = v305[12];
            uint64_t v316 = &v303[v315];
            uint64_t v317 = &v304[v315];
            long long v319 = *(_OWORD *)v317;
            long long v318 = *((_OWORD *)v317 + 1);
            *((void *)v316 + 4) = *((void *)v317 + 4);
            *(_OWORD *)uint64_t v316 = v319;
            *((_OWORD *)v316 + 1) = v318;
            ((void (*)(char *, void, uint64_t, int *))__dstc[7])(v303, 0, 1, v305);
            goto LABEL_145;
          }
        }
        else
        {
          if (!v308)
          {
            uint64_t v330 = sub_1C2A9C6E8();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v330 - 8) + 24))(v303, v304, v330);
            *(void *)&v303[v305[5]] = *(void *)&v304[v305[5]];
            *(void *)&v303[v305[6]] = *(void *)&v304[v305[6]];
            *(void *)&v303[v305[7]] = *(void *)&v304[v305[7]];
            *(void *)&v303[v305[8]] = *(void *)&v304[v305[8]];
            *(void *)&v303[v305[9]] = *(void *)&v304[v305[9]];
            *(void *)&v303[v305[10]] = *(void *)&v304[v305[10]];
            uint64_t v331 = v305[11];
            int v332 = &v303[v331];
            uint64_t v333 = &v304[v331];
            *(void *)int v332 = *(void *)v333;
            *((void *)v332 + 1) = *((void *)v333 + 1);
            *((void *)v332 + 2) = *((void *)v333 + 2);
            *((void *)v332 + 3) = *((void *)v333 + 3);
            *((void *)v332 + 4) = *((void *)v333 + 4);
            uint64_t v334 = v305[12];
            unint64_t v335 = &v303[v334];
            uint64_t v336 = &v304[v334];
            *(void *)unint64_t v335 = *(void *)v336;
            *((void *)v335 + 1) = *((void *)v336 + 1);
            *((void *)v335 + 2) = *((void *)v336 + 2);
            *((void *)v335 + 3) = *((void *)v336 + 3);
            *((void *)v335 + 4) = *((void *)v336 + 4);
LABEL_145:
            uint64_t v321 = *(int *)(v101 + 24);
            uint64_t v322 = &v367[v321];
            uint64_t v323 = &__src[v321];
            uint64_t v324 = sub_1C2A9C6E8();
            uint64_t v325 = *(void *)(v324 - 8);
            uint64_t v326 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v325 + 48);
            int v327 = v326(v322, 1, v324);
            int v328 = v326(v323, 1, v324);
            if (v327)
            {
              uint64_t v6 = v395;
              uint64_t v223 = v402;
              if (!v328)
              {
                (*(void (**)(char *, char *, uint64_t))(v325 + 16))(v322, v323, v324);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v325 + 56))(v322, 0, 1, v324);
                goto LABEL_96;
              }
            }
            else
            {
              uint64_t v6 = v395;
              uint64_t v223 = v402;
              if (!v328)
              {
                (*(void (**)(char *, char *, uint64_t))(v325 + 24))(v322, v323, v324);
LABEL_96:
                uint64_t v224 = *(int *)(v80 + 24);
                uint64_t v225 = (char *)(v223 + v224);
                uint64_t v226 = &v79[v224];
                uint64_t v227 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
                uint64_t v228 = *(void *)(v227 - 8);
                __n128 v229 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v228 + 48);
                int v230 = v229(v225, 1, v227);
                int v231 = v229(v226, 1, v227);
                if (v230)
                {
                  if (v231)
                  {
                    sub_1C2A62A98(0);
                    memcpy(v225, v226, *(void *)(*(void *)(v232 - 8) + 64));
                    return v387;
                  }
                  else
                  {
                    uint64_t v234 = sub_1C2A9C6E8();
                    uint64_t v235 = *(void *)(v234 - 8);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v235 + 48))(v226, 1, v234))
                    {
                      sub_1C2A62B24(0);
                      memcpy(v225, v226, *(void *)(*(void *)(v236 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(v235 + 16))(v225, v226, v234);
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v235 + 56))(v225, 0, 1, v234);
                    }
                    v225[*(int *)(v227 + 20)] = v226[*(int *)(v227 + 20)];
                    uint64_t v243 = *(int *)(v227 + 24);
                    uint64_t v244 = &v225[v243];
                    uint64_t v245 = &v226[v243];
                    if (v405(&v226[v243], 1, v6))
                    {
                      sub_1C2A6235C(0);
                      memcpy(v244, v245, *(void *)(*(void *)(v246 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(v368 + 16))(v244, v245, v373);
                      uint64_t v247 = (int *)type metadata accessor for SignificantChange.Period(0);
                      *(void *)&v244[v247[5]] = *(void *)&v245[v247[5]];
                      *(void *)&v244[v247[6]] = *(void *)&v245[v247[6]];
                      v244[v247[7]] = v245[v247[7]];
                      *(void *)&v244[*(int *)(v6 + 20)] = *(void *)&v245[*(int *)(v6 + 20)];
                      uint64_t v396 = v6;
                      uint64_t v248 = *(int *)(v6 + 24);
                      uint64_t v408 = &v244[v248];
                      uint64_t v249 = &v245[v248];
                      uint64_t v250 = type metadata accessor for SignificantChange.Notification(0);
                      uint64_t v403 = *(void *)(v250 - 8);
                      uint64_t v251 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v403 + 48);
                      swift_bridgeObjectRetain();
                      if (v251(v249, 1, v250))
                      {
                        sub_1C2A64008(0);
                        memcpy(v408, v249, *(void *)(*(void *)(v252 - 8) + 64));
                      }
                      else
                      {
                        *(void *)uint64_t v408 = *(void *)v249;
                        *((void *)v408 + 1) = *((void *)v249 + 1);
                        v408[16] = v249[16];
                        uint64_t v268 = *(int *)(v250 + 24);
                        uint64_t v375 = &v249[v268];
                        __srcf = &v408[v268];
                        uint64_t v269 = *(void (**)(char *, char *, uint64_t))(v235 + 16);
                        swift_bridgeObjectRetain();
                        v269(__srcf, v375, v234);
                        v269(&v408[*(int *)(v250 + 28)], &v249[*(int *)(v250 + 28)], v234);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v403 + 56))(v408, 0, 1, v250);
                      }
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v404 + 56))(v244, 0, 1, v396);
                    }
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v228 + 56))(v225, 0, 1, v227);
                    return v387;
                  }
                }
                a1 = v387;
                if (v231)
                {
                  sub_1C2A62588((uint64_t)v225, type metadata accessor for SignificantChangeEngine.State.FrequencyShift);
                  sub_1C2A62A98(0);
                  size_t v94 = *(void *)(*(void *)(v233 - 8) + 64);
                  uint64_t v95 = v225;
                  uint64_t v96 = v226;
                  goto LABEL_40;
                }
                uint64_t v237 = sub_1C2A9C6E8();
                uint64_t v238 = *(void *)(v237 - 8);
                int v239 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v238 + 48);
                int v240 = v239(v225, 1, v237);
                int v241 = v239(v226, 1, v237);
                if (v240)
                {
                  uint64_t v242 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v405;
                  if (!v241)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v238 + 16))(v225, v226, v237);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v238 + 56))(v225, 0, 1, v237);
LABEL_114:
                    v225[*(int *)(v227 + 20)] = v226[*(int *)(v227 + 20)];
                    uint64_t v254 = *(int *)(v227 + 24);
                    uint64_t v255 = (uint64_t)&v225[v254];
                    uint64_t v256 = &v226[v254];
                    int v257 = v242(v255, 1, v6);
                    int v258 = v242((uint64_t)v256, 1, v6);
                    if (v257)
                    {
                      if (!v258)
                      {
                        (*(void (**)(uint64_t, char *, uint64_t))(v368 + 16))(v255, v256, v373);
                        uint64_t v259 = (int *)type metadata accessor for SignificantChange.Period(0);
                        *(void *)(v255 + v259[5]) = *(void *)&v256[v259[5]];
                        *(void *)(v255 + v259[6]) = *(void *)&v256[v259[6]];
                        *(unsigned char *)(v255 + v259[7]) = v256[v259[7]];
                        *(void *)(v255 + *(int *)(v6 + 20)) = *(void *)&v256[*(int *)(v6 + 20)];
                        uint64_t v397 = v6;
                        uint64_t v260 = *(int *)(v6 + 24);
                        uint64_t v261 = (void *)(v255 + v260);
                        uint64_t v262 = &v256[v260];
                        uint64_t v263 = type metadata accessor for SignificantChange.Notification(0);
                        uint64_t v264 = *(void *)(v263 - 8);
                        uint64_t v265 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v264 + 48);
                        swift_bridgeObjectRetain();
                        if (v265(v262, 1, v263))
                        {
                          sub_1C2A64008(0);
                          memcpy(v261, v262, *(void *)(*(void *)(v266 - 8) + 64));
                        }
                        else
                        {
                          void *v261 = *(void *)v262;
                          v261[1] = *((void *)v262 + 1);
                          *((unsigned char *)v261 + 16) = v262[16];
                          uint64_t v297 = *(int *)(v263 + 24);
                          Swift::Int v298 = (char *)v261 + v297;
                          uint64_t v299 = &v262[v297];
                          uint64_t v300 = *(void (**)(char *, char *, uint64_t))(v238 + 16);
                          swift_bridgeObjectRetain();
                          v300(v298, v299, v237);
                          v300((char *)v261 + *(int *)(v263 + 28), &v262[*(int *)(v263 + 28)], v237);
                          (*(void (**)(void *, void, uint64_t, uint64_t))(v264 + 56))(v261, 0, 1, v263);
                        }
                        a1 = v387;
                        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v404 + 56))(v255, 0, 1, v397);
                        return a1;
                      }
                    }
                    else
                    {
                      if (!v258)
                      {
                        ((void (*)(uint64_t, char *, uint64_t))v360)(v255, v256, v373);
                        uint64_t v281 = (int *)type metadata accessor for SignificantChange.Period(0);
                        *(void *)(v255 + v281[5]) = *(void *)&v256[v281[5]];
                        *(void *)(v255 + v281[6]) = *(void *)&v256[v281[6]];
                        *(unsigned char *)(v255 + v281[7]) = v256[v281[7]];
                        *(void *)(v255 + *(int *)(v6 + 20)) = *(void *)&v256[*(int *)(v6 + 20)];
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        uint64_t v282 = *(int *)(v6 + 24);
                        uint64_t v283 = v255 + v282;
                        uint64_t v284 = &v256[v282];
                        uint64_t v285 = type metadata accessor for SignificantChange.Notification(0);
                        uint64_t v286 = *(void *)(v285 - 8);
                        uint64_t v287 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v286 + 48);
                        int v288 = v287(v283, 1, v285);
                        int v289 = v287((uint64_t)v284, 1, v285);
                        if (v288)
                        {
                          if (!v289)
                          {
                            *(void *)uint64_t v283 = *(void *)v284;
                            *(void *)(v283 + 8) = *((void *)v284 + 1);
                            *(unsigned char *)(v283 + 16) = v284[16];
                            uint64_t v290 = *(int *)(v285 + 24);
                            uint64_t v291 = v283 + v290;
                            uint64_t v292 = &v284[v290];
                            uint64_t v293 = *(void (**)(uint64_t, char *, uint64_t))(v238 + 16);
                            swift_bridgeObjectRetain();
                            v293(v291, v292, v237);
                            v293(v283 + *(int *)(v285 + 28), &v284[*(int *)(v285 + 28)], v237);
                            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v286 + 56))(v283, 0, 1, v285);
                            return a1;
                          }
                        }
                        else
                        {
                          if (!v289)
                          {
                            *(void *)uint64_t v283 = *(void *)v284;
                            *(void *)(v283 + 8) = *((void *)v284 + 1);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            *(unsigned char *)(v283 + 16) = v284[16];
                            uint64_t v341 = *(void (**)(uint64_t, char *, uint64_t))(v238 + 24);
                            v341(v283 + *(int *)(v285 + 24), &v284[*(int *)(v285 + 24)], v237);
                            v341(v283 + *(int *)(v285 + 28), &v284[*(int *)(v285 + 28)], v237);
                            return a1;
                          }
                          sub_1C2A62588(v283, type metadata accessor for SignificantChange.Notification);
                        }
                        sub_1C2A64008(0);
                        size_t v94 = *(void *)(*(void *)(v337 - 8) + 64);
                        uint64_t v95 = (void *)v283;
                        uint64_t v96 = v284;
                        goto LABEL_40;
                      }
                      sub_1C2A62588(v255, type metadata accessor for SignificantChange);
                    }
                    sub_1C2A6235C(0);
                    size_t v94 = *(void *)(*(void *)(v267 - 8) + 64);
                    uint64_t v95 = (void *)v255;
                    uint64_t v96 = v256;
LABEL_40:
                    memcpy(v95, v96, v94);
                    return a1;
                  }
                }
                else
                {
                  uint64_t v242 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v405;
                  if (!v241)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v238 + 24))(v225, v226, v237);
                    goto LABEL_114;
                  }
                  (*(void (**)(char *, uint64_t))(v238 + 8))(v225, v237);
                }
                sub_1C2A62B24(0);
                memcpy(v225, v226, *(void *)(*(void *)(v253 - 8) + 64));
                goto LABEL_114;
              }
              (*(void (**)(char *, uint64_t))(v325 + 8))(v322, v324);
            }
            sub_1C2A62B24(0);
            memcpy(v322, v323, *(void *)(*(void *)(v329 - 8) + 64));
            goto LABEL_96;
          }
          sub_1C2A62588((uint64_t)v303, type metadata accessor for SignificantChangeEngine.Changepoint);
        }
        sub_1C299F0F4(0);
        memcpy(v303, v304, *(void *)(*(void *)(v320 - 8) + 64));
        goto LABEL_145;
      }
    }
    else
    {
      if (!v277)
      {
        *(void *)uint64_t v272 = *(void *)v273;
        *((void *)v272 + 1) = *((void *)v273 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v272[16] = v273[16];
        uint64_t v338 = *(int *)(v274 + 24);
        uint64_t v351 = &v273[v338];
        __dste = &v272[v338];
        uint64_t v339 = sub_1C2A9C6E8();
        unint64_t v340 = *(void (**)(char *, char *, uint64_t))(*(void *)(v339 - 8) + 24);
        v340(__dste, v351, v339);
        v340(&v272[*(int *)(v274 + 28)], &v273[*(int *)(v274 + 28)], v339);
        goto LABEL_138;
      }
      sub_1C2A62588((uint64_t)v272, type metadata accessor for SignificantChange.Notification);
    }
    sub_1C2A64008(0);
    memcpy(v272, v273, *(void *)(*(void *)(v301 - 8) + 64));
    goto LABEL_138;
  }
  if (v84)
  {
LABEL_39:
    sub_1C2A62430(0);
    size_t v94 = *(void *)(*(void *)(v93 - 8) + 64);
    uint64_t v95 = (void *)v78;
    uint64_t v96 = v79;
    goto LABEL_40;
  }
  uint64_t v392 = v6;
  uint64_t v85 = sub_1C2A9C398();
  uint64_t v86 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v85 - 8) + 16);
  v86(v78, v79, v85);
  uint64_t v87 = *(int *)(v80 + 20);
  uint64_t v401 = v78;
  uint64_t v88 = (char *)(v78 + v87);
  uint64_t v89 = &v79[v87];
  uint64_t v90 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
  uint64_t v91 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v90 - 8);
  uint64_t v386 = a1;
  uint64_t v372 = (void (*)(char *, char *, uint64_t))v86;
  if (v91[6](v89, 1, v90))
  {
    sub_1C2A62A2C(0);
    memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
  }
  else
  {
    uint64_t v364 = v91;
    uint64_t v369 = v85;
    if (v405(v89, 1, v392))
    {
      sub_1C2A6235C(0);
      memcpy(v88, v89, *(void *)(*(void *)(v109 - 8) + 64));
    }
    else
    {
      v86((uint64_t)v88, v89, v85);
      uint64_t v111 = (int *)type metadata accessor for SignificantChange.Period(0);
      *(void *)&v88[v111[5]] = *(void *)&v89[v111[5]];
      *(void *)&v88[v111[6]] = *(void *)&v89[v111[6]];
      v88[v111[7]] = v89[v111[7]];
      *(void *)&v88[*(int *)(v392 + 20)] = *(void *)&v89[*(int *)(v392 + 20)];
      uint64_t v112 = *(int *)(v392 + 24);
      __dst = &v88[v112];
      uint64_t v113 = &v89[v112];
      uint64_t v114 = type metadata accessor for SignificantChange.Notification(0);
      uint64_t v347 = *(void *)(v114 - 8);
      uint64_t v358 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v347 + 48);
      swift_bridgeObjectRetain();
      uint64_t v361 = v114;
      if (v358(v113, 1, v114))
      {
        sub_1C2A64008(0);
        memcpy(__dst, v113, *(void *)(*(void *)(v115 - 8) + 64));
      }
      else
      {
        *(void *)__dst = *(void *)v113;
        *((void *)__dst + 1) = *((void *)v113 + 1);
        __dst[16] = v113[16];
        uint64_t v146 = *(int *)(v114 + 24);
        v343 = &v113[v146];
        uint64_t v345 = &__dst[v146];
        uint64_t v147 = sub_1C2A9C6E8();
        uint64_t v148 = *(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16);
        swift_bridgeObjectRetain();
        v148(v345, v343, v147);
        v148(&__dst[*(int *)(v361 + 28)], &v113[*(int *)(v361 + 28)], v147);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v347 + 56))(__dst, 0, 1, v361);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v404 + 56))(v88, 0, 1, v392);
    }
    uint64_t v149 = *(int *)(v90 + 20);
    uint64_t v150 = &v88[v149];
    uint64_t v151 = &v89[v149];
    uint64_t v152 = (int *)type metadata accessor for SignificantChangeEngine.Changepoint(0);
    uint64_t v153 = *((void *)v152 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v153 + 48))(v151, 1, v152))
    {
      sub_1C299F0F4(0);
      memcpy(v150, v151, *(void *)(*(void *)(v154 - 8) + 64));
    }
    else
    {
      uint64_t v155 = sub_1C2A9C6E8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16))(v150, v151, v155);
      *(void *)&v150[v152[5]] = *(void *)&v151[v152[5]];
      *(void *)&v150[v152[6]] = *(void *)&v151[v152[6]];
      *(void *)&v150[v152[7]] = *(void *)&v151[v152[7]];
      *(void *)&v150[v152[8]] = *(void *)&v151[v152[8]];
      *(void *)&v150[v152[9]] = *(void *)&v151[v152[9]];
      *(void *)&v150[v152[10]] = *(void *)&v151[v152[10]];
      uint64_t v156 = v152[11];
      uint64_t v157 = &v150[v156];
      uint64_t v158 = &v151[v156];
      uint64_t v159 = *((void *)v158 + 4);
      long long v160 = *((_OWORD *)v158 + 1);
      *(_OWORD *)uint64_t v157 = *(_OWORD *)v158;
      *((_OWORD *)v157 + 1) = v160;
      *((void *)v157 + 4) = v159;
      uint64_t v161 = v152[12];
      uint64_t v162 = &v150[v161];
      uint64_t v163 = &v151[v161];
      long long v165 = *(_OWORD *)v163;
      long long v164 = *((_OWORD *)v163 + 1);
      *((void *)v162 + 4) = *((void *)v163 + 4);
      *(_OWORD *)uint64_t v162 = v165;
      *((_OWORD *)v162 + 1) = v164;
      (*(void (**)(char *, void, uint64_t, int *))(v153 + 56))(v150, 0, 1, v152);
    }
    uint64_t v166 = *(int *)(v90 + 24);
    char v167 = &v88[v166];
    char v168 = &v89[v166];
    uint64_t v169 = sub_1C2A9C6E8();
    uint64_t v170 = *(void *)(v169 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48))(v168, 1, v169))
    {
      sub_1C2A62B24(0);
      memcpy(v167, v168, *(void *)(*(void *)(v171 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v167, v168, v169);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v170 + 56))(v167, 0, 1, v169);
    }
    ((void (*)(char *, void, uint64_t, uint64_t))v364[7])(v88, 0, 1, v90);
    uint64_t v85 = v369;
  }
  uint64_t v172 = *(int *)(v80 + 24);
  uint64_t v173 = v401;
  uint64_t v174 = (char *)(v401 + v172);
  uint64_t v175 = &v79[v172];
  uint64_t v176 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
  uint64_t v177 = *(void *)(v176 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48))(v175, 1, v176))
  {
    sub_1C2A62A98(0);
    memcpy(v174, v175, *(void *)(*(void *)(v178 - 8) + 64));
    a1 = v386;
  }
  else
  {
    uint64_t v179 = sub_1C2A9C6E8();
    uint64_t v180 = *(void *)(v179 - 8);
    uint64_t v366 = (void *)v180;
    uint64_t v181 = v85;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v180 + 48))(v175, 1, v179))
    {
      sub_1C2A62B24(0);
      memcpy(v174, v175, *(void *)(*(void *)(v182 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v174, v175, v179);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v180 + 56))(v174, 0, 1, v179);
    }
    v174[*(int *)(v176 + 20)] = v175[*(int *)(v176 + 20)];
    uint64_t v183 = *(int *)(v176 + 24);
    uint64_t v184 = &v174[v183];
    uint64_t v185 = &v175[v183];
    if (v405(&v175[v183], 1, v392))
    {
      sub_1C2A6235C(0);
      memcpy(v184, v185, *(void *)(*(void *)(v186 - 8) + 64));
      a1 = v386;
      uint64_t v173 = v401;
    }
    else
    {
      uint64_t v362 = v177;
      v372(v184, v185, v181);
      uint64_t v187 = (int *)type metadata accessor for SignificantChange.Period(0);
      *(void *)&v184[v187[5]] = *(void *)&v185[v187[5]];
      *(void *)&v184[v187[6]] = *(void *)&v185[v187[6]];
      v184[v187[7]] = v185[v187[7]];
      *(void *)&v184[*(int *)(v392 + 20)] = *(void *)&v185[*(int *)(v392 + 20)];
      uint64_t v188 = *(int *)(v392 + 24);
      uint64_t v406 = &v184[v188];
      uint64_t v407 = &v185[v188];
      uint64_t v189 = type metadata accessor for SignificantChange.Notification(0);
      uint64_t v374 = *(void *)(v189 - 8);
      uint64_t v190 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v374 + 48);
      swift_bridgeObjectRetain();
      __srcCGFloat a = (int *)v189;
      if (v190(v407, 1, v189))
      {
        sub_1C2A64008(0);
        memcpy(v406, v407, *(void *)(*(void *)(v191 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v406 = *(void *)v407;
        *((void *)v406 + 1) = *((void *)v407 + 1);
        v406[16] = v407[16];
        uint64_t v192 = *(int *)(v189 + 24);
        v370 = &v406[v192];
        unint64_t v359 = &v407[v192];
        uint64_t v193 = (void (*)(char *, char *, uint64_t))v366[2];
        swift_bridgeObjectRetain();
        v193(v370, v359, v179);
        v193(&v406[__srca[7]], &v407[__srca[7]], v179);
        (*(void (**)(char *, void, uint64_t, int *))(v374 + 56))(v406, 0, 1, __srca);
      }
      a1 = v386;
      uint64_t v173 = v401;
      uint64_t v177 = v362;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v404 + 56))(v184, 0, 1, v392);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v177 + 56))(v174, 0, 1, v176);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56))(v173, 0, 1, v80);
  return a1;
}

char *initializeWithTake for SignificantChangeEngine.Output(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SignificantChange(0);
  uint64_t v7 = *(void *)(v6 - 8);
  unsigned int v8 = *(unsigned int (**)(void, void, void))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    sub_1C2A6235C(0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v130 = v8;
    uint64_t v10 = sub_1C2A9C398();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    uint64_t v11 = (int *)type metadata accessor for SignificantChange.Period(0);
    *(void *)&a1[v11[5]] = *(void *)&a2[v11[5]];
    *(void *)&a1[v11[6]] = *(void *)&a2[v11[6]];
    a1[v11[7]] = a2[v11[7]];
    *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
    uint64_t v12 = *(int *)(v6 + 24);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = type metadata accessor for SignificantChange.Notification(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_1C2A64008(0);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      unsigned char v13[16] = v14[16];
      uint64_t v18 = *(int *)(v15 + 24);
      uint64_t v116 = &v13[v18];
      uint64_t v121 = v7;
      uint64_t v19 = &v14[v18];
      uint64_t v124 = a1;
      uint64_t v126 = v6;
      uint64_t v20 = sub_1C2A9C6E8();
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
      uint64_t v22 = v19;
      uint64_t v7 = v121;
      v21(v116, v22, v20);
      uint64_t v23 = v20;
      a1 = v124;
      v21(&v13[*(int *)(v15 + 28)], &v14[*(int *)(v15 + 28)], v23);
      uint64_t v6 = v126;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    unsigned int v8 = v130;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v24 = *(int *)(a3 + 20);
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  if (v8(&a2[v24], 1, v6))
  {
    sub_1C2A6235C(0);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = sub_1C2A9C398();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v25, v26, v28);
    int v29 = (int *)type metadata accessor for SignificantChange.Period(0);
    *(void *)&v25[v29[5]] = *(void *)&v26[v29[5]];
    *(void *)&v25[v29[6]] = *(void *)&v26[v29[6]];
    v25[v29[7]] = v26[v29[7]];
    *(void *)&v25[*(int *)(v6 + 20)] = *(void *)&v26[*(int *)(v6 + 20)];
    uint64_t v127 = v6;
    uint64_t v30 = *(int *)(v6 + 24);
    uint64_t v31 = &v25[v30];
    uint64_t v32 = &v26[v30];
    uint64_t v33 = type metadata accessor for SignificantChange.Notification(0);
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      sub_1C2A64008(0);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      v31[16] = v32[16];
      uint64_t v36 = *(int *)(v33 + 24);
      uint64_t v114 = &v32[v36];
      uint64_t v117 = &v31[v36];
      unsigned int v131 = v8;
      uint64_t v37 = sub_1C2A9C6E8();
      uint64_t v122 = v7;
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32);
      v38(v117, v114, v37);
      uint64_t v39 = v37;
      unsigned int v8 = v131;
      v38(&v31[*(int *)(v33 + 28)], &v32[*(int *)(v33 + 28)], v39);
      uint64_t v7 = v122;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    uint64_t v6 = v127;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v127);
  }
  uint64_t v40 = *(int *)(a3 + 24);
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  uint64_t v43 = type metadata accessor for SignificantChangeEngine.State(0);
  uint64_t v44 = *(void *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    sub_1C2A62430(0);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    unsigned int v132 = (unsigned int (*)(char *, uint64_t, uint64_t))v8;
    uint64_t v123 = v7;
    uint64_t v46 = sub_1C2A9C398();
    uint64_t v115 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32);
    v115(v41, v42, v46);
    uint64_t v47 = *(int *)(v43 + 20);
    uint64_t v118 = v41;
    uint64_t v48 = &v41[v47];
    uint64_t v49 = &v42[v47];
    uint64_t v50 = type metadata accessor for SignificantChangeEngine.State.MeanShift(0);
    uint64_t v51 = *(void *)(v50 - 8);
    uint64_t v125 = a1;
    uint64_t v112 = v46;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      sub_1C2A62A2C(0);
      memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
      uint64_t v53 = v118;
    }
    else
    {
      uint64_t v111 = v50;
      uint64_t v108 = v51;
      __dst = v48;
      uint64_t v128 = v6;
      uint64_t v109 = v44;
      if (v132(v49, 1, v6))
      {
        sub_1C2A6235C(0);
        memcpy(v48, v49, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        v115(v48, v49, v46);
        uint64_t v55 = (int *)type metadata accessor for SignificantChange.Period(0);
        *(void *)&v48[v55[5]] = *(void *)&v49[v55[5]];
        *(void *)&v48[v55[6]] = *(void *)&v49[v55[6]];
        v48[v55[7]] = v49[v55[7]];
        *(void *)&v48[*(int *)(v6 + 20)] = *(void *)&v49[*(int *)(v6 + 20)];
        uint64_t v56 = *(int *)(v6 + 24);
        uint64_t v57 = &v48[v56];
        uint64_t v58 = &v49[v56];
        uint64_t v59 = type metadata accessor for SignificantChange.Notification(0);
        uint64_t v60 = *(void *)(v59 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
        {
          sub_1C2A64008(0);
          memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
        }
        else
        {
          *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
          v57[16] = v58[16];
          uint64_t v62 = *(int *)(v59 + 24);
          uint64_t v106 = &v58[v62];
          uint64_t v107 = &v57[v62];
          uint64_t v63 = sub_1C2A9C6E8();
          uint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32);
          v64(v107, v106, v63);
          v64(&v57[*(int *)(v59 + 28)], &v58[*(int *)(v59 + 28)], v63);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v48, 0, 1, v128);
      }
      uint64_t v65 = *(int *)(v111 + 20);
      int v66 = &v48[v65];
      uint64_t v67 = &v49[v65];
      uint64_t v68 = (int *)type metadata accessor for SignificantChangeEngine.Changepoint(0);
      uint64_t v69 = *((void *)v68 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v69 + 48))(v67, 1, v68))
      {
        sub_1C299F0F4(0);
        memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        uint64_t v71 = sub_1C2A9C6E8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v66, v67, v71);
        *(void *)&v66[v68[5]] = *(void *)&v67[v68[5]];
        *(void *)&v66[v68[6]] = *(void *)&v67[v68[6]];
        *(void *)&v66[v68[7]] = *(void *)&v67[v68[7]];
        *(void *)&v66[v68[8]] = *(void *)&v67[v68[8]];
        *(void *)&v66[v68[9]] = *(void *)&v67[v68[9]];
        *(void *)&v66[v68[10]] = *(void *)&v67[v68[10]];
        uint64_t v72 = v68[11];
        uint64_t v73 = &v66[v72];
        uint64_t v74 = &v67[v72];
        long long v75 = *((_OWORD *)v74 + 1);
        *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
        *((_OWORD *)v73 + 1) = v75;
        *((void *)v73 + 4) = *((void *)v74 + 4);
        uint64_t v76 = v68[12];
        uint64_t v77 = &v66[v76];
        uint64_t v78 = &v67[v76];
        long long v79 = *((_OWORD *)v78 + 1);
        *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
        *((_OWORD *)v77 + 1) = v79;
        *((void *)v77 + 4) = *((void *)v78 + 4);
        (*(void (**)(char *, void, uint64_t, int *))(v69 + 56))(v66, 0, 1, v68);
      }
      uint64_t v80 = *(int *)(v111 + 24);
      uint64_t v81 = &__dst[v80];
      long long v82 = &v49[v80];
      uint64_t v83 = sub_1C2A9C6E8();
      uint64_t v84 = *(void *)(v83 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
      {
        sub_1C2A62B24(0);
        memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v81, v82, v83);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
      }
      uint64_t v6 = v128;
      uint64_t v53 = v118;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(__dst, 0, 1, v111);
      uint64_t v44 = v109;
    }
    uint64_t v86 = *(int *)(v43 + 24);
    uint64_t v87 = &v53[v86];
    uint64_t v88 = &v42[v86];
    uint64_t v89 = type metadata accessor for SignificantChangeEngine.State.FrequencyShift(0);
    uint64_t v90 = *(void *)(v89 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
    {
      sub_1C2A62A98(0);
      memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64));
      a1 = v125;
    }
    else
    {
      uint64_t v92 = sub_1C2A9C6E8();
      uint64_t v93 = *(void *)(v92 - 8);
      uint64_t v119 = v93;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v88, 1, v92))
      {
        sub_1C2A62B24(0);
        memcpy(v87, v88, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v87, v88, v92);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v93 + 56))(v87, 0, 1, v92);
      }
      v87[*(int *)(v89 + 20)] = v88[*(int *)(v89 + 20)];
      uint64_t v95 = *(int *)(v89 + 24);
      uint64_t v96 = &v87[v95];
      uint64_t v97 = &v88[v95];
      if (v132(v97, 1, v6))
      {
        sub_1C2A6235C(0);
        memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
      }
      else
      {
        uint64_t v110 = v44;
        v115(v96, v97, v112);
        uint64_t v99 = (int *)type metadata accessor for SignificantChange.Period(0);
        *(void *)&v96[v99[5]] = *(void *)&v97[v99[5]];
        *(void *)&v96[v99[6]] = *(void *)&v97[v99[6]];
        v96[v99[7]] = v97[v99[7]];
        *(void *)&v96[*(int *)(v6 + 20)] = *(void *)&v97[*(int *)(v6 + 20)];
        uint64_t v129 = v6;
        uint64_t v100 = *(int *)(v6 + 24);
        uint64_t v101 = &v96[v100];
        uint64_t v102 = &v97[v100];
        uint64_t v103 = type metadata accessor for SignificantChange.Notification(0);
        uint64_t v133 = *(void *)(v103 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v102, 1, v103))
        {
          sub_1C2A64008(0);
          memcpy(v101, v102, *(void *)(*(void *)(v104 - 8) + 64));
        }
        else
        {
          *(_OWORD *)uint64_t v101 = *(_OWORD *)v102;
          v101[16] = v102[16];
          uint64_t v120 = *(void (**)(char *, char *, uint64_t))(v119 + 32);
          v120(&v101[*(int *)(v103 + 24)], &v102[*(int *)(v103 + 24)], v92);
          v120(&v101[*(int *)(v103 + 28)], &v102[*(int *)(v103 + 28)], v92);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v101, 0, 1, v103);
        }
        uint64_t v44 = v110;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v96, 0, 1, v129);
      }
      a1 = v125;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v53, 0, 1, v43);
  }
  return a1;
}