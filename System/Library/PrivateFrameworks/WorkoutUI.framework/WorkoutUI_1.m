uint64_t sub_261A9F0A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  long long v6;
  uint64_t v7;
  _OWORD v9[2];
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946320);
  MEMORY[0x270FA5388](v3 - 8);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_OWORD *)(v1 + 16);
  v9[0] = *(_OWORD *)v1;
  v9[1] = v6;
  v10 = *(unsigned char *)(v1 + 32);
  *(void *)v5 = sub_261B8DA98();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946328);
  sub_261A9E754((uint64_t)v9, (uint64_t)&v5[*(int *)(v7 + 44)]);
  sub_2619F86F0((uint64_t)v5, a1, &qword_26A946320);
  *(void *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A946330) + 36)) = 0;
  return sub_2619F8754((uint64_t)v5, &qword_26A946320);
}

uint64_t sub_261A9F194()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SegmentDurationMetricView()
{
  return &type metadata for SegmentDurationMetricView;
}

unint64_t sub_261A9F1C4()
{
  unint64_t result = qword_26A946338;
  if (!qword_26A946338)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946330);
    sub_2619F8AB8(&qword_26A946340, &qword_26A946320);
    sub_261A70FC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946338);
  }
  return result;
}

uint64_t sub_261A9F264(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A9F294(uint64_t a1)
{
  return a1;
}

unint64_t sub_261A9F2CC()
{
  unint64_t result = qword_26A946368;
  if (!qword_26A946368)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946360);
    sub_2619F8AB8((unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946368);
  }
  return result;
}

unint64_t sub_261A9F36C()
{
  unint64_t result = qword_26A946370;
  if (!qword_26A946370)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946350);
    sub_261A9F2CC();
    sub_261A2ABC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946370);
  }
  return result;
}

void sub_261A9F3E8(uint64_t a1@<X8>)
{
  v2 = *(void **)(v1 + 128);
  if (v2 && (v3 = *(void **)(v1 + 136)) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943908);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_261B92AA0;
    id v6 = v2;
    id v7 = v3;
    MEMORY[0x263E4C7B0](v6);
    *(void *)(v5 + 32) = sub_261B8EC48();
    *(void *)(v5 + 40) = v8;
    id v9 = v7;
    MEMORY[0x263E4C7B0]();
    *(void *)(v5 + 48) = sub_261B8EC48();
    *(void *)(v5 + 56) = v10;
    MEMORY[0x263E4CB20](v5);
    sub_261B8ED38();
    sub_261B8ED28();
    sub_261B8D5D8();

    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v12;
    *(void *)(a1 + 32) = v13;
  }
  else
  {
    sub_261B8F9C8();
    __break(1u);
  }
}

uint64_t SessionChart.init(data:chartProperties:faking:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v40 = a3;
  uint64_t v38 = a1;
  uint64_t v39 = type metadata accessor for SessionChartState(0) - 8;
  MEMORY[0x270FA5388](v39);
  id v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_261B8E0A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943488);
  MEMORY[0x270FA5388](v12 - 8);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = a2[1];
  long long v60 = *a2;
  long long v61 = v15;
  long long v62 = a2[2];
  v37 = (void *)*((void *)a2 + 6);
  long long v16 = *(long long *)((char *)a2 + 104);
  long long v56 = *(long long *)((char *)a2 + 88);
  long long v57 = v16;
  long long v58 = *(long long *)((char *)a2 + 120);
  uint64_t v59 = *((void *)a2 + 17);
  long long v17 = *(long long *)((char *)a2 + 72);
  long long v54 = *(long long *)((char *)a2 + 56);
  long long v55 = v17;
  v18 = (int *)type metadata accessor for SessionChart(0);
  uint64_t v19 = a4 + v18[8];
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  char v53 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946380);
  sub_261B8EA08();
  char v20 = v42;
  uint64_t v21 = *((void *)&v42 + 1);
  *(_OWORD *)uint64_t v19 = v41;
  *(unsigned char *)(v19 + 16) = v20;
  *(void *)(v19 + 24) = v21;
  uint64_t v36 = v18[10];
  sub_261B8EDD8();
  sub_261B8E148();
  uint64_t v22 = sub_261B8E118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v14, 1, 1, v22);
  sub_261B8E188();
  sub_2619F8754((uint64_t)v14, &qword_26A943488);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F1A5D0], v8);
  uint64_t v23 = sub_261B8E0B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  long long v41 = v60;
  long long v42 = v61;
  long long v43 = v62;
  long long v47 = v56;
  long long v48 = v57;
  long long v49 = v58;
  long long v24 = v55;
  long long v45 = v54;
  v25 = v37;
  *(void *)(a4 + v36) = v23;
  v44 = v25;
  uint64_t v50 = v59;
  long long v46 = v24;
  uint64_t v26 = v38;
  sub_261A9F990((uint64_t)&v41, (uint64_t)v7);
  *(void *)a4 = v26;
  long long v27 = v61;
  *(_OWORD *)(a4 + 8) = v60;
  *(_OWORD *)(a4 + 24) = v27;
  *(_OWORD *)(a4 + 40) = v62;
  *(void *)(a4 + 56) = v25;
  long long v28 = v57;
  *(_OWORD *)(a4 + 96) = v56;
  *(_OWORD *)(a4 + 112) = v28;
  *(_OWORD *)(a4 + 128) = v58;
  *(void *)(a4 + 144) = v59;
  long long v29 = v55;
  *(_OWORD *)(a4 + 64) = v54;
  *(_OWORD *)(a4 + 80) = v29;
  *(void *)(a4 + 152) = MEMORY[0x263E4C7B0](v25);
  uint64_t v30 = a4 + v18[7];
  sub_2619F86F0((uint64_t)v7, v30, &qword_26A946388);
  *(void *)(v30 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A946390) + 28)) = 0;
  v31 = &v7[*(int *)(v39 + 28)];
  uint64_t v32 = *(void *)v31;
  uint64_t v33 = *((void *)v31 + 1);
  LOBYTE(v8) = v31[16];
  sub_261AA7BA8((uint64_t)v7, type metadata accessor for SessionChartState);
  uint64_t result = swift_release();
  *(void *)uint64_t v19 = v32;
  *(void *)(v19 + 8) = v33;
  *(unsigned char *)(v19 + 16) = v8;
  *(void *)(v19 + 24) = 0;
  *(unsigned char *)(a4 + v18[9]) = v40;
  return result;
}

uint64_t type metadata accessor for SessionChartState(uint64_t a1)
{
  return sub_261A84418(a1, (uint64_t *)&unk_26A946488);
}

uint64_t type metadata accessor for SessionChart(uint64_t a1)
{
  return sub_261A84418(a1, (uint64_t *)&unk_26A946468);
}

uint64_t sub_261A9F990@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v110 = a2;
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946550);
  MEMORY[0x270FA5388](v107);
  v4 = &v99[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  v106 = &v99[-v6];
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  MEMORY[0x270FA5388](v108);
  v109 = &v99[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_261B8BB78();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v11 = &v99[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_261B8ADD8();
  uint64_t v112 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  v14 = &v99[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  long long v17 = &v99[-v16];
  MEMORY[0x270FA5388](v18);
  v111 = &v99[-v19];
  MEMORY[0x270FA5388](v20);
  v104 = &v99[-v21];
  MEMORY[0x270FA5388](v22);
  v105 = &v99[-v23];
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = &v99[-v25];
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = *(void *)(v29 + 16);
  if (!v30)
  {
LABEL_15:
    sub_261B8ADC8();
    uint64_t v55 = v112;
    long long v56 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v112 + 16);
    v56(v14, v26, v12);
    sub_261B8AD08();
    sub_261AA8068(&qword_26A9464A0, MEMORY[0x263F07490]);
    uint64_t result = sub_261B8F088();
    if (result)
    {
      v117 = v56;
      long long v57 = v106;
      uint64_t v58 = v107;
      uint64_t v59 = &v106[*(int *)(v107 + 48)];
      long long v60 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v55 + 32);
      v60(v106, v17, v12);
      long long v61 = v59;
      v118 = v59;
      v60(v59, v26, v12);
      long long v62 = &v4[*(int *)(v58 + 48)];
      v63 = v117;
      v117(v4, v57, v12);
      v63(v62, v61, v12);
      v64 = v109;
      v60(v109, v4, v12);
      v65 = *(void (**)(unsigned char *, uint64_t))(v112 + 8);
      v65(v62, v12);
      v66 = &v4[*(int *)(v58 + 48)];
      v60(v4, v57, v12);
      v60(v66, v118, v12);
      v60(&v64[*(int *)(v108 + 36)], v66, v12);
      v65(v4, v12);
      uint64_t v67 = (uint64_t)v64;
LABEL_29:
      uint64_t v85 = v110;
      sub_2619FB7EC(v67, v110, &qword_26A946388);
      uint64_t result = type metadata accessor for SessionChartState(0);
      uint64_t v86 = v85 + *(int *)(result + 20);
      *(void *)uint64_t v86 = 0;
      *(void *)(v86 + 8) = 0;
      *(unsigned char *)(v86 + 16) = 1;
      return result;
    }
    goto LABEL_33;
  }
  uint64_t v116 = v12;
  v101 = v4;
  int v102 = *(unsigned __int8 *)(a1 + 32);
  int v100 = *(unsigned __int8 *)(a1 + 72);
  double v31 = *(double *)(a1 + 80);
  v115 = &v99[-v28];
  uint64_t v32 = v29;
  sub_261B8AD18();
  uint64_t v35 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v33 = v9 + 16;
  v34 = v35;
  uint64_t v36 = v32 + ((*(unsigned __int8 *)(v33 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 64));
  v4 = *(unsigned char **)(v33 + 56);
  v118 = (unsigned char *)(v112 + 8);
  v113 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v112 + 32);
  uint64_t v114 = v33;
  v37 = (void (**)(unsigned char *, uint64_t))(v33 - 8);
  uint64_t v103 = v32;
  swift_bridgeObjectRetain();
  double v38 = INFINITY;
  double v39 = -INFINITY;
  do
  {
    v34(v11, v36, v8);
    sub_261B8BB58();
    uint64_t v40 = sub_261B8ADB8();
    v117 = *(void (**)(unsigned char *, unsigned char *, uint64_t))v118;
    ((void (*)(unsigned char *, uint64_t))v117)(v26, v116);
    if (v40 == 1)
    {
      sub_261B8BB58();
      uint64_t v41 = v8;
      long long v42 = v34;
      v44 = v115;
      uint64_t v43 = v116;
      ((void (*)(unsigned char *, uint64_t))v117)(v115, v116);
      long long v45 = v44;
      v34 = v42;
      uint64_t v8 = v41;
      (*v113)(v45, v26, v43);
    }
    sub_261B8BB68();
    if (v46 < v38)
    {
      sub_261B8BB68();
      double v38 = v47;
    }
    sub_261B8BB68();
    if (v39 < v48)
    {
      sub_261B8BB68();
      double v39 = v49;
    }
    (*v37)(v11, v8);
    v36 += (uint64_t)v4;
    --v30;
  }
  while (v30);
  uint64_t result = swift_bridgeObjectRelease();
  if (v38 > v39)
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v39 - v38 >= v31)
  {
    v14 = v115;
    uint64_t v12 = v116;
    uint64_t v53 = v112;
    long long v17 = v104;
    long long v54 = v105;
  }
  else
  {
    double v51 = (v38 + v39) * 0.5;
    double v52 = v31 * 0.5;
    v14 = v115;
    uint64_t v12 = v116;
    uint64_t v53 = v112;
    long long v17 = v104;
    long long v54 = v105;
    if (v100)
    {
      double v38 = v51 - v52;
      double v39 = v52 + v51;
      if (v51 - v52 > v52 + v51)
      {
        __break(1u);
        goto LABEL_15;
      }
    }
    else
    {
      double v68 = v52 - v51;
      if (v52 <= v51) {
        double v68 = 0.0;
      }
      double v38 = v51 - v52 + v68;
      double v39 = v52 + v51 + v68;
      if (v38 > v39) {
        goto LABEL_36;
      }
    }
  }
  sub_261B8ADC8();
  v69 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v53 + 16);
  v69(v26, v54, v12);
  sub_261B8AD08();
  v70 = v17;
  if ((v102 & 1) == 0)
  {
    sub_261B8AD18();
    char v71 = sub_261B8AD88();
    ((void (*)(unsigned char *, uint64_t))v117)(v26, v12);
    v70 = v17;
    if ((v71 & 1) == 0)
    {
      sub_261AA8068(&qword_26A9464A0, MEMORY[0x263F07490]);
      if (sub_261B8F078()) {
        v70 = v17;
      }
      else {
        v70 = v14;
      }
    }
  }
  v69(v111, v70, v12);
  sub_261AA8068(&qword_26A9464A0, MEMORY[0x263F07490]);
  char v72 = sub_261B8F088();
  v73 = v17;
  v74 = (uint64_t (*)(unsigned char *, uint64_t))v117;
  ((void (*)(unsigned char *, uint64_t))v117)(v73, v12);
  uint64_t result = v74(v14, v12);
  if (v38 <= v39)
  {
    if (v72)
    {
      uint64_t v87 = v107;
      v88 = v54;
      v89 = v106;
      v90 = &v106[*(int *)(v107 + 48)];
      v91 = *v113;
      (*v113)(v106, v111, v12);
      uint64_t v116 = (uint64_t)v90;
      v91(v90, v88, v12);
      v92 = v101;
      v93 = &v101[*(int *)(v87 + 48)];
      v69(v101, v89, v12);
      v69(v93, v90, v12);
      uint64_t v94 = (uint64_t)v109;
      v91(v109, v92, v12);
      v95 = (void (*)(unsigned char *, uint64_t))v117;
      ((void (*)(unsigned char *, uint64_t))v117)(v93, v12);
      v96 = &v92[*(int *)(v87 + 48)];
      v91(v92, v89, v12);
      v91(v96, (unsigned char *)v116, v12);
      v91((unsigned char *)(v94 + *(int *)(v108 + 36)), v96, v12);
      v95(v92, v12);
      uint64_t v97 = v110;
      sub_2619FB7EC(v94, v110, &qword_26A946388);
      uint64_t result = type metadata accessor for SessionChartState(0);
      uint64_t v98 = v97 + *(int *)(result + 20);
      *(double *)uint64_t v98 = v38;
      *(double *)(v98 + 8) = v39;
      *(unsigned char *)(v98 + 16) = 0;
      return result;
    }
    goto LABEL_35;
  }
  if (v72)
  {
    uint64_t v75 = v107;
    v76 = v54;
    v77 = v106;
    v78 = &v106[*(int *)(v107 + 48)];
    v79 = *v113;
    (*v113)(v106, v111, v12);
    uint64_t v116 = (uint64_t)v78;
    v79(v78, v76, v12);
    v80 = v101;
    v81 = &v101[*(int *)(v75 + 48)];
    v69(v101, v77, v12);
    v69(v81, v78, v12);
    v82 = v109;
    v79(v109, v80, v12);
    v83 = (void (*)(unsigned char *, uint64_t))v117;
    ((void (*)(unsigned char *, uint64_t))v117)(v81, v12);
    v84 = &v80[*(int *)(v75 + 48)];
    v79(v80, v77, v12);
    v79(v84, (unsigned char *)v116, v12);
    v79(&v82[*(int *)(v108 + 36)], v84, v12);
    v83(v80, v12);
    uint64_t v67 = (uint64_t)v82;
    goto LABEL_29;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t SessionChart.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v89 = a1;
  uint64_t v2 = type metadata accessor for SessionChart(0);
  uint64_t v88 = *(void *)(v2 - 8);
  uint64_t v87 = *(void *)(v88 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v86 = (uint64_t)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946398);
  MEMORY[0x270FA5388](v4 - 8);
  double v68 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  MEMORY[0x270FA5388](v72);
  uint64_t v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9463A0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9463A8);
  uint64_t v71 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  v65 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9463B0);
  uint64_t v75 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  v90 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9463B8);
  uint64_t v78 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  v70 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9463C0);
  uint64_t v80 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  v74 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9463C8);
  uint64_t v84 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  v76 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9463D0);
  uint64_t v83 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  v81 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261AA0FEC((uint64_t)v10);
  v93 = v1;
  long long v17 = v1;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9463D8);
  unint64_t v19 = sub_261AA1864();
  unint64_t v20 = sub_261AA1924();
  sub_261B8E728();
  sub_2619F8754((uint64_t)v10, &qword_26A9463A0);
  sub_261AA19A0((uint64_t)v7);
  uint64_t v21 = sub_261B8D318();
  uint64_t v22 = *(void *)(v21 - 8);
  v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v67 = v22 + 56;
  uint64_t v23 = (uint64_t)v68;
  v66(v68, 1, 1, v21);
  uint64_t v97 = v8;
  uint64_t v98 = v18;
  unint64_t v99 = v19;
  unint64_t v100 = v20;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v25 = sub_261AA21E4(&qword_26A946410, &qword_26A946388);
  uint64_t v26 = v69;
  uint64_t v27 = v72;
  uint64_t v28 = v65;
  sub_261B8E438();
  sub_2619F8754(v23, &qword_26A946398);
  sub_2619F8754((uint64_t)v7, &qword_26A946388);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v28, v26);
  v92 = v17;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946418);
  uint64_t v97 = v26;
  uint64_t v98 = v27;
  unint64_t v99 = OpaqueTypeConformance2;
  unint64_t v100 = v25;
  uint64_t v30 = swift_getOpaqueTypeConformance2();
  uint64_t v72 = MEMORY[0x263EFCD80];
  uint64_t v31 = sub_2619F8AB8(&qword_26A946420, &qword_26A946418);
  uint64_t v32 = v70;
  uint64_t v33 = v73;
  v34 = v90;
  sub_261B8E3E8();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v34, v33);
  double v95 = sub_261AA20C4();
  uint64_t v96 = v35;
  v66((char *)v23, 1, 1, v21);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946428);
  uint64_t v97 = v33;
  uint64_t v98 = v29;
  unint64_t v99 = v30;
  unint64_t v100 = v31;
  uint64_t v37 = swift_getOpaqueTypeConformance2();
  uint64_t v38 = sub_261AA21E4((unint64_t *)&qword_26A946430, &qword_26A946428);
  double v39 = v74;
  uint64_t v40 = v77;
  sub_261B8E458();
  sub_2619F8754(v23, &qword_26A946398);
  uint64_t v41 = v40;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v32, v40);
  v91 = v17;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946438);
  uint64_t v97 = v41;
  uint64_t v98 = v36;
  unint64_t v99 = v37;
  unint64_t v100 = v38;
  uint64_t v43 = swift_getOpaqueTypeConformance2();
  uint64_t v44 = sub_2619F8AB8(&qword_26A946440, &qword_26A946438);
  long long v45 = v76;
  uint64_t v46 = v79;
  sub_261B8E408();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v39, v46);
  uint64_t v94 = *v17;
  uint64_t v47 = v86;
  sub_261AA2778((uint64_t)v17, v86);
  unint64_t v48 = (*(unsigned __int8 *)(v88 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  uint64_t v49 = swift_allocObject();
  sub_261AA27E0(v47, v49 + v48);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946448);
  uint64_t v97 = v46;
  uint64_t v98 = v42;
  unint64_t v99 = v43;
  unint64_t v100 = v44;
  swift_getOpaqueTypeConformance2();
  sub_261AA28C4();
  uint64_t v50 = v81;
  uint64_t v51 = v82;
  sub_261B8E7C8();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v45, v51);
  LOBYTE(v42) = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v60 = v83;
  uint64_t v61 = v89;
  uint64_t v62 = v85;
  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 16))(v89, v50, v85);
  uint64_t v63 = v61 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A946460) + 36);
  *(unsigned char *)uint64_t v63 = v42;
  *(void *)(v63 + 8) = v53;
  *(void *)(v63 + 16) = v55;
  *(void *)(v63 + 24) = v57;
  *(void *)(v63 + 32) = v59;
  *(unsigned char *)(v63 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v50, v62);
}

uint64_t sub_261AA0FEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v27 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946400);
  uint64_t v25 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946560);
  MEMORY[0x270FA5388](v26);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SessionChart(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9463F0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v12) = *(unsigned char *)(v1 + 40);
  uint64_t v14 = *(void *)v1;
  if (v12)
  {
    uint64_t v33 = v14;
    sub_261AA2778(v2, (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v16 = swift_allocObject();
    sub_261AA27E0((uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946448);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946188);
    sub_2619F8AB8(&qword_26A946568, &qword_26A946448);
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946130);
    uint64_t v29 = sub_261B8D278();
    uint64_t v30 = MEMORY[0x263F1B440];
    uint64_t v31 = MEMORY[0x263EFCD60];
    uint64_t v32 = MEMORY[0x263F1B420];
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v29 = v17;
    uint64_t v30 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_261AA8068(&qword_26A946570, MEMORY[0x263F87C08]);
    sub_261B8D178();
    uint64_t v19 = v25;
    uint64_t v20 = v28;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v6, v4, v28);
    swift_storeEnumTagMultiPayload();
    sub_2619F8AB8(&qword_26A9463E8, &qword_26A9463F0);
    sub_2619F8AB8(&qword_26A9463F8, &qword_26A946400);
    sub_261B8DD68();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v4, v20);
  }
  else
  {
    uint64_t v29 = v14;
    sub_261AA2778(v2, (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v22 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v23 = swift_allocObject();
    sub_261AA27E0((uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946448);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946578);
    sub_2619F8AB8(&qword_26A946568, &qword_26A946448);
    sub_261AA8148();
    sub_261AA8068(&qword_26A946570, MEMORY[0x263F87C08]);
    sub_261B8D178();
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v13, v10);
    swift_storeEnumTagMultiPayload();
    sub_2619F8AB8(&qword_26A9463E8, &qword_26A9463F0);
    sub_2619F8AB8(&qword_26A9463F8, &qword_26A946400);
    sub_261B8DD68();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_261AA15E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9463A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946558);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(*(void *)a1 + 16))
  {
    sub_261AA0FEC((uint64_t)v4);
    sub_2619F86F0((uint64_t)v4, (uint64_t)v7, &qword_26A9463A0);
    swift_storeEnumTagMultiPayload();
    sub_261AA1864();
    sub_261B8DD68();
    return sub_2619F8754((uint64_t)v4, &qword_26A9463A0);
  }
  else
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v9 = (id)qword_26B416688;
    uint64_t v10 = sub_261B8AA48();
    uint64_t v12 = v11;

    v16[1] = v10;
    v16[2] = v12;
    sub_261A029C4();
    *(void *)uint64_t v7 = sub_261B8E3D8();
    *((void *)v7 + 1) = v13;
    v7[16] = v14 & 1;
    *((void *)v7 + 3) = v15;
    swift_storeEnumTagMultiPayload();
    sub_261AA1864();
    return sub_261B8DD68();
  }
}

uint64_t sub_261AA185C()
{
  return sub_261AA15E4(*(void *)(v0 + 16));
}

unint64_t sub_261AA1864()
{
  unint64_t result = qword_26A9463E0;
  if (!qword_26A9463E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9463A0);
    sub_2619F8AB8(&qword_26A9463E8, &qword_26A9463F0);
    sub_2619F8AB8(&qword_26A9463F8, &qword_26A946400);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9463E0);
  }
  return result;
}

unint64_t sub_261AA1924()
{
  unint64_t result = qword_26A946408;
  if (!qword_26A946408)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9463D8);
    sub_261AA1864();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946408);
  }
  return result;
}

uint64_t sub_261AA19A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946550);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v44 = (char *)&v39 - v7;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  MEMORY[0x270FA5388](v46);
  uint64_t v47 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8ADD8();
  uint64_t v45 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v48 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v14 = sub_261B8BB78();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v39 - v19;
  if (*(unsigned char *)(v1 + *(int *)(type metadata accessor for SessionChart(0) + 36)) == 1)
  {
    uint64_t v42 = a1;
    uint64_t v43 = v3;
    uint64_t v41 = v5;
    uint64_t v21 = *(void *)(*(void *)v1 + 16);
    if (v21)
    {
      unint64_t v22 = *(void *)v1
          + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
      uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
      v23(v20, v22, v14);
      v23(v17, v22 + *(void *)(v15 + 72) * (v21 - 1), v14);
      sub_261B8BB58();
      uint64_t v24 = v48;
      sub_261B8BB58();
      sub_261AA8068(&qword_26A9464A0, MEMORY[0x263F07490]);
      LOBYTE(v22) = sub_261B8F088();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v15 + 8);
      v25(v17, v14);
      v25(v20, v14);
      if (v22)
      {
        uint64_t v26 = v13;
        uint64_t v27 = v44;
        uint64_t v28 = v43;
        uint64_t v29 = &v44[*(int *)(v43 + 48)];
        uint64_t v30 = v45;
        uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
        v31(v44, v26, v9);
        uint64_t v40 = v29;
        v31(v29, v24, v9);
        uint64_t v32 = v41;
        uint64_t v33 = &v41[*(int *)(v28 + 48)];
        v34 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
        v34(v41, v27, v9);
        v34(v33, v29, v9);
        uint64_t v35 = (uint64_t)v47;
        v31(v47, v32, v9);
        uint64_t v36 = *(void (**)(char *, uint64_t))(v30 + 8);
        v36(v33, v9);
        uint64_t v37 = &v32[*(int *)(v43 + 48)];
        v31(v32, v27, v9);
        v31(v37, v40, v9);
        v31((char *)(v35 + *(int *)(v46 + 36)), v37, v9);
        v36(v32, v9);
        return sub_2619FB7EC(v35, v42, &qword_26A946388);
      }
      __break(1u);
    }
    uint64_t result = sub_261B8F9C8();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946390);
    return sub_261B8EA18();
  }
  return result;
}

uint64_t sub_261AA1EC8(uint64_t a1)
{
  uint64_t v2 = sub_261B8D0B8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_261B8D028();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = type metadata accessor for SessionChart(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  sub_261AA4468();
  sub_261AA2778(a1, (uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_261AA27E0((uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  sub_261B8D018();
  sub_261B8D0A8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9464D0);
  sub_261B8ADD8();
  sub_261AA7CB8();
  return sub_261B8D2A8();
}

uint64_t sub_261AA20BC()
{
  return sub_261AA1EC8(*(void *)(v0 + 16));
}

double sub_261AA20C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SessionChart(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (double *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = v0 + *(int *)(v5 + 40);
  char v7 = *(unsigned char *)(v6 + 16);
  uint64_t v8 = *(void *)(v6 + 24);
  long long v13 = *(_OWORD *)v6;
  char v14 = v7;
  uint64_t v15 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9464A8);
  sub_261B8EA18();
  double v9 = v16;
  char v10 = v17;
  sub_261AA2778(v1, (uint64_t)v4);
  if ((v10 & 1) == 0) {
    goto LABEL_4;
  }
  double v11 = v4[11];
  sub_261AA7BA8((uint64_t)v4, type metadata accessor for SessionChart);
  double v9 = 0.0;
  if (v11 < 0.0)
  {
    __break(1u);
LABEL_4:
    sub_261AA7BA8((uint64_t)v4, type metadata accessor for SessionChart);
  }
  return v9;
}

uint64_t sub_261AA21E4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261AA2248(uint64_t a1)
{
  uint64_t v2 = sub_261B8D0B8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_261B8D028();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = type metadata accessor for SessionChart(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9438F8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_261B92AA0;
  *(double *)(v7 + 32) = sub_261AA20C4();
  sub_261AA20C4();
  *(void *)(v7 + 40) = v8;
  sub_261AA2778(a1, (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  sub_261AA27E0((uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  sub_261B8D018();
  sub_261B8D0A8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9464B0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9464B8);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9464C0);
  uint64_t v13 = sub_2619F8AB8(&qword_26A9464C8, &qword_26A9464C0);
  uint64_t v16 = v12;
  uint64_t v17 = v13;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v16 = v11;
  uint64_t v17 = MEMORY[0x263F1B440];
  uint64_t v18 = OpaqueTypeConformance2;
  uint64_t v19 = MEMORY[0x263F1B420];
  swift_getOpaqueTypeConformance2();
  return sub_261B8D2A8();
}

uint64_t sub_261AA2510()
{
  return sub_261AA2248(*(void *)(v0 + 16));
}

uint64_t sub_261AA2518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = type metadata accessor for SessionChartState(0);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = *(_OWORD *)(a3 + 88);
  long long v15 = *(_OWORD *)(a3 + 120);
  v40[6] = *(_OWORD *)(a3 + 104);
  v40[7] = v15;
  v40[8] = *(_OWORD *)(a3 + 136);
  long long v16 = *(_OWORD *)(a3 + 24);
  long long v17 = *(_OWORD *)(a3 + 56);
  v40[2] = *(_OWORD *)(a3 + 40);
  v40[3] = v17;
  v40[4] = *(_OWORD *)(a3 + 72);
  v40[5] = v14;
  v40[0] = *(_OWORD *)(a3 + 8);
  v40[1] = v16;
  long long v18 = *(_OWORD *)(a3 + 88);
  long long v19 = *(_OWORD *)(a3 + 120);
  long long v37 = *(_OWORD *)(a3 + 104);
  long long v38 = v19;
  long long v39 = *(_OWORD *)(a3 + 136);
  long long v20 = *(_OWORD *)(a3 + 24);
  long long v21 = *(_OWORD *)(a3 + 56);
  long long v33 = *(_OWORD *)(a3 + 40);
  long long v34 = v21;
  long long v35 = *(_OWORD *)(a3 + 72);
  long long v36 = v18;
  long long v31 = *(_OWORD *)(a3 + 8);
  long long v32 = v20;
  sub_261AA78FC((uint64_t)v40);
  sub_261A9F990((uint64_t)&v31, (uint64_t)v13);
  sub_261AA7970((uint64_t)v40);
  sub_2619F86F0((uint64_t)v13, (uint64_t)v9, &qword_26A946388);
  uint64_t v22 = type metadata accessor for SessionChart(0);
  sub_2619F86F0((uint64_t)v9, (uint64_t)v6, &qword_26A946388);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946390);
  sub_261B8EA28();
  sub_2619F8754((uint64_t)v9, &qword_26A946388);
  uint64_t v23 = &v13[*(int *)(v11 + 28)];
  char v24 = v23[16];
  uint64_t v25 = (long long *)(a3 + *(int *)(v22 + 32));
  char v26 = *((unsigned char *)v25 + 16);
  uint64_t v27 = *((void *)v25 + 3);
  long long v31 = *v25;
  LOBYTE(v32) = v26;
  *((void *)&v32 + 1) = v27;
  long long v29 = *(_OWORD *)v23;
  char v30 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9464A8);
  sub_261B8EA28();
  return sub_261AA7BA8((uint64_t)v13, type metadata accessor for SessionChartState);
}

uint64_t sub_261AA2778(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionChart(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261AA27E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionChart(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261AA2844(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for SessionChart(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_261AA2518(a1, a2, v6);
}

unint64_t sub_261AA28C4()
{
  unint64_t result = qword_26A946450;
  if (!qword_26A946450)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946448);
    sub_261AA8068(&qword_26A946458, MEMORY[0x263F87C08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946450);
  }
  return result;
}

uint64_t sub_261AA2968()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261AA2984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v117 = a2;
  uint64_t v109 = sub_261B8D308();
  uint64_t v106 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  v104 = (char *)&v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9465A0);
  uint64_t v107 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  v105 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946598);
  uint64_t v111 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  uint64_t v108 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946298);
  uint64_t v115 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  uint64_t v114 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v112 = (char *)&v89 - v8;
  uint64_t v100 = sub_261B8D258();
  uint64_t v98 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  double v95 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946590);
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  unint64_t v99 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946290);
  uint64_t v132 = *(void *)(v126 - 8);
  MEMORY[0x270FA5388](v126);
  uint64_t v103 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v97 = (char *)&v89 - v13;
  MEMORY[0x270FA5388](v14);
  v125 = (char *)&v89 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459D0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v94 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  v128 = (char *)&v89 - v19;
  uint64_t v20 = sub_261B8ADD8();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (void (**)(char *, uint64_t))((char *)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459D8);
  MEMORY[0x270FA5388](v24 - 8);
  v127 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_261B8D1C8();
  uint64_t v92 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v89 = (char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946588);
  uint64_t v96 = *(void (***)(char *, uint64_t))(v93 - 8);
  MEMORY[0x270FA5388](v93);
  v90 = (char *)&v89 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946288);
  uint64_t v124 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  v129 = (char *)&v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  v130 = (char *)&v89 - v30;
  sub_261B8DB98();
  sub_261B8BB58();
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v31 = *(void (**)(void, uint64_t))(v21 + 8);
  uint64_t v122 = v21 + 8;
  v120 = v31;
  uint64_t v123 = v20;
  v31(v23, v20);
  sub_261B8DB98();
  long long v32 = v121;
  *(void *)&long long v140 = sub_261AA20C4();
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = v32[9];
  *(void *)&long long v140 = v32[8];
  *((void *)&v140 + 1) = v33;
  swift_bridgeObjectRetain();
  uint64_t v118 = a1;
  sub_261B8BB68();
  *(void *)&v138[0] = v34;
  unint64_t v119 = sub_261A029C4();
  sub_261B8D098();
  swift_bridgeObjectRelease();
  long long v35 = v89;
  sub_261B8D1B8();
  sub_261A9F3E8((uint64_t)v138);
  long long v140 = v138[0];
  long long v141 = v138[1];
  uint64_t v142 = v139;
  uint64_t v36 = MEMORY[0x263F18AF0];
  uint64_t v37 = MEMORY[0x263EFCD18];
  uint64_t v38 = MEMORY[0x263F18AE0];
  long long v39 = v90;
  uint64_t v40 = v91;
  sub_261B8CF38();
  sub_261A03DA8((uint64_t)v138);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v35, v40);
  *(void *)&long long v140 = v40;
  *((void *)&v140 + 1) = v36;
  *(void *)&long long v141 = v37;
  *((void *)&v141 + 1) = v38;
  swift_getOpaqueTypeConformance2();
  uint64_t v41 = v129;
  uint64_t v42 = v93;
  sub_261B8CF88();
  uint64_t v43 = v95;
  v96[1](v39, v42);
  (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v130, v41, v131);
  sub_261B8DB98();
  sub_261B8BB58();
  uint64_t v44 = v123;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v96 = v23;
  v120(v23, v44);
  uint64_t v45 = v32[9];
  *(void *)&long long v140 = v32[8];
  *((void *)&v140 + 1) = v45;
  swift_bridgeObjectRetain();
  sub_261B8BB68();
  v134 = v46;
  sub_261B8D098();
  swift_bridgeObjectRelease();
  sub_261B8D248();
  uint64_t v47 = (void *)v32[18];
  if (v47)
  {
    id v48 = (id)v32[18];
  }
  else
  {
    id v48 = objc_msgSend(self, sel_whiteColor);
    uint64_t v47 = 0;
  }
  id v49 = v47;
  *(void *)&long long v140 = MEMORY[0x263E4C7B0](v48);
  uint64_t v50 = (char *)MEMORY[0x263EFCD48];
  uint64_t v51 = v99;
  uint64_t v52 = v100;
  uint64_t v53 = MEMORY[0x263F1B440];
  unint64_t v54 = MEMORY[0x263F1B420];
  sub_261B8CF38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v43, v52);
  sub_261B8D3F8();
  v134 = (char *)v52;
  uint64_t v135 = v53;
  v136 = v50;
  unint64_t v137 = v54;
  swift_getOpaqueTypeConformance2();
  uint64_t v55 = v97;
  uint64_t v56 = v102;
  sub_261B8CFD8();
  sub_261A7D408((uint64_t)&v140);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v51, v56);
  (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v125, v55, v126);
  sub_261B8DB98();
  uint64_t v57 = v96;
  uint64_t v58 = v118;
  sub_261B8BB58();
  uint64_t v59 = v123;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v120(v57, v59);
  uint64_t v60 = v121[9];
  v134 = (char *)v121[8];
  uint64_t v135 = v60;
  swift_bridgeObjectRetain();
  sub_261B8BB68();
  uint64_t v133 = v61;
  sub_261B8D098();
  swift_bridgeObjectRelease();
  uint64_t v62 = v104;
  sub_261B8D2F8();
  unint64_t v63 = sub_261A996EC();
  uint64_t v64 = MEMORY[0x263F1B638];
  v65 = (char *)MEMORY[0x263EFCD88];
  v66 = v105;
  uint64_t v67 = v109;
  sub_261B8CFB8();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v62, v67);
  v134 = (char *)v67;
  uint64_t v135 = v64;
  v136 = v65;
  unint64_t v137 = v63;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v69 = v108;
  uint64_t v70 = v110;
  sub_261B8CF08();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v66, v70);
  uint64_t v133 = sub_261AA3F8C(v58);
  v134 = (char *)v70;
  uint64_t v135 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v71 = v114;
  uint64_t v72 = v113;
  sub_261B8CF38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v69, v72);
  uint64_t v73 = v115;
  v74 = v112;
  uint64_t v75 = v116;
  (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v112, v71, v116);
  uint64_t v76 = v124;
  uint64_t v77 = v129;
  (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v129, v130, v131);
  v134 = v77;
  uint64_t v78 = v132;
  uint64_t v79 = v103;
  uint64_t v80 = v125;
  uint64_t v81 = v126;
  (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v103, v125, v126);
  uint64_t v135 = (uint64_t)v79;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v71, v74, v75);
  v136 = v71;
  sub_261A98548(&v134, v117);
  uint64_t v82 = *(void (**)(char *, uint64_t))(v73 + 8);
  v82(v74, v75);
  uint64_t v83 = *(void (**)(char *, uint64_t))(v78 + 8);
  uint64_t v132 = v78 + 8;
  uint64_t v84 = v80;
  uint64_t v85 = v81;
  v83(v84, v81);
  uint64_t v86 = *(void (**)(char *, uint64_t))(v76 + 8);
  uint64_t v87 = v131;
  v86(v130, v131);
  v82(v71, v75);
  v83(v79, v85);
  return ((uint64_t (*)(char *, uint64_t))v86)(v129, v87);
}

uint64_t sub_261AA3ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v41 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459D0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v38 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  long long v35 = (char *)&v30 - v5;
  uint64_t v6 = sub_261B8ADD8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459D8);
  MEMORY[0x270FA5388](v10 - 8);
  long long v32 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_261B8D278();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v36 = v12;
  uint64_t v37 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946130);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v39 = v16;
  uint64_t v40 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v33 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8DB98();
  sub_261B8BB58();
  uint64_t v30 = v6;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v20 = *(void *)(v34 + 72);
  uint64_t v46 = *(void *)(v34 + 64);
  uint64_t v19 = v46;
  uint64_t v47 = v20;
  swift_bridgeObjectRetain();
  double v42 = sub_261AA20C4();
  sub_261A029C4();
  sub_261B8D098();
  swift_bridgeObjectRelease();
  uint64_t v46 = v19;
  uint64_t v47 = v20;
  swift_bridgeObjectRetain();
  uint64_t v21 = v31;
  sub_261B8BB68();
  double v42 = v22;
  sub_261B8D098();
  swift_bridgeObjectRelease();
  sub_261B8D268();
  uint64_t v46 = sub_261AA3F8C(v21);
  uint64_t v23 = MEMORY[0x263F1B440];
  uint64_t v24 = MEMORY[0x263EFCD60];
  uint64_t v25 = MEMORY[0x263F1B420];
  uint64_t v26 = v33;
  double v27 = *(double *)&v36;
  sub_261B8CF38();
  swift_release();
  (*(void (**)(char *, double))(v37 + 8))(v15, COERCE_DOUBLE(*(void *)&v27));
  sub_261B8D3F8();
  double v42 = v27;
  uint64_t v43 = v23;
  uint64_t v44 = v24;
  uint64_t v45 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v28 = v39;
  sub_261B8CFD8();
  sub_261A7D408((uint64_t)&v46);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v26, v28);
}

uint64_t sub_261AA3F8C(uint64_t a1)
{
  uint64_t v3 = sub_261B8BB78();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9465A8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9465B0);
  MEMORY[0x270FA5388](v10 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v37 - v12;
  double v17 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v37 - v15;
  uint64_t v19 = *(void **)(v1 + 104);
  if (!v19 || *(unsigned char *)(v1 + 96) != 1) {
    return swift_retain();
  }
  uint64_t v38 = v16;
  uint64_t v39 = a1;
  v37[0] = v6;
  v37[1] = v1;
  id v40 = v19;
  uint64_t v41 = v9;
  uint64_t v20 = *(void *)(*(void *)v1 + 16);
  if (v20)
  {
    uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t, double))(v4 + 16);
    v21((char *)v37 - v15, *(void *)v1+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * (v20 - 1), v3, v17);
    double v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v4 + 56);
    ((void (*)(char *, void, uint64_t, uint64_t))v22)(v18, 0, 1, v3);
  }
  else
  {
    double v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v4 + 56);
    v22((char *)v37 - v15, 1, 1, v3, v17);
    uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t, double))(v4 + 16);
  }
  ((void (*)(char *, uint64_t, uint64_t))v21)(v13, v39, v3);
  ((void (*)(char *, void, uint64_t, uint64_t))v22)(v13, 0, 1, v3);
  uint64_t v23 = (uint64_t)v41;
  uint64_t v24 = (uint64_t)&v41[*(int *)(v7 + 48)];
  sub_2619F86F0((uint64_t)v18, (uint64_t)v41, &qword_26A9465B0);
  sub_2619F86F0((uint64_t)v13, v24, &qword_26A9465B0);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v25(v23, 1, v3) == 1)
  {
    id v26 = v40;
    id v27 = v40;
    sub_2619F8754((uint64_t)v13, &qword_26A9465B0);
    uint64_t v23 = (uint64_t)v41;
    sub_2619F8754((uint64_t)v18, &qword_26A9465B0);
    int v28 = v25(v24, 1, v3);
    id v29 = v26;
    if (v28 == 1)
    {
      sub_2619F8754(v23, &qword_26A9465B0);
      return MEMORY[0x263E4C7B0](v29);
    }
  }
  else
  {
    uint64_t v30 = v38;
    sub_2619F86F0(v23, v38, &qword_26A9465B0);
    if (v25(v24, 1, v3) != 1)
    {
      uint64_t v32 = v37[0];
      (*(void (**)(void, uint64_t, uint64_t))(v4 + 32))(v37[0], v24, v3);
      sub_261AA8068(&qword_26A946458, MEMORY[0x263F87C08]);
      id v29 = v40;
      id v33 = v40;
      char v34 = sub_261B8F0A8();
      long long v35 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v35(v32, v3);
      sub_2619F8754((uint64_t)v13, &qword_26A9465B0);
      sub_2619F8754((uint64_t)v18, &qword_26A9465B0);
      v35(v38, v3);
      sub_2619F8754(v23, &qword_26A9465B0);
      if (v34) {
        return MEMORY[0x263E4C7B0](v29);
      }
      goto LABEL_15;
    }
    id v29 = v40;
    id v31 = v40;
    sub_2619F8754((uint64_t)v13, &qword_26A9465B0);
    sub_2619F8754((uint64_t)v18, &qword_26A9465B0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v30, v3);
  }
  sub_2619F8754(v23, &qword_26A9465A8);
LABEL_15:

  return swift_retain();
}

uint64_t sub_261AA4468()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_261B8ADD8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v50 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v60 = (char *)&v48 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v56 = (char *)&v48 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v48 - v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  MEMORY[0x270FA5388](v59);
  id v49 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v48 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9438E0);
  uint64_t v20 = *(void *)(v3 + 72);
  unint64_t v21 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v55 = v20;
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_261B93F70;
  unint64_t v54 = v21;
  uint64_t v61 = v22;
  unint64_t v58 = v22 + v21;
  unint64_t v23 = v1 + *(int *)(type metadata accessor for SessionChart(0) + 28);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946390);
  sub_261B8EA18();
  uint64_t v26 = v4 + 16;
  uint64_t v25 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 16);
  v25(v58, v19, v2);
  sub_2619F8754((uint64_t)v19, &qword_26A946388);
  uint64_t v57 = v24;
  unint64_t v58 = v23;
  sub_261B8EA18();
  v25((unint64_t)v12, v19, v2);
  uint64_t v53 = v19;
  sub_2619F8754((uint64_t)v19, &qword_26A946388);
  sub_261B8AD38();
  id v29 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v27 = v4 + 8;
  int v28 = v29;
  v29(v12, v2);
  uint64_t v51 = v26;
  uint64_t v52 = (void (**)(uint64_t, char *, uint64_t))(v27 + 24);
  v25((unint64_t)v12, v15, v2);
  while (1)
  {
    uint64_t v30 = (uint64_t)v53;
    sub_261B8EA18();
    id v31 = v56;
    v25((unint64_t)v56, (char *)(v30 + *(int *)(v59 + 36)), v2);
    sub_2619F8754(v30, &qword_26A946388);
    char v32 = sub_261B8AD58();
    v28(v31, v2);
    uint64_t v33 = v27;
    char v34 = v28;
    v28(v12, v2);
    if ((v32 & 1) == 0) {
      break;
    }
    uint64_t v35 = v33;
    v25((unint64_t)v60, v15, v2);
    uint64_t v36 = v61;
    unint64_t v38 = *(void *)(v61 + 16);
    unint64_t v37 = *(void *)(v61 + 24);
    if (v38 >= v37 >> 1) {
      uint64_t v36 = sub_261A0B5A8(v37 > 1, v38 + 1, 1, v61);
    }
    *(void *)(v36 + 16) = v38 + 1;
    uint64_t v61 = v36;
    uint64_t v39 = v36 + v54 + v38 * v55;
    id v40 = *v52;
    (*v52)(v39, v60, v2);
    sub_261B8AD38();
    v28(v15, v2);
    v40((uint64_t)v15, v12, v2);
    uint64_t v27 = v35;
    v25((unint64_t)v12, v15, v2);
  }
  uint64_t v41 = (uint64_t)v49;
  sub_261B8EA18();
  double v42 = v50;
  v25((unint64_t)v50, (char *)(v41 + *(int *)(v59 + 36)), v2);
  sub_2619F8754(v41, &qword_26A946388);
  uint64_t v43 = v61;
  unint64_t v45 = *(void *)(v61 + 16);
  unint64_t v44 = *(void *)(v61 + 24);
  if (v45 >= v44 >> 1) {
    uint64_t v43 = sub_261A0B5A8(v44 > 1, v45 + 1, 1, v61);
  }
  *(void *)(v43 + 16) = v45 + 1;
  uint64_t v46 = v43;
  (*v52)(v43 + v54 + v45 * v55, v42, v2);
  v34(v15, v2);
  return v46;
}

uint64_t sub_261AA4998@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v36 = (char *)a1;
  uint64_t v37 = a2;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946528);
  MEMORY[0x270FA5388](v34);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9464F8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v35 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9464E8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946520);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946530);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  unint64_t v21 = (char *)&v32 - v20;
  uint64_t v22 = sub_261B8D2E8();
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = v37;
    uint64_t result = sub_261B8D2D8();
    if (__OFSUB__(result, 1))
    {
      __break(1u);
    }
    else if (result - 1 == v23)
    {
      sub_261AA5998((uint64_t)v21);
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v8, v21, v15);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A946540);
      swift_storeEnumTagMultiPayload();
      sub_2619F86F0((uint64_t)v8, v24, &qword_26A9464E8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A946538);
      swift_storeEnumTagMultiPayload();
      sub_2619F8754((uint64_t)v8, &qword_26A9464E8);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    }
    else
    {
      sub_261AA5728((uint64_t)v14);
      sub_2619F86F0((uint64_t)v14, v24, &qword_26A946520);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A946538);
      swift_storeEnumTagMultiPayload();
      return sub_2619F8754((uint64_t)v14, &qword_26A946520);
    }
  }
  else
  {
    sub_261AA4EA8((uint64_t)v21);
    sub_261AA5728((uint64_t)v14);
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v26(v18, v21, v15);
    uint64_t v36 = v14;
    sub_2619F86F0((uint64_t)v14, (uint64_t)v11, &qword_26A946520);
    sub_2619F8AB8(&qword_26A946510, &qword_26A946508);
    v26(v3, v18, v15);
    sub_261AA7F8C();
    uint64_t v33 = v21;
    uint64_t v27 = (uint64_t)v8;
    uint64_t v28 = v34;
    uint64_t v29 = (uint64_t)&v3[*(int *)(v34 + 48)];
    sub_2619F86F0((uint64_t)v11, v29, &qword_26A946520);
    uint64_t v30 = (uint64_t)v35;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v35, v3, v15);
    sub_2619FB7EC(v29, v30 + *(int *)(v28 + 48), &qword_26A946520);
    sub_2619F8754((uint64_t)v11, &qword_26A946520);
    id v31 = *(void (**)(char *, uint64_t))(v16 + 8);
    v31(v18, v15);
    sub_2619F86F0(v30, v27, &qword_26A9464F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946540);
    swift_storeEnumTagMultiPayload();
    sub_2619F8754(v30, &qword_26A9464F8);
    sub_2619F86F0(v27, v37, &qword_26A9464E8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946538);
    swift_storeEnumTagMultiPayload();
    sub_2619F8754(v27, &qword_26A9464E8);
    sub_2619F8754((uint64_t)v36, &qword_26A946520);
    return ((uint64_t (*)(char *, uint64_t))v31)(v33, v15);
  }
  return result;
}

uint64_t sub_261AA4EA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_261B8D128();
  MEMORY[0x270FA5388](v4 - 8);
  v49[3] = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8D148();
  MEMORY[0x270FA5388](v6 - 8);
  v49[2] = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946508);
  uint64_t v51 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v50 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946500);
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v55 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v52 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_261B8ADD8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v49 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v49 - v22;
  if (*(unsigned char *)(v1 + 40) != 1)
  {
    v49[1] = a1;
    type metadata accessor for SessionChart(0);
    v49[0] = v1;
    a1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946390);
    sub_261B8EA18();
    uint64_t v29 = &v23[*(int *)(v18 + 36)];
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v30(v17, v29, v11);
    sub_2619F8754((uint64_t)v23, &qword_26A946388);
    sub_261B8EA18();
    v30(v14, v20, v11);
    sub_2619F8754((uint64_t)v20, &qword_26A946388);
    sub_261B8AD28();
    double v32 = v31;
    uint64_t v33 = *(void (**)(char *, uint64_t))(v12 + 8);
    v33(v14, v11);
    v33(v17, v11);
    double v34 = round(v32 / 60.0);
    if ((~*(void *)&v34 & 0x7FF0000000000000) != 0)
    {
      if (v34 > -9.22337204e18)
      {
        if (v34 < 9.22337204e18)
        {
          a1 = (uint64_t)v34;
          if (qword_26B416690 == -1)
          {
LABEL_12:
            swift_beginAccess();
            id v35 = (id)qword_26B416688;
            unint64_t v47 = 0xE000000000000000;
            sub_261B8AA48();

            __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
            uint64_t v36 = swift_allocObject();
            uint64_t v37 = MEMORY[0x263F8D6C8];
            *(_OWORD *)(v36 + 16) = xmmword_261B93F70;
            uint64_t v38 = MEMORY[0x263F8D750];
            *(void *)(v36 + 56) = v37;
            *(void *)(v36 + 64) = v38;
            *(void *)(v36 + 32) = a1;
            sub_261B8F0C8();
            swift_bridgeObjectRelease();
            uint64_t v28 = swift_bridgeObjectRelease();
            uint64_t v2 = v49[0];
            goto LABEL_13;
          }
LABEL_20:
          swift_once();
          goto LABEL_12;
        }
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v24 = (id)qword_26B416688;
  unint64_t v47 = 0xE000000000000000;
  sub_261B8AA48();

  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_261B93F70;
  double v26 = round(*(double *)(v1 + 16) / 60.0);
  if ((~*(void *)&v26 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v26 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v27 = MEMORY[0x263F8D750];
  *(void *)(v25 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v25 + 64) = v27;
  *(void *)(v25 + 32) = (uint64_t)v26;
  sub_261B8F0C8();
  swift_bridgeObjectRelease();
  uint64_t v28 = swift_bridgeObjectRelease();
LABEL_13:
  MEMORY[0x270FA5388](v28);
  sub_261B8D138();
  sub_261B8D118();
  uint64_t v48 = MEMORY[0x263F1A820];
  v46[1] = v46;
  unint64_t v47 = MEMORY[0x263F1A830];
  v46[0] = sub_261AA8044;
  uint64_t v39 = v50;
  sub_261B8D068();
  swift_bridgeObjectRelease();
  type metadata accessor for SessionChart(0);
  uint64_t v40 = sub_2619F8AB8(&qword_26A946510, &qword_26A946508);
  double v42 = v52;
  uint64_t v41 = v53;
  sub_261B8D1E8();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v41);
  uint64_t v43 = MEMORY[0x263E4C7B0](*(id *)(v2 + 120));
  uint64_t v57 = v40;
  uint64_t v58 = v43;
  uint64_t v56 = v41;
  swift_getOpaqueTypeConformance2();
  uint64_t v44 = v55;
  sub_261B8D1D8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v42, v44);
}

uint64_t sub_261AA5728@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_261B8CEA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946548);
  v9.n128_f64[0] = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 40))
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56);
    return v12(a1, 1, 1, v7, v9);
  }
  else
  {
    v14[0] = v8;
    sub_261B8D3F8();
    long long v18 = v15;
    long long v19 = v16;
    uint64_t v20 = v17;
    sub_261B8CE98();
    v14[1] = MEMORY[0x263E4C7B0](*(id *)(v1 + 112));
    sub_261B8D1D8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(uint64_t, char *, uint64_t))(v14[0] + 32))(a1, v11, v7);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14[0] + 56))(a1, 0, 1, v7);
  }
}

uint64_t sub_261AA5998@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v1 = sub_261B8D128();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_261B8D148();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946508);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946500);
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v21 = v7;
  MEMORY[0x270FA5388](v7);
  __n128 v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v10 = (id)qword_26B416688;
  uint64_t v11 = sub_261B8AA48();
  uint64_t v13 = v12;

  uint64_t v25 = v11;
  uint64_t v26 = v13;
  sub_261A029C4();
  sub_261B8F768();
  uint64_t v14 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v14);
  sub_261B8D138();
  sub_261B8D118();
  v19[3] = MEMORY[0x263F1A820];
  v19[1] = v19;
  v19[2] = MEMORY[0x263F1A830];
  v19[0] = sub_261AA8044;
  sub_261B8D068();
  swift_bridgeObjectRelease();
  type metadata accessor for SessionChart(0);
  uint64_t v15 = v22;
  uint64_t v16 = sub_2619F8AB8(&qword_26A946510, &qword_26A946508);
  sub_261B8D1E8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v24 = MEMORY[0x263E4C7B0](*(id *)(v15 + 120));
  uint64_t v25 = v3;
  uint64_t v26 = v16;
  swift_getOpaqueTypeConformance2();
  uint64_t v17 = v21;
  sub_261B8D1D8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v9, v17);
}

uint64_t sub_261AA5DF4@<X0>(uint64_t a1@<X8>)
{
  sub_261A029C4();
  swift_bridgeObjectRetain();
  uint64_t result = sub_261B8E3D8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_261AA5E60@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v16[0] = a2;
  uint64_t v3 = sub_261B8D128();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = sub_261B8D148();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9464C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9464B8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8D138();
  sub_261B8D118();
  sub_261B8D078();
  type metadata accessor for SessionChart(0);
  uint64_t v13 = sub_2619F8AB8(&qword_26A9464C8, &qword_26A9464C0);
  sub_261B8D1E8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v14 = MEMORY[0x263E4C7B0](*(id *)(a1 + 120));
  v16[2] = v13;
  void v16[3] = v14;
  v16[1] = v5;
  swift_getOpaqueTypeConformance2();
  sub_261B8D1D8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t initializeBufferWithCopyOfBuffer for SessionChart(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    uint64_t v7 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v8 = (void *)a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v8;
    uint64_t v9 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v9;
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    *(void *)(a1 + 88) = a2[11];
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    uint64_t v10 = (void *)a2[13];
    uint64_t v11 = (void *)a2[14];
    *(void *)(a1 + 104) = v10;
    *(void *)(a1 + 112) = v11;
    uint64_t v13 = (void *)a2[15];
    uint64_t v12 = (void *)a2[16];
    *(void *)(a1 + 120) = v13;
    *(void *)(a1 + 128) = v12;
    double v32 = v12;
    uint64_t v33 = (void *)a2[17];
    uint64_t v14 = a2[19];
    double v34 = (void *)a2[18];
    *(void *)(a1 + 136) = v33;
    *(void *)(a1 + 144) = v34;
    uint64_t v15 = a3[7];
    uint64_t v35 = (uint64_t)a2 + v15;
    uint64_t v36 = a1 + v15;
    *(void *)(a1 + 152) = v14;
    uint64_t v16 = sub_261B8ADD8();
    double v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    id v17 = v8;
    swift_bridgeObjectRetain();
    id v18 = v10;
    id v19 = v11;
    id v20 = v13;
    id v21 = v32;
    id v22 = v33;
    id v23 = v34;
    swift_retain();
    v31(v36, v35, v16);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
    v31(v36 + *(int *)(v24 + 36), v35 + *(int *)(v24 + 36), v16);
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946390);
    *(void *)(v36 + *(int *)(v25 + 28)) = *(void *)(v35 + *(int *)(v25 + 28));
    uint64_t v26 = a3[8];
    uint64_t v27 = a3[9];
    uint64_t v28 = v7 + v26;
    uint64_t v29 = (uint64_t)a2 + v26;
    *(unsigned char *)(v28 + 16) = *(unsigned char *)(v29 + 16);
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    *(void *)(v28 + 24) = *(void *)(v29 + 24);
    *(unsigned char *)(v7 + v27) = *((unsigned char *)a2 + v27);
    *(void *)(v7 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t destroy for SessionChart(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_261B8ADD8();
  uint64_t v6 = *(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  v6(&v4[*(int *)(v7 + 36)], v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946390);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for SessionChart(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v7 = *(void **)(a2 + 104);
  uint64_t v8 = *(void **)(a2 + 112);
  *(void *)(a1 + 104) = v7;
  *(void *)(a1 + 112) = v8;
  uint64_t v9 = *(void **)(a2 + 120);
  uint64_t v10 = *(void **)(a2 + 128);
  *(void *)(a1 + 120) = v9;
  *(void *)(a1 + 128) = v10;
  uint64_t v11 = *(void **)(a2 + 136);
  uint64_t v29 = *(void **)(a2 + 144);
  *(void *)(a1 + 136) = v11;
  *(void *)(a1 + 144) = v29;
  uint64_t v12 = a3[7];
  uint64_t v30 = a2 + v12;
  uint64_t v31 = a1 + v12;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  uint64_t v13 = sub_261B8ADD8();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  id v14 = v5;
  swift_bridgeObjectRetain();
  id v15 = v7;
  id v16 = v8;
  id v17 = v9;
  id v18 = v10;
  id v19 = v11;
  id v20 = v29;
  swift_retain();
  v28(v31, v30, v13);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  v28(v31 + *(int *)(v21 + 36), v30 + *(int *)(v21 + 36), v13);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946390);
  *(void *)(v31 + *(int *)(v22 + 28)) = *(void *)(v30 + *(int *)(v22 + 28));
  uint64_t v23 = a3[8];
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(unsigned char *)(v25 + 16) = *(unsigned char *)(v26 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(void *)(v25 + 24) = *(void *)(v26 + 24);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SessionChart(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void **)(a2 + 56);
  uint64_t v7 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v6;
  id v8 = v6;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v9 = *(void **)(a1 + 104);
  uint64_t v10 = *(void **)(a2 + 104);
  *(void *)(a1 + 104) = v10;
  id v11 = v10;

  uint64_t v12 = *(void **)(a2 + 112);
  uint64_t v13 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v12;
  id v14 = v12;

  id v15 = *(void **)(a2 + 120);
  id v16 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = v15;
  id v17 = v15;

  id v18 = *(void **)(a1 + 128);
  id v19 = *(void **)(a2 + 128);
  *(void *)(a1 + 128) = v19;
  id v20 = v19;

  uint64_t v21 = *(void **)(a1 + 136);
  uint64_t v22 = *(void **)(a2 + 136);
  *(void *)(a1 + 136) = v22;
  id v23 = v22;

  uint64_t v24 = *(void **)(a1 + 144);
  uint64_t v25 = *(void **)(a2 + 144);
  *(void *)(a1 + 144) = v25;
  id v26 = v25;

  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  swift_release();
  uint64_t v27 = a3[7];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_261B8ADD8();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24);
  v31(v28, v29, v30);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  v31(v28 + *(int *)(v32 + 36), v29 + *(int *)(v32 + 36), v30);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946390);
  *(void *)(v28 + *(int *)(v33 + 28)) = *(void *)(v29 + *(int *)(v33 + 28));
  swift_retain();
  swift_release();
  uint64_t v34 = a3[8];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (long long *)(a2 + v34);
  long long v37 = *v36;
  *(unsigned char *)(v35 + 16) = *((unsigned char *)v36 + 16);
  *(_OWORD *)uint64_t v35 = v37;
  *(void *)(v35 + 24) = *((void *)v36 + 3);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for SessionChart(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  long long v6 = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v10 = sub_261B8ADD8();
  id v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  v11(v8 + *(int *)(v12 + 36), v9 + *(int *)(v12 + 36), v10);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946390);
  *(void *)(v8 + *(int *)(v13 + 28)) = *(void *)(v9 + *(int *)(v13 + 28));
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  id v16 = (_OWORD *)(a1 + v14);
  id v17 = (_OWORD *)(a2 + v14);
  long long v18 = v17[1];
  *id v16 = *v17;
  v16[1] = v18;
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithTake for SessionChart(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  long long v6 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v8 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);

  uint64_t v9 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);

  uint64_t v10 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);

  id v11 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);

  uint64_t v12 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);

  uint64_t v13 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);

  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_release();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_261B8ADD8();
  long long v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40);
  v18(v15, v16, v17);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  v18(v15 + *(int *)(v19 + 36), v16 + *(int *)(v19 + 36), v17);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946390);
  *(void *)(v15 + *(int *)(v20 + 28)) = *(void *)(v16 + *(int *)(v20 + 28));
  swift_release();
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
  *(void *)(v22 + 24) = *(void *)(v23 + 24);
  swift_release();
  uint64_t v24 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionChart(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261AA6C80);
}

uint64_t sub_261AA6C80(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946390);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    id v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SessionChart(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261AA6D48);
}

void *sub_261AA6D48(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946390);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_261AA6DF4()
{
  sub_261AA6EBC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_261AA6EBC()
{
  if (!qword_26A946478)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946388);
    unint64_t v0 = sub_261B8EA48();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A946478);
    }
  }
}

unint64_t sub_261AA6F1C()
{
  unint64_t result = qword_26A946480;
  if (!qword_26A946480)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946460);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9463C8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946448);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9463C0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946438);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9463B8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946428);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9463B0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946418);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9463A8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946388);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9463A0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9463D8);
    sub_261AA1864();
    sub_261AA1924();
    swift_getOpaqueTypeConformance2();
    sub_261AA21E4(&qword_26A946410, &qword_26A946388);
    swift_getOpaqueTypeConformance2();
    sub_2619F8AB8(&qword_26A946420, &qword_26A946418);
    swift_getOpaqueTypeConformance2();
    sub_261AA21E4((unint64_t *)&qword_26A946430, &qword_26A946428);
    swift_getOpaqueTypeConformance2();
    sub_2619F8AB8(&qword_26A946440, &qword_26A946438);
    swift_getOpaqueTypeConformance2();
    sub_261AA28C4();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946480);
  }
  return result;
}

uint64_t *sub_261AA7218(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_261B8ADD8();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
    v8((uint64_t *)((char *)a1 + *(int *)(v9 + 36)), (uint64_t *)((char *)a2 + *(int *)(v9 + 36)), v7);
    uint64_t v10 = *(int *)(a3 + 20);
    id v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    *(_OWORD *)id v11 = *(_OWORD *)v12;
    v11[16] = v12[16];
  }
  return a1;
}

uint64_t sub_261AA7328(uint64_t a1)
{
  uint64_t v2 = sub_261B8ADD8();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v5)((void *)(v2 - 8), a1, v2);
  uint64_t v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A946388) + 36);
  return v5(v3, v2);
}

uint64_t sub_261AA73C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8ADD8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(unsigned char *)(v10 + 16) = *(unsigned char *)(v11 + 16);
  return a1;
}

uint64_t sub_261AA7488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8ADD8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  char v12 = *(unsigned char *)(v11 + 16);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(unsigned char *)(v10 + 16) = v12;
  return a1;
}

uint64_t sub_261AA7548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8ADD8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(unsigned char *)(v10 + 16) = *(unsigned char *)(v11 + 16);
  return a1;
}

uint64_t sub_261AA7608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8ADD8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(unsigned char *)(v10 + 16) = *(unsigned char *)(v11 + 16);
  return a1;
}

uint64_t sub_261AA76C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261AA76DC);
}

uint64_t sub_261AA76DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_261AA774C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261AA7760);
}

uint64_t sub_261AA7760(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

void sub_261AA77D4()
{
  sub_261AA7868();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_261AA7868()
{
  if (!qword_26A946498)
  {
    sub_261B8ADD8();
    sub_261AA8068(&qword_26A9464A0, MEMORY[0x263F07490]);
    unint64_t v0 = sub_261B8F098();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A946498);
    }
  }
}

uint64_t sub_261AA78FC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  uint64_t v3 = *(void **)(a1 + 96);
  uint64_t v4 = *(void **)(a1 + 104);
  int v5 = *(void **)(a1 + 112);
  uint64_t v6 = *(void **)(a1 + 120);
  uint64_t v7 = *(void **)(a1 + 128);
  id v8 = *(id *)(a1 + 136);
  id v9 = v2;
  swift_bridgeObjectRetain();
  id v10 = v3;
  id v11 = v4;
  id v12 = v5;
  id v13 = v6;
  id v14 = v7;
  return a1;
}

uint64_t sub_261AA7970(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  uint64_t v3 = *(void **)(a1 + 96);
  uint64_t v4 = *(void **)(a1 + 104);
  int v5 = *(void **)(a1 + 120);
  uint64_t v6 = *(void **)(a1 + 128);
  uint64_t v7 = *(void **)(a1 + 136);

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t objectdestroyTm_2()
{
  uint64_t v1 = (int *)(type metadata accessor for SessionChart(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = (id *)(v0 + v3);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = (char *)v6 + v1[9];
  uint64_t v8 = sub_261B8ADD8();
  id v9 = *(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946388);
  v9(&v7[*(int *)(v10 + 36)], v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946390);
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_261AA7B90(uint64_t a1)
{
  return sub_261AA7C24(a1, (uint64_t (*)(uint64_t, uint64_t))sub_261AA5E60);
}

uint64_t sub_261AA7BA8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_261AA7C0C(uint64_t a1)
{
  return sub_261AA7C24(a1, (uint64_t (*)(uint64_t, uint64_t))sub_261AA4998);
}

uint64_t sub_261AA7C24(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for SessionChart(0) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a2(a1, v5);
}

unint64_t sub_261AA7CB8()
{
  unint64_t result = qword_26A9464D8;
  if (!qword_26A9464D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9464D0);
    sub_261AA7D34();
    sub_261AA7F8C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9464D8);
  }
  return result;
}

unint64_t sub_261AA7D34()
{
  unint64_t result = qword_26A9464E0;
  if (!qword_26A9464E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9464E8);
    sub_261AA7E60();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946500);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946508);
    sub_2619F8AB8(&qword_26A946510, &qword_26A946508);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9464E0);
  }
  return result;
}

unint64_t sub_261AA7E60()
{
  unint64_t result = qword_26A9464F0;
  if (!qword_26A9464F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9464F8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946500);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946508);
    sub_2619F8AB8(&qword_26A946510, &qword_26A946508);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_261AA7F8C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9464F0);
  }
  return result;
}

unint64_t sub_261AA7F8C()
{
  unint64_t result = qword_26A946518;
  if (!qword_26A946518)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946520);
    sub_261B8CEA8();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946518);
  }
  return result;
}

uint64_t sub_261AA8044@<X0>(uint64_t a1@<X8>)
{
  return sub_261AA5DF4(a1);
}

uint64_t sub_261AA8050(uint64_t a1)
{
  return sub_261AA80CC(a1, (uint64_t (*)(uint64_t))sub_261AA3ABC);
}

uint64_t sub_261AA8068(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261AA80B4(uint64_t a1)
{
  return sub_261AA80CC(a1, (uint64_t (*)(uint64_t))sub_261AA2984);
}

uint64_t sub_261AA80CC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  return a2(a1);
}

unint64_t sub_261AA8148()
{
  unint64_t result = qword_26A946580;
  if (!qword_26A946580)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946578);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946588);
    sub_261B8D1C8();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946590);
    sub_261B8D258();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946598);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9465A0);
    sub_261B8D308();
    sub_261A996EC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946580);
  }
  return result;
}

uint64_t DownhillRun.startTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_261AA8400(&OBJC_IVAR___WODownhillRun_startTime, a1);
}

uint64_t DownhillRun.endTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_261AA8400(&OBJC_IVAR___WODownhillRun_endTime, a1);
}

uint64_t sub_261AA8400@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  uint64_t v5 = sub_261B8ADD8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

double sub_261AA84B8()
{
  uint64_t v1 = v0 + OBJC_IVAR___WODownhillRun_workoutTime;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_261AA8554(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___WODownhillRun_workoutTime);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t (*sub_261AA85A8())()
{
  return j__swift_endAccess;
}

void *DownhillRun.averageSpeed.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___WODownhillRun_averageSpeed);
  id v2 = v1;
  return v1;
}

void *DownhillRun.maximumSpeed.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___WODownhillRun_maximumSpeed);
  id v2 = v1;
  return v1;
}

void *DownhillRun.alpineSlope.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___WODownhillRun_alpineSlope);
  id v2 = v1;
  return v1;
}

void *DownhillRun.elevationAscended.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___WODownhillRun_elevationAscended);
  id v2 = v1;
  return v1;
}

void *DownhillRun.elevationDescended.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___WODownhillRun_elevationDescended);
  id v2 = v1;
  return v1;
}

void *sub_261AA8750()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___WODownhillRun_distance);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_261AA87AC(void *a1)
{
}

uint64_t (*sub_261AA87B8())()
{
  return j_j__swift_endAccess;
}

id sub_261AA8820(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = (id *)(a1 + *a3);
  swift_beginAccess();
  return *v3;
}

void *sub_261AA8868()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___WODownhillRun_averageHeartRate);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_261AA88C4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v5 = (void **)(a1 + *a4);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a3;
  id v7 = a3;
}

void sub_261AA8920(void *a1)
{
}

void sub_261AA892C(void *a1, void *a2)
{
  uint64_t v4 = (void **)(v2 + *a2);
  swift_beginAccess();
  uint64_t v5 = *v4;
  void *v4 = a1;
}

void sub_261AA897C(void **a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void **)(*a2 + *a5);
  swift_beginAccess();
  id v7 = *v6;
  *uint64_t v6 = v5;
  id v8 = v5;
}

uint64_t (*sub_261AA89DC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_261AA8A38()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943570);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_261B94FD0;
  *(void *)(v0 + 32) = sub_261B8F0F8();
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = sub_261B8F0F8();
  *(void *)(v0 + 56) = v2;
  *(void *)(v0 + 64) = sub_261B8F0F8();
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 80) = sub_261B8F0F8();
  *(void *)(v0 + 88) = v4;
  uint64_t result = sub_261B8F0F8();
  *(void *)(v0 + 96) = result;
  *(void *)(v0 + 104) = v6;
  qword_26A953660 = v0;
  return result;
}

id DownhillRun.__allocating_init(downhillRunEvent:workoutTime:distance:averageHeartRate:)(void *a1, void *a2, void *a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  id v10 = sub_261AAAE6C(a1, a2, a3, a4);

  return v10;
}

id DownhillRun.init(downhillRunEvent:workoutTime:distance:averageHeartRate:)(void *a1, void *a2, void *a3, double a4)
{
  id v7 = sub_261AAAE6C(a1, a2, a3, a4);

  return v7;
}

void sub_261AA8CB4(void *a1, void *a2, uint64_t a3, dispatch_group_t group, const char *a5)
{
  if (a2)
  {
    sub_261A0CCCC(0, &qword_26A9465E8);
    id v10 = a2;
    id v11 = a2;
    id v12 = a2;
    id v13 = sub_261B8F6B8();
    os_log_type_t v14 = sub_261B8F4D8();
    if (!os_log_type_enabled(v13, v14))
    {

      if (!a1) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138412290;
    id v17 = a2;
    uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
    sub_261B8F6F8();
    *uint64_t v16 = v21;

    _os_log_impl(&dword_2619F0000, v13, v14, a5, v15, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9465F0);
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v16, -1, -1);
    MEMORY[0x263E4E970](v15, -1, -1);
  }
  if (a1)
  {
LABEL_5:
    long long v18 = (void **)(a3 + 16);
    swift_beginAccess();
    uint64_t v19 = *v18;
    void *v18 = a1;
    id v20 = a1;
  }
LABEL_6:
  dispatch_group_leave(group);
}

void sub_261AA8F30(uint64_t a1, void *a2, uint64_t a3, void (*a4)(id, uint64_t), uint64_t a5, SEL *a6)
{
  if (!a2) {
    goto LABEL_7;
  }
  id v9 = a2;
  id v10 = [v9 *a6];
  if (!v10)
  {

LABEL_7:
    a4(0, a3);
    return;
  }
  id v11 = v10;
  id v12 = v10;
  a4(v11, 0);
}

uint64_t sub_261AA8FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v11 = (char *)&v25 - v10;
  uint64_t v12 = sub_261B8ADD8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  long long v18 = (char *)&v25 - v17;
  sub_261AAC054(a1, (uint64_t)v11);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v19(v11, 1, v12) == 1) {
    return sub_2619F8754((uint64_t)v11, &qword_26A943B38);
  }
  uint64_t v27 = a3;
  id v26 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v26(v18, v11, v12);
  sub_261AAC054(a2, (uint64_t)v8);
  if (v19(v8, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    return sub_2619F8754((uint64_t)v8, &qword_26A943B38);
  }
  else
  {
    uint64_t v21 = (double *)(v27 + 16);
    v26(v15, v8, v12);
    sub_261B8AD28();
    double v23 = v22;
    uint64_t v24 = *(void (**)(char *, uint64_t))(v13 + 8);
    v24(v15, v12);
    v24(v18, v12);
    uint64_t result = swift_beginAccess();
    *uint64_t v21 = v23 + *v21;
  }
  return result;
}

uint64_t sub_261AA92A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v11 = (char *)&v18 - v10;
  uint64_t v12 = *(void (**)(char *, char *))(a1 + 32);
  if (a2)
  {
    sub_261B8AD98();
    uint64_t v13 = sub_261B8ADD8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 0, 1, v13);
  }
  else
  {
    uint64_t v14 = sub_261B8ADD8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
  }
  if (a3)
  {
    sub_261B8AD98();
    uint64_t v15 = sub_261B8ADD8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 0, 1, v15);
  }
  else
  {
    uint64_t v16 = sub_261B8ADD8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  }
  swift_retain();
  v12(v11, v8);
  swift_release();
  sub_2619F8754((uint64_t)v8, &qword_26A943B38);
  return sub_2619F8754((uint64_t)v11, &qword_26A943B38);
}

BOOL static DownhillRun.supports(activityType:)(uint64_t a1)
{
  return a1 == 61 || a1 == 67;
}

id DownhillRun.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DownhillRun.init()()
{
}

id DownhillRun.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DownhillRun();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t DownhillRun.description.getter()
{
  return 0;
}

uint64_t HKHealthStore.distance(for:)(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = sub_261B8ADD8();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = sub_261B8A858();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261AA9CF4, 0, 0);
}

uint64_t sub_261AA9CF4()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  id v4 = objc_msgSend(*(id *)(v0 + 24), sel_dateInterval);
  sub_261B8A808();

  uint64_t v5 = self;
  sub_261B8A838();
  uint64_t v6 = (void *)sub_261B8AD48();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v1, v3);
  sub_261B8A818();
  id v8 = (void *)sub_261B8AD48();
  v7(v1, v3);
  id v9 = objc_msgSend(v5, sel_predicateForSamplesWithStartDate_endDate_options_, v6, v8, 0);
  *(void *)(v0 + 88) = v9;

  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A658]), sel_initWithIdentifier_, *MEMORY[0x263F09DB8]);
  *(void *)(v0 + 96) = v10;
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)(v0 + 32);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v13;
    v13[2] = v11;
    v13[3] = v9;
    v13[4] = v12;
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v14;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944838);
    void *v14 = v0;
    v14[1] = sub_261AA9FBC;
    return MEMORY[0x270FA2360](v0 + 16, 0, 0, 0x65636E6174736964, 0xEE00293A726F6628, sub_261AABAF0, v13, v15);
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v18 = *(void *)(v0 + 64);
    uint64_t v19 = sub_261B8F4B8();
    sub_261A407F4((uint64_t)"distance for downhillRunEvent -- downhill snow sports quantity type unexpectedly returned nil", 93, 2, v19, MEMORY[0x263F8EE78]);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    swift_task_dealloc();
    swift_task_dealloc();
    id v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20(0);
  }
}

uint64_t sub_261AA9FBC()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_261AAA198;
  }
  else {
    uint64_t v2 = sub_261AAA0EC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_261AAA0EC()
{
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v6(v5);
}

uint64_t sub_261AAA198()
{
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

void sub_261AAA240(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9465D8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  double v11 = MEMORY[0x270FA5388](v8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8, v11);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  id v14 = objc_allocWithZone(MEMORY[0x263F0A7E8]);
  aBlock[4] = sub_261AABFB0;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_261AAA4BC;
  aBlock[3] = &block_descriptor_1;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = objc_msgSend(v14, sel_initWithQuantityType_quantitySamplePredicate_options_completionHandler_, a2, a3, 16, v15);
  _Block_release(v15);
  swift_release();
  objc_msgSend(a4, sel_executeQuery_, v16);
}

uint64_t sub_261AAA430(int a1, id a2, id a3)
{
  if (a3)
  {
    id v3 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9465D8);
    return sub_261B8F338();
  }
  else
  {
    objc_msgSend(a2, sel_sumQuantity);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9465D8);
    return sub_261B8F348();
  }
}

void sub_261AAA4BC(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  id v10 = a2;
  id v8 = a3;
  id v9 = a4;
  v7(v10, a3, a4);
  swift_release();
}

void sub_261AAA55C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  id v34 = a3;
  uint64_t v6 = sub_261B8ADD8();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(a1, sel_fiui_activityType, v8);
  if (v11)
  {
    unint64_t v12 = v11;
    uint64_t v13 = FIUIDistanceTypeForActivityType();

    id v14 = objc_msgSend(self, sel_quantityTypeForDistanceType_, v13);
    uint64_t v15 = self;
    id v16 = objc_msgSend(v15, sel_predicateForObjectsFromWorkout_, a1);
    sub_261B8A838();
    uint64_t v17 = (void *)sub_261B8AD48();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18(v10, v6);
    sub_261B8A818();
    uint64_t v19 = (void *)sub_261B8AD48();
    v18(v10, v6);
    id v20 = objc_msgSend(v15, sel_predicateForSamplesWithStartDate_endDate_options_, v17, v19, 0);

    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9443E8);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_261B98030;
    *(void *)(v21 + 32) = v16;
    *(void *)(v21 + 40) = v20;
    aBlock[0] = v21;
    sub_261B8F2E8();
    sub_261A0CCCC(0, &qword_26A9465E0);
    id v22 = v16;
    id v23 = v20;
    uint64_t v24 = (void *)sub_261B8F2C8();
    swift_bridgeObjectRelease();
    id v25 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v24);

    uint64_t v26 = swift_allocObject();
    uint64_t v27 = v33;
    *(void *)(v26 + 16) = v32;
    *(void *)(v26 + 24) = v27;
    id v28 = objc_allocWithZone(MEMORY[0x263F0A7E8]);
    aBlock[4] = sub_261AAC1E0;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_261AAA4BC;
    aBlock[3] = &block_descriptor_37;
    uint64_t v29 = _Block_copy(aBlock);
    swift_retain();
    id v30 = objc_msgSend(v28, sel_initWithQuantityType_quantitySamplePredicate_options_completionHandler_, v14, v25, 16, v29);
    _Block_release(v29);
    swift_release();
    objc_msgSend(v34, sel_executeQuery_, v30);
  }
  else
  {
    __break(1u);
  }
}

void sub_261AAA8D8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a4;
  id v28 = a3;
  uint64_t v7 = sub_261B8ADD8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = self;
  id v12 = objc_msgSend(v11, sel_predicateForObjectsFromWorkout_, a1);
  sub_261B8A838();
  uint64_t v13 = (void *)sub_261B8AD48();
  id v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v10, v7);
  sub_261B8A818();
  uint64_t v15 = (void *)sub_261B8AD48();
  v14(v10, v7);
  id v16 = objc_msgSend(v11, sel_predicateForSamplesWithStartDate_endDate_options_, v13, v15, 1);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9443E8);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_261B98030;
  *(void *)(v17 + 32) = v12;
  *(void *)(v17 + 40) = v16;
  aBlock[0] = v17;
  sub_261B8F2E8();
  sub_261A0CCCC(0, &qword_26A9465E0);
  id v18 = v12;
  id v19 = v16;
  id v20 = (void *)sub_261B8F2C8();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v20);

  sub_261A0CCCC(0, &qword_26B416CF0);
  id v22 = (void *)MEMORY[0x263E4D3B0]((id)*MEMORY[0x263F09E38]);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v27;
  *(void *)(v23 + 24) = a5;
  id v24 = objc_allocWithZone(MEMORY[0x263F0A7E8]);
  aBlock[4] = sub_261AAC1BC;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_261AAA4BC;
  aBlock[3] = &block_descriptor_31;
  id v25 = _Block_copy(aBlock);
  swift_retain();
  id v26 = objc_msgSend(v24, sel_initWithQuantityType_quantitySamplePredicate_options_completionHandler_, v22, v21, 2, v25);

  _Block_release(v25);
  swift_release();
  objc_msgSend(v28, sel_executeQuery_, v26);
}

double _s9WorkoutUI11DownhillRunC09calculateA4Time12dateInterval17pauseResumeEventsSd10Foundation04DateH0V_SaySo14HKWorkoutEventCGSgtFZ_0(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_261B8ADD8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  sub_261B8A838();
  uint64_t v8 = (void *)sub_261B8AD48();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  v9(v6, v3);
  sub_261B8A818();
  id v10 = (void *)sub_261B8AD48();
  v9(v6, v3);
  if (a2)
  {
    sub_261A0CCCC(0, &qword_26A943798);
    a2 = (void *)sub_261B8F2C8();
  }
  aBlock[4] = sub_261AAC04C;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_261AA92A0;
  aBlock[3] = &block_descriptor_15;
  id v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  _HKEnumerateActiveWorkoutIntervalsStartingPaused();
  _Block_release(v11);

  swift_beginAccess();
  double v12 = *(double *)(v7 + 16);
  swift_release();
  return v12;
}

id sub_261AAAE6C(void *a1, void *a2, void *a3, double a4)
{
  uint64_t v82 = a2;
  uint64_t v83 = a3;
  uint64_t v79 = sub_261B8ADD8();
  uint64_t v7 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_261B8A858();
  uint64_t v78 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = (void **)&v4[OBJC_IVAR___WODownhillRun_distance];
  *(void *)&v4[OBJC_IVAR___WODownhillRun_distance] = 0;
  uint64_t v81 = (void **)&v4[OBJC_IVAR___WODownhillRun_averageHeartRate];
  *(void *)&v4[OBJC_IVAR___WODownhillRun_averageHeartRate] = 0;
  id v14 = v4;
  uint64_t v77 = v14;
  id v15 = objc_msgSend(a1, sel_dateInterval);
  sub_261B8A808();

  sub_261B8A838();
  id v16 = *(void (**)(char *, uint64_t))(v11 + 8);
  v16(v13, v10);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v18 = v79;
  v17(&v14[OBJC_IVAR___WODownhillRun_startTime], v9, v79);
  id v19 = a1;
  id v20 = objc_msgSend(a1, sel_dateInterval);
  sub_261B8A808();

  sub_261B8A818();
  v16(v13, v78);
  id v21 = v77;
  v17(&v77[OBJC_IVAR___WODownhillRun_endTime], v9, v18);
  id v22 = objc_msgSend(v19, sel_metadata);
  if (!v22)
  {
    long long v86 = 0u;
    long long v87 = 0u;
LABEL_11:
    sub_2619F8754((uint64_t)&v86, &qword_26A943228);
    uint64_t v30 = 0;
    goto LABEL_12;
  }
  uint64_t v23 = v22;
  uint64_t v24 = sub_261B8EFF8();

  uint64_t v25 = sub_261B8F0F8();
  if (*(void *)(v24 + 16) && (unint64_t v27 = sub_261ACB228(v25, v26), (v28 & 1) != 0))
  {
    sub_261A0CC60(*(void *)(v24 + 56) + 32 * v27, (uint64_t)&v86);
  }
  else
  {
    long long v86 = 0u;
    long long v87 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v87 + 1)) {
    goto LABEL_11;
  }
  sub_261A0CCCC(0, (unint64_t *)&qword_26A9437A8);
  int v29 = swift_dynamicCast();
  uint64_t v30 = v85;
  if (!v29) {
    uint64_t v30 = 0;
  }
LABEL_12:
  *(void *)&v21[OBJC_IVAR___WODownhillRun_averageSpeed] = v30;
  id v31 = objc_msgSend(v19, sel_metadata);
  if (!v31)
  {
    long long v86 = 0u;
    long long v87 = 0u;
LABEL_22:
    sub_2619F8754((uint64_t)&v86, &qword_26A943228);
    uint64_t v39 = 0;
    goto LABEL_23;
  }
  uint64_t v32 = v31;
  uint64_t v33 = sub_261B8EFF8();

  uint64_t v34 = sub_261B8F0F8();
  if (*(void *)(v33 + 16) && (unint64_t v36 = sub_261ACB228(v34, v35), (v37 & 1) != 0))
  {
    sub_261A0CC60(*(void *)(v33 + 56) + 32 * v36, (uint64_t)&v86);
  }
  else
  {
    long long v86 = 0u;
    long long v87 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v87 + 1)) {
    goto LABEL_22;
  }
  sub_261A0CCCC(0, (unint64_t *)&qword_26A9437A8);
  int v38 = swift_dynamicCast();
  uint64_t v39 = v85;
  if (!v38) {
    uint64_t v39 = 0;
  }
LABEL_23:
  *(void *)&v21[OBJC_IVAR___WODownhillRun_maximumSpeed] = v39;
  id v40 = objc_msgSend(v19, sel_metadata);
  if (!v40)
  {
    long long v86 = 0u;
    long long v87 = 0u;
LABEL_33:
    sub_2619F8754((uint64_t)&v86, &qword_26A943228);
    uint64_t v48 = 0;
    goto LABEL_34;
  }
  uint64_t v41 = v40;
  uint64_t v42 = sub_261B8EFF8();

  uint64_t v43 = sub_261B8F0F8();
  if (*(void *)(v42 + 16) && (unint64_t v45 = sub_261ACB228(v43, v44), (v46 & 1) != 0))
  {
    sub_261A0CC60(*(void *)(v42 + 56) + 32 * v45, (uint64_t)&v86);
  }
  else
  {
    long long v86 = 0u;
    long long v87 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v87 + 1)) {
    goto LABEL_33;
  }
  sub_261A0CCCC(0, (unint64_t *)&qword_26A9437A8);
  int v47 = swift_dynamicCast();
  uint64_t v48 = v85;
  if (!v47) {
    uint64_t v48 = 0;
  }
LABEL_34:
  *(void *)&v21[OBJC_IVAR___WODownhillRun_alpineSlope] = v48;
  id v49 = objc_msgSend(v19, sel_metadata);
  if (!v49)
  {
    long long v86 = 0u;
    long long v87 = 0u;
LABEL_44:
    sub_2619F8754((uint64_t)&v86, &qword_26A943228);
    uint64_t v57 = 0;
    goto LABEL_45;
  }
  uint64_t v50 = v49;
  uint64_t v51 = sub_261B8EFF8();

  uint64_t v52 = sub_261B8F0F8();
  if (*(void *)(v51 + 16) && (unint64_t v54 = sub_261ACB228(v52, v53), (v55 & 1) != 0))
  {
    sub_261A0CC60(*(void *)(v51 + 56) + 32 * v54, (uint64_t)&v86);
  }
  else
  {
    long long v86 = 0u;
    long long v87 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v87 + 1)) {
    goto LABEL_44;
  }
  sub_261A0CCCC(0, (unint64_t *)&qword_26A9437A8);
  int v56 = swift_dynamicCast();
  uint64_t v57 = v85;
  if (!v56) {
    uint64_t v57 = 0;
  }
LABEL_45:
  *(void *)&v21[OBJC_IVAR___WODownhillRun_elevationAscended] = v57;
  id v58 = objc_msgSend(v19, sel_metadata);
  if (!v58)
  {
    long long v86 = 0u;
    long long v87 = 0u;
LABEL_55:
    sub_2619F8754((uint64_t)&v86, &qword_26A943228);
    uint64_t v66 = 0;
    goto LABEL_56;
  }
  uint64_t v59 = v58;
  uint64_t v60 = sub_261B8EFF8();

  uint64_t v61 = sub_261B8F0F8();
  if (*(void *)(v60 + 16) && (unint64_t v63 = sub_261ACB228(v61, v62), (v64 & 1) != 0))
  {
    sub_261A0CC60(*(void *)(v60 + 56) + 32 * v63, (uint64_t)&v86);
  }
  else
  {
    long long v86 = 0u;
    long long v87 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v87 + 1)) {
    goto LABEL_55;
  }
  sub_261A0CCCC(0, (unint64_t *)&qword_26A9437A8);
  int v65 = swift_dynamicCast();
  uint64_t v66 = v85;
  if (!v65) {
    uint64_t v66 = 0;
  }
LABEL_56:
  *(void *)&v21[OBJC_IVAR___WODownhillRun_elevationDescended] = v66;
  *(double *)&v21[OBJC_IVAR___WODownhillRun_workoutTime] = a4;
  uint64_t v67 = v80;
  swift_beginAccess();
  double v68 = *v67;
  uint64_t v69 = v82;
  *uint64_t v67 = v82;
  id v70 = v69;

  uint64_t v71 = v81;
  swift_beginAccess();
  uint64_t v72 = *v71;
  uint64_t v73 = v83;
  *uint64_t v71 = v83;
  id v74 = v73;

  uint64_t v75 = (objc_class *)type metadata accessor for DownhillRun();
  v84.receiver = v21;
  v84.super_class = v75;
  return objc_msgSendSuper2(&v84, sel_init);
}

id _s9WorkoutUI11DownhillRunC04makecD008downhillD5Event7workout11healthStoreACSo09HKWorkoutG0C_So0K0CSo08HKHealthJ0CtFZ_0(void *a1, void *a2, void *a3)
{
  uint64_t v41 = a3;
  uint64_t v6 = sub_261B8A858();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v37 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = dispatch_group_create();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  uint64_t v40 = v13 + 16;
  dispatch_group_enter(v12);
  id v14 = objc_msgSend(a1, sel_dateInterval);
  sub_261B8A808();

  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = v12;
  uint64_t v38 = v13;
  swift_retain();
  id v16 = v12;
  sub_261AAA55C(a2, (uint64_t)v11, a3, (uint64_t)sub_261AAC0F8, v15);
  swift_release();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v11, v6);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  dispatch_group_enter(v16);
  id v19 = objc_msgSend(a1, sel_dateInterval);
  sub_261B8A808();

  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v18;
  *(void *)(v20 + 24) = v16;
  unint64_t v36 = v16;
  swift_retain();
  sub_261AAA8D8((uint64_t)a2, (uint64_t)v11, v41, (uint64_t)sub_261AAC160, v20);
  swift_release();
  uint64_t v39 = v6;
  uint64_t v21 = v6;
  uint64_t v22 = (uint64_t)v37;
  v17(v11, v21);
  uint64_t v41 = a1;
  id v23 = objc_msgSend(a1, sel_dateInterval);
  sub_261B8A808();

  id v24 = objc_msgSend(a2, sel_workoutEvents);
  if (v24)
  {
    uint64_t v25 = v24;
    sub_261A0CCCC(0, &qword_26A943798);
    uint64_t v26 = (void *)sub_261B8F2D8();
  }
  else
  {
    uint64_t v26 = 0;
  }
  double v27 = _s9WorkoutUI11DownhillRunC09calculateA4Time12dateInterval17pauseResumeEventsSd10Foundation04DateH0V_SaySo14HKWorkoutEventCGSgtFZ_0(v22, v26);
  swift_bridgeObjectRelease();
  v17((char *)v22, v39);
  char v28 = v36;
  sub_261B8F528();
  swift_beginAccess();
  int v29 = *(void **)(v38 + 16);
  swift_beginAccess();
  uint64_t v30 = *(void **)(v18 + 16);
  objc_allocWithZone((Class)type metadata accessor for DownhillRun());
  id v31 = v30;
  uint64_t v32 = v41;
  id v33 = v29;
  id v34 = sub_261AAAE6C(v32, v29, v30, v27);

  swift_release();
  swift_release();

  return v34;
}

uint64_t type metadata accessor for DownhillRun()
{
  uint64_t result = qword_26A9465C8;
  if (!qword_26A9465C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_261AABA98()
{
  unint64_t result = qword_26A9465B8;
  if (!qword_26A9465B8)
  {
    sub_261B8ADD8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9465B8);
  }
  return result;
}

void sub_261AABAF0(uint64_t a1)
{
  sub_261AAA240(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

double sub_261AABAFC@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (double *)(*a1 + OBJC_IVAR___WODownhillRun_workoutTime);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

uint64_t sub_261AABB50(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR___WODownhillRun_workoutTime);
  uint64_t result = swift_beginAccess();
  void *v3 = v2;
  return result;
}

id sub_261AABBA8@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR___WODownhillRun_distance, a2);
}

void sub_261AABBB4(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

id sub_261AABBD4@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR___WODownhillRun_averageHeartRate, a2);
}

id keypath_get_4Tm@<X0>(void *a1@<X0>, void *a2@<X3>, void **a3@<X8>)
{
  uint64_t v4 = (void **)(*a1 + *a2);
  swift_beginAccess();
  uint64_t v5 = *v4;
  *a3 = *v4;
  return v5;
}

void sub_261AABC40(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_261AABC60()
{
  return type metadata accessor for DownhillRun();
}

uint64_t sub_261AABC68()
{
  uint64_t result = sub_261B8ADD8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DownhillRun(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DownhillRun);
}

uint64_t dispatch thunk of DownhillRun.workoutTime.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of DownhillRun.workoutTime.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of DownhillRun.workoutTime.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of DownhillRun.distance.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of DownhillRun.distance.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of DownhillRun.distance.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of DownhillRun.averageHeartRate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of DownhillRun.averageHeartRate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of DownhillRun.averageHeartRate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of DownhillRun.__allocating_init(downhillRunEvent:workoutTime:distance:averageHeartRate:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t sub_261AABF1C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9465D8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_261AABFB0(int a1, void *a2, void *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9465D8);
  return sub_261AAA430(a1, a2, a3);
}

uint64_t sub_261AAC03C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_261AAC04C(uint64_t a1, uint64_t a2)
{
  return sub_261AA8FFC(a1, a2, v2);
}

uint64_t sub_261AAC054(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261AAC0BC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_261AAC0F8(void *a1, void *a2)
{
  sub_261AA8CB4(a1, a2, *(void *)(v2 + 16), *(dispatch_group_t *)(v2 + 24), "Error calculating distance for downhill run. error=%@");
}

uint64_t objectdestroy_20Tm()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_261AAC160(void *a1, void *a2)
{
  sub_261AA8CB4(a1, a2, *(void *)(v2 + 16), *(dispatch_group_t *)(v2 + 24), "Error calculating average heart rate for downhill run. error=%@");
}

uint64_t sub_261AAC184()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_261AAC1BC(uint64_t a1, void *a2, uint64_t a3)
{
  sub_261AA8F30(a1, a2, a3, *(void (**)(id, uint64_t))(v3 + 16), *(void *)(v3 + 24), (SEL *)&selRef_averageQuantity);
}

void sub_261AAC1E0(uint64_t a1, void *a2, uint64_t a3)
{
  sub_261AA8F30(a1, a2, a3, *(void (**)(id, uint64_t))(v3 + 16), *(void *)(v3 + 24), (SEL *)&selRef_sumQuantity);
}

uint64_t static LayoutUtilities.deviceDependentValue<A>(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  id v17 = objc_msgSend(self, sel_currentDevice);
  char v18 = sub_261AAC430();

  switch(v18)
  {
    case 3:
    case 4:
      a1 = a3;
      break;
    case 5:
    case 6:
      a1 = a5;
      break;
    case 7:
      a1 = a2;
      break;
    case 8:
      a1 = a4;
      break;
    case 9:
      a1 = a6;
      break;
    case 10:
      a1 = a7;
      break;
    default:
      break;
  }
  id v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 16);
  return v19(a9, a1, a8);
}

double static LayoutUtilities.layoutMetric(regular42:)(double a1)
{
  return _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(a1, a1, a1, a1, a1, a1, a1);
}

BOOL UIDevice.isLargeDisplayZoomEnabled.getter()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v1, sel_scale);
  double v3 = v2;

  id v4 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v4, sel_nativeScale);
  double v6 = v5;

  return v3 != v6;
}

uint64_t sub_261AAC430()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v1, sel_nativeBounds);
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;

  v26.origin.x = v3;
  v26.origin.y = v5;
  v26.size.width = v7;
  v26.size.height = v9;
  double Height = CGRectGetHeight(v26);
  id v11 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v11, sel_scale);
  double v13 = v12;

  double v14 = Height / v13;
  if (Height / v13 >= 0.0 && v14 <= 480.0) {
    return 0;
  }
  if (v14 >= 481.0 && v14 <= 568.0) {
    return 1;
  }
  if (v14 >= 569.0 && v14 <= 693.0) {
    return 2;
  }
  if (v14 >= 694.0 && v14 <= 736.0) {
    return 3;
  }
  if (v14 >= 737.0 && v14 <= 812.0) {
    return 4;
  }
  if (v14 >= 813.0 && v14 <= 844.0) {
    return 5;
  }
  if (v14 >= 845.0 && v14 <= 847.0) {
    return 6;
  }
  if (v14 >= 848.0 && v14 <= 852.0) {
    return 7;
  }
  if (v14 >= 853.0 && v14 <= 896.0) {
    return 8;
  }
  if (v14 > 926.0 || v14 < 897.0) {
    return 10;
  }
  else {
    return 9;
  }
}

double _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(double a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  double v14 = self;
  id v15 = objc_msgSend(v14, sel_currentDevice);
  char v16 = sub_261AAC430();

  switch(v16)
  {
    case 3:
    case 4:
      a1 = a3;
      break;
    case 5:
    case 6:
      a1 = a5;
      break;
    case 7:
      a1 = a2;
      break;
    case 8:
      a1 = a4;
      break;
    case 9:
      a1 = a6;
      break;
    case 10:
      a1 = a7;
      break;
    default:
      break;
  }
  id v17 = objc_msgSend(v14, sel_currentDevice);
  char v18 = self;
  id v19 = objc_msgSend(v18, sel_mainScreen);
  objc_msgSend(v19, sel_scale);
  double v21 = v20;

  id v22 = objc_msgSend(v18, sel_mainScreen);
  objc_msgSend(v22, sel_nativeScale);
  double v24 = v23;

  if (v21 != v24)
  {
    id v25 = objc_msgSend(v18, sel_mainScreen);
    objc_msgSend(v25, sel_scale);
    double v27 = v26;

    id v28 = objc_msgSend(v18, sel_mainScreen);
    objc_msgSend(v28, sel_nativeScale);
    double v30 = v29;

    return a1 * (v27 / v30 * 0.95);
  }
  return a1;
}

ValueMetadata *type metadata accessor for LayoutUtilities()
{
  return &type metadata for LayoutUtilities;
}

uint64_t static MediaTagStringBuilderOptions.workout.getter()
{
  return sub_261B8C778();
}

uint64_t static MediaTagStringBuilderOptions.workoutWithOverrides(highlightColorOverride:fallbackHighlightColor:lineHeightMultiple:lineSpacing:nonHighlightedColor:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  unint64_t v45 = a7;
  int v40 = a6;
  v38[0] = a3;
  v38[1] = a5;
  int v44 = a4;
  uint64_t v41 = a8;
  uint64_t v42 = a2;
  uint64_t v9 = sub_261B8C7B8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v46 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v39 = (char *)v38 - v13;
  MEMORY[0x270FA5388](v14);
  char v16 = (char *)v38 - v15;
  MEMORY[0x270FA5388](v17);
  id v19 = (char *)v38 - v18;
  MEMORY[0x270FA5388](v20);
  id v22 = (char *)v38 - v21;
  MEMORY[0x270FA5388](v23);
  id v25 = (char *)v38 - v24;
  sub_261B8C778();
  double v26 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v26(v22, v25, v9);
  uint64_t v27 = (uint64_t)a1;
  if (!a1) {
    uint64_t v27 = sub_261B8C7A8();
  }
  uint64_t v43 = v27;
  id v28 = *(void (**)(char *, uint64_t))(v10 + 8);
  id v29 = a1;
  v28(v22, v9);
  v26(v19, v25, v9);
  double v30 = v42;
  if (!v42)
  {
    sub_261B8C788();
    double v30 = 0;
  }
  id v31 = v30;
  v28(v19, v9);
  v26(v16, v25, v9);
  if (v44) {
    sub_261B8C758();
  }
  char v32 = v40;
  id v33 = v39;
  v28(v16, v9);
  v26(v33, v25, v9);
  if (v32) {
    sub_261B8C728();
  }
  id v34 = v46;
  v28(v33, v9);
  v26(v34, v25, v9);
  uint64_t v35 = v45;
  if (!v45)
  {
    sub_261B8C768();
    id v34 = v46;
  }
  id v36 = v35;
  v28(v34, v9);
  sub_261B8C748();
  sub_261B8C738();
  sub_261B8C798();
  return ((uint64_t (*)(char *, uint64_t))v28)(v25, v9);
}

uint64_t TrainingLoadBand.color.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_261B8E838();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  CGFloat v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8C988();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x263F42C00])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v11.n128_u64[0] = 0x3FDF9F9F9F9F9FA0;
    v12.n128_u64[0] = 0x3FDA9A9A9A9A9A9BLL;
    v13.n128_u64[0] = 0x3FEAFAFAFAFAFAFBLL;
    return MEMORY[0x263E4C7A0](v5, v11, v12, v13, 1.0);
  }
  if (v10 == *MEMORY[0x263F42BF0])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v11.n128_u64[0] = 0x3FE0505050505050;
    v12.n128_u64[0] = 0x3FE0D0D0D0D0D0D1;
LABEL_9:
    v13.n128_u64[0] = 1.0;
    return MEMORY[0x263E4C7A0](v5, v11, v12, v13, 1.0);
  }
  if (v10 == *MEMORY[0x263F42BE0])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v11.n128_u64[0] = 0x3FD5555555555555;
    v12.n128_u64[0] = 0x3FE5D5D5D5D5D5D6;
    goto LABEL_9;
  }
  if (v10 == *MEMORY[0x263F42BE8])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v11.n128_u64[0] = 0x3FE7575757575757;
    v12.n128_u64[0] = 0x3FDC5C5C5C5C5C5CLL;
    goto LABEL_9;
  }
  if (v10 != *MEMORY[0x263F42BF8])
  {
    uint64_t v14 = sub_261B8E888();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v14;
  }
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
  v12.n128_u64[0] = 0x3FDB1B1B1B1B1B1BLL;
  v13.n128_u64[0] = 0x3FECBCBCBCBCBCBDLL;
  v11.n128_u64[0] = 1.0;
  return MEMORY[0x263E4C7A0](v5, v11, v12, v13, 1.0);
}

uint64_t TrainingLoadBand.background.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_261B8E838();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  CGFloat v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8C988();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x263F42C00])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v11.n128_u64[0] = 0x3FCF9F9F9F9F9FA0;
    v12.n128_u64[0] = 0x3FAC1C1C1C1C1C1CLL;
    v13.n128_u64[0] = 0x3FE3B3B3B3B3B3B4;
  }
  else if (v10 == *MEMORY[0x263F42BF0])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v11.n128_u64[0] = 0x3FD1919191919192;
    v12.n128_u64[0] = 0x3FC7979797979798;
    v13.n128_u64[0] = 0x3FED3D3D3D3D3D3DLL;
  }
  else if (v10 == *MEMORY[0x263F42BE0])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v11.n128_u64[0] = 0x3FCF1F1F1F1F1F1FLL;
    v12.n128_u64[0] = 0x3FE3535353535353;
    v13.n128_u64[0] = 0x3FEF1F1F1F1F1F1FLL;
  }
  else if (v10 == *MEMORY[0x263F42BE8])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v11.n128_u64[0] = 0x3FE5F5F5F5F5F5F6;
    v12.n128_u64[0] = 0x3FD5959595959596;
    v13.n128_u64[0] = 1.0;
  }
  else
  {
    if (v10 != *MEMORY[0x263F42BF8])
    {
      uint64_t v14 = sub_261B8E888();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return v14;
    }
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v12.n128_u64[0] = 0x3FD5151515151515;
    v13.n128_u64[0] = 0x3FE999999999999ALL;
    v11.n128_u64[0] = 1.0;
  }
  return MEMORY[0x263E4C7A0](v5, v11, v12, v13, 1.0);
}

__n128 TrainingLoadBand.layeredBackground.getter@<Q0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9460C8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_261B92AA0;
  uint64_t v3 = self;
  MEMORY[0x263E4C7B0](objc_msgSend(v3, sel_secondarySystemBackgroundColor));
  uint64_t v4 = sub_261B8E8A8();
  swift_release();
  *(void *)(v2 + 32) = v4;
  MEMORY[0x263E4C7B0](objc_msgSend(v3, sel_secondarySystemBackgroundColor));
  uint64_t v5 = sub_261B8E8A8();
  swift_release();
  *(void *)(v2 + 40) = v5;
  uint64_t v26 = v2;
  sub_261B8F2E8();
  sub_261B8ED28();
  sub_261B8ED38();
  MEMORY[0x263E4CB30](v2);
  sub_261B8D5D8();
  uint64_t v6 = v22;
  long long v21 = v23;
  uint64_t v7 = v24;
  uint64_t v8 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943908);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_261B94B90;
  TrainingLoadBand.background.getter();
  sub_261B8E8A8();
  swift_release();
  *(void *)(v9 + 32) = sub_261B8EC48();
  *(void *)(v9 + 40) = v10;
  TrainingLoadBand.background.getter();
  sub_261B8E8A8();
  swift_release();
  *(void *)(v9 + 48) = sub_261B8EC48();
  *(void *)(v9 + 56) = v11;
  TrainingLoadBand.background.getter();
  sub_261B8E8A8();
  swift_release();
  *(void *)(v9 + 64) = sub_261B8EC48();
  *(void *)(v9 + 72) = v12;
  sub_261B8ED28();
  sub_261B8ED38();
  MEMORY[0x263E4CB20](v9);
  sub_261B8D5D8();
  uint64_t v13 = v26;
  __n128 v20 = v27;
  uint64_t v14 = v28;
  uint64_t v15 = v29;
  uint64_t v16 = sub_261B8EC98();
  uint64_t v18 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_261A001E0((uint64_t)&v22);
  sub_261A001E0((uint64_t)&v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261A03DA8((uint64_t)&v26);
  sub_261A03DA8((uint64_t)&v22);
  *(void *)a1 = v16;
  *(void *)(a1 + 8) = v18;
  *(void *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 24) = v21;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v13;
  __n128 result = v20;
  *(__n128 *)(a1 + 64) = v20;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  return result;
}

uint64_t TrainingLoadBand.localizedDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_261B8C988();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, v1, v2, v4);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x263F42C00])
  {
    if (qword_26B416690 == -1) {
      goto LABEL_15;
    }
    goto LABEL_18;
  }
  if (v7 == *MEMORY[0x263F42BF0])
  {
    if (qword_26B416690 == -1) {
      goto LABEL_15;
    }
    goto LABEL_18;
  }
  if (v7 == *MEMORY[0x263F42BE0])
  {
    if (qword_26B416690 == -1) {
      goto LABEL_15;
    }
    goto LABEL_18;
  }
  if (v7 == *MEMORY[0x263F42BE8])
  {
    if (qword_26B416690 == -1) {
      goto LABEL_15;
    }
    goto LABEL_18;
  }
  if (v7 != *MEMORY[0x263F42BF8])
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
  if (qword_26B416690 != -1) {
LABEL_18:
  }
    swift_once();
LABEL_15:
  swift_beginAccess();
  id v8 = (id)qword_26B416688;
  uint64_t v9 = sub_261B8AA48();

  return v9;
}

unint64_t sub_261AAD9EC()
{
  unint64_t result = qword_26A9465F8;
  if (!qword_26A9465F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946600);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9465F8);
  }
  return result;
}

uint64_t MoveRingDetailView.init(activityRing:isWheelchairUser:formattingManager:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_261B8B4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for MoveRingDetailView();
  *(unsigned char *)(a4 + *(int *)(result + 20)) = a2;
  *(void *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t type metadata accessor for MoveRingDetailView()
{
  uint64_t result = qword_26A946618;
  if (!qword_26A946618) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void MoveRingDetailView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_261B8B268();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v34 - v9;
  sub_261B8B498();
  sub_261B8B258();
  double v12 = v11;
  id v34 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v35 = v4;
  v34(v10, v4);
  uint64_t v13 = sub_261B8B4A8();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  uint64_t v37 = v13;
  uint64_t v38 = v14;
  char v39 = v16 & 1;
  char v36 = 1;
  sub_261AADE18();
  sub_261AADE6C();
  char v18 = sub_261B8B2B8();
  sub_261A49E4C(v13, v15, v17);
  if ((v18 & 1) == 0)
  {
    objc_msgSend(*(id *)(v2 + *(int *)(type metadata accessor for MoveRingDetailView() + 24)), sel_energyBurnedInUserUnitForCalories_, v12);
    double v12 = v19;
  }
  sub_261B8B498();
  sub_261B8B248();
  double v21 = v20;
  v34(v7, v35);
  uint64_t v22 = sub_261B8B4A8();
  uint64_t v24 = v23;
  uint64_t v37 = v22;
  uint64_t v38 = v23;
  char v26 = v25 & 1;
  char v39 = v25 & 1;
  char v36 = 1;
  char v27 = sub_261B8B2B8();
  sub_261A49E4C(v22, v24, v26);
  if ((v27 & 1) == 0)
  {
    objc_msgSend(*(id *)(v2 + *(int *)(type metadata accessor for MoveRingDetailView() + 24)), sel_energyBurnedInUserUnitForCalories_, v21);
    double v21 = v28;
  }
  char v29 = *(unsigned char *)(v2 + *(int *)(type metadata accessor for MoveRingDetailView() + 20));
  uint64_t KeyPath = swift_getKeyPath();
  double v31 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(0.0, 0.0, 10.0, 11.0, 11.0, 12.0, 12.0);
  double v32 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(0.0, 0.0, 16.0, 18.0, 18.0, 20.0, 20.0);
  double v33 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(0.0, 0.0, -2.0, -2.0, -2.0, -3.0, -3.0);
  *(void *)a1 = 2;
  *(double *)(a1 + 8) = v12;
  *(double *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v29;
  *(void *)(a1 + 32) = KeyPath;
  *(unsigned char *)(a1 + 40) = 0;
  *(double *)(a1 + 48) = v31;
  *(double *)(a1 + 56) = v32;
  *(double *)(a1 + 64) = v33;
}

unint64_t sub_261AADE18()
{
  unint64_t result = qword_26A946608;
  if (!qword_26A946608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946608);
  }
  return result;
}

unint64_t sub_261AADE6C()
{
  unint64_t result = qword_26A946610;
  if (!qword_26A946610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946610);
  }
  return result;
}

uint64_t sub_261AADECC()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for MoveRingDetailView(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_261B8B4B8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = *(void **)((char *)a2 + v8);
    *(void *)((char *)a1 + v8) = v9;
    id v10 = v9;
  }
  return a1;
}

void destroy for MoveRingDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8B4B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t initializeWithCopy for MoveRingDetailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8B4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  id v9 = v8;
  return a1;
}

uint64_t assignWithCopy for MoveRingDetailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8B4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = *(void **)(a2 + v7);
  id v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  return a1;
}

uint64_t initializeWithTake for MoveRingDetailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8B4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for MoveRingDetailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8B4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  return a1;
}

uint64_t getEnumTagSinglePayload for MoveRingDetailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261AAE274);
}

uint64_t sub_261AAE274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8B4B8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for MoveRingDetailView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261AAE348);
}

uint64_t sub_261AAE348(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_261B8B4B8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_261AAE404()
{
  uint64_t result = sub_261B8B4B8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_261AAE4AC()
{
  unint64_t result = qword_26A946628;
  if (!qword_26A946628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946628);
  }
  return result;
}

uint64_t EmbeddedGoalConfigurationView.init(goalConfiguration:formattingManager:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t EmbeddedGoalConfigurationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v2 = sub_261B8DED8();
  uint64_t v49 = *(void *)(v2 - 8);
  uint64_t v50 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v48 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_261B8D798();
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v43 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9451C0);
  uint64_t v6 = (int *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9451C8);
  MEMORY[0x270FA5388](v41);
  int v40 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9451D0);
  uint64_t v45 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v42 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v12 = *(void **)v1;
  uint64_t v11 = *(void **)(v1 + 8);
  uint64_t v39 = sub_261B8DAD8();
  sub_261AAE984(v12, (uint64_t)v8);
  uint64_t v13 = &v8[v6[15]];
  uint64_t v14 = sub_261B8DBF8();
  sub_261AAED60(v12, v11, (uint64_t)v52);
  uint64_t v15 = v52[0];
  uint64_t v16 = v52[1];
  char v17 = v53;
  long long v38 = v54;
  uint64_t v18 = v55;
  char v19 = v56;
  uint64_t v20 = v57;
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)uint64_t v13 = v14;
  *((void *)v13 + 1) = 0;
  v13[16] = 1;
  *((void *)v13 + 3) = v15;
  *((void *)v13 + 4) = v16;
  v13[40] = v17;
  *((_OWORD *)v13 + 3) = v38;
  *((void *)v13 + 8) = v18;
  v13[72] = v19;
  *((void *)v13 + 10) = v20;
  *((void *)v13 + 11) = KeyPath;
  v13[96] = 0;
  *(void *)&v8[v6[16]] = 0x4022000000000000;
  *(void *)&v8[v6[17]] = v39;
  uint64_t v22 = v43;
  sub_261B8D788();
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = (uint64_t)v40;
  char v25 = (uint64_t *)&v40[*(int *)(v41 + 36)];
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B08);
  uint64_t v27 = v44;
  uint64_t v28 = v46;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))((char *)v25 + *(int *)(v26 + 28), v22, v46);
  uint64_t *v25 = v23;
  sub_2619F86F0((uint64_t)v8, v24, &qword_26A9451C0);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v28);
  sub_2619F8754((uint64_t)v8, &qword_26A9451C0);
  char v29 = v48;
  sub_261B8DEC8();
  sub_261A5A83C();
  double v30 = v42;
  sub_261B8E6B8();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v29, v50);
  sub_2619F8754(v24, &qword_26A9451C8);
  uint64_t v31 = sub_261B8E898();
  uint64_t v32 = swift_getKeyPath();
  uint64_t v33 = v45;
  uint64_t v34 = v51;
  uint64_t v35 = v47;
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 16))(v51, v30, v47);
  char v36 = (uint64_t *)(v34 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A9451E8) + 36));
  *char v36 = v32;
  v36[1] = v31;
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v30, v35);
}

void sub_261AAE984(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9451F8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_261B8D618();
  uint64_t v6 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945200);
  MEMORY[0x270FA5388](v33);
  uint64_t v10 = (void *)((char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945208);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8B8E8();
  if (swift_dynamicCastClass())
  {
    v32[0] = v11;
    v32[1] = a1;
    id v14 = a1;
    uint64_t v15 = sub_261B8B8D8();
    unint64_t v17 = v16;
    id v18 = objc_allocWithZone(MEMORY[0x263F827E8]);
    char v19 = (void *)sub_261B8AC08();
    id v20 = objc_msgSend(v18, sel_initWithData_, v19);
    sub_261A340C4(v15, v17);

    if (v20)
    {
      uint64_t v21 = sub_261B8E908();

      uint64_t v11 = v32[0];
LABEL_10:
      sub_261B8D608();
      uint64_t v26 = v34;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v5, v8, v34);
      sub_2619F86F0((uint64_t)v5, (uint64_t)v10 + *(int *)(v33 + 36), &qword_26A9451F8);
      *uint64_t v10 = v21;
      swift_retain();
      sub_2619F8754((uint64_t)v5, &qword_26A9451F8);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v26);
      swift_release();
      uint64_t v27 = WorkoutConfiguration.displayColor.getter();
      uint64_t v28 = MEMORY[0x263E4C7B0](v27);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v36 = v28;
      swift_retain();
      uint64_t v30 = sub_261B8D4E8();
      sub_2619F86F0((uint64_t)v10, (uint64_t)v13, &qword_26A945200);
      swift_release();
      uint64_t v31 = (uint64_t *)&v13[*(int *)(v11 + 36)];
      uint64_t *v31 = KeyPath;
      v31[1] = v30;
      sub_2619F8754((uint64_t)v10, &qword_26A945200);
      sub_261AAF380((uint64_t)v13, v35);
      return;
    }

    uint64_t v11 = v32[0];
  }
  sub_261B8B818();
  if (!swift_dynamicCastClass())
  {
    WorkoutConfiguration.displaySymbolName.getter();
    uint64_t v25 = sub_261B8E948();
    goto LABEL_9;
  }
  uint64_t v22 = (void *)sub_261B8BA28();
  id v23 = (id)FIUIStaticScalableWorkoutIconImageWithPadding();

  if (v23)
  {
    id v24 = objc_msgSend(v23, sel_imageWithRenderingMode_, 2);

    uint64_t v25 = sub_261B8E908();
LABEL_9:
    uint64_t v21 = v25;
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_261AAED60@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  sub_261B8B848();
  uint64_t v45 = a3;
  if (swift_dynamicCastClass())
  {
    id v6 = a1;
    uint64_t v7 = (void *)sub_261B8B838();
    id v8 = objc_msgSend(v7, sel_goalTypeIdentifier);

    _HKWorkoutGoalType.displayNameShort(formattingManager:)(a2, (uint64_t)v8);
LABEL_3:

LABEL_6:
    uint64_t v9 = a2;
    sub_261A029C4();
    uint64_t v10 = sub_261B8E3D8();
    uint64_t v12 = v11;
    char v14 = v13 & 1;
    sub_261B8E0D8();
    sub_261B8E148();
    sub_261B8E1D8();
    swift_release();
    uint64_t v15 = sub_261B8E368();
    uint64_t v43 = v16;
    uint64_t v44 = v15;
    uint64_t v42 = v17;
    char v19 = v18;
    swift_release();
    char v20 = v19 & 1;
    sub_261A02A18(v10, v12, v14);
    swift_bridgeObjectRelease();
    uint64_t v21 = (void *)sub_261B8B838();
    uint64_t v22 = (void *)sub_261B8BA28();
    uint64_t v23 = FIUIDistanceTypeForActivityType();

    NLSessionActivityGoal.displayString(formattingManager:distanceType:localizedOpenString:)(v9, v23, 0, 0, 0);
    uint64_t v24 = sub_261B8E3D8();
    uint64_t v26 = v25;
    char v28 = v27 & 1;
    sub_261B8E8C8();
    uint64_t v29 = sub_261B8E318();
    uint64_t v31 = v30;
    char v33 = v32;
    swift_release();
    LOBYTE(v9) = v33 & 1;
    sub_261A02A18(v24, v26, v28);
    swift_bridgeObjectRelease();
    sub_261B8E0D8();
    sub_261B8E138();
    sub_261B8E1D8();
    swift_release();
    sub_261B8E098();
    swift_release();
    uint64_t v34 = sub_261B8E368();
    uint64_t v36 = v35;
    LOBYTE(v26) = v37;
    uint64_t v39 = v38;
    swift_release();
    sub_261A02A18(v29, v31, (char)v9);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v45 = v44;
    *(void *)(v45 + 8) = v42;
    *(unsigned char *)(v45 + 16) = v20;
    *(void *)(v45 + 24) = v43;
    *(void *)(v45 + 32) = v34;
    *(void *)(v45 + 40) = v36;
    *(unsigned char *)(v45 + 48) = v26 & 1;
    *(void *)(v45 + 56) = v39;
    sub_261A001D0(v44, v42, v20);
    swift_bridgeObjectRetain();
    sub_261A001D0(v34, v36, v26 & 1);
    swift_bridgeObjectRetain();
    sub_261A02A18(v34, v36, v26 & 1);
    swift_bridgeObjectRelease();
    sub_261A02A18(v44, v42, v20);
    return swift_bridgeObjectRelease();
  }
  sub_261B8B988();
  if (swift_dynamicCastClass())
  {
    sub_261B8F148();
    goto LABEL_6;
  }
  sub_261B8B8E8();
  if (swift_dynamicCastClass())
  {
    if (qword_26B416690 == -1) {
      goto LABEL_12;
    }
    goto LABEL_16;
  }
  sub_261B8B918();
  if (swift_dynamicCastClass())
  {
    if (qword_26B416690 == -1)
    {
LABEL_12:
      swift_beginAccess();
      id v6 = (id)qword_26B416688;
      sub_261B8AA48();
      goto LABEL_3;
    }
LABEL_16:
    swift_once();
    goto LABEL_12;
  }
  sub_261B8B818();
  if (swift_dynamicCastClass())
  {
    if (qword_26B416690 == -1) {
      goto LABEL_12;
    }
    goto LABEL_16;
  }
  sub_261B8F8C8();
  swift_bridgeObjectRelease();
  id v41 = objc_msgSend(a1, sel_description);
  sub_261B8F0F8();

  sub_261B8F1C8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_261B8F9C8();
  __break(1u);
  return result;
}

uint64_t sub_261AAF34C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for EmbeddedGoalConfigurationView()
{
  return &type metadata for EmbeddedGoalConfigurationView;
}

uint64_t sub_261AAF380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t TrainingLoadOnboardingCore.init(imageName:title:message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  uint64_t v7 = (char *)a6 + *(int *)(type metadata accessor for TrainingLoadOnboardingCore() + 24);
  uint64_t v8 = sub_261B8AA18();
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
  return v9(v7, a5, v8);
}

uint64_t type metadata accessor for TrainingLoadOnboardingCore()
{
  uint64_t result = qword_26A946630;
  if (!qword_26A946630) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t TrainingLoadOnboardingCore.imageName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrainingLoadOnboardingCore.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrainingLoadOnboardingCore.message.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TrainingLoadOnboardingCore() + 24);
  uint64_t v4 = sub_261B8AA18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t TrainingLoadOnboardingCore.body.getter@<X0>(void *a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v2 = sub_261B8E928();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v1;
  uint64_t v6 = qword_26B416690;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v7 = (id)qword_26B416688;
  sub_261B8E998();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B4B8], v2);
  uint64_t v8 = sub_261B8E988();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_261B8EC98();
  sub_261B8D4D8();
  uint64_t v71 = v8;
  uint64_t v72 = 0;
  __int16 v73 = 1;
  uint64_t v74 = v66;
  char v75 = v67;
  uint64_t v76 = v68;
  char v77 = v69;
  long long v78 = v70;
  sub_261B8EC98();
  sub_2619FF514(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v54, 0.0, 1, 0.0, 1);
  swift_release();
  char v9 = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  char v79 = 0;
  char v18 = sub_261B8DFC8();
  sub_261B8D358();
  uint64_t v20 = v19;
  uint64_t v41 = v21;
  uint64_t v42 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v39 = v25;
  uint64_t v40 = v23;
  uint64_t v26 = v25;
  char v27 = v79;
  char v81 = 0;
  sub_261AAFB88(v43, (uint64_t)&v45);
  LOBYTE(v8) = sub_261B8DF98();
  sub_261B8D358();
  char v84 = 0;
  char v28 = v81;
  *(_DWORD *)uint64_t v93 = *(_DWORD *)v85;
  *(_DWORD *)&v93[3] = *(_DWORD *)&v85[3];
  v86[8] = v62;
  v86[9] = v63;
  v86[10] = v64;
  *(void *)&v86[11] = v65;
  v86[4] = v58;
  v86[5] = v59;
  v86[6] = v60;
  v86[7] = v61;
  v86[0] = v54;
  v86[1] = v55;
  v86[2] = v56;
  v86[3] = v57;
  BYTE8(v86[11]) = v9;
  *(_DWORD *)((char *)&v86[11] + 9) = *(_DWORD *)v80;
  HIDWORD(v86[11]) = *(_DWORD *)&v80[3];
  *(void *)&v86[12] = v11;
  *((void *)&v86[12] + 1) = v13;
  *(void *)&v86[13] = v15;
  *((void *)&v86[13] + 1) = v17;
  LOBYTE(v86[14]) = v27;
  *(_DWORD *)((char *)&v86[14] + 1) = *(_DWORD *)v83;
  DWORD1(v86[14]) = *(_DWORD *)&v83[3];
  BYTE8(v86[14]) = v18;
  HIDWORD(v86[14]) = *(_DWORD *)&v82[3];
  *(_DWORD *)((char *)&v86[14] + 9) = *(_DWORD *)v82;
  *(void *)&v86[15] = v20;
  *((void *)&v86[15] + 1) = v22;
  *(void *)&v86[16] = v24;
  *((void *)&v86[16] + 1) = v26;
  LOBYTE(v86[17]) = v81;
  v87[6] = v51;
  v87[7] = v52;
  v87[8] = v53;
  v87[2] = v47;
  v87[3] = v48;
  v87[4] = v49;
  v87[5] = v50;
  v87[0] = v45;
  v87[1] = v46;
  LOBYTE(v88) = v8;
  *(_DWORD *)((char *)&v88 + 1) = *(_DWORD *)v85;
  DWORD1(v88) = *(_DWORD *)&v85[3];
  *((void *)&v88 + 1) = v29;
  uint64_t v30 = v29;
  *(void *)&v89[0] = v31;
  uint64_t v32 = v31;
  *((void *)&v89[0] + 1) = v33;
  uint64_t v34 = v33;
  *(void *)&v89[1] = v35;
  uint64_t v36 = v35;
  BYTE8(v89[1]) = 0;
  memcpy(v90, v86, 0x111uLL);
  *(_OWORD *)&v90[51] = v53;
  *(_OWORD *)&v90[53] = v88;
  *(_OWORD *)&v90[55] = v89[0];
  *(_OWORD *)((char *)&v90[56] + 1) = *(_OWORD *)((char *)v89 + 9);
  *(_OWORD *)&v90[43] = v49;
  *(_OWORD *)&v90[45] = v50;
  *(_OWORD *)&v90[47] = v51;
  *(_OWORD *)&v90[49] = v52;
  *(_OWORD *)&v90[35] = v45;
  *(_OWORD *)&v90[37] = v46;
  *(_OWORD *)&v90[39] = v47;
  *(_OWORD *)&v90[41] = v48;
  memcpy(v44, v90, 0x1D1uLL);
  v91[6] = v51;
  v91[7] = v52;
  v91[8] = v53;
  v91[2] = v47;
  v91[3] = v48;
  v91[4] = v49;
  v91[5] = v50;
  v91[0] = v45;
  v91[1] = v46;
  char v92 = v8;
  uint64_t v94 = v30;
  uint64_t v95 = v32;
  uint64_t v96 = v34;
  uint64_t v97 = v36;
  char v98 = 0;
  sub_261A0020C((uint64_t)v86);
  sub_261AB01C8((uint64_t)v87);
  sub_261AB0254((uint64_t)v91);
  v99[8] = v62;
  v99[9] = v63;
  v99[10] = v64;
  uint64_t v100 = v65;
  unsigned char v99[4] = v58;
  v99[5] = v59;
  v99[6] = v60;
  v99[7] = v61;
  v99[0] = v54;
  v99[1] = v55;
  v99[2] = v56;
  v99[3] = v57;
  char v101 = v9;
  *(_DWORD *)uint64_t v102 = *(_DWORD *)v80;
  *(_DWORD *)&v102[3] = *(_DWORD *)&v80[3];
  uint64_t v103 = v11;
  uint64_t v104 = v13;
  uint64_t v105 = v15;
  uint64_t v106 = v17;
  char v107 = v27;
  *(_DWORD *)uint64_t v108 = *(_DWORD *)v83;
  *(_DWORD *)&v108[3] = *(_DWORD *)&v83[3];
  char v109 = v18;
  *(_DWORD *)&v110[3] = *(_DWORD *)&v82[3];
  *(_DWORD *)uint64_t v110 = *(_DWORD *)v82;
  uint64_t v111 = v42;
  uint64_t v112 = v41;
  uint64_t v113 = v40;
  uint64_t v114 = v39;
  char v115 = v28;
  return sub_261A49250((uint64_t)v99);
}

uint64_t sub_261AAFB88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v82 = sub_261B8AA18();
  uint64_t v78 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  char v77 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_261B8E1F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = a1;
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v84 = v9;
  uint64_t v85 = v10;
  sub_261A029C4();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_261B8E3D8();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  sub_261B8E038();
  unsigned int v72 = *MEMORY[0x263F1A680];
  uint64_t v16 = *(void (**)(void))(v6 + 104);
  uint64_t v70 = v6 + 104;
  uint64_t v71 = (void (*)(char *, void, uint64_t))v16;
  uint64_t v67 = v5;
  v16(v8);
  uint64_t v66 = v8;
  sub_261B8E218();
  swift_release();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v68 = v6 + 8;
  char v69 = v17;
  v17(v8, v5);
  uint64_t v18 = sub_261B8E368();
  uint64_t v20 = v19;
  LOBYTE(v6) = v21;
  swift_release();
  sub_261A02A18(v11, v13, v15);
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_261B8E358();
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  sub_261A02A18(v18, v20, v6 & 1);
  swift_bridgeObjectRelease();
  LODWORD(v84) = sub_261B8DE08();
  uint64_t v27 = sub_261B8E328();
  uint64_t v79 = v28;
  uint64_t v80 = v27;
  uint64_t v81 = v29;
  int v74 = v30 & 1;
  sub_261A02A18(v22, v24, v26);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  int v75 = sub_261B8DFC8();
  sub_261B8D358();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t OnboardingCore = type metadata accessor for TrainingLoadOnboardingCore();
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v77, v73 + *(int *)(OnboardingCore + 24), v82);
  uint64_t v40 = sub_261B8E3C8();
  uint64_t v42 = v41;
  LOBYTE(v20) = v43 & 1;
  sub_261B8E0D8();
  uint64_t v44 = v66;
  uint64_t v45 = v67;
  v71(v66, v72, v67);
  sub_261B8E218();
  swift_release();
  v69(v44, v45);
  uint64_t v46 = sub_261B8E368();
  uint64_t v48 = v47;
  LOBYTE(v44) = v49;
  swift_release();
  sub_261A02A18(v40, v42, v20);
  swift_bridgeObjectRelease();
  id v50 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v84 = MEMORY[0x263E4C7B0](v50);
  uint64_t v51 = sub_261B8E328();
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  LOBYTE(v20) = v56 & 1;
  sub_261A02A18(v46, v48, v44 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v57 = swift_getKeyPath();
  char v58 = v74;
  char v83 = v74;
  char v92 = v74;
  char v89 = 0;
  char v87 = v20;
  *(_DWORD *)(a2 + 17) = v84;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v84 + 3);
  *(_DWORD *)(a2 + 41) = *(_DWORD *)v91;
  *(_DWORD *)(a2 + 44) = *(_DWORD *)&v91[3];
  *(_DWORD *)(a2 + 49) = *(_DWORD *)v90;
  *(_DWORD *)(a2 + 52) = *(_DWORD *)&v90[3];
  int v59 = *(_DWORD *)v88;
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v88[3];
  *(_DWORD *)(a2 + 89) = v59;
  int v60 = *(_DWORD *)v86;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v86[3];
  *(_DWORD *)(a2 + 113) = v60;
  uint64_t v62 = v79;
  uint64_t v61 = v80;
  *(void *)a2 = v80;
  *(void *)(a2 + 8) = v62;
  *(unsigned char *)(a2 + 16) = v58;
  uint64_t v63 = KeyPath;
  *(void *)(a2 + 24) = v81;
  *(void *)(a2 + 32) = v63;
  *(unsigned char *)(a2 + 40) = 1;
  *(unsigned char *)(a2 + 48) = v75;
  *(void *)(a2 + 56) = v32;
  *(void *)(a2 + 64) = v34;
  *(void *)(a2 + 72) = v36;
  *(void *)(a2 + 80) = v38;
  *(unsigned char *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = v51;
  *(void *)(a2 + 104) = v53;
  *(unsigned char *)(a2 + 112) = v20;
  *(void *)(a2 + 120) = v55;
  *(void *)(a2 + 128) = v57;
  *(unsigned char *)(a2 + 136) = 1;
  uint64_t v64 = v61;
  sub_261A001D0(v61, v62, v58);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_261A001D0(v51, v53, v20);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_261A02A18(v51, v53, v20);
  swift_release();
  swift_bridgeObjectRelease();
  sub_261A02A18(v64, v62, v83);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_261AB01C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  sub_261A001D0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRetain();
  swift_retain();
  sub_261A001D0(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_261AB0254(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  sub_261A02A18(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  sub_261A02A18(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_261AB02E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for TrainingLoadOnboardingCore(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_261B8AA18();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for TrainingLoadOnboardingCore(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_261B8AA18();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for TrainingLoadOnboardingCore(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_261B8AA18();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *assignWithCopy for TrainingLoadOnboardingCore(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_261B8AA18();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for TrainingLoadOnboardingCore(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_261B8AA18();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for TrainingLoadOnboardingCore(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_261B8AA18();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadOnboardingCore(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261AB0708);
}

uint64_t sub_261AB0708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_261B8AA18();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TrainingLoadOnboardingCore(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261AB07CC);
}

uint64_t sub_261AB07CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_261B8AA18();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_261AB0874()
{
  uint64_t result = sub_261B8AA18();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_261AB0910()
{
  unint64_t result = qword_26A946640;
  if (!qword_26A946640)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946640);
  }
  return result;
}

id NLSessionActivityGoal.color.getter()
{
  return sub_261AB108C((uint64_t (*)(id))_HKWorkoutGoalType.color.getter, 0.458823529, 0.898039216, 0.898039216);
}

SEL *_HKWorkoutGoalType.color.getter(uint64_t a1)
{
  return sub_261AB09C0(a1, (SEL *)&selRef_nonGradientTextColor);
}

SEL *_HKWorkoutGoalType.colorForCurrentContrastMode.getter(uint64_t a1)
{
  return sub_261AB09C0(a1, (SEL *)&selRef_textDisplayColor);
}

SEL *sub_261AB09C0(uint64_t a1, SEL *a2)
{
  switch(a1)
  {
    case 0:
      id v3 = objc_msgSend(self, sel_keyColors);
      if (!v3)
      {
        __break(1u);
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
      unint64_t v4 = v3;
      a2 = (SEL *)[v3 *a2];

      if (a2) {
        return a2;
      }
      __break(1u);
LABEL_5:
      id v5 = objc_msgSend(self, sel_elapsedTimeColors);
      if (!v5) {
        goto LABEL_15;
      }
      uint64_t v6 = v5;
      a2 = (SEL *)[v5 *a2];

      if (a2) {
        return a2;
      }
      __break(1u);
LABEL_8:
      id v7 = objc_msgSend(self, sel_energyColors);
      if (!v7)
      {
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
      uint64_t v8 = v7;
      a2 = (SEL *)[v7 *a2];

      if (!a2)
      {
        __break(1u);
LABEL_11:
        id v9 = objc_msgSend(self, sel_distanceColors);
        if (v9)
        {
          uint64_t v10 = v9;
          a2 = (SEL *)[v9 *a2];

          if (a2) {
            return a2;
          }
LABEL_18:
          __break(1u);
LABEL_19:
          sub_261B8F9C8();
          __break(1u);
          JUMPOUT(0x261AB0B90);
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      return a2;
    case 1:
      goto LABEL_11;
    case 2:
      goto LABEL_5;
    case 3:
      goto LABEL_8;
    default:
      goto LABEL_19;
  }
}

id _HKWorkoutGoalType.platterColor.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      uint64_t v1 = 0;
      goto LABEL_6;
    case 1:
      uint64_t v1 = 1;
LABEL_6:
      uint64_t v2 = _HKWorkoutGoalType.color.getter(v1);
      id v3 = [(SEL *)v2 colorWithAlphaComponent:0.16];
      break;
    case 2:
      uint64_t v2 = _HKWorkoutGoalType.color.getter(2);
      id v3 = [(SEL *)v2 colorWithAlphaComponent:0.18];
      break;
    case 3:
      uint64_t v2 = _HKWorkoutGoalType.color.getter(3);
      id v3 = [(SEL *)v2 colorWithAlphaComponent:0.22];
      break;
    default:
      sub_261B8F9C8();
      __break(1u);
      JUMPOUT(0x261AB0CB4);
  }
  id v4 = v3;

  return v4;
}

id _HKWorkoutGoalType.gradientStartingColor.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      id v1 = objc_allocWithZone(MEMORY[0x263F825C8]);
      double v2 = 0.0823529412;
      double v3 = 0.109803922;
      uint64_t v4 = 0x3F80101010101010;
      goto LABEL_5;
    case 1:
      id v1 = objc_allocWithZone(MEMORY[0x263F825C8]);
      double v3 = 0.105882353;
      double v5 = 0.141176471;
      double v2 = 0.0;
      goto LABEL_7;
    case 2:
      id v1 = objc_allocWithZone(MEMORY[0x263F825C8]);
      double v2 = 0.145098039;
      double v3 = 0.133333333;
      double v5 = 0.0196078431;
      goto LABEL_7;
    case 3:
      id v1 = objc_allocWithZone(MEMORY[0x263F825C8]);
      double v2 = 0.290196078;
      double v3 = 0.0196078431;
      uint64_t v4 = 0x3FB8181818181818;
LABEL_5:
      double v5 = *(double *)&v4;
LABEL_7:
      return objc_msgSend(v1, sel_initWithDisplayP3Red_green_blue_alpha_, v2, v3, v5, 1.0);
    default:
      sub_261B8F9C8();
      __break(1u);
      JUMPOUT(0x261AB0E30);
  }
}

id _HKWorkoutGoalType.gradientEndingColor.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      id v1 = objc_allocWithZone(MEMORY[0x263F825C8]);
      double v2 = 0.145098039;
      double v3 = 0.196078431;
      uint64_t v4 = 0x3FB1111111111111;
      goto LABEL_4;
    case 1:
      id v1 = objc_allocWithZone(MEMORY[0x263F825C8]);
      double v3 = 0.17254902;
      double v5 = 0.22745098;
      double v2 = 0.0;
      break;
    case 2:
      id v1 = objc_allocWithZone(MEMORY[0x263F825C8]);
      double v2 = 0.223529412;
      double v3 = 0.2;
      uint64_t v4 = 0x3FA0101010101010;
LABEL_4:
      double v5 = *(double *)&v4;
      break;
    case 3:
      id v1 = objc_allocWithZone(MEMORY[0x263F825C8]);
      double v2 = 0.254901961;
      double v3 = 0.0196078431;
      double v5 = 0.0823529412;
      break;
    default:
      sub_261B8F9C8();
      __break(1u);
      JUMPOUT(0x261AB0FA4);
  }
  return objc_msgSend(v1, sel_initWithDisplayP3Red_green_blue_alpha_, v2, v3, v5, 1.0);
}

id NLSessionActivityGoal.platterColor.getter()
{
  if (sub_261B8F608())
  {
    id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
    id v2 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.22);

    return v2;
  }
  else
  {
    id v4 = objc_msgSend(v0, sel_goalTypeIdentifier);
    return _HKWorkoutGoalType.platterColor.getter((uint64_t)v4);
  }
}

id NLSessionActivityGoal.colorForCurrentContrastMode.getter()
{
  return sub_261AB108C((uint64_t (*)(id))_HKWorkoutGoalType.colorForCurrentContrastMode.getter, 0.623529412, 1.0, 0.992156863);
}

id sub_261AB108C(uint64_t (*a1)(id), double a2, double a3, double a4)
{
  if (sub_261B8F608())
  {
    id v8 = objc_allocWithZone(MEMORY[0x263F825C8]);
    return objc_msgSend(v8, sel_initWithDisplayP3Red_green_blue_alpha_, a2, a3, a4, 1.0);
  }
  else
  {
    id v10 = objc_msgSend(v4, sel_goalTypeIdentifier);
    return (id)a1(v10);
  }
}

uint64_t *sub_261AB1140(uint64_t *a1, uint64_t *a2, int *a3)
{
  id v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    uint64_t *v4 = *a2;
    id v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    id v8 = (char *)a1 + v7;
    id v9 = (char *)a2 + v7;
    uint64_t v10 = sub_261B8C988();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(_OWORD *)((char *)v4 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v11) = *(uint64_t *)((char *)a2 + v11);
  }
  return v4;
}

uint64_t sub_261AB1230(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_261B8C988();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

void *sub_261AB1298(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_261B8C988();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

void *sub_261AB1338(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_261B8C988();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

void *sub_261AB13EC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_261B8C988();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

void *sub_261AB148C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_261B8C988();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

uint64_t sub_261AB152C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261AB1540);
}

uint64_t sub_261AB1540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_261B8C988();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_261AB15B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261AB15C4);
}

uint64_t sub_261AB15C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_261B8C988();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for TrainingLoadDayViewModel()
{
  uint64_t result = qword_26A946650;
  if (!qword_26A946650) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261AB1684()
{
  uint64_t result = sub_261B8C988();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_261AB172C()
{
  uint64_t v1 = sub_261B8C988();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v0 > 1.0) {
    return 0;
  }
  if (*v0 < -0.95) {
    return 6;
  }
  uint64_t DayViewModel = type metadata accessor for TrainingLoadDayViewModel();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, (char *)v0 + *(int *)(DayViewModel + 20), v1);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  if (v7 == *MEMORY[0x263F42C00]) {
    return 5;
  }
  if (v7 == *MEMORY[0x263F42BF0]) {
    return 4;
  }
  if (v7 == *MEMORY[0x263F42BE0]) {
    return 3;
  }
  if (v7 == *MEMORY[0x263F42BE8]) {
    return 2;
  }
  if (v7 == *MEMORY[0x263F42BF8]) {
    return 1;
  }
  uint64_t result = sub_261B8F9C8();
  __break(1u);
  return result;
}

uint64_t sub_261AB1920()
{
  uint64_t v1 = sub_261B8C988();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = type metadata accessor for TrainingLoadDayViewModel();
  if (*(double *)((char *)v0 + *(int *)(result + 24)) != *(double *)((char *)v0 + *(int *)(result + 24) + 8))
  {
    v6.n128_u64[0] = 0.75;
    if (*v0 <= 1.0 && *v0 >= -0.95)
    {
      (*(void (**)(char *, char *, uint64_t, __n128))(v2 + 16))(v4, (char *)v0 + *(int *)(result + 20), v1, v6);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
      if (result != *MEMORY[0x263F42C00])
      {
        BOOL v9 = result == *MEMORY[0x263F42BF0]
          || result == *MEMORY[0x263F42BE0]
          || result == *MEMORY[0x263F42BE8];
        if (!v9 && result != *MEMORY[0x263F42BF8])
        {
          uint64_t result = sub_261B8F9C8();
          __break(1u);
        }
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TrainingLoadTodayViewBand(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TrainingLoadTodayViewBand(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261AB1CC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadTodayViewBand()
{
  return &type metadata for TrainingLoadTodayViewBand;
}

unint64_t sub_261AB1D04()
{
  unint64_t result = qword_26A946660;
  if (!qword_26A946660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946660);
  }
  return result;
}

uint64_t destroy for PacerView(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(a1 + 56);
  char v3 = *(unsigned char *)(a1 + 64);
  return sub_2619F7790(v2, v3);
}

uint64_t initializeWithCopy for PacerView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  char v5 = *(unsigned char *)(a2 + 64);
  swift_retain();
  swift_retain();
  sub_2619F7774(v4, v5);
  *(void *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 64) = v5;
  return a1;
}

uint64_t assignWithCopy for PacerView(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = v2[1];
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = v2[2];
  *(void *)(a1 + 24) = v2[3];
  *(void *)(a1 + 32) = v2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)v2 + 40);
  *(void *)(a1 + 48) = v2[6];
  uint64_t v4 = v2[7];
  LOBYTE(v2) = *((unsigned char *)v2 + 64);
  sub_2619F7774(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 56);
  char v6 = *(unsigned char *)(a1 + 64);
  *(void *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 64) = (_BYTE)v2;
  sub_2619F7790(v5, v6);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for PacerView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  char v4 = *(unsigned char *)(a2 + 64);
  uint64_t v5 = *(void *)(a1 + 56);
  char v6 = *(unsigned char *)(a1 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = v4;
  sub_2619F7790(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PacerView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PacerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PacerView()
{
  return &type metadata for PacerView;
}

uint64_t sub_261AB2010()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261AB202C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  int v3 = *((unsigned __int8 *)a1 + 16);
  uint64_t v4 = a1[3];
  sub_261B8D528();
  v7[0] = v2;
  v7[1] = v1;
  char v8 = v3;
  uint64_t v9 = v4;
  PacerViewConfiguration.pillConfiguration.getter((uint64_t)v10);
  int v5 = v10[24];
  swift_release();
  uint64_t result = swift_release();
  if (v5)
  {
    if (v5 == 1 && v3) {
      goto LABEL_4;
    }
  }
  else if (v3)
  {
LABEL_4:
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)v7);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_261AB2168@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  char v58 = a2;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944190);
  MEMORY[0x270FA5388](v53);
  uint64_t v51 = (uint64_t)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_261B8D748();
  MEMORY[0x270FA5388](v4);
  char v6 = (_OWORD *)((char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946680);
  MEMORY[0x270FA5388](v52);
  char v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946688);
  MEMORY[0x270FA5388](v55);
  uint64_t v57 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v54 = (uint64_t)&v45 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v56 = (uint64_t)&v45 - v13;
  uint64_t v50 = sub_261B8DAD8();
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)a1;
  swift_retain();
  swift_retain();
  uint64_t v16 = *(void *)(a1 + 56);
  char v17 = *(unsigned char *)(a1 + 64);
  sub_2619F7774(v16, v17);
  sub_2619FA43C(v16, v17, &v61);
  sub_2619F7790(v16, v17);
  if (v61 <= 8u && ((1 << v61) & 0x181) != 0)
  {
    long long v18 = *(_OWORD *)(a1 + 40);
    long long v59 = *(_OWORD *)(a1 + 24);
    long long v60 = v18;
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v61);
    swift_release();
    swift_release();
  }
  sub_261B8EC98();
  sub_261B8D4D8();
  uint64_t v49 = v61;
  char v19 = v62;
  uint64_t v48 = v63;
  char v20 = v64;
  uint64_t v47 = v65;
  uint64_t v46 = v66;
  char v21 = (char *)v6 + *(int *)(v4 + 20);
  uint64_t v22 = *MEMORY[0x263F19860];
  uint64_t v23 = sub_261B8DBB8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v21, v22, v23);
  __asm { FMOV            V0.2D, #16.0 }
  *char v6 = _Q0;
  uint64_t v29 = v51;
  sub_261A1396C((uint64_t)v6, v51);
  *(_WORD *)(v29 + *(int *)(v53 + 36)) = 256;
  sub_2619F86F0(v29, (uint64_t)&v8[*(int *)(v52 + 36)], &qword_26A944190);
  *(void *)char v8 = v50;
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  *((void *)v8 + 3) = v15;
  *((_WORD *)v8 + 16) = 256;
  *((void *)v8 + 5) = v14;
  *((_WORD *)v8 + 24) = 256;
  *((void *)v8 + 7) = v49;
  v8[64] = v19;
  *((void *)v8 + 9) = v48;
  v8[80] = v20;
  uint64_t v30 = v46;
  *((void *)v8 + 11) = v47;
  *((void *)v8 + 12) = v30;
  swift_retain();
  swift_retain();
  sub_2619F8754(v29, &qword_26A944190);
  sub_261A139D0((uint64_t)v6);
  swift_release();
  swift_release();
  uint64_t v31 = sub_261B8EC98();
  uint64_t v33 = v32;
  uint64_t v34 = swift_allocObject();
  long long v35 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v34 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v34 + 64) = v35;
  *(unsigned char *)(v34 + 80) = *(unsigned char *)(a1 + 64);
  long long v36 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v34 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v34 + 32) = v36;
  uint64_t v37 = v54;
  sub_2619F86F0((uint64_t)v8, v54, &qword_26A946680);
  uint64_t v38 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v37 + *(int *)(v55 + 36));
  *uint64_t v38 = sub_261AB2ACC;
  v38[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v34;
  void v38[2] = (uint64_t (*)@<X0>(uint64_t@<X8>))v31;
  v38[3] = v33;
  sub_261AB2AD4(a1);
  sub_2619F8754((uint64_t)v8, &qword_26A946680);
  uint64_t v39 = v56;
  sub_261AB2B28(v37, v56);
  uint64_t v40 = v57;
  sub_2619F86F0(v39, v57, &qword_26A946688);
  uint64_t v41 = v58;
  *char v58 = 0;
  *((unsigned char *)v41 + 8) = 1;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946690);
  sub_2619F86F0(v40, (uint64_t)v41 + *(int *)(v42 + 48), &qword_26A946688);
  char v43 = (char *)v41 + *(int *)(v42 + 64);
  *(void *)char v43 = 0;
  v43[8] = 1;
  sub_2619F8754(v39, &qword_26A946688);
  return sub_2619F8754(v40, &qword_26A946688);
}

uint64_t sub_261AB2690@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_261B8EC98();
  uint64_t v24 = v5;
  uint64_t v25 = v4;
  sub_261AB283C(a1, (uint64_t)&v26);
  uint64_t v6 = v26;
  double v7 = v27;
  uint64_t v8 = v28;
  char v9 = v29;
  uint64_t v10 = v30;
  uint64_t v11 = v31;
  char v12 = v32;
  uint64_t v13 = v33;
  uint64_t v14 = v34;
  uint64_t v15 = v35;
  uint64_t v16 = v36;
  char v23 = v37;
  uint64_t v17 = *(void *)(a1 + 56);
  char v18 = *(unsigned char *)(a1 + 64);
  sub_2619F7774(v17, v18);
  sub_2619FA43C(v17, v18, &v26);
  sub_2619F7790(v17, v18);
  if (v26 <= 8u && ((1 << v26) & 0x181) != 0)
  {
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v26);
    double v19 = v27;
    swift_release();
    uint64_t result = swift_release();
    double v21 = v19 * -0.25;
  }
  else
  {
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v26);
    double v22 = v27;
    swift_release();
    uint64_t result = swift_release();
    double v21 = v22 * -0.25 + -2.5;
  }
  *(void *)a2 = v25;
  *(void *)(a2 + 8) = v24;
  *(void *)(a2 + 16) = v6;
  *(double *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(unsigned char *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v10;
  *(void *)(a2 + 56) = v11;
  *(unsigned char *)(a2 + 64) = v12;
  *(void *)(a2 + 72) = v13;
  *(void *)(a2 + 80) = v14;
  *(void *)(a2 + 88) = v15;
  *(void *)(a2 + 96) = v16;
  *(unsigned char *)(a2 + 104) = v23;
  *(void *)(a2 + 112) = 0;
  *(double *)(a2 + 120) = v21;
  return result;
}

uint64_t sub_261AB283C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_261B8E888();
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t KeyPath = swift_getKeyPath();
  v16[0] = v5;
  v16[1] = v6;
  LOBYTE(v17) = v7;
  *(_DWORD *)((char *)&v17 + 1) = *(_DWORD *)(a1 + 41);
  HIDWORD(v17) = *(_DWORD *)(a1 + 44);
  uint64_t v18 = v8;
  sub_261AB202C(v16);
  uint64_t v11 = v10;
  uint64_t v12 = sub_261B8ECB8();
  PacerViewConfiguration.pillConfiguration.getter((uint64_t)v16);
  uint64_t v13 = v17;
  char v14 = v18;
  swift_release();
  swift_release();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(unsigned char *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = KeyPath;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = v11;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = v12;
  *(void *)(a2 + 80) = v13;
  *(unsigned char *)(a2 + 88) = v14;
  swift_retain();
  sub_2619F7774(KeyPath, 0);
  swift_retain();
  sub_2619F7790(KeyPath, 0);
  swift_release();
  return swift_release();
}

uint64_t sub_261AB2994@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946668);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = *(_OWORD *)(v1 + 48);
  v10[2] = *(_OWORD *)(v1 + 32);
  v10[3] = v6;
  char v11 = *(unsigned char *)(v1 + 64);
  long long v7 = *(_OWORD *)(v1 + 16);
  v10[0] = *(_OWORD *)v1;
  v10[1] = v7;
  *(void *)uint64_t v5 = sub_261B8DBE8();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946670);
  sub_261AB2168((uint64_t)v10, &v5[*(int *)(v8 + 44)]);
  sub_2619F86F0((uint64_t)v5, a1, &qword_26A946668);
  *(void *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A946678) + 36)) = 0;
  return sub_2619F8754((uint64_t)v5, &qword_26A946668);
}

uint64_t sub_261AB2A80()
{
  swift_release();
  swift_release();
  sub_2619F7790(*(void *)(v0 + 72), *(unsigned char *)(v0 + 80));
  return MEMORY[0x270FA0238](v0, 81, 7);
}

uint64_t sub_261AB2ACC@<X0>(uint64_t a1@<X8>)
{
  return sub_261AB2690(v1 + 16, a1);
}

uint64_t sub_261AB2AD4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  char v3 = *(unsigned char *)(a1 + 64);
  swift_retain();
  swift_retain();
  sub_2619F7774(v2, v3);
  return a1;
}

uint64_t sub_261AB2B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_261AB2B9C()
{
  unint64_t result = qword_26A946698;
  if (!qword_26A946698)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946678);
    sub_261AB2C18();
    sub_261A70FC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946698);
  }
  return result;
}

unint64_t sub_261AB2C18()
{
  unint64_t result = qword_26A9466A0;
  if (!qword_26A9466A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946668);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9466A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for EffortViewCurrentWorkloadButton()
{
  return &type metadata for EffortViewCurrentWorkloadButton;
}

uint64_t sub_261AB2C84()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_261AB2CA0(void (*a1)(double))
{
  uint64_t v2 = sub_261B8ABF8();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  long long v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v4);
  id v7 = objc_msgSend(self, sel_sharedApplication);
  LOBYTE(aBlock[0]) = 0;
  unsigned __int8 v13 = 4;
  TrainingLoadURLBuilder.url(route:source:)(&v13, (uint64_t)v6);
  uint64_t v8 = (void *)sub_261B8ABD8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  sub_261AC52B0(MEMORY[0x263F8EE78]);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_261AB39B8();
  char v9 = (void *)sub_261B8EFE8();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_261AB2E9C;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_261B7DCEC;
  aBlock[3] = &block_descriptor_2;
  uint64_t v10 = _Block_copy(aBlock);
  objc_msgSend(v7, sel_openURL_options_completionHandler_, v8, v9, v10);
  _Block_release(v10);
}

uint64_t sub_261AB2E9C(char a1)
{
  uint64_t v2 = sub_261B8CE88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8C618();
  long long v6 = sub_261B8CE78();
  os_log_type_t v7 = sub_261B8F498();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 67109120;
    v10[3] = a1 & 1;
    sub_261B8F6F8();
    _os_log_impl(&dword_2619F0000, v6, v7, "Launching Training Load Details Page Successful: %{BOOL}d", v8, 8u);
    MEMORY[0x263E4E970](v8, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

double sub_261AB300C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v22 = sub_261B8DAD8();
  sub_261AB329C((uint64_t)v37);
  *(_OWORD *)&v39[151] = v37[9];
  *(_OWORD *)&v39[167] = v37[10];
  *(_OWORD *)&v39[183] = v37[11];
  *(_OWORD *)&v39[87] = v37[5];
  *(_OWORD *)&v39[103] = v37[6];
  *(_OWORD *)&v39[119] = v37[7];
  *(_OWORD *)&v39[135] = v37[8];
  *(_OWORD *)&v39[23] = v37[1];
  *(_OWORD *)&v39[39] = v37[2];
  *(_OWORD *)&v39[55] = v37[3];
  *(_OWORD *)&v39[71] = v37[4];
  char v40 = 1;
  v39[199] = v38;
  *(_OWORD *)&v39[7] = v37[0];
  char v21 = sub_261B8E008();
  sub_261B8D358();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v20 = sub_261B8E0D8();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v18 = sub_261B8E898();
  sub_261B8EC98();
  sub_261B8D778();
  uint64_t v10 = swift_getKeyPath();
  long long v11 = *(_OWORD *)&v39[128];
  *(_OWORD *)(a1 + 161) = *(_OWORD *)&v39[144];
  long long v12 = *(_OWORD *)&v39[176];
  *(_OWORD *)(a1 + 177) = *(_OWORD *)&v39[160];
  *(_OWORD *)(a1 + 193) = v12;
  long long v13 = *(_OWORD *)&v39[64];
  *(_OWORD *)(a1 + 97) = *(_OWORD *)&v39[80];
  long long v14 = *(_OWORD *)&v39[112];
  *(_OWORD *)(a1 + 113) = *(_OWORD *)&v39[96];
  *(_OWORD *)(a1 + 129) = v14;
  *(_OWORD *)(a1 + 145) = v11;
  long long v15 = *(_OWORD *)v39;
  *(_OWORD *)(a1 + 33) = *(_OWORD *)&v39[16];
  double result = *(double *)&v39[32];
  long long v17 = *(_OWORD *)&v39[48];
  *(_OWORD *)(a1 + 49) = *(_OWORD *)&v39[32];
  *(_OWORD *)(a1 + 65) = v17;
  *(_OWORD *)(a1 + 81) = v13;
  *(void *)a1 = v22;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 209) = *(void *)&v39[192];
  *(_OWORD *)(a1 + 17) = v15;
  *(unsigned char *)(a1 + 224) = v21;
  *(void *)(a1 + 232) = v3;
  *(void *)(a1 + 240) = v5;
  *(void *)(a1 + 248) = v7;
  *(void *)(a1 + 256) = v9;
  *(unsigned char *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = KeyPath;
  *(void *)(a1 + 280) = v20;
  *(void *)(a1 + 288) = v18;
  *(void *)(a1 + 296) = v23;
  *(unsigned char *)(a1 + 304) = v24;
  *(void *)(a1 + 312) = v25;
  *(unsigned char *)(a1 + 320) = v26;
  *(void *)(a1 + 328) = v27;
  *(unsigned char *)(a1 + 336) = v28;
  *(void *)(a1 + 344) = v29;
  *(unsigned char *)(a1 + 352) = v30;
  *(void *)(a1 + 360) = v31;
  *(unsigned char *)(a1 + 368) = v32;
  *(void *)(a1 + 376) = v33;
  *(unsigned char *)(a1 + 384) = v34;
  *(void *)(a1 + 392) = v35;
  *(void *)(a1 + 400) = v36;
  *(void *)(a1 + 408) = v10;
  *(void *)(a1 + 416) = 2;
  *(unsigned char *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = 0x402C000000000000;
  return result;
}

uint64_t sub_261AB329C@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = (id)qword_26B416688;
  sub_261B8AA48();

  sub_261A029C4();
  uint64_t v3 = sub_261B8E3D8();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  char v10 = sub_261B8DFD8();
  sub_261B8D358();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v19 = sub_261B8E918();
  char v20 = sub_261B8DFD8();
  sub_261B8D358();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  char v29 = sub_261B8DFF8();
  sub_261B8D358();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v16;
  *(void *)(a1 + 64) = v18;
  *(unsigned char *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 88) = 1;
  *(void *)(a1 + 96) = v19;
  *(unsigned char *)(a1 + 104) = v20;
  *(void *)(a1 + 112) = v22;
  *(void *)(a1 + 120) = v24;
  *(void *)(a1 + 128) = v26;
  *(void *)(a1 + 136) = v28;
  *(unsigned char *)(a1 + 144) = 0;
  *(unsigned char *)(a1 + 152) = v29;
  *(void *)(a1 + 160) = v30;
  *(void *)(a1 + 168) = v31;
  *(void *)(a1 + 176) = v32;
  *(void *)(a1 + 184) = v33;
  *(unsigned char *)(a1 + 192) = 0;
  sub_261A001D0(v3, v5, v9);
  swift_bridgeObjectRetain();
  sub_261A02A18(v3, v5, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_261AB34EC()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9466A8);
  sub_261AB35DC();
  return sub_261B8EA58();
}

uint64_t sub_261AB359C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_261AB35D4()
{
  sub_261AB2CA0(*(void (**)(double))(v0 + 16));
}

unint64_t sub_261AB35DC()
{
  unint64_t result = qword_26A9466B0;
  if (!qword_26A9466B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9466A8);
    sub_261AB3658();
    sub_261AB3954();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9466B0);
  }
  return result;
}

unint64_t sub_261AB3658()
{
  unint64_t result = qword_26A9466B8;
  if (!qword_26A9466B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9466C0);
    sub_261AB36F8();
    sub_2619F8AB8(&qword_26A9430E8, &qword_26A9430F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9466B8);
  }
  return result;
}

unint64_t sub_261AB36F8()
{
  unint64_t result = qword_26A9466C8;
  if (!qword_26A9466C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9466D0);
    sub_261AB3774();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9466C8);
  }
  return result;
}

unint64_t sub_261AB3774()
{
  unint64_t result = qword_26A9466D8;
  if (!qword_26A9466D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9466E0);
    sub_261AB3814();
    sub_2619F8AB8((unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9466D8);
  }
  return result;
}

unint64_t sub_261AB3814()
{
  unint64_t result = qword_26A9466E8;
  if (!qword_26A9466E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9466F0);
    sub_261AB38B4();
    sub_2619F8AB8((unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9466E8);
  }
  return result;
}

unint64_t sub_261AB38B4()
{
  unint64_t result = qword_26A9466F8;
  if (!qword_26A9466F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946700);
    sub_2619F8AB8(&qword_26A946708, &qword_26A946710);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9466F8);
  }
  return result;
}

unint64_t sub_261AB3954()
{
  unint64_t result = qword_26A946718;
  if (!qword_26A946718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946718);
  }
  return result;
}

unint64_t sub_261AB39B8()
{
  unint64_t result = qword_26A943060;
  if (!qword_26A943060)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943060);
  }
  return result;
}

uint64_t sub_261AB3A10()
{
  return sub_2619F8AB8(&qword_26A946720, &qword_26A946728);
}

Swift::Void __swiftcall UIViewController.setNavigationItemForegroundColor(_:)(UIColor a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v2, sel_navigationController);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_navigationBar);

    id v7 = objc_msgSend(v6, sel_standardAppearance);
    id v8 = objc_msgSend(v7, sel_copy);

    id v9 = objc_msgSend(v8, sel_buttonAppearance);
    id v10 = objc_msgSend(v9, sel_normal);
    id v11 = objc_msgSend(v10, sel_titleTextAttributes);

    type metadata accessor for Key(0);
    sub_261AB3C9C();
    sub_261B8EFF8();

    uint64_t v12 = (void *)*MEMORY[0x263F81500];
    unint64_t v21 = sub_261A66DDC();
    *(UIColor *)&long long v20 = a1;
    sub_261A0CCBC(&v20, v19);
    id v13 = v12;
    uint64_t v14 = a1.super.isa;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_261A0BC64(v19, v13, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v9, sel_normal);
    uint64_t v17 = (void *)sub_261B8EFE8();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setTitleTextAttributes_, v17);

    objc_msgSend(v8, sel_setButtonAppearance_, v9);
    id v18 = objc_msgSend(v2, sel_navigationItem);
    objc_msgSend(v18, sel_setStandardAppearance_, v8);
  }
}

unint64_t sub_261AB3C9C()
{
  unint64_t result = qword_26A943070;
  if (!qword_26A943070)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943070);
  }
  return result;
}

unint64_t sub_261AB3CF4(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v10 = *(void *)(View - 8);
  MEMORY[0x270FA5388](View);
  uint64_t v29 = (uint64_t)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v27 = (uint64_t)&v23 - v13;
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v15 = *(void *)(sub_261B8CAD8() - 8);
  uint64_t v16 = a3 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v24 = v10;
  uint64_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v28 = *(void *)(v15 + 72);
  uint64_t v23 = a3;
  swift_bridgeObjectRetain();
  unint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v25 = View;
  uint64_t v26 = a1;
  do
  {
    a1(v16);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    if ((*v17)(v8, 1, View) == 1)
    {
      sub_2619F8754((uint64_t)v8, &qword_26B416C30);
    }
    else
    {
      uint64_t v19 = v27;
      sub_261A3D138((uint64_t)v8, v27);
      sub_261A3D138(v19, v29);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_261A0B0A0(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v21 = *(void *)(v18 + 16);
      unint64_t v20 = *(void *)(v18 + 24);
      if (v21 >= v20 >> 1) {
        unint64_t v18 = sub_261A0B0A0(v20 > 1, v21 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v21 + 1;
      sub_261A3D138(v29, v18+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v21);
      uint64_t View = v25;
      a1 = v26;
    }
    v16 += v28;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_261AB3FEC(void (*a1)(uint64_t *__return_ptr, long long *), uint64_t a2, uint64_t a3)
{
  void (*v49)(uint64_t *__return_ptr, long long *);

  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v48 = MEMORY[0x263F8EE78];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    long long v8 = *(_OWORD *)(a3 + 192);
    long long v9 = *(_OWORD *)(a3 + 208);
    long long v10 = *(_OWORD *)(a3 + 160);
    long long v45 = *(_OWORD *)(a3 + 176);
    long long v46 = v8;
    v47[0] = v9;
    *(_OWORD *)((char *)v47 + 9) = *(_OWORD *)(a3 + 217);
    long long v11 = *(_OWORD *)(a3 + 144);
    long long v42 = *(_OWORD *)(a3 + 128);
    long long v43 = v11;
    long long v44 = v10;
    long long v12 = *(_OWORD *)(a3 + 80);
    long long v38 = *(_OWORD *)(a3 + 64);
    long long v39 = v12;
    long long v13 = *(_OWORD *)(a3 + 112);
    long long v40 = *(_OWORD *)(a3 + 96);
    long long v41 = v13;
    long long v14 = *(_OWORD *)(a3 + 48);
    long long v36 = *(_OWORD *)(a3 + 32);
    long long v37 = v14;
    long long v34 = v46;
    v35[0] = v47[0];
    *(_OWORD *)((char *)v35 + 9) = *(_OWORD *)((char *)v47 + 9);
    long long v30 = v42;
    long long v31 = v43;
    long long v32 = v10;
    long long v33 = v45;
    long long v26 = v38;
    long long v27 = v12;
    long long v28 = v40;
    long long v29 = v41;
    long long v24 = v36;
    long long v25 = v14;
    sub_261A0CE04((uint64_t)&v36);
    a1(&v23, &v24);
    uint64_t v15 = sub_261A0CE8C((uint64_t)&v36);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = 240;
      uint64_t v49 = a1;
      while (1)
      {
        if (v23)
        {
          MEMORY[0x263E4D180](v15);
          if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_261B8F2F8();
          }
          sub_261B8F318();
          sub_261B8F2E8();
        }
        if (!--v6) {
          break;
        }
        long long v17 = *(_OWORD *)(a3 + v16 + 176);
        long long v46 = *(_OWORD *)(a3 + v16 + 160);
        v47[0] = v17;
        *(_OWORD *)((char *)v47 + 9) = *(_OWORD *)(a3 + v16 + 185);
        long long v18 = *(_OWORD *)(a3 + v16 + 112);
        long long v42 = *(_OWORD *)(a3 + v16 + 96);
        long long v43 = v18;
        long long v19 = *(_OWORD *)(a3 + v16 + 144);
        long long v44 = *(_OWORD *)(a3 + v16 + 128);
        long long v45 = v19;
        long long v20 = *(_OWORD *)(a3 + v16 + 48);
        long long v38 = *(_OWORD *)(a3 + v16 + 32);
        long long v39 = v20;
        long long v21 = *(_OWORD *)(a3 + v16 + 80);
        long long v40 = *(_OWORD *)(a3 + v16 + 64);
        long long v41 = v21;
        long long v22 = *(_OWORD *)(a3 + v16 + 16);
        long long v36 = *(_OWORD *)(a3 + v16);
        long long v37 = v22;
        long long v34 = v46;
        v35[0] = v47[0];
        *(_OWORD *)((char *)v35 + 9) = *(_OWORD *)((char *)v47 + 9);
        long long v30 = v42;
        long long v31 = v43;
        long long v32 = v44;
        long long v33 = v45;
        long long v26 = v38;
        long long v27 = v20;
        long long v28 = v40;
        long long v29 = v41;
        long long v24 = v36;
        long long v25 = v22;
        sub_261A0CE04((uint64_t)&v36);
        v49(&v23, &v24);
        uint64_t v15 = sub_261A0CE8C((uint64_t)&v36);
        v16 += 208;
      }
      swift_bridgeObjectRelease();
      return v48;
    }
  }
  return result;
}

uint64_t TrainingLoadViewModel.ChartPoint.init(value:date:color:baseline:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  int v24 = a4;
  uint64_t v23 = a3;
  uint64_t v10 = sub_261B8EEC8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_261B8ADD8();
  uint64_t v15 = *(void *)(v14 - 8);
  double v16 = MEMORY[0x270FA5388](v14);
  long long v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))(v18, a1, v14, v16);
  sub_261B8EE68();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v14);
  uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v20 = a5 + View[6];
  uint64_t v21 = a5 + View[8];
  *(double *)uint64_t v20 = a6;
  *(unsigned char *)(v20 + 8) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a5, v18, v14);
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a5 + View[5], v13, v10);
  *(void *)(a5 + View[7]) = a2;
  *(void *)uint64_t v21 = v23;
  *(unsigned char *)(v21 + 8) = v24 & 1;
  return result;
}

uint64_t TrainingLoadViewModel.ChartPoint.date.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_261AB471C(MEMORY[0x263F07490], a1);
}

uint64_t TrainingLoadViewModel.ChartPoint.date.setter(uint64_t a1)
{
  uint64_t v3 = sub_261B8ADD8();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*TrainingLoadViewModel.ChartPoint.date.modify())()
{
  return nullsub_1;
}

uint64_t TrainingLoadViewModel.ChartPoint.baseline.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for TrainingLoadViewModel.ChartPoint(0) + 32));
}

uint64_t TrainingLoadViewModel.ChartPoint.baseline.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v6 = v2 + *(int *)(result + 32);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*TrainingLoadViewModel.ChartPoint.baseline.modify())(void)
{
  return nullsub_1;
}

uint64_t TrainingLoadViewModel.ChartPoint.id.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_261AB471C(MEMORY[0x263F07490], a1);
}

uint64_t TrainingLoadViewModel.ChartPoint.init(value:date:dayIndex:color:baseline:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v15 = a6 + View[6];
  uint64_t v16 = a6 + View[8];
  *(double *)uint64_t v15 = a7;
  *(unsigned char *)(v15 + 8) = 0;
  uint64_t v17 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a6, a1, v17);
  uint64_t v18 = a6 + View[5];
  uint64_t v19 = sub_261B8EEC8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a2, v19);
  *(void *)(a6 + View[7]) = a3;
  *(void *)uint64_t v16 = a4;
  *(unsigned char *)(v16 + 8) = a5 & 1;
  return result;
}

uint64_t type metadata accessor for TrainingLoadViewModel.ChartPoint(uint64_t a1)
{
  return sub_261A84418(a1, (uint64_t *)&unk_26B416DF8);
}

uint64_t TrainingLoadViewModel.dataType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_261AB471C(MEMORY[0x263F42C68], a1);
}

uint64_t sub_261AB471C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a2, v2, v4);
}

uint64_t TrainingLoadViewModel.dayRange.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 20);
  uint64_t v4 = sub_261B8C9E8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t TrainingLoadViewModel.chronologicalTrainingLoadDaySummaries.getter()
{
  type metadata accessor for TrainingLoadViewModel(0);
  return swift_bridgeObjectRetain();
}

uint64_t TrainingLoadViewModel.trainingLoadBandForToday.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  return sub_2619F86F0(v1 + *(int *)(ViewModel + 28), a1, &qword_26B416BD8);
}

uint64_t TrainingLoadViewModel.trainingLoadDaySummaryForToday.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  return sub_2619F86F0(v1 + *(int *)(ViewModel + 32), a1, (uint64_t *)&unk_26B416ED0);
}

uint64_t TrainingLoadViewModel.fractionalBaselineDifferenceFromChronicForToday.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 36));
}

uint64_t TrainingLoadViewModel.formattedFractionalDifferenceFromChronicBaselineForToday.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrainingLoadViewModel.chartPoints.getter()
{
  type metadata accessor for TrainingLoadViewModel(0);
  return swift_bridgeObjectRetain();
}

uint64_t TrainingLoadViewModel.emphasizedChartPoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  return sub_2619F86F0(v1 + *(int *)(ViewModel + 48), a1, &qword_26B416C30);
}

uint64_t TrainingLoadViewModel.init(dataType:dayRange:chronologicalTrainingLoadDaySummaries:)@<X0>(NSObject *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v180 = a3;
  uint64_t v182 = sub_261B8C988();
  uint64_t v179 = *(void *)(v182 - 8);
  MEMORY[0x270FA5388](v182);
  v160 = (char *)v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
  MEMORY[0x270FA5388](v8 - 8);
  v168 = (char *)v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v173 = *(void *)(View - 8);
  MEMORY[0x270FA5388](View);
  uint64_t v195 = (uint64_t)v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v192 = (uint64_t)v148 - v12;
  uint64_t v159 = sub_261B8ABA8();
  uint64_t v158 = *(void *)(v159 - 8);
  MEMORY[0x270FA5388](v159);
  v157 = (char *)v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_261B8AB58();
  uint64_t v153 = *(void *)(v154 - 8);
  MEMORY[0x270FA5388](v154);
  v151 = (char *)v148 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_261B8AEF8();
  MEMORY[0x270FA5388](v15 - 8);
  v148[1] = (char *)v148 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BB0);
  uint64_t v155 = *(void *)(v156 - 8);
  MEMORY[0x270FA5388](v156);
  v149 = (char *)v148 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  v150 = (char *)v148 - v19;
  MEMORY[0x270FA5388](v20);
  v152 = (char *)v148 - v21;
  uint64_t v163 = sub_261B8CB38();
  uint64_t v162 = *(void *)(v163 - 8);
  MEMORY[0x270FA5388](v163);
  v161 = (char *)v148 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = sub_261B8EEC8();
  uint64_t v23 = *(void *)(v197 - 8);
  MEMORY[0x270FA5388](v197);
  uint64_t v191 = (uint64_t)v148 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  long long v27 = (char *)v148 - v26;
  uint64_t v194 = sub_261B8CAD8();
  uint64_t v28 = *(void *)(v194 - 8);
  MEMORY[0x270FA5388](v194);
  v164 = (char *)v148 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  v196 = (void (*)(char *, uint64_t))((char *)v148 - v31);
  MEMORY[0x270FA5388](v32);
  long long v34 = (char *)v148 - v33;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
  MEMORY[0x270FA5388](v35 - 8);
  v169 = (char *)v148 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  v177 = (char *)v148 - v38;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B416ED0);
  MEMORY[0x270FA5388](v39 - 8);
  uint64_t v165 = (uint64_t)v148 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  uint64_t v172 = (uint64_t)v148 - v42;
  uint64_t v43 = sub_261B8CA08();
  uint64_t v170 = *(void *)(v43 - 8);
  long long v44 = *(void (**)(uint64_t, NSObject *))(v170 + 16);
  long long v45 = a1;
  uint64_t v171 = v43;
  v44(a4, a1);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  uint64_t v47 = a4 + *(int *)(ViewModel + 20);
  uint64_t v48 = sub_261B8C9E8();
  uint64_t v166 = *(void *)(v48 - 8);
  uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v166 + 16);
  uint64_t v50 = a2;
  uint64_t v167 = v48;
  v49(v47, a2);
  v181 = (int *)ViewModel;
  uint64_t v51 = v180;
  *(void *)(a4 + *(int *)(ViewModel + 24)) = v180;
  uint64_t v52 = *(void *)(v51 + 16);
  uint64_t v178 = v28;
  uint64_t v193 = v23;
  uint64_t v176 = a4;
  uint64_t v183 = v50;
  v175 = v45;
  if (!v52)
  {
    uint64_t v75 = swift_bridgeObjectRetain();
    uint64_t v57 = (void *)MEMORY[0x263F8EE80];
    uint64_t v74 = v75;
LABEL_16:
    uint64_t v76 = v181;
    *(void *)(a4 + v181[16]) = v57;
    swift_bridgeObjectRetain();
    uint64_t v77 = v172;
    sub_261AB5C70(v45, v50, v74, v172);
    uint64_t v78 = (void (**)(char *, uint64_t))(a4 + v76[8]);
    sub_2619FB7EC(v77, (uint64_t)v78, (uint64_t *)&unk_26B416ED0);
    uint64_t v79 = (void (**)(char *, uint64_t))(v178 + 48);
    v189 = *(uint64_t (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v178 + 48);
    int v80 = v189(v78, 1, v194);
    uint64_t v81 = (uint64_t)v177;
    if (v80)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v179 + 56))(v177, 1, 1, v182);
    }
    else
    {
      sub_261B8CAC8();
      uint64_t v81 = (uint64_t)v177;
    }
    sub_2619FB7EC(v81, a4 + v76[7], &qword_26B416BD8);
    v187 = v79;
    uint64_t v82 = v189(v78, 1, v194);
    v188 = v78;
    if (v82)
    {
      char v83 = 0;
      uint64_t v84 = 0;
      uint64_t v85 = a4 + v76[9];
      *(void *)uint64_t v85 = 0;
      *(unsigned char *)(v85 + 8) = 1;
    }
    else
    {
      long long v86 = v161;
      sub_261B8CA88();
      uint64_t v87 = sub_261B8CAF8();
      char v89 = v88;
      char v90 = v88 & 1;
      uint64_t v82 = (*(uint64_t (**)(char *, uint64_t))(v162 + 8))(v86, v163);
      uint64_t v91 = a4 + v76[9];
      *(void *)uint64_t v91 = v87;
      *(unsigned char *)(v91 + 8) = v90;
      if (v89)
      {
        char v83 = 0;
        uint64_t v84 = 0;
      }
      else
      {
        uint64_t v198 = v87;
        sub_261B8AE68();
        unint64_t v190 = sub_261A63D24();
        char v92 = v149;
        sub_261B8AB08();
        uint64_t v93 = v151;
        sub_261B8AB48();
        uint64_t v94 = v150;
        uint64_t v95 = v156;
        MEMORY[0x263E489C0](v93, v156);
        (*(void (**)(char *, uint64_t))(v153 + 8))(v93, v154);
        v196 = *(void (**)(char *, uint64_t))(v155 + 8);
        v196(v92, v95);
        uint64_t v96 = v157;
        sub_261B8AB98();
        uint64_t v97 = v152;
        MEMORY[0x263E489E0](v96, v95);
        (*(void (**)(char *, uint64_t))(v158 + 8))(v96, v159);
        char v98 = v94;
        uint64_t v50 = v183;
        v196(v98, v95);
        sub_2619F8AB8(&qword_26A946730, &qword_26B416BB0);
        uint64_t v76 = v181;
        sub_261B8EFD8();
        uint64_t v82 = ((uint64_t (*)(char *, uint64_t))v196)(v97, v95);
        char v83 = v199;
        uint64_t v84 = v200;
      }
      uint64_t v23 = v193;
    }
    unint64_t v99 = (void *)(a4 + v76[10]);
    *unint64_t v99 = v83;
    v99[1] = v84;
    MEMORY[0x270FA5388](v82);
    v148[-2] = v50;
    unint64_t v100 = sub_261AB3CF4((void (*)(void))sub_261ABC75C, (uint64_t)&v148[-4], v74);
    swift_bridgeObjectRelease();
    *(void *)(a4 + v76[11]) = v100;
    uint64_t v101 = *(void *)(v100 + 16);
    if (!v101)
    {
      uint64_t v106 = (void *)MEMORY[0x263F8EE80];
      uint64_t v126 = v182;
LABEL_41:
      uint64_t v127 = v179;
      *(void *)(a4 + v76[15]) = v106;
      uint64_t v128 = v165;
      sub_2619F86F0((uint64_t)v188, v165, (uint64_t *)&unk_26B416ED0);
      uint64_t v129 = v194;
      int v130 = v189((void (**)(char *, uint64_t))v128, 1, v194);
      uint64_t v131 = (uint64_t)v168;
      if (v130 == 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v173 + 56))(v168, 1, 1, View);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v132 = v45;
        uint64_t v133 = v178;
        uint64_t v134 = v128;
        uint64_t v135 = a4;
        uint64_t v136 = v127;
        unint64_t v137 = v164;
        (*(void (**)(char *, uint64_t, uint64_t))(v178 + 32))(v164, v134, v129);
        swift_bridgeObjectRetain();
        sub_261AB71E4(v183, v131);
        v138 = v137;
        uint64_t v127 = v136;
        a4 = v135;
        (*(void (**)(char *, uint64_t))(v133 + 8))(v138, v129);
        long long v45 = v132;
        uint64_t v126 = v182;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2619FB7EC(v131, a4 + v76[12], &qword_26B416C30);
      if (v189(v188, 1, v129))
      {
        uint64_t v139 = (uint64_t)v169;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v127 + 56))(v169, 1, 1, v126);
      }
      else
      {
        long long v140 = v169;
        sub_261B8CAC8();
        uint64_t v139 = (uint64_t)v140;
      }
      uint64_t v141 = v171;
      uint64_t v142 = v170;
      uint64_t v143 = v183;
      uint64_t v144 = a4 + v76[13];
      sub_2619FB7EC(v139, v144, &qword_26B416BD8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v127 + 48))(v144, 1, v126))
      {
        uint64_t v145 = sub_261B8E898();
      }
      else
      {
        v146 = v160;
        (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v160, v144, v126);
        uint64_t v145 = TrainingLoadBand.color.getter();
        (*(void (**)(char *, uint64_t))(v127 + 8))(v146, v126);
      }
      (*(void (**)(NSObject *, uint64_t))(v142 + 8))(v45, v141);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v166 + 8))(v143, v167);
      *(void *)(a4 + v76[14]) = v145;
      return result;
    }
    v196 = (void (*)(char *, uint64_t))(v192 + *(int *)(View + 20));
    uint64_t v102 = v100 + ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80));
    unint64_t v190 = *(void *)(v173 + 72);
    unint64_t v103 = v100;
    uint64_t v104 = (void (**)(uint64_t, char *, uint64_t))(v23 + 16);
    uint64_t v105 = (void (**)(uint64_t, uint64_t))(v23 + 8);
    unint64_t v186 = v103;
    swift_bridgeObjectRetain();
    uint64_t v106 = (void *)MEMORY[0x263F8EE80];
    uint64_t v107 = v197;
    uint64_t v108 = v191;
    while (1)
    {
      uint64_t v111 = v192;
      sub_261ABC8A0(v102, v192, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      uint64_t v112 = *v104;
      (*v104)(v108, (char *)v196, v107);
      sub_261A3D138(v111, v195);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v199 = v106;
      unint64_t v115 = sub_261ACB0DC(v108);
      uint64_t v116 = v106[2];
      BOOL v117 = (v114 & 1) == 0;
      uint64_t v118 = v116 + v117;
      if (__OFADD__(v116, v117)) {
        goto LABEL_52;
      }
      char v119 = v114;
      if (v106[3] >= v118)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_261ACF988();
        }
        uint64_t v120 = v191;
        uint64_t v106 = v199;
        if ((v119 & 1) == 0) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_261ACD04C(v118, isUniquelyReferenced_nonNull_native);
        uint64_t v120 = v191;
        unint64_t v121 = sub_261ACB0DC(v191);
        if ((v119 & 1) != (v122 & 1)) {
          goto LABEL_55;
        }
        unint64_t v115 = v121;
        uint64_t v106 = v199;
        if ((v119 & 1) == 0)
        {
LABEL_37:
          v106[(v115 >> 6) + 8] |= 1 << v115;
          uint64_t v107 = v197;
          v112(v106[6] + *(void *)(v193 + 72) * v115, (char *)v120, v197);
          uint64_t v123 = v106[7] + v115 * v190;
          unint64_t v110 = v190;
          sub_261A3D138(v195, v123);
          uint64_t v124 = v106[2];
          BOOL v72 = __OFADD__(v124, 1);
          uint64_t v125 = v124 + 1;
          if (v72) {
            goto LABEL_54;
          }
          v106[2] = v125;
          uint64_t v106 = v199;
          goto LABEL_28;
        }
      }
      uint64_t v109 = v106[7] + v115 * v190;
      unint64_t v110 = v190;
      sub_261ABC788(v195, v109);
      uint64_t v107 = v197;
LABEL_28:
      swift_bridgeObjectRelease();
      (*v105)(v120, v107);
      v102 += v110;
      --v101;
      uint64_t v108 = v120;
      if (!v101)
      {
        swift_bridgeObjectRelease();
        a4 = v176;
        long long v45 = v175;
        uint64_t v76 = v181;
        uint64_t v126 = v182;
        goto LABEL_41;
      }
    }
  }
  unint64_t v53 = *(void *)(v28 + 16);
  v189 = (uint64_t (*)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v28 + 16);
  unint64_t v190 = v53;
  uint64_t v54 = v23;
  unint64_t v55 = v51 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  uint64_t v56 = *(void *)(v28 + 72);
  v185 = (void (**)(unint64_t, char *, uint64_t))(v28 + 32);
  unint64_t v186 = v54 + 16;
  v184 = (void (**)(unint64_t, char *, uint64_t))(v28 + 40);
  v187 = (void (**)(char *, uint64_t))(v28 + 8);
  v188 = (void (**)(char *, uint64_t))(v54 + 8);
  swift_bridgeObjectRetain_n();
  uint64_t v57 = (void *)MEMORY[0x263F8EE80];
  uint64_t v58 = v194;
  while (1)
  {
    long long v60 = (void (*)(char *, char *, uint64_t))v190;
    ((void (*)(char *, unint64_t, uint64_t))v190)(v34, v55, v58);
    sub_261B8CAA8();
    v60((char *)v196, v34, v58);
    int v61 = swift_isUniquelyReferenced_nonNull_native();
    v199 = v57;
    unint64_t v63 = sub_261ACB0DC((uint64_t)v27);
    uint64_t v64 = v57[2];
    BOOL v65 = (v62 & 1) == 0;
    uint64_t v66 = v64 + v65;
    if (__OFADD__(v64, v65)) {
      break;
    }
    char v67 = v62;
    if (v57[3] >= v66)
    {
      if ((v61 & 1) == 0) {
        sub_261ACFCA0();
      }
    }
    else
    {
      sub_261ACD528(v66, v61);
      unint64_t v68 = sub_261ACB0DC((uint64_t)v27);
      if ((v67 & 1) != (v69 & 1)) {
        goto LABEL_55;
      }
      unint64_t v63 = v68;
    }
    uint64_t v58 = v194;
    uint64_t v70 = v199;
    if (v67)
    {
      (*v184)(v199[7] + v63 * v56, (char *)v196, v194);
      uint64_t v59 = v197;
    }
    else
    {
      v199[(v63 >> 6) + 8] |= 1 << v63;
      uint64_t v59 = v197;
      (*(void (**)(unint64_t, char *, uint64_t))(v193 + 16))(v70[6] + *(void *)(v193 + 72) * v63, v27, v197);
      (*v185)(v70[7] + v63 * v56, (char *)v196, v58);
      uint64_t v71 = v70[2];
      BOOL v72 = __OFADD__(v71, 1);
      uint64_t v73 = v71 + 1;
      if (v72) {
        goto LABEL_53;
      }
      v70[2] = v73;
    }
    uint64_t v57 = v199;
    swift_bridgeObjectRelease();
    (*v188)(v27, v59);
    (*v187)(v34, v58);
    v55 += v56;
    if (!--v52)
    {
      uint64_t v74 = v180;
      swift_bridgeObjectRelease();
      a4 = v176;
      uint64_t v50 = v183;
      long long v45 = v175;
      uint64_t v23 = v193;
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  uint64_t result = sub_261B8FBF8();
  __break(1u);
  return result;
}

uint64_t sub_261AB5C70@<X0>(NSObject *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v183 = a3;
  uint64_t v181 = a2;
  uint64_t v177 = a4;
  os_log_t v178 = a1;
  uint64_t v182 = sub_261B8CAD8();
  uint64_t v179 = *(void *)(v182 - 8);
  MEMORY[0x270FA5388](v182);
  v169 = (char *)&v157 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
  MEMORY[0x270FA5388](v171);
  uint64_t v170 = (char *)&v157 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8EEC8();
  uint64_t v173 = *(void *)(v6 - 8);
  uint64_t v174 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v166 = (char *)&v157 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v172 = (char *)&v157 - v9;
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C20);
  MEMORY[0x270FA5388](v163);
  os_log_t v162 = (os_log_t)((char *)&v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  v160 = (char *)&v157 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v159 = (char *)&v157 - v14;
  v164 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B416ED0);
  MEMORY[0x270FA5388](v164);
  v161 = (char *)&v157 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v165 = (char *)&v157 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v158 = (char *)&v157 - v19;
  uint64_t v20 = sub_261B8C9E8();
  uint64_t v180 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  v168 = (char *)&v157 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v157 - v23;
  MEMORY[0x270FA5388](v25);
  long long v27 = (char *)&v157 - v26;
  uint64_t v28 = sub_261B8CE88();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v175 = v28;
  uint64_t v176 = v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v157 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  long long v34 = (char *)&v157 - v33;
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = ((char *)&v157 - v36);
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = ((char *)&v157 - v39);
  uint64_t v41 = sub_261B8CA08();
  uint64_t v42 = *(void *)(v41 - 8);
  double v43 = MEMORY[0x270FA5388](v41);
  long long v45 = (char *)&v157 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, os_log_t, uint64_t, double))(v42 + 16))(v45, v178, v41, v43);
  int v46 = (*(uint64_t (**)(char *, uint64_t))(v42 + 88))(v45, v41);
  if (v46 != *MEMORY[0x263F42C50])
  {
    int v61 = v31;
    uint64_t v62 = (uint64_t)v165;
    v161 = v27;
    v168 = v24;
    os_log_t v162 = v40;
    os_log_t v178 = v37;
    uint64_t v167 = v20;
    uint64_t v49 = v183;
    if (v46 == *MEMORY[0x263F42C58])
    {
      os_log_t v63 = v178;
      sub_261B8C648();
      uint64_t v64 = v180;
      uint64_t v66 = v167;
      BOOL v65 = v168;
      (*(void (**)(char *, uint64_t, uint64_t))(v180 + 16))(v168, v181, v167);
      swift_bridgeObjectRetain_n();
      char v67 = sub_261B8CE78();
      int v68 = sub_261B8F4A8();
      if (os_log_type_enabled(v67, (os_log_type_t)v68))
      {
        uint64_t v69 = swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        v185[0] = v70;
        *(_DWORD *)uint64_t v69 = 136315650;
        uint64_t v71 = *(void *)(v49 + 16);
        os_log_t v162 = v67;
        LODWORD(v161) = v68;
        uint64_t v159 = (char *)v70;
        if (v71)
        {
          uint64_t v72 = v179;
          uint64_t v73 = v182;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v179 + 16))(v62, v49+ ((*(unsigned __int8 *)(v179 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80))+ *(void *)(v179 + 72) * (v71 - 1), v182);
          uint64_t v74 = 0;
        }
        else
        {
          uint64_t v74 = 1;
          uint64_t v73 = v182;
          uint64_t v72 = v179;
        }
        uint64_t v114 = (uint64_t)v160;
        uint64_t v115 = 1;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v62, v74, 1, v73);
        uint64_t v116 = sub_261B8F6C8();
        unint64_t v118 = v117;
        sub_2619F8754(v62, (uint64_t *)&unk_26B416ED0);
        uint64_t v184 = sub_261AC9C40(v116, v118, v185);
        sub_261B8F6F8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v69 + 12) = 2080;
        if (v71)
        {
          sub_261B8CAA8();
          uint64_t v115 = 0;
        }
        uint64_t v110 = v72;
        uint64_t v120 = v173;
        uint64_t v119 = v174;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v173 + 56))(v114, v115, 1, v174);
        uint64_t v121 = sub_261B8F6C8();
        unint64_t v123 = v122;
        sub_2619F8754(v114, &qword_26B416C20);
        uint64_t v184 = sub_261AC9C40(v121, v123, v185);
        sub_261B8F6F8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v69 + 22) = 2080;
        uint64_t v124 = (uint64_t)v170;
        uint64_t v125 = v168;
        sub_261B8C9A8();
        uint64_t v126 = v172;
        (*(void (**)(char *, uint64_t, uint64_t))(v120 + 16))(v172, v124 + *(int *)(v171 + 36), v119);
        sub_2619F8754(v124, &qword_26B416CA8);
        sub_261ABC9B4(&qword_26A946818, MEMORY[0x263F090E8]);
        uint64_t v127 = sub_261B8FB78();
        unint64_t v129 = v128;
        (*(void (**)(char *, uint64_t))(v120 + 8))(v126, v119);
        uint64_t v184 = sub_261AC9C40(v127, v129, v185);
        sub_261B8F6F8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v180 + 8))(v125, v167);
        os_log_t v130 = v162;
        _os_log_impl(&dword_2619F0000, v162, (os_log_type_t)v161, "All Day day summary today %s, morningIndex %s, upperbound %s ", (uint8_t *)v69, 0x20u);
        uint64_t v131 = v159;
        swift_arrayDestroy();
        MEMORY[0x263E4E970](v131, -1, -1);
        MEMORY[0x263E4E970](v69, -1, -1);

        (*(void (**)(os_log_t, uint64_t))(v176 + 8))(v178, v175);
LABEL_34:
        uint64_t v109 = v182;
        goto LABEL_35;
      }
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
    }
    else
    {
      if (v46 != *MEMORY[0x263F42C60])
      {
        sub_261B8C648();
        uint64_t v87 = sub_261B8CE78();
        os_log_type_t v88 = sub_261B8F4B8();
        if (os_log_type_enabled(v87, v88))
        {
          char v89 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)char v89 = 0;
          _os_log_impl(&dword_2619F0000, v87, v88, "Unknown training load data type.", v89, 2u);
          MEMORY[0x263E4E970](v89, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v176 + 8))(v61, v175);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v179 + 56))(v177, 1, 1, v182);
        return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v45, v41);
      }
      os_log_t v63 = v162;
      sub_261B8C648();
      uint64_t v75 = v180;
      uint64_t v76 = v161;
      uint64_t v77 = v167;
      (*(void (**)(char *, uint64_t, uint64_t))(v180 + 16))(v161, v181, v167);
      swift_bridgeObjectRetain_n();
      uint64_t v78 = sub_261B8CE78();
      int v79 = sub_261B8F4A8();
      if (os_log_type_enabled(v78, (os_log_type_t)v79))
      {
        LODWORD(v168) = v79;
        uint64_t v80 = swift_slowAlloc();
        uint64_t v165 = (char *)swift_slowAlloc();
        v185[0] = (uint64_t)v165;
        *(_DWORD *)uint64_t v80 = 136315650;
        uint64_t v81 = *(void *)(v49 + 16);
        uint64_t v82 = v179;
        os_log_t v178 = v78;
        if (v81)
        {
          char v83 = v158;
          uint64_t v84 = v182;
          (*(void (**)(char *, unint64_t, uint64_t))(v179 + 16))(v158, v49+ ((*(unsigned __int8 *)(v179 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80))+ *(void *)(v179 + 72) * (v81 - 1), v182);
          uint64_t v85 = 0;
          uint64_t v86 = (uint64_t)v159;
        }
        else
        {
          uint64_t v85 = 1;
          uint64_t v84 = v182;
          uint64_t v86 = (uint64_t)v159;
          char v83 = v158;
        }
        uint64_t v132 = 1;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56))(v83, v85, 1, v84);
        uint64_t v133 = sub_261B8F6C8();
        uint64_t v134 = (uint64_t)v83;
        unint64_t v136 = v135;
        sub_2619F8754(v134, (uint64_t *)&unk_26B416ED0);
        uint64_t v184 = sub_261AC9C40(v133, v136, v185);
        v164 = v185;
        sub_261B8F6F8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v80 + 12) = 2080;
        if (v81)
        {
          sub_261B8CAA8();
          uint64_t v132 = 0;
        }
        uint64_t v110 = v82;
        uint64_t v138 = v173;
        uint64_t v137 = v174;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v173 + 56))(v86, v132, 1, v174);
        uint64_t v139 = sub_261B8F6C8();
        unint64_t v141 = v140;
        sub_2619F8754(v86, &qword_26B416C20);
        uint64_t v184 = sub_261AC9C40(v139, v141, v185);
        sub_261B8F6F8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v80 + 22) = 2080;
        uint64_t v142 = (uint64_t)v170;
        uint64_t v143 = v161;
        sub_261B8C9A8();
        uint64_t v144 = v172;
        (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v172, v142 + *(int *)(v171 + 36), v137);
        sub_2619F8754(v142, &qword_26B416CA8);
        sub_261ABC9B4(&qword_26A946818, MEMORY[0x263F090E8]);
        uint64_t v145 = sub_261B8FB78();
        unint64_t v147 = v146;
        (*(void (**)(char *, uint64_t))(v138 + 8))(v144, v137);
        uint64_t v184 = sub_261AC9C40(v145, v147, v185);
        sub_261B8F6F8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v180 + 8))(v143, v167);
        os_log_t v148 = v178;
        _os_log_impl(&dword_2619F0000, v178, (os_log_type_t)v168, "workout day summary today %s, morningIndex %s, upperbound %s ", (uint8_t *)v80, 0x20u);
        v149 = v165;
        swift_arrayDestroy();
        MEMORY[0x263E4E970](v149, -1, -1);
        MEMORY[0x263E4E970](v80, -1, -1);

        (*(void (**)(os_log_t, uint64_t))(v176 + 8))(v162, v175);
        goto LABEL_34;
      }
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v77);
    }
    (*(void (**)(os_log_t, uint64_t))(v176 + 8))(v63, v175);
    goto LABEL_24;
  }
  sub_261B8C648();
  uint64_t v47 = v180;
  uint64_t v48 = v168;
  (*(void (**)(char *, uint64_t, uint64_t))(v180 + 16))(v168, v181, v20);
  uint64_t v49 = v183;
  swift_bridgeObjectRetain_n();
  uint64_t v50 = sub_261B8CE78();
  int v51 = sub_261B8F4A8();
  uint64_t v52 = v20;
  unint64_t v53 = v34;
  if (os_log_type_enabled(v50, (os_log_type_t)v51))
  {
    LODWORD(v165) = v51;
    os_log_t v178 = v50;
    uint64_t v54 = swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    v185[0] = v55;
    *(_DWORD *)uint64_t v54 = 136315650;
    uint64_t v56 = *(void *)(v49 + 16);
    uint64_t v57 = v182;
    uint64_t v58 = v179;
    uint64_t v167 = v52;
    v157 = v53;
    v160 = (char *)v55;
    if (v56)
    {
      uint64_t v59 = (uint64_t)v161;
      (*(void (**)(char *, unint64_t, uint64_t))(v179 + 16))(v161, v49+ ((*(unsigned __int8 *)(v179 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80))+ *(void *)(v179 + 72) * (v56 - 1), v182);
      uint64_t v60 = 0;
    }
    else
    {
      uint64_t v60 = 1;
      uint64_t v59 = (uint64_t)v161;
    }
    uint64_t v91 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v59, v60, 1, v57);
    uint64_t v92 = sub_261B8F6C8();
    unint64_t v94 = v93;
    sub_2619F8754(v59, (uint64_t *)&unk_26B416ED0);
    uint64_t v184 = sub_261AC9C40(v92, v94, v185);
    sub_261B8F6F8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 12) = 2080;
    v164 = v185;
    os_log_t v95 = v162;
    if (v56)
    {
      sub_261B8CAA8();
      uint64_t v91 = 0;
    }
    uint64_t v97 = v173;
    uint64_t v96 = v174;
    (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v173 + 56))(v95, v91, 1, v174);
    uint64_t v98 = sub_261B8F6C8();
    unint64_t v100 = v99;
    sub_2619F8754((uint64_t)v95, &qword_26B416C20);
    uint64_t v184 = sub_261AC9C40(v98, v100, v185);
    sub_261B8F6F8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 22) = 2080;
    uint64_t v101 = (uint64_t)v170;
    uint64_t v102 = v168;
    sub_261B8C9A8();
    unint64_t v103 = v172;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v172, v101 + *(int *)(v171 + 36), v96);
    sub_2619F8754(v101, &qword_26B416CA8);
    sub_261ABC9B4(&qword_26A946818, MEMORY[0x263F090E8]);
    uint64_t v104 = sub_261B8FB78();
    unint64_t v106 = v105;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v103, v96);
    uint64_t v184 = sub_261AC9C40(v104, v106, v185);
    sub_261B8F6F8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v180 + 8))(v102, v167);
    os_log_t v107 = v178;
    _os_log_impl(&dword_2619F0000, v178, (os_log_type_t)v165, "type day summary today %s, morningIndex %s, upperbound %s", (uint8_t *)v54, 0x20u);
    uint64_t v108 = v160;
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v108, -1, -1);
    MEMORY[0x263E4E970](v54, -1, -1);

    (*(void (**)(char *, uint64_t))(v176 + 8))(v157, v175);
    uint64_t v109 = v182;
    uint64_t v110 = v179;
LABEL_35:
    uint64_t v111 = v177;
    uint64_t v112 = v169;
    uint64_t v49 = v183;
    uint64_t v113 = *(void *)(v183 + 16);
    if (!v113) {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56))(v111, 1, 1, v109);
    }
    goto LABEL_36;
  }
  swift_bridgeObjectRelease_n();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v20);

  (*(void (**)(char *, uint64_t))(v176 + 8))(v34, v175);
LABEL_24:
  uint64_t v109 = v182;
  uint64_t v110 = v179;
  uint64_t v111 = v177;
  uint64_t v112 = v169;
  uint64_t v113 = *(void *)(v49 + 16);
  if (!v113) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56))(v111, 1, 1, v109);
  }
LABEL_36:
  (*(void (**)(char *, unint64_t, uint64_t))(v110 + 16))(v112, v49+ ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80))+ *(void *)(v110 + 72) * (v113 - 1), v109);
  v150 = v172;
  sub_261B8CAA8();
  uint64_t v151 = (uint64_t)v170;
  sub_261B8C9A8();
  uint64_t v153 = v173;
  uint64_t v152 = v174;
  uint64_t v154 = v166;
  (*(void (**)(char *, uint64_t, uint64_t))(v173 + 16))(v166, v151 + *(int *)(v171 + 36), v174);
  sub_2619F8754(v151, &qword_26B416CA8);
  sub_261ABC9B4(&qword_26B416C18, MEMORY[0x263F090E8]);
  sub_261B8F728();
  uint64_t v155 = v185[0];
  uint64_t v156 = *(void (**)(char *, uint64_t))(v153 + 8);
  v156(v154, v152);
  v156(v150, v152);
  if (v155)
  {
    (*(void (**)(char *, uint64_t))(v110 + 8))(v112, v109);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56))(v111, 1, 1, v109);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v110 + 32))(v111, v112, v109);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v110 + 56))(v111, 0, 1, v109);
}

uint64_t sub_261AB71E4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v93 = a1;
  uint64_t v95 = a2;
  uint64_t v72 = sub_261B8C988();
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v70 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_261B8AFC8();
  uint64_t v82 = *(void *)(v3 - 8);
  uint64_t v83 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v81 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_261B8ADD8();
  uint64_t v85 = *(void *)(v5 - 8);
  uint64_t v86 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v84 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v92 = (uint64_t)&v69 - v8;
  uint64_t v9 = sub_261B8CA78();
  uint64_t v79 = *(void *)(v9 - 8);
  uint64_t v80 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v78 = (char **)((char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_261B8EEC8();
  uint64_t v94 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v91 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  char v89 = (char *)&v69 - v14;
  MEMORY[0x270FA5388](v15);
  os_log_type_t v88 = (char *)&v69 - v16;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
  MEMORY[0x270FA5388](v73);
  uint64_t v87 = (uint64_t)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v69 - v19;
  uint64_t v21 = sub_261B8CA58();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_261B8CB38();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v75 = (char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v74 = (char *)&v69 - v29;
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v69 - v31;
  sub_261B8CA88();
  sub_261B8CB18();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v77 = v25;
  uint64_t v76 = v26 + 8;
  char v90 = v33;
  v33(v32, v25);
  long long v34 = (void *)sub_261B8CA48();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  if (!v34) {
    goto LABEL_8;
  }
  objc_msgSend(v34, sel__value);
  uint64_t v36 = v35;

  sub_261B8C9A8();
  uint64_t v37 = v88;
  sub_261B8CAA8();
  sub_261ABC9B4(&qword_26B416C08, MEMORY[0x263F090E8]);
  char v38 = sub_261B8F078();
  uint64_t v39 = v94;
  uint64_t v40 = v89;
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v89, v37, v11);
  uint64_t v41 = v87;
  sub_2619F86F0((uint64_t)v20, v87, &qword_26B416CA8);
  char v42 = (v38 & 1) != 0 ? sub_261B8F088() : 0;
  sub_2619F8754(v41, &qword_26B416CA8);
  double v43 = *(void (**)(char *, uint64_t))(v39 + 8);
  v43(v40, v11);
  v43(v37, v11);
  sub_2619F8754((uint64_t)v20, &qword_26B416CA8);
  if (v42)
  {
    char v89 = (char *)v11;
    uint64_t v44 = v74;
    sub_261B8CA88();
    long long v45 = v78;
    sub_261B8CB28();
    uint64_t v46 = v77;
    v90(v44, v77);
    uint64_t v48 = v79;
    uint64_t v47 = v80;
    int v49 = (*(uint64_t (**)(char **, uint64_t))(v79 + 88))(v45, v80);
    int v50 = *MEMORY[0x263F42DD8];
    if (v49 == *MEMORY[0x263F42DD8])
    {
      (*(void (**)(char **, uint64_t))(v48 + 96))(v45, v47);
      os_log_type_t v88 = *v45;
    }
    else
    {
      (*(void (**)(char **, uint64_t))(v48 + 8))(v45, v47);
      os_log_type_t v88 = 0;
    }
    unint64_t v53 = v91;
    sub_261B8CAA8();
    uint64_t v54 = v81;
    sub_261B8C9C8();
    sub_261AB7B8C(v92);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v54, v83);
    v43(v53, (uint64_t)v89);
    uint64_t v55 = v75;
    sub_261B8CA88();
    sub_261B8CAF8();
    if (v56)
    {
      v90(v55, v46);
      uint64_t v58 = sub_261B8E858();
    }
    else
    {
      uint64_t v57 = v70;
      sub_261B8C948();
      uint64_t v58 = TrainingLoadBand.color.getter();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v57, v72);
      v90(v55, v46);
    }
    BOOL v59 = v49 != v50;
    int v61 = v84;
    uint64_t v60 = v85;
    uint64_t v62 = v92;
    uint64_t v63 = v86;
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v84, v92, v86);
    uint64_t v64 = v91;
    sub_261B8CAA8();
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v62, v63);
    uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    uint64_t v66 = v95;
    uint64_t v67 = v95 + View[6];
    uint64_t v68 = v95 + View[8];
    *(void *)uint64_t v67 = v36;
    *(unsigned char *)(v67 + 8) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v60 + 32))(v66, v61, v63);
    (*(void (**)(uint64_t, char *, char *))(v94 + 32))(v66 + View[5], v64, v89);
    *(void *)(v66 + View[7]) = v58;
    *(void *)uint64_t v68 = v88;
    *(unsigned char *)(v68 + 8) = v59;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)View - 1) + 56))(v66, 0, 1, View);
  }
  else
  {
LABEL_8:
    uint64_t v51 = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v95, 1, 1, v51);
  }
}

uint64_t sub_261AB7B8C@<X0>(uint64_t a1@<X8>)
{
  v18[1] = a1;
  uint64_t v1 = sub_261B8EEC8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v18 - v6;
  v18[0] = sub_261B8ADD8();
  uint64_t v8 = *(void *)(v18[0] - 8);
  MEMORY[0x270FA5388](v18[0]);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v18 - v12;
  sub_261B8EEB8();
  sub_261B8EE68();
  sub_261B8EE78();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v4, v1);
  sub_261B8EEB8();
  v14(v7, v1);
  sub_261B8AC38();
  sub_261B8AC38();
  sub_261B8AC28();
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v16 = v18[0];
  v15(v10, v18[0]);
  return v15(v13, v16);
}

uint64_t TrainingLoadViewModel.hasValue(onDay:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 60));
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_261ACB0DC(a1), (v8 & 1) != 0))
  {
    unint64_t v9 = v7;
    uint64_t v10 = *(void *)(v6 + 56);
    uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    uint64_t v12 = *(void *)(View - 8);
    sub_261ABC8A0(v10 + *(void *)(v12 + 72) * v9, (uint64_t)v5, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    uint64_t v13 = 1;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v5, 0, 1, View);
  }
  else
  {
    uint64_t v14 = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v5, 1, 1, v14);
    uint64_t v13 = 0;
  }
  sub_2619F8754((uint64_t)v5, &qword_26B416C30);
  return v13;
}

uint64_t TrainingLoadViewModel.loadPercentage(onDay:)(uint64_t a1)
{
  uint64_t v36 = a1;
  uint64_t v2 = sub_261B8ABA8();
  uint64_t v42 = *(void *)(v2 - 8);
  uint64_t v43 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v40 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_261B8AB58();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8AEF8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BB0);
  uint64_t v41 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v39 = (char *)&v35 - v15;
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v17 = *(void *)(View - 8);
  MEMORY[0x270FA5388](View);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v35 - v21;
  uint64_t v23 = *(void *)(v1 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 60));
  if (!*(void *)(v23 + 16)) {
    goto LABEL_8;
  }
  unint64_t v24 = sub_261ACB0DC(v36);
  if ((v25 & 1) == 0) {
    goto LABEL_8;
  }
  sub_261ABC8A0(*(void *)(v23 + 56) + *(void *)(v17 + 72) * v24, (uint64_t)v19, type metadata accessor for TrainingLoadViewModel.ChartPoint);
  sub_261A3D138((uint64_t)v19, (uint64_t)v22);
  uint64_t v26 = &v22[*(int *)(View + 24)];
  if (v26[8] & 1) != 0 || (uint64_t v27 = &v22[*(int *)(View + 32)], (v27[8]) || *(double *)v27 <= 0.0)
  {
    sub_261A3CA74((uint64_t)v22);
LABEL_8:
    double v44 = 0.0;
    sub_261B8AE68();
    sub_261A63D24();
    sub_261B8AB08();
    sub_261B8AB48();
    MEMORY[0x263E489C0](v6, v8);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v38);
    uint64_t v31 = *(void (**)(char *, uint64_t))(v41 + 8);
    v31(v10, v8);
    uint64_t v32 = v40;
    sub_261B8AB98();
    uint64_t v33 = v39;
    MEMORY[0x263E489E0](v32, v8);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v43);
    v31(v13, v8);
    sub_2619F8AB8(&qword_26A946730, &qword_26B416BB0);
    sub_261B8EFD8();
    v31(v33, v8);
    return v45;
  }
  double v44 = (*(double *)v26 - *(double *)v27) / *(double *)v27;
  sub_261B8AE68();
  sub_261A63D24();
  sub_261B8AB08();
  sub_261B8AB48();
  MEMORY[0x263E489C0](v6, v8);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v38);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v41 + 8);
  v28(v10, v8);
  uint64_t v29 = v40;
  sub_261B8AB98();
  uint64_t v30 = v39;
  MEMORY[0x263E489E0](v29, v8);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v43);
  v28(v13, v8);
  sub_2619F8AB8(&qword_26A946730, &qword_26B416BB0);
  sub_261B8EFD8();
  v28(v30, v8);
  sub_261A3CA74((uint64_t)v22);
  return v45;
}

uint64_t TrainingLoadViewModel.band(onDay:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v6 = *(void *)(View - 8);
  MEMORY[0x270FA5388](View);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = *(void *)(v2 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 60));
  if (*(void *)(v12 + 16))
  {
    unint64_t v13 = sub_261ACB0DC(a1);
    if (v14)
    {
      sub_261ABC8A0(*(void *)(v12 + 56) + *(void *)(v6 + 72) * v13, (uint64_t)v8, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      sub_261A3D138((uint64_t)v8, (uint64_t)v11);
      if ((v11[*(int *)(View + 24) + 8] & 1) == 0 && (v11[*(int *)(View + 32) + 8] & 1) == 0)
      {
        sub_261B8C958();
        sub_261A3CA74((uint64_t)v11);
        uint64_t v17 = sub_261B8C988();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a2, 0, 1, v17);
      }
      sub_261A3CA74((uint64_t)v11);
    }
  }
  uint64_t v15 = sub_261B8C988();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
}

Swift::String __swiftcall TrainingLoadViewModel.loadPercentageToday()()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 40));
  if (v1[1])
  {
    uint64_t v2 = *v1;
    uint64_t v3 = (void *)v1[1];
  }
  else
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v4 = (id)qword_26B416688;
    uint64_t v2 = sub_261B8AA48();
    uint64_t v3 = v5;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

uint64_t _s9WorkoutUI21TrainingLoadViewModelV16loadBandForToday13HealthBalance0cdH0OSgvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  return sub_2619F86F0(v1 + *(int *)(ViewModel + 52), a1, &qword_26B416BD8);
}

Swift::String __swiftcall TrainingLoadViewModel.loadBandTodayLocalizedDescription()()
{
  uint64_t v0 = sub_261AB9078((uint64_t (*)(char *))TrainingLoadViewModel.localizedDescription(onDay:));
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t TrainingLoadViewModel.localizedDescription(onDay:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8CA78();
  uint64_t v48 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8CB38();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_261B8CAD8();
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v44 - v17;
  uint64_t v19 = *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 64);
  uint64_t v47 = v1;
  uint64_t v20 = *(void *)(v1 + v19);
  if (*(void *)(v20 + 16) && (unint64_t v21 = sub_261ACB0DC(a1), (v22 & 1) != 0))
  {
    uint64_t v45 = a1;
    uint64_t v46 = v5;
    uint64_t v23 = *(void *)(v20 + 56);
    uint64_t v24 = v6;
    char v25 = v8;
    uint64_t v26 = v18;
    uint64_t v28 = v49;
    uint64_t v27 = v50;
    (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v15, v23 + *(void *)(v49 + 72) * v21, v50);
    uint64_t v29 = v28;
    uint64_t v30 = v26;
    uint64_t v31 = (uint64_t)v25;
    uint64_t v32 = v24;
    uint64_t v33 = v48;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v30, v15, v27);
    sub_261B8CA88();
    sub_261B8CB28();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    int v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 88))(v31, v32);
    if (v34 == *MEMORY[0x263F42DC8])
    {
      (*(void (**)(uint64_t, uint64_t))(v33 + 96))(v31, v32);
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v35 = (id)qword_26B416688;
      uint64_t v36 = sub_261B8AA48();

      (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v50);
      sub_2619F8754(v31, &qword_26B416CE8);
      return v36;
    }
    if (v34 == *MEMORY[0x263F42DD8])
    {
      uint64_t v39 = (uint64_t)v46;
      TrainingLoadViewModel.band(onDay:)(v45, (uint64_t)v46);
      uint64_t v40 = sub_261B8C988();
      uint64_t v41 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40) != 1)
      {
        uint64_t v36 = TrainingLoadBand.localizedDescription.getter();
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
        goto LABEL_19;
      }
      sub_2619F8754(v39, &qword_26B416BD8);
      if (qword_26B416690 == -1)
      {
LABEL_17:
        swift_beginAccess();
        id v42 = (id)qword_26B416688;
        uint64_t v36 = sub_261B8AA48();

LABEL_19:
        (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v50);
        return v36;
      }
LABEL_23:
      swift_once();
      goto LABEL_17;
    }
    if (v34 == *MEMORY[0x263F42DD0])
    {
      if (qword_26B416690 == -1) {
        goto LABEL_17;
      }
      goto LABEL_23;
    }
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v43 = (id)qword_26B416688;
    uint64_t v36 = sub_261B8AA48();

    (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v50);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
  }
  else
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v37 = (id)qword_26B416688;
    uint64_t v36 = sub_261B8AA48();
  }
  return v36;
}

Swift::String __swiftcall TrainingLoadViewModel.loadBandTodayLocalizedLongDescriptionInNonActiveState()()
{
  uint64_t v0 = sub_261AB9078((uint64_t (*)(char *))TrainingLoadViewModel.localizedLongDescriptionInNonActiveState(onDay:));
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t sub_261AB9078(uint64_t (*a1)(char *))
{
  uint64_t v2 = sub_261B8EEC8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TrainingLoadViewModel(0);
  sub_261B8C9A8();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v9[*(int *)(v7 + 44)], v2);
  sub_2619F8754((uint64_t)v9, &qword_26B416CA8);
  uint64_t v10 = a1(v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

uint64_t TrainingLoadViewModel.localizedLongDescriptionInNonActiveState(onDay:)(uint64_t a1)
{
  uint64_t v3 = sub_261B8CA78();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8CB38();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_261B8CAD8();
  uint64_t v37 = *(void *)(v11 - 8);
  uint64_t v38 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = *(void *)(v1 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 64));
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_261ACB0DC(a1), (v19 & 1) != 0))
  {
    uint64_t v20 = *(void *)(v17 + 56);
    uint64_t v22 = v37;
    uint64_t v21 = v38;
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v13, v20 + *(void *)(v37 + 72) * v18, v38);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v13, v21);
    sub_261B8CA88();
    sub_261B8CB28();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    int v23 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
    if (v23 == *MEMORY[0x263F42DC8])
    {
      (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946738);
      uint64_t v25 = *(void *)&v6[*(int *)(v24 + 48)];
      uint64_t v26 = *(void *)&v6[*(int *)(v24 + 64)];
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v27 = (id)qword_26B416688;
      sub_261B8AA48();

      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_261B93F70;
      if (!__OFSUB__(v26, v25))
      {
        uint64_t v29 = MEMORY[0x263F8D750];
        *(void *)(v28 + 56) = MEMORY[0x263F8D6C8];
        *(void *)(v28 + 64) = v29;
        *(void *)(v28 + 32) = v26 - v25;
        uint64_t v30 = sub_261B8F0C8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v38);
        sub_2619F8754((uint64_t)v6, &qword_26B416CE8);
        return v30;
      }
      __break(1u);
      goto LABEL_21;
    }
    if (v23 == *MEMORY[0x263F42DD8])
    {
      uint64_t v33 = qword_26B416690;
      goto LABEL_15;
    }
    uint64_t v33 = qword_26B416690;
    if (v23 == *MEMORY[0x263F42DD0])
    {
LABEL_15:
      if (v33 == -1)
      {
LABEL_16:
        swift_beginAccess();
        id v34 = (id)qword_26B416688;
        uint64_t v30 = sub_261B8AA48();

        (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v38);
        return v30;
      }
LABEL_21:
      swift_once();
      goto LABEL_16;
    }
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v35 = (id)qword_26B416688;
    uint64_t v30 = sub_261B8AA48();

    (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v38);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v31 = (id)qword_26B416688;
    uint64_t v30 = sub_261B8AA48();
  }
  return v30;
}

uint64_t _s9WorkoutUI21TrainingLoadViewModelV21loadBandForTodayColor05SwiftB00K0Vvg_0()
{
  type metadata accessor for TrainingLoadViewModel(0);
  return swift_retain();
}

uint64_t TrainingLoadViewModel.background(onDay:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  uint64_t v6 = MEMORY[0x263E4C7B0](v5);
  TrainingLoadViewModel.band(onDay:)(a1, (uint64_t)v4);
  uint64_t v7 = sub_261B8C988();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
  {
    sub_2619F8754((uint64_t)v4, &qword_26B416BD8);
  }
  else
  {
    uint64_t v9 = TrainingLoadBand.background.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
    swift_release();
    return v9;
  }
  return v6;
}

uint64_t TrainingLoadViewModel.color(onDay:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  TrainingLoadViewModel.band(onDay:)(a1, (uint64_t)v4);
  uint64_t v5 = sub_261B8C988();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_2619F8754((uint64_t)v4, &qword_26B416BD8);
    return sub_261B8E858();
  }
  else
  {
    uint64_t v7 = TrainingLoadBand.color.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  return v7;
}

uint64_t TrainingLoadViewModel.isPending(onDay:)(uint64_t a1)
{
  uint64_t v3 = sub_261B8CA78();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8CB38();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_261B8CAD8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v23 - v15;
  uint64_t v17 = *(void *)(v1 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 64));
  if (*(void *)(v17 + 16))
  {
    unint64_t v18 = sub_261ACB0DC(a1);
    if (v19)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, *(void *)(v17 + 56) + *(void *)(v11 + 72) * v18, v10);
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v13, v10);
      sub_261B8CA88();
      sub_261B8CB28();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      uint64_t v21 = v23;
      uint64_t v20 = v24;
      if ((*(unsigned int (**)(char *, uint64_t))(v23 + 88))(v5, v24) == *MEMORY[0x263F42DC8])
      {
        (*(void (**)(char *, uint64_t))(v21 + 96))(v5, v20);
        sub_2619F8754((uint64_t)v5, &qword_26B416CE8);
        return 1;
      }
      (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v20);
    }
  }
  return 0;
}

uint64_t TrainingLoadViewModel.isNoData(onDay:)(uint64_t a1)
{
  uint64_t v3 = sub_261B8CA78();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8CB38();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_261B8CAD8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v23 - v15;
  uint64_t v17 = *(void *)(v1 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 64));
  if (!*(void *)(v17 + 16)) {
    return 1;
  }
  unint64_t v18 = sub_261ACB0DC(a1);
  if ((v19 & 1) == 0) {
    return 1;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, *(void *)(v17 + 56) + *(void *)(v11 + 72) * v18, v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v13, v10);
  sub_261B8CA88();
  sub_261B8CB28();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  uint64_t v21 = v23;
  uint64_t v20 = v24;
  if ((*(unsigned int (**)(char *, uint64_t))(v23 + 88))(v5, v24) == *MEMORY[0x263F42DD0]) {
    return 1;
  }
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v20);
  return 0;
}

double TrainingLoadViewModel.loadBandFlavoredGradientBackground(rotated:)@<D0>(char a1@<W0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_261B8C988();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  sub_2619F86F0(v2 + *(int *)(ViewModel + 52), (uint64_t)v7, &qword_26B416BD8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_2619F8754((uint64_t)v7, &qword_26B416BD8);
    id v13 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
    *(void *)&long long v41 = MEMORY[0x263E4C7B0](v13);
    WORD4(v41) = 256;
    sub_261ABC7EC((uint64_t)&v41);
    sub_2619FB7EC((uint64_t)&v41, (uint64_t)v39, &qword_26A946740);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946748);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946750);
    sub_261ABC7F8();
    sub_2619F8AB8(&qword_26A946760, &qword_26A946750);
    sub_261B8DD68();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    TrainingLoadBand.layeredBackground.getter((uint64_t)&v30);
    uint64_t v14 = v31;
    long long v28 = v32;
    long long v29 = v30;
    uint64_t v15 = v33;
    uint64_t v16 = v34;
    uint64_t v17 = v35;
    long long v27 = v36;
    uint64_t v18 = v37;
    uint64_t v19 = v38;
    if (a1) {
      double v20 = 3.14159265;
    }
    else {
      double v20 = 0.0;
    }
    sub_261B8ED48();
    long long v41 = v29;
    uint64_t v42 = v14;
    long long v43 = v28;
    uint64_t v44 = v15;
    uint64_t v45 = v16;
    uint64_t v46 = v17;
    long long v47 = v27;
    uint64_t v48 = v18;
    uint64_t v49 = v19;
    double v50 = v20;
    uint64_t v51 = v21;
    uint64_t v52 = v22;
    sub_261ABC898((uint64_t)&v41);
    sub_2619FB7EC((uint64_t)&v41, (uint64_t)&v53, &qword_26A946740);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946748);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946750);
    sub_261ABC7F8();
    sub_2619F8AB8(&qword_26A946760, &qword_26A946750);
    sub_261B8DD68();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    long long v57 = v39[4];
    long long v58 = v39[5];
    v59[0] = v40[0];
    *(_OWORD *)((char *)v59 + 9) = *(_OWORD *)((char *)v40 + 9);
    long long v53 = v39[0];
    long long v54 = v39[1];
    long long v55 = v39[2];
    long long v56 = v39[3];
  }
  long long v23 = v58;
  a2[4] = v57;
  a2[5] = v23;
  a2[6] = v59[0];
  *(_OWORD *)((char *)a2 + 105) = *(_OWORD *)((char *)v59 + 9);
  long long v24 = v54;
  *a2 = v53;
  a2[1] = v24;
  double result = *(double *)&v55;
  long long v26 = v56;
  a2[2] = v55;
  a2[3] = v26;
  return result;
}

Swift::String __swiftcall TrainingLoadViewModel.localizedName()()
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  MEMORY[0x270FA5388](ViewModel - 8);
  uint64_t v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_261B8CA08();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v0, v4, v6);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 != *MEMORY[0x263F42C50])
  {
    if (v9 == *MEMORY[0x263F42C58])
    {
      if (qword_26B416690 == -1) {
        goto LABEL_9;
      }
    }
    else
    {
      if (v9 != *MEMORY[0x263F42C60])
      {
LABEL_13:
        sub_261ABC8A0(v0, (uint64_t)v3, type metadata accessor for TrainingLoadViewModel);
        v19[1] = 0;
        _OWORD v19[2] = 0xE000000000000000;
        sub_261B8F8C8();
        sub_261B8F1C8();
        sub_261B8F9A8();
        uint64_t v16 = sub_261B8F9C8();
        __break(1u);
        goto LABEL_14;
      }
      if (qword_26B416690 == -1)
      {
LABEL_9:
        swift_beginAccess();
        id v11 = (id)qword_26B416688;
        uint64_t v12 = sub_261B8AA48();
        goto LABEL_10;
      }
    }
    swift_once();
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
  id v10 = (id)FILocalizedNameForIndoorAgnosticActivityType();
  if (!v10)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v11 = v10;
  uint64_t v12 = sub_261B8F0F8();
LABEL_10:
  uint64_t v14 = v12;
  uint64_t v15 = v13;

  uint64_t v16 = v14;
  uint64_t v17 = v15;
LABEL_14:
  result._object = v17;
  result._countAndFlagsBits = v16;
  return result;
}

id TrainingLoadViewModel.displayImage()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_261B8CA08();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  double v6 = (uint64_t *)((char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946768);
  MEMORY[0x270FA5388](v7);
  int v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946770);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946778);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  TrainingLoadViewModel.symbolName.getter();
  if (v16)
  {
    uint64_t v37 = sub_261B8E948();
    Swift::String View = TrainingLoadViewModel.localizedName()();
    sub_261A029C4();
    uint64_t v17 = sub_261B8E3D8();
    uint64_t v34 = v7;
    uint64_t v35 = a1;
    uint64_t v19 = v18;
    char v21 = v20 & 1;
    sub_261B8E578();
    sub_261A02A18(v17, v19, v21);
    swift_release();
    swift_bridgeObjectRelease();
    sub_2619F86F0((uint64_t)v15, (uint64_t)v9, &qword_26A946778);
    swift_storeEnumTagMultiPayload();
    sub_261ABC908();
    sub_261B8DD68();
  }
  else
  {
    (*(void (**)(void *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
    if ((*(unsigned int (**)(void *, uint64_t))(v4 + 88))(v6, v3) != *MEMORY[0x263F42C50])
    {
      (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946780);
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a1, 1, 1, v30);
    }
    uint64_t v34 = v7;
    uint64_t v35 = a1;
    (*(void (**)(void *, uint64_t))(v4 + 96))(v6, v3);
    id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3F188]), sel_initWithActivityTypeIdentifier_isIndoor_, *v6, 0);
    id result = (id)FIUIStaticScalableWorkoutIconImageWithPadding();
    if (!result)
    {
      __break(1u);
      return result;
    }
    long long v23 = result;
    id v24 = objc_msgSend(result, sel_imageWithRenderingMode_, 2);

    id v32 = v24;
    uint64_t v37 = sub_261B8E908();
    Swift::String View = TrainingLoadViewModel.localizedName()();
    sub_261A029C4();
    uint64_t v25 = sub_261B8E3D8();
    uint64_t v27 = v26;
    LOBYTE(v23) = v28 & 1;
    sub_261B8E578();
    sub_261A02A18(v25, v27, (char)v23);
    swift_release();
    swift_bridgeObjectRelease();
    sub_2619F86F0((uint64_t)v15, (uint64_t)v9, &qword_26A946778);
    swift_storeEnumTagMultiPayload();
    sub_261ABC908();
    sub_261B8DD68();
  }
  sub_2619F8754((uint64_t)v15, &qword_26A946778);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946780);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v12, 0, 1, v29);
  return (id)sub_2619FB7EC((uint64_t)v12, v35, &qword_26A946770);
}

uint64_t TrainingLoadViewModel.symbolName.getter()
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  MEMORY[0x270FA5388](ViewModel - 8);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)sub_261B8CA08();
  uint64_t v5 = *(v4 - 1);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (void *)((char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void *, uint64_t, void *, double))(v5 + 16))(v8, v0, v4, v6);
  int v9 = (*(uint64_t (**)(void *, void *))(v5 + 88))(v8, v4);
  if (v9 != *MEMORY[0x263F42C50])
  {
    if (v9 == *MEMORY[0x263F42C58]) {
      return 0x2E78616D2E6E7573;
    }
    if (v9 == *MEMORY[0x263F42C60]) {
      return 0;
    }
    sub_261ABC8A0(v0, (uint64_t)v3, type metadata accessor for TrainingLoadViewModel);
    v14[0] = 0;
    v14[1] = 0xE000000000000000;
    sub_261B8F8C8();
    sub_261B8F1C8();
    sub_261B8F9A8();
    sub_261B8F9C8();
    __break(1u);
LABEL_8:

    return 0;
  }
  (*(void (**)(void *, void *))(v5 + 96))(v8, v4);
  uint64_t v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3F188]), sel_initWithActivityTypeIdentifier_isIndoor_, *v8, 0);
  id v10 = objc_msgSend(v4, sel_symbolName);
  if (!v10) {
    goto LABEL_8;
  }
  uint64_t v11 = v10;
  uint64_t v12 = sub_261B8F0F8();

  return v12;
}

uint64_t TrainingLoadViewModel.hasDisplayImage.getter()
{
  uint64_t v1 = sub_261B8CA08();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  TrainingLoadViewModel.symbolName.getter();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  if (v6) {
    return 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v4, v1) == *MEMORY[0x263F42C50]) {
    return 1;
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return 0;
}

uint64_t TrainingLoadViewModel.hash(into:)()
{
  sub_261B8CA08();
  sub_261ABC9B4(&qword_26A946790, MEMORY[0x263F42C68]);
  sub_261B8F028();
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  sub_261B8C9E8();
  sub_261ABC9B4(&qword_26A946798, MEMORY[0x263F42C20]);
  sub_261B8F028();
  uint64_t v2 = *(void *)(v0 + *(int *)(ViewModel + 24));
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t result = sub_261B8FCA8();
  if (v3)
  {
    uint64_t v5 = *(void *)(sub_261B8CAD8() - 8);
    uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v7 = *(void *)(v5 + 72);
    sub_261ABC9B4(&qword_26A9467A0, MEMORY[0x263F42DE0]);
    swift_bridgeObjectRetain();
    do
    {
      sub_261B8F028();
      v6 += v7;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_261ABB3A8(uint64_t a1, uint64_t a2)
{
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v63 = *(void *)(View - 8);
  MEMORY[0x270FA5388](View);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int v9 = (char *)&v52 - v8;
  uint64_t v66 = sub_261B8EEC8();
  uint64_t v61 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v60 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946808);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15.n128_f64[0] = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v52 - v16;
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  uint64_t v58 = a2;
  int64_t v59 = 0;
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v53 = a1 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  uint64_t v22 = (uint64_t)v60;
  int64_t v54 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v55 = v61 + 16;
  long long v56 = (void (**)(uint64_t, uint64_t))(v61 + 8);
  long long v57 = (void (**)(uint64_t, char *, uint64_t))(v61 + 32);
  int64_t v52 = v54 - 1;
  uint64_t v64 = v6;
  BOOL v65 = v9;
  while (1)
  {
    if (v21)
    {
      uint64_t v62 = (v21 - 1) & v21;
      unint64_t v23 = __clz(__rbit64(v21)) | (v59 << 6);
LABEL_10:
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v61 + 16))(v13, *(void *)(a1 + 48) + *(void *)(v61 + 72) * v23, v66, v15);
      uint64_t v24 = *(void *)(a1 + 56) + *(void *)(v63 + 72) * v23;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946810);
      sub_261ABC8A0(v24, (uint64_t)&v13[*(int *)(v25 + 48)], type metadata accessor for TrainingLoadViewModel.ChartPoint);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v13, 0, 1, v25);
      goto LABEL_32;
    }
    int64_t v26 = v59 + 1;
    if (__OFADD__(v59, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v26 < v54)
    {
      unint64_t v27 = *(void *)(v53 + 8 * v26);
      if (v27) {
        goto LABEL_14;
      }
      int64_t v28 = v59 + 2;
      ++v59;
      if (v26 + 1 < v54)
      {
        unint64_t v27 = *(void *)(v53 + 8 * v28);
        if (v27) {
          goto LABEL_17;
        }
        int64_t v59 = v26 + 1;
        if (v26 + 2 < v54)
        {
          unint64_t v27 = *(void *)(v53 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_14;
          }
          int64_t v59 = v26 + 2;
          if (v26 + 3 < v54)
          {
            unint64_t v27 = *(void *)(v53 + 8 * (v26 + 3));
            if (v27)
            {
              v26 += 3;
              goto LABEL_14;
            }
            int64_t v28 = v26 + 4;
            int64_t v59 = v26 + 3;
            if (v26 + 4 < v54) {
              break;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946810);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v13, 1, 1, v29);
    uint64_t v62 = 0;
LABEL_32:
    sub_2619FB7EC((uint64_t)v13, (uint64_t)v17, &qword_26A946808);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946810);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v17, 1, v30) == 1) {
      return;
    }
    uint64_t v31 = v13;
    uint64_t v32 = a1;
    uint64_t v33 = (uint64_t)&v17[*(int *)(v30 + 48)];
    uint64_t v34 = v66;
    (*v57)(v22, v17, v66);
    uint64_t v35 = (uint64_t)v65;
    sub_261A3D138(v33, (uint64_t)v65);
    uint64_t v36 = v58;
    unint64_t v37 = sub_261ACB0DC(v22);
    char v39 = v38;
    (*v56)(v22, v34);
    if ((v39 & 1) == 0) {
      goto LABEL_48;
    }
    uint64_t v40 = *(void *)(v36 + 56);
    uint64_t v41 = (uint64_t)v64;
    sub_261ABC8A0(v40 + *(void *)(v63 + 72) * v37, (uint64_t)v64, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    uint64_t v13 = v31;
    if ((sub_261B8AD88() & 1) == 0) {
      goto LABEL_47;
    }
    a1 = v32;
    sub_261ABC9B4(&qword_26B416C18, MEMORY[0x263F090E8]);
    uint64_t v35 = (uint64_t)v65;
    sub_261B8F728();
    uint64_t v41 = (uint64_t)v64;
    if (v67) {
      goto LABEL_47;
    }
    uint64_t v42 = *(int *)(View + 24);
    long long v43 = (double *)&v64[v42];
    char v44 = v64[v42 + 8];
    uint64_t v45 = (double *)(v35 + v42);
    int v46 = *(unsigned __int8 *)(v35 + v42 + 8);
    if (v44)
    {
      if (!v46) {
        goto LABEL_47;
      }
    }
    else
    {
      if (*v43 != *v45) {
        LOBYTE(v46) = 1;
      }
      if (v46)
      {
LABEL_47:
        sub_261A3CA74(v41);
LABEL_48:
        sub_261A3CA74(v35);
        return;
      }
    }
    if ((sub_261B8E848() & 1) == 0) {
      goto LABEL_47;
    }
    uint64_t v47 = *(int *)(View + 32);
    uint64_t v48 = (double *)(v41 + v47);
    char v49 = *(unsigned char *)(v41 + v47 + 8);
    double v50 = (double *)(v35 + v47);
    int v51 = *(unsigned __int8 *)(v35 + v47 + 8);
    if (v49)
    {
      if (!v51) {
        goto LABEL_47;
      }
    }
    else
    {
      if (*v48 != *v50) {
        LOBYTE(v51) = 1;
      }
      if (v51) {
        goto LABEL_47;
      }
    }
    sub_261A3CA74(v41);
    sub_261A3CA74(v35);
    unint64_t v21 = v62;
  }
  unint64_t v27 = *(void *)(v53 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v26 = v28;
LABEL_14:
    uint64_t v62 = (v27 - 1) & v27;
    unint64_t v23 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v59 = v26;
    goto LABEL_10;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v54)
    {
      int64_t v59 = v52;
      goto LABEL_31;
    }
    unint64_t v27 = *(void *)(v53 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_14;
    }
  }
LABEL_52:
  __break(1u);
}

void sub_261ABBA48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8CAD8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int64_t v59 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int v9 = (char *)&v48 - v8;
  uint64_t v65 = sub_261B8EEC8();
  uint64_t v58 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v60 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9467F8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15.n128_f64[0] = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v48 - v16;
  if (a1 == a2)
  {
    BOOL v62 = 1;
    return;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
LABEL_36:
    BOOL v62 = 0;
    return;
  }
  uint64_t v57 = a2;
  int64_t v61 = 0;
  uint64_t v52 = a1;
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v49 = a1 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  int64_t v50 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v51 = v58 + 16;
  uint64_t v63 = v5 + 16;
  uint64_t v55 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  long long v56 = (void (**)(char *, char *, uint64_t))(v58 + 32);
  uint64_t v53 = (void (**)(char *, uint64_t))(v5 + 8);
  int64_t v54 = (void (**)(uint64_t, uint64_t))(v58 + 8);
  int64_t v48 = v50 - 1;
  while (1)
  {
    if (v21)
    {
      unint64_t v22 = __clz(__rbit64(v21));
      uint64_t v23 = (v21 - 1) & v21;
      unint64_t v24 = v22 | (v61 << 6);
LABEL_8:
      uint64_t v25 = v52;
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v58 + 16))(v13, *(void *)(v52 + 48) + *(void *)(v58 + 72) * v24, v65, v15);
      unint64_t v26 = *(void *)(v25 + 56) + *(void *)(v5 + 72) * v24;
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946800);
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(&v13[*(int *)(v27 + 48)], v26, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 0, 1, v27);
      goto LABEL_30;
    }
    int64_t v28 = v61 + 1;
    if (__OFADD__(v61, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v28 < v50)
    {
      unint64_t v29 = *(void *)(v49 + 8 * v28);
      if (v29) {
        goto LABEL_12;
      }
      int64_t v30 = v61 + 2;
      ++v61;
      if (v28 + 1 < v50)
      {
        unint64_t v29 = *(void *)(v49 + 8 * v30);
        if (v29) {
          goto LABEL_15;
        }
        int64_t v61 = v28 + 1;
        if (v28 + 2 < v50)
        {
          unint64_t v29 = *(void *)(v49 + 8 * (v28 + 2));
          if (v29)
          {
            v28 += 2;
            goto LABEL_12;
          }
          int64_t v61 = v28 + 2;
          if (v28 + 3 < v50)
          {
            unint64_t v29 = *(void *)(v49 + 8 * (v28 + 3));
            if (v29)
            {
              v28 += 3;
              goto LABEL_12;
            }
            int64_t v30 = v28 + 4;
            int64_t v61 = v28 + 3;
            if (v28 + 4 < v50) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946800);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 1, 1, v31);
    uint64_t v23 = 0;
LABEL_30:
    sub_2619FB7EC((uint64_t)v13, (uint64_t)v17, &qword_26A9467F8);
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946800);
    int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v17, 1, v32);
    BOOL v62 = v33 == 1;
    if (v33 == 1) {
      return;
    }
    unint64_t v64 = v23;
    uint64_t v34 = v13;
    uint64_t v35 = v5;
    uint64_t v36 = &v17[*(int *)(v32 + 48)];
    uint64_t v37 = (uint64_t)v60;
    char v38 = v17;
    uint64_t v39 = v65;
    (*v56)(v60, v17, v65);
    (*v55)(v9, v36, v4);
    uint64_t v40 = v57;
    unint64_t v41 = sub_261ACB0DC(v37);
    char v43 = v42;
    (*v54)(v37, v39);
    if ((v43 & 1) == 0)
    {
      (*v53)(v9, v4);
      goto LABEL_36;
    }
    uint64_t v5 = v35;
    unint64_t v44 = *(void *)(v40 + 56) + *(void *)(v35 + 72) * v41;
    uint64_t v45 = v59;
    (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v59, v44, v4);
    sub_261ABC9B4(&qword_26A9467F0, MEMORY[0x263F42DE0]);
    char v46 = sub_261B8F0A8();
    uint64_t v47 = *(void (**)(char *, uint64_t))(v35 + 8);
    v47(v45, v4);
    v47(v9, v4);
    uint64_t v13 = v34;
    uint64_t v17 = v38;
    unint64_t v21 = v64;
    if ((v46 & 1) == 0) {
      return;
    }
  }
  unint64_t v29 = *(void *)(v49 + 8 * v30);
  if (v29)
  {
LABEL_15:
    int64_t v28 = v30;
LABEL_12:
    uint64_t v23 = (v29 - 1) & v29;
    unint64_t v24 = __clz(__rbit64(v29)) + (v28 << 6);
    int64_t v61 = v28;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v28 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v28 >= v50)
    {
      int64_t v61 = v48;
      goto LABEL_29;
    }
    unint64_t v29 = *(void *)(v49 + 8 * v28);
    ++v30;
    if (v29) {
      goto LABEL_12;
    }
  }
LABEL_39:
  __break(1u);
}

uint64_t TrainingLoadViewModel.hashValue.getter()
{
  sub_261B8FC98();
  sub_261B8CA08();
  sub_261ABC9B4(&qword_26A946790, MEMORY[0x263F42C68]);
  sub_261B8F028();
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  sub_261B8C9E8();
  sub_261ABC9B4(&qword_26A946798, MEMORY[0x263F42C20]);
  sub_261B8F028();
  uint64_t v2 = *(void *)(v0 + *(int *)(ViewModel + 24));
  uint64_t v3 = *(void *)(v2 + 16);
  sub_261B8FCA8();
  if (v3)
  {
    uint64_t v4 = *(void *)(sub_261B8CAD8() - 8);
    uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    sub_261ABC9B4(&qword_26A9467A0, MEMORY[0x263F42DE0]);
    do
    {
      sub_261B8F028();
      v5 += v6;
      --v3;
    }
    while (v3);
  }
  return sub_261B8FCE8();
}

uint64_t sub_261ABC288(uint64_t a1, uint64_t a2)
{
  sub_261B8CA08();
  sub_261ABC9B4(&qword_26A946790, MEMORY[0x263F42C68]);
  sub_261B8F028();
  sub_261B8C9E8();
  sub_261ABC9B4(&qword_26A946798, MEMORY[0x263F42C20]);
  sub_261B8F028();
  uint64_t v4 = *(void *)(v2 + *(int *)(a2 + 24));
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t result = sub_261B8FCA8();
  if (v5)
  {
    uint64_t v7 = *(void *)(sub_261B8CAD8() - 8);
    uint64_t v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v9 = *(void *)(v7 + 72);
    sub_261ABC9B4(&qword_26A9467A0, MEMORY[0x263F42DE0]);
    do
    {
      uint64_t result = sub_261B8F028();
      v8 += v9;
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_261ABC438(uint64_t a1, uint64_t a2)
{
  sub_261B8FC98();
  sub_261B8CA08();
  sub_261ABC9B4(&qword_26A946790, MEMORY[0x263F42C68]);
  sub_261B8F028();
  sub_261B8C9E8();
  sub_261ABC9B4(&qword_26A946798, MEMORY[0x263F42C20]);
  sub_261B8F028();
  uint64_t v4 = *(void *)(v2 + *(int *)(a2 + 24));
  uint64_t v5 = *(void *)(v4 + 16);
  sub_261B8FCA8();
  if (v5)
  {
    uint64_t v6 = *(void *)(sub_261B8CAD8() - 8);
    uint64_t v7 = v4 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v8 = *(void *)(v6 + 72);
    sub_261ABC9B4(&qword_26A9467A0, MEMORY[0x263F42DE0]);
    do
    {
      sub_261B8F028();
      v7 += v8;
      --v5;
    }
    while (v5);
  }
  return sub_261B8FCE8();
}

BOOL _s9WorkoutUI21TrainingLoadViewModelV10ChartPointV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_261B8AD88() & 1) == 0) {
    return 0;
  }
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  sub_261B8EEC8();
  sub_261ABC9B4(&qword_26B416C18, MEMORY[0x263F090E8]);
  sub_261B8F728();
  if (v16) {
    return 0;
  }
  uint64_t v6 = *(int *)(View + 24);
  uint64_t v7 = (double *)(a1 + v6);
  char v8 = *(unsigned char *)(a1 + v6 + 8);
  uint64_t v9 = (double *)(a2 + v6);
  int v10 = *(unsigned __int8 *)(a2 + v6 + 8);
  if (v8)
  {
    if (!v10) {
      return 0;
    }
  }
  else
  {
    if (*v7 != *v9) {
      LOBYTE(v10) = 1;
    }
    if (v10) {
      return 0;
    }
  }
  if ((sub_261B8E848() & 1) == 0) {
    return 0;
  }
  uint64_t v11 = *(int *)(View + 32);
  uint64_t v12 = (double *)(a1 + v11);
  char v13 = *(unsigned char *)(a1 + v11 + 8);
  uint64_t v14 = (double *)(a2 + v11);
  char v15 = *(unsigned char *)(a2 + v11 + 8);
  if (v13) {
    return (v15 & 1) != 0;
  }
  if (*v12 != *v14) {
    char v15 = 1;
  }
  return (v15 & 1) == 0;
}

uint64_t type metadata accessor for TrainingLoadViewModel(uint64_t a1)
{
  return sub_261A84418(a1, qword_26B416E10);
}

uint64_t sub_261ABC75C@<X0>(uint64_t a1@<X8>)
{
  return sub_261AB71E4(*(void *)(v1 + 16), a1);
}

uint64_t sub_261ABC788(uint64_t a1, uint64_t a2)
{
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(View - 8) + 40))(a2, a1, View);
  return a2;
}

uint64_t sub_261ABC7EC(uint64_t result)
{
  *(unsigned char *)(result + 120) = 1;
  return result;
}

unint64_t sub_261ABC7F8()
{
  unint64_t result = qword_26A946758;
  if (!qword_26A946758)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946748);
    sub_2619F8AB8((unint64_t *)&qword_26A9465F8, &qword_26A946600);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946758);
  }
  return result;
}

uint64_t sub_261ABC898(uint64_t result)
{
  *(unsigned char *)(result + 120) = 0;
  return result;
}

uint64_t sub_261ABC8A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_261ABC908()
{
  unint64_t result = qword_26A946788;
  if (!qword_26A946788)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946778);
    sub_261ABC9B4((unint64_t *)&qword_26A943A88, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946788);
  }
  return result;
}

uint64_t sub_261ABC9B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s9WorkoutUI21TrainingLoadViewModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v127 = *(void *)(View - 8);
  uint64_t v128 = View;
  MEMORY[0x270FA5388](View);
  uint64_t v119 = (uint64_t)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9467D8);
  MEMORY[0x270FA5388](v123);
  uint64_t v124 = (uint64_t)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v129 = (uint64_t)&v111 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v126 = (char *)&v111 - v13;
  uint64_t v14 = sub_261B8CAD8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v132 = v14;
  uint64_t v133 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v125 = (char *)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9467E0);
  MEMORY[0x270FA5388](v17);
  uint64_t v134 = (uint64_t)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B416ED0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v130 = (uint64_t)&v111 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v111 - v22;
  MEMORY[0x270FA5388](v24);
  unint64_t v26 = (char *)&v111 - v25;
  uint64_t v27 = sub_261B8C988();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v136 = v27;
  uint64_t v137 = v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v131 = (char *)&v111 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9467E8);
  MEMORY[0x270FA5388](v135);
  uint64_t v121 = (char *)&v111 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  int v33 = (char *)&v111 - v32;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
  MEMORY[0x270FA5388](v34 - 8);
  uint64_t v118 = (uint64_t)&v111 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v122 = (uint64_t)&v111 - v37;
  MEMORY[0x270FA5388](v38);
  uint64_t v120 = (uint64_t)&v111 - v39;
  MEMORY[0x270FA5388](v40);
  char v42 = (char *)&v111 - v41;
  MEMORY[0x270FA5388](v43);
  uint64_t v45 = (char *)&v111 - v44;
  MEMORY[0x270FA5388](v46);
  int64_t v48 = (char *)&v111 - v47;
  if ((sub_261B8C9F8() & 1) == 0) {
    goto LABEL_19;
  }
  unint64_t v117 = v9;
  uint64_t ViewModel = (int *)type metadata accessor for TrainingLoadViewModel(0);
  if ((MEMORY[0x263E4A8A0](a1 + ViewModel[5], a2 + ViewModel[5]) & 1) == 0
    || (sub_261B72DD4(*(void *)(a1 + ViewModel[6]), *(void *)(a2 + ViewModel[6])) & 1) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v50 = ViewModel[7];
  uint64_t v113 = a1;
  sub_2619F86F0(a1 + v50, (uint64_t)v48, &qword_26B416BD8);
  uint64_t v114 = ViewModel;
  uint64_t v51 = ViewModel[7];
  uint64_t v115 = a2;
  sub_2619F86F0(a2 + v51, (uint64_t)v45, &qword_26B416BD8);
  uint64_t v52 = (uint64_t)&v33[*(int *)(v135 + 48)];
  sub_2619F86F0((uint64_t)v48, (uint64_t)v33, &qword_26B416BD8);
  uint64_t v116 = v52;
  sub_2619F86F0((uint64_t)v45, v52, &qword_26B416BD8);
  uint64_t v53 = v136;
  uint64_t v55 = v137 + 48;
  int64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48);
  if (v54((uint64_t)v33, 1, v136) == 1)
  {
    sub_2619F8754((uint64_t)v45, &qword_26B416BD8);
    sub_2619F8754((uint64_t)v48, &qword_26B416BD8);
    if (v54(v116, 1, v53) == 1)
    {
      uint64_t v112 = v54;
      uint64_t v111 = v55;
      sub_2619F8754((uint64_t)v33, &qword_26B416BD8);
      goto LABEL_11;
    }
LABEL_9:
    long long v56 = &qword_26A9467E8;
    uint64_t v57 = (uint64_t)v33;
LABEL_18:
    sub_2619F8754(v57, v56);
    goto LABEL_19;
  }
  sub_2619F86F0((uint64_t)v33, (uint64_t)v42, &qword_26B416BD8);
  uint64_t v112 = v54;
  if (v54(v116, 1, v53) == 1)
  {
    sub_2619F8754((uint64_t)v45, &qword_26B416BD8);
    sub_2619F8754((uint64_t)v48, &qword_26B416BD8);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v42, v53);
    goto LABEL_9;
  }
  uint64_t v111 = v55;
  uint64_t v58 = v131;
  (*(void (**)(char *, uint64_t, uint64_t))(v137 + 32))(v131, v116, v53);
  sub_261ABC9B4(&qword_26A945338, MEMORY[0x263F42C08]);
  LODWORD(v116) = sub_261B8F0A8();
  int64_t v59 = *(void (**)(char *, uint64_t))(v137 + 8);
  v59(v58, v136);
  sub_2619F8754((uint64_t)v45, &qword_26B416BD8);
  sub_2619F8754((uint64_t)v48, &qword_26B416BD8);
  v59(v42, v136);
  sub_2619F8754((uint64_t)v33, &qword_26B416BD8);
  if ((v116 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_11:
  uint64_t v60 = v114;
  uint64_t v61 = v113;
  sub_2619F86F0(v113 + v114[8], (uint64_t)v26, (uint64_t *)&unk_26B416ED0);
  sub_2619F86F0(v115 + v60[8], (uint64_t)v23, (uint64_t *)&unk_26B416ED0);
  uint64_t v62 = v134;
  uint64_t v63 = v134 + *(int *)(v17 + 48);
  sub_2619F86F0((uint64_t)v26, v134, (uint64_t *)&unk_26B416ED0);
  uint64_t v64 = v62;
  sub_2619F86F0((uint64_t)v23, v63, (uint64_t *)&unk_26B416ED0);
  uint64_t v65 = v132;
  uint64_t v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48);
  if (v66(v62, 1, v132) == 1)
  {
    sub_2619F8754((uint64_t)v23, (uint64_t *)&unk_26B416ED0);
    uint64_t v64 = v134;
    sub_2619F8754((uint64_t)v26, (uint64_t *)&unk_26B416ED0);
    if (v66(v63, 1, v65) == 1)
    {
      sub_2619F8754(v64, (uint64_t *)&unk_26B416ED0);
      goto LABEL_22;
    }
LABEL_16:
    long long v56 = &qword_26A9467E0;
    goto LABEL_17;
  }
  uint64_t v67 = v130;
  sub_2619F86F0(v62, v130, (uint64_t *)&unk_26B416ED0);
  if (v66(v63, 1, v65) == 1)
  {
    sub_2619F8754((uint64_t)v23, (uint64_t *)&unk_26B416ED0);
    sub_2619F8754((uint64_t)v26, (uint64_t *)&unk_26B416ED0);
    (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v67, v65);
    goto LABEL_16;
  }
  uint64_t v70 = v67;
  uint64_t v71 = v133;
  uint64_t v72 = v61;
  uint64_t v73 = v125;
  (*(void (**)(char *, uint64_t, uint64_t))(v133 + 32))(v125, v63, v65);
  sub_261ABC9B4(&qword_26A9467F0, MEMORY[0x263F42DE0]);
  char v74 = sub_261B8F0A8();
  uint64_t v75 = *(void (**)(char *, uint64_t))(v71 + 8);
  uint64_t v76 = v73;
  uint64_t v61 = v72;
  uint64_t v60 = v114;
  v75(v76, v65);
  sub_2619F8754((uint64_t)v23, (uint64_t *)&unk_26B416ED0);
  sub_2619F8754((uint64_t)v26, (uint64_t *)&unk_26B416ED0);
  v75((char *)v70, v65);
  sub_2619F8754(v134, (uint64_t *)&unk_26B416ED0);
  if ((v74 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_22:
  uint64_t v77 = v60[9];
  uint64_t v78 = (double *)(v61 + v77);
  char v79 = *(unsigned char *)(v61 + v77 + 8);
  uint64_t v80 = v115;
  uint64_t v81 = (double *)(v115 + v77);
  int v82 = *(unsigned __int8 *)(v115 + v77 + 8);
  if (v79)
  {
    uint64_t v84 = v127;
    uint64_t v83 = v128;
    uint64_t v85 = (uint64_t)v126;
    uint64_t v86 = v129;
    if (!v82) {
      goto LABEL_19;
    }
  }
  else
  {
    if (*v78 != *v81) {
      LOBYTE(v82) = 1;
    }
    uint64_t v84 = v127;
    uint64_t v83 = v128;
    uint64_t v85 = (uint64_t)v126;
    uint64_t v86 = v129;
    if (v82) {
      goto LABEL_19;
    }
  }
  uint64_t v87 = v60[10];
  os_log_type_t v88 = (void *)(v61 + v87);
  uint64_t v89 = *(void *)(v61 + v87 + 8);
  char v90 = (void *)(v115 + v87);
  uint64_t v91 = v90[1];
  if (!v89)
  {
    if (v91) {
      goto LABEL_19;
    }
LABEL_35:
    if ((sub_261B72E1C(*(void *)(v61 + v60[11]), *(void *)(v80 + v60[11])) & 1) == 0) {
      goto LABEL_19;
    }
    sub_2619F86F0(v61 + v60[12], v85, &qword_26B416C30);
    sub_2619F86F0(v80 + v60[12], v86, &qword_26B416C30);
    uint64_t v93 = v124;
    uint64_t v94 = v124 + *(int *)(v123 + 48);
    sub_2619F86F0(v85, v124, &qword_26B416C30);
    uint64_t v64 = v93;
    sub_2619F86F0(v86, v94, &qword_26B416C30);
    uint64_t v95 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
    if (v95(v64, 1, v83) == 1)
    {
      sub_2619F8754(v86, &qword_26B416C30);
      uint64_t v64 = v124;
      sub_2619F8754(v85, &qword_26B416C30);
      if (v95(v94, 1, v83) == 1)
      {
        sub_2619F8754(v64, &qword_26B416C30);
LABEL_43:
        uint64_t v99 = v120;
        sub_2619F86F0(v61 + v60[13], v120, &qword_26B416BD8);
        uint64_t v100 = v122;
        sub_2619F86F0(v115 + v60[13], v122, &qword_26B416BD8);
        int v33 = v121;
        uint64_t v101 = (uint64_t)&v121[*(int *)(v135 + 48)];
        sub_2619F86F0(v99, (uint64_t)v121, &qword_26B416BD8);
        sub_2619F86F0(v100, v101, &qword_26B416BD8);
        uint64_t v102 = v136;
        unint64_t v103 = v112;
        if (v112((uint64_t)v33, 1, v136) == 1)
        {
          sub_2619F8754(v100, &qword_26B416BD8);
          sub_2619F8754(v99, &qword_26B416BD8);
          if (v103(v101, 1, v102) == 1)
          {
            sub_2619F8754((uint64_t)v33, &qword_26B416BD8);
LABEL_49:
            uint64_t v109 = v115;
            if (sub_261B8E848())
            {
              sub_261ABB3A8(*(void *)(v61 + v60[15]), *(void *)(v109 + v60[15]));
              if (v110)
              {
                sub_261ABBA48(*(void *)(v61 + v60[16]), *(void *)(v109 + v60[16]));
                return v68 & 1;
              }
            }
            goto LABEL_19;
          }
          goto LABEL_9;
        }
        uint64_t v104 = v118;
        sub_2619F86F0((uint64_t)v33, v118, &qword_26B416BD8);
        if (v103(v101, 1, v102) == 1)
        {
          sub_2619F8754(v100, &qword_26B416BD8);
          sub_2619F8754(v99, &qword_26B416BD8);
          (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v104, v102);
          goto LABEL_9;
        }
        uint64_t v105 = v137;
        unint64_t v106 = v131;
        (*(void (**)(char *, uint64_t, uint64_t))(v137 + 32))(v131, v101, v102);
        sub_261ABC9B4(&qword_26A945338, MEMORY[0x263F42C08]);
        char v107 = sub_261B8F0A8();
        uint64_t v108 = *(void (**)(char *, uint64_t))(v105 + 8);
        v108(v106, v102);
        sub_2619F8754(v122, &qword_26B416BD8);
        sub_2619F8754(v99, &qword_26B416BD8);
        v108((char *)v104, v102);
        sub_2619F8754((uint64_t)v33, &qword_26B416BD8);
        if (v107) {
          goto LABEL_49;
        }
LABEL_19:
        char v68 = 0;
        return v68 & 1;
      }
    }
    else
    {
      uint64_t v96 = (uint64_t)v117;
      sub_2619F86F0(v64, (uint64_t)v117, &qword_26B416C30);
      if (v95(v94, 1, v83) != 1)
      {
        uint64_t v97 = v119;
        sub_261A3D138(v94, v119);
        BOOL ViewModelV10ChartPointV2eeoiySbAE_AEtFZ_0 = _s9WorkoutUI21TrainingLoadViewModelV10ChartPointV2eeoiySbAE_AEtFZ_0(v96, v97);
        sub_261A3CA74(v97);
        sub_2619F8754(v129, &qword_26B416C30);
        sub_2619F8754(v85, &qword_26B416C30);
        sub_261A3CA74(v96);
        sub_2619F8754(v64, &qword_26B416C30);
        if (!ViewModelV10ChartPointV2eeoiySbAE_AEtFZ_0) {
          goto LABEL_19;
        }
        goto LABEL_43;
      }
      sub_2619F8754(v129, &qword_26B416C30);
      sub_2619F8754(v85, &qword_26B416C30);
      sub_261A3CA74(v96);
    }
    long long v56 = &qword_26A9467D8;
LABEL_17:
    uint64_t v57 = v64;
    goto LABEL_18;
  }
  if (!v91) {
    goto LABEL_19;
  }
  if (*v88 == *v90 && v89 == v91) {
    goto LABEL_35;
  }
  char v92 = sub_261B8FBA8();
  char v68 = 0;
  if (v92) {
    goto LABEL_35;
  }
  return v68 & 1;
}

uint64_t sub_261ABD8F4()
{
  return sub_261ABC9B4(&qword_26A9467A8, MEMORY[0x263F07490]);
}

uint64_t sub_261ABD93C()
{
  return sub_261ABC9B4(&qword_26A9467B0, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModel);
}

uint64_t *initializeBufferWithCopyOfBuffer for TrainingLoadViewModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_261B8CA08();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_261B8C9E8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_261B8C988();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    uint64_t v58 = v16;
    if (v17(v14, 1, v15))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_261B8CAD8();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v59 = v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B416ED0);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    uint64_t v26 = a3[9];
    uint64_t v27 = a3[10];
    uint64_t v28 = (char *)a1 + v26;
    uint64_t v29 = (char *)a2 + v26;
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = v29[8];
    uint64_t v30 = (uint64_t *)((char *)a1 + v27);
    uint64_t v31 = (uint64_t *)((char *)a2 + v27);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    uint64_t v34 = (char *)a1 + v33;
    uint64_t v35 = (char *)a2 + v33;
    uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    uint64_t v57 = *((void *)View - 1);
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, int *))(v57 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37(v35, 1, View))
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
      memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      uint64_t v39 = sub_261B8ADD8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v34, v35, v39);
      uint64_t v40 = View[5];
      uint64_t v41 = &v34[v40];
      char v42 = &v35[v40];
      uint64_t v43 = sub_261B8EEC8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      uint64_t v44 = View[6];
      uint64_t v45 = &v34[v44];
      uint64_t v46 = &v35[v44];
      *(void *)uint64_t v45 = *(void *)v46;
      v45[8] = v46[8];
      *(void *)&v34[View[7]] = *(void *)&v35[View[7]];
      uint64_t v47 = View[8];
      int64_t v48 = &v34[v47];
      uint64_t v49 = &v35[v47];
      *(void *)int64_t v48 = *(void *)v49;
      v48[8] = v49[8];
      uint64_t v50 = *(void (**)(char *, void, uint64_t, int *))(v57 + 56);
      swift_retain();
      v50(v34, 0, 1, View);
    }
    uint64_t v51 = a3[13];
    uint64_t v52 = (char *)a1 + v51;
    uint64_t v53 = (char *)a2 + v51;
    if (v17((char *)a2 + v51, 1, v59))
    {
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v52, v53, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v52, 0, 1, v59);
    }
    uint64_t v55 = a3[15];
    *(uint64_t *)((char *)a1 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(uint64_t *)((char *)a1 + v55) = *(uint64_t *)((char *)a2 + v55);
    *(uint64_t *)((char *)a1 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TrainingLoadViewModel(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_261B8CA08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_261B8C9E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = sub_261B8C988();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_261B8CAD8();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = a1 + a2[12];
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(View - 8) + 48))(v14, 1, View))
  {
    uint64_t v16 = sub_261B8ADD8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v14, v16);
    uint64_t v17 = v14 + *(int *)(View + 20);
    uint64_t v18 = sub_261B8EEC8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    swift_release();
  }
  uint64_t v19 = a1 + a2[13];
  if (!v10(v19, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v19, v8);
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrainingLoadViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8CA08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_261B8C9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_261B8C988();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  uint64_t v56 = v15;
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  uint64_t v21 = sub_261B8CAD8();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v57 = v14;
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B416ED0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v24 = a3[9];
  uint64_t v25 = a3[10];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = (void *)(a1 + v25);
  uint64_t v29 = (void *)(a2 + v25);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v32 = (char *)(a1 + v31);
  uint64_t v33 = (char *)(a2 + v31);
  uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v55 = *((void *)View - 1);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, int *))(v55 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35(v33, 1, View))
  {
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    uint64_t v37 = sub_261B8ADD8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v32, v33, v37);
    uint64_t v38 = View[5];
    uint64_t v39 = &v32[v38];
    uint64_t v40 = &v33[v38];
    uint64_t v41 = sub_261B8EEC8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
    uint64_t v42 = View[6];
    uint64_t v43 = &v32[v42];
    uint64_t v44 = &v33[v42];
    *(void *)uint64_t v43 = *(void *)v44;
    v43[8] = v44[8];
    *(void *)&v32[View[7]] = *(void *)&v33[View[7]];
    uint64_t v45 = View[8];
    uint64_t v46 = &v32[v45];
    uint64_t v47 = &v33[v45];
    *(void *)uint64_t v46 = *(void *)v47;
    v46[8] = v47[8];
    int64_t v48 = *(void (**)(char *, void, uint64_t, int *))(v55 + 56);
    swift_retain();
    v48(v32, 0, 1, View);
  }
  uint64_t v49 = a3[13];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (const void *)(a2 + v49);
  if (v16((const void *)(a2 + v49), 1, v57))
  {
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v56 + 16))(v50, v51, v57);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v50, 0, 1, v57);
  }
  uint64_t v53 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v53) = *(void *)(a2 + v53);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrainingLoadViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8CA08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_261B8C9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_261B8C988();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  char v79 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v16;
  int v18 = v16(v13, 1, v14);
  uint64_t v80 = v15;
  uint64_t v81 = v14;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = sub_261B8CAD8();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B416ED0);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v21, v22, v23);
LABEL_13:
  uint64_t v29 = a3[9];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = (uint64_t *)(a2 + v29);
  uint64_t v32 = *v31;
  *(unsigned char *)(v30 + 8) = *((unsigned char *)v31 + 8);
  *(void *)uint64_t v30 = v32;
  uint64_t v33 = a3[10];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  void *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[12];
  uint64_t v37 = (char *)(a1 + v36);
  uint64_t v38 = (char *)(a2 + v36);
  uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v40 = *((void *)View - 1);
  uint64_t v41 = *(uint64_t (**)(char *, uint64_t, int *))(v40 + 48);
  int v42 = v41(v37, 1, View);
  int v43 = v41(v38, 1, View);
  if (v42)
  {
    if (!v43)
    {
      uint64_t v44 = sub_261B8ADD8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v37, v38, v44);
      uint64_t v45 = View[5];
      uint64_t v46 = &v37[v45];
      uint64_t v47 = &v38[v45];
      uint64_t v48 = sub_261B8EEC8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
      uint64_t v49 = View[6];
      uint64_t v50 = &v37[v49];
      uint64_t v51 = &v38[v49];
      char v52 = v51[8];
      *(void *)uint64_t v50 = *(void *)v51;
      v50[8] = v52;
      *(void *)&v37[View[7]] = *(void *)&v38[View[7]];
      uint64_t v53 = View[8];
      uint64_t v54 = &v37[v53];
      uint64_t v55 = &v38[v53];
      char v56 = v55[8];
      *(void *)uint64_t v54 = *(void *)v55;
      v54[8] = v56;
      uint64_t v57 = *(void (**)(char *, void, uint64_t, int *))(v40 + 56);
      swift_retain();
      v57(v37, 0, 1, View);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v43)
  {
    sub_261A3CA74((uint64_t)v37);
LABEL_18:
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
    memcpy(v37, v38, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v66 = sub_261B8ADD8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 24))(v37, v38, v66);
  uint64_t v67 = View[5];
  char v68 = &v37[v67];
  uint64_t v69 = &v38[v67];
  uint64_t v70 = sub_261B8EEC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 24))(v68, v69, v70);
  uint64_t v71 = View[6];
  uint64_t v72 = &v37[v71];
  uint64_t v73 = &v38[v71];
  char v74 = v73[8];
  *(void *)uint64_t v72 = *(void *)v73;
  v72[8] = v74;
  *(void *)&v37[View[7]] = *(void *)&v38[View[7]];
  swift_retain();
  swift_release();
  uint64_t v75 = View[8];
  uint64_t v76 = &v37[v75];
  uint64_t v77 = &v38[v75];
  uint64_t v78 = *(void *)v77;
  v76[8] = v77[8];
  *(void *)uint64_t v76 = v78;
LABEL_19:
  uint64_t v59 = a3[13];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = (const void *)(a2 + v59);
  int v62 = v79(a1 + v59, 1, v81);
  int v63 = v79((uint64_t)v61, 1, v81);
  if (!v62)
  {
    if (!v63)
    {
      (*(void (**)(void *, const void *, uint64_t))(v80 + 24))(v60, v61, v81);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v80 + 8))(v60, v81);
    goto LABEL_24;
  }
  if (v63)
  {
LABEL_24:
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, const void *, uint64_t))(v80 + 16))(v60, v61, v81);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(v60, 0, 1, v81);
LABEL_25:
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TrainingLoadViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8CA08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_261B8C9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_261B8C988();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v54 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  if (v54(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[8];
  int v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = sub_261B8CAD8();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B416ED0);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  uint64_t v27 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v28 = (char *)(a1 + v27);
  uint64_t v29 = (char *)(a2 + v27);
  uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v31 = *((void *)View - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v31 + 48))(v29, 1, View))
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v33 = sub_261B8ADD8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v28, v29, v33);
    uint64_t v34 = View[5];
    uint64_t v53 = v15;
    uint64_t v35 = v14;
    uint64_t v36 = &v28[v34];
    uint64_t v37 = &v29[v34];
    uint64_t v38 = sub_261B8EEC8();
    uint64_t v39 = v36;
    uint64_t v14 = v35;
    uint64_t v40 = v37;
    uint64_t v15 = v53;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v39, v40, v38);
    uint64_t v41 = View[6];
    int v42 = &v28[v41];
    int v43 = &v29[v41];
    *(void *)int v42 = *(void *)v43;
    v42[8] = v43[8];
    *(void *)&v28[View[7]] = *(void *)&v29[View[7]];
    uint64_t v44 = View[8];
    uint64_t v45 = &v28[v44];
    uint64_t v46 = &v29[v44];
    *(void *)uint64_t v45 = *(void *)v46;
    v45[8] = v46[8];
    (*(void (**)(char *, void, uint64_t, int *))(v31 + 56))(v28, 0, 1, View);
  }
  uint64_t v47 = a3[13];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (const void *)(a2 + v47);
  if (v54((const void *)(a2 + v47), 1, v14))
  {
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v48, v49, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v48, 0, 1, v14);
  }
  uint64_t v51 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v51) = *(void *)(a2 + v51);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  return a1;
}

uint64_t assignWithTake for TrainingLoadViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8CA08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_261B8C9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_261B8C988();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  uint64_t v75 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v16;
  int v18 = v16(v13, 1, v14);
  uint64_t v76 = v15;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = sub_261B8CAD8();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B416ED0);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v21, v22, v23);
LABEL_13:
  uint64_t v29 = a3[9];
  uint64_t v30 = a3[10];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(void *)uint64_t v31 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  uint64_t v33 = (void *)(a1 + v30);
  uint64_t v34 = (uint64_t *)(a2 + v30);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  *uint64_t v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[12];
  uint64_t v38 = (char *)(a1 + v37);
  uint64_t v39 = (char *)(a2 + v37);
  uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v41 = *((void *)View - 1);
  int v42 = *(uint64_t (**)(char *, uint64_t, int *))(v41 + 48);
  int v43 = v42(v38, 1, View);
  int v44 = v42(v39, 1, View);
  if (v43)
  {
    if (!v44)
    {
      uint64_t v45 = sub_261B8ADD8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v38, v39, v45);
      uint64_t v46 = View[5];
      uint64_t v47 = &v38[v46];
      uint64_t v48 = &v39[v46];
      uint64_t v49 = sub_261B8EEC8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      uint64_t v50 = View[6];
      uint64_t v51 = &v38[v50];
      char v52 = &v39[v50];
      *(void *)uint64_t v51 = *(void *)v52;
      v51[8] = v52[8];
      *(void *)&v38[View[7]] = *(void *)&v39[View[7]];
      uint64_t v53 = View[8];
      uint64_t v54 = &v38[v53];
      uint64_t v55 = &v39[v53];
      *(void *)uint64_t v54 = *(void *)v55;
      v54[8] = v55[8];
      (*(void (**)(char *, void, uint64_t, int *))(v41 + 56))(v38, 0, 1, View);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v44)
  {
    sub_261A3CA74((uint64_t)v38);
LABEL_18:
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
    memcpy(v38, v39, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v64 = sub_261B8ADD8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 40))(v38, v39, v64);
  uint64_t v65 = View[5];
  uint64_t v66 = &v38[v65];
  uint64_t v67 = &v39[v65];
  uint64_t v68 = sub_261B8EEC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 40))(v66, v67, v68);
  uint64_t v69 = View[6];
  uint64_t v70 = &v38[v69];
  uint64_t v71 = &v39[v69];
  *(void *)uint64_t v70 = *(void *)v71;
  v70[8] = v71[8];
  *(void *)&v38[View[7]] = *(void *)&v39[View[7]];
  swift_release();
  uint64_t v72 = View[8];
  uint64_t v73 = &v38[v72];
  char v74 = &v39[v72];
  *(void *)uint64_t v73 = *(void *)v74;
  v73[8] = v74[8];
LABEL_19:
  uint64_t v57 = a3[13];
  uint64_t v58 = (void *)(a1 + v57);
  uint64_t v59 = (const void *)(a2 + v57);
  int v60 = v75(a1 + v57, 1, v14);
  int v61 = v75((uint64_t)v59, 1, v14);
  if (!v60)
  {
    if (!v61)
    {
      (*(void (**)(void *, const void *, uint64_t))(v76 + 40))(v58, v59, v14);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v76 + 8))(v58, v14);
    goto LABEL_24;
  }
  if (v61)
  {
LABEL_24:
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
    memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, const void *, uint64_t))(v76 + 32))(v58, v59, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v76 + 56))(v58, 0, 1, v14);
LABEL_25:
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_release();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261ABFC40);
}

uint64_t sub_261ABFC40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8CA08();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_261B8C9E8();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_13:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_14;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[6]);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
    if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
    {
      uint64_t v8 = v16;
      uint64_t v12 = *(void *)(v16 - 8);
      uint64_t v13 = a3[7];
      goto LABEL_13;
    }
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B416ED0);
    if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
    {
      uint64_t v8 = v17;
      uint64_t v12 = *(void *)(v17 - 8);
      uint64_t v13 = a3[8];
      goto LABEL_13;
    }
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
    uint64_t v20 = v18;
    uint64_t v21 = a1 + a3[12];
    return v19(v21, a2, v20);
  }
}

uint64_t storeEnumTagSinglePayload for TrainingLoadViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261ABFE78);
}

uint64_t sub_261ABFE78(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_261B8CA08();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_261B8C9E8();
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6]) = (a2 - 1);
    return result;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B416ED0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[12];
  return v19(v21, a2, a2, v20);
}

void sub_261AC009C()
{
  sub_261B8CA08();
  if (v0 <= 0x3F)
  {
    sub_261B8C9E8();
    if (v1 <= 0x3F)
    {
      sub_261AC02AC(319, &qword_26B416DE8, MEMORY[0x263F42C08]);
      if (v2 <= 0x3F)
      {
        sub_261AC02AC(319, &qword_26B416DF0, MEMORY[0x263F42DE0]);
        if (v3 <= 0x3F)
        {
          sub_261AC02AC(319, (unint64_t *)&qword_26B416E08, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModel.ChartPoint);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_261AC02AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_261B8F6D8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TrainingLoadViewModel.ChartPoint(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_261B8ADD8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_261B8EEC8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
  }
  swift_retain();
  return a1;
}

uint64_t destroy for TrainingLoadViewModel.ChartPoint(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_261B8EEC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return swift_release();
}

uint64_t initializeWithCopy for TrainingLoadViewModel.ChartPoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_261B8EEC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TrainingLoadViewModel.ChartPoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_261B8EEC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = v14;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  *(unsigned char *)(v16 + 8) = *((unsigned char *)v17 + 8);
  *(void *)uint64_t v16 = v18;
  return a1;
}

uint64_t initializeWithTake for TrainingLoadViewModel.ChartPoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_261B8EEC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  return a1;
}

uint64_t assignWithTake for TrainingLoadViewModel.ChartPoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_261B8EEC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_release();
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadViewModel.ChartPoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261AC0940);
}

uint64_t sub_261AC0940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8ADD8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_261B8EEC8();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainingLoadViewModel.ChartPoint(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261AC0A68);
}

uint64_t sub_261AC0A68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_261B8ADD8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_261B8EEC8();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_261AC0B78()
{
  uint64_t result = sub_261B8ADD8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_261B8EEC8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_261AC0C5C()
{
  unint64_t result = qword_26A9467B8;
  if (!qword_26A9467B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9467C0);
    sub_261ABC7F8();
    sub_2619F8AB8(&qword_26A946760, &qword_26A946750);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9467B8);
  }
  return result;
}

unint64_t sub_261AC0D00()
{
  unint64_t result = qword_26A9467C8;
  if (!qword_26A9467C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946770);
    sub_261AC0D74();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9467C8);
  }
  return result;
}

unint64_t sub_261AC0D74()
{
  unint64_t result = qword_26A9467D0;
  if (!qword_26A9467D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946780);
    sub_261ABC908();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9467D0);
  }
  return result;
}

uint64_t HKWorkout.makeDownhillRuns(healthStore:completion:)(void *a1, uint64_t (*a2)(uint64_t, void))
{
  id v5 = objc_msgSend(v2, sel_downhillRunEvents);
  if (!v5) {
    return a2(0, 0);
  }
  uint64_t v6 = v5;
  sub_261A0CCCC(0, &qword_26A943798);
  unint64_t v7 = sub_261B8F2D8();

  id v8 = v2;
  id v9 = a1;
  uint64_t v10 = sub_261AC1C10(v7, v8, v9);
  swift_bridgeObjectRelease();

  a2(v10, 0);
  return swift_bridgeObjectRelease();
}

id sub_261AC0EDC(void *a1, uint64_t a2)
{
  return sub_261AC1664(a1, a2, HKWorkout.downhillRunEvents.getter);
}

uint64_t HKWorkout.downhillRunEvents.getter()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_261B8A858();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946820);
  double v7 = MEMORY[0x270FA5388](v6 - 8);
  id v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(v1, sel_workoutActivityType, v7);
  if (v10 != (id)67)
  {
    uint64_t v11 = 0;
    if (v10 != (id)61) {
      return v11;
    }
  }
  id v12 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v13 = (void *)sub_261B8F0B8();
  unsigned __int8 v14 = objc_msgSend(v12, sel_BOOLForKey_, v13);

  if ((v14 & 1) == 0)
  {
    uint64_t v18 = (char *)objc_msgSend(v1, sel_workoutEvents);
    if (!v18) {
      return 0;
    }
    id v9 = v18;
    sub_261A0CCCC(0, &qword_26A943798);
    uint64_t v2 = sub_261B8F2D8();

    uint64_t v39 = MEMORY[0x263F8EE78];
    if ((unint64_t)v2 >> 62)
    {
      if (v2 < 0) {
        id v9 = (char *)v2;
      }
      else {
        id v9 = (char *)(v2 & 0xFFFFFFFFFFFFFF8);
      }
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_261B8F9D8();
      swift_bridgeObjectRelease();
      if (v19) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v19)
      {
LABEL_10:
        if (v19 < 1)
        {
          __break(1u);
          goto LABEL_46;
        }
        uint64_t v20 = 0;
        uint64_t v21 = &selRef_album;
        v35[1] = *MEMORY[0x263F3F0F0];
        _OWORD v35[2] = MEMORY[0x263F8EE58] + 8;
        while (1)
        {
          if ((v2 & 0xC000000000000001) != 0) {
            id v22 = (id)MEMORY[0x263E4D7B0](v20, v2);
          }
          else {
            id v22 = *(id *)(v2 + 8 * v20 + 32);
          }
          uint64_t v23 = v22;
          if ([v22 v21[219]] == (id)7)
          {
            id v24 = objc_msgSend(v23, sel_metadata);
            if (v24)
            {
              uint64_t v25 = v24;
              uint64_t v26 = sub_261B8EFF8();

              uint64_t v27 = sub_261B8F0F8();
              if (*(void *)(v26 + 16) && (unint64_t v29 = sub_261ACB228(v27, v28), (v30 & 1) != 0))
              {
                sub_261A0CC60(*(void *)(v26 + 56) + 32 * v29, (uint64_t)&v37);
              }
              else
              {
                long long v37 = 0u;
                long long v38 = 0u;
              }
              swift_bridgeObjectRelease();
              if (!*((void *)&v38 + 1))
              {
                sub_2619FC33C((uint64_t)&v37);
LABEL_30:
                id v31 = 0;
LABEL_31:
                uint64_t v32 = sub_261AC5830(v26);
                if (qword_26A942E88 != -1) {
                  swift_once();
                }
                uint64_t v33 = swift_bridgeObjectRetain();
                char v34 = sub_261AC1A80(v33, v32);
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                if (v34)
                {
                }
                else
                {
                  sub_261B8F948();
                  sub_261B8F978();
                  sub_261B8F988();
                  sub_261B8F958();
                }
                uint64_t v21 = &selRef_album;
                goto LABEL_14;
              }
              sub_261A0CCCC(0, (unint64_t *)&qword_26A947430);
              if ((swift_dynamicCast() & 1) == 0) {
                goto LABEL_30;
              }
              id v31 = v36;
              if (objc_msgSend(v36, sel_integerValue) != (id)1 && objc_msgSend(v31, sel_integerValue) != (id)3) {
                goto LABEL_31;
              }
              swift_bridgeObjectRelease();
            }
          }

LABEL_14:
          if (v19 == ++v20)
          {
            swift_bridgeObjectRelease();
            return v39;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  id v15 = objc_msgSend(v1, sel_fiui_dateInterval);
  if (v15)
  {
    uint64_t v16 = v15;
    sub_261B8A808();

    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v5, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v9, 0, 1, v2);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2);
    if (result != 1)
    {
      uint64_t v11 = _sSo9HKWorkoutC9WorkoutUIE21fakeDownhillRunEvents12dateIntervalSaySo0A5EventCG10Foundation04DateI0V_tFZ_0((uint64_t)v9);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      return v11;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v9, 1, 1, v2);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t HKWorkoutEvent.isDownhillRun.getter()
{
  if (objc_msgSend(v0, sel_type) != (id)7) {
    goto LABEL_10;
  }
  id v1 = objc_msgSend(v0, sel_metadata);
  if (!v1) {
    goto LABEL_10;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_261B8EFF8();

  uint64_t v4 = sub_261B8F0F8();
  if (!*(void *)(v3 + 16) || (unint64_t v6 = sub_261ACB228(v4, v5), (v7 & 1) == 0))
  {
    long long v15 = 0u;
    long long v16 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_261A0CC60(*(void *)(v3 + 56) + 32 * v6, (uint64_t)&v15);
  swift_bridgeObjectRelease();
  if (!*((void *)&v16 + 1))
  {
LABEL_12:
    sub_2619FC33C((uint64_t)&v15);
    goto LABEL_13;
  }
  sub_261A0CCCC(0, (unint64_t *)&qword_26A947430);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    uint64_t v8 = 0;
    goto LABEL_14;
  }
  uint64_t v8 = v14;
  if (objc_msgSend(v14, sel_integerValue) == (id)1 || objc_msgSend(v14, sel_integerValue) == (id)3)
  {
    swift_bridgeObjectRelease();

LABEL_10:
    char v9 = 0;
    return v9 & 1;
  }
LABEL_14:
  uint64_t v10 = sub_261AC5830(v3);
  if (qword_26A942E88 != -1) {
    swift_once();
  }
  uint64_t v11 = swift_bridgeObjectRetain();
  char v12 = sub_261AC1A80(v11, v10);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  char v9 = v12 ^ 1;
  return v9 & 1;
}

id sub_261AC164C(void *a1, uint64_t a2)
{
  return sub_261AC1664(a1, a2, (uint64_t (*)(void))HKWorkoutBuilder.downhillRunEvents.getter);
}

id sub_261AC1664(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4 = a1;
  uint64_t v5 = a3();

  if (v5)
  {
    sub_261A0CCCC(0, &qword_26A943798);
    unint64_t v6 = (void *)sub_261B8F2C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v6 = 0;
  }
  return v6;
}

void HKWorkoutBuilder.downhillRunEvents.getter()
{
  id v1 = objc_msgSend(v0, sel_workoutConfiguration);
  id v2 = objc_msgSend(v1, sel_activityType);

  if (v2 != (id)67 && v2 != (id)61) {
    return;
  }
  id v3 = objc_msgSend(v0, sel_workoutEvents);
  sub_261A0CCCC(0, &qword_26A943798);
  unint64_t v4 = sub_261B8F2D8();

  uint64_t v27 = MEMORY[0x263F8EE78];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_261B8F9D8();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_5;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    goto LABEL_35;
  }
LABEL_5:
  if (v5 >= 1)
  {
    uint64_t v6 = 0;
    unint64_t v7 = v4 & 0xC000000000000001;
    uint64_t v8 = &selRef_album;
    unint64_t v23 = v4 & 0xC000000000000001;
    while (1)
    {
      if (v7) {
        id v9 = (id)MEMORY[0x263E4D7B0](v6, v4);
      }
      else {
        id v9 = *(id *)(v4 + 8 * v6 + 32);
      }
      uint64_t v10 = v9;
      if (objc_msgSend(v9, v8[219], v23) == (id)7)
      {
        id v11 = objc_msgSend(v10, sel_metadata);
        if (v11)
        {
          char v12 = v11;
          uint64_t v13 = sub_261B8EFF8();

          uint64_t v14 = sub_261B8F0F8();
          if (*(void *)(v13 + 16) && (unint64_t v16 = sub_261ACB228(v14, v15), (v17 & 1) != 0))
          {
            sub_261A0CC60(*(void *)(v13 + 56) + 32 * v16, (uint64_t)&v25);
          }
          else
          {
            long long v25 = 0u;
            long long v26 = 0u;
          }
          swift_bridgeObjectRelease();
          if (!*((void *)&v26 + 1))
          {
            sub_2619FC33C((uint64_t)&v25);
LABEL_25:
            uint64_t v18 = 0;
LABEL_26:
            uint64_t v19 = v8;
            uint64_t v20 = sub_261AC5830(v13);
            if (qword_26A942E88 != -1) {
              swift_once();
            }
            uint64_t v21 = swift_bridgeObjectRetain();
            char v22 = sub_261AC1A80(v21, v20);
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            if (v22)
            {
            }
            else
            {
              sub_261B8F948();
              sub_261B8F978();
              sub_261B8F988();
              sub_261B8F958();
            }
            uint64_t v8 = v19;
            unint64_t v7 = v23;
            goto LABEL_9;
          }
          sub_261A0CCCC(0, (unint64_t *)&qword_26A947430);
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_25;
          }
          uint64_t v18 = v24;
          if (objc_msgSend(v24, sel_integerValue) != (id)1 && objc_msgSend(v24, sel_integerValue) != (id)3) {
            goto LABEL_26;
          }
          swift_bridgeObjectRelease();
        }
      }

LABEL_9:
      if (v5 == ++v6)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
  __break(1u);
}

uint64_t sub_261AC1A80(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 1;
  }
  uint64_t v22 = a1 + 32;
  uint64_t v4 = a2 + 56;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v2; ++i)
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v6 = (uint64_t *)(v22 + 16 * i);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_261B8FC98();
      swift_bridgeObjectRetain();
      sub_261B8F188();
      uint64_t v9 = sub_261B8FCE8();
      uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v11 = v9 & ~v10;
      if ((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
      {
        uint64_t v12 = *(void *)(a2 + 48);
        uint64_t v13 = (void *)(v12 + 16 * v11);
        BOOL v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_261B8FBA8() & 1) != 0)
        {
LABEL_22:
          swift_bridgeObjectRelease();
          uint64_t v20 = 0;
          goto LABEL_23;
        }
        uint64_t v15 = ~v10;
        for (unint64_t j = v11 + 1; ; unint64_t j = v17 + 1)
        {
          uint64_t v17 = j & v15;
          if (((*(void *)(v4 + (((j & v15) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v15)) & 1) == 0) {
            break;
          }
          uint64_t v18 = (void *)(v12 + 16 * v17);
          BOOL v19 = *v18 == v8 && v18[1] == v7;
          if (v19 || (sub_261B8FBA8() & 1) != 0) {
            goto LABEL_22;
          }
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v20 = 1;
LABEL_23:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_261AC1C10(unint64_t a1, void *a2, void *a3)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x263F8EE78];
    if (!v6) {
      break;
    }
    uint64_t v11 = MEMORY[0x263F8EE78];
    uint64_t result = sub_261B8F968();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = 0;
    while (v6 != v8)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x263E4D7B0](v8, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      ++v8;
      _s9WorkoutUI11DownhillRunC04makecD008downhillD5Event7workout11healthStoreACSo09HKWorkoutG0C_So0K0CSo08HKHealthJ0CtFZ_0(v9, a2, a3);

      sub_261B8F948();
      sub_261B8F978();
      sub_261B8F988();
      sub_261B8F958();
      if (v6 == v8) {
        return v11;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_261B8F9D8();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _sSo9HKWorkoutC9WorkoutUIE21fakeDownhillRunEvents12dateIntervalSaySo0A5EventCG10Foundation04DateI0V_tFZ_0(uint64_t a1)
{
  uint64_t v121 = sub_261B8A858();
  uint64_t v125 = *(void *)(v121 - 8);
  MEMORY[0x270FA5388](v121);
  uint64_t v119 = (char *)&v88 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_261B8ADD8();
  uint64_t v3 = *(void *)(v124 - 8);
  MEMORY[0x270FA5388](v124);
  uint64_t v104 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v123 = (char *)&v88 - v6;
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v88 - v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v120 = (char *)&v88 - v11;
  sub_261B8A848();
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_mileUnit);
  id v14 = objc_msgSend(v12, sel_hourUnit);
  id v15 = objc_msgSend(v13, sel_unitDividedByUnit_, v14);
  id v105 = v15;

  unint64_t v16 = self;
  id v103 = objc_msgSend(v16, sel_quantityWithUnit_doubleValue_, v15, 11.0);
  id v108 = objc_msgSend(v16, sel_quantityWithUnit_doubleValue_, v15, 12.0);
  id v107 = objc_msgSend(v16, sel_quantityWithUnit_doubleValue_, v15, 24.0);
  id v101 = objc_msgSend(v16, sel_quantityWithUnit_doubleValue_, v15, 29.0);
  id v17 = objc_msgSend(v12, sel_percentUnit);
  id v98 = objc_msgSend(v16, sel_quantityWithUnit_doubleValue_, v17, 15.0);

  id v18 = objc_msgSend(v12, sel_percentUnit);
  id v96 = objc_msgSend(v16, sel_quantityWithUnit_doubleValue_, v18, 35.0);

  id v19 = objc_msgSend(v12, sel_percentUnit);
  id v102 = objc_msgSend(v16, sel_quantityWithUnit_doubleValue_, v19, 45.0);

  id v20 = objc_msgSend(v12, sel_meterUnit);
  id v21 = objc_msgSend(v16, sel_quantityWithUnit_doubleValue_, v20, 472.0);

  id v22 = objc_msgSend(v12, sel_meterUnit);
  id v94 = objc_msgSend(v16, sel_quantityWithUnit_doubleValue_, v22, 491.0);

  id v23 = objc_msgSend(v12, sel_meterUnit);
  id v100 = objc_msgSend(v16, sel_quantityWithUnit_doubleValue_, v23, 421.0);

  id v24 = objc_msgSend(v12, sel_meterUnit);
  id v25 = objc_msgSend(v16, sel_quantityWithUnit_doubleValue_, v24, 5.0);

  uint64_t v118 = v9;
  uint64_t v91 = a1;
  sub_261B8A838();
  long long v26 = v120;
  sub_261B8AD38();
  uint64_t v122 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v106 = v3 + 8;
  uint64_t v27 = v124;
  v122(v9, v124);
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  id v116 = (id)(v3 + 16);
  unint64_t v117 = v28;
  v28(v9, v26, v27);
  unint64_t v29 = v119;
  sub_261B8A828();
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946828);
  uint64_t inited = swift_initStackObject();
  long long v114 = xmmword_261B94FD0;
  *(_OWORD *)(inited + 16) = xmmword_261B94FD0;
  uint64_t v113 = *MEMORY[0x263F09A40];
  *(void *)(inited + 32) = sub_261B8F0F8();
  *(void *)(inited + 40) = v31;
  uint64_t v32 = sub_261A0CCCC(0, (unint64_t *)&qword_26A9437A8);
  *(void *)(inited + 72) = v32;
  id v33 = v108;
  *(void *)(inited + 48) = v108;
  uint64_t v112 = *MEMORY[0x263F09AB8];
  *(void *)(inited + 80) = sub_261B8F0F8();
  *(void *)(inited + 88) = v34;
  *(void *)(inited + 120) = v32;
  uint64_t v35 = v107;
  *(void *)(inited + 96) = v107;
  uint64_t v111 = *MEMORY[0x263F09A10];
  *(void *)(inited + 128) = sub_261B8F0F8();
  *(void *)(inited + 136) = v36;
  *(void *)(inited + 168) = v32;
  id v37 = v98;
  *(void *)(inited + 144) = v98;
  uint64_t v110 = *MEMORY[0x263F09A70];
  *(void *)(inited + 176) = sub_261B8F0F8();
  *(void *)(inited + 184) = v38;
  *(void *)(inited + 216) = v32;
  *(void *)(inited + 192) = v21;
  uint64_t v109 = *MEMORY[0x263F09A68];
  *(void *)(inited + 224) = sub_261B8F0F8();
  *(void *)(inited + 232) = v39;
  *(void *)(inited + 264) = v32;
  *(void *)(inited + 240) = v25;
  id v99 = v33;
  id v93 = v35;
  id v98 = v37;
  id v97 = v21;
  id v40 = v25;
  sub_261AC5040(inited);
  uint64_t v41 = (void *)sub_261B8A7F8();
  uint64_t v92 = MEMORY[0x263F8EE58] + 8;
  int v42 = (void *)sub_261B8EFE8();
  swift_bridgeObjectRelease();
  id v108 = self;
  id v95 = objc_msgSend(v108, sel_workoutEventWithType_dateInterval_metadata_, 7, v41, v42);

  int v43 = *(void (**)(void, void))(v125 + 8);
  v125 += 8;
  id v107 = v43;
  uint64_t v44 = v121;
  v43(v29, v121);
  uint64_t v45 = v123;
  sub_261B8A838();
  uint64_t v46 = v118;
  sub_261B8AD38();
  uint64_t v47 = v124;
  v122(v45, v124);
  v117(v45, v46, v47);
  sub_261B8A828();
  uint64_t v48 = swift_initStackObject();
  *(_OWORD *)(v48 + 16) = v114;
  *(void *)(v48 + 32) = sub_261B8F0F8();
  *(void *)(v48 + 40) = v49;
  *(void *)(v48 + 72) = v32;
  uint64_t v50 = v93;
  *(void *)(v48 + 48) = v93;
  *(void *)(v48 + 80) = sub_261B8F0F8();
  *(void *)(v48 + 88) = v51;
  *(void *)(v48 + 120) = v32;
  id v52 = v101;
  *(void *)(v48 + 96) = v101;
  *(void *)(v48 + 128) = sub_261B8F0F8();
  *(void *)(v48 + 136) = v53;
  *(void *)(v48 + 168) = v32;
  id v54 = v96;
  *(void *)(v48 + 144) = v96;
  *(void *)(v48 + 176) = sub_261B8F0F8();
  *(void *)(v48 + 184) = v55;
  *(void *)(v48 + 216) = v32;
  id v56 = v94;
  *(void *)(v48 + 192) = v94;
  *(void *)(v48 + 224) = sub_261B8F0F8();
  *(void *)(v48 + 232) = v57;
  *(void *)(v48 + 264) = v32;
  *(void *)(v48 + 240) = v40;
  id v89 = v50;
  id v90 = v40;
  id v101 = v52;
  id v96 = v54;
  id v94 = v56;
  sub_261AC5040(v48);
  uint64_t v58 = v119;
  uint64_t v59 = (void *)sub_261B8A7F8();
  int v60 = (void *)sub_261B8EFE8();
  swift_bridgeObjectRelease();
  id v93 = objc_msgSend(v108, sel_workoutEventWithType_dateInterval_metadata_, 7, v59, v60);

  int v61 = v58;
  ((void (*)(char *, uint64_t))v107)(v58, v44);
  uint64_t v62 = v104;
  sub_261B8A838();
  int v63 = v123;
  sub_261B8AD38();
  uint64_t v64 = v124;
  v122(v62, v124);
  v117(v62, v63, v64);
  sub_261B8A828();
  uint64_t v65 = swift_initStackObject();
  *(_OWORD *)(v65 + 16) = v114;
  *(void *)(v65 + 32) = sub_261B8F0F8();
  *(void *)(v65 + 40) = v66;
  *(void *)(v65 + 72) = v32;
  uint64_t v67 = v103;
  *(void *)(v65 + 48) = v103;
  *(void *)(v65 + 80) = sub_261B8F0F8();
  *(void *)(v65 + 88) = v68;
  *(void *)(v65 + 120) = v32;
  uint64_t v69 = v89;
  *(void *)(v65 + 96) = v89;
  *(void *)(v65 + 128) = sub_261B8F0F8();
  *(void *)(v65 + 136) = v70;
  *(void *)(v65 + 168) = v32;
  uint64_t v71 = v102;
  *(void *)(v65 + 144) = v102;
  *(void *)(v65 + 176) = sub_261B8F0F8();
  *(void *)(v65 + 184) = v72;
  *(void *)(v65 + 216) = v32;
  uint64_t v73 = v100;
  *(void *)(v65 + 192) = v100;
  *(void *)(v65 + 224) = sub_261B8F0F8();
  *(void *)(v65 + 232) = v74;
  *(void *)(v65 + 264) = v32;
  uint64_t v75 = v90;
  *(void *)(v65 + 240) = v90;
  unint64_t v117 = v69;
  id v76 = v75;
  id v116 = v67;
  id v77 = v71;
  id v78 = v73;
  sub_261AC5040(v65);
  char v79 = (void *)sub_261B8A7F8();
  uint64_t v80 = (void *)sub_261B8EFE8();
  swift_bridgeObjectRelease();
  id v81 = objc_msgSend(v108, sel_workoutEventWithType_dateInterval_metadata_, 7, v79, v80);

  ((void (*)(char *, uint64_t))v107)(v61, v121);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9443E8);
  uint64_t v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = xmmword_261B96F60;
  id v83 = v93;
  *(void *)(v82 + 32) = v95;
  *(void *)(v82 + 40) = v83;
  *(void *)(v82 + 48) = v81;
  uint64_t v126 = v82;
  sub_261B8F2E8();
  uint64_t v84 = v126;

  uint64_t v85 = v124;
  uint64_t v86 = v122;
  v122(v123, v124);
  v86(v118, v85);
  v86(v120, v85);
  return v84;
}

uint64_t sub_261AC28AC@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v38 = a1;
  uint64_t v3 = sub_261B8D748();
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  uint64_t v34 = (double *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946868) - 8;
  MEMORY[0x270FA5388](v36);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v37 = (uint64_t)&v34 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946870);
  MEMORY[0x270FA5388](v10);
  uint64_t v35 = (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  id v14 = (double *)((char *)&v34 - v13);
  id v15 = (char *)&v34 + *(int *)(v4 + 28) - v13;
  uint64_t v16 = *MEMORY[0x263F19860];
  uint64_t v17 = sub_261B8DBB8();
  id v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104);
  v18(v15, v16, v17);
  double *v14 = a2;
  v14[1] = a2;
  *(void *)&long long v39 = 0x401E000000000000;
  BYTE8(v39) = 0;
  long long v42 = xmmword_261B987D0;
  long long v43 = xmmword_261B987E0;
  long long v44 = xmmword_261B987F0;
  int v45 = 1062240036;
  uint64_t v47 = 0;
  uint64_t v46 = 0;
  int v48 = 0;
  uint64_t v49 = 1065353216;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946878);
  sub_261AC2FA8();
  sub_261B8E538();
  uint64_t v19 = *(int *)(v4 + 28);
  id v20 = v34;
  v18((char *)v34 + v19, v16, v17);
  uint64_t v21 = (uint64_t)v20;
  *id v20 = a2;
  v20[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9460C8);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_261B92AA0;
  sub_261B8E898();
  uint64_t v23 = sub_261B8E8A8();
  swift_release();
  *(void *)(v22 + 32) = v23;
  sub_261B8E898();
  uint64_t v24 = sub_261B8E8A8();
  swift_release();
  *(void *)(v22 + 40) = v24;
  *(void *)&long long v39 = v22;
  sub_261B8F2E8();
  uint64_t v25 = v39;
  sub_261B8ED58();
  sub_261B8ED68();
  MEMORY[0x263E4CB30](v25);
  sub_261B8D5D8();
  sub_261A1396C(v21, (uint64_t)v7);
  uint64_t v26 = v36;
  uint64_t v27 = &v7[*(int *)(v36 + 60)];
  long long v28 = v40;
  *(_OWORD *)uint64_t v27 = v39;
  *((_OWORD *)v27 + 1) = v28;
  *((void *)v27 + 4) = v41;
  *(_WORD *)&v7[*(int *)(v26 + 64)] = 256;
  sub_261A139D0(v21);
  uint64_t v29 = v37;
  sub_261AC301C((uint64_t)v7, v37);
  uint64_t v30 = v35;
  sub_2619F86F0((uint64_t)v14, v35, &qword_26A946870);
  sub_2619F86F0(v29, (uint64_t)v7, &qword_26A946868);
  uint64_t v31 = v38;
  sub_2619F86F0(v30, v38, &qword_26A946870);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946888);
  sub_2619F86F0((uint64_t)v7, v31 + *(int *)(v32 + 48), &qword_26A946868);
  sub_2619F8754(v29, &qword_26A946868);
  sub_2619F8754((uint64_t)v14, &qword_26A946870);
  sub_2619F8754((uint64_t)v7, &qword_26A946868);
  return sub_2619F8754(v30, &qword_26A946870);
}

uint64_t sub_261AC2CF8@<X0>(uint64_t *a1@<X8>)
{
  double v3 = *v1;
  *a1 = sub_261B8EC98();
  a1[1] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946860);
  return sub_261AC28AC((uint64_t)a1 + *(int *)(v5 + 44), v3);
}

uint64_t EffortButtonBackgroundModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_261B8EC98();
  uint64_t v8 = v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a2, a1, v9);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946838);
  uint64_t v11 = (void *)(a2 + *(int *)(result + 36));
  *uint64_t v11 = v5;
  v11[1] = v6;
  v11[2] = v8;
  return result;
}

uint64_t sub_261AC2DE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261AC2E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_261B8EC98();
  uint64_t v8 = v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a2, a1, v9);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946838);
  uint64_t v11 = (void *)(a2 + *(int *)(result + 36));
  *uint64_t v11 = v5;
  v11[1] = v6;
  v11[2] = v8;
  return result;
}

ValueMetadata *type metadata accessor for EffortButtonBackgroundModifier()
{
  return &type metadata for EffortButtonBackgroundModifier;
}

unint64_t sub_261AC2EB8()
{
  unint64_t result = qword_26A946840;
  if (!qword_26A946840)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946838);
    sub_2619F8AB8(&qword_26A946848, &qword_26A946830);
    sub_2619F8AB8(&qword_26A946850, &qword_26A946858);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946840);
  }
  return result;
}

ValueMetadata *type metadata accessor for EffortButtonBackground()
{
  return &type metadata for EffortButtonBackground;
}

uint64_t sub_261AC2F8C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_261AC2FA8()
{
  unint64_t result = qword_26A946880;
  if (!qword_26A946880)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946878);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946880);
  }
  return result;
}

uint64_t sub_261AC301C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946868);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261AC3084()
{
  return sub_2619F8AB8(&qword_26A946890, &qword_26A946898);
}

uint64_t EffortUtilities.WorkoutAndActivityKey.init(workout:activity:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

id static EffortUtilities.prioritizedEffortFromStoredValues(pending:hk:cm:uuid:)(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v81 = a3;
  id v82 = a2;
  uint64_t v6 = (void *)sub_261B8AE38();
  uint64_t v7 = *(v6 - 1);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v81 - v11;
  MEMORY[0x270FA5388](v13);
  id v15 = (char *)&v81 - v14;
  MEMORY[0x270FA5388](v16);
  id v18 = (char *)&v81 - v17;
  uint64_t v19 = sub_261B8CE88();
  MEMORY[0x270FA5388](v19);
  MEMORY[0x270FA5388](v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v81 - v22;
  MEMORY[0x270FA5388](v24);
  long long v28 = (char *)&v81 - v27;
  uint64_t v83 = v29;
  uint64_t v84 = v30;
  if (a1)
  {
    id v31 = a1;
    sub_261B8C618();
    (*(void (**)(char *, uint64_t, void *))(v7 + 16))(v18, a4, v6);
    id v32 = v31;
    id v33 = sub_261B8CE78();
    os_log_type_t v34 = sub_261B8F4D8();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      id v82 = v6;
      uint64_t v36 = v35;
      id v81 = (id)swift_slowAlloc();
      uint64_t v86 = (uint64_t)v81;
      *(_DWORD *)uint64_t v36 = 134218242;
      objc_msgSend(v32, sel__value);
      uint64_t v85 = v37;
      sub_261B8F6F8();

      *(_WORD *)(v36 + 12) = 2080;
      uint64_t v38 = sub_261B8ADE8();
      uint64_t v85 = sub_261AC9C40(v38, v39, &v86);
      sub_261B8F6F8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, id))(v7 + 8))(v18, v82);
      _os_log_impl(&dword_2619F0000, v33, v34, "[Workout Summary] Using pending effort %f for %s", (uint8_t *)v36, 0x16u);
      id v40 = v81;
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v40, -1, -1);
      MEMORY[0x263E4E970](v36, -1, -1);
    }
    else
    {

      (*(void (**)(char *, void *))(v7 + 8))(v18, v6);
    }

    (*(void (**)(char *, uint64_t))(v84 + 8))(v28, v83);
  }
  else
  {
    uint64_t v41 = a4;
    id v42 = v81;
    id v43 = v82;
    long long v44 = v6;
    if (v82)
    {
      id v45 = v82;
      sub_261B8C618();
      uint64_t v46 = v7;
      uint64_t v47 = v44;
      (*(void (**)(char *, uint64_t, void *))(v7 + 16))(v15, v41, v44);
      id v48 = v45;
      uint64_t v49 = sub_261B8CE78();
      os_log_type_t v50 = sub_261B8F4D8();
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = swift_slowAlloc();
        id v81 = (id)swift_slowAlloc();
        uint64_t v86 = (uint64_t)v81;
        *(_DWORD *)uint64_t v51 = 134218242;
        objc_msgSend(v48, sel__value);
        uint64_t v85 = v52;
        sub_261B8F6F8();

        *(_WORD *)(v51 + 12) = 2080;
        uint64_t v53 = sub_261B8ADE8();
        uint64_t v85 = sub_261AC9C40(v53, v54, &v86);
        sub_261B8F6F8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, void *))(v46 + 8))(v15, v47);
        _os_log_impl(&dword_2619F0000, v49, v50, "[Workout Summary] Using HK effort quantity %f for %s", (uint8_t *)v51, 0x16u);
        id v55 = v81;
        swift_arrayDestroy();
        MEMORY[0x263E4E970](v55, -1, -1);
        MEMORY[0x263E4E970](v51, -1, -1);

        (*(void (**)(char *, uint64_t))(v84 + 8))(v23, v83);
        return v82;
      }
      else
      {

        (*(void (**)(char *, void *))(v46 + 8))(v15, v44);
        a1 = v43;
        (*(void (**)(char *, uint64_t))(v84 + 8))(v23, v83);
      }
    }
    else if (v81)
    {
      uint64_t v57 = v26;
      id v58 = v81;
      sub_261B8C618();
      uint64_t v59 = v7;
      int v60 = *(void (**)(char *, uint64_t, void *))(v7 + 16);
      int v61 = v12;
      uint64_t v62 = v44;
      v60(v12, v41, v44);
      id v63 = v58;
      uint64_t v64 = sub_261B8CE78();
      os_log_type_t v65 = sub_261B8F4D8();
      if (os_log_type_enabled(v64, v65))
      {
        uint64_t v66 = swift_slowAlloc();
        id v82 = v62;
        uint64_t v67 = v61;
        uint64_t v68 = v66;
        uint64_t v69 = swift_slowAlloc();
        uint64_t v86 = v69;
        *(_DWORD *)uint64_t v68 = 134218242;
        objc_msgSend(v63, sel__value);
        uint64_t v85 = v70;
        sub_261B8F6F8();

        *(_WORD *)(v68 + 12) = 2080;
        uint64_t v71 = sub_261B8ADE8();
        uint64_t v85 = sub_261AC9C40(v71, v72, &v86);
        sub_261B8F6F8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, id))(v59 + 8))(v67, v82);
        _os_log_impl(&dword_2619F0000, v64, v65, "[Workout Summary] Using CM estimate effort quantity %f for %s", (uint8_t *)v68, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x263E4E970](v69, -1, -1);
        MEMORY[0x263E4E970](v68, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v57, v83);
        return v81;
      }
      else
      {

        (*(void (**)(char *, void *))(v59 + 8))(v61, v62);
        (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v57, v83);
        return v42;
      }
    }
    else
    {
      uint64_t v73 = v25;
      sub_261B8C618();
      uint64_t v74 = v7;
      (*(void (**)(char *, uint64_t, void *))(v7 + 16))(v9, v41, v6);
      uint64_t v75 = sub_261B8CE78();
      os_log_type_t v76 = sub_261B8F4D8();
      if (os_log_type_enabled(v75, v76))
      {
        id v77 = (uint8_t *)swift_slowAlloc();
        uint64_t v78 = swift_slowAlloc();
        uint64_t v86 = v78;
        *(_DWORD *)id v77 = 136315138;
        id v82 = v77 + 4;
        uint64_t v79 = sub_261B8ADE8();
        uint64_t v85 = sub_261AC9C40(v79, v80, &v86);
        sub_261B8F6F8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, void *))(v74 + 8))(v9, v6);
        _os_log_impl(&dword_2619F0000, v75, v76, "[Workout Summary] No effort quantity for %s", v77, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x263E4E970](v78, -1, -1);
        MEMORY[0x263E4E970](v77, -1, -1);
      }
      else
      {
        (*(void (**)(char *, void *))(v7 + 8))(v9, v6);
      }

      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v73, v83);
      return 0;
    }
  }
  return a1;
}

uint64_t static EffortUtilities.fetchEfforts(forWorkouts:healthStore:)(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = a2;
  uint64_t v3 = sub_261B8CE88();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  v2[21] = swift_task_alloc();
  uint64_t v4 = sub_261B8AE38();
  v2[22] = v4;
  v2[23] = *(void *)(v4 - 8);
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  uint64_t v5 = sub_261B8EE28();
  v2[26] = v5;
  v2[27] = *(void *)(v5 - 8);
  v2[28] = swift_task_alloc();
  uint64_t v6 = sub_261B8EE58();
  v2[29] = v6;
  v2[30] = *(void *)(v6 - 8);
  v2[31] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261AC3C28, 0, 0);
}

uint64_t sub_261AC3C28()
{
  unint64_t v1 = v0[15];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_261B8F9D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v31 = MEMORY[0x263F8EE78];
    sub_261ACA250(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v26 = v0[15] + 32;
      uint64_t v27 = v0[23];
      uint64_t v3 = v31;
      uint64_t v5 = (void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32);
      unint64_t v29 = v1 & 0xC000000000000001;
      uint64_t v30 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
      uint64_t v28 = v2;
      while (1)
      {
        id v6 = v29 ? (id)MEMORY[0x263E4D7B0](v4, v0[15]) : *(id *)(v26 + 8 * v4);
        uint64_t v7 = v6;
        id v8 = objc_msgSend(v6, sel_fiui_finalWorkoutUUID);
        if (!v8) {
          break;
        }
        uint64_t v9 = v8;
        uint64_t v10 = v0[24];
        uint64_t v12 = v0[21];
        uint64_t v11 = v0[22];
        sub_261B8AE18();

        uint64_t v13 = *v5;
        (*v5)(v12, v10, v11);
        (*v30)(v12, 0, 1, v11);
        uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v12, 1, v11);
        if (v14 == 1) {
          goto LABEL_22;
        }
        v13(v0[25], v0[21], v0[22]);

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_261ACA250(0, *(void *)(v31 + 16) + 1, 1);
        }
        unint64_t v17 = *(void *)(v31 + 16);
        unint64_t v16 = *(void *)(v31 + 24);
        if (v17 >= v16 >> 1) {
          sub_261ACA250(v16 > 1, v17 + 1, 1);
        }
        ++v4;
        uint64_t v18 = v0[25];
        uint64_t v19 = v0[22];
        *(void *)(v31 + 16) = v17 + 1;
        v13(v31+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v17, v18, v19);
        if (v28 == v4) {
          goto LABEL_16;
        }
      }
    }
    uint64_t v14 = (*v30)(v0[21], 1, 1, v0[22]);
LABEL_22:
    __break(1u);
  }
  else
  {
LABEL_16:
    sub_261AD14D8(v3);
    swift_bridgeObjectRelease();
    uint64_t v20 = self;
    sub_261AD5A20(&qword_26B416BB8, MEMORY[0x263F07508]);
    uint64_t v21 = (void *)sub_261B8F438();
    swift_bridgeObjectRelease();
    id v22 = objc_msgSend(v20, sel_predicateForObjectsWithUUIDs_, v21);
    v0[32] = v22;

    id v23 = v22;
    sub_261B8EE48();
    v0[13] = MEMORY[0x263F8EE80];
    uint64_t v24 = (void *)swift_task_alloc();
    v0[33] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_261AC3FEC;
    uint64_t v14 = v0[28];
    uint64_t v15 = v0[16];
  }
  return MEMORY[0x270EF32D8](v14, v15);
}

uint64_t sub_261AC3FEC()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_261AC4C68;
  }
  else {
    uint64_t v2 = sub_261AC4100;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_261AC4100()
{
  uint64_t v125 = v0;
  uint64_t v2 = (uint64_t *)(v0 + 120);
  unint64_t v1 = *(void *)(v0 + 120);
  uint64_t v113 = sub_261B8EE18();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_261B8F9D8();
    uint64_t v4 = *v2;
    uint64_t v112 = v2 - 2;
    if (!v3)
    {
LABEL_89:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_261B8C618();
      id v81 = sub_261B8CE78();
      os_log_type_t typeb = sub_261B8F4D8();
      BOOL v82 = os_log_type_enabled(v81, typeb);
      uint64_t v83 = v99[31];
      uint64_t v122 = (void *)v99[32];
      uint64_t v85 = v99[29];
      uint64_t v84 = v99[30];
      uint64_t v86 = v99[27];
      uint64_t v87 = v99[28];
      uint64_t v88 = v99[26];
      uint64_t v120 = v99[20];
      uint64_t v89 = v99[17];
      uint64_t v90 = v99[18];
      if (v82)
      {
        id v101 = v2 - 1;
        uint64_t v114 = v99[29];
        uint64_t v111 = v99[31];
        uint64_t v91 = (uint8_t *)swift_slowAlloc();
        uint64_t v103 = swift_slowAlloc();
        uint64_t v124 = v103;
        *(_DWORD *)uint64_t v91 = 136446210;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A9468B8);
        sub_261AD1A70();
        uint64_t v92 = sub_261B8F008();
        unint64_t v94 = v93;
        swift_bridgeObjectRelease();
        uint64_t *v101 = sub_261AC9C40(v92, v94, &v124);
        sub_261B8F6F8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2619F0000, v81, typeb, "Successfully Fetched Efforts for workouts %{public}s", v91, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x263E4E970](v103, -1, -1);
        MEMORY[0x263E4E970](v91, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v120, v89);
        (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v87, v88);
        (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v111, v114);
      }
      else
      {

        (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v120, v89);
        (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v87, v88);
        (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
      }
      swift_beginAccess();
      uint64_t v95 = v99[13];
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v96 = (void (*)(uint64_t))v99[1];
      v96(v95);
      return;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v112 = v2 - 2;
    if (!v3) {
      goto LABEL_89;
    }
  }
  unint64_t v5 = 0;
  uint64_t v97 = v4 + 32;
  uint64_t v98 = v4 & 0xFFFFFFFFFFFFFF8;
  unint64_t v104 = v4 & 0xC000000000000001;
  uint64_t v6 = MEMORY[0x263F8EE80];
  uint64_t v100 = v3;
  id v102 = v2;
  while (1)
  {
    while (1)
    {
      uint64_t v121 = v6;
      if (v104)
      {
        id v10 = (id)MEMORY[0x263E4D7B0](v5, *v2);
      }
      else
      {
        if (v5 >= *(void *)(v98 + 16)) {
          goto LABEL_103;
        }
        id v10 = *(id *)(v97 + 8 * v5);
      }
      uint64_t v11 = v10;
      BOOL v12 = __OFADD__(v5++, 1);
      if (v12) {
        goto LABEL_101;
      }
      if (objc_msgSend(v10, sel_workoutActivityType) != (id)82) {
        break;
      }
      id v13 = objc_msgSend(v11, sel_workoutActivities);
      sub_261A0CCCC(0, &qword_26A9437A0);
      unint64_t v14 = sub_261B8F2D8();

      if (!(v14 >> 62))
      {
        uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v15) {
          goto LABEL_16;
        }
        goto LABEL_80;
      }
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_261B8F9D8();
      swift_bridgeObjectRelease();
      if (v15)
      {
LABEL_16:
        unint64_t v105 = v5;
        uint64_t v107 = v15;
        uint64_t v16 = 0;
        unint64_t v17 = v14 & 0xC000000000000001;
        *(void *)type = v11;
        unint64_t v118 = v14 & 0xC000000000000001;
        unint64_t v109 = v14;
        while (1)
        {
          if (v17) {
            id v18 = (id)MEMORY[0x263E4D7B0](v16, v14);
          }
          else {
            id v18 = *(id *)(v14 + 8 * v16 + 32);
          }
          uint64_t v19 = v18;
          uint64_t v20 = v16 + 1;
          if (__OFADD__(v16, 1)) {
            goto LABEL_96;
          }
          id v21 = objc_msgSend(v18, sel_workoutConfiguration);
          id v22 = objc_msgSend(v21, sel_activityType);

          if (v22 != (id)83) {
            break;
          }

LABEL_18:
          ++v16;
          if (v20 == v15)
          {
            swift_bridgeObjectRelease();

            uint64_t v3 = v100;
            uint64_t v2 = v102;
            unint64_t v5 = v105;
            goto LABEL_81;
          }
        }
        id v23 = v11;
        id v24 = v19;
        id v25 = v23;
        id v26 = v24;
        id v27 = sub_261AD1AC4(v113, v19);
        uint64_t v28 = (void *)v121;
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v124 = v121;
        unint64_t v31 = sub_261ACB1B0((uint64_t)v25, (uint64_t)v19);
        uint64_t v32 = *(void *)(v121 + 16);
        BOOL v33 = (v30 & 1) == 0;
        uint64_t v34 = v32 + v33;
        if (__OFADD__(v32, v33)) {
          goto LABEL_97;
        }
        char v35 = v30;
        if (*(void *)(v121 + 24) >= v34)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if ((v30 & 1) == 0) {
              goto LABEL_33;
            }
          }
          else
          {
            sub_261ACF0A0();
            uint64_t v28 = (void *)v124;
            uint64_t v121 = v124;
            if ((v35 & 1) == 0) {
              goto LABEL_33;
            }
          }
        }
        else
        {
          sub_261ACBD90(v34, isUniquelyReferenced_nonNull_native);
          unint64_t v36 = sub_261ACB1B0((uint64_t)v25, (uint64_t)v19);
          if ((v35 & 1) != (v37 & 1)) {
            goto LABEL_86;
          }
          unint64_t v31 = v36;
          uint64_t v28 = (void *)v124;
          uint64_t v121 = v124;
          if ((v35 & 1) == 0)
          {
LABEL_33:
            v28[(v31 >> 6) + 8] |= 1 << v31;
            id v40 = (void *)(v28[6] + 16 * v31);
            *id v40 = v25;
            v40[1] = v19;
            *(void *)(v28[7] + 8 * v31) = v27;
            uint64_t v41 = v28[2];
            BOOL v12 = __OFADD__(v41, 1);
            uint64_t v42 = v41 + 1;
            if (v12) {
              goto LABEL_100;
            }
            v28[2] = v42;
            id v43 = v25;
            id v44 = v26;
            uint64_t v39 = v121;
            goto LABEL_35;
          }
        }
        uint64_t v38 = v28[7];

        uint64_t v39 = v121;
        *(void *)(v38 + 8 * v31) = v27;
LABEL_35:
        unint64_t v14 = v109;
        uint64_t v11 = *(void **)type;
        uint64_t v15 = v107;
        *uint64_t v112 = v39;
        swift_bridgeObjectRelease();

        unint64_t v17 = v118;
        goto LABEL_18;
      }
LABEL_80:
      swift_bridgeObjectRelease();

LABEL_81:
      uint64_t v6 = v121;
      if (v5 == v3) {
        goto LABEL_89;
      }
    }
    id v45 = v11;
    unint64_t v46 = swift_bridgeObjectRetain();
    unint64_t v47 = (unint64_t)sub_261AD1340(v46, v45);

    uint64_t v48 = MEMORY[0x263F8EE78];
    unint64_t v123 = MEMORY[0x263F8EE78];
    if (v47 >> 62)
    {
      id v80 = v45;
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_261B8F9D8();
    }
    else
    {
      uint64_t v49 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v50 = v45;
      swift_bridgeObjectRetain();
    }
    uint64_t v51 = &selRef_album;
    unint64_t v106 = v5;
    if (v49) {
      break;
    }
    swift_bridgeObjectRelease();
    unint64_t v64 = v48;
LABEL_70:
    id v65 = _s9WorkoutUI15EffortUtilitiesC22effortSampleCollection3forAA0cfG0CSaySo010HKQuantityF0CG_tFZ_0(v64);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v66 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v124 = v121;
    unint64_t v68 = sub_261ACB1B0((uint64_t)v45, 0);
    uint64_t v69 = *(void *)(v121 + 16);
    BOOL v70 = (v67 & 1) == 0;
    uint64_t v71 = v69 + v70;
    if (__OFADD__(v69, v70)) {
      goto LABEL_102;
    }
    unint64_t v72 = (void *)v121;
    char v73 = v67;
    if (*(void *)(v121 + 24) >= v71)
    {
      uint64_t v2 = v102;
      unint64_t v5 = v106;
      if (v66)
      {
        if ((v67 & 1) == 0) {
          goto LABEL_77;
        }
      }
      else
      {
        sub_261ACF0A0();
        unint64_t v72 = (void *)v124;
        if ((v73 & 1) == 0) {
          goto LABEL_77;
        }
      }
    }
    else
    {
      sub_261ACBD90(v71, v66);
      unint64_t v74 = sub_261ACB1B0((uint64_t)v45, 0);
      if ((v73 & 1) != (v75 & 1))
      {
LABEL_86:
        sub_261B8FBF8();
        return;
      }
      unint64_t v68 = v74;
      uint64_t v3 = v100;
      uint64_t v2 = v102;
      unint64_t v5 = v106;
      unint64_t v72 = (void *)v124;
      if ((v73 & 1) == 0)
      {
LABEL_77:
        v72[(v68 >> 6) + 8] |= 1 << v68;
        os_log_type_t v76 = (void *)(v72[6] + 16 * v68);
        void *v76 = v45;
        v76[1] = 0;
        *(void *)(v72[7] + 8 * v68) = v65;
        uint64_t v77 = v72[2];
        BOOL v12 = __OFADD__(v77, 1);
        uint64_t v78 = v77 + 1;
        if (v12) {
          goto LABEL_104;
        }
        v72[2] = v78;
        uint64_t v9 = v72;
        id v79 = v45;
        goto LABEL_7;
      }
    }
    uint64_t v7 = v72[7];
    uint64_t v8 = 8 * v68;
    uint64_t v9 = v72;

    *(void *)(v7 + v8) = v65;
LABEL_7:
    *uint64_t v112 = (uint64_t)v9;
    swift_bridgeObjectRelease();

    uint64_t v6 = (uint64_t)v9;
    if (v5 == v3) {
      goto LABEL_89;
    }
  }
  unint64_t v52 = 0;
  *(void *)typea = v47;
  unint64_t v119 = v47 & 0xC000000000000001;
  id v108 = (char *)(v47 + 32);
  uint64_t v110 = v47 & 0xFFFFFFFFFFFFFF8;
  while (1)
  {
    if (v119)
    {
      id v53 = (id)MEMORY[0x263E4D7B0](v52, v47);
    }
    else
    {
      if (v52 >= *(void *)(v110 + 16)) {
        goto LABEL_99;
      }
      id v53 = *(id *)&v108[8 * v52];
    }
    unint64_t v54 = v53;
    BOOL v12 = __OFADD__(v52++, 1);
    if (v12) {
      break;
    }
    id v55 = [v53 v51[227]];
    if (v55)
    {
      id v56 = v55;
      sub_261A0CCCC(0, &qword_26A9468C8);
      unint64_t v57 = sub_261B8F2D8();

      uint64_t v124 = v48;
      if (v57 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v58 = sub_261B8F9D8();
        if (!v58) {
          goto LABEL_64;
        }
LABEL_51:
        if (v58 < 1) {
          goto LABEL_98;
        }
        for (uint64_t i = 0; i != v58; ++i)
        {
          if ((v57 & 0xC000000000000001) != 0) {
            id v60 = (id)MEMORY[0x263E4D7B0](i, v57);
          }
          else {
            id v60 = *(id *)(v57 + 8 * i + 32);
          }
          int v61 = v60;
          self;
          if (swift_dynamicCastObjCClass())
          {
            MEMORY[0x263E4D180]();
            if (*(void *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_261B8F2F8();
            }
            sub_261B8F318();
            sub_261B8F2E8();
          }
          else
          {
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v62 = v124;
        uint64_t v48 = MEMORY[0x263F8EE78];
        uint64_t v51 = &selRef_album;
      }
      else
      {
        uint64_t v58 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v58) {
          goto LABEL_51;
        }
LABEL_64:
        swift_bridgeObjectRelease();
        unint64_t v62 = v48;
      }
      swift_bridgeObjectRelease();
      id v63 = objc_msgSend(v54, sel_activity);

      if (v63) {
        swift_bridgeObjectRelease();
      }
      else {
        sub_261AC7170(v62);
      }
      unint64_t v47 = *(void *)typea;
    }

    if (v52 == v49)
    {
      swift_bridgeObjectRelease();
      unint64_t v64 = v123;
      uint64_t v3 = v100;
      goto LABEL_70;
    }
  }
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
}

uint64_t sub_261AC4C68()
{
  id v27 = v0;
  unint64_t v1 = (void *)v0[34];
  sub_261B8C618();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_261B8CE78();
  os_log_type_t v5 = sub_261B8F4B8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[34];
    uint64_t v23 = v0[18];
    uint64_t v24 = v0[17];
    uint64_t v25 = v0[19];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v26 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    swift_getErrorValue();
    uint64_t v9 = sub_261B8FC18();
    v0[11] = sub_261AC9C40(v9, v10, &v26);
    sub_261B8F6F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2619F0000, v4, v5, "Unable to fetch effort samples for multisport workout %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v8, -1, -1);
    MEMORY[0x263E4E970](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
  }
  else
  {
    uint64_t v11 = (void *)v0[34];
    uint64_t v13 = v0[18];
    uint64_t v12 = v0[19];
    uint64_t v14 = v0[17];

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = (void *)v0[34];
  uint64_t v16 = v0[31];
  unint64_t v17 = (void *)v0[32];
  uint64_t v18 = v0[29];
  uint64_t v19 = v0[30];
  unint64_t v20 = sub_261AC4F24(MEMORY[0x263F8EE78]);

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v21 = (uint64_t (*)(unint64_t))v0[1];
  return v21(v20);
}

unint64_t sub_261AC4F24(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9469D8);
  id v2 = (void *)sub_261B8FA08();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v4 - 2);
    os_log_type_t v5 = *(v4 - 1);
    id v7 = *v4;
    id v8 = *v4;
    id v9 = v6;
    id v10 = v5;
    unint64_t result = sub_261ACB1B0((uint64_t)v9, (uint64_t)v5);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (void *)(v2[6] + 16 * result);
    *uint64_t v13 = v9;
    v13[1] = v5;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v16;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_261AC5040(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9469A0);
  uint64_t v2 = sub_261B8FA08();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2619F86F0(v6, (uint64_t)&v15, &qword_26A9469A8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_261ACB228(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_261A0CCBC(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_261AC5178(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946908);
  uint64_t v2 = (void *)sub_261B8FA08();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 1);
    long long v12 = *v4;
    uint64_t v6 = swift_retain();
    unint64_t result = sub_261ACB2A0(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v5;
    *(_OWORD *)(v2[7] + 16 * result) = v12;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    uint64_t v4 = (_OWORD *)((char *)v4 + 24);
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_261AC5288(uint64_t a1)
{
  return sub_261AC52D8(a1, &qword_26A946910, &qword_26A946918, (uint64_t (*)(uint64_t))sub_261ACB30C);
}

unint64_t sub_261AC52B0(uint64_t a1)
{
  return sub_261AC52D8(a1, &qword_26A946948, &qword_26A946950, (uint64_t (*)(uint64_t))sub_261ACB30C);
}

unint64_t sub_261AC52D8(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = sub_261B8FA08();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2619F86F0(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_261A0CCBC(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_261AC5408(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946988);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946990);
  uint64_t v6 = sub_261B8FA08();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2619F86F0(v12, (uint64_t)v5, &qword_26A946988);
    unint64_t result = sub_261ACB3A0((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_261B8AE38();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_261AC55FC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946978);
  uint64_t v2 = (void *)sub_261B8FA08();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    id v6 = *v4;
    id v7 = *v4;
    id v8 = v5;
    unint64_t result = sub_261ACB474((uint64_t)v8);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = 8 * result;
    *(void *)(v2[6] + v11) = v8;
    *(void *)(v2[7] + v11) = v6;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_261AC5700(uint64_t a1)
{
  return sub_261AC5718(a1, &qword_26A946958);
}

unint64_t sub_261AC570C(uint64_t a1)
{
  return sub_261AC5718(a1, &qword_26A9469F0);
}

unint64_t sub_261AC5718(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_261B8FA08();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    id v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_261ACB228(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_261AC5830(uint64_t a1)
{
  uint64_t result = sub_261B8F468();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    char v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_261B26614(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void static EffortUtilities.save(quantity:workout:healthStore:)(void *a1, void *a2, void *a3)
{
}

void static EffortUtilities.save(quantity:workout:workoutActivity:healthStore:)(void *a1, void *a2, void *a3, void *a4)
{
}

void sub_261AC5BB8(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_261B8AAC8();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

uint64_t static EffortUtilities.save(quantity:workout:workoutActivity:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = sub_261B8AE38();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  uint64_t v6 = sub_261B8CE88();
  v4[10] = v6;
  v4[11] = *(void *)(v6 - 8);
  v4[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261AC5D48, 0, 0);
}

uint64_t sub_261AC5D48()
{
  char v35 = v0;
  unint64_t v1 = (void *)v0[3];
  if (v1)
  {
    id v2 = (id)v0[3];
  }
  else
  {
    int64_t v3 = (void *)v0[4];
    sub_261B8C618();
    id v4 = v3;
    uint64_t v5 = sub_261B8CE78();
    os_log_type_t v6 = sub_261B8F4D8();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v9 = v0[11];
    uint64_t v8 = v0[12];
    uint64_t v10 = v0[10];
    if (v7)
    {
      log = v5;
      os_log_type_t type = v6;
      uint64_t v12 = v0[8];
      uint64_t v11 = v0[9];
      uint64_t v13 = v0[7];
      int64_t v14 = (void *)v0[4];
      uint64_t v28 = v14;
      uint64_t v33 = v0[12];
      uint64_t v32 = v0[10];
      unint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v34 = v30;
      *(_DWORD *)unint64_t v15 = 136446210;
      id v16 = objc_msgSend(v14, sel_UUID);
      sub_261B8AE18();

      sub_261AD5A20(&qword_26A945890, MEMORY[0x263F07508]);
      uint64_t v17 = sub_261B8FB78();
      unint64_t v19 = v18;
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      v0[2] = sub_261AC9C40(v17, v19, &v34);
      sub_261B8F6F8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2619F0000, log, type, "Storing sentinel for skip for workout %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v30, -1, -1);
      MEMORY[0x263E4E970](v15, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v33, v32);
    }
    else
    {
      BOOL v20 = (void *)v0[4];

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    }
    unint64_t v1 = (void *)v0[3];
    id v21 = objc_msgSend(self, sel_appleEffortScoreUnit);
    id v2 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v21, 0.0);
  }
  v0[13] = v2;
  id v22 = v1;
  uint64_t v23 = (void *)swift_task_alloc();
  v0[14] = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_261AC607C;
  uint64_t v24 = v0[5];
  uint64_t v25 = v0[6];
  uint64_t v26 = v0[4];
  return sub_261AD301C((uint64_t)v2, v26, v24, v25);
}

uint64_t sub_261AC607C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_261AC617C, 0, 0);
}

uint64_t sub_261AC617C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 120);
  return v1(v2);
}

uint64_t sub_261AC61F4()
{
  uint64_t result = sub_261B8F0B8();
  qword_26A9468A0 = result;
  return result;
}

id static EffortUtilities.didUpdateDemoOverrideEffortValues.getter()
{
  if (qword_26A942E90 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26A9468A0;
  return v0;
}

void *sub_261AC6288()
{
  uint64_t result = (void *)sub_261AC5408(MEMORY[0x263F8EE78]);
  off_26A9468A8 = result;
  return result;
}

uint64_t sub_261AC62B0(char a1, void *a2, void *a3, void *a4, void *a5, uint64_t (*a6)(void, id), uint64_t a7)
{
  uint64_t v94 = a7;
  id v100 = a5;
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v93);
  uint64_t v13 = ((char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14);
  id v16 = (char *)&v85 - v15;
  uint64_t v17 = sub_261B8AE38();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v95 = v17;
  uint64_t v96 = v18;
  MEMORY[0x270FA5388](v17);
  BOOL v20 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_261B8CE88();
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v85 - v25;
  uint64_t v98 = v27;
  id v99 = a6;
  uint64_t v97 = v28;
  if ((a1 & 1) == 0)
  {
    id v92 = a2;
    sub_261B8C618();
    id v50 = v100;
    id v51 = a3;
    id v52 = a4;
    id v53 = v50;
    id v54 = v51;
    id v55 = v52;
    id v56 = sub_261B8CE78();
    int v57 = sub_261B8F4B8();
    if (os_log_type_enabled(v56, (os_log_type_t)v57))
    {
      os_log_t v90 = v13;
      id v91 = v53;
      LODWORD(v87) = v57;
      os_log_t v89 = v56;
      uint64_t v58 = swift_slowAlloc();
      uint64_t v59 = (void *)swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      uint64_t v101 = (uint64_t)v54;
      os_log_t v102 = (os_log_t)v88;
      *(_DWORD *)uint64_t v58 = 138412802;
      id v60 = v54;
      sub_261B8F6F8();
      uint64_t v86 = v59;
      *uint64_t v59 = v54;

      *(_WORD *)(v58 + 12) = 2082;
      id v61 = objc_msgSend(v55, sel_UUID);
      sub_261B8AE18();

      sub_261AD5A20(&qword_26A945890, MEMORY[0x263F07508]);
      uint64_t v62 = v95;
      uint64_t v63 = sub_261B8FB78();
      unint64_t v65 = v64;
      (*(void (**)(char *, uint64_t))(v96 + 8))(v20, v62);
      uint64_t v101 = sub_261AC9C40(v63, v65, (uint64_t *)&v102);
      sub_261B8F6F8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v58 + 22) = 2082;
      if (v100)
      {
        id v66 = v91;
        id v67 = objc_msgSend(v91, sel_UUID);
        os_log_t v68 = v90;
        sub_261B8AE18();

        uint64_t v69 = 0;
        BOOL v70 = v99;
      }
      else
      {
        uint64_t v69 = 1;
        BOOL v70 = v99;
        os_log_t v68 = v90;
        id v66 = v91;
      }
      (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v96 + 56))(v68, v69, 1, v95);
      uint64_t v79 = sub_261B8F6C8();
      unint64_t v81 = v80;
      sub_2619F8754((uint64_t)v68, &qword_26B416BC8);
      uint64_t v101 = sub_261AC9C40(v79, v81, (uint64_t *)&v102);
      sub_261B8F6F8();

      swift_bridgeObjectRelease();
      os_log_t v82 = v89;
      _os_log_impl(&dword_2619F0000, v89, (os_log_type_t)v87, "Failed to store perceived effort %@ to workout %{public}s with activity %{public}s with no error.", (uint8_t *)v58, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9465F0);
      uint64_t v83 = v86;
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v83, -1, -1);
      uint64_t v84 = v88;
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v84, -1, -1);
      MEMORY[0x263E4E970](v58, -1, -1);

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v23, v98);
      id v72 = v92;
      if (!v70) {
        return result;
      }
    }
    else
    {

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v23, v98);
      BOOL v70 = v99;
      id v72 = v92;
      if (!v99) {
        return result;
      }
    }
    return v70(0, v72);
  }
  sub_261B8C618();
  id v29 = v100;
  id v30 = a3;
  id v31 = a4;
  id v32 = v29;
  id v33 = v30;
  id v34 = v31;
  char v35 = sub_261B8CE78();
  int v36 = sub_261B8F4D8();
  if (os_log_type_enabled(v35, (os_log_type_t)v36))
  {
    id v91 = v16;
    id v92 = v32;
    LODWORD(v88) = v36;
    os_log_t v90 = v35;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = (void *)swift_slowAlloc();
    os_log_t v89 = (os_log_t)swift_slowAlloc();
    uint64_t v101 = (uint64_t)v33;
    os_log_t v102 = v89;
    *(_DWORD *)uint64_t v37 = 138412802;
    id v39 = v33;
    sub_261B8F6F8();
    uint64_t v87 = v38;
    *uint64_t v38 = v33;

    *(_WORD *)(v37 + 12) = 2082;
    id v40 = objc_msgSend(v34, sel_UUID);
    sub_261B8AE18();

    sub_261AD5A20(&qword_26A945890, MEMORY[0x263F07508]);
    uint64_t v41 = v95;
    uint64_t v42 = sub_261B8FB78();
    unint64_t v44 = v43;
    (*(void (**)(char *, uint64_t))(v96 + 8))(v20, v41);
    uint64_t v101 = sub_261AC9C40(v42, v44, (uint64_t *)&v102);
    sub_261B8F6F8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 22) = 2082;
    if (v100)
    {
      id v45 = v92;
      id v46 = objc_msgSend(v92, sel_UUID);
      id v47 = v91;
      sub_261B8AE18();

      uint64_t v48 = 0;
      uint64_t v49 = (uint64_t (*)(uint64_t, void))v99;
    }
    else
    {
      uint64_t v48 = 1;
      uint64_t v49 = (uint64_t (*)(uint64_t, void))v99;
      id v47 = v91;
      id v45 = v92;
    }
    (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v96 + 56))(v47, v48, 1, v95);
    uint64_t v73 = sub_261B8F6C8();
    unint64_t v75 = v74;
    sub_2619F8754((uint64_t)v47, &qword_26B416BC8);
    uint64_t v101 = sub_261AC9C40(v73, v75, (uint64_t *)&v102);
    sub_261B8F6F8();

    swift_bridgeObjectRelease();
    os_log_t v76 = v90;
    _os_log_impl(&dword_2619F0000, v90, (os_log_type_t)v88, "Successfully stored perceived effort %@ to workout %{public}s with activity %{public}s", (uint8_t *)v37, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9465F0);
    uint64_t v77 = v87;
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v77, -1, -1);
    os_log_t v78 = v89;
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v78, -1, -1);
    MEMORY[0x263E4E970](v37, -1, -1);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v26, v98);
    if (v49) {
      return v49(1, 0);
    }
  }
  else
  {

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v26, v98);
    uint64_t v49 = (uint64_t (*)(uint64_t, void))v99;
    if (v99) {
      return v49(1, 0);
    }
  }
  return result;
}

void sub_261AC6BE0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_261AC6C58(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943900);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    **(unsigned char **)(*(void *)(v3 + 64) + 40) = a2;
    return MEMORY[0x270FA2408](v3);
  }
}

void static EffortUtilities.fetchExertion(forWorkout:healthStore:completion:)(void *a1, void *a2, void (*a3)(void), uint64_t a4)
{
}

void static EffortUtilities.fetchExertion(forWorkout:activity:healthStore:completion:)(void *a1, void *a2, void *a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v11 = sub_261B8AE38();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = _s9WorkoutUI15EffortUtilitiesC17fetchDemoExertion03forA0So10HKQuantityCSgSo9HKWorkoutC_tFZ_0(a1);
  if (v18)
  {
    int v36 = v18;
    a4();
    uint64_t v19 = v36;
  }
  else
  {
    char v35 = a3;
    int v36 = v5;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a4;
    *(void *)(v20 + 24) = a5;
    swift_retain_n();
    if (objc_msgSend(a1, sel_workoutActivityType) != (id)82 || a2)
    {
      id v21 = objc_msgSend(a1, sel_fiui_finalWorkoutUUID);
      if (v21)
      {
        uint64_t v22 = v21;
        sub_261B8AE18();

        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v14, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11) != 1)
        {
          uint64_t v23 = self;
          uint64_t v24 = (void *)sub_261B8ADF8();
          (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
          id v25 = objc_msgSend(v23, sel_predicateForObjectWithUUID_, v24);

          uint64_t v26 = (void *)swift_allocObject();
          uint64_t v28 = v35;
          uint64_t v27 = v36;
          v26[2] = v35;
          v26[3] = sub_261AD43CC;
          v26[4] = v20;
          v26[5] = a1;
          v26[6] = v27;
          v26[7] = a2;
          id v29 = objc_allocWithZone(MEMORY[0x263F0A928]);
          aBlock[4] = sub_261AD43D8;
          aBlock[5] = v26;
          aBlock[0] = MEMORY[0x263EF8330];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_261AC9B6C;
          aBlock[3] = &block_descriptor_3;
          id v30 = _Block_copy(aBlock);
          id v31 = a2;
          id v32 = v28;
          swift_retain();
          id v33 = a1;
          id v34 = objc_msgSend(v29, sel_initWithPredicate_anchor_options_resultsHandler_, v25, 0, 0, v30);
          _Block_release(v30);
          swift_release();
          objc_msgSend(v32, sel_executeQuery_, v34);
          swift_release();
          swift_release();

          return;
        }
      }
      else
      {
        swift_release();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v17, 1, 1, v11);
        __break(1u);
      }
      swift_release();
      __break(1u);
    }
    else
    {
      ((void (*)(void))a4)(0);
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_261AC7170(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_261B8F9D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_261B8F9D8();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x263E4D7C0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_261AD0A80(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_261B8F9D8();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_261B8F2E8();
}

uint64_t sub_261AC733C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_261A0B728(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_261B8CAD8() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

void sub_261AC7528(uint64_t a1, void (*a2)(id))
{
  if (a1)
  {
    unint64_t v3 = *(void **)(a1 + OBJC_IVAR___WOEffortSampleCollection_effortSample);
    if (v3)
    {
      id v4 = *(id *)(a1 + OBJC_IVAR___WOEffortSampleCollection_effortSample);
LABEL_6:
      id v6 = v3;
      id v7 = objc_msgSend(v4, sel_quantity);

      goto LABEL_8;
    }
    int64_t v5 = *(void **)(a1 + OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample);
    if (v5)
    {
      id v4 = v5;
      unint64_t v3 = 0;
      goto LABEL_6;
    }
  }
  id v7 = 0;
LABEL_8:
  a2(v7);
}

void static EffortUtilities.fetchExertionCollection(forWorkout:activity:healthStore:completion:)(void *a1, void *a2, void *a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v11 = sub_261B8AE38();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  double v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_workoutActivityType, v16) == (id)82 && a2 == 0)
  {
    a4(0);
  }
  else
  {
    id v34 = a3;
    uint64_t v35 = v5;
    id v20 = objc_msgSend(a1, sel_fiui_finalWorkoutUUID);
    if (v20)
    {
      uint64_t v21 = v20;
      sub_261B8AE18();

      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v14, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, v11) != 1)
      {
        int64_t v22 = self;
        uint64_t v23 = (void *)sub_261B8ADF8();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
        id v24 = objc_msgSend(v22, sel_predicateForObjectWithUUID_, v23);

        id v25 = (void *)swift_allocObject();
        uint64_t v27 = v34;
        uint64_t v26 = v35;
        v25[2] = v34;
        v25[3] = a4;
        v25[4] = a5;
        v25[5] = a1;
        v25[6] = v26;
        v25[7] = a2;
        id v28 = objc_allocWithZone(MEMORY[0x263F0A928]);
        aBlock[4] = sub_261AD43D8;
        aBlock[5] = v25;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_261AC9B6C;
        aBlock[3] = &block_descriptor_12;
        id v29 = _Block_copy(aBlock);
        id v30 = a2;
        id v31 = v27;
        swift_retain();
        id v32 = a1;
        id v33 = objc_msgSend(v28, sel_initWithPredicate_anchor_options_resultsHandler_, v24, 0, 0, v29);
        _Block_release(v29);
        swift_release();
        objc_msgSend(v31, sel_executeQuery_, v33);

        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v18, 1, 1, v11);
    }
    __break(1u);
  }
}

void sub_261AC7968(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void *a5, void (*a6)(void), uint64_t a7, void *a8, uint64_t a9, void *a10)
{
  unint64_t v78 = a2;
  uint64_t v79 = a8;
  uint64_t v82 = a7;
  uint64_t v83 = a6;
  id v84 = a5;
  uint64_t v77 = a10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v77 - v16;
  MEMORY[0x270FA5388](v18);
  id v20 = (char *)&v77 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v77 - v22;
  uint64_t v24 = sub_261B8CE88();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v80 = v24;
  uint64_t v81 = v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  id v30 = (char *)&v77 - v29;
  double v32 = MEMORY[0x270FA5388](v31);
  id v34 = (char *)&v77 - v33;
  objc_msgSend(v84, sel_stopQuery_, a1, v32);
  if (a4)
  {
    id v35 = a4;
    sub_261B8C618();
    id v36 = a4;
    id v37 = a4;
    uint64_t v38 = sub_261B8CE78();
    os_log_type_t v39 = sub_261B8F4B8();
    if (os_log_type_enabled(v38, v39))
    {
      id v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v86 = v41;
      *(_DWORD *)id v40 = 136446210;
      swift_getErrorValue();
      uint64_t v42 = sub_261B8FC18();
      uint64_t v85 = sub_261AC9C40(v42, v43, &v86);
      sub_261B8F6F8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2619F0000, v38, v39, "Unable to fetch effort samples for workout: %{public}s", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v41, -1, -1);
      MEMORY[0x263E4E970](v40, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v81 + 8))(v34, v80);
    ((void (*)(void))v83)(0);

    return;
  }
  id v45 = v77;
  uint64_t v44 = v78;
  id v46 = v79;
  if (!v78)
  {
    uint64_t v49 = v30;
    sub_261B8C618();
    id v50 = v46;
    id v51 = sub_261B8CE78();
    os_log_type_t v52 = sub_261B8F4A8();
    if (os_log_type_enabled(v51, v52))
    {
      id v53 = (uint8_t *)swift_slowAlloc();
      id v84 = (id)swift_slowAlloc();
      uint64_t v86 = (uint64_t)v84;
      *(_DWORD *)id v53 = 136446210;
      id v54 = objc_msgSend(v50, sel_fiui_finalWorkoutUUID);
      if (v54)
      {
        id v55 = v54;
        sub_261B8AE18();

        uint64_t v56 = (uint64_t)v14;
        uint64_t v57 = sub_261B8AE38();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v14, 0, 1, v57);
      }
      else
      {
        uint64_t v58 = sub_261B8AE38();
        uint64_t v56 = (uint64_t)v14;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v14, 1, 1, v58);
      }
      uint64_t v59 = (uint64_t)v17;
      sub_261AD5940(v56, (uint64_t)v17);
      uint64_t v60 = sub_261B8F6C8();
      unint64_t v62 = v61;
      sub_2619F8754(v59, &qword_26B416BC8);
      uint64_t v85 = sub_261AC9C40(v60, v62, &v86);
      sub_261B8F6F8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2619F0000, v51, v52, "No effort relationships returned for workout %{public}s", v53, 0xCu);
      id v63 = v84;
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v63, -1, -1);
      MEMORY[0x263E4E970](v53, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v81 + 8))(v49, v80);
    goto LABEL_26;
  }
  if (v78 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_261B8F9D8();
    swift_bridgeObjectRelease();
    id v47 = v46;
    if (v64) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
  id v47 = v79;
  if (!*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_20:
    sub_261B8C618();
    id v65 = v47;
    id v66 = sub_261B8CE78();
    os_log_type_t v67 = sub_261B8F4A8();
    if (os_log_type_enabled(v66, v67))
    {
      os_log_t v68 = (uint8_t *)swift_slowAlloc();
      id v84 = (id)swift_slowAlloc();
      uint64_t v86 = (uint64_t)v84;
      *(_DWORD *)os_log_t v68 = 136446210;
      id v69 = objc_msgSend(v65, sel_fiui_finalWorkoutUUID);
      if (v69)
      {
        BOOL v70 = v69;
        sub_261B8AE18();

        uint64_t v71 = sub_261B8AE38();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v20, 0, 1, v71);
      }
      else
      {
        uint64_t v72 = sub_261B8AE38();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v20, 1, 1, v72);
      }
      sub_261AD5940((uint64_t)v20, (uint64_t)v23);
      uint64_t v73 = sub_261B8F6C8();
      unint64_t v75 = v74;
      sub_2619F8754((uint64_t)v23, &qword_26B416BC8);
      uint64_t v85 = sub_261AC9C40(v73, v75, &v86);
      sub_261B8F6F8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2619F0000, v66, v67, "Effort relationship array is empty for workout %{public}s", v68, 0xCu);
      id v76 = v84;
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v76, -1, -1);
      MEMORY[0x263E4E970](v68, -1, -1);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v27, v80);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v81 + 8))(v27, v80);
    }
LABEL_26:
    ((void (*)(void))v83)(0);
    return;
  }
LABEL_7:
  id v84 = sub_261AD1AC4(v44, v45);
  v83();
  id v48 = v84;
}

void sub_261AC81A8(int a1, int a2, void *a3, void *a4, void *a5, void *aBlock, void (*a7)(id, void *, id, uint64_t, void *))
{
  uint64_t v11 = _Block_copy(aBlock);
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  _Block_copy(v11);
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  a7(v13, a4, v15, ObjCClassMetadata, v11);
  _Block_release(v11);
  _Block_release(v11);
}

uint64_t static EffortUtilities.fetchExertion(forWorkout:healthStore:)(uint64_t a1, uint64_t a2)
{
  id v7 = (char *)&dword_26A9468E8 + dword_26A9468E8;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_261AC8330;
  return ((uint64_t (*)(uint64_t, void, uint64_t))v7)(a1, 0, a2);
}

uint64_t sub_261AC8330(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  unint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t static EffortUtilities.fetchExertion(forWorkout:activity:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_26A9468E8 + dword_26A9468E8);
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *id v7 = v3;
  v7[1] = sub_261AD5AC4;
  return v9(a1, a2, a3);
}

uint64_t static EffortUtilities.fetchEfforts(forMultisportWorkout:healthStore:)(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  uint64_t v3 = sub_261B8CE88();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  uint64_t v4 = sub_261B8EE28();
  v2[13] = v4;
  v2[14] = *(void *)(v4 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v5 = sub_261B8EE58();
  v2[16] = v5;
  v2[17] = *(void *)(v5 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v6 = sub_261B8AE38();
  v2[19] = v6;
  v2[20] = *(void *)(v6 - 8);
  v2[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  v2[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261AC8700, 0, 0);
}

uint64_t sub_261AC8700()
{
  if (objc_msgSend(*(id *)(v0 + 56), sel_workoutActivityType) == (id)82)
  {
    id v1 = objc_msgSend(*(id *)(v0 + 56), sel_fiui_finalWorkoutUUID);
    uint64_t v2 = *(void *)(v0 + 176);
    if (v1)
    {
      uint64_t v3 = v1;
      uint64_t v5 = *(void *)(v0 + 160);
      uint64_t v4 = *(void *)(v0 + 168);
      uint64_t v6 = *(void *)(v0 + 152);
      sub_261B8AE18();

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v4, v6);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v2, 0, 1, v6);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v6);
      if (v7 != 1)
      {
        uint64_t v9 = *(void *)(v0 + 176);
        uint64_t v10 = *(void *)(v0 + 152);
        uint64_t v11 = *(void *)(v0 + 160);
        uint64_t v12 = self;
        id v13 = (void *)sub_261B8ADF8();
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
        id v14 = objc_msgSend(v12, sel_predicateForObjectWithUUID_, v13);
        *(void *)(v0 + 184) = v14;

        id v15 = v14;
        sub_261B8EE48();
        uint64_t v16 = (void *)swift_task_alloc();
        *(void *)(v0 + 192) = v16;
        *uint64_t v16 = v0;
        v16[1] = sub_261AC8A28;
        uint64_t v7 = *(void *)(v0 + 120);
        uint64_t v8 = *(void *)(v0 + 64);
        return MEMORY[0x270EF32D8](v7, v8);
      }
    }
    else
    {
      uint64_t v7 = (*(uint64_t (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 160) + 56))(*(void *)(v0 + 176), 1, 1, *(void *)(v0 + 152));
    }
    __break(1u);
    return MEMORY[0x270EF32D8](v7, v8);
  }
  sub_261B8C618();
  uint64_t v17 = sub_261B8CE78();
  os_log_type_t v18 = sub_261B8F4B8();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_2619F0000, v17, v18, "fetchEffortsForMultisportWorkout was called with a non-multisport workout", v19, 2u);
    MEMORY[0x263E4E970](v19, -1, -1);
  }
  uint64_t v20 = *(void *)(v0 + 96);
  uint64_t v21 = *(void *)(v0 + 72);
  uint64_t v22 = *(void *)(v0 + 80);

  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  unint64_t v23 = sub_261AC55FC(MEMORY[0x263F8EE78]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v24(v23);
}

uint64_t sub_261AC8A28()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_261AC8F68;
  }
  else
  {
    uint64_t v2 = sub_261AC8B48;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_261AC8B48()
{
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t v46 = sub_261B8EE18();
  id v2 = objc_msgSend(v1, sel_workoutActivities);
  uint64_t v3 = (_UNKNOWN **)sub_261A0CCCC(0, &qword_26A9437A0);
  unint64_t v4 = sub_261B8F2D8();

  if (v4 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_261B8F9D8();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      if (v5 < 1)
      {
        __break(1u);
        return;
      }
      unint64_t v43 = v3;
      uint64_t v6 = 0;
      unint64_t v7 = v4 & 0xC000000000000001;
      uint64_t v8 = (void *)MEMORY[0x263F8EE80];
      uint64_t v9 = &selRef_album;
      uint64_t v3 = &off_26558C000;
      unint64_t v45 = v4;
      while (1)
      {
        id v10 = v7 ? (id)MEMORY[0x263E4D7B0](v6, v4) : *(id *)(v4 + 8 * v6 + 32);
        uint64_t v11 = v10;
        id v12 = objc_msgSend(v10, v9[222], v43);
        id v13 = objc_msgSend(v12, sel_activityType);

        if (v13 != (id)83) {
          break;
        }

LABEL_6:
        if (v5 == ++v6) {
          goto LABEL_36;
        }
      }
      id v14 = v11;
      id v15 = (char *)sub_261AD1AC4(v46, v11);
      unint64_t v4 = (unint64_t)v15;
      uint64_t v16 = *(void **)&v15[OBJC_IVAR___WOEffortSampleCollection_effortSample];
      if (v16)
      {
        id v17 = *(id *)&v15[OBJC_IVAR___WOEffortSampleCollection_effortSample];
      }
      else
      {
        os_log_type_t v18 = *(void **)&v15[OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample];
        if (!v18)
        {

          id v20 = 0;
LABEL_16:
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v23 = sub_261ACB474((uint64_t)v14);
          uint64_t v24 = v8[2];
          BOOL v25 = (v22 & 1) == 0;
          uint64_t v26 = v24 + v25;
          if (__OFADD__(v24, v25))
          {
            __break(1u);
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
          unint64_t v4 = v22;
          if (v8[3] < v26)
          {
            sub_261ACDE48(v26, isUniquelyReferenced_nonNull_native);
            unint64_t v27 = sub_261ACB474((uint64_t)v14);
            if ((v4 & 1) != (v28 & 1))
            {
              sub_261B8FBF8();
              return;
            }
            unint64_t v23 = v27;
            uint64_t v29 = 8 * v27;
            if ((v4 & 1) == 0) {
              goto LABEL_26;
            }
LABEL_23:
            uint64_t v30 = v8[7];

            *(void *)(v30 + v29) = v20;
LABEL_28:
            swift_bridgeObjectRelease();

            uint64_t v9 = &selRef_album;
            unint64_t v4 = v45;
            goto LABEL_6;
          }
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v29 = 8 * v23;
            if (v22) {
              goto LABEL_23;
            }
          }
          else
          {
            sub_261AD02E0();
            uint64_t v29 = 8 * v23;
            if (v4) {
              goto LABEL_23;
            }
          }
LABEL_26:
          v8[(v23 >> 6) + 8] |= 1 << v23;
          *(void *)(v8[6] + v29) = v14;
          *(void *)(v8[7] + v29) = v20;
          uint64_t v31 = v8[2];
          BOOL v32 = __OFADD__(v31, 1);
          uint64_t v33 = v31 + 1;
          if (v32) {
            goto LABEL_33;
          }
          v8[2] = v33;
          id v34 = v14;
          goto LABEL_28;
        }
        id v17 = v18;
        uint64_t v16 = 0;
      }
      id v19 = v16;
      id v20 = objc_msgSend(v17, sel_quantity);

      goto LABEL_16;
    }
  }
  uint64_t v8 = (void *)MEMORY[0x263F8EE80];
LABEL_36:
  id v35 = (void *)v44[23];
  uint64_t v37 = v44[17];
  uint64_t v36 = v44[18];
  uint64_t v39 = v44[15];
  uint64_t v38 = v44[16];
  uint64_t v40 = v44[13];
  uint64_t v41 = v44[14];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v42 = (void (*)(void *))v44[1];
  v42(v8);
}

uint64_t sub_261AC8F68()
{
  unint64_t v27 = v0;
  uint64_t v1 = (void *)v0[25];
  sub_261B8C618();
  id v2 = v1;
  id v3 = v1;
  unint64_t v4 = sub_261B8CE78();
  os_log_type_t v5 = sub_261B8F4B8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[25];
    uint64_t v23 = v0[10];
    uint64_t v24 = v0[9];
    uint64_t v25 = v0[11];
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v26 = v8;
    *(_DWORD *)unint64_t v7 = 136446210;
    swift_getErrorValue();
    uint64_t v9 = sub_261B8FC18();
    v0[6] = sub_261AC9C40(v9, v10, &v26);
    sub_261B8F6F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2619F0000, v4, v5, "Unable to fetch effort samples for multisport workout %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v8, -1, -1);
    MEMORY[0x263E4E970](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
  }
  else
  {
    uint64_t v11 = (void *)v0[25];
    uint64_t v13 = v0[10];
    uint64_t v12 = v0[11];
    uint64_t v14 = v0[9];

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  id v15 = (void *)v0[25];
  uint64_t v16 = (void *)v0[23];
  uint64_t v18 = v0[17];
  uint64_t v17 = v0[18];
  uint64_t v19 = v0[16];
  unint64_t v20 = sub_261AC55FC(MEMORY[0x263F8EE78]);

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(unint64_t))v0[1];
  return v21(v20);
}

uint64_t EffortUtilities.WorkoutAndActivityKey.hash(into:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v1 - 8);
  id v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - v5;
  uint64_t v7 = sub_261B8AE38();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)v0;
  uint64_t v12 = *(void **)(v0 + 8);
  if (objc_msgSend(v13, sel_workoutActivityType, v9) != (id)82 || v12 == 0)
  {
    id v15 = objc_msgSend(v13, sel_fiui_finalWorkoutUUID);
    if (v15)
    {
      uint64_t v16 = v15;
      sub_261B8AE18();

      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    sub_2619F86F0((uint64_t)v6, (uint64_t)v3, &qword_26B416BC8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7) == 1)
    {
      sub_261B8FCB8();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v3, v7);
      sub_261B8FCB8();
      sub_261AD5A20(&qword_26B416BB8, MEMORY[0x263F07508]);
      sub_261B8F028();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
    return sub_2619F8754((uint64_t)v6, &qword_26B416BC8);
  }
  else
  {
    id v17 = v12;
    id v18 = objc_msgSend(v17, sel_UUID);
    sub_261B8AE18();

    sub_261AD5A20(&qword_26B416BB8, MEMORY[0x263F07508]);
    sub_261B8F028();

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

uint64_t EffortUtilities.WorkoutAndActivityKey.hashValue.getter()
{
  return sub_261B8FCE8();
}

uint64_t sub_261AC9580()
{
  return sub_261B8FCE8();
}

uint64_t sub_261AC95D0()
{
  return sub_261B8FCE8();
}

uint64_t sub_261AC961C(id *a1, void *a2)
{
  id v36 = a2;
  uint64_t v3 = sub_261B8AE38();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v35 = (uint64_t)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v33 - v12;
  double v15 = MEMORY[0x270FA5388](v14);
  id v17 = (char *)&v33 - v16;
  id v18 = objc_msgSend(*a1, sel_workout, v15);
  id v19 = objc_msgSend(v18, sel_fiui_finalWorkoutUUID);

  if (v19)
  {
    sub_261B8AE18();

    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v20(v17, 0, 1, v3);
  }
  else
  {
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v20(v17, 1, 1, v3);
  }
  id v21 = objc_msgSend(v36, sel_fiui_finalWorkoutUUID);
  if (v21)
  {
    unint64_t v22 = v21;
    sub_261B8AE18();

    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = 1;
  }
  v20(v13, v23, 1, v3);
  uint64_t v24 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_2619F86F0((uint64_t)v17, (uint64_t)v8, &qword_26B416BC8);
  sub_2619F86F0((uint64_t)v13, v24, &qword_26B416BC8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v25((uint64_t)v8, 1, v3) == 1)
  {
    sub_2619F8754((uint64_t)v13, &qword_26B416BC8);
    sub_2619F8754((uint64_t)v17, &qword_26B416BC8);
    int v26 = v25(v24, 1, v3);
    if (v26 == 1) {
      unint64_t v27 = &qword_26B416BC8;
    }
    else {
      unint64_t v27 = &qword_26B416BD0;
    }
    if (v26 == 1) {
      char v28 = -1;
    }
    else {
      char v28 = 0;
    }
  }
  else
  {
    uint64_t v29 = v35;
    sub_2619F86F0((uint64_t)v8, v35, &qword_26B416BC8);
    if (v25(v24, 1, v3) == 1)
    {
      sub_2619F8754((uint64_t)v13, &qword_26B416BC8);
      sub_2619F8754((uint64_t)v17, &qword_26B416BC8);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v29, v3);
      char v28 = 0;
      unint64_t v27 = &qword_26B416BD0;
    }
    else
    {
      uint64_t v30 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v34, v24, v3);
      sub_261AD5A20(&qword_26B416BC0, MEMORY[0x263F07508]);
      char v28 = sub_261B8F0A8();
      uint64_t v31 = *(void (**)(char *, uint64_t))(v4 + 8);
      v31(v30, v3);
      unint64_t v27 = &qword_26B416BC8;
      sub_2619F8754((uint64_t)v13, &qword_26B416BC8);
      sub_2619F8754((uint64_t)v17, &qword_26B416BC8);
      v31((char *)v29, v3);
    }
  }
  sub_2619F8754((uint64_t)v8, v27);
  return v28 & 1;
}

id EffortUtilities.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id EffortUtilities.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EffortUtilities();
  return objc_msgSendSuper2(&v2, sel_init);
}

id EffortUtilities.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EffortUtilities();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_261AC9B6C(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v7 = a3;
  uint64_t v9 = *(void (**)(id, uint64_t, void *, void *))(a1 + 32);
  if (a3)
  {
    sub_261A0CCCC(0, &qword_26A946980);
    uint64_t v7 = sub_261B8F2D8();
  }
  swift_retain();
  id v10 = a2;
  id v11 = a4;
  id v12 = a5;
  v9(v10, v7, a4, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_261AC9C40(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_261AC9D14(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_261A0CC60((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_261A0CC60((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_261AC9D14(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_261B8F708();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_261AC9ED0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_261B8F928();
  if (!v8)
  {
    sub_261B8F9B8();
    __break(1u);
LABEL_17:
    uint64_t result = sub_261B8FA18();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_261AC9ED0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_261AC9F68(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_261ACA0E0(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_261ACA0E0(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_261AC9F68(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_261B68910(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_261B8F8D8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_261B8F9B8();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_261B8F1D8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_261B8FA18();
    __break(1u);
LABEL_14:
    uint64_t result = sub_261B8F9B8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_261ACA0E0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9469E8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

uint64_t sub_261ACA230(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_261ACA4F0(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_261ACA250(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_261ACAC54(a1, a2, a3, (void *)*v3, &qword_26A9469E0, MEMORY[0x263F07508]);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_261ACA28C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_261ACA650(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_261ACA2AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_261ACA7FC(a1, a2, a3, *v3, &qword_26A946998);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_261ACA2D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_261ACA7FC(a1, a2, a3, *v3, &qword_26A946900);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_261ACA2FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_261ACAC54(a1, a2, a3, (void *)*v3, &qword_26A9438E8, MEMORY[0x263F87EE8]);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_261ACA338(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_261ACAC54(a1, a2, a3, (void *)*v3, &qword_26A946960, MEMORY[0x263F87DB8]);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_261ACA374(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_261ACAE9C(a1, a2, a3, (void *)*v3, qword_26B4166D0, &qword_26B416670);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_261ACA3A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_261ACA7FC(a1, a2, a3, *v3, &qword_26A946970);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_261ACA3CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_261ACAC54(a1, a2, a3, (void *)*v3, &qword_26A946968, (uint64_t (*)(void))type metadata accessor for PowerZonesBarChartElement);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_261ACA408(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_261ACA958(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_261ACA428(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_261ACAC54(a1, a2, a3, (void *)*v3, qword_26B416D50, type metadata accessor for TrainingLoadViewModel);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_261ACA464(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_261ACAAE4(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_261ACA484(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_261ACAC54(a1, a2, a3, (void *)*v3, &qword_26A9438D8, MEMORY[0x263F69420]);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_261ACA4C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_261ACAE9C(a1, a2, a3, (void *)*v3, &qword_26A946938, &qword_26A946940);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_261ACA4F0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943308);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

uint64_t sub_261ACA650(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9469B0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9469B8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

uint64_t sub_261ACA7DC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_261ACAC54(a1, a2, a3, a4, &qword_26A946960, MEMORY[0x263F87DB8]);
}

uint64_t sub_261ACA7FC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v14 = v11 + 32;
  double v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

uint64_t sub_261ACA958(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943570);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

uint64_t sub_261ACAAC4(char a1, int64_t a2, char a3, void *a4)
{
  return sub_261ACAC54(a1, a2, a3, a4, qword_26B416D50, type metadata accessor for TrainingLoadViewModel);
}

uint64_t sub_261ACAAE4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946920);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

uint64_t sub_261ACAC54(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  uint64_t v16[2] = v11;
  void v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  id v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

uint64_t sub_261ACAE9C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  uint64_t v16[2] = v11;
  void v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  id v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

unint64_t sub_261ACB0DC(uint64_t a1)
{
  sub_261B8EEC8();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F090E8];
  sub_261AD5A20(&qword_26B416C00, MEMORY[0x263F090E8]);
  uint64_t v3 = sub_261B8F018();
  return sub_261ACB998(a1, v3, MEMORY[0x263F090E8], &qword_26B416C10, v2, MEMORY[0x263F09108]);
}

unint64_t sub_261ACB1B0(uint64_t a1, uint64_t a2)
{
  sub_261B8FC98();
  EffortUtilities.WorkoutAndActivityKey.hash(into:)();
  uint64_t v4 = sub_261B8FCE8();
  return sub_261ACB590(a1, a2, v4);
}

unint64_t sub_261ACB228(uint64_t a1, uint64_t a2)
{
  sub_261B8FC98();
  sub_261B8F188();
  uint64_t v4 = sub_261B8FCE8();
  return sub_261ACB638(a1, a2, v4);
}

unint64_t sub_261ACB2A0(uint64_t a1)
{
  sub_261B8FC98();
  sub_261B8E0F8();
  uint64_t v2 = sub_261B8FCE8();
  return sub_261ACB71C(a1, v2);
}

unint64_t sub_261ACB30C(uint64_t a1)
{
  sub_261B8F0F8();
  sub_261B8FC98();
  sub_261B8F188();
  uint64_t v2 = sub_261B8FCE8();
  swift_bridgeObjectRelease();
  return sub_261ACB820(a1, v2);
}

unint64_t sub_261ACB3A0(uint64_t a1)
{
  sub_261B8AE38();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F07508];
  sub_261AD5A20(&qword_26B416BB8, MEMORY[0x263F07508]);
  uint64_t v3 = sub_261B8F018();
  return sub_261ACB998(a1, v3, MEMORY[0x263F07508], &qword_26B416BC0, v2, MEMORY[0x263F07528]);
}

unint64_t sub_261ACB474(uint64_t a1)
{
  uint64_t v2 = sub_261B8F698();
  return sub_261ACBB38(a1, v2);
}

unint64_t sub_261ACB4B8(unsigned __int8 a1)
{
  sub_261B8FC98();
  sub_261B8FCA8();
  uint64_t v2 = sub_261B8FCE8();
  return sub_261ACBC54(a1, v2);
}

unint64_t sub_261ACB524(uint64_t a1)
{
  sub_261B8FC98();
  sub_261B8FCA8();
  uint64_t v2 = sub_261B8FCE8();
  return sub_261ACBCF4(a1, v2);
}

unint64_t sub_261ACB590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v12[0] = a1;
  v12[1] = a2;
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v5 = a3 & ~v4;
  if ((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = ~v4;
    do
    {
      int64_t v7 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v5);
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      v11[0] = v9;
      v11[1] = v8;
      if (_s9WorkoutUI15EffortUtilitiesC0A14AndActivityKeyV2eeoiySbAE_AEtFZ_0((uint64_t)v11, (uint64_t)v12)) {
        break;
      }
      unint64_t v5 = (v5 + 1) & v6;
    }
    while (((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_261ACB638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    int64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_261B8FBA8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_261B8FBA8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_261ACB71C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    swift_retain();
    char v6 = sub_261B8E0C8();
    swift_release();
    if ((v6 & 1) == 0)
    {
      uint64_t v7 = ~v4;
      for (unint64_t i = (i + 1) & v7; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v7)
      {
        swift_retain();
        char v8 = sub_261B8E0C8();
        swift_release();
        if (v8) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_261ACB820(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_261B8F0F8();
    uint64_t v8 = v7;
    if (v6 == sub_261B8F0F8() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_261B8FBA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_261B8F0F8();
          uint64_t v15 = v14;
          if (v13 == sub_261B8F0F8() && v15 == v16) {
            break;
          }
          char v18 = sub_261B8FBA8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_261ACB998(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  unint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v24 = a4;
  v22[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  v10.n128_f64[0] = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v22 - v11;
  uint64_t v23 = v6;
  uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v14 = a2 & ~v13;
  v22[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    uint64_t v15 = ~v13;
    char v18 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16);
    uint64_t v17 = v9 + 16;
    uint64_t v16 = v18;
    uint64_t v19 = *(void *)(v17 + 56);
    do
    {
      v16(v12, *(void *)(v23 + 48) + v19 * v14, v8, v10);
      sub_261AD5A20(v24, v25);
      char v20 = sub_261B8F0A8();
      (*(void (**)(char *, uint64_t))(v17 - 8))(v12, v8);
      if (v20) {
        break;
      }
      unint64_t v14 = (v14 + 1) & v15;
    }
    while (((*(void *)(v22[0] + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

unint64_t sub_261ACBB38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_261A0CCCC(0, &qword_26A9437A0);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_261B8F6A8();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_261B8F6A8();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_261ACBC54(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_261ACBCF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_261ACBD90(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v76 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v72 = (char *)&v66 - v8;
  uint64_t v9 = sub_261B8AE38();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v75 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9469D8);
  int v78 = a2;
  uint64_t v13 = sub_261B8F9F8();
  uint64_t v79 = v12;
  if (!*(void *)(v12 + 16)) {
    goto LABEL_52;
  }
  uint64_t v77 = v9;
  id v66 = v2;
  uint64_t v14 = 1 << *(unsigned char *)(v79 + 32);
  uint64_t v15 = *(void *)(v79 + 64);
  id v69 = (void *)(v79 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int64_t v68 = (unint64_t)(v14 + 63) >> 6;
  unint64_t v74 = (void (**)(char *, uint64_t))(v10 + 8);
  BOOL v70 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  uint64_t v71 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  os_log_type_t v67 = (void (**)(char *, uint64_t, uint64_t))(v10 + 32);
  uint64_t v18 = v13 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  id v21 = v72;
  uint64_t v73 = v13;
  while (1)
  {
    if (v17)
    {
      unint64_t v24 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v25 = v24 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      return result;
    }
    if (v26 >= v68) {
      break;
    }
    unint64_t v27 = v69;
    unint64_t v28 = v69[v26];
    ++v20;
    if (!v28)
    {
      int64_t v20 = v26 + 1;
      if (v26 + 1 >= v68) {
        goto LABEL_45;
      }
      unint64_t v28 = v69[v20];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v68)
        {
LABEL_45:
          swift_release();
          uint64_t v3 = v66;
          if ((v78 & 1) == 0) {
            goto LABEL_52;
          }
          goto LABEL_46;
        }
        unint64_t v28 = v69[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v20 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_54;
            }
            if (v20 >= v68) {
              goto LABEL_45;
            }
            unint64_t v28 = v69[v20];
            ++v29;
            if (v28) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v29;
      }
    }
LABEL_21:
    unint64_t v17 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v20 << 6);
LABEL_22:
    uint64_t v30 = *(void *)(v79 + 48) + 16 * v25;
    uint64_t v31 = *(void **)v30;
    BOOL v32 = *(void **)(v30 + 8);
    uint64_t v33 = *(void **)(*(void *)(v79 + 56) + 8 * v25);
    if ((v78 & 1) == 0)
    {
      id v34 = v33;
      id v35 = v31;
      id v36 = v32;
    }
    sub_261B8FC98();
    if (objc_msgSend(v31, sel_workoutActivityType) != (id)82 || v32 == 0)
    {
      id v38 = objc_msgSend(v31, sel_fiui_finalWorkoutUUID);
      if (v38)
      {
        uint64_t v39 = v38;
        sub_261B8AE18();

        uint64_t v40 = 0;
      }
      else
      {
        uint64_t v40 = 1;
      }
      id v48 = v21;
      uint64_t v49 = (uint64_t)v21;
      uint64_t v50 = v77;
      (*v71)(v48, v40, 1, v77);
      uint64_t v51 = v49;
      uint64_t v52 = v49;
      uint64_t v53 = v76;
      sub_2619F86F0(v52, v76, &qword_26B416BC8);
      if ((*v70)(v53, 1, v50) == 1)
      {
        sub_261B8FCB8();
      }
      else
      {
        unint64_t v54 = v17;
        int64_t v55 = v20;
        uint64_t v56 = v75;
        (*v67)(v75, v76, v50);
        sub_261B8FCB8();
        sub_261AD5A20(&qword_26B416BB8, MEMORY[0x263F07508]);
        sub_261B8F028();
        uint64_t v57 = v56;
        int64_t v20 = v55;
        unint64_t v17 = v54;
        uint64_t v13 = v73;
        (*v74)(v57, v50);
      }
      id v21 = (char *)v51;
      sub_2619F8754(v51, &qword_26B416BC8);
    }
    else
    {
      id v41 = v32;
      id v42 = objc_msgSend(v41, sel_UUID);
      unint64_t v43 = v17;
      int64_t v44 = v20;
      unint64_t v45 = v75;
      sub_261B8AE18();

      sub_261AD5A20(&qword_26B416BB8, MEMORY[0x263F07508]);
      uint64_t v46 = v77;
      sub_261B8F028();

      uint64_t v47 = v45;
      int64_t v20 = v44;
      unint64_t v17 = v43;
      id v21 = v72;
      uint64_t v13 = v73;
      (*v74)(v47, v46);
    }
    uint64_t result = sub_261B8FCE8();
    uint64_t v58 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v59 = result & ~v58;
    unint64_t v60 = v59 >> 6;
    if (((-1 << v59) & ~*(void *)(v18 + 8 * (v59 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v59) & ~*(void *)(v18 + 8 * (v59 >> 6)))) | v59 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v61 = 0;
      unint64_t v62 = (unint64_t)(63 - v58) >> 6;
      do
      {
        if (++v60 == v62 && (v61 & 1) != 0)
        {
          __break(1u);
          goto LABEL_53;
        }
        BOOL v63 = v60 == v62;
        if (v60 == v62) {
          unint64_t v60 = 0;
        }
        v61 |= v63;
        uint64_t v64 = *(void *)(v18 + 8 * v60);
      }
      while (v64 == -1);
      unint64_t v22 = __clz(__rbit64(~v64)) + (v60 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    uint64_t v23 = (void *)(*(void *)(v13 + 48) + 16 * v22);
    *uint64_t v23 = v31;
    v23[1] = v32;
    *(void *)(*(void *)(v13 + 56) + 8 * v22) = v33;
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v66;
  unint64_t v27 = v69;
  if ((v78 & 1) == 0) {
    goto LABEL_52;
  }
LABEL_46:
  uint64_t v65 = 1 << *(unsigned char *)(v79 + 32);
  if (v65 >= 64) {
    bzero(v27, ((unint64_t)(v65 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v27 = -1 << v65;
  }
  *(void *)(v79 + 16) = 0;
LABEL_52:
  uint64_t result = swift_release();
  uint64_t *v3 = v13;
  return result;
}

uint64_t sub_261ACC40C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943630);
  char v6 = a2;
  uint64_t v7 = sub_261B8F9F8();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    id v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_261B8FC98();
      sub_261B8F188();
      uint64_t result = sub_261B8FCE8();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      int64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *int64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v8;
  return result;
}

uint64_t sub_261ACC724(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9469A0);
  uint64_t v6 = sub_261B8F9F8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      unint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_261A0CCBC(v24, v35);
      }
      else
      {
        sub_261A0CC60((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_261B8FC98();
      sub_261B8F188();
      uint64_t result = sub_261B8FCE8();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_261A0CCBC(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_261ACCA24(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946908);
  uint64_t v6 = sub_261B8F9F8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v31 = v2;
  uint64_t v32 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v32 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v32 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v31;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v32 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v32 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    uint64_t v29 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
    long long v33 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
    if ((a2 & 1) == 0) {
      swift_retain();
    }
    sub_261B8FC98();
    sub_261B8E0F8();
    uint64_t result = sub_261B8FCE8();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v29;
    *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v31;
  uint64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  if (v30 >= 64) {
    bzero(v22, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v30;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_261ACCD10(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946910);
  char v35 = a2;
  uint64_t v6 = sub_261B8F9F8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    int64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    uint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_261A0CCBC(v22, v36);
    }
    else
    {
      sub_261A0CC60((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_261B8F0F8();
    sub_261B8FC98();
    sub_261B8F188();
    uint64_t v24 = sub_261B8FCE8();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_261A0CCBC(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_261ACD04C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v49 = *(void *)(View - 8);
  MEMORY[0x270FA5388](View - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8EEC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416D38);
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = sub_261B8F9F8();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int64_t v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  int64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    unint64_t v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    int64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_261A3D138(v32 + v33 * v24, v54);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_261A3C02C(v34 + v33 * v24, v54);
    }
    sub_261AD5A20(&qword_26B416C00, MEMORY[0x263F090E8]);
    uint64_t result = sub_261B8F018();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      int64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      int64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_261A3D138(v54, *(void *)(v13 + 56) + v33 * v22);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  uint64_t v3 = v44;
  unint64_t v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v13;
  return result;
}

uint64_t sub_261ACD528(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v53 = sub_261B8CAD8();
  uint64_t v5 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8EEC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416D30);
  int v50 = a2;
  uint64_t v12 = sub_261B8F9F8();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  int64_t v44 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v45 = v5 + 16;
  uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v48 = v5;
  uint64_t v49 = v8;
  uint64_t v18 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v51 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v43) {
      break;
    }
    unint64_t v26 = v44;
    unint64_t v27 = v44[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v27 = v44[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v44[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v43) {
              goto LABEL_34;
            }
            unint64_t v27 = v44[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v49 + 72);
    unint64_t v30 = *(void *)(v11 + 48) + v29 * v24;
    if (v50)
    {
      (*v18)(v10, v30, v7);
      uint64_t v31 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 32))(v52, v31 + v32 * v24, v53);
    }
    else
    {
      (*v46)(v10, v30, v7);
      uint64_t v33 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v52, v33 + v32 * v24, v53);
    }
    sub_261AD5A20(&qword_26B416C00, MEMORY[0x263F090E8]);
    uint64_t result = sub_261B8F018();
    uint64_t v34 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v18)((char *)(*(void *)(v13 + 48) + v29 * v22), (unint64_t)v10, v7);
    uint64_t result = (*v51)(*(void *)(v13 + 56) + v32 * v22, v52, v53);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v26 = v44;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v11 + 32);
  if (v41 >= 64) {
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v26 = -1 << v41;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v13;
  return result;
}

uint64_t sub_261ACDA24(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_261B8AE38();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946990);
  int v46 = a2;
  uint64_t v10 = sub_261B8F9F8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  int64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    int64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_261AD5A20(&qword_26B416BB8, MEMORY[0x263F07508]);
    uint64_t result = sub_261B8F018();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_261ACDE48(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946978);
  uint64_t v6 = sub_261B8F9F8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  BOOL v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    unint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v32;
      id v34 = v31;
    }
    uint64_t result = sub_261B8F698();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_261ACE11C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = sub_261B8AE38();
  uint64_t v5 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416D40);
  int v41 = a2;
  uint64_t result = sub_261B8F9F8();
  uint64_t v9 = result;
  if (*(void *)(v7 + 16))
  {
    uint64_t v37 = v2;
    int64_t v10 = 0;
    uint64_t v11 = *(void *)(v7 + 64);
    uint64_t v39 = (void *)(v7 + 64);
    uint64_t v12 = 1 << *(unsigned char *)(v7 + 32);
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v11;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v15 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v14)
      {
        unint64_t v18 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v19 = v18 | (v10 << 6);
      }
      else
      {
        int64_t v20 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v39;
        if (v20 >= v38) {
          goto LABEL_34;
        }
        unint64_t v21 = v39[v20];
        ++v10;
        if (!v21)
        {
          int64_t v10 = v20 + 1;
          if (v20 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v21 = v39[v10];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v38)
            {
LABEL_34:
              if ((v41 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v37;
                goto LABEL_41;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v7 + 32);
              if (v36 >= 64) {
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v39 = -1 << v36;
              }
              uint64_t v3 = v37;
              *(void *)(v7 + 16) = 0;
              break;
            }
            unint64_t v21 = v39[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v10 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v10 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v21 = v39[v10];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v10 = v22;
          }
        }
LABEL_21:
        unint64_t v14 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v10 << 6);
      }
      uint64_t v23 = *(void *)(v7 + 56);
      uint64_t v24 = v7;
      char v25 = *(unsigned char *)(*(void *)(v7 + 48) + v19);
      uint64_t v26 = v5;
      uint64_t v27 = *(void *)(v5 + 72);
      uint64_t v28 = v23 + v27 * v19;
      if (v41) {
        (*v15)(v42, v28, v43);
      }
      else {
        (*v40)(v42, v28, v43);
      }
      sub_261B8FC98();
      sub_261B8FCA8();
      uint64_t result = sub_261B8FCE8();
      uint64_t v29 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v17 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v9 + 48) + v17) = v25;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v15)(*(void *)(v9 + 56) + v27 * v17, v42, v43);
      ++*(void *)(v9 + 16);
      uint64_t v5 = v26;
      uint64_t v7 = v24;
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  uint64_t *v3 = v9;
  return result;
}

uint64_t sub_261ACE4D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946930);
  uint64_t result = sub_261B8F9F8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    char v32 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v31 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v31) {
          goto LABEL_33;
        }
        unint64_t v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v21 = v32[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v32 = -1 << v30;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v31) {
                  goto LABEL_33;
                }
                unint64_t v21 = v32[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = 8 * v19;
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + v27);
      uint64_t v29 = *(void *)(*(void *)(v5 + 56) + v27);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_261B8FC98();
      sub_261B8FCA8();
      uint64_t result = sub_261B8FCE8();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 8 * v16;
      *(void *)(*(void *)(v7 + 48) + v17) = v28;
      *(void *)(*(void *)(v7 + 56) + v17) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_261ACE7B0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946928);
  char v36 = a2;
  uint64_t v6 = sub_261B8F9F8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_261B8FC98();
    sub_261B8F188();
    uint64_t result = sub_261B8FCE8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_261ACEAC8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946958);
  char v38 = a2;
  uint64_t v6 = sub_261B8F9F8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_261B8FC98();
    sub_261B8F188();
    uint64_t result = sub_261B8FCE8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

_OWORD *sub_261ACEDD8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_261A0CCBC(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_261ACEE44(unint64_t result, uint64_t a2, void *a3, double a4, double a5)
{
  a3[(result >> 6) + 8] |= 1 << result;
  *(void *)(a3[6] + 8 * result) = a2;
  uint64_t v5 = (double *)(a3[7] + 16 * result);
  *uint64_t v5 = a4;
  v5[1] = a5;
  uint64_t v6 = a3[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a3[2] = v8;
  }
  return result;
}

_OWORD *sub_261ACEE8C(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_261A0CCBC(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_261ACEEF4(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_261B8AE38();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_261ACEFAC(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_261B8AE38();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

unint64_t sub_261ACF058(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

id sub_261ACF0A0()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9469D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_261B8F9E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *id v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    unint64_t v18 = *(void **)v17;
    unint64_t v19 = *(void **)(v17 + 8);
    uint64_t v20 = 8 * v15;
    int64_t v21 = *(void **)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v22 = v18;
    v22[1] = v19;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    id v23 = v21;
    id v24 = v18;
    id result = v19;
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_261ACF260()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943630);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_261B8F9E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *id v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_261ACF430()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9469A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_261B8F9E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *id v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_261A0CC60(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_261A0CCBC(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    id v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_261ACF618()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946908);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_261B8F9E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *id v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    id result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_261ACF7C0()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946910);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_261B8F9E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *id v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_261A0CC60(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_261A0CCBC(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_261ACF988()
{
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v29 = *(void *)(View - 8);
  MEMORY[0x270FA5388](View - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_261B8EEC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416D38);
  int64_t v24 = v0;
  uint64_t v8 = *v0;
  uint64_t v9 = sub_261B8F9E8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *int64_t v24 = v10;
    return result;
  }
  id result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  int64_t v13 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v8 + 64);
  uint64_t v25 = v8 + 64;
  int64_t v26 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v27 = v5 + 32;
  uint64_t v28 = v5 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v13);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v5 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v8 + 48) + v19, v4);
    unint64_t v20 = *(void *)(v29 + 72) * v18;
    sub_261A3C02C(*(void *)(v8 + 56) + v20, (uint64_t)v3);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(void *)(v10 + 48) + v19, v7, v4);
    id result = (void *)sub_261A3D138((uint64_t)v3, *(void *)(v10 + 56) + v20);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_261ACFCA0()
{
  uint64_t v42 = sub_261B8CAD8();
  uint64_t v45 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  int v41 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_261B8EEC8();
  uint64_t v44 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v39 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416D30);
  uint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_261B8F9E8();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v46 = v4;
  if (!v5)
  {
    id result = (void *)swift_release();
    uint64_t v31 = v46;
    uint64_t v30 = v32;
LABEL_25:
    *uint64_t v30 = v31;
    return result;
  }
  uint64_t v6 = v4;
  id result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v46;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v11 = -1;
  uint64_t v43 = v3;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v45;
  uint64_t v14 = v44;
  uint64_t v37 = v45 + 16;
  uint64_t v38 = v44 + 16;
  uint64_t v35 = v45 + 32;
  uint64_t v36 = v44 + 32;
  uint64_t v15 = v39;
  uint64_t v16 = v40;
  uint64_t v17 = v42;
  uint64_t v18 = v46;
  while (1)
  {
    if (v12)
    {
      unint64_t v19 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      int64_t v47 = v9;
      unint64_t v20 = v19 | (v9 << 6);
      uint64_t v21 = v43;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v21 = v43;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    int64_t v28 = v9 + 1;
    if (!v27)
    {
      int64_t v28 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v28);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    int64_t v47 = v28;
    unint64_t v20 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_9:
    unint64_t v22 = *(void *)(v14 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(void *)(v21 + 48) + v22, v16);
    unint64_t v23 = *(void *)(v13 + 72) * v20;
    unint64_t v24 = *(void *)(v21 + 56) + v23;
    uint64_t v25 = v41;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v41, v24, v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(void *)(v18 + 48) + v22, v15, v16);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(void *)(v18 + 56) + v23, v25, v17);
    int64_t v9 = v47;
  }
  int64_t v29 = v26 + 2;
  if (v29 >= v34)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v30 = v32;
    uint64_t v31 = v46;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v29);
  if (v27)
  {
    int64_t v28 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v28 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v28 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v28);
    ++v29;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_261AD0048()
{
  uint64_t v1 = sub_261B8AE38();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946990);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_261B8F9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void **)(*(void *)(v5 + 56) + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_261AD02E0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946978);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_261B8F9E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v18;
    id result = v17;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_261AD0488()
{
  uint64_t v1 = sub_261B8AE38();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416D40);
  int64_t v22 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_261B8F9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *int64_t v22 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v23 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v26 = v2 + 16;
  int64_t v24 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v25 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_9:
    char v16 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
    unint64_t v17 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v17, v1);
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v16;
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v17, v4, v1);
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v24) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_261AD0714()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946928);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_261B8F9E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_261AD08CC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946958);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_261B8F9E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_261AD0A80(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_261B8F9D8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_261B8F9D8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_261AD5A68();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A9469C0);
          unint64_t v12 = sub_261AD0C94(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_261A0CCCC(0, &qword_26A9469C8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

void (*sub_261AD0C94(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_261AD0D44(v6, a2, a3);
  return sub_261AD0CFC;
}

void sub_261AD0CFC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_261AD0D44(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x263E4D7B0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for DownhillRunCountMetricView;
  }
  __break(1u);
  return result;
}

uint64_t _s9WorkoutUI15EffortUtilitiesC0A14AndActivityKeyV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8AE38();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v45 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int64_t v47 = (char *)&v45 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v45 - v16;
  double v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v45 - v20;
  int64_t v22 = *(void **)a1;
  id v48 = *(id *)(a1 + 8);
  id v49 = v22;
  id v50 = *(id *)a2;
  uint64_t v46 = *(void **)(a2 + 8);
  id v23 = objc_msgSend(v22, sel_fiui_finalWorkoutUUID, v19);
  if (v23)
  {
    int64_t v24 = v23;
    sub_261B8AE18();

    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v25(v21, 0, 1, v4);
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v25(v21, 1, 1, v4);
  }
  id v26 = objc_msgSend(v50, sel_fiui_finalWorkoutUUID);
  if (v26)
  {
    uint64_t v27 = v26;
    sub_261B8AE18();

    uint64_t v28 = 0;
  }
  else
  {
    uint64_t v28 = 1;
  }
  v25(v17, v28, 1, v4);
  uint64_t v29 = (uint64_t)&v11[*(int *)(v9 + 48)];
  uint64_t v30 = &qword_26B416BC8;
  sub_2619F86F0((uint64_t)v21, (uint64_t)v11, &qword_26B416BC8);
  sub_2619F86F0((uint64_t)v17, v29, &qword_26B416BC8);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v31((uint64_t)v11, 1, v4) == 1)
  {
    sub_2619F8754((uint64_t)v17, &qword_26B416BC8);
    sub_2619F8754((uint64_t)v21, &qword_26B416BC8);
    if (v31(v29, 1, v4) == 1)
    {
      int v32 = -1;
    }
    else
    {
      uint64_t v30 = &qword_26B416BD0;
      int v32 = 0;
    }
  }
  else
  {
    sub_2619F86F0((uint64_t)v11, (uint64_t)v14, &qword_26B416BC8);
    if (v31(v29, 1, v4) == 1)
    {
      sub_2619F8754((uint64_t)v17, &qword_26B416BC8);
      sub_2619F8754((uint64_t)v21, &qword_26B416BC8);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
      int v32 = 0;
      uint64_t v30 = &qword_26B416BD0;
    }
    else
    {
      uint64_t v33 = v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v47, v29, v4);
      sub_261AD5A20(&qword_26B416BC0, MEMORY[0x263F07508]);
      int v32 = sub_261B8F0A8();
      int64_t v34 = *(void (**)(char *, uint64_t))(v5 + 8);
      v34(v33, v4);
      uint64_t v30 = &qword_26B416BC8;
      sub_2619F8754((uint64_t)v17, &qword_26B416BC8);
      sub_2619F8754((uint64_t)v21, &qword_26B416BC8);
      v34(v14, v4);
    }
  }
  sub_2619F8754((uint64_t)v11, v30);
  if (objc_msgSend(v49, sel_workoutActivityType) == (id)82
    && objc_msgSend(v50, sel_workoutActivityType) == (id)82
    && v48)
  {
    uint64_t v35 = v46;
    char v36 = (v46 == 0) & v32;
    if (v46 && ((v32 ^ 1) & 1) == 0)
    {
      id v37 = v48;
      id v38 = v35;
      id v39 = objc_msgSend(v37, sel_UUID);
      uint64_t v40 = v47;
      sub_261B8AE18();

      id v41 = objc_msgSend(v38, sel_UUID);
      uint64_t v42 = v45;
      sub_261B8AE18();

      char v36 = sub_261B8AE08();
      uint64_t v43 = *(void (**)(char *, uint64_t))(v5 + 8);
      v43(v42, v4);
      v43(v40, v4);
    }
  }
  else
  {
    char v36 = v32;
  }
  return v36 & 1;
}

void *sub_261AD1340(unint64_t a1, void *a2)
{
  unint64_t v4 = a1;
  unint64_t v17 = (void *)MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      unint64_t v6 = 0;
      unint64_t v7 = v4 & 0xC000000000000001;
      uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
      uint64_t v14 = v5;
      unint64_t v15 = v4;
      while (v7)
      {
        id v9 = (id)MEMORY[0x263E4D7B0](v6, v4);
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_17;
        }
        id v16 = v9;
        char v12 = sub_261AC961C(&v16, a2);
        if (v2)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return a2;
        }
        if (v12)
        {
          sub_261B8F948();
          sub_261B8F978();
          sub_261B8F988();
          sub_261B8F958();
          uint64_t v5 = v14;
          unint64_t v4 = v15;
        }
        else
        {
        }
        ++v6;
        if (v11 == v5)
        {
          a2 = v17;
          goto LABEL_20;
        }
      }
      if (v6 < *(void *)(v8 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v5 = sub_261B8F9D8();
      if (!v5) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v6 + 32);
    goto LABEL_9;
  }
LABEL_19:
  a2 = (void *)MEMORY[0x263F8EE78];
LABEL_20:
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_261AD14D8(uint64_t a1)
{
  uint64_t v2 = sub_261B8AE38();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v28 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_261AD5A20(&qword_26B416BB8, MEMORY[0x263F07508]);
  uint64_t v29 = sub_261B8F468();
  if (v10)
  {
    char v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    int64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    int64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    id v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    unint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      double v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_261B25FEC(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    double v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

id _s9WorkoutUI15EffortUtilitiesC22effortSampleCollection3forAA0cfG0CSaySo010HKQuantityF0CG_tFZ_0(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_261B8F9D8();
    if (v2) {
      goto LABEL_3;
    }
LABEL_29:
    uint64_t v5 = 0;
    uint64_t v7 = 0;
LABEL_30:
    swift_bridgeObjectRelease();
    int64_t v24 = (objc_class *)type metadata accessor for EffortSampleCollection();
    uint64_t v25 = (char *)objc_allocWithZone(v24);
    *(void *)&v25[OBJC_IVAR___WOEffortSampleCollection_effortSample] = v7;
    *(void *)&v25[OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample] = v5;
    v30.receiver = v25;
    v30.super_class = v24;
    return objc_msgSendSuper2(&v30, sel_init);
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_29;
  }
LABEL_3:
  sub_261A0CCCC(0, (unint64_t *)&qword_26B416D10);
  id result = (id)sub_261A0CCCC(0, &qword_26B416CF0);
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    unint64_t v28 = v1 & 0xC000000000000001;
    uint64_t v27 = (void *)*MEMORY[0x263F09E08];
    uint64_t v26 = (void *)*MEMORY[0x263F09F60];
    unint64_t v29 = v1;
    while (1)
    {
      if (v28) {
        id v9 = (id)MEMORY[0x263E4D7B0](v4, v1);
      }
      else {
        id v9 = *(id *)(v1 + 8 * v4 + 32);
      }
      uint64_t v7 = v9;
      id v10 = objc_msgSend(v9, sel_quantityType, v26);
      uint64_t v11 = (void *)MEMORY[0x263E4D3B0](v27);
      char v12 = sub_261B8F6A8();

      if ((v12 & 1) == 0) {
        goto LABEL_15;
      }
      objc_msgSend(v7, sel__creationTimestamp);
      double v14 = v13;
      if (v5) {
        break;
      }
      if (v13 <= 0.0) {
        goto LABEL_15;
      }
      uint64_t v5 = v7;
      uint64_t v7 = v6;
      unint64_t v1 = v29;
      uint64_t v8 = v2;
LABEL_6:
      ++v4;
      uint64_t v6 = v7;
      if (v8 == v4) {
        goto LABEL_30;
      }
    }
    objc_msgSend(v5, sel__creationTimestamp);
    if (v15 >= v14)
    {
LABEL_15:
      id v17 = objc_msgSend(v7, sel_quantityType);
      uint64_t v18 = (void *)MEMORY[0x263E4D3B0](v26);
      char v19 = sub_261B8F6A8();

      if (v19)
      {
        objc_msgSend(v7, sel__creationTimestamp);
        double v21 = v20;
        unint64_t v1 = v29;
        if (!v6)
        {
          uint64_t v8 = v2;
          if (v20 > 0.0) {
            goto LABEL_6;
          }
          uint64_t v6 = 0;
          goto LABEL_25;
        }
        objc_msgSend(v6, sel__creationTimestamp);
        if (v22 >= v21) {
          uint64_t v23 = v7;
        }
        else {
          uint64_t v23 = v6;
        }
        if (v22 < v21) {
          uint64_t v6 = v7;
        }
        uint64_t v7 = v23;
LABEL_24:
        uint64_t v8 = v2;
LABEL_25:

        uint64_t v7 = v6;
        goto LABEL_6;
      }
    }
    else
    {
      id v16 = v7;
      uint64_t v7 = v5;
      uint64_t v5 = v16;
    }
    unint64_t v1 = v29;
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

unint64_t sub_261AD1A70()
{
  unint64_t result = qword_26A9468C0;
  if (!qword_26A9468C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9468C0);
  }
  return result;
}

id sub_261AD1AC4(uint64_t a1, void *a2)
{
  id v63 = a2;
  uint64_t v3 = sub_261B8AE38();
  unint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v51 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD0);
  MEMORY[0x270FA5388](v59);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (unint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  double v13 = (char *)&v50 - v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v68 = (uint64_t)&v50 - v15;
  unint64_t v72 = MEMORY[0x263F8EE78];
  if ((unint64_t)a1 >> 62) {
    goto LABEL_50;
  }
  uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (uint64_t i = v16; i; uint64_t i = sub_261B8F9D8())
  {
    unint64_t v60 = v13;
    unint64_t v53 = v10;
    uint64_t v64 = v7;
    unint64_t v10 = 0;
    unint64_t v69 = a1 & 0xC000000000000001;
    uint64_t v54 = a1 + 32;
    uint64_t v55 = a1 & 0xFFFFFFFFFFFFFF8;
    uint64_t v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    id v50 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
    uint64_t v52 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    uint64_t v58 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    unint64_t v56 = (v4 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    id v17 = &selRef_album;
    double v13 = (char *)0x263F0A000;
    uint64_t v61 = a1;
    uint64_t v62 = v3;
    uint64_t v7 = (char *)i;
    while (1)
    {
      if (v69)
      {
        id v19 = (id)MEMORY[0x263E4D7B0](v10, a1);
      }
      else
      {
        if (v10 >= *(void *)(v55 + 16)) {
          goto LABEL_49;
        }
        id v19 = *(id *)(v54 + 8 * v10);
      }
      unint64_t v4 = (unint64_t)v19;
      if (__OFADD__(v10++, 1)) {
        break;
      }
      id v21 = objc_msgSend(v19, sel_samples);
      if (v21)
      {
        double v22 = v21;
        id v70 = (id)v4;
        sub_261A0CCCC(0, &qword_26A9468C8);
        unint64_t v4 = sub_261B8F2D8();

        unint64_t v71 = MEMORY[0x263F8EE78];
        if (v4 >> 62)
        {
          swift_bridgeObjectRetain();
          a1 = sub_261B8F9D8();
          if (!a1) {
            goto LABEL_27;
          }
LABEL_14:
          if (a1 < 1) {
            goto LABEL_48;
          }
          uint64_t v23 = 0;
          do
          {
            if ((v4 & 0xC000000000000001) != 0) {
              id v24 = (id)MEMORY[0x263E4D7B0](v23, v4);
            }
            else {
              id v24 = *(id *)(v4 + 8 * v23 + 32);
            }
            uint64_t v25 = v24;
            self;
            if (swift_dynamicCastObjCClass())
            {
              MEMORY[0x263E4D180]();
              if (*(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_261B8F2F8();
              }
              sub_261B8F318();
              sub_261B8F2E8();
            }
            else
            {
            }
            ++v23;
          }
          while (a1 != v23);
          swift_bridgeObjectRelease();
          unint64_t v26 = v71;
          uint64_t v3 = v62;
          uint64_t v7 = (char *)i;
        }
        else
        {
          a1 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (a1) {
            goto LABEL_14;
          }
LABEL_27:
          swift_bridgeObjectRelease();
          unint64_t v26 = MEMORY[0x263F8EE78];
        }
        swift_bridgeObjectRelease();
        uint64_t v27 = v68;
        if (!v63)
        {
          id v33 = v70;
          unint64_t v4 = (unint64_t)objc_msgSend(v70, sel_activity);

          if (v4) {
            swift_bridgeObjectRelease();
          }
          else {
            sub_261AC7170(v26);
          }
          uint64_t v18 = v33;
          a1 = v61;
          goto LABEL_5;
        }
        unint64_t v66 = v26;
        id v28 = v63;
        id v29 = objc_msgSend(v70, sel_activity);
        if (v29)
        {
          objc_super v30 = v29;
          id v31 = [v29 v17[230]];

          sub_261B8AE18();
          uint64_t v3 = v62;
          int v32 = *v58;
          (*v58)(v27, 0, 1, v62);
        }
        else
        {
          int v32 = *v58;
          (*v58)(v27, 1, 1, v3);
        }
        uint64_t v34 = v27;
        uint64_t v35 = v17[230];
        id v65 = v28;
        id v36 = [v28 v35];
        uint64_t v37 = (uint64_t)v60;
        sub_261B8AE18();

        v32(v37, 0, 1, v3);
        uint64_t v38 = (uint64_t)v64;
        uint64_t v39 = (uint64_t)&v64[*(int *)(v59 + 48)];
        sub_2619F86F0(v34, (uint64_t)v64, &qword_26B416BC8);
        sub_2619F86F0(v37, v39, &qword_26B416BC8);
        uint64_t v40 = *v57;
        if ((*v57)(v38, 1, v3) == 1)
        {
          sub_2619F8754(v37, &qword_26B416BC8);
          sub_2619F8754(v34, &qword_26B416BC8);
          unsigned int v41 = v40(v39, 1, v3);
          unint64_t v42 = v66;
          uint64_t v7 = (char *)i;
          if (v41 == 1)
          {
            sub_2619F8754((uint64_t)v64, &qword_26B416BC8);
            id v17 = &selRef_album;
            unint64_t v4 = (unint64_t)v70;
            uint64_t v18 = v65;
            goto LABEL_42;
          }
LABEL_39:
          sub_2619F8754((uint64_t)v64, &qword_26B416BD0);
          id v17 = &selRef_album;
          unint64_t v4 = (unint64_t)v70;
          uint64_t v18 = v65;
          goto LABEL_40;
        }
        uint64_t v43 = v53;
        sub_2619F86F0(v38, v53, &qword_26B416BC8);
        if (v40(v39, 1, v3) == 1)
        {
          sub_2619F8754((uint64_t)v60, &qword_26B416BC8);
          sub_2619F8754(v68, &qword_26B416BC8);
          (*v52)(v43, v3);
          uint64_t v7 = (char *)i;
          goto LABEL_39;
        }
        uint64_t v44 = v51;
        (*v50)(v51, v39, v3);
        sub_261AD5A20(&qword_26B416BC0, MEMORY[0x263F07508]);
        char v45 = sub_261B8F0A8();
        uint64_t v46 = *v52;
        (*v52)((uint64_t)v44, v3);
        sub_2619F8754((uint64_t)v60, &qword_26B416BC8);
        sub_2619F8754(v68, &qword_26B416BC8);
        v46(v43, v3);
        sub_2619F8754(v38, &qword_26B416BC8);
        unint64_t v42 = v66;
        uint64_t v7 = (char *)i;
        id v17 = &selRef_album;
        unint64_t v4 = (unint64_t)v70;
        uint64_t v18 = v65;
        if (v45) {
LABEL_42:
        }
          sub_261AC7170(v42);
        else {
LABEL_40:
        }
          swift_bridgeObjectRelease();

        a1 = v61;
        goto LABEL_5;
      }
      uint64_t v18 = (void *)v4;
LABEL_5:

      if ((char *)v10 == v7)
      {
        swift_bridgeObjectRelease();
        unint64_t v47 = v72;
        goto LABEL_52;
      }
    }
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  unint64_t v47 = MEMORY[0x263F8EE78];
LABEL_52:
  id v48 = _s9WorkoutUI15EffortUtilitiesC22effortSampleCollection3forAA0cfG0CSaySo010HKQuantityF0CG_tFZ_0(v47);
  swift_bridgeObjectRelease();
  return v48;
}

uint64_t sub_261AD22BC(unint64_t a1)
{
  return sub_261AD234C(a1, (void (*)(void))type metadata accessor for ArtworkBridge, &qword_26A9453E8, (void (*)(uint64_t))type metadata accessor for ArtworkBridge, (void (*)(id *, uint64_t))sub_261B26310);
}

uint64_t sub_261AD2304(unint64_t a1)
{
  return sub_261AD234C(a1, (void (*)(void))type metadata accessor for MediaMomentBridge, &qword_26A9453D8, (void (*)(uint64_t))type metadata accessor for MediaMomentBridge, (void (*)(id *, uint64_t))sub_261B26334);
}

uint64_t sub_261AD234C(unint64_t a1, void (*a2)(void), unint64_t *a3, void (*a4)(uint64_t), void (*a5)(id *, uint64_t))
{
  unint64_t v10 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_261B8F9D8();
    swift_bridgeObjectRelease();
  }
  a2(0);
  sub_261AD5A20(a3, a4);
  uint64_t result = sub_261B8F468();
  uint64_t v18 = result;
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_261B8F9D8();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v12) {
      return v18;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12) {
      return v18;
    }
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        uint64_t v14 = MEMORY[0x263E4D7B0](i, a1);
        a5(&v17, v14);
      }
    }
    else
    {
      uint64_t v15 = (void **)(a1 + 32);
      do
      {
        uint64_t v16 = *v15++;
        a5(&v17, (uint64_t)v16);

        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

id sub_261AD24D8(void *a1, void *a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8ADD8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v33 - v14;
  double v17 = MEMORY[0x270FA5388](v16);
  id v19 = (char *)&v33 - v18;
  if (!a3) {
    goto LABEL_7;
  }
  uint64_t v34 = a1;
  id v20 = a3;
  id v21 = objc_msgSend(v20, sel_endDate);
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_6;
  }
  double v22 = v21;
  sub_261B8AD98();

  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v23(v8, v12, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_6:

    sub_2619F8754((uint64_t)v8, &qword_26A943B38);
    a1 = v34;
LABEL_7:
    id v25 = objc_msgSend(a2, sel_startDate, v17);
    sub_261B8AD98();

    id v20 = objc_msgSend(a2, sel_endDate);
    sub_261B8AD98();
    goto LABEL_8;
  }
  v23(v15, v8, v9);
  id v24 = objc_msgSend(v20, sel_startDate);
  sub_261B8AD98();

  a1 = v34;
LABEL_8:

  sub_261A0CCCC(0, &qword_26B416CF0);
  unint64_t v26 = (void *)MEMORY[0x263E4D3B0]((id)*MEMORY[0x263F09F60]);
  id v27 = a1;
  id v28 = (void *)sub_261B8AD48();
  id v29 = (void *)sub_261B8AD48();
  id v30 = objc_msgSend(self, sel_quantitySampleWithType_quantity_startDate_endDate_, v26, v27, v28, v29);

  id v31 = *(void (**)(char *, uint64_t))(v10 + 8);
  v31(v15, v9);
  v31(v19, v9);
  return v30;
}

void sub_261AD2868(void *a1, void *a2, void *a3, void *a4, void (*a5)(uint64_t, void), uint64_t a6)
{
  id v30 = a4;
  uint64_t v11 = sub_261B8A898();
  uint64_t v31 = *(void *)(v11 - 8);
  uint64_t v32 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_261B8AE38();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  double v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)_s9WorkoutUI13DemoUtilitiesV11effortValue3forSo10HKQuantityCSgSo9HKWorkoutC_tFZ_0(a2);

  if (v18)
  {
    if (qword_26A942E98 != -1) {
      swift_once();
    }
    id v19 = objc_msgSend(a2, sel_UUID, v30);
    sub_261B8AE18();

    swift_beginAccess();
    id v20 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = off_26A9468A8;
    off_26A9468A8 = (_UNKNOWN *)0x8000000000000000;
    sub_261A0BDA8((uint64_t)v20, (uint64_t)v17, isUniquelyReferenced_nonNull_native);
    off_26A9468A8 = v33;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    swift_endAccess();
    if (a5) {
      a5(1, 0);
    }
    id v22 = objc_msgSend(self, sel_defaultCenter);
    if (qword_26A942E90 != -1) {
      swift_once();
    }
    long long aBlock = 0u;
    long long v35 = 0u;
    id v23 = (id)qword_26A9468A0;
    sub_261B8A888();
    id v24 = (void *)sub_261B8A868();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v32);
    objc_msgSend(v22, sel_postNotification_, v24);
  }
  else
  {
    id v24 = sub_261AD24D8(a1, a2, a3);
    id v25 = (void *)swift_allocObject();
    v25[2] = a1;
    v25[3] = a2;
    v25[4] = a3;
    v25[5] = a5;
    v25[6] = a6;
    id v36 = sub_261AD5A00;
    uint64_t v37 = v25;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v35 = sub_261AC6BE0;
    *((void *)&v35 + 1) = &block_descriptor_51;
    unint64_t v26 = _Block_copy(&aBlock);
    id v27 = a3;
    id v28 = a1;
    id v29 = a2;
    sub_261AD5A10((uint64_t)a5);
    swift_release();
    objc_msgSend(v30, sel_relateWorkoutEffortSample_withWorkout_activity_completion_, v24, v29, v27, v26);
    _Block_release(v26);
  }
}

void _s9WorkoutUI15EffortUtilitiesC4save8quantity7workout0G8Activity11healthStore10completionySo10HKQuantityCSg_So9HKWorkoutCSo0mH0CSgSo08HKHealthJ0CySb_s5Error_pSgtcSgtFZ_0(void *a1, void *a2, void *a3, void *a4, void (*a5)(uint64_t, void), uint64_t a6)
{
  uint64_t v43 = a3;
  uint64_t v44 = a6;
  uint64_t v10 = sub_261B8AE38();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_261B8CE88();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  double v17 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v18 = a1;
    id v19 = v43;
  }
  else
  {
    unsigned int v41 = a4;
    unint64_t v42 = a5;
    sub_261B8C618();
    uint64_t v40 = a2;
    id v20 = a2;
    id v21 = sub_261B8CE78();
    os_log_type_t v22 = sub_261B8F4D8();
    int v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      os_log_t v39 = v21;
      uint64_t v24 = swift_slowAlloc();
      int v37 = v23;
      id v25 = (uint8_t *)v24;
      uint64_t v38 = swift_slowAlloc();
      uint64_t v46 = v38;
      *(_DWORD *)id v25 = 136446210;
      _OWORD v35[2] = v25 + 12;
      id v36 = v25;
      v35[1] = v25 + 4;
      id v26 = objc_msgSend(v20, sel_UUID);
      sub_261B8AE18();

      sub_261AD5A20(&qword_26A945890, MEMORY[0x263F07508]);
      uint64_t v27 = sub_261B8FB78();
      unint64_t v29 = v28;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      uint64_t v45 = sub_261AC9C40(v27, v29, &v46);
      sub_261B8F6F8();

      swift_bridgeObjectRelease();
      os_log_t v30 = v39;
      uint64_t v31 = v36;
      _os_log_impl(&dword_2619F0000, v39, (os_log_type_t)v37, "Storing sentinel for skip for workout %{public}s", v36, 0xCu);
      uint64_t v32 = v38;
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v32, -1, -1);
      MEMORY[0x263E4E970](v31, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    id v33 = objc_msgSend(self, sel_appleEffortScoreUnit);
    id v18 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v33, 0.0);

    a4 = v41;
    a5 = v42;
    id v19 = v43;
    a2 = v40;
  }
  id v34 = a1;
  sub_261AD2868(v18, a2, v19, a4, a5, v44);
}

uint64_t sub_261AD301C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[26] = a3;
  v4[27] = a4;
  v4[24] = a1;
  v4[25] = a2;
  v4[28] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  v4[29] = swift_task_alloc();
  uint64_t v5 = sub_261B8AE38();
  v4[30] = v5;
  v4[31] = *(void *)(v5 - 8);
  v4[32] = swift_task_alloc();
  uint64_t v6 = sub_261B8CE88();
  v4[33] = v6;
  v4[34] = *(void *)(v6 - 8);
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261AD318C, 0, 0);
}

uint64_t sub_261AD318C()
{
  uint64_t v2 = *(void **)(v0 + 208);
  unint64_t v1 = *(void **)(v0 + 216);
  uint64_t v3 = *(void **)(v0 + 200);
  id v4 = sub_261AD24D8(*(void **)(v0 + 192), v3, v2);
  *(void *)(v0 + 304) = v4;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 320;
  *(void *)(v0 + 24) = sub_261AD32C0;
  uint64_t v5 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x263EF8330];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_261AC6C58;
  *(void *)(v0 + 104) = &block_descriptor_45;
  *(void *)(v0 + 112) = v5;
  objc_msgSend(v1, sel_relateWorkoutEffortSample_withWorkout_activity_completion_, v4, v3, v2, v0 + 80);
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_261AD32C0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 312) = v1;
  if (v1) {
    uint64_t v2 = sub_261AD3B24;
  }
  else {
    uint64_t v2 = sub_261AD33D0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_261AD33D0()
{
  uint64_t v84 = v0;
  uint64_t v1 = *(unsigned __int8 *)(v0 + 320);
  if (v1 == 1)
  {
    uint64_t v2 = *(void **)(v0 + 192);
    uint64_t v3 = *(void **)(v0 + 200);
    uint64_t v4 = *(void **)(v0 + 208);
    sub_261B8C618();
    id v5 = v2;
    id v6 = v3;
    id v7 = v4;
    id v8 = v5;
    id v9 = v6;
    id v10 = v7;
    uint64_t v11 = sub_261B8CE78();
    os_log_type_t v12 = sub_261B8F4D8();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_type_t v78 = v12;
      uint64_t v80 = v11;
      uint64_t v13 = *(void *)(v0 + 256);
      uint64_t v68 = *(void *)(v0 + 240);
      uint64_t v69 = *(void *)(v0 + 248);
      os_log_t log = *(os_log_t *)(v0 + 208);
      uint64_t v14 = *(void **)(v0 + 192);
      id v66 = *(id *)(v0 + 200);
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      uint64_t v83 = v76;
      *(_DWORD *)uint64_t v15 = 138412802;
      *(void *)(v0 + 176) = v14;
      id v17 = v14;
      sub_261B8F6F8();
      *(void *)os_log_type_t type = v16;
      *uint64_t v16 = v14;

      *(_WORD *)(v15 + 12) = 2082;
      id v18 = objc_msgSend(v66, sel_UUID);
      sub_261B8AE18();

      sub_261AD5A20(&qword_26A945890, MEMORY[0x263F07508]);
      uint64_t v19 = sub_261B8FB78();
      unint64_t v21 = v20;
      (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v13, v68);
      *(void *)(v0 + 184) = sub_261AC9C40(v19, v21, &v83);
      sub_261B8F6F8();
      swift_bridgeObjectRelease();

      *(_WORD *)(v15 + 22) = 2082;
      if (log)
      {
        id v22 = objc_msgSend(*(id *)(v0 + 208), sel_UUID);
        sub_261B8AE18();

        uint64_t v23 = 0;
      }
      else
      {
        uint64_t v23 = 1;
      }
      uint64_t v55 = *(void **)(v0 + 304);
      os_log_t logb = *(os_log_t *)(v0 + 296);
      uint64_t v56 = *(void *)(v0 + 264);
      uint64_t v57 = *(void *)(v0 + 272);
      uint64_t v58 = *(void *)(v0 + 232);
      uint64_t v59 = *(void **)(v0 + 208);
      (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v0 + 248) + 56))(v58, v23, 1, *(void *)(v0 + 240));
      uint64_t v60 = sub_261B8F6C8();
      unint64_t v62 = v61;
      sub_2619F8754(v58, &qword_26B416BC8);
      *(void *)(v0 + 152) = sub_261AC9C40(v60, v62, &v83);
      sub_261B8F6F8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2619F0000, v80, v78, "Successfully stored perceived effort %@ to workout %{public}s with activity %{public}s", (uint8_t *)v15, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9465F0);
      swift_arrayDestroy();
      MEMORY[0x263E4E970](*(void *)type, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v76, -1, -1);
      MEMORY[0x263E4E970](v15, -1, -1);

      (*(void (**)(os_log_t, uint64_t))(v57 + 8))(logb, v56);
      uint64_t v1 = 1;
    }
    else
    {
      uint64_t v47 = *(void *)(v0 + 296);
      uint64_t v46 = *(void **)(v0 + 304);
      uint64_t v48 = *(void *)(v0 + 264);
      uint64_t v49 = *(void *)(v0 + 272);
      uint64_t v51 = *(void **)(v0 + 200);
      id v50 = *(void **)(v0 + 208);
      uint64_t v52 = *(void **)(v0 + 192);

      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
    }
  }
  else
  {
    uint64_t v24 = *(void **)(v0 + 192);
    id v25 = *(void **)(v0 + 200);
    sub_261B8C618();
    id v26 = v24;
    id v27 = v25;
    id v28 = v26;
    id v29 = v27;
    os_log_t v30 = sub_261B8CE78();
    os_log_type_t v31 = sub_261B8F4B8();
    BOOL v32 = os_log_type_enabled(v30, v31);
    uint64_t v33 = *(void *)(v0 + 288);
    uint64_t v34 = *(void *)(v0 + 264);
    uint64_t v35 = *(void *)(v0 + 272);
    if (v32)
    {
      os_log_type_t typea = v31;
      uint64_t v37 = *(void *)(v0 + 248);
      uint64_t v36 = *(void *)(v0 + 256);
      os_log_t v81 = *(os_log_t *)(v0 + 288);
      id v67 = *(id *)(v0 + 240);
      uint64_t v38 = *(void **)(v0 + 192);
      id v65 = *(id *)(v0 + 200);
      uint64_t v79 = *(void **)(v0 + 304);
      loga = v30;
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = (void *)swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      uint64_t v83 = v73;
      *(_DWORD *)uint64_t v39 = 138412546;
      uint64_t v77 = v34;
      *(void *)(v0 + 160) = v38;
      unsigned int v82 = v1;
      id v41 = v38;
      sub_261B8F6F8();
      *uint64_t v40 = v38;

      *(_WORD *)(v39 + 12) = 2082;
      id v42 = objc_msgSend(v65, sel_UUID);
      sub_261B8AE18();

      sub_261AD5A20(&qword_26A945890, MEMORY[0x263F07508]);
      uint64_t v43 = sub_261B8FB78();
      unint64_t v45 = v44;
      (*(void (**)(uint64_t, id))(v37 + 8))(v36, v67);
      *(void *)(v0 + 168) = sub_261AC9C40(v43, v45, &v83);
      sub_261B8F6F8();
      uint64_t v1 = v82;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2619F0000, loga, typea, "Failed to store perceived effort %@ to workout %{public}s with no error.", (uint8_t *)v39, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9465F0);
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v40, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v73, -1, -1);
      MEMORY[0x263E4E970](v39, -1, -1);

      (*(void (**)(os_log_t, uint64_t))(v35 + 8))(v81, v77);
    }
    else
    {
      unint64_t v53 = *(void **)(v0 + 192);
      uint64_t v54 = *(void **)(v0 + 200);

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v63 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v63(v1);
}

uint64_t sub_261AD3B24()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(void **)(v0 + 312);
  uint64_t v3 = *(void **)(v0 + 192);
  uint64_t v2 = *(void **)(v0 + 200);
  swift_willThrow();
  sub_261B8C618();
  id v4 = v3;
  id v5 = v2;
  id v6 = v1;
  id v7 = v4;
  id v8 = v5;
  id v9 = v1;
  id v10 = sub_261B8CE78();
  os_log_type_t v11 = sub_261B8F4B8();
  if (os_log_type_enabled(v10, v11))
  {
    id v35 = *(id *)(v0 + 312);
    uint64_t v39 = *(void **)(v0 + 304);
    uint64_t v40 = *(void *)(v0 + 272);
    uint64_t v41 = *(void *)(v0 + 264);
    uint64_t v42 = *(void *)(v0 + 280);
    os_log_type_t type = v11;
    uint64_t v12 = *(void *)(v0 + 256);
    uint64_t v34 = *(void *)(v0 + 248);
    uint64_t v33 = *(void *)(v0 + 240);
    uint64_t v13 = *(void **)(v0 + 192);
    id v32 = *(id *)(v0 + 200);
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    v43[0] = v37;
    *(_DWORD *)uint64_t v14 = 138412802;
    *(void *)(v0 + 128) = v13;
    os_log_t log = v10;
    id v16 = v13;
    sub_261B8F6F8();
    *uint64_t v15 = v13;

    *(_WORD *)(v14 + 12) = 2082;
    id v17 = objc_msgSend(v32, sel_UUID);
    sub_261B8AE18();

    sub_261AD5A20(&qword_26A945890, MEMORY[0x263F07508]);
    uint64_t v18 = sub_261B8FB78();
    unint64_t v20 = v19;
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v12, v33);
    *(void *)(v0 + 136) = sub_261AC9C40(v18, v20, v43);
    sub_261B8F6F8();
    swift_bridgeObjectRelease();

    *(_WORD *)(v14 + 22) = 2082;
    *(void *)(v0 + 144) = v35;
    id v21 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943900);
    uint64_t v22 = sub_261B8F128();
    *(void *)(v0 + 120) = sub_261AC9C40(v22, v23, v43);
    sub_261B8F6F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2619F0000, log, type, "Failed to store effort %@ to workout %{public}s : %{public}s", (uint8_t *)v14, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9465F0);
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v37, -1, -1);
    MEMORY[0x263E4E970](v14, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v41);
  }
  else
  {
    uint64_t v24 = *(void **)(v0 + 312);
    uint64_t v26 = *(void *)(v0 + 272);
    uint64_t v25 = *(void *)(v0 + 280);
    uint64_t v27 = *(void *)(v0 + 264);
    id v29 = *(void **)(v0 + 192);
    id v28 = *(void **)(v0 + 200);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30(0);
}

void *_s9WorkoutUI15EffortUtilitiesC17fetchDemoExertion03forA0So10HKQuantityCSgSo9HKWorkoutC_tFZ_0(void *a1)
{
  uint64_t v2 = sub_261B8AE38();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)v35 - v7;
  uint64_t v9 = sub_261B8CE88();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)_s9WorkoutUI13DemoUtilitiesV11effortValue3forSo10HKQuantityCSgSo9HKWorkoutC_tFZ_0(a1);
  if (v13)
  {
    uint64_t v40 = v9;
    uint64_t v41 = v5;
    sub_261B8C618();
    id v14 = a1;
    uint64_t v15 = sub_261B8CE78();
    os_log_type_t v16 = sub_261B8F4D8();
    int v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      int v37 = v17;
      unint64_t v19 = (uint8_t *)v18;
      uint64_t v38 = swift_slowAlloc();
      v43[0] = v38;
      uint64_t v39 = v3;
      *(_DWORD *)unint64_t v19 = 136315138;
      v35[1] = v19 + 4;
      uint64_t v36 = v19;
      id v20 = objc_msgSend(v14, sel_UUID);
      sub_261B8AE18();

      sub_261AD5A20(&qword_26A945890, MEMORY[0x263F07508]);
      uint64_t v21 = sub_261B8FB78();
      uint64_t v22 = v2;
      unint64_t v24 = v23;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v22);
      uint64_t v42 = sub_261AC9C40(v21, v24, v43);
      uint64_t v3 = v39;
      sub_261B8F6F8();

      uint64_t v2 = v22;
      swift_bridgeObjectRelease();
      uint64_t v25 = v36;
      _os_log_impl(&dword_2619F0000, v15, (os_log_type_t)v37, "Demo Data overriding effort value for workout %s", v36, 0xCu);
      uint64_t v26 = v38;
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v26, -1, -1);
      MEMORY[0x263E4E970](v25, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v40);
    if (qword_26A942E98 != -1) {
      swift_once();
    }
    id v27 = objc_msgSend(v14, sel_UUID);
    uint64_t v28 = (uint64_t)v41;
    sub_261B8AE18();

    swift_beginAccess();
    id v29 = off_26A9468A8;
    if (*((void *)off_26A9468A8 + 2) && (unint64_t v30 = sub_261ACB3A0(v28), (v31 & 1) != 0))
    {
      id v32 = *(void **)(v29[7] + 8 * v30);
      swift_endAccess();
      id v33 = v32;

      uint64_t v13 = v32;
    }
    else
    {
      swift_endAccess();
    }
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v28, v2);
  }
  return v13;
}

uint64_t sub_261AD4394()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_261AD43CC(uint64_t a1)
{
  sub_261AC7528(a1, *(void (**)(id))(v1 + 16));
}

void sub_261AD43E0(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v10 = sub_261B8AE38();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v14 - 8);
  os_log_type_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  _Block_copy(a5);
  uint64_t v18 = _s9WorkoutUI15EffortUtilitiesC17fetchDemoExertion03forA0So10HKQuantityCSgSo9HKWorkoutC_tFZ_0(a1);
  if (v18)
  {
    unint64_t v19 = (void (*)(void *))a5[2];
    int v37 = v18;
    v19(a5);
    swift_release();
    id v20 = v37;
  }
  else
  {
    int v37 = a4;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_261AD5AF4;
    *(void *)(v21 + 24) = v17;
    swift_retain_n();
    if (objc_msgSend(a1, sel_workoutActivityType) != (id)82 || a2)
    {
      id v22 = objc_msgSend(a1, sel_fiui_finalWorkoutUUID, a3);
      if (v22)
      {
        unint64_t v23 = v22;
        sub_261B8AE18();

        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v13, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) != 1)
        {
          unint64_t v24 = self;
          uint64_t v25 = (void *)sub_261B8ADF8();
          (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
          id v26 = objc_msgSend(v24, sel_predicateForObjectWithUUID_, v25);

          id v27 = (void *)swift_allocObject();
          id v29 = v36;
          uint64_t v28 = v37;
          v27[2] = v36;
          v27[3] = sub_261AD5AF8;
          v27[4] = v21;
          v27[5] = a1;
          v27[6] = v28;
          v27[7] = a2;
          id v30 = objc_allocWithZone(MEMORY[0x263F0A928]);
          aBlock[4] = sub_261AD43D8;
          aBlock[5] = v27;
          aBlock[0] = MEMORY[0x263EF8330];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_261AC9B6C;
          aBlock[3] = &block_descriptor_40;
          char v31 = _Block_copy(aBlock);
          id v32 = a2;
          id v33 = v29;
          swift_retain();
          id v34 = a1;
          id v35 = objc_msgSend(v30, sel_initWithPredicate_anchor_options_resultsHandler_, v26, 0, 0, v31);
          _Block_release(v31);
          swift_release();
          objc_msgSend(v33, sel_executeQuery_, v35);
          swift_release_n();
          swift_release();

          return;
        }
      }
      else
      {
        swift_release();
        _Block_release(a5);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16, 1, 1, v10);
        __break(1u);
      }
      swift_release();
      _Block_release(a5);
      __break(1u);
    }
    else
    {
      ((void (*)(void *, void))a5[2])(a5, 0);
      swift_release_n();
      swift_release();
    }
  }
}

id sub_261AD4890(uint64_t a1, void *a2)
{
  uint64_t v2 = (char *)sub_261AD1AC4(a1, a2);
  uint64_t v3 = v2;
  uint64_t v4 = *(void **)&v2[OBJC_IVAR___WOEffortSampleCollection_effortSample];
  if (v4)
  {
    id v5 = *(id *)&v2[OBJC_IVAR___WOEffortSampleCollection_effortSample];
  }
  else
  {
    uint64_t v6 = *(void **)&v2[OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample];
    if (!v6)
    {

      return 0;
    }
    id v5 = v6;
    uint64_t v4 = 0;
  }
  id v7 = v4;
  id v8 = objc_msgSend(v5, sel_quantity);

  return v8;
}

void sub_261AD4930(void *a1, void *a2, void *a3, uint64_t a4, void (**a5)(void, void))
{
  uint64_t v10 = sub_261B8AE38();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v14 - 8);
  os_log_type_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  _Block_copy(a5);
  if (objc_msgSend(a1, sel_workoutActivityType) == (id)82 && a2 == 0)
  {
    a5[2](a5, 0);
    swift_release();
  }
  else
  {
    uint64_t v32 = a4;
    id v19 = objc_msgSend(a1, sel_fiui_finalWorkoutUUID);
    if (v19)
    {
      id v20 = v19;
      sub_261B8AE18();

      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v13, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) != 1)
      {
        uint64_t v21 = self;
        id v22 = (void *)sub_261B8ADF8();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
        id v23 = objc_msgSend(v21, sel_predicateForObjectWithUUID_, v22);

        unint64_t v24 = (void *)swift_allocObject();
        v24[2] = a3;
        v24[3] = sub_261AD588C;
        v24[4] = v17;
        v24[5] = a1;
        v24[6] = v32;
        v24[7] = a2;
        id v25 = objc_allocWithZone(MEMORY[0x263F0A928]);
        aBlock[4] = sub_261AD43D8;
        aBlock[5] = v24;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_261AC9B6C;
        aBlock[3] = &block_descriptor_26;
        id v26 = _Block_copy(aBlock);
        id v27 = a2;
        id v28 = a3;
        swift_retain();
        id v29 = a1;
        id v30 = objc_msgSend(v25, sel_initWithPredicate_anchor_options_resultsHandler_, v23, 0, 0, v26);
        _Block_release(v26);
        swift_release();
        objc_msgSend(v28, sel_executeQuery_, v30);
        swift_release();

        return;
      }
    }
    else
    {
      _Block_release(a5);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16, 1, 1, v10);
      __break(1u);
    }
    _Block_release(a5);
    __break(1u);
  }
}

uint64_t sub_261AD4D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  uint64_t v4 = sub_261B8CE88();
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  uint64_t v5 = sub_261B8EE28();
  v3[14] = v5;
  v3[15] = *(void *)(v5 - 8);
  v3[16] = swift_task_alloc();
  uint64_t v6 = sub_261B8EE58();
  v3[17] = v6;
  v3[18] = *(void *)(v6 - 8);
  v3[19] = swift_task_alloc();
  uint64_t v7 = sub_261B8AE38();
  v3[20] = v7;
  v3[21] = *(void *)(v7 - 8);
  v3[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  v3[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261AD4F34, 0, 0);
}

uint64_t sub_261AD4F34()
{
  uint64_t v1 = *(void *)(v0 + 64);
  if (objc_msgSend(*(id *)(v0 + 56), sel_workoutActivityType) == (id)82 && v1 == 0)
  {
    sub_261B8C618();
    id v20 = sub_261B8CE78();
    os_log_type_t v21 = sub_261B8F4B8();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v22 = 0;
      _os_log_impl(&dword_2619F0000, v20, v21, "fetchEffortForWorkout was called with a multisport workout", v22, 2u);
      MEMORY[0x263E4E970](v22, -1, -1);
    }
    uint64_t v23 = *(void *)(v0 + 104);
    uint64_t v24 = *(void *)(v0 + 80);
    uint64_t v25 = *(void *)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = _s9WorkoutUI15EffortUtilitiesC17fetchDemoExertion03forA0So10HKQuantityCSgSo9HKWorkoutC_tFZ_0(*(void **)(v0 + 56));
    if (!v3)
    {
      id v4 = objc_msgSend(*(id *)(v0 + 56), sel_fiui_finalWorkoutUUID);
      uint64_t v5 = *(void *)(v0 + 184);
      if (v4)
      {
        uint64_t v6 = v4;
        uint64_t v8 = *(void *)(v0 + 168);
        uint64_t v7 = *(void *)(v0 + 176);
        uint64_t v9 = *(void *)(v0 + 160);
        sub_261B8AE18();

        (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v5, v7, v9);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v9);
        uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v9);
        if (v10 != 1)
        {
          uint64_t v12 = *(void *)(v0 + 184);
          uint64_t v13 = *(void *)(v0 + 160);
          uint64_t v14 = *(void *)(v0 + 168);
          uint64_t v15 = self;
          os_log_type_t v16 = (void *)sub_261B8ADF8();
          (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
          id v17 = objc_msgSend(v15, sel_predicateForObjectWithUUID_, v16);
          *(void *)(v0 + 192) = v17;

          id v18 = v17;
          sub_261B8EE48();
          id v19 = (void *)swift_task_alloc();
          *(void *)(v0 + 200) = v19;
          *id v19 = v0;
          v19[1] = sub_261AD5264;
          uint64_t v10 = *(void *)(v0 + 128);
          uint64_t v11 = *(void *)(v0 + 72);
          return MEMORY[0x270EF32D8](v10, v11);
        }
      }
      else
      {
        uint64_t v10 = (*(uint64_t (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 168) + 56))(*(void *)(v0 + 184), 1, 1, *(void *)(v0 + 160));
      }
      __break(1u);
      return MEMORY[0x270EF32D8](v10, v11);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v26 = *(uint64_t (**)(void *))(v0 + 8);
  return v26(v3);
}

uint64_t sub_261AD5264()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_261AD5498;
  }
  else {
    uint64_t v2 = sub_261AD5378;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_261AD5378()
{
  uint64_t v1 = (void *)v0[24];
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[14];
  uint64_t v7 = v0[15];
  uint64_t v8 = (void *)v0[8];
  uint64_t v9 = sub_261B8EE18();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  id v10 = sub_261AD4890(v9, v8);
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(id))v0[1];
  return v11(v10);
}

uint64_t sub_261AD5498()
{
  id v29 = v0;
  uint64_t v1 = (void *)v0[26];
  sub_261B8C618();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_261B8CE78();
  os_log_type_t v5 = sub_261B8F4B8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[26];
    uint64_t v25 = v0[18];
    uint64_t v26 = v0[17];
    uint64_t v27 = v0[19];
    uint64_t v23 = (void *)v0[24];
    uint64_t v24 = v0[12];
    uint64_t v21 = v0[11];
    uint64_t v22 = v0[10];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v28 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    swift_getErrorValue();
    uint64_t v9 = sub_261B8FC18();
    v0[6] = sub_261AC9C40(v9, v10, &v28);
    sub_261B8F6F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2619F0000, v4, v5, "Unable to fetch effort samples for workout: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v8, -1, -1);
    MEMORY[0x263E4E970](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v24, v22);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v26);
  }
  else
  {
    uint64_t v11 = (void *)v0[26];
    uint64_t v12 = (void *)v0[24];
    uint64_t v14 = v0[18];
    uint64_t v13 = v0[19];
    uint64_t v15 = v0[17];
    uint64_t v17 = v0[11];
    uint64_t v16 = v0[12];
    uint64_t v18 = v0[10];

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v19 = (uint64_t (*)(void))v0[1];
  return v19(0);
}

uint64_t type metadata accessor for EffortUtilities()
{
  return self;
}

unint64_t sub_261AD5798()
{
  unint64_t result = qword_26B416C28;
  if (!qword_26B416C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B416C28);
  }
  return result;
}

uint64_t assignWithCopy for EffortUtilities.WorkoutAndActivityKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  os_log_type_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  return a1;
}

ValueMetadata *type metadata accessor for EffortUtilities.WorkoutAndActivityKey()
{
  return &type metadata for EffortUtilities.WorkoutAndActivityKey;
}

uint64_t sub_261AD5854()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_261AD588C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t objectdestroy_4Tm()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_261AD58F8(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  sub_261AC7968(a1, a2, a3, a4, *(void **)(v4 + 16), *(void (**)(void))(v4 + 24), *(void *)(v4 + 32), *(void **)(v4 + 40), *(void *)(v4 + 48), *(void **)(v4 + 56));
}

uint64_t sub_261AD5928(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_261AD5938(char a1, uint64_t a2)
{
  sub_261AC5BB8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_261AD5940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261AD59A8()
{
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_261AD5A00(char a1, void *a2)
{
  return sub_261AC62B0(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(uint64_t (**)(void, id))(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_261AD5A10(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_261AD5A20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261AD5A68()
{
  unint64_t result = qword_26A9469D0;
  if (!qword_26A9469D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9469C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9469D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutNotificationRaceCompleteView()
{
  return &type metadata for WorkoutNotificationRaceCompleteView;
}

uint64_t sub_261AD5B0C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_261AD5B28(int64x2_t *a1@<X8>)
{
  unint64_t v3 = *v1;
  uint64_t v4 = (void *)v1[1];
  if (!(*v1 >> 62))
  {
    if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 3) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v10 = 0;
    id v15 = 0;
    uint64_t v12 = 0;
    char v16 = 0;
    int64x2_t v17 = 0uLL;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_261B8F9D8();
  swift_bridgeObjectRelease();
  if (v18 < 3) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v6 = MEMORY[0x263E4D7B0](0, v3);
    id v19 = v4;
    uint64_t v7 = MEMORY[0x263E4D7B0](1, v3);
    uint64_t KeyPath = swift_getKeyPath();
    id v20 = v19;
    uint64_t v10 = MEMORY[0x263E4D7B0](2, v3);
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v5 == 1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)(v3 + 32);
  uint64_t v7 = *(void *)(v3 + 40);
  uint64_t v8 = swift_getKeyPath();
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
  {
    uint64_t KeyPath = v8;
    uint64_t v10 = *(void *)(v3 + 48);
    id v11 = v4;
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_8:
    uint64_t v12 = swift_getKeyPath();
    id v13 = v4;
    swift_retain();
    id v14 = v13;
    swift_retain();
    id v15 = v14;
    swift_release();

    swift_release();
    char v16 = 2;
    int64x2_t v17 = vdupq_n_s64(2uLL);
    v17.i64[0] = KeyPath;
LABEL_11:
    a1->i64[0] = v6;
    a1->i64[1] = (uint64_t)v15;
    a1[1].i64[0] = 0;
    a1[1].i64[1] = v7;
    a1[2].i64[0] = (uint64_t)v15;
    a1[2].i64[1] = 0;
    a1[3] = v17;
    a1[4].i64[0] = v10;
    a1[4].i64[1] = (uint64_t)v15;
    a1[5].i64[0] = 0;
    a1[5].i64[1] = v12;
    a1[6].i8[0] = v16;
    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_261AD5D00@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[1];
  long long v12 = *v1;
  long long v13 = v3;
  long long v4 = v1[3];
  long long v14 = v1[2];
  long long v15 = v4;
  uint64_t v16 = *((void *)v1 + 8);
  uint64_t v17 = v12;
  if ((unint64_t)v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_261B8F9D8();
    sub_261A03DA8((uint64_t)&v17);
    if (v10 >= 4) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 4)
  {
LABEL_3:
    swift_getKeyPath();
    uint64_t v5 = swift_allocObject();
    long long v6 = v15;
    *(_OWORD *)(v5 + 48) = v14;
    *(_OWORD *)(v5 + 64) = v6;
    *(void *)(v5 + 80) = v16;
    long long v7 = v13;
    *(_OWORD *)(v5 + 16) = v12;
    *(_OWORD *)(v5 + 32) = v7;
    sub_261A03EBC((uint64_t)&v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435F0);
    sub_261A03EF0();
    sub_261A03FC0();
    sub_261B8EBE8();
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435E0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 0, 1, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
}

uint64_t sub_261AD5EC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = v1[7];
  uint64_t v11 = v1[8];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9469F8);
  uint64_t v13 = a1 + *(int *)(v12 + 56);
  *(double *)uint64_t v13 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
  *(_OWORD *)(v13 + 8) = xmmword_261B95920;
  *(_OWORD *)(v13 + 24) = xmmword_261B95930;
  *(_OWORD *)(v13 + 40) = xmmword_261B95940;
  sub_261AD5B28(&v22);
  char v14 = v28;
  long long v15 = v23;
  long long v16 = v24;
  long long v17 = v25;
  long long v18 = v26;
  long long v19 = v27;
  *(int64x2_t *)a1 = v22;
  *(_OWORD *)(a1 + 16) = v15;
  *(_OWORD *)(a1 + 32) = v16;
  *(_OWORD *)(a1 + 48) = v17;
  *(_OWORD *)(a1 + 64) = v18;
  *(_OWORD *)(a1 + 80) = v19;
  *(unsigned char *)(a1 + 96) = v14;
  uint64_t v20 = a1 + *(int *)(v12 + 52);
  v22.i64[0] = v3;
  v22.i64[1] = v4;
  *(void *)&long long v23 = v5;
  *((void *)&v23 + 1) = v6;
  *(void *)&long long v24 = v7;
  *((void *)&v24 + 1) = v8;
  *(void *)&long long v25 = v9;
  *((void *)&v25 + 1) = v10;
  *(void *)&long long v26 = v11;
  return sub_261AD5D00(v20);
}

uint64_t sub_261AD6014()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 88, 7);
}

unint64_t sub_261AD6060()
{
  unint64_t result = qword_26A946A00;
  if (!qword_26A946A00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9469F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946A00);
  }
  return result;
}

uint64_t type metadata accessor for WorkoutUIBundlePlaceholder()
{
  return self;
}

uint64_t StrideLengthMetricView.init(metricType:strideLength:formattingManager:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = a3 & 1;
  *(void *)(a5 + 24) = a4;
  return result;
}

unint64_t sub_261AD60F4()
{
  if (*v0 == 26)
  {
    if (qword_26B416690 == -1) {
      goto LABEL_6;
    }
LABEL_9:
    swift_once();
    goto LABEL_6;
  }
  if (*v0 != 27) {
    return 0xD000000000000012;
  }
  if (qword_26B416690 != -1) {
    goto LABEL_9;
  }
LABEL_6:
  swift_beginAccess();
  id v1 = (id)qword_26B416688;
  uint64_t v2 = sub_261B8AA48();

  return v2;
}

uint64_t sub_261AD627C()
{
  uint64_t v1 = sub_261B8ABA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_261B8AEF8();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9453F8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v17 - v11;
  if (*(unsigned char *)(v0 + 16))
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v13 = (id)qword_26B416688;
    uint64_t v14 = sub_261B8AA48();
  }
  else
  {
    v17[0] = *(void *)(v0 + 8);
    sub_261B8AE68();
    sub_261A63D24();
    sub_261B8AAE8();
    sub_261B8AB98();
    MEMORY[0x263E48A00](v4, v6);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    long long v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v15(v9, v6);
    sub_2619F8AB8((unint64_t *)&qword_26A945408, &qword_26A9453F8);
    sub_261B8EFD8();
    v15(v12, v6);
    return v17[1];
  }
  return v14;
}

id sub_261AD65D0()
{
  if (v0[2])
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v1 = (id)qword_26B416688;
    uint64_t v2 = sub_261B8AA48();

    return (id)v2;
  }
  uint64_t v3 = (void *)v0[3];
  uint64_t v5 = *v0;
  uint64_t v4 = v0[1];
  sub_261AD60F4();
  unint64_t v18 = sub_261A029C4();
  uint64_t v17 = MEMORY[0x263F8D310];
  uint64_t v6 = sub_261B8F788();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943570);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_261B94B90;
  LOBYTE(v19) = 0;
  *(void *)(v9 + 32) = sub_261AD627C();
  *(void *)(v9 + 40) = v10;
  id v11 = v3;
  id result = objc_msgSend(v11, sel_localizedShortUnitStringForDistanceUnit_, 1, v17, v18, v18, v18, 32, 0xE100000000000000, 10, 0xE100000000000000, v5, v4, v19, v3);
  if (result)
  {
    id v13 = result;
    uint64_t v14 = sub_261B8F0F8();
    uint64_t v16 = v15;

    *(void *)(v9 + 48) = v14;
    *(void *)(v9 + 56) = v16;
    *(void *)(v9 + 64) = v6;
    *(void *)(v9 + 72) = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943578);
    sub_2619F8AB8((unint64_t *)&qword_26A943580, &qword_26A943578);
    uint64_t v2 = sub_261B8F048();
    swift_bridgeObjectRelease();
    return (id)v2;
  }
  __break(1u);
  return result;
}

id StrideLengthMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  char v3 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void **)(v1 + 24);
  uint64_t v5 = sub_261AD627C();
  uint64_t v17 = v6;
  uint64_t v18 = v5;
  if (v3)
  {
    uint64_t v7 = 0;
    unint64_t v8 = 0xE000000000000000;
LABEL_5:
    unint64_t v13 = sub_261AD60F4();
    uint64_t v15 = v14;
    id result = sub_261AD65D0();
    *(void *)a1 = v18;
    *(void *)(a1 + 8) = v17;
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v13;
    *(void *)(a1 + 40) = v15;
    *(_WORD *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = result;
    *(void *)(a1 + 64) = v16;
    return result;
  }
  id v9 = v4;
  id result = objc_msgSend(v9, sel_localizedShortUnitStringForDistanceUnit_, 1);
  if (result)
  {
    id v11 = result;
    uint64_t v7 = sub_261B8F0F8();
    unint64_t v8 = v12;

    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_261AD6950()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for StrideLengthMetricView()
{
  return &type metadata for StrideLengthMetricView;
}

double PacerRow.secondsAheadOfPacer.getter()
{
  return *(double *)v0;
}

uint64_t PacerRow.init(secondsAheadOfPacer:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  if (qword_26A942C68 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_26A9535A8;
  uint64_t v5 = unk_26A9535B0;
  uint64_t v6 = qword_26A9535B8;
  uint64_t KeyPath = swift_getKeyPath();
  *(double *)a1 = a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = KeyPath;
  *(unsigned char *)(a1 + 40) = 0;
  swift_retain();
  return swift_retain();
}

uint64_t PacerRow.body.getter@<X0>(uint64_t a1@<X8>)
{
  double v3 = *(double *)v1;
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  char v8 = *(unsigned char *)(v1 + 40);
  swift_retain_n();
  swift_retain_n();
  sub_2619F7774(v7, v8);
  sub_2619F7774(v7, v8);
  sub_2619FA43C(v7, v8, &v19);
  sub_2619F7790(v7, v8);
  swift_release();
  swift_release();
  sub_2619F7790(v7, v8);
  char v9 = v19;
  uint64_t KeyPath = swift_getKeyPath();
  unsigned __int8 v11 = sub_261B8DFD8();
  unsigned __int8 v12 = sub_261B8DFF8();
  char v13 = sub_261B8DFE8();
  sub_261B8DFE8();
  if (sub_261B8DFE8() != v11) {
    char v13 = sub_261B8DFE8();
  }
  sub_261B8DFE8();
  if (sub_261B8DFE8() != v12) {
    char v13 = sub_261B8DFE8();
  }
  uint64_t result = sub_261B8D358();
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(double *)(a1 + 24) = v3;
  *(double *)(a1 + 32) = round(v3);
  *(unsigned char *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = 0x4066800000000000;
  *(void *)(a1 + 56) = KeyPath;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(unsigned char *)(a1 + 120) = 0;
  return result;
}

uint64_t sub_261AD6BD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for PacerRow(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);
  return sub_2619F7790(v2, v3);
}

uint64_t initializeWithCopy for PacerRow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_retain();
  sub_2619F7774(v5, v6);
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  return a1;
}

uint64_t assignWithCopy for PacerRow(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = v2[2];
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = v2[3];
  uint64_t v4 = v2[4];
  LOBYTE(v2) = *((unsigned char *)v2 + 40);
  sub_2619F7774(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = (_BYTE)v2;
  sub_2619F7790(v5, v6);
  return a1;
}

uint64_t assignWithTake for PacerRow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v4;
  sub_2619F7790(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PacerRow(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PacerRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PacerRow()
{
  return &type metadata for PacerRow;
}

unint64_t sub_261AD6E48()
{
  unint64_t result = qword_26A946A08;
  if (!qword_26A946A08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946A10);
    sub_261AD6EC4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946A08);
  }
  return result;
}

unint64_t sub_261AD6EC4()
{
  unint64_t result = qword_26A946A18;
  if (!qword_26A946A18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946A20);
    sub_261AD6F40();
    sub_261A70FC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946A18);
  }
  return result;
}

unint64_t sub_261AD6F40()
{
  unint64_t result = qword_26A946A28;
  if (!qword_26A946A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946A28);
  }
  return result;
}

void *sub_261AD6F94(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v5;
    uint64_t v6 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v6;
    uint64_t v7 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v7;
    uint64_t v8 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v8;
    uint64_t v9 = *(int *)(a3 + 44);
    uint64_t v10 = (uint64_t *)((char *)a2 + v9);
    unsigned __int8 v11 = (void *)(a1 + v9);
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_261B8D668();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v10, v12);
    }
    else
    {
      *unsigned __int8 v11 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_261AD7114(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_261B8D668();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_261AD71F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(int *)(a3 + 44);
  uint64_t v9 = (void *)(a2 + v8);
  uint64_t v10 = (void *)(a1 + v8);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_261B8D668();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v9, v11);
  }
  else
  {
    *uint64_t v10 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_261AD731C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 44);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_2619F8754(a1 + v6, &qword_26A945120);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_261B8D668();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_261AD74B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v5 = *(int *)(a3 + 44);
  uint64_t v6 = (const void *)(a2 + v5);
  uint64_t v7 = (void *)(a1 + v5);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_261B8D668();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_261AD75AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 44);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_2619F8754(a1 + v6, &qword_26A945120);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_261B8D668();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_261AD7718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261AD772C);
}

uint64_t sub_261AD772C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945128);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_261AD77E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261AD77F4);
}

uint64_t sub_261AD77F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945128);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for EffortZoneView()
{
  uint64_t result = qword_26A946A30;
  if (!qword_26A946A30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_261AD78EC()
{
  sub_261A57190();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_261AD79BC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_261AD79D8()
{
  double v1 = *(double *)(v0 + 24);
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v1 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    return;
  }
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = (uint64_t)v1;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v6 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v7 = *(void *)(v2 + 8 * v5 + 32);
      uint64_t v8 = v4 + v7;
      if (__OFADD__(v4, v7)) {
        break;
      }
      uint64_t v9 = v8 - 1;
      if (__OFSUB__(v8, 1)) {
        goto LABEL_17;
      }
      if (v9 < v4) {
        goto LABEL_18;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_261A0B5DC(0, v6[2] + 1, 1, v6);
      }
      unint64_t v11 = v6[2];
      unint64_t v10 = v6[3];
      if (v11 >= v10 >> 1) {
        uint64_t v6 = sub_261A0B5DC((void *)(v10 > 1), v11 + 1, 1, v6);
      }
      ++v5;
      v6[2] = v11 + 1;
      uint64_t v12 = &v6[2 * v11];
      v12[4] = v4;
      v12[5] = v9;
      uint64_t v4 = v8;
      if (v3 == v5)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
}

uint64_t sub_261AD7B3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v90 = a3;
  uint64_t v5 = sub_261B8DED8();
  uint64_t v88 = *(void *)(v5 - 8);
  uint64_t v89 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v87 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_261B8D538();
  uint64_t v70 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v72 = v7;
  unint64_t v74 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_261B8DD88();
  MEMORY[0x270FA5388](v69);
  uint64_t v68 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_261B8D3C8();
  uint64_t v80 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  unint64_t v75 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946A40);
  uint64_t v85 = *(void *)(v10 - 8);
  uint64_t v86 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v79 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for EffortZoneView();
  uint64_t v91 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v91 + 64);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v92 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946A48);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946A50);
  MEMORY[0x270FA5388](v17);
  char v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946A58);
  uint64_t v73 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  unint64_t v71 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946A60);
  uint64_t v83 = *(void *)(v21 - 8);
  uint64_t v84 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v77 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8D528();
  double v24 = v23;
  uint64_t v76 = a1;
  sub_261B8D528();
  double v26 = v25;
  uint64_t v27 = *a2;
  *uint64_t v16 = sub_261B8EC98();
  v16[1] = v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946A68);
  sub_261AD8570(a2, (uint64_t)v16 + *(int *)(v29 + 44), v24, v26, *(double *)&v27);
  uint64_t v30 = sub_261B8EC98();
  uint64_t v32 = v31;
  uint64_t v33 = a2[6];
  uint64_t v34 = a2[7];
  uint64_t v93 = a2[5];
  uint64_t v94 = v33;
  unint64_t v95 = v34;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946A70);
  MEMORY[0x263E4CA00](&v97, v35);
  uint64_t v36 = 0;
  int v37 = 0;
  if (v97 > 0.0)
  {
    uint64_t v38 = v92;
    sub_261ADA78C((uint64_t)a2, v92, (uint64_t (*)(void))type metadata accessor for EffortZoneView);
    unint64_t v39 = (*(unsigned __int8 *)(v91 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
    int v37 = (double *)swift_allocObject();
    void v37[2] = v24;
    v37[3] = v26;
    *((void *)v37 + 4) = v27;
    sub_261ADA23C(v38, (uint64_t)v37 + v39);
    uint64_t v36 = sub_261ADA704;
  }
  id v67 = a2;
  sub_2619F86F0((uint64_t)v16, (uint64_t)v19, &qword_26A946A48);
  uint64_t v66 = v17;
  uint64_t v40 = &v19[*(int *)(v17 + 36)];
  *(void *)uint64_t v40 = v36;
  *((void *)v40 + 1) = v37;
  *((void *)v40 + 2) = v30;
  *((void *)v40 + 3) = v32;
  sub_2619F8754((uint64_t)v16, &qword_26A946A48);
  sub_261B8DE38();
  uint64_t v41 = v75;
  sub_261B8D3A8();
  uint64_t v42 = v92;
  sub_261ADA78C((uint64_t)a2, v92, (uint64_t (*)(void))type metadata accessor for EffortZoneView);
  uint64_t v43 = v70;
  uint64_t v44 = v74;
  uint64_t v45 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v74, v76, v81);
  unint64_t v46 = (*(unsigned __int8 *)(v91 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
  unint64_t v47 = (v13 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = (*(unsigned __int8 *)(v43 + 80) + v47 + 24) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v49 = swift_allocObject();
  sub_261ADA23C(v42, v49 + v46);
  id v50 = (double *)(v49 + v47);
  *id v50 = v24;
  v50[1] = v26;
  *((void *)v50 + 2) = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v49 + v48, v44, v45);
  sub_261ADA5EC(&qword_26A946A78, MEMORY[0x263F185B8]);
  sub_261ADA5EC(&qword_26A946A80, MEMORY[0x263F18588]);
  uint64_t v51 = v79;
  uint64_t v52 = v82;
  sub_261B8EC08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v41, v52);
  sub_261B8D3E8();
  unint64_t v53 = sub_261ADA634();
  uint64_t v54 = sub_2619F8AB8(&qword_26A946AA8, &qword_26A946A40);
  uint64_t v55 = v71;
  uint64_t v56 = v66;
  uint64_t v57 = v86;
  sub_261B8E788();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v51, v57);
  sub_2619F8754((uint64_t)v19, &qword_26A946A50);
  uint64_t v58 = v87;
  sub_261B8DEB8();
  uint64_t v93 = v56;
  uint64_t v94 = v57;
  unint64_t v95 = v53;
  uint64_t v96 = v54;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v60 = v77;
  uint64_t v61 = v78;
  sub_261B8E6B8();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v58, v89);
  uint64_t v62 = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v55, v61);
  MEMORY[0x270FA5388](v62);
  *(&v65 - 2) = (uint64_t)v67;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946AB0);
  uint64_t v93 = v61;
  uint64_t v94 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_2619F8AB8(&qword_26A946AB8, &qword_26A946AB0);
  uint64_t v63 = v84;
  sub_261B8E728();
  return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v60, v63);
}

uint64_t sub_261AD8570@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v57 = a2;
  uint64_t v9 = type metadata accessor for EffortZoneView();
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v54 = *(void *)(v55 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v53 = (uint64_t)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946AE8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v56 = (uint64_t)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v46 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946AF0);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  char v19 = (void *)((char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946AF8);
  uint64_t v21 = v20 - 8;
  MEMORY[0x270FA5388](v20);
  double v23 = (void *)((char *)v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v24);
  uint64_t v52 = (uint64_t)v46 - v25;
  uint64_t v26 = sub_261B8EC98();
  uint64_t v47 = v27;
  uint64_t v48 = v26;
  uint64_t v28 = (char *)v19 + *(int *)(v17 + 44);
  uint64_t v29 = sub_261B8DAC8();
  uint64_t v49 = a1;
  uint64_t v30 = *a1;
  *(void *)uint64_t v28 = v29;
  *((void *)v28 + 1) = v30;
  v28[16] = 0;
  v46[1] = &v28[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A946B00) + 44)];
  sub_261AD79D8();
  uint64_t v58 = v31;
  swift_getKeyPath();
  uint64_t v32 = (double *)swift_allocObject();
  void v32[2] = a3;
  v32[3] = a4;
  v32[4] = a5;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946B08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943998);
  uint64_t v50 = sub_2619F8AB8(&qword_26A946B10, &qword_26A946B08);
  sub_261ADA888();
  sub_261A11FB0();
  sub_261B8EBE8();
  uint64_t v33 = v47;
  *char v19 = v48;
  v19[1] = v33;
  sub_2619F86F0((uint64_t)v19, (uint64_t)v23 + *(int *)(v21 + 44), &qword_26A946AF0);
  *double v23 = 0;
  sub_2619F8754((uint64_t)v19, &qword_26A946AF0);
  uint64_t v34 = v52;
  sub_2619FB7EC((uint64_t)v23, v52, &qword_26A946AF8);
  uint64_t v35 = sub_261B8DAC8();
  uint64_t v36 = (uint64_t)v49;
  uint64_t v37 = *v49;
  *(void *)uint64_t v15 = v35;
  *((void *)v15 + 1) = v37;
  v15[16] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946B20);
  sub_261AD79D8();
  uint64_t v58 = v38;
  swift_getKeyPath();
  uint64_t v39 = v53;
  sub_261ADA78C(v36, v53, (uint64_t (*)(void))type metadata accessor for EffortZoneView);
  unint64_t v40 = (*(unsigned __int8 *)(v55 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  uint64_t v41 = (double *)swift_allocObject();
  v41[2] = a3;
  v41[3] = a4;
  v41[4] = a5;
  sub_261ADA23C(v39, (uint64_t)v41 + v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946B28);
  sub_2619F8AB8(&qword_26A946B30, &qword_26A946B28);
  sub_261B8EBE8();
  sub_2619F86F0(v34, (uint64_t)v23, &qword_26A946AF8);
  uint64_t v42 = v56;
  sub_2619F86F0((uint64_t)v15, v56, &qword_26A946AE8);
  uint64_t v43 = v57;
  sub_2619F86F0((uint64_t)v23, v57, &qword_26A946AF8);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946B38);
  sub_2619F86F0(v42, v43 + *(int *)(v44 + 48), &qword_26A946AE8);
  sub_2619F8754((uint64_t)v15, &qword_26A946AE8);
  sub_2619F8754(v34, &qword_26A946AF8);
  sub_2619F8754(v42, &qword_26A946AE8);
  return sub_2619F8754((uint64_t)v23, &qword_26A946AF8);
}

void sub_261AD8A8C(uint64_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  double v11 = sub_261B173DC(*a1);
  double v19 = a3;
  char v20 = LOBYTE(a4);
  double v21 = a5;
  double v12 = sub_261B173DC(v10);
  if (__OFSUB__(v10, v9))
  {
    __break(1u);
  }
  else if (!__OFADD__(v10 - v9, 1))
  {
    double v13 = (a3 + a5 * -3.0) / 10.0;
    double v14 = v13 * 0.5;
    double v15 = v13 / a4;
    double v16 = 1.0 - v13 / a4;
    double v17 = v13 / a4 + v16 * v12;
    double v18 = v15 + v16 * v11;
    sub_261B8EC98();
    sub_261B8D4D8();
    *(double *)a2 = v18;
    *(double *)(a2 + 8) = v17;
    *(double *)(a2 + 16) = v14;
    *(double *)(a2 + 24) = v19;
    *(unsigned char *)(a2 + 32) = v20;
    *(double *)(a2 + 40) = v21;
    *(unsigned char *)(a2 + 48) = v22;
    *(_OWORD *)(a2 + 56) = v23;
    return;
  }
  __break(1u);
}

uint64_t *sub_261AD8BB8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  uint64_t v7 = *result;
  uint64_t v8 = result[1];
  if (__OFSUB__(v8, *result))
  {
    __break(1u);
  }
  else if (!__OFADD__(v8 - *result, 1))
  {
    *(void *)a3 = sub_261B8DBE8();
    *(void *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 16) = 1;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946B40);
    return (uint64_t *)sub_261AD8C7C(v7, v8, a2, a3 + *(int *)(v13 + 44), a4, a5, a6);
  }
  __break(1u);
  return result;
}

uint64_t sub_261AD8C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  unint64_t v46 = (char *)a3;
  uint64_t v13 = type metadata accessor for EffortZoneView();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946B48);
  MEMORY[0x270FA5388](v16 - 8);
  double v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946B50);
  MEMORY[0x270FA5388](v47);
  char v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946B58);
  MEMORY[0x270FA5388](v48);
  char v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v45 - v24;
  *(void *)double v18 = sub_261B8DAC8();
  *((void *)v18 + 1) = 0;
  v18[16] = 0;
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946B60);
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if (((a2 - a1) & 0x8000000000000000) == 0)
  {
    *(void *)&long long v49 = 0;
    *((void *)&v49 + 1) = a2 - a1;
    swift_getKeyPath();
    sub_261ADA78C((uint64_t)v46, (uint64_t)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for EffortZoneView);
    uint64_t v27 = *(unsigned __int8 *)(v14 + 80);
    unint64_t v46 = v25;
    uint64_t v28 = a4;
    uint64_t v29 = (v27 + 16) & ~v27;
    uint64_t v30 = swift_allocObject();
    sub_261ADA23C((uint64_t)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v30 + v29);
    uint64_t v31 = (double *)(v30 + ((v15 + v29 + 7) & 0xFFFFFFFFFFFFFFF8));
    double *v31 = a5;
    v31[1] = a6;
    v31[2] = a7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A944258);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946B68);
    sub_261ADACC0();
    sub_261ADAD3C();
    sub_261B8EBE8();
    sub_261B8EC98();
    sub_261B8D4D8();
    sub_2619F86F0((uint64_t)v18, (uint64_t)v20, &qword_26A946B48);
    uint64_t v32 = &v20[*(int *)(v47 + 36)];
    long long v33 = v50;
    *(_OWORD *)uint64_t v32 = v49;
    *((_OWORD *)v32 + 1) = v33;
    *((_OWORD *)v32 + 2) = v51;
    sub_2619F8754((uint64_t)v18, &qword_26A946B48);
    LOBYTE(v30) = sub_261B8DFC8();
    sub_261B8D358();
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    sub_2619F86F0((uint64_t)v20, (uint64_t)v22, &qword_26A946B50);
    uint64_t v42 = &v22[*(int *)(v48 + 36)];
    *uint64_t v42 = v30;
    *((void *)v42 + 1) = v35;
    *((void *)v42 + 2) = v37;
    *((void *)v42 + 3) = v39;
    *((void *)v42 + 4) = v41;
    v42[40] = 0;
    sub_2619F8754((uint64_t)v20, &qword_26A946B50);
    uint64_t v43 = (uint64_t)v46;
    sub_2619FB7EC((uint64_t)v22, (uint64_t)v46, &qword_26A946B58);
    sub_2619F86F0(v43, (uint64_t)v22, &qword_26A946B58);
    *(void *)uint64_t v28 = 0;
    *(unsigned char *)(v28 + 8) = 1;
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946B90);
    sub_2619F86F0((uint64_t)v22, v28 + *(int *)(v44 + 48), &qword_26A946B58);
    sub_2619F8754(v43, &qword_26A946B58);
    return sub_2619F8754((uint64_t)v22, &qword_26A946B58);
  }
  __break(1u);
  return result;
}

double sub_261AD90E4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_261B8DAD8();
  sub_261B8EC98();
  sub_261B8D4D8();
  sub_261B8EC98();
  sub_261B8D4D8();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = 0x3FD6666666666666;
  *(void *)(a1 + 80) = v10;
  *(unsigned char *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v12;
  *(unsigned char *)(a1 + 104) = v13;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 112) = v14;
  return result;
}

void *sub_261AD9224@<X0>(void *a1@<X1>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v10 = sub_261B8EB98();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946AC0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946AC8);
  MEMORY[0x270FA5388](v44);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946AD0);
  MEMORY[0x270FA5388](v18);
  char v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1[6];
  uint64_t v22 = a1[7];
  *(void *)&long long v46 = a1[5];
  *((void *)&v46 + 1) = v21;
  *(void *)&long long v47 = v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946A70);
  double result = MEMORY[0x263E4CA00](&v45, v23);
  double v25 = round(v45);
  if ((~*(void *)&v25 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v25 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v25 < 9.22337204e18)
  {
    double v26 = (a3 + a5 * -3.0) / 10.0;
    uint64_t v43 = v18;
    uint64_t v27 = (uint64_t)v25;
    *(double *)&long long v46 = a3;
    *((double *)&v46 + 1) = a4;
    *(double *)&long long v47 = a5;
    double v28 = v26 / a4 + (1.0 - v26 / a4) * sub_261B173DC((uint64_t)v25);
    sub_261B8D528();
    double v30 = v28 * v29;
    *(double *)&long long v46 = a3;
    *((double *)&v46 + 1) = a4;
    *(double *)&long long v47 = a5;
    double v31 = sub_261B17388(v27);
    uint64_t v32 = *MEMORY[0x263F19860];
    uint64_t v33 = sub_261B8DBB8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v12, v32, v33);
    uint64_t v34 = sub_261B8E898();
    sub_261ADA78C((uint64_t)v12, (uint64_t)v15, MEMORY[0x263F1B7A0]);
    *(void *)&v15[*(int *)(v13 + 36)] = v34;
    sub_261ADA7F4((uint64_t)v12);
    sub_261B8EC98();
    sub_261B8D4D8();
    sub_2619F86F0((uint64_t)v15, (uint64_t)v17, &qword_26A946AC0);
    uint64_t v35 = &v17[*(int *)(v44 + 36)];
    long long v36 = v47;
    *(_OWORD *)uint64_t v35 = v46;
    *((_OWORD *)v35 + 1) = v36;
    *((_OWORD *)v35 + 2) = v48;
    sub_2619F8754((uint64_t)v15, &qword_26A946AC0);
    sub_261B8D528();
    double v38 = v37 - v30 * 0.5;
    sub_2619F86F0((uint64_t)v17, (uint64_t)v20, &qword_26A946AC8);
    uint64_t v39 = (double *)&v20[*(int *)(v43 + 36)];
    *uint64_t v39 = v26 * 0.5 + v31;
    v39[1] = v38;
    sub_2619F8754((uint64_t)v17, &qword_26A946AC8);
    uint64_t v40 = sub_261B8E8A8();
    sub_2619F86F0((uint64_t)v20, a2, &qword_26A946AD0);
    uint64_t v41 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A946AD8) + 36);
    *(void *)uint64_t v41 = v40;
    *(_OWORD *)(v41 + 8) = xmmword_261B98BC0;
    *(void *)(v41 + 24) = 0x4000000000000000;
    return (void *)sub_2619F8754((uint64_t)v20, &qword_26A946AD0);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_261AD9648(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v71 = a3;
  uint64_t v70 = sub_261B8DA68();
  uint64_t v10 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v69 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  MEMORY[0x270FA5388](v12);
  uint64_t v78 = (char *)v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_261B8D668();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v77 = (char *)v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  char v20 = (char *)v62 - v19;
  uint64_t v21 = *(void *)(a2 + 32);
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    uint64_t v23 = 0;
    uint64_t v24 = (uint64_t *)(v21 + 32);
    uint64_t v25 = *(void *)(v21 + 16);
    while (1)
    {
      uint64_t v26 = *v24++;
      BOOL v27 = __OFADD__(v23, v26);
      v23 += v26;
      if (v27) {
        break;
      }
      if (!--v25)
      {
        double v28 = (double)v23;
        goto LABEL_7;
      }
    }
    __break(1u);
    goto LABEL_37;
  }
  double v28 = 0.0;
LABEL_7:
  double v82 = v28;
  double v29 = *(double *)(a2 + 24);
  if ((~*(void *)&v29 & 0x7FF0000000000000) == 0) {
    goto LABEL_38;
  }
  if (v29 <= -9.22337204e18)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v29 >= 9.22337204e18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v30 = 0;
  if (v22)
  {
    double v31 = (uint64_t *)(v21 + 32);
    while (1)
    {
      uint64_t v32 = *v31++;
      BOOL v27 = __OFADD__(v30, v32);
      v30 += v32;
      if (v27) {
        break;
      }
      if (!--v22) {
        goto LABEL_14;
      }
    }
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
LABEL_14:
  uint64_t v33 = (uint64_t)v29;
  if (v30 < (uint64_t)v29)
  {
LABEL_41:
    __break(1u);
    return;
  }
  uint64_t v76 = v18;
  double v34 = (a4 + a6 * -3.0) / 10.0;
  uint64_t v35 = *(int *)(type metadata accessor for EffortZoneView() + 44);
  v62[0] = a2;
  uint64_t v75 = a2 + v35;
  uint64_t v66 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v65 = (void (**)(char *, uint64_t, uint64_t))(v15 + 32);
  unsigned int v74 = *MEMORY[0x263F18DC8];
  uint64_t v72 = v15 + 8;
  uint64_t v73 = (void (**)(char *, void, uint64_t))(v15 + 104);
  *(void *)&long long v36 = 136315138;
  long long v63 = v36;
  v62[1] = MEMORY[0x263F8EE58] + 8;
  uint64_t v37 = (uint64_t)v78;
  uint64_t v68 = a1;
  uint64_t v67 = v12;
  uint64_t v64 = v20;
  double v38 = (void (**)(char *, uint64_t))(v15 + 8);
  while (1)
  {
    double v39 = 3.0;
    uint64_t v79 = v33 - 1;
    if ((unint64_t)(v33 - 1) <= 7) {
      double v39 = dbl_261B98CA0[v33 - 1];
    }
    sub_2619F86F0(v75, v37, &qword_26A945120);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v40 = a1;
      uint64_t v41 = v76;
      (*v65)(v20, v37, v76);
      uint64_t v42 = v20;
    }
    else
    {
      os_log_type_t v43 = sub_261B8F4C8();
      uint64_t v44 = sub_261B8DF58();
      if (os_log_type_enabled(v44, v43))
      {
        uint64_t v45 = swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        v80[0] = v46;
        *(_DWORD *)uint64_t v45 = v63;
        *(void *)(v45 + 4) = sub_261AC9C40(0x694474756F79614CLL, 0xEF6E6F6974636572, v80);
        _os_log_impl(&dword_2619F0000, v44, v43, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v45, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x263E4E970](v46, -1, -1);
        uint64_t v47 = v45;
        char v20 = v64;
        MEMORY[0x263E4E970](v47, -1, -1);
      }

      long long v48 = v69;
      sub_261B8DA58();
      swift_getAtKeyPath();
      swift_release();
      (*v66)(v48, v70);
      uint64_t v40 = v68;
      uint64_t v42 = v20;
      uint64_t v41 = v76;
    }
    long long v49 = v77;
    (*v73)(v77, v74, v41);
    char v50 = sub_261B8D658();
    long long v51 = *v38;
    (*v38)(v49, v41);
    v51(v42, v41);
    char v20 = v42;
    if (v50)
    {
      a1 = v40;
      sub_261B8D3B8();
    }
    else
    {
      sub_261B8D528();
      double v54 = v53;
      a1 = v40;
      sub_261B8D3B8();
      double v52 = v54 - v55;
    }
    double v56 = (double)v33;
    uint64_t v37 = (uint64_t)v78;
    if (v52 <= v34 + v34 * ((double)v33 + -1.0) + v39 * a6) {
      goto LABEL_31;
    }
    if (v79 + 1 == v30) {
      break;
    }
    uint64_t v33 = v79 + 2;
    if (__OFADD__(v79 + 1, 1))
    {
      __break(1u);
LABEL_31:
      double v82 = v56;
      goto LABEL_33;
    }
  }
  double v56 = v82;
LABEL_33:
  uint64_t v57 = v62[0];
  uint64_t v58 = *(void *)(v62[0] + 48);
  uint64_t v59 = *(void *)(v62[0] + 56);
  v80[0] = *(void *)(v62[0] + 40);
  v80[1] = v58;
  v80[2] = v59;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946A70);
  uint64_t v61 = MEMORY[0x263E4CA00](&v81, v60);
  if (v56 != v81)
  {
    MEMORY[0x270FA5388](v61);
    v62[-2] = v57;
    v62[-1] = &v82;
    sub_261B8ECC8();
    sub_261B8D5A8();
    swift_release();
  }
}

uint64_t sub_261AD9CDC()
{
  return sub_261B8EB48();
}

uint64_t sub_261AD9D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946AB0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B416690 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    swift_beginAccess();
    id v8 = (id)qword_26B416688;
    uint64_t v9 = sub_261B8AA48();
    uint64_t v11 = v10;

    uint64_t v27 = v9;
    uint64_t v28 = v11;
    double v12 = *(double *)(a1 + 48);
    uint64_t v13 = *(void *)(a1 + 56);
    uint64_t v24 = *(void *)(a1 + 40);
    double v25 = v12;
    uint64_t v26 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946A70);
    sub_261B8EB58();
    double v14 = *(double *)(a1 + 24);
    uint64_t v15 = *(void *)(a1 + 32);
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = 0;
      uint64_t v18 = (uint64_t *)(v15 + 32);
      while (1)
      {
        uint64_t v19 = *v18++;
        BOOL v20 = __OFADD__(v17, v19);
        v17 += v19;
        if (v20) {
          goto LABEL_10;
        }
        if (!--v16)
        {
          double v21 = (double)v17;
          if (v14 > (double)v17) {
            goto LABEL_9;
          }
          goto LABEL_7;
        }
      }
    }
    double v21 = 0.0;
    if (v14 <= 0.0) {
      break;
    }
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
LABEL_11:
    swift_once();
  }
LABEL_7:
  uint64_t v24 = *(void *)(a1 + 24);
  double v25 = v21;
  uint64_t v23 = 0x3FF0000000000000;
  sub_261A029C4();
  sub_261B8EC38();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
}

uint64_t sub_261AD9FFC@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  sub_261ADA78C(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for EffortZoneView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_261ADA23C((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a2 = sub_261ADA2A0;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_261ADA0FC()
{
  double v1 = (int *)(type metadata accessor for EffortZoneView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_261B8D668();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_261ADA23C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EffortZoneView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261ADA2A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for EffortZoneView() - 8);
  uint64_t v6 = (uint64_t *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
  return sub_261AD7B3C(a1, v6, a2);
}

uint64_t sub_261ADA320()
{
  double v1 = (int *)(type metadata accessor for EffortZoneView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = sub_261B8D538();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v9 = v0 + v3 + v1[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_261B8D668();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v2 | v7 | 7;
  unint64_t v12 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v7 + 24) & ~v7;
  uint64_t v13 = v12 + v8;
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v12, v5);
  return MEMORY[0x270FA0238](v0, v13, v11);
}

void sub_261ADA500(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for EffortZoneView() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(sub_261B8D538() - 8);
  double v7 = *(double *)(v1 + v5);
  double v8 = *(double *)(v1 + v5 + 8);
  double v9 = *(double *)(v1 + v5 + 16);
  uint64_t v10 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  sub_261AD9648(a1, v1 + v4, v10, v7, v8, v9);
}

uint64_t sub_261ADA5EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261ADA634()
{
  unint64_t result = qword_26A946A88;
  if (!qword_26A946A88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946A50);
    sub_2619F8AB8(&qword_26A946A90, &qword_26A946A48);
    sub_2619F8AB8(&qword_26A946A98, &qword_26A946AA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946A88);
  }
  return result;
}

uint64_t sub_261ADA6F8@<X0>(uint64_t a1@<X8>)
{
  return sub_261AD9D78(*(void *)(v1 + 16), a1);
}

void *sub_261ADA704@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for EffortZoneView() - 8);
  double v4 = v1[2];
  double v5 = v1[3];
  double v6 = v1[4];
  double v7 = (void *)((char *)v1
                + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  return sub_261AD9224(v7, a1, v4, v5, v6);
}

uint64_t sub_261ADA78C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_261ADA7F4(uint64_t a1)
{
  uint64_t v2 = sub_261B8EB98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_261ADA850()
{
  return sub_261AD9CDC();
}

uint64_t sub_261ADA86C()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_261ADA87C(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_261AD8A8C(a1, a2, v2[2], v2[3], v2[4]);
}

unint64_t sub_261ADA888()
{
  unint64_t result = qword_26A946B18;
  if (!qword_26A946B18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944258);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946B18);
  }
  return result;
}

uint64_t objectdestroy_8Tm_0()
{
  uint64_t v1 = (int *)(type metadata accessor for EffortZoneView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_261B8D668();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t *sub_261ADAA38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for EffortZoneView() - 8);
  double v6 = v2[2];
  double v7 = v2[3];
  double v8 = v2[4];
  uint64_t v9 = (uint64_t)v2 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_261AD8BB8(a1, v9, a2, v6, v7, v8);
}

uint64_t sub_261ADAAC0()
{
  uint64_t v1 = (int *)(type metadata accessor for EffortZoneView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_261B8D668();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 24, v2 | 7);
}

double sub_261ADAC0C@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for EffortZoneView();
  return sub_261AD90E4(a1);
}

unint64_t sub_261ADACC0()
{
  unint64_t result = qword_26A946B70;
  if (!qword_26A946B70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944258);
    sub_261A03F6C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946B70);
  }
  return result;
}

unint64_t sub_261ADAD3C()
{
  unint64_t result = qword_26A946B78;
  if (!qword_26A946B78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946B68);
    sub_2619F8AB8(&qword_26A946B80, &qword_26A946B88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946B78);
  }
  return result;
}

uint64_t sub_261ADADDC()
{
  return sub_2619F8AB8(&qword_26A946B98, &qword_26A946BA0);
}

void *sub_261ADAE18(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    double v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    double v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_261B8ADD8();
    unint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    uint64_t v14 = View[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    uint64_t v17 = sub_261B8EEC8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = View[6];
    uint64_t v19 = &v9[v18];
    BOOL v20 = &v10[v18];
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    *(void *)&v9[View[7]] = *(void *)&v10[View[7]];
    uint64_t v21 = View[8];
    uint64_t v22 = &v9[v21];
    uint64_t v23 = &v10[v21];
    v22[8] = v23[8];
    *(void *)uint64_t v22 = *(void *)v23;
    uint64_t v24 = a3[7];
    *((unsigned char *)v7 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *(void *)((char *)v7 + v24) = *(void *)((char *)a2 + v24);
    uint64_t v25 = a3[9];
    *(void *)((char *)v7 + a3[8]) = *(void *)((char *)a2 + a3[8]);
    *(void *)((char *)v7 + v25) = *(void *)((char *)a2 + v25);
    uint64_t v26 = a3[11];
    *(void *)((char *)v7 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    *(void *)((char *)v7 + v26) = *(void *)((char *)a2 + v26);
    uint64_t v27 = a3[13];
    *(void *)((char *)v7 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    *((unsigned char *)v7 + v27) = *((unsigned char *)a2 + v27);
    uint64_t v28 = a3[15];
    *((unsigned char *)v7 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    double v29 = *(void **)((char *)a2 + v28);
    *(void *)((char *)v7 + v28) = v29;
    swift_retain();
    swift_retain();
    id v30 = v29;
  }
  return v7;
}

void sub_261ADB018(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v4 + *(int *)(type metadata accessor for TrainingLoadViewModel.ChartPoint(0) + 20);
  uint64_t v7 = sub_261B8EEC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  uint64_t v8 = *(void **)(a1 + *(int *)(a2 + 60));
}

void *sub_261ADB110(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_261B8ADD8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v12 = View[5];
  uint64_t v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  uint64_t v15 = sub_261B8EEC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = View[6];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  *(void *)&v7[View[7]] = *(void *)&v8[View[7]];
  uint64_t v19 = View[8];
  BOOL v20 = &v7[v19];
  uint64_t v21 = &v8[v19];
  v20[8] = v21[8];
  *(void *)BOOL v20 = *(void *)v21;
  uint64_t v22 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(void *)((char *)a1 + v22) = *(void *)((char *)a2 + v22);
  uint64_t v23 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
  uint64_t v24 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  uint64_t v25 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
  uint64_t v26 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  uint64_t v27 = *(void **)((char *)a2 + v26);
  *(void *)((char *)a1 + v26) = v27;
  swift_retain();
  swift_retain();
  id v28 = v27;
  return a1;
}

void *sub_261ADB2C4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_261B8ADD8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v11 = View[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_261B8EEC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = View[6];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v18 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  *(void *)&v7[View[7]] = *(void *)&v8[View[7]];
  swift_retain();
  swift_release();
  uint64_t v19 = View[8];
  BOOL v20 = &v7[v19];
  uint64_t v21 = &v8[v19];
  uint64_t v22 = *(void *)v21;
  v20[8] = v21[8];
  *(void *)BOOL v20 = v22;
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  uint64_t v23 = a3[15];
  uint64_t v24 = *(void **)((char *)a2 + v23);
  uint64_t v25 = *(void **)((char *)a1 + v23);
  *(void *)((char *)a1 + v23) = v24;
  id v26 = v24;

  return a1;
}

void *sub_261ADB4A4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_261B8ADD8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v11 = View[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_261B8EEC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = View[6];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)&v7[View[7]] = *(void *)&v8[View[7]];
  uint64_t v18 = View[8];
  uint64_t v19 = &v7[v18];
  BOOL v20 = &v8[v18];
  v19[8] = v20[8];
  *(void *)uint64_t v19 = *(void *)v20;
  uint64_t v21 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  uint64_t v22 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v22) = *(void *)((char *)a2 + v22);
  uint64_t v23 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
  uint64_t v24 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *((unsigned char *)a1 + v24) = *((unsigned char *)a2 + v24);
  uint64_t v25 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
  return a1;
}

void *sub_261ADB634(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_261B8ADD8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v11 = View[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_261B8EEC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = View[6];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)&v7[View[7]] = *(void *)&v8[View[7]];
  swift_release();
  uint64_t v18 = View[8];
  uint64_t v19 = &v7[v18];
  BOOL v20 = &v8[v18];
  v19[8] = v20[8];
  *(void *)uint64_t v19 = *(void *)v20;
  uint64_t v21 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  uint64_t v22 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v22) = *(void *)((char *)a2 + v22);
  swift_release();
  uint64_t v23 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
  uint64_t v24 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *((unsigned char *)a1 + v24) = *((unsigned char *)a2 + v24);
  uint64_t v25 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  id v26 = *(void **)((char *)a1 + v25);
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);

  return a1;
}

uint64_t sub_261ADB7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261ADB7F8);
}

uint64_t sub_261ADB7F8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(View - 8) + 48);
    uint64_t v10 = View;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_261ADB8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261ADB8BC);
}

void *sub_261ADB8BC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(View - 8) + 56);
    uint64_t v9 = View;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TrainingLoadSmoothedLineTrace()
{
  uint64_t result = qword_26A946BA8;
  if (!qword_26A946BA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261ADB9B0()
{
  uint64_t result = type metadata accessor for TrainingLoadViewModel.ChartPoint(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_261ADBA88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261ADBAA4()
{
  sub_261B8E898();
  uint64_t v0 = sub_261B8E8A8();
  uint64_t result = swift_release();
  qword_26A9536B8 = v0;
  return result;
}

uint64_t sub_261ADBAE8()
{
  if (*(void *)(v0 + *(int *)(type metadata accessor for TrainingLoadSmoothedLineTrace() + 36)))
  {
    swift_retain_n();
    sub_261B8D368();
    uint64_t v1 = sub_261B8D4E8();
    swift_release();
  }
  else
  {
    if (qword_26A942EA0 != -1) {
      swift_once();
    }
    swift_retain();
    return sub_261B8D4E8();
  }
  return v1;
}

uint64_t sub_261ADBBD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v59 = a1;
  uint64_t SmoothedLineTrace = type metadata accessor for TrainingLoadSmoothedLineTrace();
  uint64_t v3 = *(void *)(SmoothedLineTrace - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](SmoothedLineTrace);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946BB8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  uint64_t v52 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v47 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946BC0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  uint64_t v54 = v9;
  MEMORY[0x270FA5388](v8);
  long long v48 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946BC8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v55 = v11;
  uint64_t v56 = v12;
  MEMORY[0x270FA5388](v11);
  long long v49 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946BD0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v57 = v14;
  uint64_t v58 = v15;
  MEMORY[0x270FA5388](v14);
  char v50 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v1;
  uint64_t v60 = *v1;
  sub_261ADE4D8((uint64_t)v1, (uint64_t)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TrainingLoadSmoothedLineTrace);
  unint64_t v17 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v45 = swift_allocObject();
  sub_261ADE470((uint64_t)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v45 + v17, (uint64_t (*)(void))type metadata accessor for TrainingLoadSmoothedLineTrace);
  swift_bridgeObjectRetain();
  v44[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946BD8);
  v44[2] = sub_261B8ADD8();
  v44[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946BE0);
  v44[0] = sub_2619F8AB8(&qword_26A946BE8, &qword_26A946BD8);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946BF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946BF8);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946C00);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946C08);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946C10);
  uint64_t v65 = sub_261B8D258();
  uint64_t v66 = MEMORY[0x263EFCD48];
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v24 = sub_261A029C4();
  uint64_t v25 = MEMORY[0x263F8D310];
  uint64_t v65 = v22;
  uint64_t v66 = MEMORY[0x263F8D310];
  uint64_t v67 = OpaqueTypeConformance2;
  unint64_t v68 = v24;
  uint64_t v26 = swift_getOpaqueTypeConformance2();
  uint64_t v65 = v21;
  uint64_t v66 = v25;
  uint64_t v67 = v26;
  unint64_t v68 = v24;
  uint64_t v27 = swift_getOpaqueTypeConformance2();
  uint64_t v65 = v20;
  uint64_t v66 = v27;
  uint64_t v28 = swift_getOpaqueTypeConformance2();
  uint64_t v29 = sub_2619F8AB8(&qword_26A946C18, &qword_26A946BF8);
  uint64_t v65 = v18;
  uint64_t v66 = v19;
  uint64_t v67 = v28;
  unint64_t v68 = v29;
  swift_getOpaqueTypeConformance2();
  sub_261ADE6BC(&qword_26A946C20, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModel.ChartPoint);
  id v30 = v47;
  sub_261B8EBC8();
  sub_261B8D3F8();
  unint64_t v31 = sub_261ADE278();
  uint64_t v32 = v48;
  uint64_t v33 = v51;
  sub_261B8CFD8();
  sub_261A7D408((uint64_t)&v65);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v30, v33);
  uint64_t v64 = sub_261ADBAE8();
  uint64_t v60 = v33;
  unint64_t v61 = v31;
  uint64_t v34 = swift_getOpaqueTypeConformance2();
  unint64_t v35 = MEMORY[0x263F188A8];
  uint64_t v36 = MEMORY[0x263F18898];
  uint64_t v37 = v49;
  uint64_t v38 = v53;
  sub_261B8CF38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v32, v38);
  uint64_t v60 = v38;
  unint64_t v61 = v35;
  uint64_t v62 = v34;
  uint64_t v63 = v36;
  uint64_t v39 = swift_getOpaqueTypeConformance2();
  uint64_t v40 = v50;
  uint64_t v41 = v55;
  sub_261B8CF78();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v37, v41);
  uint64_t v60 = v41;
  unint64_t v61 = v39;
  swift_getOpaqueTypeConformance2();
  uint64_t v42 = v57;
  sub_261B8CF88();
  return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v40, v42);
}

uint64_t sub_261ADC33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v99 = a3;
  uint64_t SmoothedLineTrace = type metadata accessor for TrainingLoadSmoothedLineTrace();
  MEMORY[0x270FA5388](SmoothedLineTrace);
  uint64_t v92 = (uint64_t)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v79 = *(void *)(View - 8);
  MEMORY[0x270FA5388](View);
  uint64_t v72 = (uint64_t)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9467D8);
  MEMORY[0x270FA5388](v77);
  uint64_t v81 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v73 = (uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v100 = (uint64_t)&v72 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v75 = (uint64_t)&v72 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459D0);
  MEMORY[0x270FA5388](v14 - 8);
  unsigned int v74 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459D8);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v82 = sub_261B8D258();
  uint64_t v80 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946C10);
  uint64_t v84 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v83 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946C08);
  uint64_t v87 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v85 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946C00);
  uint64_t v90 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v88 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946BF0);
  uint64_t v97 = *(void *)(v22 - 8);
  uint64_t v98 = v22;
  MEMORY[0x270FA5388](v22);
  unint64_t v95 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946BE0);
  uint64_t v94 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v91 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8DB98();
  sub_261B8ADD8();
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  uint64_t v25 = *(int *)(View + 24);
  uint64_t v101 = a1;
  uint64_t v26 = a1 + v25;
  double v27 = *(double *)v26;
  if (*(unsigned char *)(v26 + 8)) {
    double v27 = 0.0;
  }
  double v103 = v27;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v78 = v18;
  uint64_t v28 = v76;
  sub_261B8D248();
  uint64_t v29 = v28;
  uint64_t v30 = v79;
  if (*(void *)(*(void *)v28 + 16))
  {
    uint64_t v31 = v75;
    sub_261ADE4D8(*(void *)v28 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80)), v75, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
    uint64_t v33 = v31;
    uint64_t v34 = 0;
  }
  else
  {
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56);
    uint64_t v31 = v75;
    uint64_t v33 = v75;
    uint64_t v34 = 1;
  }
  v32(v33, v34, 1, View);
  uint64_t v35 = v31;
  uint64_t v36 = v100;
  sub_261ADE4D8(v101, v100, type metadata accessor for TrainingLoadViewModel.ChartPoint);
  v32(v36, 0, 1, View);
  uint64_t v37 = v81;
  uint64_t v38 = v81 + *(int *)(v77 + 48);
  sub_2619F86F0(v35, v81, &qword_26B416C30);
  sub_2619F86F0(v36, v38, &qword_26B416C30);
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  if (v39(v37, 1, View) != 1)
  {
    uint64_t v42 = v73;
    sub_2619F86F0(v37, v73, &qword_26B416C30);
    if (v39(v38, 1, View) != 1)
    {
      uint64_t v43 = v38;
      uint64_t v44 = v72;
      sub_261ADE470(v43, v72, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      _s9WorkoutUI21TrainingLoadViewModelV10ChartPointV2eeoiySbAE_AEtFZ_0(v42, v44);
      sub_261ADE540(v44, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      sub_2619F8754(v100, &qword_26B416C30);
      sub_2619F8754(v35, &qword_26B416C30);
      sub_261ADE540(v42, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      sub_2619F8754(v37, &qword_26B416C30);
      uint64_t v40 = v92;
      sub_261ADE4D8(v28, v92, (uint64_t (*)(void))type metadata accessor for TrainingLoadSmoothedLineTrace);
      uint64_t v41 = SmoothedLineTrace;
      goto LABEL_13;
    }
    sub_2619F8754(v100, &qword_26B416C30);
    sub_2619F8754(v35, &qword_26B416C30);
    sub_261ADE540(v42, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    goto LABEL_11;
  }
  sub_2619F8754(v36, &qword_26B416C30);
  sub_2619F8754(v35, &qword_26B416C30);
  if (v39(v38, 1, View) != 1)
  {
LABEL_11:
    sub_2619F8754(v37, &qword_26A9467D8);
    uint64_t v40 = v92;
    sub_261ADE4D8(v28, v92, (uint64_t (*)(void))type metadata accessor for TrainingLoadSmoothedLineTrace);
    uint64_t v41 = SmoothedLineTrace;
    goto LABEL_13;
  }
  sub_2619F8754(v37, &qword_26B416C30);
  uint64_t v40 = v92;
  sub_261ADE4D8(v28, v92, (uint64_t (*)(void))type metadata accessor for TrainingLoadSmoothedLineTrace);
  uint64_t v41 = SmoothedLineTrace;
LABEL_13:
  sub_261ADE540(v40, (uint64_t (*)(void))type metadata accessor for TrainingLoadSmoothedLineTrace);
  uint64_t v45 = MEMORY[0x263EFCD48];
  uint64_t v46 = v83;
  uint64_t v47 = v82;
  long long v48 = v78;
  sub_261B8CF68();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v48, v47);
  long long v49 = *(void **)(v28 + *(int *)(v41 + 60));
  uint64_t v50 = v101;
  uint64_t v51 = (void *)sub_261B8AD48();
  id v52 = objc_msgSend(v49, sel_stringFromDate_, v51);

  uint64_t v53 = sub_261B8F0F8();
  uint64_t v55 = v54;

  double v103 = *(double *)&v53;
  uint64_t v104 = v55;
  uint64_t v107 = v47;
  uint64_t v108 = v45;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v57 = sub_261A029C4();
  uint64_t v58 = MEMORY[0x263F8D310];
  uint64_t v59 = v85;
  uint64_t v60 = v86;
  sub_261B8CF48();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v46, v60);
  uint64_t v107 = sub_261ADD0EC(v50);
  uint64_t v108 = v61;
  double v103 = *(double *)&v60;
  uint64_t v104 = v58;
  uint64_t v105 = OpaqueTypeConformance2;
  unint64_t v106 = v57;
  uint64_t v62 = swift_getOpaqueTypeConformance2();
  uint64_t v63 = v88;
  uint64_t v64 = v89;
  sub_261B8CF58();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v59, v64);
  double v103 = *(double *)&v64;
  uint64_t v104 = v58;
  uint64_t v105 = v62;
  unint64_t v106 = v57;
  uint64_t v65 = swift_getOpaqueTypeConformance2();
  uint64_t v66 = v95;
  uint64_t v67 = v93;
  sub_261B8CFC8();
  uint64_t v68 = (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v63, v67);
  MEMORY[0x270FA5388](v68);
  *(&v72 - 2) = v50;
  *(&v72 - 1) = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946BF8);
  double v103 = *(double *)&v67;
  uint64_t v104 = v65;
  swift_getOpaqueTypeConformance2();
  sub_2619F8AB8(&qword_26A946C18, &qword_26A946BF8);
  uint64_t v69 = v91;
  uint64_t v70 = v98;
  sub_261B8CFA8();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v66, v70);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v94 + 32))(v99, v69, v96);
}

uint64_t sub_261ADD0EC(uint64_t a1)
{
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v3 = a1 + *(int *)(View + 24);
  if ((*(unsigned char *)(v3 + 8) & 1) != 0
    || (v4 = *(double *)v3, uint64_t v5 = a1 + *(int *)(View + 32), (*(unsigned char *)(v5 + 8) & 1) != 0))
  {
    return sub_261B8F408();
  }
  if (*(double *)v5 < v4)
  {
    if (qword_26B416690 == -1) {
      goto LABEL_10;
    }
    goto LABEL_14;
  }
  if (qword_26B416690 != -1) {
LABEL_14:
  }
    swift_once();
LABEL_10:
  swift_beginAccess();
  id v7 = (id)qword_26B416688;
  sub_261B8AA48();

  id v8 = (id)AXFormatFloatWithPercentage();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_261B8F0F8();
    unint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v12 = 0xE000000000000000;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_261B93F70;
  *(void *)(v13 + 56) = MEMORY[0x263F8D310];
  *(void *)(v13 + 64) = sub_261A2B2E8();
  *(void *)(v13 + 32) = v10;
  *(void *)(v13 + 40) = v12;
  uint64_t v14 = sub_261B8F118();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_261ADD358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = sub_261B8EC98();
  a3[1] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946C30);
  return sub_261ADD3B0(a1, a2, (uint64_t)a3 + *(int *)(v7 + 44));
}

uint64_t sub_261ADD3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v91 = a3;
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946C38);
  MEMORY[0x270FA5388](v89);
  uint64_t v85 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946C40);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v86 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_261B8D768();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v82 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_261B8ECD8();
  uint64_t v10 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  unint64_t v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946C48);
  MEMORY[0x270FA5388](v81);
  uint64_t v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946C50);
  MEMORY[0x270FA5388](v83);
  uint64_t v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v90 = (uint64_t)&v77 - v18;
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946C58);
  MEMORY[0x270FA5388](v87);
  uint64_t v88 = (uint64_t *)((char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t SmoothedLineTrace = (int *)type metadata accessor for TrainingLoadSmoothedLineTrace();
  uint64_t v21 = a2 + SmoothedLineTrace[5];
  if ((sub_261B8AD88() & 1) == 0) {
    goto LABEL_3;
  }
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v79 = a2;
  sub_261B8EEC8();
  uint64_t v78 = SmoothedLineTrace;
  sub_261ADE6BC(&qword_26B416C18, MEMORY[0x263F090E8]);
  a2 = v79;
  uint64_t SmoothedLineTrace = v78;
  sub_261B8F728();
  if (v99) {
    goto LABEL_3;
  }
  uint64_t v48 = *(int *)(View + 24);
  long long v49 = (double *)(a1 + v48);
  char v50 = *(unsigned char *)(a1 + v48 + 8);
  uint64_t v51 = (double *)(v21 + v48);
  int v52 = *(unsigned __int8 *)(v21 + v48 + 8);
  if (v50)
  {
    if (!v52) {
      goto LABEL_3;
    }
  }
  else
  {
    if (*v49 != *v51) {
      LOBYTE(v52) = 1;
    }
    if (v52) {
      goto LABEL_3;
    }
  }
  if ((sub_261B8E848() & 1) == 0) {
    goto LABEL_3;
  }
  uint64_t v53 = *(int *)(View + 32);
  uint64_t v54 = (double *)(a1 + v53);
  char v55 = *(unsigned char *)(a1 + v53 + 8);
  uint64_t v56 = (double *)(v21 + v53);
  int v57 = *(unsigned __int8 *)(v21 + v53 + 8);
  if (v55)
  {
    if (v57) {
      goto LABEL_22;
    }
LABEL_3:
    uint64_t v80 = a1;
    if (*(unsigned char *)(a2 + SmoothedLineTrace[6]) == 1)
    {
      uint64_t v23 = sub_261B8E878();
      uint64_t v24 = a2;
      uint64_t v25 = v12;
      uint64_t v26 = v84;
      (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F1B970], v84);
      uint64_t v27 = (uint64_t)v82;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v82, v25, v26);
      uint64_t v28 = (uint64_t (*)(void))MEMORY[0x263F190D8];
      sub_261ADE4D8(v27, (uint64_t)&v14[*(int *)(v81 + 36)], MEMORY[0x263F190D8]);
      *(void *)uint64_t v14 = v23;
      *((_WORD *)v14 + 4) = 256;
      swift_retain();
      sub_261ADE540(v27, v28);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v25, v26);
      swift_release();
      uint64_t v29 = v24;
      sub_261B8EC98();
      sub_261B8D4D8();
      sub_2619F86F0((uint64_t)v14, (uint64_t)v16, &qword_26A946C48);
      uint64_t v30 = &v16[*(int *)(v83 + 36)];
      long long v31 = v97;
      *(_OWORD *)uint64_t v30 = v96;
      *((_OWORD *)v30 + 1) = v31;
      *((_OWORD *)v30 + 2) = v98;
      sub_2619F8754((uint64_t)v14, &qword_26A946C48);
      uint64_t v32 = v90;
      sub_2619FB7EC((uint64_t)v16, v90, &qword_26A946C50);
      uint64_t v33 = *(void *)(v80 + *(int *)(type metadata accessor for TrainingLoadViewModel.ChartPoint(0) + 28));
      swift_retain();
      sub_261B8EC98();
      sub_261B8D4D8();
      uint64_t v34 = v99;
      char v35 = v100;
      uint64_t v36 = v101;
      char v37 = v102;
      int v38 = *(unsigned __int8 *)(v29 + SmoothedLineTrace[13]);
      uint64_t v39 = v103;
      uint64_t v40 = v104;
      if (v38) {
        double v41 = 0.6;
      }
      else {
        double v41 = 1.0;
      }
      sub_2619F86F0(v32, (uint64_t)v16, &qword_26A946C50);
      uint64_t v42 = v85;
      sub_2619F86F0((uint64_t)v16, v85, &qword_26A946C50);
      uint64_t v43 = v42 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A946C68) + 48);
      *(void *)uint64_t v43 = v33;
      *(_WORD *)(v43 + 8) = 256;
      *(void *)(v43 + 16) = v34;
      *(unsigned char *)(v43 + 24) = v35;
      *(void *)(v43 + 32) = v36;
      *(unsigned char *)(v43 + 40) = v37;
      *(void *)(v43 + 48) = v39;
      *(void *)(v43 + 56) = v40;
      *(double *)(v43 + 64) = v41;
      swift_retain();
      sub_2619F8754((uint64_t)v16, &qword_26A946C50);
      sub_2619F86F0(v42, (uint64_t)v88, &qword_26A946C38);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A946C70);
      sub_261ADE5A0();
      sub_2619F8AB8(&qword_26A946CA0, &qword_26A946C38);
      uint64_t v44 = (uint64_t)v86;
      sub_261B8DD68();
      sub_2619F8754(v42, &qword_26A946C38);
      swift_release();
      sub_2619F8754(v90, &qword_26A946C50);
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946C60);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 0, 1, v45);
      return sub_2619FB7EC(v44, v91, &qword_26A946C40);
    }
    else
    {
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946C60);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v91, 1, 1, v47);
    }
  }
  if (*v54 != *v56) {
    LOBYTE(v57) = 1;
  }
  if (v57) {
    goto LABEL_3;
  }
LABEL_22:
  sub_261B8E858();
  char v58 = sub_261B8E848();
  swift_release();
  if (v58) {
    uint64_t v59 = sub_261B8E898();
  }
  else {
    uint64_t v59 = swift_retain();
  }
  uint64_t v90 = v59;
  sub_261B8EC98();
  sub_261B8D4D8();
  uint64_t v84 = v96;
  char v60 = BYTE8(v96);
  uint64_t v83 = v97;
  char v61 = BYTE8(v97);
  uint64_t v81 = *((void *)&v98 + 1);
  uint64_t v82 = (char *)v98;
  uint64_t v86 = (char *)sub_261B8EC98();
  uint64_t v85 = v62;
  uint64_t v80 = sub_261B8E878();
  sub_261B8EC98();
  sub_261B8D4D8();
  uint64_t v63 = v99;
  char v64 = v100;
  uint64_t v65 = v101;
  char v66 = v102;
  uint64_t v67 = v103;
  uint64_t v77 = v104;
  sub_261B8E858();
  char v68 = sub_261B8E848();
  swift_release();
  if (v68)
  {
    sub_261B8E898();
    uint64_t v69 = sub_261B8E8A8();
    swift_release();
  }
  else
  {
    uint64_t v69 = sub_261B8E8A8();
  }
  char v95 = v60;
  char v94 = v61;
  char v93 = v64;
  uint64_t v70 = *(void *)(v79 + v78[12]);
  char v92 = v66;
  uint64_t v71 = v88;
  void *v88 = v90;
  *((_WORD *)v71 + 4) = 256;
  v71[2] = v84;
  *((unsigned char *)v71 + 24) = v60;
  v71[4] = v83;
  *((unsigned char *)v71 + 40) = v61;
  uint64_t v72 = v81;
  v71[6] = v82;
  v71[7] = v72;
  v71[8] = v80;
  *((_WORD *)v71 + 36) = 256;
  v71[10] = v63;
  *((unsigned char *)v71 + 88) = v64;
  v71[12] = v65;
  *((unsigned char *)v71 + 104) = v66;
  uint64_t v73 = v77;
  v71[14] = v67;
  v71[15] = v73;
  uint64_t v74 = v85;
  v71[16] = v86;
  v71[17] = v74;
  v71[18] = v69;
  v71[19] = v70;
  v71[20] = 0;
  v71[21] = 0;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946C70);
  sub_261ADE5A0();
  sub_2619F8AB8(&qword_26A946CA0, &qword_26A946C38);
  uint64_t v75 = v91;
  sub_261B8DD68();
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946C60);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v75, 0, 1, v76);
}

void sub_261ADDE8C(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, void *a7@<X8>)
{
  uint64_t v14 = sub_261B8AEF8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a7 = a1;
  uint64_t SmoothedLineTrace = (int *)type metadata accessor for TrainingLoadSmoothedLineTrace();
  sub_261ADE470(a2, (uint64_t)a7 + SmoothedLineTrace[5], type metadata accessor for TrainingLoadViewModel.ChartPoint);
  *((unsigned char *)a7 + SmoothedLineTrace[6]) = a3;
  *(void *)((char *)a7 + SmoothedLineTrace[7]) = 0x4014000000000000;
  *(void *)((char *)a7 + SmoothedLineTrace[8]) = 0x4000000000000000;
  *(void *)((char *)a7 + SmoothedLineTrace[9]) = a4;
  *(void *)((char *)a7 + SmoothedLineTrace[10]) = 0x4018000000000000;
  *(void *)((char *)a7 + SmoothedLineTrace[11]) = 0x4008000000000000;
  *(void *)((char *)a7 + SmoothedLineTrace[12]) = 0x4010000000000000;
  *((unsigned char *)a7 + SmoothedLineTrace[13]) = a5;
  *((unsigned char *)a7 + SmoothedLineTrace[14]) = a6;
  uint64_t v19 = SmoothedLineTrace[15];
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  sub_261B8AEB8();
  uint64_t v21 = (void *)sub_261B8AE58();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  objc_msgSend(v20, sel_setLocale_, v21);

  uint64_t v22 = (void *)sub_261B8F0B8();
  objc_msgSend(v20, sel_setLocalizedDateFormatFromTemplate_, v22);

  *(void *)((char *)a7 + v19) = v20;
}

uint64_t sub_261ADE08C()
{
  uint64_t v1 = (int *)(type metadata accessor for TrainingLoadSmoothedLineTrace() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v7 + *(int *)(type metadata accessor for TrainingLoadViewModel.ChartPoint(0) + 20);
  uint64_t v10 = sub_261B8EEC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_261ADE1F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for TrainingLoadSmoothedLineTrace() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_261ADC33C(a1, v6, a2);
}

unint64_t sub_261ADE278()
{
  unint64_t result = qword_26A946C28;
  if (!qword_26A946C28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946BB8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946BF0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946BF8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946C00);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946C08);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946C10);
    sub_261B8D258();
    swift_getOpaqueTypeConformance2();
    sub_261A029C4();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_2619F8AB8(&qword_26A946C18, &qword_26A946BF8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946C28);
  }
  return result;
}

uint64_t sub_261ADE468@<X0>(uint64_t *a1@<X8>)
{
  return sub_261ADD358(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_261ADE470(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_261ADE4D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_261ADE540(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_261ADE5A0()
{
  unint64_t result = qword_26A946C78;
  if (!qword_26A946C78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946C70);
    sub_261ADE61C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946C78);
  }
  return result;
}

unint64_t sub_261ADE61C()
{
  unint64_t result = qword_26A946C80;
  if (!qword_26A946C80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946C88);
    sub_261A37D28();
    sub_2619F8AB8(&qword_26A946C90, &qword_26A946C98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946C80);
  }
  return result;
}

uint64_t sub_261ADE6BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261ADE704()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t StepType.symbolName.getter()
{
  uint64_t v1 = 0x2E6E6F7276656863;
  uint64_t v2 = sub_261B8C688();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, v0, v2, v4);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x263F87F80] || v7 == *MEMORY[0x263F87F78]) {
    return v1;
  }
  if (v7 == *MEMORY[0x263F87F88]) {
    return 0xD00000000000001BLL;
  }
  if (v7 == *MEMORY[0x263F87F90]) {
    return 0xD00000000000001DLL;
  }
  uint64_t result = sub_261B8F9C8();
  __break(1u);
  return result;
}

uint64_t StepDetailView.init(step:formattingManager:compressed:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  a3[2] = 0;
  return result;
}

uint64_t sub_261ADEA10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v93 = a1;
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946D38);
  MEMORY[0x270FA5388](v91);
  uint64_t v92 = (uint64_t)v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_261B8DED8();
  uint64_t v80 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  double v4 = (char *)v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_261B8DB88();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946D40);
  uint64_t v87 = *(void *)(v6 - 8);
  uint64_t v88 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v86 = (char *)v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946D48);
  MEMORY[0x270FA5388](v89);
  uint64_t v85 = (char *)v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v90 = (uint64_t)v76 - v10;
  uint64_t v11 = sub_261B8C688();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v83 = (char *)v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v76 - v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v76 - v18;
  id v20 = *(void **)(v1 + 8);
  sub_261B8BC98();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v19, v11);
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v16, v11);
  if (v21 == *MEMORY[0x263F87F80]
    || v21 == *MEMORY[0x263F87F78]
    || v21 == *MEMORY[0x263F87F88]
    || v21 == *MEMORY[0x263F87F90])
  {
    uint64_t v22 = *(void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v79 = v11;
    uint64_t v82 = v22;
    v22(v19, v11);
    uint64_t v23 = sub_261B8E948();
    uint64_t v24 = (void *)sub_261B8BC88();
    uint64_t v25 = (void *)sub_261B8BC08();
    uint64_t v26 = FIUIDistanceTypeForActivityType();

    uint64_t v27 = NLSessionActivityGoal.intervalDisplayString(formattingManager:distanceType:)(v20, v26, 0);
    uint64_t v29 = v28;

    char v30 = sub_261B8BC28();
    uint64_t v84 = v23;
    uint64_t v78 = v27;
    if ((v30 & 1) != 0 && (uint64_t v31 = WorkoutStep.alertDisplayString(formattingManager:)((uint64_t)v20), v32))
    {
      uint64_t v33 = v31;
      uint64_t v77 = v32;
      WorkoutStep.targetIconName.getter();
      uint64_t v34 = sub_261B8E948();
      sub_261B8DB78();
      sub_261B8DB68();
      sub_261B8DB48();
      sub_261B8DB68();
      uint64_t v35 = v29;
      sub_261B8DB58();
      sub_261B8DB68();
      v76[1] = v34;
      sub_261B8DB48();
      sub_261B8DB68();
      v76[0] = v33;
      sub_261B8DB58();
      sub_261B8DB68();
      sub_261B8DBA8();
      uint64_t v98 = sub_261B8E3B8();
      uint64_t v99 = v36;
      char v100 = v37 & 1;
      uint64_t v101 = v38;
      sub_261B8DEB8();
      uint64_t v39 = v86;
      sub_261B8E6B8();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v4, v81);
      sub_261A02A18(v98, v99, v100);
      swift_bridgeObjectRelease();
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v40 = (id)qword_26B416688;
      sub_261B8AA48();

      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_261B94B90;
      uint64_t v42 = v83;
      sub_261B8BC98();
      uint64_t v43 = sub_261B8C668();
      uint64_t v45 = v44;
      v82(v42, v79);
      uint64_t v46 = MEMORY[0x263F8D310];
      *(void *)(v41 + 56) = MEMORY[0x263F8D310];
      unint64_t v47 = sub_261A2B2E8();
      *(void *)(v41 + 32) = v43;
      *(void *)(v41 + 40) = v45;
      *(void *)(v41 + 96) = v46;
      *(void *)(v41 + 104) = v47;
      uint64_t v48 = v78;
      *(void *)(v41 + 64) = v47;
      *(void *)(v41 + 72) = v48;
      *(void *)(v41 + 80) = v35;
      *(void *)(v41 + 136) = v46;
      *(void *)(v41 + 144) = v47;
      uint64_t v49 = v77;
      *(void *)(v41 + 112) = v76[0];
      *(void *)(v41 + 120) = v49;
      uint64_t v50 = sub_261B8F118();
      uint64_t v52 = v51;
      swift_bridgeObjectRelease();
      uint64_t v96 = v50;
      uint64_t v97 = v52;
      uint64_t v94 = MEMORY[0x263F1A830];
      uint64_t v95 = MEMORY[0x263F1A820];
      swift_getOpaqueTypeConformance2();
      sub_261A029C4();
      uint64_t v53 = (uint64_t)v85;
      uint64_t v54 = v88;
      sub_261B8E668();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v39, v54);
      uint64_t v55 = v90;
      sub_2619FB7EC(v53, v90, &qword_26A946D48);
      sub_2619F86F0(v55, v92, &qword_26A946D48);
      swift_storeEnumTagMultiPayload();
      sub_261AE0F50();
      sub_261B8DD68();
      swift_release();
    }
    else
    {
      sub_261B8DB78();
      sub_261B8DB68();
      sub_261B8DB48();
      sub_261B8DB68();
      sub_261B8DB58();
      sub_261B8DB68();
      sub_261B8DBA8();
      uint64_t v98 = sub_261B8E3B8();
      uint64_t v99 = v56;
      char v100 = v57 & 1;
      uint64_t v101 = v58;
      sub_261B8DEB8();
      uint64_t v59 = v86;
      sub_261B8E6B8();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v4, v81);
      sub_261A02A18(v98, v99, v100);
      swift_bridgeObjectRelease();
      uint64_t v60 = v29;
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v61 = (id)qword_26B416688;
      sub_261B8AA48();

      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_261B92AA0;
      uint64_t v63 = v83;
      sub_261B8BC98();
      uint64_t v64 = sub_261B8C668();
      uint64_t v66 = v65;
      v82(v63, v79);
      uint64_t v67 = MEMORY[0x263F8D310];
      *(void *)(v62 + 56) = MEMORY[0x263F8D310];
      unint64_t v68 = sub_261A2B2E8();
      *(void *)(v62 + 32) = v64;
      *(void *)(v62 + 40) = v66;
      *(void *)(v62 + 96) = v67;
      *(void *)(v62 + 104) = v68;
      uint64_t v69 = v78;
      *(void *)(v62 + 64) = v68;
      *(void *)(v62 + 72) = v69;
      *(void *)(v62 + 80) = v60;
      uint64_t v70 = sub_261B8F118();
      uint64_t v72 = v71;
      swift_bridgeObjectRelease();
      uint64_t v96 = v70;
      uint64_t v97 = v72;
      uint64_t v94 = MEMORY[0x263F1A830];
      uint64_t v95 = MEMORY[0x263F1A820];
      swift_getOpaqueTypeConformance2();
      sub_261A029C4();
      uint64_t v73 = (uint64_t)v85;
      uint64_t v74 = v88;
      sub_261B8E668();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v59, v74);
      uint64_t v55 = v90;
      sub_2619FB7EC(v73, v90, &qword_26A946D48);
      sub_2619F86F0(v55, v92, &qword_26A946D48);
      swift_storeEnumTagMultiPayload();
      sub_261AE0F50();
      sub_261B8DD68();
    }
    swift_release();
    return sub_2619F8754(v55, &qword_26A946D48);
  }
  else
  {
    uint64_t result = sub_261B8F9C8();
    __break(1u);
  }
  return result;
}

uint64_t WorkoutStep.alertDisplayString(formattingManager:)(uint64_t a1)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_261B8C418();
  uint64_t v27 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v7 = sub_261B8C228();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v25 - v12;
  if (sub_261B8BC18())
  {
    uint64_t v14 = (void *)sub_261B8BC08();
    uint64_t v15 = sub_261B8BD58();
LABEL_9:
    swift_release();

    return v15;
  }
  uint64_t v25 = v6;
  uint64_t v26 = v3;
  sub_261B8BC38();
  sub_261B8C318();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F87E28], v7);
  sub_261AE102C(&qword_26A946CA8, MEMORY[0x263F87E38]);
  char v16 = sub_261B8F0A8();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v10, v7);
  v17(v13, v7);
  if ((v16 & 1) == 0)
  {
    sub_261B8BC38();
    uint64_t v14 = (void *)sub_261B8BC08();
    uint64_t v23 = MEMORY[0x263E4A1B0](v28, v14);
LABEL_8:
    uint64_t v15 = v23;
    goto LABEL_9;
  }
  sub_261B8BC68();
  uint64_t v18 = v25;
  sub_261B8C5B8();
  swift_release();
  id v20 = v26;
  uint64_t v19 = v27;
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, *MEMORY[0x263F87F20], v1);
  sub_261AE102C(&qword_26A946CB0, MEMORY[0x263F87F28]);
  char v21 = sub_261B8F0A8();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v19 + 8);
  v22(v20, v1);
  v22(v18, v1);
  if ((v21 & 1) == 0)
  {
    sub_261B8BC68();
    uint64_t v14 = (void *)sub_261B8BC08();
    uint64_t v23 = sub_261B8C598();
    goto LABEL_8;
  }
  return 0;
}

uint64_t StepDetailView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v2 = sub_261B8E078();
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946CB8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946CC0);
  MEMORY[0x270FA5388](v42);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v36 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946CC8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946CD0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (double *)((char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *v1;
  if (*v1)
  {
    double v20 = *((double *)v1 + 2);
    uint64_t v21 = v1[1];
    swift_retain();
    *(void *)uint64_t v18 = sub_261B8DBF8();
    v18[1] = v20;
    *((unsigned char *)v18 + 16) = 0;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946CF8);
    sub_261ADFEBC(v19, v21, (uint64_t)v18 + *(int *)(v22 + 44), v20);
    sub_2619F86F0((uint64_t)v18, (uint64_t)v15, &qword_26A946CD0);
    swift_storeEnumTagMultiPayload();
    sub_2619F8AB8(&qword_26A946CE0, &qword_26A946CD0);
    sub_261AE0BFC();
    sub_261B8DD68();
    swift_release();
    uint64_t v23 = (uint64_t)v18;
    uint64_t v24 = &qword_26A946CD0;
  }
  else
  {
    uint64_t v36 = v9;
    char v37 = v12;
    uint64_t v26 = v40;
    uint64_t v25 = v41;
    uint64_t v38 = v13;
    uint64_t v39 = v16;
    uint64_t v27 = v42;
    *(void *)uint64_t v7 = sub_261B8DAD8();
    *((void *)v7 + 1) = 0;
    v7[16] = 1;
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946CD8);
    sub_261AE0564((uint64_t)&v7[*(int *)(v28 + 44)]);
    if (qword_26A942CC0 != -1) {
      swift_once();
    }
    sub_261B8E148();
    sub_261B8E058();
    uint64_t v29 = sub_261B8E178();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v25);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v31 = (uint64_t)v36;
    sub_2619F86F0((uint64_t)v7, (uint64_t)v36, &qword_26A946CB8);
    uint64_t v32 = (uint64_t *)(v31 + *(int *)(v27 + 36));
    *uint64_t v32 = KeyPath;
    v32[1] = v29;
    sub_2619F8754((uint64_t)v7, &qword_26A946CB8);
    uint64_t v33 = v31;
    uint64_t v34 = (uint64_t)v37;
    sub_2619FB7EC(v33, (uint64_t)v37, &qword_26A946CC0);
    sub_2619F86F0(v34, (uint64_t)v15, &qword_26A946CC0);
    swift_storeEnumTagMultiPayload();
    sub_2619F8AB8(&qword_26A946CE0, &qword_26A946CD0);
    sub_261AE0BFC();
    sub_261B8DD68();
    uint64_t v23 = v34;
    uint64_t v24 = &qword_26A946CC0;
  }
  return sub_2619F8754(v23, v24);
}

uint64_t sub_261ADFEBC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v53 = a2;
  uint64_t v52 = a1;
  uint64_t v63 = sub_261B8E978();
  uint64_t v54 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v56 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946D10);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946D18);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946D20);
  MEMORY[0x270FA5388](v51);
  uint64_t v66 = (uint64_t)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946D28);
  MEMORY[0x270FA5388](v59);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v65 = (uint64_t)&v49 - v17;
  uint64_t v18 = sub_261B8E078();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = WorkoutStep.displayString.getter();
  uint64_t v68 = v22;
  sub_261A029C4();
  uint64_t v23 = sub_261B8E3D8();
  uint64_t v60 = v24;
  uint64_t v61 = v23;
  int v50 = v25;
  uint64_t v64 = v26;
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_26A942CC0 != -1) {
    swift_once();
  }
  sub_261B8E148();
  sub_261B8E058();
  uint64_t v58 = sub_261B8E178();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v55 = v19 + 8;
  uint64_t v49 = v27;
  v27(v21, v18);
  uint64_t v57 = swift_getKeyPath();
  uint64_t v67 = v52;
  uint64_t v68 = v53;
  double v69 = a4;
  sub_261ADEA10((uint64_t)v9);
  uint64_t v28 = swift_getKeyPath();
  uint64_t v53 = v18;
  sub_2619F86F0((uint64_t)v9, (uint64_t)v12, &qword_26A946D10);
  uint64_t v29 = &v12[*(int *)(v10 + 36)];
  *(void *)uint64_t v29 = v28;
  *((void *)v29 + 1) = 1;
  v29[16] = 0;
  sub_2619F8754((uint64_t)v9, &qword_26A946D10);
  uint64_t v30 = v54;
  uint64_t v31 = v56;
  uint64_t v32 = v63;
  (*(void (**)(char *, void, uint64_t))(v54 + 104))(v56, *MEMORY[0x263F1B538], v63);
  uint64_t v33 = swift_getKeyPath();
  uint64_t v34 = v66;
  uint64_t v35 = (uint64_t *)(v66 + *(int *)(v51 + 36));
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E30);
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))((char *)v35 + *(int *)(v36 + 28), v31, v32);
  *uint64_t v35 = v33;
  sub_2619F86F0((uint64_t)v12, v34, &qword_26A946D18);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  sub_2619F8754((uint64_t)v12, &qword_26A946D18);
  if (qword_26A942CC8 != -1) {
    swift_once();
  }
  char v37 = v50 & 1;
  sub_261B8E168();
  sub_261B8E058();
  uint64_t v38 = sub_261B8E178();
  v49(v21, v53);
  uint64_t v39 = swift_getKeyPath();
  uint64_t v40 = v66;
  sub_2619F86F0(v66, (uint64_t)v15, &qword_26A946D20);
  uint64_t v41 = (uint64_t *)&v15[*(int *)(v59 + 36)];
  *uint64_t v41 = v39;
  v41[1] = v38;
  sub_2619F8754(v40, &qword_26A946D20);
  uint64_t v42 = v65;
  sub_2619FB7EC((uint64_t)v15, v65, &qword_26A946D28);
  sub_2619F86F0(v42, (uint64_t)v15, &qword_26A946D28);
  uint64_t v44 = v60;
  uint64_t v43 = v61;
  *(void *)a3 = v61;
  *(void *)(a3 + 8) = v44;
  *(unsigned char *)(a3 + 16) = v37;
  uint64_t v45 = KeyPath;
  *(void *)(a3 + 24) = v64;
  *(void *)(a3 + 32) = v45;
  *(void *)(a3 + 40) = 1;
  *(unsigned char *)(a3 + 48) = 0;
  uint64_t v46 = v58;
  *(void *)(a3 + 56) = v57;
  *(void *)(a3 + 64) = v46;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946D30);
  sub_2619F86F0((uint64_t)v15, a3 + *(int *)(v47 + 48), &qword_26A946D28);
  sub_261A001D0(v43, v44, v37);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2619F8754(v42, &qword_26A946D28);
  sub_2619F8754((uint64_t)v15, &qword_26A946D28);
  sub_261A02A18(v43, v44, v37);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_261AE0564@<X0>(uint64_t a1@<X8>)
{
  v33[0] = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E30);
  uint64_t v2 = v1 - 8;
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (uint64_t *)((char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_261B8E978();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E38);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v33 - v14;
  uint64_t v16 = sub_261B8E918();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F1B538], v5);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v2 + 36), v8, v5);
  uint64_t *v4 = KeyPath;
  sub_2619F86F0((uint64_t)v4, (uint64_t)v12 + *(int *)(v10 + 44), &qword_26A944E30);
  *uint64_t v12 = v16;
  swift_retain();
  sub_2619F8754((uint64_t)v4, &qword_26A944E30);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  sub_2619FB7EC((uint64_t)v12, (uint64_t)v15, &qword_26A944E38);
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v18 = (id)qword_26B416688;
  uint64_t v19 = sub_261B8AA48();
  uint64_t v21 = v20;

  v33[1] = v19;
  v33[2] = v21;
  sub_261A029C4();
  uint64_t v22 = sub_261B8E3D8();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  uint64_t v29 = swift_getKeyPath();
  sub_2619F86F0((uint64_t)v15, (uint64_t)v12, &qword_26A944E38);
  uint64_t v30 = v33[0];
  sub_2619F86F0((uint64_t)v12, v33[0], &qword_26A944E38);
  uint64_t v31 = v30 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A946D58) + 48);
  *(void *)uint64_t v31 = v22;
  *(void *)(v31 + 8) = v24;
  *(unsigned char *)(v31 + 16) = v28;
  *(void *)(v31 + 24) = v26;
  *(void *)(v31 + 32) = v29;
  *(void *)(v31 + 40) = 1;
  *(unsigned char *)(v31 + 48) = 0;
  sub_261A001D0(v22, v24, v28);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2619F8754((uint64_t)v15, &qword_26A944E38);
  sub_261A02A18(v22, v24, v28);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_2619F8754((uint64_t)v12, &qword_26A944E38);
}

uint64_t StepType.scaleableImage.getter()
{
  uint64_t v1 = sub_261B8C688();
  uint64_t v2 = *(void *)(v1 - 8);
  double v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v2 + 16))(v5, v0, v1, v3);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  if (v6 == *MEMORY[0x263F87F80]
    || v6 == *MEMORY[0x263F87F78]
    || v6 == *MEMORY[0x263F87F88]
    || v6 == *MEMORY[0x263F87F90])
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v7 = (id)qword_26B416688;
    uint64_t v8 = (void *)sub_261B8F0B8();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(self, sel_imageNamed_inBundle_, v8, v7);

    if (v9) {
      return (uint64_t)v9;
    }
    __break(1u);
  }
  uint64_t result = sub_261B8F9C8();
  __break(1u);
  return result;
}

unint64_t sub_261AE0BFC()
{
  unint64_t result = qword_26A946CE8;
  if (!qword_26A946CE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946CC0);
    sub_2619F8AB8(&qword_26A946CF0, &qword_26A946CB8);
    sub_2619F8AB8((unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946CE8);
  }
  return result;
}

uint64_t sub_261AE0CC0()
{
  return swift_getOpaqueTypeConformance2();
}

void destroy for StepDetailView(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void **)(a1 + 8);
}

void *_s9WorkoutUI14StepDetailViewVwCP_0(void *a1, void *a2)
{
  double v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  id v4 = v3;
  return a1;
}

void *assignWithCopy for StepDetailView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  id v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for StepDetailView(uint64_t a1, uint64_t a2)
{
  swift_release();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for StepDetailView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StepDetailView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StepDetailView()
{
  return &type metadata for StepDetailView;
}

unint64_t sub_261AE0EA0()
{
  unint64_t result = qword_26A946D00;
  if (!qword_26A946D00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946D08);
    sub_2619F8AB8(&qword_26A946CE0, &qword_26A946CD0);
    sub_261AE0BFC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946D00);
  }
  return result;
}

unint64_t sub_261AE0F50()
{
  unint64_t result = qword_26A946D50;
  if (!qword_26A946D50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946D48);
    swift_getOpaqueTypeConformance2();
    sub_261AE102C((unint64_t *)&qword_26A943A88, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946D50);
  }
  return result;
}

uint64_t sub_261AE102C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RightTrapezoid(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RightTrapezoid(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for RightTrapezoid()
{
  return &type metadata for RightTrapezoid;
}

unint64_t sub_261AE10D4()
{
  unint64_t result = qword_26A946D60;
  if (!qword_26A946D60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946D68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946D60);
  }
  return result;
}

double sub_261AE1130@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, double a6@<D4>, double a7@<D5>, double a8@<D6>)
{
  sub_261B8E2C8();
  v27.origin.x = a2;
  v27.origin.y = a3;
  v27.size.width = a4;
  v27.size.height = a5;
  double MaxY = CGRectGetMaxY(v27);
  v28.origin.x = a2;
  v28.origin.y = a3;
  v28.size.width = a4;
  v28.size.height = a5;
  double v16 = (1.0 - a6) * (MaxY - CGRectGetMinY(v28));
  v29.origin.x = a2;
  v29.origin.y = a3;
  v29.size.width = a4;
  v29.size.height = a5;
  double v17 = CGRectGetMaxY(v29);
  v30.origin.x = a2;
  v30.origin.y = a3;
  v30.size.width = a4;
  v30.size.height = a5;
  double v18 = (1.0 - a7) * (v17 - CGRectGetMinY(v30));
  v31.origin.x = a2;
  v31.origin.y = a3;
  v31.size.width = a4;
  v31.size.height = a5;
  CGFloat v21 = CGRectGetMinX(v31) + a8;
  v32.origin.x = a2;
  v32.origin.y = a3;
  v32.size.width = a4;
  v32.size.height = a5;
  CGFloat v22 = CGRectGetMaxX(v32) - a8;
  v33.origin.x = a2;
  v33.origin.y = a3;
  v33.size.width = a4;
  v33.size.height = a5;
  CGRectGetMaxX(v33);
  v34.origin.x = a2;
  v34.origin.y = a3;
  v34.size.width = a4;
  v34.size.height = a5;
  CGRectGetMaxY(v34);
  v35.origin.x = a2;
  v35.origin.y = a3;
  v35.size.width = a4;
  v35.size.height = a5;
  CGRectGetMinX(v35);
  v36.origin.x = a2;
  v36.origin.y = a3;
  v36.size.width = a4;
  v36.size.height = a5;
  CGRectGetMaxY(v36);
  sub_261B8E298();
  sub_261B8E298();
  sub_261B8E298();
  sub_261B8E298();
  double v19 = atan2(v18 + a8 - (v16 + a8), v22 - v21);
  __sincos_stret(v19);
  sub_261B8E2A8();
  sub_261B8E2B8();
  sub_261B8E2B8();
  sub_261B8E2B8();
  sub_261B8E2B8();
  sub_261B8E2B8();
  sub_261B8E2B8();
  sub_261B8E2B8();
  double result = *(double *)&v24;
  *(_OWORD *)a1 = v24;
  *(_OWORD *)(a1 + 16) = v25;
  *(unsigned char *)(a1 + 32) = v26;
  return result;
}

double sub_261AE142C@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_261AE1130((uint64_t)v9, a2, a3, a4, a5, *v5, v5[1], v5[2]);
  double result = *(double *)v9;
  long long v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 32) = v10;
  return result;
}

uint64_t sub_261AE1478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_261AE15E8();
  return MEMORY[0x270F04808](a1, a2, a3, v6);
}

uint64_t sub_261AE14DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_261AE15E8();
  return MEMORY[0x270F047D0](a1, a2, a3, v6);
}

uint64_t sub_261AE1540(uint64_t a1)
{
  unint64_t v2 = sub_261AE15E8();
  return MEMORY[0x270F047E0](a1, v2);
}

unint64_t sub_261AE1590()
{
  unint64_t result = qword_26A946D70;
  if (!qword_26A946D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946D70);
  }
  return result;
}

unint64_t sub_261AE15E8()
{
  unint64_t result = qword_26A946D78;
  if (!qword_26A946D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946D78);
  }
  return result;
}

uint64_t EffortEntryView.init(estimate:isShowingEffortOnboarding:showCurrentWorkloadButton:doneTapped:)@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v34 = a4;
  uint64_t v32 = a3;
  int v33 = a2;
  uint64_t v7 = sub_261B8BE88();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x270FA5388](v7);
  id v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_261B8C2D8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  double v16 = &v26[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v35 = 0;
  sub_261B8EA08();
  double v17 = v36;
  uint64_t v18 = v37;
  LOBYTE(v35) = 0;
  sub_261B8EA08();
  int v27 = LOBYTE(v36);
  uint64_t v19 = v37;
  LOBYTE(v35) = 0;
  sub_261B8EA08();
  int v30 = LOBYTE(v36);
  uint64_t v20 = v37;
  uint64_t v31 = a1;
  sub_2619F86F0(a1, (uint64_t)v12, &qword_26A943910);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    swift_retain();
    swift_retain();
    sub_2619F8754(v31, &qword_26A943910);
    sub_2619F8754((uint64_t)v12, &qword_26A943910);
    char v21 = v27;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32))(v16, v12, v13);
    swift_retain();
    swift_retain();
    sub_261B8C278();
    uint64_t v22 = sub_261B8BE78();
    (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v9, v29);
    double v17 = (double)v22;
    swift_release();
    LOBYTE(v35) = v22 == 0;
    sub_261B8EA08();
    char v21 = LOBYTE(v36);
    uint64_t v23 = v37;
    sub_2619F8754(v31, &qword_26A943910);
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    swift_release();
    uint64_t v18 = 0;
    uint64_t v19 = v23;
  }
  swift_retain_n();
  swift_retain();
  swift_release();
  uint64_t v24 = v34;
  *(void *)a5 = v32;
  *(void *)(a5 + 8) = v24;
  *(void *)(a5 + 16) = nullsub_1;
  *(void *)(a5 + 24) = 0;
  *(unsigned char *)(a5 + 32) = v33 & 1;
  *(unsigned char *)(a5 + 33) = 0;
  *(double *)(a5 + 40) = v17;
  *(void *)(a5 + 48) = v18;
  *(unsigned char *)(a5 + 56) = v21;
  *(void *)(a5 + 64) = v19;
  *(void *)(a5 + 72) = 0x3FDB6DB6DB6DB6DBLL;
  *(unsigned char *)(a5 + 80) = v30;
  *(void *)(a5 + 88) = v20;
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t EffortEntryView.init(estimate:isShowingEffortOnboarding:showCurrentWorkloadButton:cancelTapped:doneTapped:)@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v34 = a6;
  uint64_t v36 = a5;
  uint64_t v37 = a3;
  uint64_t v39 = a4;
  int v38 = a2;
  uint64_t v9 = sub_261B8BE88();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = &v29[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_261B8C2D8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = &v29[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v40 = 0;
  sub_261B8EA08();
  double v19 = v41;
  uint64_t v20 = v42;
  LOBYTE(v40) = 0;
  sub_261B8EA08();
  int v30 = LOBYTE(v41);
  uint64_t v21 = v42;
  LOBYTE(v40) = 0;
  sub_261B8EA08();
  int v33 = LOBYTE(v41);
  uint64_t v22 = v42;
  uint64_t v35 = a1;
  sub_2619F86F0(a1, (uint64_t)v14, &qword_26A943910);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    swift_retain();
    uint64_t v23 = v34;
    swift_retain();
    swift_retain();
    sub_2619F8754(v35, &qword_26A943910);
    sub_2619F8754((uint64_t)v14, &qword_26A943910);
    char v24 = v30;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(v18, v14, v15);
    swift_retain();
    uint64_t v23 = v34;
    swift_retain();
    swift_retain();
    sub_261B8C278();
    uint64_t v25 = sub_261B8BE78();
    (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v11, v32);
    double v19 = (double)v25;
    swift_release();
    LOBYTE(v40) = v25 == 0;
    sub_261B8EA08();
    char v24 = LOBYTE(v41);
    uint64_t v26 = v42;
    sub_2619F8754(v35, &qword_26A943910);
    (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v18, v15);
    swift_release();
    uint64_t v20 = 0;
    uint64_t v21 = v26;
  }
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  *(void *)a7 = v36;
  *(void *)(a7 + 8) = v23;
  uint64_t v27 = v39;
  *(void *)(a7 + 16) = v37;
  *(void *)(a7 + 24) = v27;
  *(unsigned char *)(a7 + 32) = v38 & 1;
  *(unsigned char *)(a7 + 33) = 0;
  *(double *)(a7 + 40) = v19;
  *(void *)(a7 + 48) = v20;
  *(unsigned char *)(a7 + 56) = v24;
  *(void *)(a7 + 64) = v21;
  *(void *)(a7 + 72) = 0x3FDB6DB6DB6DB6DBLL;
  *(unsigned char *)(a7 + 80) = v33;
  *(void *)(a7 + 88) = v22;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

CGFloat sub_261AE1E24()
{
  id v0 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v0, sel_bounds);
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;

  v10.origin.x = v2;
  v10.origin.y = v4;
  v10.size.width = v6;
  v10.size.height = v8;
  CGFloat result = CGRectGetHeight(v10) * 0.09;
  qword_26A946D80 = *(void *)&result;
  return result;
}

uint64_t sub_261AE1EBC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v1 - 8);
  double v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v13 = v4;
  uint64_t v14 = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DA8);
  uint64_t result = sub_261B8EA18();
  double v7 = round(v15);
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((uint64_t)v7 <= 0)
  {
    uint64_t v10 = sub_261B8C2D8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
    goto LABEL_11;
  }
  uint64_t v13 = v4;
  uint64_t v14 = v5;
  uint64_t result = sub_261B8EA18();
  double v8 = round(v15);
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0) {
    goto LABEL_15;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = (uint64_t)v8 - 1;
  if (!__OFSUB__((uint64_t)v8, 1))
  {
    sub_261B8C288();
    uint64_t v9 = sub_261B8C2D8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 0, 1, v9);
LABEL_11:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v11 = _s9WorkoutUI12EffortColorsV8gradient8exertion05SwiftB08GradientV0A4Core18AppleExertionScaleOSg_tFZ_0((uint64_t)v3);
    sub_2619F8754((uint64_t)v3, &qword_26A943910);
    return v11;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_261AE2130()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v1 - 8);
  double v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v13 = v4;
  uint64_t v14 = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DA8);
  uint64_t result = sub_261B8EA18();
  double v7 = round(v15);
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((uint64_t)v7 <= 0)
  {
    uint64_t v10 = sub_261B8C2D8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
    goto LABEL_11;
  }
  uint64_t v13 = v4;
  uint64_t v14 = v5;
  uint64_t result = sub_261B8EA18();
  double v8 = round(v15);
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0) {
    goto LABEL_15;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = (uint64_t)v8 - 1;
  if (!__OFSUB__((uint64_t)v8, 1))
  {
    sub_261B8C288();
    uint64_t v9 = sub_261B8C2D8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 0, 1, v9);
LABEL_11:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_261B22BB4((uint64_t)v3);
    uint64_t v11 = sub_261B8E8A8();
    swift_release();
    sub_2619F8754((uint64_t)v3, &qword_26A943910);
    return v11;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_261AE23B8()
{
  uint64_t v1 = sub_261B8BE88();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v5 - 8);
  double v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v0 + 40);
  uint64_t v9 = *(void *)(v0 + 48);
  uint64_t v10 = *(void *)(v0 + 64);
  LOBYTE(v20) = *(unsigned char *)(v0 + 56);
  uint64_t v21 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DD0);
  sub_261B8EA18();
  if (LOBYTE(v22) == 1)
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v11 = (id)qword_26B416688;
    uint64_t v12 = sub_261B8AA48();

    return v12;
  }
  uint64_t v19 = v2;
  uint64_t v20 = v8;
  uint64_t v21 = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DA8);
  uint64_t result = sub_261B8EA18();
  double v14 = round(v22);
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if ((uint64_t)v14 <= 0)
  {
    uint64_t v16 = sub_261B8C2D8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v7, 1, 1, v16);
LABEL_15:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_261B8C2D8();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v7, 1, v16) == 1)
    {
      sub_2619F8754((uint64_t)v7, &qword_26A943910);
      return 0;
    }
    else
    {
      sub_261B8C278();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v16);
      uint64_t v12 = sub_261B8BE68();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v1);
    }
    return v12;
  }
  uint64_t v20 = v8;
  uint64_t v21 = v9;
  uint64_t result = sub_261B8EA18();
  double v15 = round(v22);
  if ((~*(void *)&v15 & 0x7FF0000000000000) == 0) {
    goto LABEL_22;
  }
  if (v15 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v15 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t result = (uint64_t)v15 - 1;
  if (!__OFSUB__((uint64_t)v15, 1))
  {
    sub_261B8C288();
    uint64_t v16 = sub_261B8C2D8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v7, 0, 1, v16);
    goto LABEL_15;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t EffortEntryView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v2 = sub_261B8DEA8();
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946D88);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  double v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946D90);
  uint64_t v46 = *(uint64_t **)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  double v41 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946D98);
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v45 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DA0);
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v50 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v47 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = v1[3];
  v60[0] = v1[2];
  v60[1] = v13;
  long long v14 = v1[5];
  long long v61 = v1[4];
  long long v62 = v14;
  long long v15 = v1[1];
  long long v58 = *v1;
  long long v59 = v15;
  uint64_t v16 = sub_261B8EC98();
  uint64_t v18 = v17;
  sub_261AE2F84(&v58, (uint64_t)v56);
  *(void *)&long long v55 = v16;
  *((void *)&v55 + 1) = v18;
  v63[0] = *(_OWORD *)((char *)v60 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DA8);
  sub_261B8EA18();
  uint64_t v19 = (_OWORD *)swift_allocObject();
  long long v20 = v60[1];
  v19[3] = v60[0];
  void v19[4] = v20;
  long long v21 = v62;
  v19[5] = v61;
  v19[6] = v21;
  long long v22 = v59;
  v19[1] = v58;
  _OWORD v19[2] = v22;
  sub_261AE3F94((uint64_t)&v58);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DB0);
  uint64_t v24 = sub_2619F8AB8(&qword_26A946DB8, &qword_26A946DB0);
  uint64_t v25 = MEMORY[0x263F8D538];
  sub_261B8E7D8();
  swift_release();
  v63[12] = v56[11];
  v63[13] = v56[12];
  v63[14] = v56[13];
  v63[8] = v56[7];
  v63[9] = v56[8];
  uint64_t v64 = v57;
  v63[10] = v56[9];
  v63[11] = v56[10];
  v63[4] = v56[3];
  v63[5] = v56[4];
  v63[6] = v56[5];
  v63[7] = v56[6];
  v63[0] = v55;
  v63[1] = v56[0];
  v63[2] = v56[1];
  v63[3] = v56[2];
  sub_261AE4000((uint64_t)v63);
  sub_261B8DE98();
  unsigned __int8 v26 = sub_261B8DF88();
  unsigned __int8 v27 = sub_261B8DF68();
  sub_261B8DF78();
  sub_261B8DF78();
  if (sub_261B8DF78() != v26) {
    sub_261B8DF78();
  }
  sub_261B8DF78();
  if (sub_261B8DF78() != v27) {
    sub_261B8DF78();
  }
  *(void *)&long long v55 = v23;
  *((void *)&v55 + 1) = v25;
  *(void *)&v56[0] = v24;
  *((void *)&v56[0] + 1) = MEMORY[0x263F8D568];
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v29 = v41;
  sub_261B8E618();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v4, v44);
  uint64_t v30 = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v7, v5);
  MEMORY[0x270FA5388](v30);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DC0);
  *(void *)&long long v55 = v5;
  *((void *)&v55 + 1) = OpaqueTypeConformance2;
  uint64_t v32 = swift_getOpaqueTypeConformance2();
  uint64_t v33 = sub_2619F8AB8(&qword_26A946DC8, &qword_26A946DC0);
  uint64_t v34 = v45;
  uint64_t v35 = v48;
  sub_261B8E7A8();
  ((void (*)(char *, uint64_t))v46[1])(v29, v35);
  long long v54 = v62;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DD0);
  uint64_t v36 = sub_261B8EA38();
  uint64_t v46 = &v40;
  MEMORY[0x270FA5388](v36);
  *(void *)&long long v55 = v35;
  *((void *)&v55 + 1) = v31;
  *(void *)&v56[0] = v32;
  *((void *)&v56[0] + 1) = v33;
  swift_getOpaqueTypeConformance2();
  sub_261AE4FD4();
  uint64_t v37 = v47;
  uint64_t v38 = v52;
  sub_261B8E6E8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v38);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(v53, v37, v50);
}

uint64_t sub_261AE2F84@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  long long v4 = a1[3];
  v55[2] = a1[2];
  v55[3] = v4;
  long long v5 = a1[5];
  v55[4] = a1[4];
  v55[5] = v5;
  long long v6 = a1[1];
  v55[0] = *a1;
  v55[1] = v6;
  sub_261AE3F94((uint64_t)a1);
  sub_261AE1EBC();
  sub_261B8ED08();
  sub_261B8ED18();
  sub_261B8D5D8();
  uint64_t v7 = v44;
  long long v32 = v45;
  uint64_t v8 = v46;
  uint64_t v9 = v47;
  sub_261AE550C((uint64_t)a1);
  uint64_t v10 = sub_261B8D6A8();
  char v11 = sub_261B8DFA8();
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = a1[3];
  uint64_t v12[3] = a1[2];
  v12[4] = v13;
  long long v14 = a1[5];
  v12[5] = a1[4];
  v12[6] = v14;
  long long v15 = a1[1];
  v12[1] = *a1;
  void v12[2] = v15;
  sub_261AE3F94((uint64_t)a1);
  uint64_t v48 = sub_261AE59AC;
  uint64_t v49 = v12;
  char v50 = sub_261B8DF98();
  long long v51 = 0u;
  long long v52 = 0u;
  char v53 = 1;
  sub_261B8EC98();
  sub_2619FF6E0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v33, 0.0, 1, INFINITY, 0);
  swift_release();
  long long v16 = v39;
  v54[7] = v40;
  v54[8] = v41;
  long long v17 = v41;
  v54[9] = v42;
  v54[10] = v43;
  long long v18 = v37;
  v54[4] = v37;
  v54[5] = v38;
  v54[6] = v39;
  long long v19 = v33;
  v54[0] = v33;
  v54[1] = v34;
  long long v20 = v35;
  v54[2] = v35;
  v54[3] = v36;
  *(_OWORD *)((char *)&v55[4] + 7) = v37;
  long long v21 = v36;
  *(_OWORD *)((char *)&v55[3] + 7) = v36;
  long long v22 = v40;
  *(_OWORD *)((char *)&v55[7] + 7) = v40;
  *(_OWORD *)((char *)&v55[8] + 7) = v41;
  long long v23 = v42;
  *(_OWORD *)((char *)&v55[9] + 7) = v42;
  *(_OWORD *)((char *)&v55[10] + 7) = v43;
  long long v24 = v38;
  *(_OWORD *)((char *)&v55[5] + 7) = v38;
  *(_OWORD *)((char *)&v55[6] + 7) = v39;
  *(_OWORD *)((char *)v55 + 7) = v33;
  long long v25 = v34;
  *(_OWORD *)((char *)&v55[1] + 7) = v34;
  *(_OWORD *)((char *)&v55[2] + 7) = v35;
  *(_OWORD *)(a2 + 8) = v32;
  *(void *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = v9;
  long long v26 = v55[9];
  *(_OWORD *)(a2 + 177) = v55[8];
  *(_OWORD *)(a2 + 193) = v26;
  *(_OWORD *)(a2 + 209) = v55[10];
  long long v27 = v55[5];
  *(_OWORD *)(a2 + 113) = v55[4];
  *(_OWORD *)(a2 + 129) = v27;
  long long v28 = v55[7];
  *(_OWORD *)(a2 + 145) = v55[6];
  *(_OWORD *)(a2 + 161) = v28;
  long long v29 = v55[1];
  *(_OWORD *)(a2 + 49) = v55[0];
  *(_OWORD *)(a2 + 65) = v29;
  long long v30 = v55[3];
  *(_OWORD *)(a2 + 81) = v55[2];
  *(_OWORD *)(a2 + 97) = v30;
  v56[8] = v17;
  v56[9] = v23;
  v56[10] = v43;
  v56[4] = v18;
  v56[5] = v24;
  v56[6] = v16;
  v56[7] = v22;
  *(void *)a2 = v7;
  *(void *)(a2 + 40) = v10;
  *(unsigned char *)(a2 + 48) = v11;
  *(void *)(a2 + 224) = *(void *)((char *)&v55[10] + 15);
  v56[0] = v19;
  v56[1] = v25;
  v56[2] = v20;
  v56[3] = v21;
  swift_bridgeObjectRetain();
  sub_261A00FF4((uint64_t)v54);
  sub_261A01020((uint64_t)v56);
  return swift_bridgeObjectRelease();
}

uint64_t sub_261AE3280@<X0>(uint64_t a1@<X0>, uint64_t (*a2)()@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = sub_261B8DBE8();
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946EB8);
  return sub_261AE32DC(a2, a1, (void *)(a3 + *(int *)(v6 + 44)));
}

uint64_t sub_261AE32DC@<X0>(uint64_t (*a1)()@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v108 = a2;
  unint64_t v118 = a3;
  uint64_t v4 = sub_261B8D6D8();
  uint64_t v103 = *(void *)(v4 - 8);
  uint64_t v104 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for EffortZoneView();
  MEMORY[0x270FA5388](v105);
  uint64_t v107 = (_OWORD *)((char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946EC0);
  MEMORY[0x270FA5388](v8);
  uint64_t v106 = (uint64_t)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946EC8);
  uint64_t v101 = *(void *)(v10 - 8);
  uint64_t v102 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946ED0);
  uint64_t v120 = *(void *)(v13 - 8);
  uint64_t v121 = v13;
  MEMORY[0x270FA5388](v13);
  char v100 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946ED8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v128 = (uint64_t)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  long long v19 = (char *)&v99 - v18;
  if (qword_26A942EA8 != -1) {
    swift_once();
  }
  uint64_t v109 = v8;
  uint64_t v110 = v12;
  uint64_t v111 = v6;
  unint64_t v119 = a1;
  uint64_t v129 = v19;
  sub_261B8EC98();
  sub_261B8D4D8();
  *(void *)&long long v117 = v141;
  int v116 = v142;
  uint64_t v115 = v143;
  int v114 = v144;
  uint64_t v112 = v146;
  uint64_t v113 = v145;
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v20 = (id)qword_26B416688;
  uint64_t v21 = sub_261B8AA48();
  uint64_t v23 = v22;

  *(void *)&long long v135 = v21;
  *((void *)&v135 + 1) = v23;
  sub_261A029C4();
  uint64_t v24 = sub_261B8E3D8();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  sub_261B8E108();
  sub_261B8E128();
  sub_261B8E1D8();
  swift_release();
  uint64_t v29 = sub_261B8E368();
  uint64_t v31 = v30;
  char v33 = v32;
  uint64_t v35 = v34;
  swift_release();
  uint64_t v36 = v33 & 1;
  sub_261A02A18(v24, v26, v28);
  swift_bridgeObjectRelease();
  sub_261B8EC98();
  uint64_t v37 = 1;
  sub_261B8D4D8();
  uint64_t v131 = v148;
  uint64_t v130 = v149;
  uint64_t v124 = v150;
  uint64_t v125 = v147;
  uint64_t v122 = v152;
  uint64_t v123 = v151;
  sub_261A001D0(v29, v31, v36);
  swift_bridgeObjectRetain();
  uint64_t v132 = v36;
  uint64_t v133 = v29;
  uint64_t v127 = v31;
  sub_261A02A18(v29, v31, v36);
  uint64_t v126 = v35;
  swift_bridgeObjectRelease();
  long long v38 = v119;
  uint64_t v39 = (uint64_t)v129;
  if ((*((unsigned char *)v119 + 33) & 1) == 0)
  {
    long long v40 = *((_OWORD *)v119 + 3);
    long long v137 = *((_OWORD *)v119 + 2);
    long long v138 = v40;
    long long v41 = *((_OWORD *)v119 + 5);
    long long v139 = *((_OWORD *)v119 + 4);
    long long v140 = v41;
    long long v42 = *((_OWORD *)v119 + 1);
    long long v135 = *(_OWORD *)v119;
    long long v136 = v42;
    uint64_t v43 = sub_261AE2130();
    long long v161 = *(_OWORD *)((char *)v38 + 40);
    long long v156 = *(_OWORD *)((char *)v38 + 40);
    sub_261AE3F94((uint64_t)v38);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DA8);
    sub_261B8EA38();
    long long v44 = v135;
    uint64_t v45 = v136;
    long long v156 = *(_OWORD *)((char *)v38 + 56);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DD0);
    sub_261B8EA38();
    sub_261AE550C((uint64_t)v38);
    long long v46 = v135;
    char v47 = v136;
    uint64_t v48 = (uint64_t)v107;
    *uint64_t v107 = xmmword_261B98F90;
    *(void *)(v48 + 16) = v43;
    *(void *)(v48 + 24) = 0x3FF0000000000000;
    *(void *)(v48 + 32) = &unk_270DA2FC8;
    *(_OWORD *)(v48 + 40) = v44;
    *(void *)(v48 + 56) = v45;
    *(_OWORD *)(v48 + 64) = v46;
    *(unsigned char *)(v48 + 80) = v47;
    uint64_t v49 = (uint64_t *)(v48 + *(int *)(v105 + 44));
    *uint64_t v49 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
    swift_storeEnumTagMultiPayload();
    sub_261B8D528();
    sub_261B8D528();
    sub_261B8EC98();
    sub_261B8D4D8();
    uint64_t v50 = v106;
    sub_261AE59BC(v48, v106);
    uint64_t v51 = v109;
    long long v52 = (_OWORD *)(v50 + *(int *)(v109 + 36));
    long long v53 = v154;
    *long long v52 = v153;
    v52[1] = v53;
    void v52[2] = v155;
    sub_261AE5A20(v48);
    unint64_t v54 = sub_261AE5A7C();
    long long v55 = v110;
    sub_261B8E808();
    sub_2619F8754(v50, &qword_26A946EC0);
    uint64_t v56 = v111;
    sub_261B8D6C8();
    long long v135 = v161;
    uint64_t result = sub_261B8EA18();
    double v58 = round(*(double *)&v156);
    if ((~*(void *)&v58 & 0x7FF0000000000000) == 0)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    if (v58 <= -9.22337204e18)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    if (v58 >= 9.22337204e18)
    {
LABEL_22:
      __break(1u);
      return result;
    }
    *(void *)&long long v156 = (uint64_t)v58;
    *(void *)&long long v135 = v51;
    *((void *)&v135 + 1) = v54;
    swift_getOpaqueTypeConformance2();
    long long v59 = v100;
    uint64_t v60 = v102;
    sub_261B8E608();
    (*(void (**)(char *, uint64_t))(v103 + 8))(v56, v104);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v55, v60);
    (*(void (**)(uint64_t, char *, uint64_t))(v120 + 32))(v39, v59, v121);
    uint64_t v37 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v120 + 56))(v39, v37, 1, v121);
  sub_261B8EC98();
  sub_261B8D4D8();
  long long v61 = (char *)v156;
  uint64_t v62 = BYTE8(v156);
  uint64_t v63 = v157;
  uint64_t v64 = (char *)v158;
  uint64_t v65 = v159;
  uint64_t v66 = v160;
  long long v135 = *(_OWORD *)((char *)v38 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DA8);
  uint64_t result = sub_261B8EA18();
  double v67 = round(*(double *)&v134);
  if ((~*(void *)&v67 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v67 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v67 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v107 = v66;
  uint64_t v108 = v65;
  uint64_t v110 = v61;
  long long v68 = *((_OWORD *)v38 + 3);
  long long v137 = *((_OWORD *)v38 + 2);
  long long v138 = v68;
  long long v69 = *((_OWORD *)v38 + 5);
  long long v139 = *((_OWORD *)v38 + 4);
  long long v140 = v69;
  long long v70 = *((_OWORD *)v38 + 1);
  long long v135 = *(_OWORD *)v38;
  long long v136 = v70;
  uint64_t v105 = sub_261AE23B8();
  uint64_t v120 = v71;
  long long v135 = *(_OWORD *)((char *)v38 + 56);
  sub_261AE3F94((uint64_t)v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DD0);
  sub_261B8EA18();
  LODWORD(v104) = v134;
  long long v134 = *((_OWORD *)v38 + 5);
  sub_261B8EA38();
  sub_261AE550C((uint64_t)v38);
  uint64_t v106 = *((void *)&v135 + 1);
  uint64_t v121 = v135;
  LODWORD(v103) = v136;
  char v72 = *((unsigned char *)v38 + 32);
  uint64_t v111 = v64;
  uint64_t v109 = v63;
  uint64_t v102 = v62;
  if (v72)
  {
    uint64_t v73 = (uint64_t (*)())swift_allocObject();
    long long v74 = *((_OWORD *)v38 + 3);
    *((_OWORD *)v73 + 3) = *((_OWORD *)v38 + 2);
    *((_OWORD *)v73 + 4) = v74;
    long long v75 = *((_OWORD *)v38 + 5);
    *((_OWORD *)v73 + 5) = *((_OWORD *)v38 + 4);
    *((_OWORD *)v73 + 6) = v75;
    long long v76 = *((_OWORD *)v38 + 1);
    *((_OWORD *)v73 + 1) = *(_OWORD *)v38;
    *((_OWORD *)v73 + 2) = v76;
    sub_261AE3F94((uint64_t)v38);
    unint64_t v119 = sub_261AE5BAC;
  }
  else
  {
    unint64_t v119 = 0;
    uint64_t v73 = 0;
  }
  uint64_t v77 = v128;
  sub_2619F86F0(v39, v128, &qword_26A946ED8);
  uint64_t v78 = v118;
  void *v118 = 0;
  *((unsigned char *)v78 + 8) = 1;
  v78[2] = v117;
  *((unsigned char *)v78 + 24) = v116;
  v78[4] = v115;
  *((unsigned char *)v78 + 40) = v114;
  uint64_t v79 = v112;
  v78[6] = v113;
  v78[7] = v79;
  uint64_t v80 = v127;
  v78[8] = v133;
  v78[9] = v80;
  uint64_t v81 = v126;
  v78[10] = v132;
  v78[11] = v81;
  long long v117 = xmmword_261B93F60;
  *((_OWORD *)v78 + 6) = xmmword_261B93F60;
  uint64_t v82 = v124;
  uint64_t v83 = v131;
  v78[14] = v125;
  v78[15] = v83;
  v78[16] = v130;
  v78[17] = v82;
  uint64_t v84 = v122;
  v78[18] = v123;
  v78[19] = v84;
  uint64_t v85 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26A946EF0);
  sub_2619F86F0(v77, (uint64_t)v78 + v85[16], &qword_26A946ED8);
  uint64_t v86 = (char *)v78 + v85[20];
  *(_OWORD *)uint64_t v86 = v117;
  uint64_t v87 = v102;
  *((void *)v86 + 2) = v110;
  *((void *)v86 + 3) = v87;
  uint64_t v88 = v111;
  *((void *)v86 + 4) = v109;
  *((void *)v86 + 5) = v88;
  uint64_t v90 = v106;
  uint64_t v89 = v107;
  *((void *)v86 + 6) = v108;
  *((void *)v86 + 7) = v89;
  v86[64] = 0;
  uint64_t v91 = (char *)v78 + v85[24];
  uint64_t v92 = v105;
  *(void *)uint64_t v91 = (uint64_t)v67;
  *((void *)v91 + 1) = v92;
  uint64_t v93 = v121;
  *((void *)v91 + 2) = v120;
  v91[24] = v104;
  *((void *)v91 + 4) = v93;
  *((void *)v91 + 5) = v90;
  v91[48] = v103;
  uint64_t v94 = (char *)v78 + v85[28];
  *(void *)uint64_t v94 = 0;
  v94[8] = 1;
  uint64_t v95 = (uint64_t (**)())((char *)v78 + v85[32]);
  uint64_t v96 = (uint64_t)v119;
  *uint64_t v95 = v119;
  v95[1] = v73;
  uint64_t v98 = v126;
  uint64_t v97 = v127;
  sub_261A8FDF0(v133, v127, v132, v126);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_261AD5A10(v96);
  sub_2619F8754((uint64_t)v129, &qword_26A946ED8);
  sub_261AD5928(v96);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2619F8754(v128, &qword_26A946ED8);
  return sub_261A8FE34(v133, v97, v132, v98);
}

uint64_t sub_261AE3EFC(uint64_t a1)
{
  return sub_261AE550C(a1);
}

uint64_t sub_261AE3F8C()
{
  return sub_261AE3EFC(v0 + 16);
}

uint64_t sub_261AE3F94(uint64_t a1)
{
  return a1;
}

uint64_t sub_261AE4000(uint64_t a1)
{
  return a1;
}

uint64_t sub_261AE4038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v30 = a2;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DE0);
  MEMORY[0x270FA5388](v29);
  uint64_t v27 = (uint64_t)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DE8);
  uint64_t v4 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8DDB8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DF0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DF8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v25 - v16;
  sub_261B8DD98();
  uint64_t v32 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946E00);
  sub_2619F8AB8(&qword_26A946E08, &qword_26A946E00);
  sub_261B8D408();
  uint64_t v18 = sub_2619F8AB8(&qword_26A946E10, &qword_26A946DF0);
  MEMORY[0x263E4BC90](v11, v8, v18);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946E18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v14, 0, 1, v19);
  uint64_t v33 = v8;
  uint64_t v34 = v18;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  MEMORY[0x263E4BCA0](v14, v19, OpaqueTypeConformance2);
  sub_2619F8754((uint64_t)v14, &qword_26A946DF8);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_261B8DDA8();
  uint64_t v31 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946E20);
  sub_261AE5588();
  sub_261B8D408();
  uint64_t v21 = v27 + *(int *)(v29 + 48);
  sub_2619F86F0((uint64_t)v17, v27, &qword_26A946DF8);
  uint64_t v22 = v21;
  uint64_t v23 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v22, v6, v28);
  sub_261B8DC48();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v23);
  return sub_2619F8754((uint64_t)v17, &qword_26A946DF8);
}

uint64_t sub_261AE44A4@<X0>(uint64_t a1@<X8>)
{
  return sub_261AE4038(*(void *)(v1 + 16), a1);
}

uint64_t sub_261AE44AC(_OWORD *a1)
{
  uint64_t v2 = (_OWORD *)swift_allocObject();
  long long v3 = a1[3];
  v2[3] = a1[2];
  v2[4] = v3;
  long long v4 = a1[5];
  v2[5] = a1[4];
  v2[6] = v4;
  long long v5 = a1[1];
  v2[1] = *a1;
  v2[2] = v5;
  sub_261AE3F94((uint64_t)a1);
  return sub_261B8EA58();
}

uint64_t sub_261AE4564@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = (id)qword_26B416688;
  sub_261B8AA48();

  sub_261A029C4();
  uint64_t v3 = sub_261B8E3D8();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  sub_261B8E898();
  uint64_t v8 = sub_261B8E328();
  uint64_t v10 = v9;
  char v12 = v11;
  uint64_t v14 = v13;
  sub_261A02A18(v3, v5, v7);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v12 & 1;
  *(void *)(a1 + 24) = v14;
  return result;
}

uint64_t sub_261AE4708@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946EB0);
  MEMORY[0x270FA5388](v31);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946E00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946EA8);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946E98);
  MEMORY[0x270FA5388](v30);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v29 - v16;
  uint64_t v18 = (_OWORD *)swift_allocObject();
  long long v19 = a1[3];
  v18[3] = a1[2];
  v18[4] = v19;
  long long v20 = a1[5];
  v18[5] = a1[4];
  v18[6] = v20;
  long long v21 = a1[1];
  v18[1] = *a1;
  void v18[2] = v21;
  sub_261AE3F94((uint64_t)a1);
  sub_261B8EA58();
  uint64_t v22 = sub_261B8E898();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v8, v5);
  *(void *)&v12[*(int *)(v10 + 44)] = v22;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v33 = *(_OWORD *)((char *)a1 + 40);
  sub_261AE3F94((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DA8);
  uint64_t result = sub_261B8EA18();
  double v24 = round(v34);
  if ((~*(void *)&v24 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v24 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if ((uint64_t)v24)
  {
    sub_261AE550C((uint64_t)a1);
    char v25 = 0;
  }
  else
  {
    long long v33 = *(_OWORD *)((char *)a1 + 56);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DD0);
    sub_261B8EA18();
    sub_261AE550C((uint64_t)a1);
    char v25 = LOBYTE(v34) ^ 1;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = v25 & 1;
  sub_2619F86F0((uint64_t)v12, (uint64_t)v14, &qword_26A946EA8);
  uint64_t v28 = (uint64_t *)&v14[*(int *)(v30 + 36)];
  *uint64_t v28 = KeyPath;
  v28[1] = (uint64_t)sub_261AE5934;
  v28[2] = v27;
  sub_2619F8754((uint64_t)v12, &qword_26A946EA8);
  sub_261AE593C((uint64_t)v14, (uint64_t)v17);
  sub_2619F86F0((uint64_t)v17, (uint64_t)v4, &qword_26A946E98);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946E38);
  sub_261AE564C(&qword_26A946E30, &qword_26A946E38, (void (*)(void))sub_261AE56F0);
  sub_261AE564C(&qword_26A946E90, &qword_26A946E98, (void (*)(void))sub_261AE5854);
  sub_261B8DD68();
  return sub_2619F8754((uint64_t)v17, &qword_26A946E98);
}

uint64_t sub_261AE4B8C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *(_OWORD *)(a1 + 40);
  long long v10 = *(_OWORD *)(a1 + 40);
  sub_261AE3F94(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DA8);
  uint64_t result = sub_261B8EA18();
  double v6 = round(v11);
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v6 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((uint64_t)v6 <= 0)
  {
    uint64_t v9 = sub_261B8C2D8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
    goto LABEL_11;
  }
  long long v10 = v12;
  uint64_t result = sub_261B8EA18();
  double v7 = round(v11);
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0) {
    goto LABEL_15;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = (uint64_t)v7 - 1;
  if (!__OFSUB__((uint64_t)v7, 1))
  {
    sub_261B8C288();
    uint64_t v8 = sub_261B8C2D8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 0, 1, v8);
LABEL_11:
    sub_261AE550C(a1);
    (*(void (**)(char *))a1)(v4);
    return sub_2619F8754((uint64_t)v4, &qword_26A943910);
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_261AE4D9C@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = (id)qword_26B416688;
  sub_261B8AA48();

  sub_261A029C4();
  uint64_t result = sub_261B8E3D8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

double sub_261AE4EB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_261AE3F94(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DA8);
  sub_261B8EA38();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946DD0);
  sub_261B8EA38();
  sub_261AE550C(a1);
  uint64_t v4 = sub_261B8E0D8();
  sub_261B8E1B8();
  sub_261B8E128();
  uint64_t v5 = sub_261B8E1D8();
  swift_release();
  uint64_t v6 = sub_261B8E048();
  uint64_t v7 = sub_261B8E898();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v10;
  *(unsigned char *)(a2 + 40) = v11;
  double result = 30.0;
  *(_OWORD *)(a2 + 48) = xmmword_261B98FA0;
  *(_OWORD *)(a2 + 64) = xmmword_261B98FB0;
  *(void *)(a2 + 80) = 0x4034000000000000;
  *(void *)(a2 + 88) = v4;
  *(void *)(a2 + 96) = v5;
  *(void *)(a2 + 104) = v6;
  *(void *)(a2 + 112) = v7;
  return result;
}

double sub_261AE4FCC@<D0>(uint64_t a1@<X8>)
{
  return sub_261AE4EB4(*(void *)(v1 + 16), a1);
}

unint64_t sub_261AE4FD4()
{
  unint64_t result = qword_26A946DD8;
  if (!qword_26A946DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946DD8);
  }
  return result;
}

uint64_t sub_261AE5028()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for EffortEntryView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for EffortEntryView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EffortEntryView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for EffortEntryView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for EffortEntryView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EffortEntryView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EffortEntryView()
{
  return &type metadata for EffortEntryView;
}

uint64_t sub_261AE5370()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261AE550C(uint64_t a1)
{
  return a1;
}

uint64_t sub_261AE5578()
{
  return sub_261AE44AC(*(_OWORD **)(v0 + 16));
}

uint64_t sub_261AE5580@<X0>(uint64_t a1@<X8>)
{
  return sub_261AE4708(*(_OWORD **)(v1 + 16), a1);
}

unint64_t sub_261AE5588()
{
  unint64_t result = qword_26A946E28;
  if (!qword_26A946E28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946E20);
    sub_261AE564C(&qword_26A946E30, &qword_26A946E38, (void (*)(void))sub_261AE56F0);
    sub_261AE564C(&qword_26A946E90, &qword_26A946E98, (void (*)(void))sub_261AE5854);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946E28);
  }
  return result;
}

uint64_t sub_261AE564C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_2619F8AB8(&qword_26A946E80, &qword_26A946E88);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261AE56F0()
{
  unint64_t result = qword_26A946E40;
  if (!qword_26A946E40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946E48);
    sub_261AE5790();
    sub_2619F8AB8((unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946E40);
  }
  return result;
}

unint64_t sub_261AE5790()
{
  unint64_t result = qword_26A946E50;
  if (!qword_26A946E50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946E58);
    sub_2619F8AB8(&qword_26A946E60, &qword_26A946E68);
    sub_2619F8AB8(&qword_26A946E70, &qword_26A946E78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946E50);
  }
  return result;
}

unint64_t sub_261AE5854()
{
  unint64_t result = qword_26A946EA0;
  if (!qword_26A946EA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946EA8);
    sub_2619F8AB8(&qword_26A946E08, &qword_26A946E00);
    sub_2619F8AB8((unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946EA0);
  }
  return result;
}

uint64_t sub_261AE5924()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char *sub_261AE5934(unsigned char *a1)
{
  return sub_261A33604(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_261AE593C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946E98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261AE59AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_261AE3280(a1, (uint64_t (*)())(v2 + 16), a2);
}

uint64_t sub_261AE59BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EffortZoneView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261AE5A20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EffortZoneView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_261AE5A7C()
{
  unint64_t result = qword_26A946EE0;
  if (!qword_26A946EE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946EC0);
    sub_261AE5AF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946EE0);
  }
  return result;
}

unint64_t sub_261AE5AF8()
{
  unint64_t result = qword_26A946EE8;
  if (!qword_26A946EE8)
  {
    type metadata accessor for EffortZoneView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946EE8);
  }
  return result;
}

uint64_t objectdestroyTm_3()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 112, 7);
}

uint64_t sub_261AE5BAC()
{
  return sub_261AE4B8C(v0 + 16);
}

uint64_t destroy for EffortListView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for EffortListView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EffortListView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for EffortListView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for EffortListView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EffortListView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EffortListView()
{
  return &type metadata for EffortListView;
}

uint64_t sub_261AE5FA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261AE5FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = **(void **)a1;
  uint64_t v5 = *(void *)(*(void *)a1 + 8);
  char v6 = *(unsigned char *)(*(void *)a1 + 16);
  uint64_t v7 = *(void *)(*(void *)a1 + 24);
  char v8 = *(unsigned char *)(*(void *)a1 + 32);
  char v9 = *(unsigned char *)(*(void *)a1 + 72);
  long long v10 = *(_OWORD *)(*(void *)a1 + 40);
  long long v11 = *(_OWORD *)(*(void *)a1 + 56);
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(unsigned char *)(a2 + 32) = v8;
  *(_OWORD *)(a2 + 40) = v10;
  *(_OWORD *)(a2 + 56) = v11;
  *(unsigned char *)(a2 + 72) = v9;
  long long v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26A946F58);
  sub_261AEAE64(*(void *)(a1 + 8), a2 + v12[12], type metadata accessor for EffortSectionTitle);
  sub_2619F86F0(*(void *)(a1 + 16), a2 + v12[16], &qword_26A946F40);
  sub_2619F86F0(*(void *)(a1 + 24), a2 + v12[20], &qword_26A946F40);
  sub_2619F86F0(*(void *)(a1 + 32), a2 + v12[24], &qword_26A946F40);
  sub_261AEAE64(*(void *)(a1 + 40), a2 + v12[28], type metadata accessor for EffortSectionTitle);
  sub_2619F86F0(*(void *)(a1 + 48), a2 + v12[32], &qword_26A946F40);
  sub_2619F86F0(*(void *)(a1 + 56), a2 + v12[36], &qword_26A946F40);
  sub_2619F86F0(*(void *)(a1 + 64), a2 + v12[40], &qword_26A946F40);
  sub_261AEAE64(*(void *)(a1 + 72), a2 + v12[44], type metadata accessor for EffortSectionTitle);
  sub_2619F86F0(*(void *)(a1 + 80), a2 + v12[48], &qword_26A946F40);
  sub_2619F86F0(*(void *)(a1 + 88), a2 + v12[52], &qword_26A946F40);
  sub_261AEAE64(*(void *)(a1 + 96), a2 + v12[56], type metadata accessor for EffortSectionTitle);
  sub_2619F86F0(*(void *)(a1 + 104), a2 + v12[60], &qword_26A946F40);
  sub_2619F86F0(*(void *)(a1 + 112), a2 + v12[64], &qword_26A946F40);
  sub_2619F86F0(*(void *)(a1 + 120), a2 + v12[68], &qword_26A946F38);
  sub_2619F86F0(*(void *)(a1 + 128), a2 + v12[72], &qword_26A946F40);
  uint64_t v13 = a2 + v12[76];
  uint64_t v14 = *(void *)(a1 + 136);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  sub_261A001D0(v4, v5, v6);
  return swift_bridgeObjectRetain();
}

uint64_t sub_261AE621C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946EF8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = v1;
  sub_261B8DF88();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946F00);
  sub_261AE8958();
  sub_261B8D378();
  uint64_t v10 = sub_261B8EC98();
  uint64_t v12 = v11;
  id v13 = objc_msgSend(self, sel_appleEffortScoreUnit);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v1;
  *(void *)&v26[16] = *(void *)(v1 + 16);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946A70);
  MEMORY[0x263E4CA00](&v25, v14);
  id v15 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v13, v25);

  sub_261B8C2B8();
  _s9WorkoutUI12EffortColorsV8gradient8exertion05SwiftB08GradientV0A4Core18AppleExertionScaleOSg_tFZ_0((uint64_t)v5);
  sub_2619F8754((uint64_t)v5, &qword_26A943910);
  sub_261B8ED08();
  sub_261B8ED18();
  sub_261B8D5D8();
  uint64_t v16 = *(void *)v26;
  long long v23 = *(_OWORD *)&v26[8];
  uint64_t v17 = v27;
  uint64_t v18 = v28;
  uint64_t v19 = sub_261B8D6A8();
  char v20 = sub_261B8DFA8();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(a1, v9, v6);
  uint64_t v21 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A946F20) + 36);
  *(void *)uint64_t v21 = v16;
  *(_OWORD *)(v21 + 8) = v23;
  *(void *)(v21 + 24) = v17;
  *(void *)(v21 + 32) = v18;
  *(void *)(v21 + 40) = v19;
  *(unsigned char *)(v21 + 48) = v20;
  *(void *)(v21 + 56) = v10;
  *(void *)(v21 + 64) = v12;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_261AE64E8@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946F18);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_261B8DBF8();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946F28);
  sub_261AE65FC(a1, (uint64_t)&v6[*(int *)(v7 + 44)]);
  LOBYTE(a1) = sub_261B8DF98();
  sub_261B8D358();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  sub_2619F86F0((uint64_t)v6, a2, &qword_26A946F18);
  uint64_t v16 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A946F00) + 36);
  *(unsigned char *)uint64_t v16 = (_BYTE)a1;
  *(void *)(v16 + 8) = v9;
  *(void *)(v16 + 16) = v11;
  *(void *)(v16 + 24) = v13;
  *(void *)(v16 + 32) = v15;
  *(unsigned char *)(v16 + 40) = 0;
  return sub_2619F8754((uint64_t)v6, &qword_26A946F18);
}

uint64_t sub_261AE65FC@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v462 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946F30);
  uint64_t v463 = *(void *)(v3 - 8);
  uint64_t v464 = v3;
  MEMORY[0x270FA5388](v3);
  v483 = &v451[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  v474 = &v451[-v6];
  uint64_t v7 = sub_261B8EBB8();
  uint64_t v460 = *(void *)(v7 - 8);
  uint64_t v461 = v7;
  MEMORY[0x270FA5388](v7);
  v459 = &v451[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v458 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946F38);
  MEMORY[0x270FA5388](v458);
  v496 = &v451[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  v471 = &v451[-v11];
  uint64_t v453 = type metadata accessor for EffortButton(0);
  MEMORY[0x270FA5388](v453);
  uint64_t v13 = &v451[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v511 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946F40);
  MEMORY[0x270FA5388](v511);
  v480 = &v451[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  v482 = &v451[-v16];
  MEMORY[0x270FA5388](v17);
  v478 = &v451[-v18];
  MEMORY[0x270FA5388](v19);
  v481 = &v451[-v20];
  MEMORY[0x270FA5388](v21);
  v477 = &v451[-v22];
  MEMORY[0x270FA5388](v23);
  v479 = &v451[-v24];
  MEMORY[0x270FA5388](v25);
  v476 = &v451[-v26];
  MEMORY[0x270FA5388](v27);
  v473 = &v451[-v28];
  MEMORY[0x270FA5388](v29);
  v475 = &v451[-v30];
  MEMORY[0x270FA5388](v31);
  v472 = &v451[-v32];
  MEMORY[0x270FA5388](v33);
  v495 = &v451[-v34];
  MEMORY[0x270FA5388](v35);
  v494 = &v451[-v36];
  MEMORY[0x270FA5388](v37);
  v504 = &v451[-v38];
  MEMORY[0x270FA5388](v39);
  v502 = &v451[-v40];
  MEMORY[0x270FA5388](v41);
  v503 = &v451[-v42];
  MEMORY[0x270FA5388](v43);
  v501 = &v451[-v44];
  MEMORY[0x270FA5388](v45);
  v493 = &v451[-v46];
  MEMORY[0x270FA5388](v47);
  v500 = &v451[-v48];
  MEMORY[0x270FA5388](v49);
  v498 = &v451[-v50];
  MEMORY[0x270FA5388](v51);
  v499 = &v451[-v52];
  MEMORY[0x270FA5388](v53);
  v488 = &v451[-v54];
  MEMORY[0x270FA5388](v55);
  v492 = &v451[-v56];
  uint64_t v497 = type metadata accessor for EffortSectionTitle(0);
  MEMORY[0x270FA5388](v497);
  v467 = &v451[-((v57 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v58);
  v468 = &v451[-v59];
  MEMORY[0x270FA5388](v60);
  v469 = &v451[-v61];
  MEMORY[0x270FA5388](v62);
  v470 = &v451[-v63];
  MEMORY[0x270FA5388](v64);
  v489 = &v451[-v65];
  MEMORY[0x270FA5388](v66);
  v490 = &v451[-v67];
  MEMORY[0x270FA5388](v68);
  v491 = &v451[-v69];
  MEMORY[0x270FA5388](v70);
  char v72 = &v451[-v71];
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v73 = (id)qword_26B416688;
  uint64_t v74 = sub_261B8AA48();
  long long v76 = v75;

  v523 = (long long *)v74;
  v524 = (long long *)v76;
  unint64_t v454 = sub_261A029C4();
  uint64_t v77 = sub_261B8E3D8();
  uint64_t v79 = v78;
  char v81 = v80 & 1;
  uint64_t v82 = sub_261B8E368();
  uint64_t v485 = v83;
  uint64_t v486 = v82;
  uint64_t v487 = v84;
  int v484 = v85 & 1;
  sub_261A02A18(v77, v79, v81);
  swift_bridgeObjectRelease();
  int v457 = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v455 = v87;
  uint64_t v456 = v86;
  uint64_t v89 = v88;
  uint64_t v91 = v90;
  LODWORD(v509) = *MEMORY[0x263F87E90];
  uint64_t v92 = v509;
  uint64_t v93 = sub_261B8C2D8();
  uint64_t v510 = *(void *)(v93 - 8);
  uint64_t v94 = v510 + 104;
  v512 = *(void (**)(void, void, void))(v510 + 104);
  v512(v72, v92, v93);
  uint64_t v95 = v94;
  uint64_t v96 = (int *)v497;
  *(void *)&v72[*(int *)(v497 + 20)] = 0x403E000000000000;
  *(void *)&v72[v96[6]] = 0x4010000000000000;
  v466 = v72;
  uint64_t v97 = v96[7];
  sub_261B8E1B8();
  sub_261B8E128();
  uint64_t v98 = sub_261B8E1D8();
  swift_release();
  *(void *)&v72[v97] = v98;
  uint64_t v99 = v96[8];
  *(void *)&v72[v99] = sub_261B8E048();
  uint64_t v100 = v96[9];
  *(void *)&v72[v100] = sub_261B8E898();
  uint64_t v101 = v93;
  uint64_t v513 = v93;
  uint64_t v102 = v512;
  v512(v13, v509, v93);
  uint64_t v508 = v95;
  uint64_t v103 = v510 + 56;
  v505 = *(void (**)(void, void, void, void))(v510 + 56);
  v505(v13, 0, 1, v101);
  uint64_t v510 = v103;
  long long v543 = *a1;
  uint64_t v544 = *((void *)a1 + 2);
  long long v514 = *a1;
  uint64_t v515 = *((void *)a1 + 2);
  uint64_t v507 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946A70);
  sub_261B8EB58();
  uint64_t v104 = v523;
  uint64_t v105 = v524;
  uint64_t v106 = v525;
  long long v541 = *(long long *)((char *)a1 + 24);
  char v542 = *((unsigned char *)a1 + 40);
  long long v514 = *(long long *)((char *)a1 + 24);
  char v107 = *((unsigned char *)a1 + 40);
  v465 = a1;
  LOBYTE(v515) = v107;
  uint64_t v506 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946AE0);
  sub_261B8EB58();
  uint64_t v108 = v523;
  uint64_t v109 = v524;
  uint64_t v110 = (int *)v453;
  *(void *)&v13[*(int *)(v453 + 20)] = 3;
  char v111 = (char)v525;
  uint64_t v112 = (long long **)&v13[v110[6]];
  *uint64_t v112 = v104;
  v112[1] = v105;
  v112[2] = v106;
  uint64_t v113 = &v13[v110[7]];
  *(void *)uint64_t v113 = v108;
  *((void *)v113 + 1) = v109;
  v113[16] = v111;
  uint64_t v114 = v110[8];
  sub_261B8E1B8();
  sub_261B8E148();
  uint64_t v115 = sub_261B8E1D8();
  swift_release();
  *(void *)&v13[v114] = v115;
  uint64_t v116 = v110[9];
  sub_261B8E0D8();
  uint64_t v117 = sub_261B8E0E8();
  swift_release();
  *(void *)&v13[v116] = v117;
  *(void *)&v13[v110[10]] = 0x4049000000000000;
  *(void *)&v13[v110[11]] = 0x402C000000000000;
  LOBYTE(v95) = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v119 = v118;
  uint64_t v121 = v120;
  uint64_t v123 = v122;
  uint64_t v125 = v124;
  uint64_t v126 = v488;
  v509 = type metadata accessor for EffortButton;
  sub_261AEAE64((uint64_t)v13, (uint64_t)v488, type metadata accessor for EffortButton);
  uint64_t v127 = &v126[*(int *)(v511 + 36)];
  unsigned char *v127 = v95;
  *((void *)v127 + 1) = v119;
  *((void *)v127 + 2) = v121;
  *((void *)v127 + 3) = v123;
  *((void *)v127 + 4) = v125;
  v127[40] = 0;
  sub_261AEAECC((uint64_t)v13, type metadata accessor for EffortButton);
  sub_2619FB7EC((uint64_t)v126, (uint64_t)v492, &qword_26A946F40);
  uint64_t v128 = v513;
  v102(v13, *MEMORY[0x263F87E98], v513);
  uint64_t v129 = v505;
  v505(v13, 0, 1, v128);
  long long v514 = v543;
  uint64_t v515 = v544;
  sub_261B8EB58();
  uint64_t v130 = v523;
  uint64_t v131 = v524;
  uint64_t v132 = v525;
  long long v514 = v541;
  LOBYTE(v515) = v542;
  sub_261B8EB58();
  uint64_t v133 = v523;
  long long v134 = v524;
  *(void *)&v13[v110[5]] = 0;
  char v135 = (char)v525;
  long long v136 = (long long **)&v13[v110[6]];
  char *v136 = v130;
  v136[1] = v131;
  v136[2] = v132;
  long long v137 = &v13[v110[7]];
  *(void *)long long v137 = v133;
  *((void *)v137 + 1) = v134;
  v137[16] = v135;
  uint64_t v138 = v110[8];
  sub_261B8E1B8();
  sub_261B8E148();
  uint64_t v139 = sub_261B8E1D8();
  swift_release();
  *(void *)&v13[v138] = v139;
  uint64_t v140 = v110[9];
  sub_261B8E0D8();
  uint64_t v141 = sub_261B8E0E8();
  swift_release();
  *(void *)&v13[v140] = v141;
  *(void *)&v13[v110[10]] = 0x4049000000000000;
  *(void *)&v13[v110[11]] = 0x402C000000000000;
  LOBYTE(v128) = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v143 = v142;
  uint64_t v145 = v144;
  uint64_t v147 = v146;
  uint64_t v149 = v148;
  unsigned __int8 v150 = v499;
  uint64_t v151 = v509;
  sub_261AEAE64((uint64_t)v13, (uint64_t)v499, v509);
  uint64_t v152 = &v150[*(int *)(v511 + 36)];
  unsigned char *v152 = v128;
  *((void *)v152 + 1) = v143;
  *((void *)v152 + 2) = v145;
  *((void *)v152 + 3) = v147;
  *((void *)v152 + 4) = v149;
  v152[40] = 0;
  sub_261AEAECC((uint64_t)v13, v151);
  sub_2619FB7EC((uint64_t)v150, (uint64_t)v126, &qword_26A946F40);
  uint64_t v153 = v513;
  v512(v13, *MEMORY[0x263F87EA0], v513);
  v129(v13, 0, 1, v153);
  long long v514 = v543;
  uint64_t v515 = v544;
  sub_261B8EB58();
  long long v154 = v523;
  long long v155 = v524;
  long long v156 = v525;
  long long v514 = v541;
  LOBYTE(v515) = v542;
  sub_261B8EB58();
  uint64_t v157 = v523;
  unsigned __int8 v158 = v524;
  *(void *)&v13[v110[5]] = 0;
  char v159 = (char)v525;
  v160 = (long long **)&v13[v110[6]];
  _OWORD *v160 = v154;
  v160[1] = v155;
  v160[2] = v156;
  long long v161 = &v13[v110[7]];
  *(void *)long long v161 = v157;
  *((void *)v161 + 1) = v158;
  v161[16] = v159;
  uint64_t v162 = v110[8];
  sub_261B8E1B8();
  sub_261B8E148();
  uint64_t v163 = sub_261B8E1D8();
  swift_release();
  *(void *)&v13[v162] = v163;
  uint64_t v164 = v110[9];
  sub_261B8E0D8();
  uint64_t v165 = sub_261B8E0E8();
  swift_release();
  *(void *)&v13[v164] = v165;
  *(void *)&v13[v110[10]] = 0x4049000000000000;
  *(void *)&v13[v110[11]] = 0x402C000000000000;
  LOBYTE(v153) = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v167 = v166;
  uint64_t v169 = v168;
  uint64_t v171 = v170;
  uint64_t v173 = v172;
  uint64_t v174 = v498;
  uint64_t v175 = v509;
  sub_261AEAE64((uint64_t)v13, (uint64_t)v498, v509);
  uint64_t v176 = &v174[*(int *)(v511 + 36)];
  *uint64_t v176 = v153;
  *((void *)v176 + 1) = v167;
  *((void *)v176 + 2) = v169;
  *((void *)v176 + 3) = v171;
  *((void *)v176 + 4) = v173;
  v176[40] = 0;
  sub_261AEAECC((uint64_t)v13, v175);
  sub_2619FB7EC((uint64_t)v174, (uint64_t)v499, &qword_26A946F40);
  unsigned int v452 = *MEMORY[0x263F87EA8];
  uint64_t v177 = v491;
  uint64_t v178 = v513;
  ((void (*)(unsigned char *))v512)(v491);
  uint64_t v179 = (int *)v497;
  *(void *)&v177[*(int *)(v497 + 20)] = 0x403E000000000000;
  *(void *)&v177[v179[6]] = 0x4010000000000000;
  uint64_t v180 = v179[7];
  sub_261B8E1B8();
  sub_261B8E128();
  uint64_t v181 = sub_261B8E1D8();
  swift_release();
  *(void *)&v177[v180] = v181;
  uint64_t v182 = v179[8];
  *(void *)&v177[v182] = sub_261B8E048();
  uint64_t v183 = v179[9];
  *(void *)&v177[v183] = sub_261B8E898();
  uint64_t v184 = v512;
  v512(v13, v452, v178);
  v185 = v505;
  v505(v13, 0, 1, v178);
  long long v514 = v543;
  uint64_t v515 = v544;
  sub_261B8EB58();
  unint64_t v186 = v523;
  v187 = v524;
  v188 = v525;
  long long v514 = v541;
  LOBYTE(v515) = v542;
  sub_261B8EB58();
  v189 = v523;
  unint64_t v190 = v524;
  *(void *)&v13[v110[5]] = 0;
  char v191 = (char)v525;
  uint64_t v192 = (long long **)&v13[v110[6]];
  *uint64_t v192 = v186;
  v192[1] = v187;
  v192[2] = v188;
  uint64_t v193 = &v13[v110[7]];
  *(void *)uint64_t v193 = v189;
  *((void *)v193 + 1) = v190;
  v193[16] = v191;
  uint64_t v194 = v110[8];
  sub_261B8E1B8();
  sub_261B8E148();
  uint64_t v195 = sub_261B8E1D8();
  swift_release();
  *(void *)&v13[v194] = v195;
  uint64_t v196 = v110[9];
  sub_261B8E0D8();
  uint64_t v197 = sub_261B8E0E8();
  swift_release();
  *(void *)&v13[v196] = v197;
  *(void *)&v13[v110[10]] = 0x4049000000000000;
  *(void *)&v13[v110[11]] = 0x402C000000000000;
  LOBYTE(v178) = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v199 = v198;
  uint64_t v201 = v200;
  uint64_t v203 = v202;
  uint64_t v205 = v204;
  v206 = v500;
  v207 = v509;
  sub_261AEAE64((uint64_t)v13, (uint64_t)v500, v509);
  uint64_t v208 = v511;
  v209 = &v206[*(int *)(v511 + 36)];
  unsigned char *v209 = v178;
  *((void *)v209 + 1) = v199;
  *((void *)v209 + 2) = v201;
  *((void *)v209 + 3) = v203;
  *((void *)v209 + 4) = v205;
  v209[40] = 0;
  sub_261AEAECC((uint64_t)v13, v207);
  sub_2619FB7EC((uint64_t)v206, (uint64_t)v498, &qword_26A946F40);
  uint64_t v210 = v513;
  v184(v13, *MEMORY[0x263F87EB0], v513);
  v185(v13, 0, 1, v210);
  long long v514 = v543;
  uint64_t v515 = v544;
  sub_261B8EB58();
  v211 = v523;
  v212 = v524;
  v213 = v525;
  long long v514 = v541;
  LOBYTE(v515) = v542;
  sub_261B8EB58();
  v214 = v523;
  v215 = v524;
  *(void *)&v13[v110[5]] = 0;
  char v216 = (char)v525;
  v217 = (long long **)&v13[v110[6]];
  *v217 = v211;
  v217[1] = v212;
  v217[2] = v213;
  v218 = &v13[v110[7]];
  *(void *)v218 = v214;
  *((void *)v218 + 1) = v215;
  v218[16] = v216;
  uint64_t v219 = v110[8];
  sub_261B8E1B8();
  sub_261B8E148();
  uint64_t v220 = sub_261B8E1D8();
  swift_release();
  *(void *)&v13[v219] = v220;
  uint64_t v221 = v110[9];
  sub_261B8E0D8();
  uint64_t v222 = sub_261B8E0E8();
  swift_release();
  *(void *)&v13[v221] = v222;
  *(void *)&v13[v110[10]] = 0x4049000000000000;
  *(void *)&v13[v110[11]] = 0x402C000000000000;
  LOBYTE(v210) = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v224 = v223;
  uint64_t v226 = v225;
  uint64_t v228 = v227;
  uint64_t v230 = v229;
  v231 = v493;
  v232 = v509;
  sub_261AEAE64((uint64_t)v13, (uint64_t)v493, v509);
  v233 = &v231[*(int *)(v208 + 36)];
  uint64_t v234 = (uint64_t)v231;
  unsigned char *v233 = v210;
  *((void *)v233 + 1) = v224;
  *((void *)v233 + 2) = v226;
  *((void *)v233 + 3) = v228;
  *((void *)v233 + 4) = v230;
  v233[40] = 0;
  sub_261AEAECC((uint64_t)v13, v232);
  sub_2619FB7EC((uint64_t)v231, (uint64_t)v500, &qword_26A946F40);
  uint64_t v235 = v513;
  v512(v13, *MEMORY[0x263F87EB8], v513);
  v505(v13, 0, 1, v235);
  long long v514 = v543;
  uint64_t v515 = v544;
  sub_261B8EB58();
  v236 = v523;
  v237 = v524;
  v238 = v525;
  long long v514 = v541;
  LOBYTE(v515) = v542;
  sub_261B8EB58();
  v239 = v523;
  v240 = v524;
  *(void *)&v13[v110[5]] = 0;
  char v241 = (char)v525;
  v242 = (long long **)&v13[v110[6]];
  *v242 = v236;
  v242[1] = v237;
  v242[2] = v238;
  v243 = &v13[v110[7]];
  *(void *)v243 = v239;
  *((void *)v243 + 1) = v240;
  v243[16] = v241;
  uint64_t v244 = v110[8];
  sub_261B8E1B8();
  sub_261B8E148();
  uint64_t v245 = sub_261B8E1D8();
  swift_release();
  *(void *)&v13[v244] = v245;
  uint64_t v246 = v110[9];
  sub_261B8E0D8();
  uint64_t v247 = sub_261B8E0E8();
  swift_release();
  *(void *)&v13[v246] = v247;
  *(void *)&v13[v110[10]] = 0x4049000000000000;
  *(void *)&v13[v110[11]] = 0x402C000000000000;
  LOBYTE(v235) = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v249 = v248;
  uint64_t v251 = v250;
  uint64_t v253 = v252;
  uint64_t v255 = v254;
  v256 = v501;
  v257 = v509;
  sub_261AEAE64((uint64_t)v13, (uint64_t)v501, v509);
  v258 = &v256[*(int *)(v511 + 36)];
  unsigned char *v258 = v235;
  *((void *)v258 + 1) = v249;
  *((void *)v258 + 2) = v251;
  *((void *)v258 + 3) = v253;
  *((void *)v258 + 4) = v255;
  v258[40] = 0;
  sub_261AEAECC((uint64_t)v13, v257);
  sub_2619FB7EC((uint64_t)v256, v234, &qword_26A946F40);
  unsigned int v452 = *MEMORY[0x263F87EC0];
  v259 = v490;
  uint64_t v260 = v513;
  ((void (*)(unsigned char *))v512)(v490);
  v261 = (int *)v497;
  *(void *)&v259[*(int *)(v497 + 20)] = 0x403E000000000000;
  *(void *)&v259[v261[6]] = 0x4010000000000000;
  v262 = v259;
  uint64_t v263 = v261[7];
  sub_261B8E1B8();
  sub_261B8E128();
  uint64_t v264 = sub_261B8E1D8();
  swift_release();
  *(void *)&v262[v263] = v264;
  uint64_t v265 = v261[8];
  *(void *)&v262[v265] = sub_261B8E048();
  uint64_t v266 = v261[9];
  *(void *)&v262[v266] = sub_261B8E898();
  v512(v13, v452, v260);
  v267 = v505;
  v505(v13, 0, 1, v260);
  long long v514 = v543;
  uint64_t v515 = v544;
  sub_261B8EB58();
  v268 = v523;
  v269 = v524;
  v270 = v525;
  long long v514 = v541;
  LOBYTE(v515) = v542;
  sub_261B8EB58();
  v271 = v523;
  v272 = v524;
  *(void *)&v13[v110[5]] = 0;
  char v273 = (char)v525;
  v274 = (long long **)&v13[v110[6]];
  *v274 = v268;
  v274[1] = v269;
  v274[2] = v270;
  v275 = &v13[v110[7]];
  *(void *)v275 = v271;
  *((void *)v275 + 1) = v272;
  v275[16] = v273;
  uint64_t v276 = v110[8];
  sub_261B8E1B8();
  sub_261B8E148();
  uint64_t v277 = sub_261B8E1D8();
  swift_release();
  *(void *)&v13[v276] = v277;
  uint64_t v278 = v110[9];
  sub_261B8E0D8();
  uint64_t v279 = sub_261B8E0E8();
  swift_release();
  *(void *)&v13[v278] = v279;
  *(void *)&v13[v110[10]] = 0x4049000000000000;
  *(void *)&v13[v110[11]] = 0x402C000000000000;
  LOBYTE(v260) = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v281 = v280;
  uint64_t v283 = v282;
  uint64_t v285 = v284;
  uint64_t v287 = v286;
  v288 = v503;
  v289 = v509;
  sub_261AEAE64((uint64_t)v13, (uint64_t)v503, v509);
  v290 = &v288[*(int *)(v511 + 36)];
  unsigned char *v290 = v260;
  *((void *)v290 + 1) = v281;
  *((void *)v290 + 2) = v283;
  *((void *)v290 + 3) = v285;
  *((void *)v290 + 4) = v287;
  v290[40] = 0;
  sub_261AEAECC((uint64_t)v13, v289);
  sub_2619FB7EC((uint64_t)v288, (uint64_t)v501, &qword_26A946F40);
  uint64_t v291 = v513;
  v512(v13, *MEMORY[0x263F87EC8], v513);
  v267(v13, 0, 1, v291);
  long long v514 = v543;
  uint64_t v515 = v544;
  sub_261B8EB58();
  v292 = v523;
  v293 = v524;
  v294 = v525;
  long long v514 = v541;
  LOBYTE(v515) = v542;
  sub_261B8EB58();
  v295 = v523;
  v296 = v524;
  *(void *)&v13[v110[5]] = 0;
  char v297 = (char)v525;
  v298 = (long long **)&v13[v110[6]];
  *v298 = v292;
  v298[1] = v293;
  v298[2] = v294;
  v299 = &v13[v110[7]];
  *(void *)v299 = v295;
  *((void *)v299 + 1) = v296;
  v299[16] = v297;
  uint64_t v300 = v110[8];
  sub_261B8E1B8();
  sub_261B8E148();
  uint64_t v301 = sub_261B8E1D8();
  swift_release();
  *(void *)&v13[v300] = v301;
  uint64_t v302 = v110[9];
  sub_261B8E0D8();
  uint64_t v303 = sub_261B8E0E8();
  swift_release();
  *(void *)&v13[v302] = v303;
  *(void *)&v13[v110[10]] = 0x4049000000000000;
  *(void *)&v13[v110[11]] = 0x402C000000000000;
  LOBYTE(v291) = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v305 = v304;
  uint64_t v307 = v306;
  uint64_t v309 = v308;
  uint64_t v311 = v310;
  v312 = v502;
  v313 = v509;
  sub_261AEAE64((uint64_t)v13, (uint64_t)v502, v509);
  v314 = &v312[*(int *)(v511 + 36)];
  unsigned char *v314 = v291;
  *((void *)v314 + 1) = v305;
  *((void *)v314 + 2) = v307;
  *((void *)v314 + 3) = v309;
  *((void *)v314 + 4) = v311;
  v314[40] = 0;
  sub_261AEAECC((uint64_t)v13, v313);
  sub_2619FB7EC((uint64_t)v312, (uint64_t)v503, &qword_26A946F40);
  unsigned int v452 = *MEMORY[0x263F87ED0];
  v315 = v489;
  v316 = v512;
  ((void (*)(unsigned char *))v512)(v489);
  uint64_t v317 = v497;
  *(void *)&v315[*(int *)(v497 + 20)] = 0x403E000000000000;
  *(void *)&v315[*(int *)(v317 + 24)] = 0x4010000000000000;
  v318 = v315;
  uint64_t v319 = *(int *)(v317 + 28);
  uint64_t v320 = v317;
  sub_261B8E1B8();
  sub_261B8E128();
  uint64_t v321 = sub_261B8E1D8();
  swift_release();
  *(void *)&v318[v319] = v321;
  uint64_t v322 = *(int *)(v320 + 32);
  *(void *)&v318[v322] = sub_261B8E048();
  uint64_t v323 = *(int *)(v320 + 36);
  *(void *)&v318[v323] = sub_261B8E898();
  uint64_t v324 = v513;
  v316(v13, v452, v513);
  v325 = v505;
  v505(v13, 0, 1, v324);
  long long v514 = v543;
  uint64_t v515 = v544;
  sub_261B8EB58();
  v326 = v523;
  v327 = v524;
  v328 = v525;
  long long v514 = v541;
  LOBYTE(v515) = v542;
  sub_261B8EB58();
  v329 = v523;
  v330 = v524;
  *(void *)&v13[v110[5]] = 0;
  char v331 = (char)v525;
  v332 = (long long **)&v13[v110[6]];
  *v332 = v326;
  v332[1] = v327;
  v332[2] = v328;
  v333 = &v13[v110[7]];
  *(void *)v333 = v329;
  *((void *)v333 + 1) = v330;
  v333[16] = v331;
  uint64_t v334 = v110[8];
  sub_261B8E1B8();
  sub_261B8E148();
  uint64_t v335 = sub_261B8E1D8();
  swift_release();
  *(void *)&v13[v334] = v335;
  uint64_t v336 = v110[9];
  sub_261B8E0D8();
  uint64_t v337 = sub_261B8E0E8();
  swift_release();
  *(void *)&v13[v336] = v337;
  *(void *)&v13[v110[10]] = 0x4049000000000000;
  *(void *)&v13[v110[11]] = 0x402C000000000000;
  LOBYTE(v291) = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v339 = v338;
  uint64_t v341 = v340;
  uint64_t v343 = v342;
  uint64_t v345 = v344;
  v346 = v504;
  v347 = v509;
  sub_261AEAE64((uint64_t)v13, (uint64_t)v504, v509);
  uint64_t v348 = v511;
  v349 = &v346[*(int *)(v511 + 36)];
  unsigned char *v349 = v291;
  *((void *)v349 + 1) = v339;
  *((void *)v349 + 2) = v341;
  *((void *)v349 + 3) = v343;
  *((void *)v349 + 4) = v345;
  v349[40] = 0;
  sub_261AEAECC((uint64_t)v13, v347);
  sub_2619FB7EC((uint64_t)v346, (uint64_t)v502, &qword_26A946F40);
  uint64_t v350 = v513;
  v512(v13, *MEMORY[0x263F87ED8], v513);
  v325(v13, 0, 1, v350);
  long long v514 = v543;
  uint64_t v515 = v544;
  sub_261B8EB58();
  v351 = v523;
  v352 = v524;
  v353 = v525;
  long long v514 = v541;
  LOBYTE(v515) = v542;
  sub_261B8EB58();
  v354 = v523;
  v355 = v524;
  *(void *)&v13[v110[5]] = 12;
  char v356 = (char)v525;
  v357 = (long long **)&v13[v110[6]];
  *v357 = v351;
  v357[1] = v352;
  v357[2] = v353;
  v358 = &v13[v110[7]];
  *(void *)v358 = v354;
  *((void *)v358 + 1) = v355;
  v358[16] = v356;
  uint64_t v359 = v110[8];
  sub_261B8E1B8();
  sub_261B8E148();
  uint64_t v360 = sub_261B8E1D8();
  swift_release();
  *(void *)&v13[v359] = v360;
  uint64_t v361 = v110[9];
  sub_261B8E0D8();
  uint64_t v362 = sub_261B8E0E8();
  swift_release();
  *(void *)&v13[v361] = v362;
  *(void *)&v13[v110[10]] = 0x4049000000000000;
  *(void *)&v13[v110[11]] = 0x402C000000000000;
  LOBYTE(v350) = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v364 = v363;
  uint64_t v366 = v365;
  uint64_t v368 = v367;
  uint64_t v370 = v369;
  v371 = v494;
  v372 = v509;
  sub_261AEAE64((uint64_t)v13, (uint64_t)v494, v509);
  v373 = &v371[*(int *)(v348 + 36)];
  unsigned char *v373 = v350;
  *((void *)v373 + 1) = v364;
  *((void *)v373 + 2) = v366;
  *((void *)v373 + 3) = v368;
  *((void *)v373 + 4) = v370;
  v373[40] = 0;
  sub_261AEAECC((uint64_t)v13, v372);
  sub_2619FB7EC((uint64_t)v371, (uint64_t)v504, &qword_26A946F40);
  v374 = v459;
  sub_261B8EBA8();
  LOBYTE(v350) = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v376 = v375;
  uint64_t v378 = v377;
  uint64_t v380 = v379;
  uint64_t v382 = v381;
  uint64_t v384 = v460;
  uint64_t v383 = v461;
  v385 = v496;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v460 + 16))(v496, v374, v461);
  v386 = &v385[*(int *)(v458 + 36)];
  unsigned char *v386 = v350;
  *((void *)v386 + 1) = v376;
  *((void *)v386 + 2) = v378;
  *((void *)v386 + 3) = v380;
  *((void *)v386 + 4) = v382;
  v386[40] = 0;
  (*(void (**)(unsigned char *, uint64_t))(v384 + 8))(v374, v383);
  sub_2619FB7EC((uint64_t)v385, (uint64_t)v471, &qword_26A946F38);
  v505(v13, 1, 1, v513);
  long long v514 = v543;
  uint64_t v515 = v544;
  sub_261B8EB58();
  v387 = v523;
  v388 = v524;
  v389 = v525;
  long long v514 = v541;
  LOBYTE(v515) = v542;
  sub_261B8EB58();
  v390 = v523;
  v391 = v524;
  *(void *)&v13[v110[5]] = 15;
  char v392 = (char)v525;
  v393 = (long long **)&v13[v110[6]];
  *v393 = v387;
  v393[1] = v388;
  v393[2] = v389;
  v394 = &v13[v110[7]];
  *(void *)v394 = v390;
  *((void *)v394 + 1) = v391;
  v394[16] = v392;
  uint64_t v395 = v110[8];
  sub_261B8E1B8();
  sub_261B8E148();
  uint64_t v396 = sub_261B8E1D8();
  swift_release();
  *(void *)&v13[v395] = v396;
  uint64_t v397 = v110[9];
  sub_261B8E0D8();
  uint64_t v398 = sub_261B8E0E8();
  swift_release();
  *(void *)&v13[v397] = v398;
  *(void *)&v13[v110[10]] = 0x4049000000000000;
  *(void *)&v13[v110[11]] = 0x402C000000000000;
  LOBYTE(v350) = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v400 = v399;
  uint64_t v402 = v401;
  uint64_t v404 = v403;
  uint64_t v406 = v405;
  v407 = v495;
  sub_261AEAE64((uint64_t)v13, (uint64_t)v495, v372);
  v408 = &v407[*(int *)(v511 + 36)];
  unsigned char *v408 = v350;
  *((void *)v408 + 1) = v400;
  *((void *)v408 + 2) = v402;
  *((void *)v408 + 3) = v404;
  *((void *)v408 + 4) = v406;
  v408[40] = 0;
  sub_261AEAECC((uint64_t)v13, v372);
  sub_2619FB7EC((uint64_t)v407, (uint64_t)v494, &qword_26A946F40);
  id v409 = (id)qword_26B416688;
  uint64_t v410 = sub_261B8AA48();
  v412 = v411;

  v523 = (long long *)v410;
  v524 = (long long *)v412;
  uint64_t v413 = sub_261B8E3D8();
  uint64_t v415 = v414;
  LOBYTE(v407) = v416 & 1;
  sub_261B8E238();
  sub_261B8E148();
  sub_261B8E1D8();
  swift_release();
  uint64_t v417 = sub_261B8E368();
  uint64_t v419 = v418;
  LOBYTE(v388) = v420;
  v422 = v421;
  swift_release();
  sub_261A02A18(v413, v415, (char)v407);
  swift_bridgeObjectRelease();
  LOBYTE(v413) = sub_261B8DFB8();
  sub_261B8D358();
  v523 = (long long *)v417;
  v524 = (long long *)v419;
  LOBYTE(v525) = v388 & 1;
  v526 = v422;
  LOBYTE(v527) = v413;
  v528 = v423;
  v529 = v424;
  v530 = v425;
  v531 = v426;
  LOBYTE(v532) = 0;
  sub_261B8DF98();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946F48);
  sub_261AEADF0();
  sub_261B8E558();
  sub_261A02A18(v417, v419, v388 & 1);
  swift_bridgeObjectRelease();
  *(void *)&long long v514 = v486;
  *((void *)&v514 + 1) = v485;
  LOBYTE(v515) = v484;
  uint64_t v516 = v487;
  char v517 = v457;
  uint64_t v518 = v456;
  uint64_t v519 = v455;
  uint64_t v520 = v89;
  uint64_t v521 = v91;
  char v522 = 0;
  v523 = &v514;
  v427 = v470;
  sub_261AEAE64((uint64_t)v466, (uint64_t)v470, type metadata accessor for EffortSectionTitle);
  v524 = (long long *)v427;
  v428 = v495;
  sub_2619F86F0((uint64_t)v492, (uint64_t)v495, &qword_26A946F40);
  v525 = (long long *)v428;
  v429 = v472;
  sub_2619F86F0((uint64_t)v488, (uint64_t)v472, &qword_26A946F40);
  v526 = v429;
  v430 = v475;
  sub_2619F86F0((uint64_t)v499, (uint64_t)v475, &qword_26A946F40);
  v527 = v430;
  v431 = v469;
  sub_261AEAE64((uint64_t)v491, (uint64_t)v469, type metadata accessor for EffortSectionTitle);
  v528 = v431;
  v432 = v473;
  sub_2619F86F0((uint64_t)v498, (uint64_t)v473, &qword_26A946F40);
  v529 = v432;
  v433 = v476;
  sub_2619F86F0((uint64_t)v500, (uint64_t)v476, &qword_26A946F40);
  v530 = v433;
  v434 = v479;
  sub_2619F86F0((uint64_t)v493, (uint64_t)v479, &qword_26A946F40);
  v531 = v434;
  v435 = v468;
  sub_261AEAE64((uint64_t)v490, (uint64_t)v468, type metadata accessor for EffortSectionTitle);
  v532 = v435;
  v436 = v477;
  sub_2619F86F0((uint64_t)v501, (uint64_t)v477, &qword_26A946F40);
  v533 = v436;
  v437 = v481;
  sub_2619F86F0((uint64_t)v503, (uint64_t)v481, &qword_26A946F40);
  v534 = v437;
  v438 = v467;
  sub_261AEAE64((uint64_t)v489, (uint64_t)v467, type metadata accessor for EffortSectionTitle);
  v535 = v438;
  v439 = v478;
  sub_2619F86F0((uint64_t)v502, (uint64_t)v478, &qword_26A946F40);
  v536 = v439;
  v440 = v482;
  sub_2619F86F0((uint64_t)v504, (uint64_t)v482, &qword_26A946F40);
  v537 = v440;
  v441 = v471;
  v442 = v496;
  sub_2619F86F0((uint64_t)v471, (uint64_t)v496, &qword_26A946F38);
  v538 = v442;
  v443 = v494;
  v444 = v480;
  sub_2619F86F0((uint64_t)v494, (uint64_t)v480, &qword_26A946F40);
  v539 = v444;
  uint64_t v445 = v463;
  uint64_t v446 = v464;
  v447 = v483;
  v448 = v474;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v463 + 16))(v483, v474, v464);
  v540 = v447;
  sub_261AE5FBC((uint64_t)&v523, v462);
  sub_261A001D0(v486, v485, v484);
  v449 = *(void (**)(void, void))(v445 + 8);
  swift_bridgeObjectRetain();
  v449(v448, v446);
  sub_2619F8754((uint64_t)v443, &qword_26A946F40);
  sub_2619F8754((uint64_t)v441, &qword_26A946F38);
  sub_2619F8754((uint64_t)v504, &qword_26A946F40);
  sub_2619F8754((uint64_t)v502, &qword_26A946F40);
  sub_261AEAECC((uint64_t)v489, type metadata accessor for EffortSectionTitle);
  sub_2619F8754((uint64_t)v503, &qword_26A946F40);
  sub_2619F8754((uint64_t)v501, &qword_26A946F40);
  sub_261AEAECC((uint64_t)v490, type metadata accessor for EffortSectionTitle);
  sub_2619F8754((uint64_t)v493, &qword_26A946F40);
  sub_2619F8754((uint64_t)v500, &qword_26A946F40);
  sub_2619F8754((uint64_t)v498, &qword_26A946F40);
  sub_261AEAECC((uint64_t)v491, type metadata accessor for EffortSectionTitle);
  sub_2619F8754((uint64_t)v499, &qword_26A946F40);
  sub_2619F8754((uint64_t)v488, &qword_26A946F40);
  sub_2619F8754((uint64_t)v492, &qword_26A946F40);
  sub_261AEAECC((uint64_t)v466, type metadata accessor for EffortSectionTitle);
  sub_261A02A18(v486, v485, v484);
  swift_bridgeObjectRelease();
  v449(v483, v446);
  sub_2619F8754((uint64_t)v480, &qword_26A946F40);
  sub_2619F8754((uint64_t)v496, &qword_26A946F38);
  sub_2619F8754((uint64_t)v482, &qword_26A946F40);
  sub_2619F8754((uint64_t)v478, &qword_26A946F40);
  sub_261AEAECC((uint64_t)v467, type metadata accessor for EffortSectionTitle);
  sub_2619F8754((uint64_t)v481, &qword_26A946F40);
  sub_2619F8754((uint64_t)v477, &qword_26A946F40);
  sub_261AEAECC((uint64_t)v468, type metadata accessor for EffortSectionTitle);
  sub_2619F8754((uint64_t)v479, &qword_26A946F40);
  sub_2619F8754((uint64_t)v476, &qword_26A946F40);
  sub_2619F8754((uint64_t)v473, &qword_26A946F40);
  sub_261AEAECC((uint64_t)v469, type metadata accessor for EffortSectionTitle);
  sub_2619F8754((uint64_t)v475, &qword_26A946F40);
  sub_2619F8754((uint64_t)v472, &qword_26A946F40);
  sub_2619F8754((uint64_t)v495, &qword_26A946F40);
  sub_261AEAECC((uint64_t)v470, type metadata accessor for EffortSectionTitle);
  sub_261A02A18(v514, *((uint64_t *)&v514 + 1), v515);
  return swift_bridgeObjectRelease();
}

uint64_t sub_261AE88FC@<X0>(uint64_t a1@<X8>)
{
  return sub_261AE621C(a1);
}

uint64_t sub_261AE8950@<X0>(uint64_t a1@<X8>)
{
  return sub_261AE64E8(*(long long **)(v1 + 16), a1);
}

unint64_t sub_261AE8958()
{
  unint64_t result = qword_26A946F08;
  if (!qword_26A946F08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946F00);
    sub_2619F8AB8(&qword_26A946F10, &qword_26A946F18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946F08);
  }
  return result;
}

uint64_t sub_261AE89F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_261B8BE88();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8C278();
  uint64_t v8 = sub_261B8BE68();
  uint64_t v10 = v9;
  uint64_t v56 = *(void (**)(char *, uint64_t))(v5 + 8);
  v56(v7, v4);
  uint64_t v63 = v8;
  uint64_t v64 = v10;
  unint64_t v55 = sub_261A029C4();
  uint64_t v11 = sub_261B8E3D8();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  uint64_t v16 = type metadata accessor for EffortSectionTitle(0);
  uint64_t v17 = sub_261B8E368();
  uint64_t v59 = v18;
  uint64_t v60 = v17;
  uint64_t v61 = v19;
  int v57 = v20 & 1;
  sub_261A02A18(v11, v13, v15);
  swift_bridgeObjectRelease();
  int v58 = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  sub_261B8C278();
  uint64_t v29 = sub_261B8BE58();
  uint64_t v31 = v30;
  v56(v7, v4);
  uint64_t v63 = v29;
  uint64_t v64 = v31;
  uint64_t v32 = sub_261B8E3D8();
  uint64_t v34 = v33;
  LOBYTE(v29) = v35 & 1;
  uint64_t v36 = sub_261B8E368();
  uint64_t v38 = v37;
  uint64_t v56 = v39;
  LOBYTE(v7) = v40 & 1;
  sub_261A02A18(v32, v34, v29);
  swift_bridgeObjectRelease();
  LOBYTE(v32) = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v41 = *(void *)(a1 + *(int *)(v16 + 36));
  char v42 = v57;
  char v62 = v57;
  char v73 = v57;
  char v71 = 0;
  char v69 = (char)v7;
  char v66 = 0;
  *(_DWORD *)(a2 + 17) = v63;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v63 + 3);
  *(_DWORD *)(a2 + 33) = *(_DWORD *)v72;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)&v72[3];
  *(_DWORD *)(a2 + 73) = *(_DWORD *)v70;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v70[3];
  int v43 = *(_DWORD *)v68;
  *(_DWORD *)(a2 + 100) = *(_DWORD *)&v68[3];
  *(_DWORD *)(a2 + 97) = v43;
  int v44 = *(_DWORD *)v67;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v67[3];
  *(_DWORD *)(a2 + 113) = v44;
  LOBYTE(v44) = v66;
  int v45 = *(_DWORD *)v65;
  *(_DWORD *)(a2 + 156) = *(_DWORD *)&v65[3];
  *(_DWORD *)(a2 + 153) = v45;
  uint64_t v47 = v59;
  uint64_t v46 = v60;
  *(void *)a2 = v60;
  *(void *)(a2 + 8) = v47;
  *(unsigned char *)(a2 + 16) = v42;
  *(void *)(a2 + 24) = v61;
  *(unsigned char *)(a2 + 32) = v58;
  *(void *)(a2 + 40) = v22;
  *(void *)(a2 + 48) = v24;
  *(void *)(a2 + 56) = v26;
  *(void *)(a2 + 64) = v28;
  *(unsigned char *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = v36;
  *(void *)(a2 + 88) = v38;
  *(unsigned char *)(a2 + 96) = (_BYTE)v7;
  *(void *)(a2 + 104) = v56;
  *(unsigned char *)(a2 + 112) = v32;
  *(void *)(a2 + 120) = v48;
  *(void *)(a2 + 128) = v49;
  *(void *)(a2 + 136) = v50;
  *(void *)(a2 + 144) = v51;
  *(unsigned char *)(a2 + 152) = v44;
  *(void *)(a2 + 160) = v41;
  uint64_t v52 = v46;
  uint64_t v53 = v47;
  sub_261A001D0(v46, v47, v42);
  swift_bridgeObjectRetain();
  sub_261A001D0(v36, v38, (char)v7);
  swift_bridgeObjectRetain();
  swift_retain_n();
  sub_261A02A18(v36, v38, (char)v7);
  swift_release();
  swift_bridgeObjectRelease();
  sub_261A02A18(v52, v53, v62);
  return swift_bridgeObjectRelease();
}

__n128 sub_261AE8DA0@<Q0>(uint64_t a1@<X8>)
{
  sub_261AE89F8(v1, (uint64_t)v8);
  long long v3 = v8[9];
  *(_OWORD *)(a1 + 128) = v8[8];
  *(_OWORD *)(a1 + 144) = v3;
  *(void *)(a1 + 160) = v9;
  long long v4 = v8[5];
  *(_OWORD *)(a1 + 64) = v8[4];
  *(_OWORD *)(a1 + 80) = v4;
  long long v5 = v8[7];
  *(_OWORD *)(a1 + 96) = v8[6];
  *(_OWORD *)(a1 + 112) = v5;
  long long v6 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v6;
  __n128 result = (__n128)v8[3];
  *(_OWORD *)(a1 + 32) = v8[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t sub_261AE8E18()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for EffortButton(0);
  MEMORY[0x270FA5388](v2);
  long long v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_261B8BE88();
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v37 - v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v37 - v15;
  uint64_t v17 = v0 + *(int *)(v2 + 28);
  uint64_t v18 = *(void *)v17;
  uint64_t v19 = *(void *)(v17 + 8);
  LOBYTE(v17) = *(unsigned char *)(v17 + 16);
  uint64_t v41 = v18;
  uint64_t v42 = v19;
  LOBYTE(v43) = v17;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946AE0);
  MEMORY[0x263E4CA00](&v44, v20);
  if (LOBYTE(v44) != 1)
  {
    uint64_t v39 = v5;
    sub_2619F86F0(v0, (uint64_t)v13, &qword_26A943910);
    uint64_t v24 = sub_261B8C2D8();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    if (v26(v13, 1, v24) == 1)
    {
      sub_2619F8754((uint64_t)v13, &qword_26A943910);
      sub_261AEAE64(v1, (uint64_t)v4, type metadata accessor for EffortButton);
    }
    else
    {
      uint64_t v38 = v26;
      sub_261B8C278();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v25 + 8);
      v37(v13, v24);
      uint64_t v28 = sub_261B8BE78();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v40 + 8);
      v40 += 8;
      v29(v7, v39);
      sub_261AEAE64(v1, (uint64_t)v4, type metadata accessor for EffortButton);
      if (v28 > 0)
      {
        uint64_t v30 = &v4[*(int *)(v2 + 24)];
        uint64_t v31 = *((void *)v30 + 1);
        uint64_t v32 = *((void *)v30 + 2);
        uint64_t v41 = *(void *)v30;
        uint64_t v42 = v31;
        uint64_t v43 = v32;
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946A70);
        MEMORY[0x263E4CA00](&v44, v33);
        double v34 = v44;
        sub_2619F86F0((uint64_t)v4, (uint64_t)v10, &qword_26A943910);
        if (v38(v10, 1, v24) == 1)
        {
          sub_2619F8754((uint64_t)v10, &qword_26A943910);
          double v35 = 0.0;
        }
        else
        {
          sub_261B8C278();
          v37(v10, v24);
          uint64_t v36 = sub_261B8BE78();
          v29(v7, v39);
          double v35 = (double)v36;
        }
        sub_261AEAECC((uint64_t)v4, type metadata accessor for EffortButton);
        return v34 == v35;
      }
    }
    sub_261AEAECC((uint64_t)v4, type metadata accessor for EffortButton);
    return 0;
  }
  sub_2619F86F0(v0, (uint64_t)v16, &qword_26A943910);
  uint64_t v21 = sub_261B8C2D8();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v16, 1, v21) == 1)
  {
    sub_2619F8754((uint64_t)v16, &qword_26A943910);
    return 1;
  }
  else
  {
    sub_261B8C278();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v21);
    uint64_t v27 = sub_261B8BE78();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v5);
    return v27 == 0;
  }
}

uint64_t sub_261AE9314()
{
  return swift_release();
}

uint64_t sub_261AE9380(uint64_t a1)
{
  uint64_t v2 = sub_261B8BE88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8C2D8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2619F86F0(a1, (uint64_t)v8, &qword_26A943910);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2619F8754((uint64_t)v8, &qword_26A943910);
    uint64_t v13 = type metadata accessor for EffortButton(0);
    uint64_t v14 = (uint64_t *)(a1 + *(int *)(v13 + 24));
    uint64_t v15 = v14[1];
    uint64_t v16 = v14[2];
    uint64_t v31 = *v14;
    uint64_t v32 = v15;
    uint64_t v33 = v16;
    double v30 = 0.0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946A70);
    sub_261B8EB48();
    uint64_t v17 = a1 + *(int *)(v13 + 28);
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    LOBYTE(v17) = *(unsigned char *)(v17 + 16);
    uint64_t v31 = v18;
    uint64_t v32 = v19;
    LOBYTE(v33) = v17;
    LOBYTE(v30) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946AE0);
    return sub_261B8EB48();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_261B8C278();
    uint64_t v21 = sub_261B8BE78();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v22 = type metadata accessor for EffortButton(0);
    uint64_t v23 = (uint64_t *)(a1 + *(int *)(v22 + 24));
    uint64_t v24 = v23[1];
    uint64_t v25 = v23[2];
    uint64_t v31 = *v23;
    uint64_t v32 = v24;
    uint64_t v33 = v25;
    double v30 = (double)v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946A70);
    sub_261B8EB48();
    uint64_t v26 = a1 + *(int *)(v22 + 28);
    uint64_t v27 = *(void *)v26;
    uint64_t v28 = *(void *)(v26 + 8);
    LOBYTE(v26) = *(unsigned char *)(v26 + 16);
    uint64_t v31 = v27;
    uint64_t v32 = v28;
    LOBYTE(v33) = v26;
    LOBYTE(v30) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946AE0);
    sub_261B8EB48();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_261AE96C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947000);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946FF0);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943458);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943460);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v43 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946FD0);
  MEMORY[0x270FA5388](v45);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946FC0);
  MEMORY[0x270FA5388](v48);
  uint64_t v44 = (uint64_t)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946FA8);
  MEMORY[0x270FA5388](v46);
  uint64_t v47 = (uint64_t)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = sub_261B8DAD8();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947018);
  sub_261AE9C44(a1, (uint64_t)&v5[*(int *)(v20 + 44)]);
  char v21 = sub_261B8DF98();
  sub_2619F86F0((uint64_t)v5, (uint64_t)v9, &qword_26A947000);
  uint64_t v22 = &v9[*(int *)(v7 + 44)];
  *uint64_t v22 = v21;
  *(_OWORD *)(v22 + 8) = 0u;
  *(_OWORD *)(v22 + 24) = 0u;
  v22[40] = 1;
  sub_2619F8754((uint64_t)v5, &qword_26A947000);
  uint64_t v23 = (int *)type metadata accessor for EffortButton(0);
  uint64_t v24 = *(void *)(a1 + v23[8]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_2619F86F0((uint64_t)v9, (uint64_t)v13, &qword_26A946FF0);
  uint64_t v26 = (uint64_t *)&v13[*(int *)(v11 + 44)];
  *uint64_t v26 = KeyPath;
  v26[1] = v24;
  uint64_t v27 = a1;
  uint64_t v28 = (uint64_t)v43;
  swift_retain();
  sub_2619F8754((uint64_t)v9, &qword_26A946FF0);
  uint64_t v29 = sub_261B8EC98();
  sub_2619FF8A0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v28, 0.0, 1, 0.0, 1, v29, v30);
  sub_2619F8754((uint64_t)v13, &qword_26A943458);
  sub_261B8EC98();
  sub_261B8D778();
  sub_2619F86F0(v28, (uint64_t)v17, &qword_26A943460);
  uint64_t v31 = &v17[*(int *)(v45 + 36)];
  long long v32 = v55;
  *((_OWORD *)v31 + 4) = v54;
  *((_OWORD *)v31 + 5) = v32;
  *((_OWORD *)v31 + 6) = v56;
  long long v33 = v51;
  *(_OWORD *)uint64_t v31 = v50;
  *((_OWORD *)v31 + 1) = v33;
  long long v34 = v53;
  *((_OWORD *)v31 + 2) = v52;
  *((_OWORD *)v31 + 3) = v34;
  sub_2619F8754(v28, &qword_26A943460);
  sub_261B8E898();
  uint64_t v35 = sub_261B8E8A8();
  swift_release();
  LOBYTE(v13) = sub_261B8DFA8();
  uint64_t v36 = v44;
  sub_2619F86F0((uint64_t)v17, v44, &qword_26A946FD0);
  uint64_t v37 = v36 + *(int *)(v48 + 36);
  *(void *)uint64_t v37 = v35;
  *(unsigned char *)(v37 + 8) = (_BYTE)v13;
  sub_2619F8754((uint64_t)v17, &qword_26A946FD0);
  uint64_t v38 = *(void *)(v27 + v23[11]);
  uint64_t v39 = *(void *)(v27 + v23[5]);
  uint64_t v40 = v47;
  sub_2619F86F0(v36, v47, &qword_26A946FC0);
  uint64_t v41 = v40 + *(int *)(v46 + 36);
  *(void *)uint64_t v41 = v38;
  *(void *)(v41 + 8) = v39;
  *(_WORD *)(v41 + 16) = 256;
  sub_2619F8754(v36, &qword_26A946FC0);
  return sub_2619FB7EC(v40, v49, &qword_26A946FA8);
}

uint64_t sub_261AE9C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v3 = sub_261B8BE88();
  uint64_t v63 = *(void *)(v3 - 8);
  uint64_t v64 = v3;
  MEMORY[0x270FA5388](v3);
  char v62 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v67 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9440C8);
  MEMORY[0x270FA5388](v7 - 8);
  char v66 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8E978();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947020);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947028);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947030);
  uint64_t v21 = v20 - 8;
  MEMORY[0x270FA5388](v20);
  uint64_t v68 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v62 - v24;
  MEMORY[0x270FA5388](v26);
  uint64_t v65 = (uint64_t)&v62 - v27;
  sub_261AEA468(a1, (uint64_t)v15);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F1B530], v9);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = (uint64_t *)&v19[*(int *)(v17 + 44)];
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E30);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v29 + *(int *)(v30 + 28), v12, v9);
  *uint64_t v29 = KeyPath;
  sub_2619F86F0((uint64_t)v15, (uint64_t)v19, &qword_26A947020);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_2619F8754((uint64_t)v15, &qword_26A947020);
  uint64_t v31 = (uint64_t)v66;
  sub_261B8DC28();
  uint64_t v32 = sub_261B8DC38();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
  uint64_t v33 = swift_getKeyPath();
  long long v34 = (uint64_t *)&v25[*(int *)(v21 + 44)];
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947038);
  sub_2619F86F0(v31, (uint64_t)v34 + *(int *)(v35 + 28), &qword_26A9440C8);
  uint64_t *v34 = v33;
  sub_2619F86F0((uint64_t)v19, (uint64_t)v25, &qword_26A947028);
  sub_2619F8754(v31, &qword_26A9440C8);
  sub_2619F8754((uint64_t)v19, &qword_26A947028);
  uint64_t v36 = (uint64_t)v67;
  uint64_t v37 = v65;
  sub_2619FB7EC((uint64_t)v25, v65, &qword_26A947030);
  sub_2619F86F0(a1, v36, &qword_26A943910);
  uint64_t v38 = sub_261B8C2D8();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v36, 1, v38) == 1)
  {
    sub_2619F8754(v36, &qword_26A943910);
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v40 = (id)qword_26B416688;
    uint64_t v41 = sub_261B8AA48();
    uint64_t v43 = v42;
  }
  else
  {
    uint64_t v44 = v62;
    sub_261B8C278();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v36, v38);
    uint64_t v41 = sub_261B8BE68();
    uint64_t v43 = v45;
    (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v64);
  }
  LODWORD(v67) = sub_261B8E008();
  char v46 = sub_261AE8E18();
  uint64_t v47 = sub_261B8E918();
  uint64_t v48 = *(void *)(a1 + *(int *)(type metadata accessor for EffortButton(0) + 36));
  uint64_t v49 = swift_getKeyPath();
  uint64_t v70 = v47;
  uint64_t v71 = v49;
  uint64_t v72 = v48;
  BOOL v73 = (v46 & 1) == 0;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946360);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947040);
  sub_261AECBC8((unint64_t *)&qword_26A946368, &qword_26A946360, (unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
  sub_261AECA4C();
  sub_261B8DD68();
  uint64_t v50 = v74;
  uint64_t v51 = v75;
  uint64_t v52 = v76;
  char v53 = v77;
  uint64_t v54 = v68;
  sub_2619F86F0(v37, v68, &qword_26A947030);
  uint64_t v55 = v69;
  sub_2619F86F0(v54, v69, &qword_26A947030);
  long long v56 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26A947058);
  uint64_t v57 = v55 + v56[12];
  *(void *)uint64_t v57 = v41;
  *(void *)(v57 + 8) = v43;
  uint64_t v58 = MEMORY[0x263F8EE78];
  *(unsigned char *)(v57 + 16) = 0;
  *(void *)(v57 + 24) = v58;
  *(unsigned char *)(v57 + 32) = (_BYTE)v67;
  *(_OWORD *)(v57 + 40) = 0u;
  *(_OWORD *)(v57 + 56) = 0u;
  *(unsigned char *)(v57 + 72) = 1;
  uint64_t v59 = v55 + v56[16];
  *(void *)uint64_t v59 = 0;
  *(unsigned char *)(v59 + 8) = 1;
  uint64_t v60 = v55 + v56[20];
  *(void *)uint64_t v60 = v50;
  *(void *)(v60 + 8) = v51;
  *(void *)(v60 + 16) = v52;
  *(unsigned char *)(v60 + 24) = v53;
  sub_261A001D0(v41, v43, 0);
  swift_bridgeObjectRetain();
  sub_261AECB3C();
  sub_2619F8754(v37, &qword_26A947030);
  sub_261AECB84();
  sub_261A02A18(v41, v43, 0);
  swift_bridgeObjectRelease();
  return sub_2619F8754(v54, &qword_26A947030);
}

uint64_t sub_261AEA468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947060);
  MEMORY[0x270FA5388](v45);
  char v46 = (uint64_t *)((char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E30);
  MEMORY[0x270FA5388](v41);
  uint64_t v37 = (uint64_t *)((char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = sub_261B8E978();
  uint64_t v39 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  id v40 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E38);
  MEMORY[0x270FA5388](v44);
  uint64_t v38 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = (uint64_t)&v35 - v8;
  uint64_t v9 = sub_261B8BE88();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v35 - v17;
  sub_2619F86F0(a1, (uint64_t)&v35 - v17, &qword_26A943910);
  uint64_t v19 = sub_261B8C2D8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v21(v18, 1, v19) == 1)
  {
    sub_2619F8754((uint64_t)v18, &qword_26A943910);
LABEL_6:
    uint64_t v25 = sub_261B8E948();
    uint64_t v26 = v39;
    uint64_t v27 = v40;
    uint64_t v28 = v42;
    (*(void (**)(char *, void, uint64_t))(v39 + 104))(v40, *MEMORY[0x263F1B540], v42);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v30 = v37;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))((char *)v37 + *(int *)(v41 + 28), v27, v28);
    *uint64_t v30 = KeyPath;
    uint64_t v31 = v38;
    sub_2619F86F0((uint64_t)v30, (uint64_t)v38 + *(int *)(v44 + 36), &qword_26A944E30);
    uint64_t *v31 = v25;
    swift_retain();
    sub_2619F8754((uint64_t)v30, &qword_26A944E30);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);
    swift_release();
    uint64_t v32 = (uint64_t)v31;
    uint64_t v33 = v43;
    sub_2619FB7EC(v32, v43, &qword_26A944E38);
    sub_2619F86F0(v33, (uint64_t)v46, &qword_26A944E38);
    swift_storeEnumTagMultiPayload();
    sub_261AECBC8((unint64_t *)&qword_26A947068, &qword_26A944E38, &qword_26A947070, &qword_26A944E30);
    sub_261B8DD68();
    return sub_2619F8754(v33, &qword_26A944E38);
  }
  uint64_t v36 = a1;
  sub_261B8C278();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v20 + 8);
  v22(v18, v19);
  uint64_t v23 = sub_261B8BE78();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v10 + 8);
  v35(v12, v9);
  if (!v23) {
    goto LABEL_6;
  }
  uint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_2619F86F0(v36, (uint64_t)v15, &qword_26A943910);
  if (v21(v15, 1, v19) == 1)
  {
    sub_2619F8754((uint64_t)v15, &qword_26A943910);
    uint64_t v24 = 0;
  }
  else
  {
    sub_261B8C278();
    v22(v15, v19);
    uint64_t v24 = sub_261B8BE78();
    v35(v12, v9);
  }
  uint64_t v48 = v24;
  sub_261B8FB78();
  sub_261B8F1C8();
  swift_bridgeObjectRelease();
  sub_261B8F1C8();
  *char v46 = sub_261B8E918();
  swift_storeEnumTagMultiPayload();
  sub_261AECBC8((unint64_t *)&qword_26A947068, &qword_26A944E38, &qword_26A947070, &qword_26A944E30);
  return sub_261B8DD68();
}

uint64_t sub_261AEAAD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  v19[1] = a2;
  v19[0] = sub_261B8D708();
  uint64_t v5 = *(void *)(v19[0] - 8);
  MEMORY[0x270FA5388](v19[0]);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946FA0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261AEAE64(v2, (uint64_t)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for EffortButton);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = swift_allocObject();
  sub_261AEC5C4((uint64_t)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  void v19[4] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946FA8);
  sub_261AEC690();
  sub_261B8EA58();
  sub_261B8D6F8();
  sub_2619F8AB8(&qword_26A947008, &qword_26A946FA0);
  sub_261AEC9DC();
  uint64_t v17 = v19[0];
  sub_261B8E518();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t type metadata accessor for EffortButton(uint64_t a1)
{
  return sub_261A84418(a1, (uint64_t *)&unk_26A946F60);
}

uint64_t type metadata accessor for EffortSectionTitle(uint64_t a1)
{
  return sub_261A84418(a1, (uint64_t *)&unk_26A946F70);
}

unint64_t sub_261AEADF0()
{
  unint64_t result = qword_26A946F50;
  if (!qword_26A946F50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946F48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946F50);
  }
  return result;
}

uint64_t sub_261AEAE64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_261AEAECC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_261AEAF2C(char *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_261B8C2D8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
      memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    uint64_t v11 = a3[6];
    *(void *)&v4[a3[5]] = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v12 = &v4[v11];
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *(void *)uint64_t v12 = *v13;
    *((void *)v12 + 1) = v14;
    *((void *)v12 + 2) = v13[2];
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = &v4[v15];
    uint64_t v18 = (char *)a2 + v15;
    uint64_t v19 = *((void *)v18 + 1);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    v17[16] = v18[16];
    *(void *)&v4[v16] = *(uint64_t *)((char *)a2 + v16);
    uint64_t v20 = a3[10];
    *(void *)&v4[a3[9]] = *(uint64_t *)((char *)a2 + a3[9]);
    *(void *)&v4[v20] = *(uint64_t *)((char *)a2 + v20);
    *(void *)&v4[a3[11]] = *(uint64_t *)((char *)a2 + a3[11]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_261AEB130(uint64_t a1)
{
  uint64_t v2 = sub_261B8C2D8();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

char *sub_261AEB238(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_261B8C2D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  *((void *)v10 + 2) = *((void *)v11 + 2);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  uint64_t v17 = *((void *)v16 + 1);
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = v17;
  v15[16] = v16[16];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v18 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

char *sub_261AEB3F0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_261B8C2D8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  swift_retain();
  swift_release();
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_retain();
  swift_release();
  *((void *)v13 + 2) = *((void *)v14 + 2);
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  swift_retain();
  swift_release();
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_retain();
  swift_release();
  v16[16] = v17[16];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  return a1;
}

char *sub_261AEB654(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_261B8C2D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(_OWORD *)int v10 = *(_OWORD *)v11;
  *((void *)v10 + 2) = *((void *)v11 + 2);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  uint64_t v16 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  return a1;
}

char *sub_261AEB7D8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_261B8C2D8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  swift_release();
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_release();
  *((void *)v13 + 2) = *((void *)v14 + 2);
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  swift_release();
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_release();
  v16[16] = v17[16];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_release();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_release();
  uint64_t v18 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  return a1;
}

uint64_t sub_261AEBA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261AEBA18);
}

uint64_t sub_261AEBA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_261AEBAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261AEBAF4);
}

uint64_t sub_261AEBAF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

void sub_261AEBBB8()
{
  sub_261A11C7C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_261AEBC78(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_261B8C2D8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)v4 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)v4 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v9) = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_261AEBD7C(uint64_t a1)
{
  uint64_t v2 = sub_261B8C2D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_261AEBE08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8C2D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_261AEBEC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8C2D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_261AEBF9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8C2D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_261AEC040(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8C2D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_release();
  return a1;
}

uint64_t sub_261AEC100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261AEC114);
}

uint64_t sub_261AEC114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8C2D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_261AEC1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261AEC1E8);
}

uint64_t sub_261AEC1E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_261B8C2D8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_261AEC2A4()
{
  uint64_t result = sub_261B8C2D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_261AEC354()
{
  unint64_t result = qword_26A946F80;
  if (!qword_26A946F80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946F20);
    sub_2619F8AB8(&qword_26A946F88, &qword_26A946EF8);
    sub_2619F8AB8(&qword_26A946F90, &qword_26A946F98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946F80);
  }
  return result;
}

uint64_t sub_261AEC418()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261AEC434()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261AEC450()
{
  uint64_t v1 = *(void *)(type metadata accessor for EffortButton(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_261B8C2D8();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_261AEC5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EffortButton(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261AEC628()
{
  type metadata accessor for EffortButton(0);
  return sub_261AE9314();
}

uint64_t sub_261AEC688@<X0>(uint64_t a1@<X8>)
{
  return sub_261AE96C0(*(void *)(v1 + 16), a1);
}

unint64_t sub_261AEC690()
{
  unint64_t result = qword_26A946FB0;
  if (!qword_26A946FB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946FA8);
    sub_261AEC730();
    sub_2619F8AB8(&qword_26A944368, &qword_26A944370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946FB0);
  }
  return result;
}

unint64_t sub_261AEC730()
{
  unint64_t result = qword_26A946FB8;
  if (!qword_26A946FB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946FC0);
    sub_261AEC7F4(&qword_26A946FC8, &qword_26A946FD0, (void (*)(void))sub_261AEC874);
    sub_2619F8AB8((unint64_t *)&qword_26A944358, &qword_26A944360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946FB8);
  }
  return result;
}

uint64_t sub_261AEC7F4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261AEC874()
{
  return sub_261AEC7F4(&qword_26A946FD8, &qword_26A943460, (void (*)(void))sub_261AEC89C);
}

unint64_t sub_261AEC89C()
{
  unint64_t result = qword_26A946FE0;
  if (!qword_26A946FE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943458);
    sub_261AEC93C();
    sub_2619F8AB8((unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946FE0);
  }
  return result;
}

unint64_t sub_261AEC93C()
{
  unint64_t result = qword_26A946FE8;
  if (!qword_26A946FE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946FF0);
    sub_2619F8AB8(&qword_26A946FF8, &qword_26A947000);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946FE8);
  }
  return result;
}

unint64_t sub_261AEC9DC()
{
  unint64_t result = qword_26A947010;
  if (!qword_26A947010)
  {
    sub_261B8D708();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947010);
  }
  return result;
}

unint64_t sub_261AECA4C()
{
  unint64_t result = qword_26A947048;
  if (!qword_26A947048)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947040);
    sub_261AECBC8((unint64_t *)&qword_26A946368, &qword_26A946360, (unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    sub_261AECAE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947048);
  }
  return result;
}

unint64_t sub_261AECAE8()
{
  unint64_t result = qword_26A947050;
  if (!qword_26A947050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947050);
  }
  return result;
}

uint64_t sub_261AECB3C()
{
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_261AECB84()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_261AECBC8(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_2619F8AB8(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261AECC64()
{
  return sub_261AE9380(*(void *)(v0 + 16));
}

uint64_t sub_261AECC80()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_261AECD24()
{
  unint64_t result = qword_26A947078;
  if (!qword_26A947078)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947080);
    sub_2619F8AB8(&qword_26A947088, qword_26A947090);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947078);
  }
  return result;
}

uint64_t TimelineSchedule.paused(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = a1;
  uint64_t v7 = *(void *)(a2 - 8);
  double v8 = MEMORY[0x270FA5388](a1);
  unint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, v3, a2, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v10, a2);
  uint64_t result = type metadata accessor for PausableTimelineSchedule();
  *(unsigned char *)(a3 + *(int *)(result + 36)) = v5;
  return result;
}

uint64_t sub_261AECEC4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_261B8F6D8();
  v7.n128_f64[0] = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v12 - v8;
  if (*(unsigned char *)(v2 + *(int *)(a1 + 36)) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(AssociatedTypeWitness - 8) + 56))(v9, 1, 1, AssociatedTypeWitness, v7);
  }
  else
  {
    sub_261B8D758();
    (*(void (**)(char *, void, uint64_t, uint64_t, __n128))(*(void *)(AssociatedTypeWitness - 8) + 56))(v9, 0, 1, AssociatedTypeWitness, v10);
  }
  return sub_261AED01C((uint64_t)v9, a2);
}

uint64_t sub_261AED01C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_261B8F6D8();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t sub_261AED0B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v16 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_261B8F6D8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  __n128 v7 = (char *)&v15 - v6;
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_261B8F6D8();
  double v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v15 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v7, v2, v4, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v7, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v13 = 1;
  }
  else
  {
    sub_261B8F278();
    uint64_t v13 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v12, v13, 1, v8);
  return sub_261AED304((uint64_t)v12, v16);
}

uint64_t sub_261AED304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_261B8F6D8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t sub_261AED3F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_261AED0B0(a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t sub_261AED450()
{
  return 2;
}

uint64_t sub_261AED458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261AEDE3C(v2, a1, a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v2, a1);
  return v4;
}

uint64_t sub_261AED4CC()
{
  return sub_261B8F298();
}

uint64_t sub_261AED4F0@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v1, 1, AssociatedTypeWitness))
  {
    uint64_t v4 = sub_261B8ADD8();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
    return v5(a1, 1, 1, v4);
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    return MEMORY[0x270F9E518](AssociatedTypeWitness, AssociatedConformanceWitness);
  }
}

uint64_t sub_261AED664()
{
  type metadata accessor for PausableTimelineSchedule();
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for PausableTimelineSchedule()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_261AED6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_261AED6CC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_261AED764(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 1) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    *((unsigned char *)v4 + v6) = *((unsigned char *)a2 + v6);
  }
  else
  {
    uint64_t v10 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v4;
}

uint64_t sub_261AED838(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_261AED864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 48) + a1) = *(unsigned char *)(*(void *)(v5 + 48) + a2);
  return a1;
}

uint64_t sub_261AED8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 40) + a1) = *(unsigned char *)(*(void *)(v5 + 40) + a2);
  return a1;
}

uint64_t sub_261AED934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 32) + a1) = *(unsigned char *)(*(void *)(v5 + 32) + a2);
  return a1;
}

uint64_t sub_261AED99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 24) + a1) = *(unsigned char *)(*(void *)(v5 + 24) + a2);
  return a1;
}

uint64_t sub_261AEDA04(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_22;
  }
  uint64_t v9 = v6 + 1;
  char v10 = 8 * (v6 + 1);
  if ((v6 + 1) > 3) {
    goto LABEL_7;
  }
  unsigned int v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
  if (HIWORD(v12))
  {
    int v11 = *(_DWORD *)((char *)a1 + v9);
    if (v11) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v12 <= 0xFF)
    {
      if (v12 < 2) {
        goto LABEL_22;
      }
LABEL_7:
      int v11 = *((unsigned __int8 *)a1 + v9);
      if (!*((unsigned char *)a1 + v9)) {
        goto LABEL_22;
      }
LABEL_14:
      int v13 = (v11 - 1) << v10;
      if (v9 > 3) {
        int v13 = 0;
      }
      if (v9)
      {
        if (v9 > 3) {
          LODWORD(v9) = 4;
        }
        switch((int)v9)
        {
          case 2:
            LODWORD(v9) = *a1;
            break;
          case 3:
            LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v9) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v9) = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v7 + (v9 | v13) + 1;
    }
    int v11 = *(unsigned __int16 *)((char *)a1 + v9);
    if (*(unsigned __int16 *)((char *)a1 + v9)) {
      goto LABEL_14;
    }
  }
LABEL_22:
  if (v5 >= 0xFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unsigned int v15 = *((unsigned __int8 *)a1 + v6);
  if (v15 < 2) {
    return 0;
  }
  return ((v15 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_261AEDB94(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = v9 + 1;
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v9 != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x261AEDDD4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 < 0xFE)
        {
          a1[v9] = a2 + 1;
        }
        else
        {
          uint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return;
  }
}

uint64_t sub_261AEDDFC()
{
  return swift_getWitnessTable();
}

uint64_t sub_261AEDE20()
{
  return swift_getWitnessTable();
}

uint64_t sub_261AEDE40()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_261B8F6D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_261AEDF48(uint64_t *a1, uint64_t *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v6 = *(void *)(v5 + 64);
  }
  else {
    size_t v6 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v6 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  else
  {
    uint64_t v11 = AssociatedTypeWitness;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v6);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_261AEE0EC(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, AssociatedTypeWitness);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, AssociatedTypeWitness);
  }
  return result;
}

void *sub_261AEE220(void *a1, const void *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v6 = *(void *)(v5 + 64);
    }
    else {
      size_t v6 = *(void *)(v5 + 64) + 1;
    }
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_261AEE374(void *a1, void *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  size_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    unsigned int v12 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v11 = v5 + 8;
    v12(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v10 + 1;
  }
  memcpy(a1, a2, v13);
  return a1;
}

void *sub_261AEE538(void *a1, const void *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v6 = *(void *)(v5 + 64);
    }
    else {
      size_t v6 = *(void *)(v5 + 64) + 1;
    }
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_261AEE68C(void *a1, void *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  size_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    unsigned int v12 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v11 = v5 + 8;
    v12(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v10 + 1;
  }
  memcpy(a1, a2, v13);
  return a1;
}

uint64_t sub_261AEE850(unsigned __int16 *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  unsigned int v7 = v6 - 1;
  if (!v6) {
    unsigned int v7 = 0;
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!v6) {
    ++v8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 > v7)
  {
    char v9 = 8 * v8;
    if (v8 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((a2 - v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_23;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v8);
        if (!*((unsigned char *)a1 + v8)) {
          goto LABEL_23;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v8 > 3) {
          int v12 = 0;
        }
        if (v8)
        {
          if (v8 > 3) {
            LODWORD(v8) = 4;
          }
          switch((int)v8)
          {
            case 2:
              LODWORD(v8) = *a1;
              break;
            case 3:
              LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              LODWORD(v8) = *(_DWORD *)a1;
              break;
            default:
              LODWORD(v8) = *(unsigned __int8 *)a1;
              break;
          }
        }
        return v7 + (v8 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_15;
      }
    }
  }
LABEL_23:
  if (v6 < 2) {
    return 0;
  }
  unsigned int v14 = (*(uint64_t (**)(unsigned __int16 *))(v5 + 48))(a1);
  if (v14 >= 2) {
    return v14 - 1;
  }
  else {
    return 0;
  }
}

void sub_261AEEA68(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  int v6 = 0;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  if (a3 <= v9) {
    goto LABEL_12;
  }
  if (v10 <= 3)
  {
    unsigned int v11 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v11))
    {
      int v6 = 4;
      if (v9 >= a2) {
        goto LABEL_20;
      }
      goto LABEL_13;
    }
    if (v11 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v11 > 1;
    }
LABEL_12:
    if (v9 >= a2) {
      goto LABEL_20;
    }
    goto LABEL_13;
  }
  int v6 = 1;
  if (v9 >= a2)
  {
LABEL_20:
    switch(v6)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        goto LABEL_24;
      default:
LABEL_24:
        if (a2)
        {
LABEL_25:
          if (v8 >= 2)
          {
            int v15 = *(void (**)(unsigned char *, void))(v7 + 56);
            v15(a1, a2 + 1);
          }
        }
        break;
    }
    return;
  }
LABEL_13:
  unsigned int v12 = ~v9 + a2;
  if (v10 < 4)
  {
    int v13 = (v12 >> (8 * v10)) + 1;
    if (v10)
    {
      int v14 = v12 & ~(-1 << (8 * v10));
      bzero(a1, v10);
      if (v10 == 3)
      {
        *(_WORD *)a1 = v14;
        a1[2] = BYTE2(v14);
      }
      else if (v10 == 2)
      {
        *(_WORD *)a1 = v14;
      }
      else
      {
        *a1 = v14;
      }
    }
  }
  else
  {
    bzero(a1, v10);
    *(_DWORD *)a1 = v12;
    int v13 = 1;
  }
  switch(v6)
  {
    case 1:
      a1[v10] = v13;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v13;
      break;
    case 3:
LABEL_38:
      __break(1u);
      JUMPOUT(0x261AEED1CLL);
    case 4:
      *(_DWORD *)&a1[v10] = v13;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for PausableTimelineSchedule.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_261AEED5C()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_261B8F6D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_261AEEE08(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v6 = *(void *)(v5 + 64);
  }
  else {
    size_t v6 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v6 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  else
  {
    uint64_t v11 = AssociatedTypeWitness;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v6);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_261AEEF60(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, AssociatedTypeWitness);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, AssociatedTypeWitness);
  }
  return result;
}

void *sub_261AEF034(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v6 = *(void *)(v5 + 64);
    }
    else {
      size_t v6 = *(void *)(v5 + 64) + 1;
    }
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_261AEF134(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  size_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    unsigned int v12 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v11 = v5 + 8;
    v12(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v10 + 1;
  }
  memcpy(a1, a2, v13);
  return a1;
}

void *sub_261AEF2AC(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v6 = *(void *)(v5 + 64);
    }
    else {
      size_t v6 = *(void *)(v5 + 64) + 1;
    }
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_261AEF3AC(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  size_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    unsigned int v12 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v11 = v5 + 8;
    v12(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v10 + 1;
  }
  memcpy(a1, a2, v13);
  return a1;
}

uint64_t sub_261AEF524(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  unsigned int v7 = v6 - 1;
  if (!v6) {
    unsigned int v7 = 0;
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!v6) {
    ++v8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 > v7)
  {
    char v9 = 8 * v8;
    if (v8 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((a2 - v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_23;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v8);
        if (!*((unsigned char *)a1 + v8)) {
          goto LABEL_23;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v8 > 3) {
          int v12 = 0;
        }
        if (v8)
        {
          if (v8 > 3) {
            LODWORD(v8) = 4;
          }
          switch((int)v8)
          {
            case 2:
              LODWORD(v8) = *a1;
              break;
            case 3:
              LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              LODWORD(v8) = *(_DWORD *)a1;
              break;
            default:
              LODWORD(v8) = *(unsigned __int8 *)a1;
              break;
          }
        }
        return v7 + (v8 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_15;
      }
    }
  }
LABEL_23:
  if (v6 < 2) {
    return 0;
  }
  unsigned int v14 = (*(uint64_t (**)(unsigned __int16 *))(v5 + 48))(a1);
  if (v14 >= 2) {
    return v14 - 1;
  }
  else {
    return 0;
  }
}

void sub_261AEF6E0(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  if (a3 <= v9) {
    goto LABEL_12;
  }
  if (v10 <= 3)
  {
    unsigned int v11 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v11))
    {
      int v6 = 4;
      if (v9 >= a2) {
        goto LABEL_20;
      }
      goto LABEL_13;
    }
    if (v11 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v11 > 1;
    }
LABEL_12:
    if (v9 >= a2) {
      goto LABEL_20;
    }
    goto LABEL_13;
  }
  int v6 = 1;
  if (v9 >= a2)
  {
LABEL_20:
    switch(v6)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        goto LABEL_24;
      default:
LABEL_24:
        if (a2)
        {
LABEL_25:
          if (v8 >= 2)
          {
            int v15 = *(void (**)(unsigned char *, void))(v7 + 56);
            v15(a1, a2 + 1);
          }
        }
        break;
    }
    return;
  }
LABEL_13:
  unsigned int v12 = ~v9 + a2;
  if (v10 < 4)
  {
    int v13 = (v12 >> (8 * v10)) + 1;
    if (v10)
    {
      int v14 = v12 & ~(-1 << (8 * v10));
      bzero(a1, v10);
      if (v10 == 3)
      {
        *(_WORD *)a1 = v14;
        a1[2] = BYTE2(v14);
      }
      else if (v10 == 2)
      {
        *(_WORD *)a1 = v14;
      }
      else
      {
        *a1 = v14;
      }
    }
  }
  else
  {
    bzero(a1, v10);
    *(_DWORD *)a1 = v12;
    int v13 = 1;
  }
  switch(v6)
  {
    case 1:
      a1[v10] = v13;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v13;
      break;
    case 3:
LABEL_38:
      __break(1u);
      JUMPOUT(0x261AEF93CLL);
    case 4:
      *(_DWORD *)&a1[v10] = v13;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for PausableTimelineSchedule.Entries()
{
  return __swift_instantiateGenericMetadata();
}

BOOL static WorkoutViewStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t View.workoutViewStyle(_:)()
{
  return swift_release();
}

uint64_t WorkoutViewStyle.hash(into:)()
{
  return sub_261B8FCA8();
}

uint64_t WorkoutViewStyle.hashValue.getter()
{
  return sub_261B8FCE8();
}

uint64_t sub_261AEFA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_261AEFC14();
  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues.workoutViewStyle.getter()
{
  sub_2619FBA90();
  return sub_261B8DA78();
}

uint64_t EnvironmentValues.workoutViewStyle.setter()
{
  return sub_261B8DA88();
}

uint64_t (*EnvironmentValues.workoutViewStyle.modify(void *a1))(uint64_t a1)
{
  *a1 = v1;
  a1[1] = sub_2619FBA90();
  sub_261B8DA78();
  return sub_261AEFBD8;
}

uint64_t sub_261AEFBD8(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_261B8DA88();
}

unint64_t sub_261AEFC14()
{
  unint64_t result = qword_26A947218;
  if (!qword_26A947218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947218);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WorkoutViewStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WorkoutViewStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261AEFDCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutViewStyle()
{
  return &type metadata for WorkoutViewStyle;
}

uint64_t sub_261AEFE04()
{
  return swift_getWitnessTable();
}

unint64_t sub_261AEFE74()
{
  unint64_t result = qword_26A943560;
  if (!qword_26A943560)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943568);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943560);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutViewStyleKey()
{
  return &type metadata for WorkoutViewStyleKey;
}

ValueMetadata *type metadata accessor for AddToWatchButton()
{
  return &type metadata for AddToWatchButton;
}

uint64_t sub_261AEFEF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261AEFF0C()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = swift_allocObject();
  long long v5 = *v0;
  *(_OWORD *)(v2 + 16) = *v0;
  *(void *)(v2 + 32) = v1;
  sub_261A34898();
  id v3 = (id)v5;
  swift_retain();
  return sub_261B8EA58();
}

uint64_t sub_261AEFFD4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_261AF0014()
{
  return (*(uint64_t (**)(void))(v0 + 24))(*(void *)(v0 + 16));
}

ValueMetadata *type metadata accessor for AddToWatchLabel()
{
  return &type metadata for AddToWatchLabel;
}

uint64_t sub_261AF0050()
{
  return sub_2619F8AB8(&qword_26A944760, &qword_26A944740);
}

uint64_t sub_261AF008C()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_261AF00A8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_261B8E1F8();
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v42 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943488);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v41 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8E258();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v38 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v8 = (id)qword_26B416688;
  uint64_t v9 = sub_261B8AA48();
  uint64_t v11 = v10;

  *(void *)&long long v52 = v9;
  *((void *)&v52 + 1) = v11;
  sub_261A029C4();
  uint64_t v12 = sub_261B8E3D8();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v46 = v12;
  uint64_t v47 = v14;
  char v48 = v18;
  uint64_t v49 = v16;
  uint64_t v50 = KeyPath;
  char v51 = 1;
  sub_261B8EC98();
  sub_2619FEB38(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v45, 0.0, 1, 0.0, 1);
  sub_261A02A18(v12, v14, v18);
  swift_release();
  swift_bridgeObjectRelease();
  long long v58 = v45[6];
  long long v59 = v45[7];
  long long v60 = v45[8];
  long long v61 = v45[9];
  long long v54 = v45[2];
  long long v55 = v45[3];
  long long v56 = v45[4];
  long long v57 = v45[5];
  long long v52 = v45[0];
  long long v53 = v45[1];
  uint64_t v21 = v38;
  uint64_t v20 = v39;
  uint64_t v22 = v40;
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, *MEMORY[0x263F1A6C8], v40);
  uint64_t v23 = *MEMORY[0x263F1A608];
  uint64_t v24 = sub_261B8E118();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v41, v23, v24);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v24);
  sub_261B8E158();
  sub_261B8E1A8();
  sub_261A010F8(v26);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
  uint64_t v28 = v42;
  uint64_t v27 = v43;
  uint64_t v29 = v44;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v42, *MEMORY[0x263F1A680], v44);
  uint64_t v30 = sub_261B8E218();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  uint64_t v31 = swift_getKeyPath();
  long long v32 = v59;
  *(_OWORD *)(a1 + 96) = v58;
  *(_OWORD *)(a1 + 112) = v32;
  long long v33 = v61;
  *(_OWORD *)(a1 + 128) = v60;
  *(_OWORD *)(a1 + 144) = v33;
  long long v34 = v55;
  *(_OWORD *)(a1 + 32) = v54;
  *(_OWORD *)(a1 + 48) = v34;
  long long v35 = v57;
  *(_OWORD *)(a1 + 64) = v56;
  *(_OWORD *)(a1 + 80) = v35;
  double result = *(double *)&v52;
  long long v37 = v53;
  *(_OWORD *)a1 = v52;
  *(_OWORD *)(a1 + 16) = v37;
  *(void *)(a1 + 160) = v31;
  *(void *)(a1 + 168) = v30;
  return result;
}

unint64_t FIUIWorkoutActivityType.supportsElevationAscendedInSummary.getter()
{
  uint64_t v1 = (char *)objc_msgSend(v0, sel_effectiveTypeIdentifier);
  return ((unint64_t)(v1 - 31) > 0x24) | (0xFBFFF7FEEuLL >> (v1 - 31)) & 1;
}

id FIUIWorkoutActivityType.supportsDownhillRunsCountInSummary.getter()
{
  return objc_msgSend(v0, sel_isDownhillSnowSport);
}

BOOL sub_261AF05E4(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_effectiveTypeIdentifier);

  return v2 == (id)61 || v2 == (id)67;
}

BOOL FIUIWorkoutActivityType.isDownhillSnowSport.getter()
{
  id v1 = objc_msgSend(v0, sel_effectiveTypeIdentifier);
  return v1 == (id)61 || v1 == (id)67;
}

id ExternalProvider.sourceImage.getter()
{
  uint64_t v0 = sub_261B8BF38();
  unint64_t v2 = v1;
  id v3 = objc_allocWithZone(MEMORY[0x263F827E8]);
  uint64_t v4 = (void *)sub_261B8AC08();
  id v5 = objc_msgSend(v3, sel_initWithData_, v4);
  sub_261A340C4(v0, v2);

  return v5;
}

void ExternalProvider.formattedSyncDate.getter()
{
  uint64_t v0 = sub_261B8ADD8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = self;
  sub_261B8BF28();
  id v5 = (void *)sub_261B8AD48();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v6 = objc_msgSend(v4, sel_stringWithDayNameAndShortMonthFromDate_, v5);

  if (v6)
  {
    sub_261B8F0F8();
  }
  else
  {
    __break(1u);
  }
}

id static UIFont.systemFont(ofSize:weight:design:symbolicTraits:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  id v8 = self;
  id v9 = objc_msgSend(v8, sel_systemFontOfSize_weight_, a3, a4);
  id v10 = objc_msgSend(v9, sel_fontDescriptor);
  id v11 = objc_msgSend(v10, sel_fontDescriptorWithSymbolicTraits_, a2);
  if (v11)
  {
    id v12 = v11;

    id v10 = v12;
  }
  id v13 = objc_msgSend(v10, sel_fontDescriptorWithDesign_, a1);
  if (v13)
  {
    id v14 = v13;

    id v10 = v14;
  }
  id v15 = objc_msgSend(v8, sel_fontWithDescriptor_size_, v10, 0.0);

  return v15;
}

ValueMetadata *type metadata accessor for TrainingLoadWidgetTimelineProvider()
{
  return &type metadata for TrainingLoadWidgetTimelineProvider;
}

uint64_t sub_261AF092C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8F398();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_261B8F388();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_2619F8754(a1, &qword_26B416CD0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_261B8F328();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

int *sub_261AF0AD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_261B8CE88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8C618();
  uint64_t v6 = sub_261B8CE78();
  os_log_type_t v7 = sub_261B8F4D8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_2619F0000, v6, v7, "Requesting a new placeholder for Training Load Widget", v8, 2u);
    MEMORY[0x263E4E970](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_261B8ADA8();
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v9 = (id)qword_26B416688;
  uint64_t v10 = sub_261B8AA48();
  uint64_t v12 = v11;

  id v13 = (id)qword_26B416688;
  uint64_t v14 = sub_261B8AA48();
  uint64_t v16 = v15;

  uint64_t v17 = sub_261B8E858();
  double result = (int *)type metadata accessor for TrainingLoadDayEntry();
  uint64_t v19 = a1 + result[5];
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 1;
  uint64_t v20 = (uint64_t *)(a1 + result[6]);
  *uint64_t v20 = v10;
  v20[1] = v12;
  uint64_t v21 = (uint64_t *)(a1 + result[7]);
  *uint64_t v21 = v14;
  v21[1] = v16;
  *(void *)(a1 + result[8]) = v17;
  return result;
}

uint64_t sub_261AF0D84(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v6 = sub_261B8ADD8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_261B8CE88();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8C618();
  uint64_t v14 = sub_261B8CE78();
  os_log_type_t v15 = sub_261B8F4D8();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = v6;
    uint64_t v17 = a3;
    char v18 = a4;
    uint64_t v19 = v16;
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_2619F0000, v14, v15, "Requesting a new snapshot for Training Load Widget", v16, 2u);
    uint64_t v20 = v19;
    a4 = v18;
    a3 = v17;
    uint64_t v6 = v23;
    MEMORY[0x263E4E970](v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_261B8ADA8();
  sub_261AF0F9C((uint64_t)v9, v24, v25, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_261AF0F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  long long v57 = a5;
  uint64_t v58 = a4;
  uint64_t v55 = a3;
  uint64_t v56 = sub_261B8EFB8();
  uint64_t v54 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v53 = v7;
  char v62 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CD0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v61 = (uint64_t)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_261B8ADD8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  char v51 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  os_log_type_t v15 = (char *)v45 - v14;
  uint64_t v50 = sub_261B8CE88();
  uint64_t v16 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  char v18 = (char *)v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8C618();
  uint64_t v59 = v11;
  uint64_t v60 = v10;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v52 = a1;
  v19(v15, a1, v10);
  uint64_t v20 = sub_261B8CE78();
  os_log_type_t v21 = sub_261B8F4D8();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v49 = a2;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v64 = v46;
    uint64_t v47 = v19;
    *(_DWORD *)uint64_t v23 = 136315138;
    v45[1] = v23 + 4;
    sub_261AF6380((unint64_t *)&qword_26A9465B8, MEMORY[0x263F07490]);
    uint64_t v48 = v12;
    uint64_t v24 = v60;
    uint64_t v25 = sub_261B8FB78();
    uint64_t v63 = sub_261AC9C40(v25, v26, &v64);
    uint64_t v19 = v47;
    sub_261B8F6F8();
    swift_bridgeObjectRelease();
    uint64_t v27 = v24;
    uint64_t v12 = v48;
    (*(void (**)(char *, uint64_t))(v59 + 8))(v15, v27);
    _os_log_impl(&dword_2619F0000, v20, v21, "Generating entry at date: %s", v23, 0xCu);
    uint64_t v28 = v46;
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v28, -1, -1);
    uint64_t v29 = v23;
    a2 = v49;
    MEMORY[0x263E4E970](v29, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v15, v60);
  }

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v50);
  uint64_t v30 = sub_261B8F398();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v61, 1, 1, v30);
  uint64_t v31 = v51;
  uint64_t v32 = v60;
  v19(v51, v52, v60);
  uint64_t v33 = v54;
  uint64_t v34 = v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v62, a2, v56);
  uint64_t v35 = v59;
  unint64_t v36 = (*(unsigned __int8 *)(v59 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v37 = (v12 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = (*(unsigned __int8 *)(v33 + 80) + v37 + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v39 = (char *)swift_allocObject();
  *((void *)v39 + 2) = 0;
  *((void *)v39 + 3) = 0;
  uint64_t v40 = v57;
  *((void *)v39 + 4) = v57;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v39[v36], v31, v32);
  uint64_t v41 = &v39[v37];
  uint64_t v42 = v58;
  *(void *)uint64_t v41 = v55;
  *((void *)v41 + 1) = v42;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v39[v38], v62, v34);
  id v43 = v40;
  swift_retain();
  sub_261AF092C(v61, (uint64_t)&unk_26A947298, (uint64_t)v39);
  return swift_release();
}

uint64_t sub_261AF14F8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v6 = sub_261B8ADD8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_261B8CE88();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8C618();
  uint64_t v14 = sub_261B8CE78();
  os_log_type_t v15 = sub_261B8F4D8();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = v7;
    uint64_t v17 = a1;
    uint64_t v18 = v6;
    uint64_t v19 = a4;
    uint64_t v20 = v16;
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_2619F0000, v14, v15, "Requesting a new timeline for Training Load Widget", v16, 2u);
    os_log_type_t v21 = v20;
    a4 = v19;
    uint64_t v6 = v18;
    a1 = v17;
    uint64_t v7 = v25;
    MEMORY[0x263E4E970](v21, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_261B8ADA8();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v26;
  *(void *)(v22 + 24) = v27;
  swift_retain();
  sub_261AF0F9C((uint64_t)v9, a1, (uint64_t)sub_261AF607C, v22, a4);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_261AF1760(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v21 = a3;
  uint64_t v22 = a2;
  uint64_t v19 = a1;
  uint64_t v3 = sub_261B8ADD8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = sub_261B8EFA8();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9472B0);
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9472B8);
  uint64_t v14 = *(void *)(type metadata accessor for TrainingLoadDayEntry() - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_261B93F70;
  sub_261AF64E0(v19, v16 + v15);
  sub_261B8ADA8();
  sub_261B8AD38();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v6, v3);
  sub_261B8EF98();
  v17(v9, v3);
  sub_261AF6380(qword_26A947228, (void (*)(uint64_t))type metadata accessor for TrainingLoadDayEntry);
  sub_261B8EFC8();
  v22(v13);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v20);
}

uint64_t sub_261AF1A68(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416670);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416648);
  v2[7] = swift_task_alloc();
  uint64_t v4 = sub_261B8A6C8();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  uint64_t v5 = sub_261B8ADD8();
  v2[11] = v5;
  v2[12] = *(void *)(v5 - 8);
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B4166C8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  uint64_t v6 = sub_261B8A6F8();
  v2[16] = v6;
  v2[17] = *(void *)(v6 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v7 = sub_261B8A728();
  v2[19] = v7;
  v2[20] = *(void *)(v7 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  uint64_t v8 = sub_261B8CE88();
  v2[26] = v8;
  v2[27] = *(void *)(v8 - 8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261AF1DF0, 0, 0);
}

uint64_t sub_261AF1DF0()
{
  sub_261B8C618();
  uint64_t v1 = sub_261B8CE78();
  os_log_type_t v2 = sub_261B8F4D8();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_2619F0000, v1, v2, "Requesting new relevances for Training Load Widget", v3, 2u);
    MEMORY[0x263E4E970](v3, -1, -1);
  }
  uint64_t v4 = v0[31];
  uint64_t v5 = v0[26];
  uint64_t v6 = v0[27];
  uint64_t v8 = v0[17];
  uint64_t v7 = v0[18];
  uint64_t v9 = v0[16];

  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[32] = v10;
  v0[33] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v10(v4, v5);
  sub_261B8A6E8();
  sub_261B8A708();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (FIShouldTrackTrainingLoad())
  {
    sub_261B8ADA8();
    uint64_t v11 = (void *)swift_task_alloc();
    v0[34] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_261AF2238;
    uint64_t v12 = v0[15];
    uint64_t v13 = v0[13];
    uint64_t v14 = v0[3];
    return sub_261AF33C4(v12, v13, v14);
  }
  else
  {
    sub_261B8C618();
    uint64_t v16 = sub_261B8CE78();
    os_log_type_t v17 = sub_261B8F4D8();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_2619F0000, v16, v17, "Tracking Training Load is Disabled. Widget is not relevant", v18, 2u);
      MEMORY[0x263E4E970](v18, -1, -1);
    }
    uint64_t v19 = v0[28];
    uint64_t v20 = v0[26];
    uint64_t v21 = v0[22];
    uint64_t v22 = v0[19];
    uint64_t v23 = v0[20];
    uint64_t v25 = v0[25];

    v10(v19, v20);
    __swift_instantiateConcreteTypeFromMangledName(qword_26B4166D0);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_261B93F70;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v21, v25, v22);
    sub_261B8EF28();
    sub_261B8EED8();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v22);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    return v24();
  }
}

uint64_t sub_261AF2238()
{
  os_log_type_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v3 = v2[13];
  uint64_t v4 = v2[12];
  uint64_t v5 = v2[11];
  if (v0)
  {

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_261AF2EE4;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_261AF23FC;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_261AF23FC()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  uint64_t v3 = *(void *)(ViewModel - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, ViewModel);
  uint64_t v4 = *(void *)(v0 + 112);
  sub_261AF5DF8(*(void *)(v0 + 120), v4);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, ViewModel);
  uint64_t v6 = *(void *)(v0 + 112);
  if (v5 == 1)
  {
    sub_2619F8754(v6, &qword_26B4166C8);
LABEL_4:
    sub_261B8C618();
    uint64_t v8 = sub_261B8CE78();
    os_log_type_t v9 = sub_261B8F4D8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_2619F0000, v8, v9, "Insufficient data to display training load. Widget is not relevant", v10, 2u);
      MEMORY[0x263E4E970](v10, -1, -1);
    }
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    uint64_t v12 = *(void *)(v0 + 232);
    uint64_t v13 = *(void *)(v0 + 208);
    uint64_t v14 = *(void *)(v0 + 176);
    uint64_t v15 = *(void *)(v0 + 152);
    uint64_t v16 = *(void *)(v0 + 160);
    uint64_t v33 = *(void *)(v0 + 120);
    uint64_t v32 = *(void *)(v0 + 200);

    v11(v12, v13);
    __swift_instantiateConcreteTypeFromMangledName(qword_26B4166D0);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_261B93F70;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v14, v32, v15);
    sub_261B8EF28();
    sub_261B8EED8();
    sub_2619F8754(v33, &qword_26B4166C8);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v32, v15);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  char v7 = *(unsigned char *)(v6 + *(int *)(ViewModel + 36) + 8);
  sub_261AF6480(v6, type metadata accessor for TrainingLoadViewModel);
  if (v7) {
    goto LABEL_4;
  }
  uint64_t v19 = *(void *)(v0 + 200);
  uint64_t v20 = *(void *)(v0 + 152);
  uint64_t v21 = *(void *)(v0 + 160);
  uint64_t v23 = *(void *)(v0 + 72);
  uint64_t v22 = *(void *)(v0 + 80);
  uint64_t v24 = *(void *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9438A8);
  *(void *)(v0 + 280) = *(void *)(v21 + 72);
  int v25 = *(_DWORD *)(v21 + 80);
  *(_DWORD *)(v0 + 320) = v25;
  unint64_t v26 = (v25 + 32) & ~(unint64_t)v25;
  uint64_t v27 = swift_allocObject();
  *(void *)(v0 + 288) = v27;
  *(_OWORD *)(v27 + 16) = xmmword_261B92AA0;
  uint64_t v28 = *(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 16);
  *(void *)(v0 + 296) = v28;
  *(void *)(v0 + 304) = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v28(v27 + v26, v19, v20);
  sub_261B8A6B8();
  sub_261B8A718();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v29;
  *uint64_t v29 = v0;
  v29[1] = sub_261AF28DC;
  uint64_t v30 = *(void *)(v0 + 56);
  uint64_t v31 = *(void *)(v0 + 24);
  return sub_261AF3D10(v30, v31);
}

uint64_t sub_261AF28DC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_261AF2A04, 0, 0);
}

uint64_t sub_261AF2A04()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    id v43 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32);
    v43(*(void *)(v0 + 192), v3, v1);
    sub_261B8C618();
    uint64_t v19 = sub_261B8CE78();
    os_log_type_t v20 = sub_261B8F4D8();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_2619F0000, v19, v20, "Relevances for Training Load Widget detected a recent workout", v21, 2u);
      MEMORY[0x263E4E970](v21, -1, -1);
    }
    uint64_t v22 = *(void *)(v0 + 288);
    uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 296);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    uint64_t v24 = *(void *)(v0 + 240);
    uint64_t v25 = *(void *)(v0 + 208);
    uint64_t v27 = *(void *)(v0 + 184);
    uint64_t v26 = *(void *)(v0 + 192);
    uint64_t v28 = *(void *)(v0 + 152);

    v23(v24, v25);
    v45(v27, v26, v28);
    unint64_t v30 = *(void *)(v22 + 16);
    unint64_t v29 = *(void *)(v22 + 24);
    uint64_t v4 = *(void *)(v0 + 288);
    if (v30 >= v29 >> 1) {
      uint64_t v4 = sub_261A0B6F4(v29 > 1, v30 + 1, 1, *(void *)(v0 + 288));
    }
    uint64_t v31 = *(unsigned __int8 *)(v0 + 320);
    uint64_t v32 = *(void *)(v0 + 280);
    uint64_t v33 = *(void *)(v0 + 184);
    uint64_t v34 = *(void *)(v0 + 192);
    uint64_t v35 = *(void *)(v0 + 152);
    uint64_t v36 = *(void *)(v0 + 160);
    *(void *)(v4 + 16) = v30 + 1;
    v43(v4 + ((v31 + 32) & ~v31) + v32 * v30, v33, v35);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
    int64_t v5 = *(void *)(v4 + 16);
    if (v5) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_2619F8754(v3, &qword_26B416648);
  uint64_t v4 = *(void *)(v0 + 288);
  int64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    goto LABEL_15;
  }
LABEL_3:
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 40);
  unint64_t v8 = (*(unsigned __int8 *)(v0 + 320) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 320);
  uint64_t v47 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_261ACA374(0, v5, 0);
  uint64_t v9 = 0;
  unint64_t v44 = v4 + v8;
  int64_t v46 = v5;
  uint64_t v10 = v47;
  do
  {
    uint64_t v11 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 296);
    uint64_t v13 = *(void *)(v0 + 168);
    uint64_t v12 = *(void *)(v0 + 176);
    uint64_t v14 = *(void *)(v0 + 152);
    v11(v12, v44 + *(void *)(v0 + 280) * v9, v14);
    v11(v13, v12, v14);
    sub_261B8EF28();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v14);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_261ACA374(0, *(void *)(v10 + 16) + 1, 1);
      uint64_t v10 = v47;
    }
    unint64_t v16 = *(void *)(v10 + 16);
    unint64_t v15 = *(void *)(v10 + 24);
    if (v16 >= v15 >> 1)
    {
      sub_261ACA374(v15 > 1, v16 + 1, 1);
      uint64_t v10 = v47;
    }
    uint64_t v17 = *(void *)(v0 + 48);
    uint64_t v18 = *(void *)(v0 + 32);
    ++v9;
    *(void *)(v10 + 16) = v16 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v10+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v16, v17, v18);
  }
  while (v46 != v9);
  swift_bridgeObjectRelease_n();
LABEL_16:
  uint64_t v37 = *(void *)(v0 + 200);
  uint64_t v38 = *(void *)(v0 + 152);
  uint64_t v39 = *(void *)(v0 + 160);
  uint64_t v40 = *(void *)(v0 + 120);
  sub_261B8EED8();
  sub_2619F8754(v40, &qword_26B4166C8);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
  return v41();
}

uint64_t sub_261AF2EE4()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  uint64_t v3 = *(void *)(ViewModel - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, ViewModel);
  uint64_t v4 = *(void *)(v0 + 112);
  sub_261AF5DF8(*(void *)(v0 + 120), v4);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, ViewModel);
  uint64_t v6 = *(void *)(v0 + 112);
  if (v5 == 1)
  {
    sub_2619F8754(v6, &qword_26B4166C8);
LABEL_4:
    sub_261B8C618();
    unint64_t v8 = sub_261B8CE78();
    os_log_type_t v9 = sub_261B8F4D8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_2619F0000, v8, v9, "Insufficient data to display training load. Widget is not relevant", v10, 2u);
      MEMORY[0x263E4E970](v10, -1, -1);
    }
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    uint64_t v12 = *(void *)(v0 + 232);
    uint64_t v13 = *(void *)(v0 + 208);
    uint64_t v14 = *(void *)(v0 + 176);
    uint64_t v15 = *(void *)(v0 + 152);
    uint64_t v16 = *(void *)(v0 + 160);
    uint64_t v33 = *(void *)(v0 + 120);
    uint64_t v32 = *(void *)(v0 + 200);

    v11(v12, v13);
    __swift_instantiateConcreteTypeFromMangledName(qword_26B4166D0);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_261B93F70;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v14, v32, v15);
    sub_261B8EF28();
    sub_261B8EED8();
    sub_2619F8754(v33, &qword_26B4166C8);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v32, v15);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  char v7 = *(unsigned char *)(v6 + *(int *)(ViewModel + 36) + 8);
  sub_261AF6480(v6, type metadata accessor for TrainingLoadViewModel);
  if (v7) {
    goto LABEL_4;
  }
  uint64_t v19 = *(void *)(v0 + 200);
  uint64_t v20 = *(void *)(v0 + 152);
  uint64_t v21 = *(void *)(v0 + 160);
  uint64_t v23 = *(void *)(v0 + 72);
  uint64_t v22 = *(void *)(v0 + 80);
  uint64_t v24 = *(void *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9438A8);
  *(void *)(v0 + 280) = *(void *)(v21 + 72);
  int v25 = *(_DWORD *)(v21 + 80);
  *(_DWORD *)(v0 + 320) = v25;
  unint64_t v26 = (v25 + 32) & ~(unint64_t)v25;
  uint64_t v27 = swift_allocObject();
  *(void *)(v0 + 288) = v27;
  *(_OWORD *)(v27 + 16) = xmmword_261B92AA0;
  uint64_t v28 = *(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 16);
  *(void *)(v0 + 296) = v28;
  *(void *)(v0 + 304) = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v28(v27 + v26, v19, v20);
  sub_261B8A6B8();
  sub_261B8A718();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  unint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v29;
  *unint64_t v29 = v0;
  v29[1] = sub_261AF28DC;
  uint64_t v30 = *(void *)(v0 + 56);
  uint64_t v31 = *(void *)(v0 + 24);
  return sub_261AF3D10(v30, v31);
}

uint64_t sub_261AF33C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = sub_261B8CBF8();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  uint64_t v5 = sub_261B8CA08();
  v3[8] = v5;
  v3[9] = *(void *)(v5 - 8);
  v3[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
  v3[11] = swift_task_alloc();
  uint64_t v6 = sub_261B8CBB8();
  v3[12] = v6;
  v3[13] = *(void *)(v6 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v7 = sub_261B8AF08();
  v3[15] = v7;
  v3[16] = *(void *)(v7 - 8);
  v3[17] = swift_task_alloc();
  uint64_t v8 = sub_261B8AFC8();
  v3[18] = v8;
  v3[19] = *(void *)(v8 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v9 = sub_261B8C9E8();
  v3[21] = v9;
  v3[22] = *(void *)(v9 - 8);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261AF3694, 0, 0);
}

uint64_t sub_261AF3694()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  v0[25] = type metadata accessor for TrainingLoadViewModelProvider();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x263F07740], v3);
  sub_261B8AF18();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_261B8F378();
  v0[26] = sub_261B8F368();
  uint64_t v5 = sub_261B8F328();
  return MEMORY[0x270FA2498](sub_261AF3794, v5, v4);
}

uint64_t sub_261AF3794()
{
  uint64_t v1 = v0[24];
  uint64_t v3 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[3];
  swift_release();
  static TrainingLoadViewModelProvider.createDayRange(now:days:gregorianCalendar:)(v5, (void (*)(char *, uint64_t, uint64_t))0x1C, v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x270FA2498](sub_261AF3848, 0, 0);
}

uint64_t sub_261AF3848()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 72);
  sub_261B8C9A8();
  sub_261B8C9C8();
  *(_DWORD *)(v0 + 248) = *MEMORY[0x263F42C60];
  uint64_t v3 = *(void (**)(uint64_t))(v2 + 104);
  *(void *)(v0 + 216) = v3;
  *(void *)(v0 + 224) = (v2 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v3(v1);
  sub_261B8CBA8();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v4;
  void *v4 = v0;
  v4[1] = sub_261AF396C;
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 32);
  return MEMORY[0x270F31640](v5, v6);
}

uint64_t sub_261AF396C()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_261AF3C04;
  }
  else {
    uint64_t v2 = sub_261AF3A80;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_261AF3A80()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v14 = *(void *)(v0 + 96);
  uint64_t v15 = *(void *)(v0 + 112);
  uint64_t v6 = *(NSObject **)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 48);
  uint64_t v13 = *(void *)(v0 + 40);
  uint64_t v9 = *(void *)(v0 + 16);
  (*(void (**)(NSObject *, void, void))(v0 + 216))(v6, *(unsigned int *)(v0 + 248), *(void *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  uint64_t v10 = sub_261B8CBC8();
  TrainingLoadViewModel.init(dataType:dayRange:chronologicalTrainingLoadDaySummaries:)(v6, v1, v10, v9);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v13);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v14);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_261AF3C04()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_261AF3D10(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  uint64_t v4 = sub_261B8CE88();
  v2[4] = v4;
  v2[5] = *(void *)(v4 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  uint64_t v5 = sub_261B8ADD8();
  v2[8] = v5;
  v2[9] = *(void *)(v5 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v2[13] = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_261AF3E8C;
  return sub_261AF45C4(a2);
}

uint64_t sub_261AF3E8C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_261AF437C;
  }
  else {
    uint64_t v4 = sub_261AF3FA0;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

unint64_t sub_261AF3FA0()
{
  unint64_t v1 = v0[14];
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    sub_261B8C618();
    uint64_t v23 = sub_261B8CE78();
    os_log_type_t v24 = sub_261B8F4D8();
    if (os_log_type_enabled(v23, v24))
    {
      int v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v25 = 0;
      _os_log_impl(&dword_2619F0000, v23, v24, "No last workout found", v25, 2u);
      MEMORY[0x263E4E970](v25, -1, -1);
    }
    uint64_t v26 = v0[7];
    uint64_t v27 = v0[4];
    uint64_t v28 = v0[5];
    uint64_t v29 = v0[3];

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    uint64_t v20 = sub_261B8A728();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    uint64_t v22 = v29;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_261B8F9D8();
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_13;
  }
LABEL_3:
  unint64_t result = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
    goto LABEL_21;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_21:
    id v4 = (id)MEMORY[0x263E4D7B0](result, v0[14]);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (result >= *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_23:
    __break(1u);
    return result;
  }
  id v4 = *(id *)(v0[14] + 8 * result + 32);
LABEL_8:
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[9];
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v4, sel_endDate);
  sub_261B8AD98();

  sub_261B8AD68();
  double v10 = v9;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v11(v5, v6);
  if (v10 >= 0.0 || v10 < -1800.0)
  {
    uint64_t v19 = v0[3];

    uint64_t v20 = sub_261B8A728();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    uint64_t v22 = v19;
LABEL_16:
    v21(v22, 1, 1, v20);
    goto LABEL_17;
  }
  uint64_t v13 = v0[11];
  uint64_t v12 = v0[12];
  uint64_t v14 = v0[10];
  uint64_t v15 = v0[8];
  uint64_t v31 = v0[3];
  id v16 = objc_msgSend(v4, sel_endDate);
  sub_261B8AD98();

  id v17 = objc_msgSend(v4, (SEL)&selRef_userDistanceUnitForDistanceType_);
  sub_261B8AD98();

  sub_261B8AD38();
  v11(v14, v15);
  sub_261B8A6D8();

  v11(v13, v15);
  v11(v12, v15);
  uint64_t v18 = sub_261B8A728();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v31, 0, 1, v18);
LABEL_17:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
  return v30();
}

uint64_t sub_261AF437C()
{
  unint64_t v1 = (void *)v0[15];
  sub_261B8C618();
  id v2 = v1;
  id v3 = v1;
  id v4 = sub_261B8CE78();
  os_log_type_t v5 = sub_261B8F4B8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[15];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    id v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v10;
    sub_261B8F6F8();
    *id v8 = v10;

    _os_log_impl(&dword_2619F0000, v4, v5, "Getting recent workout relevance for widget failed with %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9465F0);
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v8, -1, -1);
    MEMORY[0x263E4E970](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = (void *)v0[15];
  }
  uint64_t v12 = v0[3];
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  uint64_t v13 = sub_261B8A728();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_261AF45C4(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947260);
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947268);
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  uint64_t v4 = sub_261B8AFB8();
  v1[9] = v4;
  v1[10] = *(void *)(v4 - 8);
  v1[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  v1[12] = swift_task_alloc();
  uint64_t v5 = sub_261B8ADD8();
  v1[13] = v5;
  v1[14] = *(void *)(v5 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  uint64_t v6 = sub_261B8AF08();
  v1[19] = v6;
  v1[20] = *(void *)(v6 - 8);
  v1[21] = swift_task_alloc();
  uint64_t v7 = sub_261B8AFC8();
  v1[22] = v7;
  v1[23] = *(void *)(v7 - 8);
  v1[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261AF48B0, 0, 0);
}

uint64_t sub_261AF48B0()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v5 = v0[14];
  uint64_t v30 = v0[13];
  uint64_t v31 = v0[15];
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[10];
  uint64_t v28 = v0[9];
  uint64_t v29 = v0[12];
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))(v2, *MEMORY[0x263F07740], v4);
  sub_261B8AF18();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v4);
  sub_261B8ADC8();
  sub_261B8AF28();
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v6, *MEMORY[0x263F07870], v28);
  sub_261B8AF88();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v31, v3, v30);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v29, 1, v30);
  uint64_t v9 = v0[16];
  uint64_t v10 = v0[13];
  uint64_t v11 = v0[14];
  uint64_t v12 = v0[12];
  if (v8 == 1)
  {
    (*(void (**)(void, void, void))(v11 + 32))(v0[16], v0[15], v0[13]);
    sub_2619F8754(v12, &qword_26A943B38);
  }
  else
  {
    (*(void (**)(void, void))(v11 + 8))(v0[15], v0[13]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v9, v12, v10);
  }
  uint64_t v14 = v0[7];
  uint64_t v13 = v0[8];
  uint64_t v15 = v0[6];
  uint64_t v16 = self;
  id v17 = (void *)sub_261B8AD48();
  uint64_t v18 = (void *)sub_261B8AD48();
  id v19 = objc_msgSend(v16, sel_predicateForSamplesWithStartDate_endDate_options_, v17, v18, 0);
  v0[25] = v19;

  sub_261A0CCCC(0, &qword_26A9468C8);
  id v20 = v19;
  sub_261B8EDE8();

  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947270);
  unint64_t v21 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_261B93F70;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v22 + v21, v13, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947278);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947280);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_261B93F70;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x263E488B0](KeyPath, 0);
  sub_261A0CCCC(0, &qword_26A947288);
  sub_261B8EDF8();
  os_log_type_t v24 = (void *)swift_task_alloc();
  v0[26] = v24;
  *os_log_type_t v24 = v0;
  v24[1] = sub_261AF4CD0;
  uint64_t v26 = v0[2];
  uint64_t v25 = v0[3];
  return MEMORY[0x270EF3200](v26, v25);
}

uint64_t sub_261AF4CD0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 216) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_261AF4FA8;
  }
  else
  {
    *(void *)(v4 + 224) = a1;
    uint64_t v5 = sub_261AF4DF8;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_261AF4DF8()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v17 = *(void *)(v0 + 176);
  uint64_t v18 = *(void *)(v0 + 192);
  uint64_t v15 = *(void *)(v0 + 136);
  uint64_t v16 = *(void *)(v0 + 144);
  uint64_t v14 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t v9 = *(void *)(v0 + 32);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v7);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v14, v3);
  v10(v15, v3);
  v10(v16, v3);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v18, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v12 = *(void *)(v0 + 224);
  return v11(v12);
}

uint64_t sub_261AF4FA8()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v16 = *(void *)(v0 + 176);
  uint64_t v17 = *(void *)(v0 + 192);
  uint64_t v14 = *(void *)(v0 + 136);
  uint64_t v15 = *(void *)(v0 + 144);
  uint64_t v13 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t v9 = *(void *)(v0 + 32);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v7);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v13, v3);
  v10(v14, v3);
  v10(v15, v3);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v17, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

void sub_261AF5154(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_endDate);
  sub_261B8AD98();
}

uint64_t sub_261AF51B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a7;
  _OWORD v8[10] = a8;
  v8[7] = a5;
  v8[8] = a6;
  v8[6] = a4;
  uint64_t v11 = sub_261B8CE88();
  v8[11] = v11;
  v8[12] = *(void *)(v11 - 8);
  v8[13] = swift_task_alloc();
  uint64_t v12 = sub_261B8EEC8();
  v8[14] = v12;
  v8[15] = *(void *)(v12 - 8);
  v8[16] = swift_task_alloc();
  v8[17] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
  v8[18] = swift_task_alloc();
  uint64_t v13 = sub_261B8ADD8();
  v8[19] = v13;
  v8[20] = *(void *)(v13 - 8);
  v8[21] = swift_task_alloc();
  v8[22] = type metadata accessor for TrainingLoadDayEntry();
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  v8[25] = type metadata accessor for TrainingLoadViewModel(0);
  uint64_t v14 = swift_task_alloc();
  v8[26] = v14;
  uint64_t v15 = (void *)swift_task_alloc();
  v8[27] = v15;
  *uint64_t v15 = v8;
  v15[1] = sub_261AF5428;
  return sub_261AF33C4(v14, a5, a4);
}

uint64_t sub_261AF5428()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_261AF5860;
  }
  else {
    uint64_t v2 = sub_261AF553C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_261AF553C()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  (*(void (**)(void, void, void))(v0[20] + 16))(v0[21], v0[7], v0[19]);
  uint64_t v3 = *(int *)(v1 + 40);
  uint64_t v4 = (uint64_t *)(v2 + *(int *)(v1 + 36));
  uint64_t v32 = *v4;
  char v33 = *((unsigned char *)v4 + 8);
  if (*(void *)(v2 + v3 + 8))
  {
    uint64_t v30 = *(void *)(v2 + v3 + 8);
    uint64_t v31 = *(void *)(v2 + v3);
  }
  else
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v5 = (id)qword_26B416688;
    uint64_t v6 = sub_261B8AA48();
    uint64_t v30 = v7;
    uint64_t v31 = v6;
  }
  uint64_t v25 = v0[26];
  uint64_t v26 = v0[25];
  uint64_t v8 = v0[24];
  uint64_t v9 = (int *)v0[22];
  uint64_t v10 = v0[20];
  uint64_t v27 = v0[19];
  uint64_t v28 = v0[21];
  uint64_t v11 = v0[17];
  uint64_t v12 = v0[18];
  uint64_t v13 = v0[15];
  uint64_t v14 = v0[16];
  uint64_t v15 = v0[14];
  uint64_t v29 = (void (*)(uint64_t))v0[8];
  swift_bridgeObjectRetain();
  sub_261B8C9A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v14, v12 + *(int *)(v11 + 36), v15);
  sub_2619F8754(v12, &qword_26B416CA8);
  uint64_t v16 = TrainingLoadViewModel.localizedDescription(onDay:)(v14);
  uint64_t v18 = v17;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
  uint64_t v19 = *(void *)(v25 + *(int *)(v26 + 56));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v8, v28, v27);
  uint64_t v20 = v8 + v9[5];
  *(void *)uint64_t v20 = v32;
  *(unsigned char *)(v20 + 8) = v33;
  unint64_t v21 = (uint64_t *)(v8 + v9[6]);
  *unint64_t v21 = v31;
  v21[1] = v30;
  uint64_t v22 = (uint64_t *)(v8 + v9[7]);
  *uint64_t v22 = v16;
  v22[1] = v18;
  *(void *)(v8 + v9[8]) = v19;
  swift_retain();
  v29(v8);
  sub_261AF6480(v8, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayEntry);
  sub_261AF6480(v25, type metadata accessor for TrainingLoadViewModel);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_261AF5860()
{
  uint64_t v1 = (void *)v0[28];
  sub_261B8C618();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_261B8CE78();
  os_log_type_t v5 = sub_261B8F4B8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[28];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v10;
    sub_261B8F6F8();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_2619F0000, v4, v5, "Failed to get day summary collection with %@. Returning placeholder.", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9465F0);
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v8, -1, -1);
    MEMORY[0x263E4E970](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = (void *)v0[28];
  }
  uint64_t v12 = (void *)v0[28];
  uint64_t v13 = v0[23];
  uint64_t v14 = (void (*)(uint64_t))v0[8];
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  sub_261AF0AD8(v13);
  v14(v13);

  sub_261AF6480(v13, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayEntry);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_261AF5AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_261AF0D84(a1, a2, a3, *v3);
}

uint64_t sub_261AF5AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_261AF14F8(a1, a2, a3, *v3);
}

uint64_t sub_261AF5AC8(uint64_t a1)
{
  uint64_t v4 = *v1;
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *os_log_type_t v5 = v2;
  v5[1] = sub_261AF6548;
  return sub_261AF1A68(a1, v4);
}

uint64_t sub_261AF5B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_261AF6548;
  return MEMORY[0x270F07728](a1, a2, a3);
}

uint64_t sub_261AF5C1C(uint64_t a1)
{
  uint64_t v4 = *v1;
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *os_log_type_t v5 = v2;
  v5[1] = sub_261AF5CBC;
  return sub_261AF1A68(a1, v4);
}

uint64_t sub_261AF5CBC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_261AF5DB0()
{
  return sub_261AF6380(qword_26A947228, (void (*)(uint64_t))type metadata accessor for TrainingLoadDayEntry);
}

uint64_t sub_261AF5DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B4166C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261AF5E60(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_261AF5F3C;
  return v6(a1);
}

uint64_t sub_261AF5F3C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

char *keypath_get_selector_endDate()
{
  return sel_endDate;
}

uint64_t sub_261AF6044()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261AF607C(uint64_t a1)
{
  return sub_261AF1760(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_261AF6084()
{
  uint64_t v1 = sub_261B8ADD8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_261B8EFB8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 16) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return MEMORY[0x270FA0238](v0, v10, v11);
}

uint64_t sub_261AF61FC(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_261B8ADD8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(sub_261B8EFB8() - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (char *)v1 + v7;
  uint64_t v15 = *(void *)((char *)v1 + v7);
  uint64_t v16 = *((void *)v14 + 1);
  uint64_t v17 = (uint64_t)v1 + v9;
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v18;
  void *v18 = v3;
  v18[1] = sub_261AF6548;
  return sub_261AF51B4(a1, v10, v11, v12, v13, v15, v16, v17);
}

uint64_t sub_261AF6380(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261AF63C8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_261AF5CBC;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A9472A0 + dword_26A9472A0);
  return v6(a1, v4);
}

uint64_t sub_261AF6480(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_261AF64E0(uint64_t a1, uint64_t a2)
{
  uint64_t DayEntry = type metadata accessor for TrainingLoadDayEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(DayEntry - 8) + 16))(a2, a1, DayEntry);
  return a2;
}

void sub_261AF654C()
{
  uint64_t v1 = sub_261B8BB88();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6.n128_f64[0] = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *v0;
  if (*((unsigned char *)v0 + 16)) {
    unint64_t v10 = 2;
  }
  else {
    unint64_t v10 = 0;
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
    MEMORY[0x263E4D7B0](v10, *v0, v6);
  }
  else
  {
    if (v10 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_16;
    }
    swift_retain();
  }
  sub_261B8BBC8();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F87C88], v1);
  sub_261AF9D08(&qword_26A947310);
  char v11 = sub_261B8F0A8();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v4, v1);
  v12(v8, v1);
  if ((v11 & 1) == 0)
  {
    swift_release();
    return;
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
    MEMORY[0x263E4D7B0](v10, v9);
LABEL_13:
    sub_261B8BBB8();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  if (v10 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
    goto LABEL_13;
  }
LABEL_16:
  __break(1u);
}

uint64_t WorkoutNotificationIntervalView.body.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9472C0);
  uint64_t v3 = (char *)a1 + *(int *)(v2 + 56);
  *(double *)uint64_t v3 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
  *(_OWORD *)(v3 + 8) = xmmword_261B95920;
  *(_OWORD *)(v3 + 24) = xmmword_261B95930;
  *(_OWORD *)(v3 + 40) = xmmword_261B95940;
  sub_261AF68D4((uint64_t *)v7);
  long long v4 = v7[1];
  long long v5 = v7[2];
  *a1 = v7[0];
  a1[1] = v4;
  a1[2] = v5;
  return sub_261AF6A50((_OWORD *)((char *)a1 + *(int *)(v2 + 52)));
}

void sub_261AF68D4(uint64_t *a1@<X8>)
{
  if (*((unsigned char *)v1 + 16) != 1) {
    goto LABEL_13;
  }
  uint64_t v3 = *v1;
  long long v4 = (void *)v1[1];
  if (!((unint64_t)*v1 >> 62))
  {
    if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2) {
      goto LABEL_4;
    }
LABEL_13:
    uint64_t v5 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    id v11 = 0;
    uint64_t v10 = 0;
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_261B8F9D8();
  swift_bridgeObjectRelease();
  if (v12 < 2) {
    goto LABEL_13;
  }
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = MEMORY[0x263E4D7B0](0, v3);
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_17;
    }
    uint64_t v5 = *(void *)(v3 + 32);
    swift_retain();
  }
  id v6 = v4;
  sub_261B8E898();
  uint64_t v7 = sub_261B8E8A8();
  swift_release();
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = MEMORY[0x263E4D7B0](1, v3);
LABEL_11:
    id v9 = v6;
    uint64_t v10 = sub_261B8E898();
    swift_retain();
    id v11 = v9;

    swift_release();
LABEL_14:
    *a1 = v5;
    a1[1] = (uint64_t)v11;
    a1[2] = v7;
    a1[3] = v8;
    a1[4] = (uint64_t)v11;
    a1[5] = v10;
    return;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    uint64_t v8 = *(void *)(v3 + 40);
    swift_retain();
    goto LABEL_11;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_261AF6A50@<X0>(void *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9472D0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v31 = (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v32 = (uint64_t)&v28 - v6;
  uint64_t v7 = *(void **)(v1 + 8);
  char v9 = *(unsigned char *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  id v11 = *(void **)(v1 + 32);
  uint64_t v12 = *(void *)(v1 + 40);
  uint64_t v13 = *(void *)(v1 + 48);
  uint64_t v14 = *(void *)(v1 + 56);
  uint64_t v15 = *(void *)(v1 + 64);
  uint64_t v16 = *(void *)(v1 + 72);
  uint64_t v35 = *(void **)v1;
  uint64_t v8 = (uint64_t)v35;
  uint64_t v36 = v7;
  LOBYTE(v37) = v9;
  uint64_t v38 = v10;
  uint64_t v39 = v11;
  uint64_t v40 = v12;
  uint64_t v41 = v13;
  uint64_t v42 = v14;
  uint64_t v43 = v15;
  uint64_t v44 = v16;
  sub_261AF6D18((uint64_t)&v45);
  sub_2619FB7EC((uint64_t)&v45, (uint64_t)v34, &qword_26A9472D8);
  uint64_t v45 = v8;
  int64_t v46 = v7;
  char v47 = v9;
  uint64_t v48 = v10;
  uint64_t v49 = v11;
  uint64_t v50 = v12;
  uint64_t v51 = v13;
  uint64_t v52 = v14;
  uint64_t v53 = v15;
  uint64_t v54 = v16;
  sub_261AF6EB4((uint64_t *)&v35);
  uint64_t v17 = v35;
  uint64_t v18 = v36;
  uint64_t v19 = v38;
  uint64_t v20 = v39;
  uint64_t v29 = v37;
  uint64_t v30 = v40;
  uint64_t v45 = v8;
  int64_t v46 = v7;
  char v47 = v9;
  uint64_t v48 = v10;
  uint64_t v49 = v11;
  uint64_t v50 = v12;
  uint64_t v51 = v13;
  uint64_t v52 = v14;
  uint64_t v53 = v15;
  uint64_t v54 = v16;
  uint64_t v21 = v32;
  sub_261AF72C8(v32);
  sub_2619FB7EC((uint64_t)v34, (uint64_t)v33, &qword_26A9472D8);
  uint64_t v22 = v21;
  uint64_t v23 = v31;
  sub_2619F86F0(v22, v31, &qword_26A9472D0);
  sub_2619FB7EC((uint64_t)v33, (uint64_t)&v35, &qword_26A9472D8);
  sub_2619FB7EC((uint64_t)&v35, (uint64_t)a1, &qword_26A9472D8);
  a1[21] = v17;
  a1[22] = v18;
  uint64_t v25 = v29;
  uint64_t v24 = v30;
  a1[23] = v29;
  a1[24] = v19;
  a1[25] = v20;
  a1[26] = v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9472E0);
  sub_2619F86F0(v23, (uint64_t)a1 + *(int *)(v26 + 64), &qword_26A9472D0);
  sub_261AF9B84((uint64_t)&v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_261AF9984);
  sub_261AF9A8C(v17, v18, v25, v19, v20);
  sub_2619F8754(v32, &qword_26A9472D0);
  sub_2619F8754(v23, &qword_26A9472D0);
  sub_261AF9B0C((uint64_t)v17, v18, v25, v19, v20);
  sub_2619FB7EC((uint64_t)v33, (uint64_t)&v45, &qword_26A9472D8);
  return sub_261AF9B84((uint64_t)&v45, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_261AF9BF8);
}

uint64_t sub_261AF6D18@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[1];
  long long v14 = *v1;
  long long v15 = v3;
  long long v4 = v1[3];
  long long v16 = v1[2];
  long long v17 = v4;
  long long v18 = v1[4];
  uint64_t v19 = v14;
  if (!((unint64_t)v14 >> 62))
  {
    uint64_t v5 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((v15 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    if (v5 >= 3) {
      goto LABEL_4;
    }
LABEL_7:
    sub_261AF9D4C((uint64_t)v7);
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_261B8F9D8();
  sub_261A03DA8((uint64_t)&v19);
  if (v15) {
    goto LABEL_6;
  }
LABEL_3:
  if (v5 <= 0) {
    goto LABEL_7;
  }
LABEL_4:
  *((void *)&v10 + 1) = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
  long long v11 = xmmword_261B95920;
  long long v12 = xmmword_261B95930;
  long long v13 = xmmword_261B95940;
  sub_261AF75FC((uint64_t)&v14, (uint64_t)v9);
  v7[6] = v10;
  v7[7] = v11;
  v7[8] = v12;
  v7[9] = v13;
  void v7[2] = v9[2];
  _OWORD v7[3] = v9[3];
  v7[4] = v9[4];
  v7[5] = v9[5];
  v7[0] = v9[0];
  v7[1] = v9[1];
  int v8 = sub_261B8DE28();
  nullsub_1(v7);
LABEL_8:
  sub_2619FB7EC((uint64_t)v7, (uint64_t)v9, &qword_26A9472D8);
  return sub_2619FB7EC((uint64_t)v9, a1, &qword_26A9472D8);
}

void sub_261AF6EB4(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_261B8BB88();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  char v9 = (char *)&v39 - v8;
  uint64_t v10 = *v1;
  long long v11 = (void *)v1[1];
  char v12 = *((unsigned char *)v1 + 16);
  uint64_t v13 = v1[3];
  uint64_t v14 = v1[4];
  uint64_t v15 = v1[5];
  uint64_t v16 = v1[6];
  uint64_t v17 = v1[7];
  uint64_t v18 = v1[8];
  uint64_t v19 = v1[9];
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_261B8F9D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v44 = v10;
  uint64_t v45 = v11;
  char v46 = v12;
  uint64_t v47 = v13;
  uint64_t v48 = v14;
  uint64_t v49 = v15;
  uint64_t v50 = v16;
  uint64_t v51 = v17;
  uint64_t v52 = v18;
  uint64_t v53 = v19;
  sub_261AF654C();
  if (v21 + 1 >= v20)
  {
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v24 = 0;
    id v28 = 0;
    uint64_t v29 = 0;
LABEL_21:
    *a1 = v26;
    a1[1] = (uint64_t)v28;
    a1[2] = v27;
    a1[3] = v24;
    a1[4] = (uint64_t)v28;
    a1[5] = v29;
    return;
  }
  uint64_t v41 = v4;
  uint64_t v44 = v10;
  uint64_t v45 = v11;
  char v46 = v12;
  uint64_t v47 = v13;
  uint64_t v48 = v14;
  uint64_t v49 = v15;
  uint64_t v50 = v16;
  uint64_t v51 = v17;
  uint64_t v52 = v18;
  uint64_t v53 = v19;
  sub_261AF654C();
  unint64_t v23 = v22 + 1;
  if ((v10 & 0xC000000000000001) != 0)
  {
    uint64_t v24 = MEMORY[0x263E4D7B0](v23, v10);
  }
  else
  {
    if (v23 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_25;
    }
    uint64_t v24 = *(void *)(v10 + 8 * v23 + 32);
    swift_retain();
  }
  uint64_t v44 = v10;
  uint64_t v45 = v11;
  char v46 = v12;
  uint64_t v47 = v13;
  uint64_t v48 = v14;
  uint64_t v49 = v15;
  uint64_t v50 = v16;
  uint64_t v51 = v17;
  uint64_t v52 = v18;
  uint64_t v53 = v19;
  sub_261AF654C();
  if ((v10 & 0xC000000000000001) == 0)
  {
    if (v25 < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v40 = *(void *)(v10 + 8 * v25 + 32);
      swift_retain();
      goto LABEL_12;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v40 = MEMORY[0x263E4D7B0]();
LABEL_12:
  uint64_t v30 = v41;
  id v31 = v11;
  sub_261AF8364();
  uint64_t v41 = v32;
  id v28 = v31;
  sub_261B8BBC8();
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v6, *MEMORY[0x263F87C88], v3);
  sub_261AF9D08(&qword_26A947308);
  sub_261B8F2A8();
  sub_261B8F2A8();
  if (v44 == v42 && v45 == v43)
  {
    swift_bridgeObjectRelease_n();
    char v33 = *(void (**)(char *, uint64_t))(v30 + 8);
    v33(v6, v3);
    v33(v9, v3);
  }
  else
  {
    char v34 = sub_261B8FBA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
    v35(v6, v3);
    v35(v9, v3);
    if ((v34 & 1) == 0)
    {
      uint64_t v29 = 0;
      goto LABEL_20;
    }
  }
  id v36 = objc_msgSend(self, sel_keyColors);
  if (!v36) {
    goto LABEL_26;
  }
  uint64_t v37 = v36;
  id v38 = objc_msgSend(v36, sel_nonGradientTextColor);

  if (v38)
  {
    uint64_t v29 = MEMORY[0x263E4C7B0](v38);
LABEL_20:
    uint64_t v26 = v40;
    uint64_t v27 = v41;
    goto LABEL_21;
  }
LABEL_27:
  __break(1u);
}

void sub_261AF72C8(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9472E8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9472F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = v1[1];
  v26[0] = *v1;
  v26[1] = v9;
  long long v10 = v1[3];
  _OWORD v26[2] = v1[2];
  v26[3] = v10;
  v26[4] = v1[4];
  uint64_t v11 = *(void *)&v26[0];
  uint64_t v27 = *(void *)&v26[0];
  if (*(void *)&v26[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_261B8F9D8();
    sub_261A03DA8((uint64_t)&v27);
  }
  else
  {
    uint64_t v12 = *(void *)((*(void *)&v26[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_261AF654C();
  if (v13 + 2 >= v12) {
    goto LABEL_14;
  }
  sub_261AF654C();
  unint64_t v15 = v14 + 2;
  if ((v11 & 0xC000000000000001) != 0)
  {
    MEMORY[0x263E4D7B0](v15, v11);
  }
  else
  {
    if (v15 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    swift_retain();
  }
  double v16 = COERCE_DOUBLE(sub_261B8BBD8());
  char v18 = v17;
  swift_release();
  if (v18) {
    goto LABEL_14;
  }
  sub_261AF654C();
  if ((~*(void *)&v16 & 0x7FF0000000000000) == 0) {
    goto LABEL_19;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v16 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!__OFADD__(v19 + 2, (uint64_t)v16))
  {
    if (v19 + 2 + (uint64_t)v16 < v12)
    {
      uint64_t v20 = &v4[*(int *)(v2 + 36)];
      *(double *)uint64_t v20 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
      *(_OWORD *)(v20 + 8) = xmmword_261B95920;
      *(_OWORD *)(v20 + 24) = xmmword_261B95930;
      *(_OWORD *)(v20 + 40) = xmmword_261B95940;
      sub_261AF8580(v26, (uint64_t)v4, v16);
      uint64_t v21 = sub_261B8E898();
      sub_2619F86F0((uint64_t)v4, (uint64_t)v8, &qword_26A9472E8);
      *(void *)&v8[*(int *)(v5 + 36)] = v21;
      sub_2619F8754((uint64_t)v4, &qword_26A9472E8);
      uint64_t v22 = v25;
      sub_2619FB7EC((uint64_t)v8, v25, &qword_26A9472F0);
      uint64_t v23 = 0;
LABEL_15:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, v23, 1, v5);
      return;
    }
LABEL_14:
    uint64_t v23 = 1;
    uint64_t v22 = v25;
    goto LABEL_15;
  }
LABEL_22:
  __break(1u);
}

uint64_t sub_261AF75FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_261B8BB88();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v60 - v10;
  unint64_t v12 = 2 * (*(unsigned char *)(a1 + 16) & 1);
  uint64_t v84 = *(void *)a1;
  unint64_t v13 = v84;
  uint64_t v65 = (uint64_t *)a1;
  if ((v84 & 0xC000000000000001) != 0)
  {
    uint64_t v14 = MEMORY[0x263E4D7B0](v12, v84, v9);
  }
  else
  {
    if (*(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v12)
    {
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v14 = swift_retain();
  }
  uint64_t v66 = v14;
  sub_261B8BBC8();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F87C88], v4);
  sub_261AF9D08(&qword_26A947308);
  sub_261B8F2A8();
  sub_261B8F2A8();
  if (v75 == v67 && (void)v76 == (void)v68)
  {
    swift_bridgeObjectRelease_n();
    unint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    v15(v11, v4);
  }
  else
  {
    char v16 = sub_261B8FBA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v7, v4);
    v17(v11, v4);
    if ((v16 & 1) == 0) {
      goto LABEL_12;
    }
  }
  sub_261B8BBB8();
  if (v18)
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v19 = (id)qword_26B416688;
    uint64_t v20 = sub_261B8AA48();
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();

    uint64_t v75 = v20;
    *(void *)&long long v76 = v22;
    sub_261A029C4();
    uint64_t v23 = sub_261B8E3D8();
    uint64_t v25 = v24;
    uint64_t v67 = v23;
    *(void *)&long long v68 = v24;
    LOBYTE(v22) = v26 & 1;
    *((void *)&v68 + 1) = v26 & 1;
    uint64_t v69 = v27;
    long long v70 = 0u;
    long long v71 = 0u;
    long long v72 = 0u;
    long long v73 = 0u;
    char v74 = 0;
    sub_261A001D0(v23, v24, v26 & 1);
    swift_bridgeObjectRetain();
    sub_261A001D0(v23, v25, v22);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A947318);
    sub_2619F8AB8((unint64_t *)&unk_26A947320, &qword_26A947318);
    sub_261B8DD68();
    swift_release();
    sub_261A02A18(v23, v25, v22);
    swift_bridgeObjectRelease();
    sub_261A02A18(v23, v25, v22);
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
LABEL_12:
  if (v13 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_261B8F9D8();
    sub_261A03DA8((uint64_t)&v84);
    goto LABEL_14;
  }
  uint64_t v28 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_14:
  if ((uint64_t)(v12 | 4) >= v28)
  {
    swift_release();
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v58 = 0;
    char v59 = -1;
    goto LABEL_18;
  }
  uint64_t v29 = sub_261B8DAD8();
  sub_261AF7D1C(v65, &v75);
  uint64_t v30 = v75;
  uint64_t v31 = v76;
  char v32 = BYTE8(v76);
  long long v33 = v77;
  char v34 = v79;
  uint64_t v65 = (uint64_t *)*((void *)&v78 + 1);
  uint64_t v35 = *((void *)&v79 + 1);
  uint64_t v67 = v29;
  long long v68 = xmmword_261B93F60;
  uint64_t v69 = v75;
  long long v70 = v76;
  long long v71 = v77;
  long long v72 = v78;
  uint64_t v36 = v78;
  long long v73 = v79;
  char v74 = 1;
  uint64_t v61 = *((void *)&v76 + 1);
  uint64_t v62 = v77;
  sub_261A8FDF0(v75, v76, SBYTE8(v76), v77);
  uint64_t v63 = *((void *)&v33 + 1);
  swift_retain();
  uint64_t v37 = v36;
  uint64_t v38 = v36;
  uint64_t v64 = v36;
  uint64_t v39 = v65;
  sub_261A8FDF0(v37, (uint64_t)v65, v34, v35);
  sub_261A8FDF0(v30, v31, v32, v33);
  swift_retain();
  sub_261A8FDF0(v38, (uint64_t)v39, v34, v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947318);
  sub_2619F8AB8((unint64_t *)&unk_26A947320, &qword_26A947318);
  sub_261B8DD68();
  swift_release();
  uint64_t v40 = v30;
  uint64_t v41 = v30;
  uint64_t v42 = v31;
  uint64_t v43 = v31;
  LOBYTE(v31) = v61;
  uint64_t v44 = v62;
  sub_261A8FE34(v41, v43, v61, v62);
  swift_release();
  uint64_t v45 = v64;
  char v46 = v65;
  sub_261A8FE34(v64, (uint64_t)v65, v34, v35);
  sub_261A8FE34(v40, v42, v31, v44);
  swift_release();
  sub_261A8FE34(v45, (uint64_t)v46, v34, v35);
LABEL_16:
  uint64_t v47 = v75;
  uint64_t v49 = *((void *)&v76 + 1);
  uint64_t v48 = v76;
  uint64_t v51 = *((void *)&v77 + 1);
  uint64_t v50 = v77;
  uint64_t v53 = *((void *)&v78 + 1);
  uint64_t v52 = v78;
  uint64_t v55 = *((void *)&v79 + 1);
  uint64_t v54 = v79;
  uint64_t v56 = v80;
  uint64_t result = v81;
  uint64_t v58 = v82;
  char v59 = v83;
LABEL_18:
  *(void *)a2 = v47;
  *(void *)(a2 + 8) = v48;
  *(void *)(a2 + 16) = v49;
  *(void *)(a2 + 24) = v50;
  *(void *)(a2 + 32) = v51;
  *(void *)(a2 + 40) = v52;
  *(void *)(a2 + 48) = v53;
  *(void *)(a2 + 56) = v54;
  *(void *)(a2 + 64) = v55;
  *(void *)(a2 + 72) = v56;
  *(void *)(a2 + 80) = result;
  *(void *)(a2 + 88) = v58;
  *(unsigned char *)(a2 + 96) = v59;
  return result;
}

unint64_t sub_261AF7D1C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t v5 = *a1;
  if (v4) {
    unint64_t v6 = 3;
  }
  else {
    unint64_t v6 = 1;
  }
  *(void *)&double v46 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0)
  {
    MEMORY[0x263E4D7B0](v6, v5);
  }
  else
  {
    if (v6 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_58;
    }
    swift_retain();
  }
  sub_261B8BBB8();
  uint64_t v8 = v7;
  swift_release();
  if (v8)
  {
    if (qword_26B416690 == -1)
    {
LABEL_9:
      swift_beginAccess();
      id v9 = (id)qword_26B416688;
      sub_261B8AA48();
      swift_bridgeObjectRelease();

      sub_261A029C4();
      uint64_t v10 = sub_261B8E3D8();
      uint64_t v12 = v11;
      uint64_t v14 = v13;
      uint64_t v16 = v15 & 1;
      goto LABEL_11;
    }
LABEL_58:
    swift_once();
    goto LABEL_9;
  }
  uint64_t v10 = 0;
  uint64_t v12 = 0;
  uint64_t v16 = 0;
  uint64_t v14 = 0;
LABEL_11:
  if (v4) {
    unint64_t v17 = 4;
  }
  else {
    unint64_t v17 = 2;
  }
  if (v46 == 0.0)
  {
    if (v17 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_60;
    }
    swift_retain();
  }
  else
  {
    MEMORY[0x263E4D7B0](v17, v5);
  }
  sub_261B8BBB8();
  uint64_t v19 = v18;
  swift_release();
  if (v19) {
    uint64_t v2 = sub_261B8E918();
  }
  else {
    uint64_t v2 = 0;
  }
  if (v4) {
    unint64_t v20 = 5;
  }
  else {
    unint64_t v20 = 3;
  }
  if (v46 != 0.0)
  {
    MEMORY[0x263E4D7B0](v20, v5);
    goto LABEL_28;
  }
  if (v20 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  swift_retain();
LABEL_28:
  sub_261B8BBB8();
  uint64_t v22 = v21;
  swift_release();
  uint64_t v45 = v10;
  if (!v22)
  {
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
LABEL_55:
    *a2 = v45;
    a2[1] = v12;
    a2[2] = v16;
    a2[3] = v14;
    a2[4] = v2;
    a2[5] = v24;
    a2[6] = v25;
    a2[7] = v26;
    a2[8] = v22;
    sub_261A8FDF0(v45, v12, v16, v14);
    swift_retain();
    sub_261A8FDF0(v24, v25, v26, v22);
    sub_261A8FE34(v24, v25, v26, v22);
    swift_release();
    return sub_261A8FE34(v45, v12, v16, v14);
  }
  if (v4) {
    unint64_t v23 = 6;
  }
  else {
    unint64_t v23 = 4;
  }
  if (v46 != 0.0)
  {
    MEMORY[0x263E4D7B0](v23, v5);
    goto LABEL_37;
  }
  if (v23 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_61:
    __break(1u);
LABEL_62:
    swift_once();
LABEL_47:
    swift_beginAccess();
    id v33 = (id)qword_26B416688;
    sub_261B8AA48();
    swift_bridgeObjectRelease();

    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
    unint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_261B92AA0;
    if ((~*(void *)&v44 & 0x7FF0000000000000) != 0)
    {
      if (v44 > -9.22337204e18)
      {
        if (v44 < 9.22337204e18)
        {
          char v34 = (void *)result;
          sub_261A286DC();
          uint64_t v35 = sub_261B8F798();
          uint64_t v37 = v36;
          v34[7] = MEMORY[0x263F8D310];
          unint64_t result = sub_261A2B2E8();
          v34[8] = result;
          v34[4] = v35;
          v34[5] = v37;
          if ((~*(void *)&v46 & 0x7FF0000000000000) != 0)
          {
            if (v46 > -9.22337204e18)
            {
              if (v46 < 9.22337204e18)
              {
                unint64_t v38 = result;
                uint64_t v39 = sub_261B8F798();
                v34[12] = MEMORY[0x263F8D310];
                v34[13] = v38;
                v34[9] = v39;
                v34[10] = v40;
                sub_261B8F118();
                swift_bridgeObjectRelease();
                sub_261A029C4();
                sub_261B8F768();
                swift_bridgeObjectRelease();
                uint64_t v24 = sub_261B8E3D8();
                uint64_t v25 = v41;
                uint64_t v22 = v42;
                uint64_t v26 = v43 & 1;
                goto LABEL_55;
              }
              goto LABEL_68;
            }
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
            goto LABEL_69;
          }
LABEL_66:
          __break(1u);
          goto LABEL_67;
        }
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_65;
  }
  swift_retain();
LABEL_37:
  double v44 = COERCE_DOUBLE(sub_261B8BBD8());
  char v28 = v27;
  swift_release();
  if (v28) {
    goto LABEL_54;
  }
  if (v4) {
    unint64_t result = 7;
  }
  else {
    unint64_t result = 5;
  }
  if (v46 != 0.0)
  {
    MEMORY[0x263E4D7B0](result, v5);
    goto LABEL_45;
  }
  if (result < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_45:
    uint64_t v30 = sub_261B8BBD8();
    char v32 = v31;
    swift_release();
    if ((v32 & 1) == 0)
    {
      double v46 = *(double *)&v30;
      if (qword_26B416690 == -1) {
        goto LABEL_47;
      }
      goto LABEL_62;
    }
LABEL_54:
    swift_bridgeObjectRelease();
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v22 = 0;
    goto LABEL_55;
  }
LABEL_69:
  __break(1u);
  return result;
}

void sub_261AF8364()
{
  uint64_t v0 = (void *)sub_261B8BB88();
  uint64_t v1 = *(v0 - 1);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8BBC8();
  int v4 = (*(uint64_t (**)(char *, void *))(v1 + 88))(v3, v0);
  if (v4 == *MEMORY[0x263F87C90])
  {
    uint64_t v5 = objc_msgSend(self, sel_distanceColors);
    if (!v5)
    {
      __break(1u);
      goto LABEL_16;
    }
    uint64_t v0 = v5;
    id v6 = objc_msgSend(v5, sel_nonGradientTextColor);

    if (v6) {
      goto LABEL_12;
    }
    __break(1u);
  }
  if (v4 != *MEMORY[0x263F87C78]) {
    goto LABEL_9;
  }
  uint64_t v7 = objc_msgSend(self, sel_keyColors);
  if (!v7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v0 = v7;
  id v6 = objc_msgSend(v7, sel_nonGradientTextColor);

  if (!v6)
  {
    __break(1u);
LABEL_9:
    if (v4 != *MEMORY[0x263F87C50])
    {
      (*(void (**)(char *, void *))(v1 + 8))(v3, v0);
      return;
    }
    id v8 = objc_msgSend(self, sel_elapsedTimeColors);
    if (v8)
    {
      id v9 = v8;
      id v6 = objc_msgSend(v8, sel_nonGradientTextColor);

      if (v6) {
        goto LABEL_12;
      }
LABEL_18:
      __break(1u);
      return;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_12:
  MEMORY[0x263E4C7B0](v6);
}

unint64_t sub_261AF8580@<X0>(long long *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v71 = a2;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E30);
  MEMORY[0x270FA5388](v69);
  id v6 = (uint64_t *)((char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_261B8E978();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E38);
  uint64_t v11 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v13 = (uint64_t *)((char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9472F8);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v75 = (uint64_t)&v68 - v18;
  uint64_t v19 = *(void *)a1;
  sub_261AF654C();
  unint64_t result = v20 + 3;
  unint64_t v73 = v19 & 0xC000000000000001;
  uint64_t v74 = v19;
  long long v70 = v16;
  if ((v19 & 0xC000000000000001) != 0)
  {
    MEMORY[0x263E4D7B0](result, v19);
  }
  else
  {
    if (result >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_30;
    }
    swift_retain();
  }
  sub_261B8BBB8();
  uint64_t v23 = v22;
  swift_release();
  if (v23)
  {
    uint64_t v24 = sub_261B8E918();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F1B538], v7);
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v6 + *(int *)(v69 + 28), v10, v7);
    *id v6 = KeyPath;
    uint64_t v26 = v72;
    sub_2619F86F0((uint64_t)v6, (uint64_t)v13 + *(int *)(v72 + 36), &qword_26A944E30);
    *uint64_t v13 = v24;
    swift_retain();
    sub_2619F8754((uint64_t)v6, &qword_26A944E30);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
    uint64_t v27 = v75;
    sub_2619FB7EC((uint64_t)v13, v75, &qword_26A944E38);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v27, 0, 1, v26);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v75, 1, 1, v72);
  }
  unint64_t v28 = v73;
  if (a3 != 2.0) {
    goto LABEL_14;
  }
  long long v29 = a1[3];
  long long v78 = a1[2];
  long long v79 = v29;
  long long v80 = a1[4];
  long long v30 = a1[1];
  long long v76 = *a1;
  long long v77 = v30;
  sub_261AF654C();
  unint64_t result = v31 + 4;
  if (v28)
  {
    MEMORY[0x263E4D7B0](result, v74);
    goto LABEL_12;
  }
  if (result >= *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  swift_retain();
LABEL_12:
  uint64_t v32 = sub_261AF8C08();
  uint64_t v34 = v33;
  swift_release();
  if (v34)
  {
    *(void *)&long long v76 = v32;
    *((void *)&v76 + 1) = v34;
    sub_261A029C4();
    uint64_t v35 = sub_261B8F768();
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    *(void *)&long long v76 = v35;
    *((void *)&v76 + 1) = v37;
    uint64_t v38 = sub_261B8E3D8();
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    uint64_t v44 = v43 & 1;
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v38 = 0;
  uint64_t v40 = 0;
  uint64_t v44 = 0;
  uint64_t v42 = 0;
LABEL_15:
  if (a3 != 3.0) {
    goto LABEL_26;
  }
  long long v45 = a1[3];
  long long v78 = a1[2];
  long long v79 = v45;
  long long v80 = a1[4];
  long long v46 = a1[1];
  long long v76 = *a1;
  long long v77 = v46;
  sub_261AF654C();
  unint64_t result = v47 + 4;
  if (!v28)
  {
    if (result < *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      swift_retain();
      goto LABEL_20;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  MEMORY[0x263E4D7B0](result, v74);
LABEL_20:
  sub_261AF654C();
  unint64_t result = v48 + 5;
  if (v28)
  {
    MEMORY[0x263E4D7B0](result, v74);
    goto LABEL_24;
  }
  if (result < *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_24:
    uint64_t v49 = sub_261AF91F4();
    uint64_t v51 = v50;
    swift_release();
    swift_release();
    if (v51)
    {
      uint64_t v52 = v44;
      uint64_t v53 = v42;
      *(void *)&long long v76 = v49;
      *((void *)&v76 + 1) = v51;
      sub_261A029C4();
      uint64_t v54 = sub_261B8E3D8();
      unint64_t v73 = v55;
      uint64_t v74 = v54;
      uint64_t v57 = v56;
      uint64_t v59 = v58 & 1;
LABEL_27:
      uint64_t v60 = v75;
      uint64_t v61 = (uint64_t)v70;
      sub_2619F86F0(v75, (uint64_t)v70, &qword_26A9472F8);
      uint64_t v62 = v71;
      sub_2619F86F0(v61, v71, &qword_26A9472F8);
      uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947300);
      uint64_t v64 = (uint64_t *)(v62 + *(int *)(v63 + 48));
      uint64_t *v64 = v38;
      v64[1] = v40;
      v64[2] = v52;
      v64[3] = v53;
      uint64_t v65 = (uint64_t *)(v62 + *(int *)(v63 + 64));
      uint64_t v66 = v73;
      uint64_t v67 = v74;
      uint64_t *v65 = v74;
      v65[1] = v66;
      v65[2] = v59;
      v65[3] = v57;
      sub_261A8FDF0(v38, v40, v52, v53);
      sub_261A8FDF0(v67, v66, v59, v57);
      sub_2619F8754(v60, &qword_26A9472F8);
      sub_261A8FE34(v67, v66, v59, v57);
      sub_261A8FE34(v38, v40, v52, v53);
      return sub_2619F8754(v61, &qword_26A9472F8);
    }
LABEL_26:
    uint64_t v52 = v44;
    uint64_t v53 = v42;
    unint64_t v73 = 0;
    uint64_t v74 = 0;
    uint64_t v59 = 0;
    uint64_t v57 = 0;
    goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_261AF8C08()
{
  uint64_t v1 = sub_261B8BD48();
  uint64_t v35 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v34 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_261B8BB88();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v33 - v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v33 - v11;
  v33[1] = *(void *)(v0 + 8);
  sub_261B8BBC8();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v9, *MEMORY[0x263F87C78], v3);
  sub_261AF9D08(&qword_26A947308);
  sub_261B8F2A8();
  sub_261B8F2A8();
  uint64_t v36 = v1;
  if (v37 == v39 && v38 == v40) {
    char v13 = 1;
  }
  else {
    char v13 = sub_261B8FBA8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v9, v3);
  v14(v12, v3);
  if ((v13 & 1) == 0 || (sub_261B8BBB8(), !v15))
  {
    uint64_t v23 = sub_261B8BB98();
    if (v23)
    {
      uint64_t v24 = (void *)v23;
      sub_261B8BBD8();
      if (v25)
      {
      }
      else
      {
        sub_261B8BBC8();
        int v26 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
        if (v26 == *MEMORY[0x263F87C80])
        {
          uint64_t v27 = (unsigned int *)MEMORY[0x263F87D30];
LABEL_26:
          long long v29 = v34;
          uint64_t v30 = v35;
          uint64_t v31 = v36;
          (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, *v27, v36);
          uint64_t v22 = sub_261B8BD38();

          (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v31);
          return v22;
        }
        if (v26 == *MEMORY[0x263F87C48])
        {
          uint64_t v27 = (unsigned int *)MEMORY[0x263F87D18];
          goto LABEL_26;
        }
        if (v26 == *MEMORY[0x263F87C60])
        {
          uint64_t v27 = (unsigned int *)MEMORY[0x263F87D28];
          goto LABEL_26;
        }

        v14(v6, v3);
      }
    }
    return 0;
  }
  uint64_t v16 = sub_261B8BBD8();
  if (v17)
  {
    if (qword_26B416690 == -1)
    {
LABEL_21:
      swift_beginAccess();
      id v28 = (id)qword_26B416688;
      uint64_t v22 = sub_261B8AA48();
      swift_bridgeObjectRelease();

      return v22;
    }
LABEL_32:
    swift_once();
    goto LABEL_21;
  }
  double v18 = *(double *)&v16;
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v19 = (id)qword_26B416688;
  sub_261B8AA48();
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_261B93F70;
  if ((~*(void *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v18 >= 9.22337204e18)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v21 = MEMORY[0x263F8D750];
  *(void *)(v20 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v20 + 64) = v21;
  *(void *)(v20 + 32) = (uint64_t)v18;
  uint64_t v22 = sub_261B8F118();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_261AF91F4()
{
  uint64_t v1 = sub_261B8C228();
  uint64_t v26 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_261B8BD48();
  uint64_t v27 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8BB88();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void *)(v0 + 8);
  uint64_t v11 = (void *)sub_261B8BB98();
  if (!v11) {
    return 0;
  }
  id v29 = v11;
  uint64_t v12 = sub_261B8BBD8();
  if (v13 & 1) != 0 || (double v25 = *(double *)&v12, *(double *)&v14 = COERCE_DOUBLE(sub_261B8BBD8()), (v15))
  {

    return 0;
  }
  double v16 = v25;
  double v17 = *(double *)&v14;
  sub_261B8BBC8();
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (v18 == *MEMORY[0x263F87C80])
  {
    id v19 = (unsigned int *)MEMORY[0x263F87D30];
LABEL_16:
    (*(void (**)(char *, void, uint64_t))(v27 + 104))(v6, *v19, v4);
    sub_261B8BDC8();
    swift_allocObject();
    sub_261B8BD98();
    id v22 = v29;
    uint64_t v23 = sub_261B8BD58();
    goto LABEL_17;
  }
  if (v18 != *MEMORY[0x263F87CA0])
  {
    if (v18 == *MEMORY[0x263F87C48])
    {
      id v19 = (unsigned int *)MEMORY[0x263F87D18];
      goto LABEL_16;
    }
    if (v18 == *MEMORY[0x263F87C60])
    {
      id v19 = (unsigned int *)MEMORY[0x263F87D28];
      goto LABEL_16;
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return 0;
  }
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v26 + 104))(v3, *MEMORY[0x263F87E30], v1);
  if (v16 <= v17)
  {
    sub_261B8C328();
    swift_allocObject();
    sub_261B8C308();
    id v22 = v29;
    uint64_t v23 = MEMORY[0x263E4A1B0](v28, v29);
LABEL_17:
    uint64_t v20 = v23;
    swift_release();

    return v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_261AF95C0@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9472C0);
  uint64_t v3 = (char *)a1 + *(int *)(v2 + 56);
  *(double *)uint64_t v3 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
  *(_OWORD *)(v3 + 8) = xmmword_261B95920;
  *(_OWORD *)(v3 + 24) = xmmword_261B95930;
  *(_OWORD *)(v3 + 40) = xmmword_261B95940;
  sub_261AF68D4((uint64_t *)v7);
  long long v4 = v7[1];
  long long v5 = v7[2];
  *a1 = v7[0];
  a1[1] = v4;
  a1[2] = v5;
  return sub_261AF6A50((_OWORD *)((char *)a1 + *(int *)(v2 + 52)));
}

uint64_t sub_261AF9704()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeWithCopy for WorkoutNotificationIntervalView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for WorkoutNotificationIntervalView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a2 + 8);
  long long v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for WorkoutNotificationIntervalView(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutNotificationIntervalView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutNotificationIntervalView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutNotificationIntervalView()
{
  return &type metadata for WorkoutNotificationIntervalView;
}

uint64_t sub_261AF9948()
{
  return sub_2619F8AB8(&qword_26A9472C8, &qword_26A9472C0);
}

uint64_t sub_261AF9984(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, unsigned __int8 a13)
{
  if (a13 != 254) {
    return sub_261AF99B0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  }
  return result;
}

uint64_t sub_261AF99B0(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, unsigned __int8 a13)
{
  if (a13 != 255) {
    return sub_261AF99DC(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13 & 1);
  }
  return result;
}

uint64_t sub_261AF99DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13)
{
  if (a13)
  {
    sub_261A8FDF0(a4, a5, a6, a7);
    swift_retain();
    return sub_261A8FDF0(a9, a10, a11, a12);
  }
  else
  {
    sub_261A001D0(a1, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
}

id sub_261AF9A8C(id result, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    id v6 = a2;
    swift_retain();
    swift_retain();
    return a5;
  }
  return result;
}

uint64_t sub_261AF9B0C(uint64_t result, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (result)
  {
    swift_release();

    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_261AF9B84(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))
{
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(_DWORD *)(a1 + 160));
  return a1;
}

uint64_t sub_261AF9BF8(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, unsigned __int8 a13)
{
  if (a13 != 254) {
    return sub_261AF9C24(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  }
  return result;
}

uint64_t sub_261AF9C24(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, unsigned __int8 a13)
{
  if (a13 != 255) {
    return sub_261AF9C50(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13 & 1);
  }
  return result;
}

uint64_t sub_261AF9C50(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13)
{
  if (a13)
  {
    sub_261A8FE34(a4, a5, a6, a7);
    swift_release();
    return sub_261A8FE34(a9, a10, a11, a12);
  }
  else
  {
    sub_261A02A18(a1, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_261AF9D08(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_261B8BB88();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_261AF9D4C(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 96) = 254;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 148) = 0u;
  return result;
}

void WKUIBreadcrumbMapView.__allocating_init(locationPositionPublisher:)()
{
  id v1 = objc_allocWithZone(v0);
  WKUIBreadcrumbMapView.init(locationPositionPublisher:)();
}

void WKUIBreadcrumbMapView.init(locationPositionPublisher:)()
{
  *(void *)&v0[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_breadcrumbPath] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_breadcrumbPathRenderer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_cancellable] = MEMORY[0x263F8EE88];
  *(void *)&v0[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_routePolyline] = 0;
  v0[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_didReceiveInitialUpdate] = 0;
  id v1 = objc_allocWithZone((Class)type metadata accessor for WKUIBreadcrumbMapView.EmptyCLDelegate());
  uint64_t v2 = v0;
  id v3 = objc_msgSend(v1, sel_init);
  id v4 = WKUILocationBundlePath();
  sub_261B8F0F8();

  sub_261A0CCCC(0, (unint64_t *)&qword_26B416D00);
  id v5 = v3;
  id v6 = (void *)sub_261B8F568();
  id v7 = objc_allocWithZone(MEMORY[0x263F00A60]);
  uint64_t v8 = (void *)sub_261B8F0B8();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithEffectiveBundlePath_delegate_onQueue_, v8, v5, v6);

  if (v9) {
    objc_msgSend(v9, sel_setActivityType_, 3);
  }
  uint64_t v10 = self;
  id v11 = WKUILocationBundle();
  uint64_t v12 = (void *)sub_261B8F0B8();
  id v13 = objc_msgSend(v10, sel_newAssertionForBundle_withReason_level_, v11, v12, 1);

  if (v13)
  {
    *(void *)&v2[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_inUseAssertion] = v13;

    v23.receiver = v2;
    v23.super_class = (Class)type metadata accessor for WKUIBreadcrumbMapView();
    id v14 = objc_msgSendSuper2(&v23, sel_initWithFrame_locationManager_, v9, 0.0, 0.0, 0.0, 0.0);
    if (v14)
    {
      id v15 = v14;
      objc_msgSend(v15, sel_setDelegate_, v15);
      objc_msgSend(v15, sel_setZoomEnabled_, 1);
      objc_msgSend(v15, sel_setScrollEnabled_, 0);
      objc_msgSend(v15, sel_setPitchEnabled_, 0);
      objc_msgSend(v15, sel_setRotateEnabled_, 0);
      objc_msgSend(v15, sel_setShowsAttribution_, 0);
      objc_msgSend(v15, sel_setShowsUserLocation_, 1);
      objc_msgSend(v15, sel_setUserTrackingMode_, 1);
      objc_msgSend(v15, sel_setMapType_, 5);
      double v16 = self;
      id v17 = v15;
      id v18 = objc_msgSend(v16, sel_filterExcludingAllCategories);
      objc_msgSend(v17, sel_setPointOfInterestFilter_, v18);

      id v19 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WKUIBreadcrumbPath()), sel_init);
      uint64_t v20 = (char *)v17;
      id v21 = v19;
      objc_msgSend(v20, sel_addOverlay_level_, v21, 0);

      swift_release();
      id v22 = *(void **)&v20[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_breadcrumbPath];
      *(void *)&v20[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_breadcrumbPath] = v21;

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for WKUIBreadcrumbMapView.EmptyCLDelegate()
{
  return self;
}

uint64_t type metadata accessor for WKUIBreadcrumbMapView()
{
  return self;
}

void sub_261AFA244(uint64_t a1)
{
  uint64_t v3 = sub_261B8B018();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x270FA5388](v3);
  id v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v32 = v1;
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_261ACA3A4(0, v8, 0);
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v9 = v4 + 16;
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
    uint64_t v33 = *(void *)(v9 + 56);
    uint64_t v34 = v10;
    uint64_t v12 = (void (**)(char *, uint64_t))(v9 - 8);
    do
    {
      v34(v7, v11, v3);
      sub_261B8B008();
      uint64_t v14 = v13;
      uint64_t v16 = v15;
      (*v12)(v7, v3);
      uint64_t v17 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_261ACA3A4(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v17 = v35;
      }
      unint64_t v19 = *(void *)(v17 + 16);
      unint64_t v18 = *(void *)(v17 + 24);
      unint64_t v20 = v19 + 1;
      if (v19 >= v18 >> 1)
      {
        sub_261ACA3A4(v18 > 1, v19 + 1, 1);
        uint64_t v17 = v35;
      }
      *(void *)(v17 + 16) = v20;
      id v21 = (void *)(v17 + 32 + 16 * v19);
      *id v21 = v14;
      v21[1] = v16;
      v11 += v33;
      --v8;
    }
    while (v8);
    id v22 = objc_msgSend(self, sel_polylineWithCoordinates_count_, v17 + 32, v20);
    swift_release();
    uint64_t v23 = OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_routePolyline;
    uint64_t v24 = v32;
    double v25 = *(void **)&v32[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_routePolyline];
    *(void *)&v32[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_routePolyline] = v22;
    id v26 = v22;
    if (v25) {
      objc_msgSend(v24, sel_removeOverlay_, v25);
    }
    uint64_t v27 = *(void *)&v24[v23];
    if (v27) {
      objc_msgSend(v24, sel_addOverlay_level_, v27, 1);
    }
  }
  else
  {
    uint64_t v28 = OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_routePolyline;
    id v29 = *(void (**)(char *, uint64_t, uint64_t))&v1[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_routePolyline];
    *(void *)&v1[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_routePolyline] = 0;
    uint64_t v34 = v29;
    if (v29)
    {
      objc_msgSend(v1, sel_removeOverlay_, v29, v5);
      id v29 = v34;
    }
    uint64_t v30 = *(void *)&v1[v28];
    if (v30)
    {
      objc_msgSend(v1, sel_addOverlay_level_, v30, 1, v5);
      uint64_t v31 = v34;
    }
    else
    {
    }
  }
}

void sub_261AFA568(unint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_261B8F9D8();
    swift_bridgeObjectRelease();
    if (!v4) {
      return;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return;
    }
  }
  BOOL v5 = __OFSUB__(v4, 1);
  unint64_t v6 = v4 - 1;
  if (v5)
  {
    __break(1u);
  }
  else if ((v3 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v7 = *(id *)(v3 + 8 * v6 + 32);
      goto LABEL_8;
    }
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  id v16 = (id)MEMORY[0x263E4D7B0](v6, v3);
  swift_bridgeObjectRelease();
  id v7 = v16;
LABEL_8:
  int64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_breadcrumbPath);
  if (v8)
  {
    id v15 = v7;
    uint64_t v9 = OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_didReceiveInitialUpdate;
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_didReceiveInitialUpdate))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9443E8);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_261B93F90;
      *(void *)(v10 + 32) = v15;
      unint64_t v17 = v10;
      sub_261B8F2E8();
      unint64_t v3 = v17;
      id v11 = v15;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v12 = *(void **)(v2 + OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_breadcrumbPathRenderer);
    id v13 = v12;
    id v14 = v8;
    sub_261A38154(v3, v2, v12);

    swift_bridgeObjectRelease();
    *(unsigned char *)(v2 + v9) = 1;
  }
  else
  {
  }
}

id WKUIBreadcrumbMapView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void WKUIBreadcrumbMapView.init(frame:)()
{
}

id WKUIBreadcrumbMapView.__allocating_init(frame:locationManager:)(void *a1, double a2, double a3, double a4, double a5)
{
  id v7 = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_locationManager_, a1, a2, a3, a4, a5);

  return v7;
}

void WKUIBreadcrumbMapView.init(frame:locationManager:)()
{
}

id WKUIBreadcrumbMapView.__deallocating_deinit(uint64_t a1)
{
  return sub_261AFAA40(a1, type metadata accessor for WKUIBreadcrumbMapView);
}

id WKUIBreadcrumbMapView.mapView(_:rendererFor:)()
{
  return sub_261AFAA78();
}

id sub_261AFAA24()
{
  return sub_261AFAA40(0, type metadata accessor for WKUIBreadcrumbMapView.EmptyCLDelegate);
}

id sub_261AFAA40(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

id sub_261AFAA78()
{
  type metadata accessor for WKUIBreadcrumbPath();
  uint64_t v1 = swift_dynamicCastClass();
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_breadcrumbPathRenderer;
    objc_super v4 = *(void **)(v0 + OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_breadcrumbPathRenderer);
    if (v4)
    {
      return v4;
    }
    else
    {
      unint64_t v19 = (objc_class *)type metadata accessor for WKUIBreadcrumbPathRenderer();
      unint64_t v20 = (char *)objc_allocWithZone(v19);
      *(void *)&v20[OBJC_IVAR____TtC9WorkoutUI26WKUIBreadcrumbPathRenderer_crumbs] = v2;
      v25.receiver = v20;
      v25.super_class = v19;
      swift_unknownObjectRetain_n();
      id v21 = objc_msgSendSuper2(&v25, sel_initWithOverlay_, v2);
      id v22 = *(void **)(v0 + v3);
      *(void *)(v0 + v3) = v21;
      id v23 = v21;
      swift_unknownObjectRelease();

      return v23;
    }
  }
  else
  {
    self;
    uint64_t v6 = swift_dynamicCastObjCClass();
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = objc_allocWithZone(MEMORY[0x263F10A10]);
      swift_unknownObjectRetain();
      id v9 = objc_msgSend(v8, sel_initWithPolyline_, v7);
      uint64_t v10 = self;
      id v11 = v9;
      id v12 = objc_msgSend(v10, sel_systemWhiteColor);
      objc_msgSend(v11, sel_setStrokeColor_, v12);

      id v13 = v11;
      id v14 = objc_msgSend(v10, sel_systemWhiteColor);
      id v15 = objc_msgSend(v14, sel_colorWithAlphaComponent_, 0.9);

      objc_msgSend(v13, sel_setFillColor_, v15);
      objc_msgSend(v13, sel_setLineWidth_, 4.0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9443E8);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_261B98030;
      sub_261A0CCCC(0, (unint64_t *)&qword_26A947430);
      id v17 = v13;
      *(void *)(v16 + 32) = sub_261B8F688();
      *(void *)(v16 + 40) = sub_261B8F688();
      uint64_t v26 = v16;
      sub_261B8F2E8();
      unint64_t v18 = (void *)sub_261B8F2C8();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_setLineDashPattern_, v18);

      swift_unknownObjectRelease();
      return v17;
    }
    else
    {
      id v24 = objc_allocWithZone(MEMORY[0x263F109C8]);
      return objc_msgSend(v24, sel_init);
    }
  }
}

uint64_t method lookup function for WKUIBreadcrumbMapView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WKUIBreadcrumbMapView);
}

uint64_t dispatch thunk of WKUIBreadcrumbMapView.__allocating_init(locationPositionPublisher:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of WKUIBreadcrumbMapView.set(routePoints:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of WKUIBreadcrumbMapView.update(locations:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

uint64_t VerticalOscillationMetricView.init(metricType:verticalOscillation:formattingManager:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = a3 & 1;
  *(void *)(a5 + 24) = a4;
  return result;
}

unint64_t sub_261AFAE28()
{
  if (*v0 == 28)
  {
    if (qword_26B416690 == -1) {
      goto LABEL_6;
    }
LABEL_9:
    swift_once();
    goto LABEL_6;
  }
  if (*v0 != 29) {
    return 0xD000000000000012;
  }
  if (qword_26B416690 != -1) {
    goto LABEL_9;
  }
LABEL_6:
  swift_beginAccess();
  id v1 = (id)qword_26B416688;
  uint64_t v2 = sub_261B8AA48();

  return v2;
}

uint64_t sub_261AFAFB0()
{
  uint64_t v1 = sub_261B8ABA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  objc_super v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_261B8AEF8();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9453F8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v12 = (char *)v17 - v11;
  if (*(unsigned char *)(v0 + 16))
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v13 = (id)qword_26B416688;
    uint64_t v14 = sub_261B8AA48();
  }
  else
  {
    v17[0] = *(double *)(v0 + 8) * 100.0;
    sub_261B8AE68();
    sub_261A63D24();
    sub_261B8AAE8();
    sub_261B8AB98();
    MEMORY[0x263E48A00](v4, v6);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    id v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v15(v9, v6);
    sub_2619F8AB8((unint64_t *)&qword_26A945408, &qword_26A9453F8);
    sub_261B8EFD8();
    v15(v12, v6);
    return *(void *)&v17[1];
  }
  return v14;
}

uint64_t sub_261AFB310()
{
  if (*(unsigned char *)(v0 + 16))
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v1 = (id)qword_26B416688;
    uint64_t v2 = sub_261B8AA48();
  }
  else
  {
    uint64_t v3 = *(void **)(v0 + 24);
    sub_261AFAE28();
    sub_261A029C4();
    uint64_t v4 = sub_261B8F788();
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_261AFAFB0();
    uint64_t v9 = v8;
    uint64_t v10 = qword_26B416690;
    id v11 = v3;
    if (v10 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v12 = (id)qword_26B416688;
    uint64_t v13 = sub_261B8AA48();
    uint64_t v15 = v14;

    swift_bridgeObjectRetain();
    uint64_t v16 = sub_261A0B1E4(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v18 = v16[2];
    unint64_t v17 = v16[3];
    unint64_t v19 = v18 + 1;
    if (v18 >= v17 >> 1) {
      uint64_t v16 = sub_261A0B1E4((void *)(v17 > 1), v18 + 1, 1, v16);
    }
    uint64_t v16[2] = v19;
    unint64_t v20 = &v16[2 * v18];
    v20[4] = v7;
    v20[5] = v9;
    unint64_t v21 = v16[3];
    swift_bridgeObjectRetain();
    if (v19 >= v21 >> 1) {
      uint64_t v16 = sub_261A0B1E4((void *)(v21 > 1), v18 + 2, 1, v16);
    }
    uint64_t v16[2] = v18 + 2;
    id v22 = &v16[2 * v19];
    v22[4] = v13;
    v22[5] = v15;
    unint64_t v23 = v16[2];
    unint64_t v24 = v16[3];
    swift_bridgeObjectRetain();
    if (v23 >= v24 >> 1) {
      uint64_t v16 = sub_261A0B1E4((void *)(v24 > 1), v23 + 1, 1, v16);
    }
    uint64_t v16[2] = v23 + 1;
    objc_super v25 = &v16[2 * v23];
    v25[4] = v4;
    v25[5] = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943578);
    sub_2619F8AB8((unint64_t *)&qword_26A943580, &qword_26A943578);
    uint64_t v2 = sub_261B8F048();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t VerticalOscillationMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  char v3 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void **)(v1 + 24);
  uint64_t v5 = sub_261AFAFB0();
  uint64_t v19 = v6;
  uint64_t v20 = v5;
  if (v3)
  {
    id v7 = v4;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = qword_26B416690;
    id v11 = v4;
    if (v10 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v12 = (id)qword_26B416688;
    uint64_t v8 = sub_261B8AA48();
    uint64_t v9 = v13;
  }
  unint64_t v14 = sub_261AFAE28();
  uint64_t v16 = v15;

  uint64_t result = sub_261AFB310();
  *(void *)a1 = v20;
  *(void *)(a1 + 8) = v19;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v14;
  *(void *)(a1 + 40) = v16;
  *(_WORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = result;
  *(void *)(a1 + 64) = v18;
  return result;
}

uint64_t sub_261AFB868()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for VerticalOscillationMetricView()
{
  return &type metadata for VerticalOscillationMetricView;
}

uint64_t HeartRateAggregateMetricView.init(label:heartRate:isStale:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v9 = *a1;
  uint64_t result = swift_getKeyPath();
  *(unsigned char *)a5 = v9;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = a3 & 1;
  *(unsigned char *)(a5 + 17) = a4;
  *(void *)(a5 + 24) = result;
  *(unsigned char *)(a5 + 32) = 0;
  return result;
}

BOOL static HeartRateAggregateMetricView.Label.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t HeartRateAggregateMetricView.Label.hash(into:)()
{
  return sub_261B8FCA8();
}

uint64_t HeartRateAggregateMetricView.Label.hashValue.getter()
{
  return sub_261B8FCE8();
}

uint64_t HeartRateAggregateMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_261AFBB38();
  uint64_t v13 = v3;
  uint64_t v14 = v2;
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v4 = (id)qword_26B416688;
  uint64_t v5 = sub_261B8AA48();
  uint64_t v7 = v6;

  uint64_t v8 = sub_261AFBF90();
  uint64_t v10 = v9;
  uint64_t result = sub_261AFC474();
  *(void *)a1 = v14;
  *(void *)(a1 + 8) = v13;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v10;
  *(_WORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = result;
  *(void *)(a1 + 64) = v12;
  return result;
}

uint64_t sub_261AFBB38()
{
  uint64_t v1 = sub_261B8ABA8();
  uint64_t v25 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  MEMORY[0x270FA5388](v1);
  unint64_t v24 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_261B8FB88();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8AEF8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9453F8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v23 - v13;
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v23 - v16;
  if (*(unsigned char *)(v0 + 16))
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v18 = (id)qword_26B416688;
    uint64_t v19 = sub_261B8AA48();
  }
  else
  {
    uint64_t v27 = *(void *)(v0 + 8);
    sub_261B8AE68();
    sub_261A63D24();
    sub_261B8AAE8();
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8E220], v3);
    MEMORY[0x263E489F0](v6, 0, 1, v8);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
    v20(v11, v8);
    unint64_t v21 = v24;
    sub_261B8AB98();
    MEMORY[0x263E48A00](v21, v8);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v26);
    v20(v14, v8);
    sub_2619F8AB8((unint64_t *)&qword_26A945408, &qword_26A9453F8);
    sub_261B8EFD8();
    v20(v17, v8);
    return v28;
  }
  return v19;
}

uint64_t sub_261AFBF90()
{
  char v1 = *v0;
  uint64_t v2 = *((void *)v0 + 3);
  char v3 = v0[32];
  if (v1)
  {
    sub_2619F7774(v2, v3);
    sub_2619FA43C(v2, v3, &v7);
    sub_2619F7790(v2, v3);
    switch(v7)
    {
      case 2:
      case 6:
        if (qword_26B416690 != -1) {
          goto LABEL_20;
        }
        break;
      case 3:
      case 4:
        if (qword_26B416690 != -1) {
          goto LABEL_20;
        }
        break;
      case 5:
        if (qword_26B416690 != -1) {
          goto LABEL_20;
        }
        break;
      default:
        if (qword_26B416690 != -1) {
          goto LABEL_20;
        }
        break;
    }
  }
  else
  {
    sub_2619F7774(v2, v3);
    sub_2619FA43C(v2, v3, &v7);
    sub_2619F7790(v2, v3);
    switch(v7)
    {
      case 2:
      case 6:
        if (qword_26B416690 != -1) {
          goto LABEL_20;
        }
        break;
      case 3:
      case 4:
        if (qword_26B416690 != -1) {
          goto LABEL_20;
        }
        break;
      case 5:
        if (qword_26B416690 != -1) {
          goto LABEL_20;
        }
        break;
      default:
        if (qword_26B416690 != -1) {
LABEL_20:
        }
          swift_once();
        break;
    }
  }
  swift_beginAccess();
  id v4 = (id)qword_26B416688;
  uint64_t v5 = sub_261B8AA48();

  return v5;
}

uint64_t sub_261AFC474()
{
  if (*(unsigned char *)(v0 + 16))
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v1 = (id)qword_26B416688;
    uint64_t v2 = sub_261B8AA48();
  }
  else
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v3 = (id)qword_26B416688;
    uint64_t v4 = sub_261B8AA48();
    uint64_t v12 = v5;

    sub_261AFBF90();
    sub_261A029C4();
    uint64_t v6 = sub_261B8F788();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943570);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_261B94B90;
    *(void *)(v9 + 32) = sub_261AFBB38();
    *(void *)(v9 + 40) = v10;
    *(void *)(v9 + 48) = v4;
    *(void *)(v9 + 56) = v12;
    *(void *)(v9 + 64) = v6;
    *(void *)(v9 + 72) = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943578);
    sub_2619F8AB8((unint64_t *)&qword_26A943580, &qword_26A943578);
    uint64_t v2 = sub_261B8F048();
    swift_bridgeObjectRelease();
  }
  return v2;
}

unint64_t sub_261AFC788()
{
  unint64_t result = qword_26A947440;
  if (!qword_26A947440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947440);
  }
  return result;
}

uint64_t sub_261AFC7DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeWithCopy for HeartRateAggregateMetricView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  char v4 = *(unsigned char *)(a2 + 32);
  sub_2619F7774(v3, v4);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  return a1;
}

uint64_t assignWithCopy for HeartRateAggregateMetricView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v4 = *(void *)(a2 + 24);
  char v5 = *(unsigned char *)(a2 + 32);
  sub_2619F7774(v4, v5);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  sub_2619F7790(v6, v7);
  return a1;
}

uint64_t assignWithTake for HeartRateAggregateMetricView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v3 = *(void *)(a2 + 24);
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  sub_2619F7790(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartRateAggregateMetricView(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[33]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HeartRateAggregateMetricView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeartRateAggregateMetricView()
{
  return &type metadata for HeartRateAggregateMetricView;
}

unsigned char *storeEnumTagSinglePayload for HeartRateAggregateMetricView.Label(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261AFCA98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeartRateAggregateMetricView.Label()
{
  return &type metadata for HeartRateAggregateMetricView.Label;
}

uint64_t sub_261AFCAD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_261B8AE38();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t PowerZonesBarChart.init(livePowerZones:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result)
  {
    swift_retain();
    unint64_t v3 = sub_261B8C6B8();
    uint64_t v4 = sub_261AFCBF0(v3);
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_261B8C698();
    char v7 = v6 & 1;
    char v8 = sub_261B8C6C8();
    unint64_t result = swift_release_n();
  }
  else
  {
    uint64_t v5 = 0;
    char v7 = 1;
    uint64_t v4 = MEMORY[0x263F8EE78];
    char v8 = 1;
  }
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v7;
  *(unsigned char *)(a2 + 17) = v8 & 1;
  return result;
}

uint64_t sub_261AFCBF0(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for PowerZonesBarChartElement();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = MEMORY[0x263F8EE78];
  sub_261ACA3CC(0, 0, 0);
  uint64_t v5 = v24;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v6)
  {
    while (1)
    {
      unint64_t v7 = 0;
      uint64_t v19 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v20 = a1 & 0xC000000000000001;
      unint64_t v18 = a1;
      while (v20)
      {
        MEMORY[0x263E4D7B0](v7, a1);
        unint64_t v8 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          goto LABEL_15;
        }
LABEL_7:
        unint64_t v23 = v8;
        uint64_t v9 = sub_261B8FB78();
        uint64_t v11 = v10;
        sub_261B8C658();
        uint64_t v13 = v12;
        sub_261B8AE28();
        swift_release();
        uint64_t *v4 = v9;
        v4[1] = v11;
        v4[2] = v13;
        uint64_t v24 = v5;
        unint64_t v15 = *(void *)(v5 + 16);
        unint64_t v14 = *(void *)(v5 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_261ACA3CC(v14 > 1, v15 + 1, 1);
          uint64_t v5 = v24;
        }
        *(void *)(v5 + 16) = v15 + 1;
        sub_261B002A8((uint64_t)v4, v5+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v15);
        ++v7;
        a1 = v18;
        if (v8 == v6) {
          goto LABEL_17;
        }
      }
      if (v7 < *(void *)(v19 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_261B8F9D8();
      if (!v6) {
        goto LABEL_17;
      }
    }
    swift_retain();
    unint64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_15;
    }
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t PowerZonesBarChart.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947448);
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947450);
  uint64_t v33 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v27 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947458);
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v28 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947460);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = v1[1];
  char v13 = *((unsigned char *)v1 + 16);
  LODWORD(v9) = *((unsigned __int8 *)v1 + 17);
  uint64_t v39 = *v1;
  uint64_t v11 = v39;
  uint64_t v40 = v12;
  char v41 = v13;
  char v42 = v9;
  char v14 = v9;
  int v26 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947468);
  sub_261AFD500();
  sub_261B8D168();
  uint64_t v35 = v11;
  uint64_t v36 = v12;
  char v37 = v13;
  char v38 = v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947488);
  uint64_t v16 = sub_2619F8AB8(&qword_26A947490, &qword_26A947448);
  uint64_t v17 = sub_2619F8AB8(&qword_26A947498, &qword_26A947488);
  unint64_t v18 = v27;
  sub_261B8E3E8();
  (*(void (**)(unsigned char *, uint64_t))(v29 + 8))(v4, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9474A0);
  uint64_t v43 = v2;
  uint64_t v44 = v15;
  uint64_t v45 = v16;
  uint64_t v46 = v17;
  swift_getOpaqueTypeConformance2();
  sub_2619F8AB8(&qword_26A9474A8, &qword_26A9474A0);
  uint64_t v19 = v28;
  uint64_t v20 = v31;
  sub_261B8E408();
  (*(void (**)(unsigned char *, uint64_t))(v33 + 8))(v18, v20);
  if (v26) {
    double v21 = 0.5;
  }
  else {
    double v21 = 1.0;
  }
  uint64_t v22 = v30;
  uint64_t v23 = v32;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v30 + 16))(v10, v19, v32);
  *(double *)&v10[*(int *)(v8 + 44)] = v21;
  (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(v19, v23);
  return sub_2619FB7EC((uint64_t)v10, v34, &qword_26A947460);
}

uint64_t sub_261AFD2D8(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_261AFFB4C(v6);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(unsigned char *)(v7 + 32) = a3 & 1;
  *(unsigned char *)(v7 + 33) = HIBYTE(a3) & 1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_261B00180;
  *(void *)(v8 + 24) = v7;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947530);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947538);
  sub_2619F8AB8(&qword_26A947540, &qword_26A947530);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947478);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947480);
  sub_261B8D198();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  return sub_261B8EBD8();
}

uint64_t sub_261AFD4E8()
{
  return sub_261AFDE80((uint64_t (*)(void, void, void))sub_261AFD2D8);
}

unint64_t sub_261AFD500()
{
  unint64_t result = qword_26A947470;
  if (!qword_26A947470)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947468);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947478);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947480);
    sub_261B8D198();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947470);
  }
  return result;
}

uint64_t sub_261AFD628@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X8>)
{
  int v46 = a4;
  uint64_t v44 = a1;
  uint64_t v45 = a3;
  uint64_t v50 = a5;
  uint64_t v6 = sub_261B8DBB8();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v47 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459D0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v34 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459C8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = sub_261B8D198();
  uint64_t v37 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947480);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v38 = v14;
  uint64_t v39 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947478);
  uint64_t v43 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v35 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947538);
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v36 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8DB98();
  uint64_t v20 = a2[1];
  uint64_t v51 = *a2;
  uint64_t v52 = v20;
  swift_bridgeObjectRetain();
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  uint64_t v51 = a2[2];
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8D188();
  uint64_t v51 = sub_261AFFEE4(v44);
  uint64_t v21 = MEMORY[0x263F1B440];
  uint64_t v22 = MEMORY[0x263EFCD08];
  uint64_t v23 = MEMORY[0x263F1B420];
  sub_261B8CF38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v11);
  uint64_t v51 = v11;
  uint64_t v52 = v21;
  uint64_t v53 = v22;
  uint64_t v54 = v23;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v25 = v35;
  uint64_t v26 = v38;
  sub_261B8CFC8();
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v26);
  uint64_t v28 = v47;
  uint64_t v29 = v48;
  uint64_t v30 = v49;
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v47, *MEMORY[0x263F19860], v49);
  uint64_t v51 = v27;
  uint64_t v52 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v31 = v36;
  uint64_t v32 = v41;
  sub_261B8CF18();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v30);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v25, v32);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v40 + 32))(v50, v31, v42);
}

uint64_t sub_261AFDC9C(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v6 = sub_261B8D048();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_261B8D0B8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_261B8D028();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  *(unsigned char *)(v9 + 32) = a3 & 1;
  *(unsigned char *)(v9 + 33) = HIBYTE(a3) & 1;
  swift_bridgeObjectRetain();
  sub_261B8D018();
  sub_261B8D0A8();
  sub_261B8D038();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9474D8);
  sub_2619F8AB8(&qword_26A9474E0, &qword_26A9474D8);
  return sub_261B8D298();
}

uint64_t sub_261AFDE68()
{
  return sub_261AFDE80((uint64_t (*)(void, void, void))sub_261AFDC9C);
}

uint64_t sub_261AFDE80(uint64_t (*a1)(void, void, void))
{
  if (*(unsigned char *)(v1 + 33)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), v2 | *(unsigned __int8 *)(v1 + 32));
}

uint64_t sub_261AFDEB0()
{
  uint64_t v0 = sub_261B8D128();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_261B8D148();
  MEMORY[0x270FA5388](v1 - 8);
  sub_261B8D138();
  sub_261B8D118();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9474E8);
  sub_261AFF858();
  return sub_261B8D068();
}

unint64_t sub_261AFE02C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v67 = a4;
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947528);
  MEMORY[0x270FA5388](v66);
  uint64_t v8 = &v55[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944190);
  MEMORY[0x270FA5388](v65);
  uint64_t v10 = &v55[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_261B8D748();
  MEMORY[0x270FA5388](v11);
  char v13 = (int64x2_t *)&v55[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947500);
  MEMORY[0x270FA5388](v68);
  uint64_t v15 = &v55[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = &v55[-v17];
  if ((a3 & 1) != 0 || sub_261B8D2E8() != a2)
  {
    unint64_t result = sub_261B8D2E8();
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t v48 = result;
      if (result < *(void *)(a1 + 16))
      {
        uint64_t v49 = *(void *)(type metadata accessor for PowerZonesBarChartElement() - 8);
        uint64_t v50 = (uint64_t *)(a1
                        + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))
                        + *(void *)(v49 + 72) * v48);
        uint64_t v51 = v50[1];
        uint64_t v69 = *v50;
        uint64_t v70 = v51;
        sub_261A029C4();
        swift_bridgeObjectRetain();
        *(void *)uint64_t v8 = sub_261B8E3D8();
        *((void *)v8 + 1) = v52;
        v8[16] = v53 & 1;
        *((void *)v8 + 3) = v54;
        swift_storeEnumTagMultiPayload();
        sub_261AFF8D4();
        return sub_261B8DD68();
      }
    }
    __break(1u);
    goto LABEL_15;
  }
  unint64_t result = sub_261B8D2E8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v20 = result;
  if (result >= *(void *)(a1 + 16))
  {
LABEL_16:
    __break(1u);
    return result;
  }
  uint64_t v21 = *(void *)(type metadata accessor for PowerZonesBarChartElement() - 8);
  uint64_t v22 = (uint64_t *)(a1
                  + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))
                  + *(void *)(v21 + 72) * v20);
  uint64_t v23 = v22[1];
  uint64_t v69 = *v22;
  uint64_t v70 = v23;
  sub_261A029C4();
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_261B8E3D8();
  uint64_t v62 = v25;
  uint64_t v63 = v24;
  int v60 = v26;
  uint64_t v64 = v27;
  unsigned __int8 v28 = sub_261B8DFD8();
  char v29 = sub_261B8DFF8();
  char v30 = sub_261B8DFE8();
  sub_261B8DFE8();
  if (sub_261B8DFE8() != v28) {
    char v30 = sub_261B8DFE8();
  }
  sub_261B8DFE8();
  char v31 = sub_261B8DFE8();
  uint64_t v61 = v18;
  if (v31 != v29) {
    char v30 = sub_261B8DFE8();
  }
  sub_261B8D358();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v59 = sub_261B8E878();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v40 = sub_261B8D2E8();
  uint64_t v57 = sub_261AFFEE4(v40);
  int v56 = sub_261B8DFA8();
  uint64_t v41 = &v13->i8[*(int *)(v11 + 20)];
  uint64_t v42 = *MEMORY[0x263F19860];
  uint64_t v43 = sub_261B8DBB8();
  (*(void (**)(__int8 *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 104))(v41, v42, v43);
  *char v13 = vdupq_n_s64(0x7FF0000000000000uLL);
  sub_261B00240((uint64_t)v13, (uint64_t)v10, MEMORY[0x263F19048]);
  *(_WORD *)&v10[*(int *)(v65 + 36)] = 256;
  sub_2619F86F0((uint64_t)v10, (uint64_t)&v15[*(int *)(v68 + 36)], &qword_26A944190);
  uint64_t v45 = v62;
  uint64_t v44 = v63;
  *(void *)uint64_t v15 = v63;
  *((void *)v15 + 1) = v45;
  LOBYTE(v42) = v60 & 1;
  v15[16] = v60 & 1;
  *((void *)v15 + 3) = v64;
  v15[32] = v30;
  *((void *)v15 + 5) = v33;
  *((void *)v15 + 6) = v35;
  *((void *)v15 + 7) = v37;
  *((void *)v15 + 8) = v39;
  v15[72] = 0;
  uint64_t v46 = v59;
  *((void *)v15 + 10) = KeyPath;
  *((void *)v15 + 11) = v46;
  uint64_t v65 = (uint64_t)v13;
  *((void *)v15 + 12) = v57;
  v15[104] = v56;
  sub_261A001D0(v44, v45, v42);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2619F8754((uint64_t)v10, &qword_26A944190);
  sub_261A139D0(v65);
  sub_261A02A18(v44, v45, v42);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v47 = (uint64_t)v61;
  sub_2619FB7EC((uint64_t)v15, (uint64_t)v61, &qword_26A947500);
  sub_2619F86F0(v47, (uint64_t)v8, &qword_26A947500);
  swift_storeEnumTagMultiPayload();
  sub_261AFF8D4();
  sub_261B8DD68();
  return sub_2619F8754(v47, &qword_26A947500);
}

uint64_t sub_261AFE62C()
{
  uint64_t v0 = sub_261B8D048();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_261B8D0B8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_261B8D028();
  MEMORY[0x270FA5388](v2 - 8);
  sub_261B8D018();
  sub_261B8D0A8();
  sub_261B8D038();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9474C8);
  sub_2619F8AB8(&qword_26A9474D0, &qword_26A9474C8);
  return sub_261B8D298();
}

uint64_t sub_261AFE7B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261AFE7CC()
{
  uint64_t v0 = sub_261B8D128();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_261B8D148();
  MEMORY[0x270FA5388](v1 - 8);
  sub_261B8D138();
  sub_261B8D118();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943A98);
  sub_261AFFADC((unint64_t *)&qword_26A943AA0, &qword_26A943A98);
  return sub_261B8D068();
}

double sub_261AFE94C@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = sub_261B8FB88();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_261B8FD48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8FD58();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8D2C8();
  if (BYTE8(v33))
  {
    sub_261B8FD78();
    uint64_t v26 = v13;
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8E208], v1);
    sub_261B8FD28();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_261B8A748();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_261AFF784((unint64_t *)&qword_26A943A90, MEMORY[0x263F07E80]);
    sub_261B8FD68();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_261A029C4();
    uint64_t v28 = sub_261B8E3D8();
    uint64_t v29 = v15;
    uint64_t v30 = v14 & 1;
    uint64_t v31 = v16;
    char v32 = 1;
  }
  else
  {
    sub_261B8FD78();
    uint64_t v26 = v17;
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8E208], v1);
    sub_261B8FD28();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_261B8A748();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_261AFF784((unint64_t *)&qword_26A943A90, MEMORY[0x263F07E80]);
    sub_261B8FD68();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_261A029C4();
    uint64_t v28 = sub_261B8E3D8();
    uint64_t v29 = v18;
    uint64_t v30 = v19 & 1;
    uint64_t v31 = v20;
    char v32 = 0;
  }
  sub_261B8DD68();
  double result = *(double *)&v33;
  long long v22 = v34;
  char v23 = v35;
  uint64_t v24 = v27;
  *uint64_t v27 = v33;
  v24[1] = v22;
  *((unsigned char *)v24 + 32) = v23;
  return result;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for PowerZonesBarChart()
{
  return &type metadata for PowerZonesBarChart;
}

unint64_t sub_261AFEDE4()
{
  unint64_t result = qword_26A9474B0;
  if (!qword_26A9474B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947460);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947450);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9474A0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947448);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947488);
    sub_2619F8AB8(&qword_26A947490, &qword_26A947448);
    sub_2619F8AB8(&qword_26A947498, &qword_26A947488);
    swift_getOpaqueTypeConformance2();
    sub_2619F8AB8(&qword_26A9474A8, &qword_26A9474A0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9474B0);
  }
  return result;
}

uint64_t _s9WorkoutUI23PowerZonesBarChartModelVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s9WorkoutUI23PowerZonesBarChartModelVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t _s9WorkoutUI23PowerZonesBarChartModelVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t _s9WorkoutUI23PowerZonesBarChartModelVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_261AFF0B0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerZonesBarChartModel()
{
  return &type metadata for PowerZonesBarChartModel;
}

uint64_t *sub_261AFF100(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_261B8AE38();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_261AFF1F0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_261B8AE38();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_261AFF268(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_261B8AE38();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_261AFF308(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_261B8AE38();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_261AFF3AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_261B8AE38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_261AFF430(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_261B8AE38();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_261AFF4C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261AFF4D8);
}

uint64_t sub_261AFF4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_261B8AE38();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_261AFF588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261AFF59C);
}

uint64_t sub_261AFF59C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_261B8AE38();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for PowerZonesBarChartElement()
{
  uint64_t result = qword_26A9474B8;
  if (!qword_26A9474B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261AFF690()
{
  uint64_t result = sub_261B8AE38();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_261AFF734()
{
  return sub_261AFF784(&qword_26B416BB8, MEMORY[0x263F07508]);
}

double sub_261AFF77C@<D0>(_OWORD *a1@<X8>)
{
  return sub_261AFE94C(a1);
}

uint64_t sub_261AFF784(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261AFF7CC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 34, 7);
}

uint64_t sub_261AFF804()
{
  return sub_261AFDEB0();
}

unint64_t sub_261AFF82C@<X0>(uint64_t a1@<X8>)
{
  return sub_261AFE02C(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), a1);
}

unint64_t sub_261AFF858()
{
  unint64_t result = qword_26A9474F0;
  if (!qword_26A9474F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9474E8);
    sub_261AFF8D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9474F0);
  }
  return result;
}

unint64_t sub_261AFF8D4()
{
  unint64_t result = qword_26A9474F8;
  if (!qword_26A9474F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947500);
    sub_261AFF974();
    sub_2619F8AB8(&qword_26A9441C0, &qword_26A944190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9474F8);
  }
  return result;
}

unint64_t sub_261AFF974()
{
  unint64_t result = qword_26A947508;
  if (!qword_26A947508)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947510);
    sub_261AFFA14();
    sub_2619F8AB8((unint64_t *)&qword_26A944358, &qword_26A944360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947508);
  }
  return result;
}

unint64_t sub_261AFFA14()
{
  unint64_t result = qword_26A947518;
  if (!qword_26A947518)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947520);
    sub_261AFFADC((unint64_t *)&qword_26A946F50, &qword_26A946F48);
    sub_2619F8AB8((unint64_t *)&qword_26A943AF0, &qword_26A943AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947518);
  }
  return result;
}

uint64_t sub_261AFFADC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

size_t sub_261AFFB4C(uint64_t a1)
{
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947548);
  MEMORY[0x270FA5388](v48);
  uint64_t v42 = (char *)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v46 = (void *)((char *)v41 - v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v41 - v6;
  uint64_t v47 = v8;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  uint64_t v45 = v10;
  v41[1] = a1;
  if (v10)
  {
    uint64_t v43 = (v9 + 32) & ~v9;
    uint64_t v12 = MEMORY[0x263F8EE78] + v43;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = *(void *)(type metadata accessor for PowerZonesBarChartElement() - 8);
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v44 = *(void *)(v15 + 72);
    v41[2] = v9 | 7;
    uint64_t v17 = v11;
    uint64_t v18 = v42;
    while (1)
    {
      uint64_t v20 = v48;
      uint64_t v21 = (uint64_t)&v18[*(int *)(v48 + 48)];
      sub_261B00240(v16, v21, (uint64_t (*)(void))type metadata accessor for PowerZonesBarChartElement);
      uint64_t v22 = (uint64_t)v46;
      uint64_t v23 = (uint64_t)v46 + *(int *)(v20 + 48);
      *uint64_t v46 = v13;
      sub_261B002A8(v21, v23);
      size_t result = sub_2619FB7EC(v22, (uint64_t)v7, &qword_26A947548);
      if (v14)
      {
        uint64_t v11 = v17;
        BOOL v19 = __OFSUB__(v14--, 1);
        if (v19) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v25 = v17[3];
        if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        int64_t v26 = v25 & 0xFFFFFFFFFFFFFFFELL;
        if (v26 <= 1) {
          uint64_t v27 = 1;
        }
        else {
          uint64_t v27 = v26;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A947550);
        uint64_t v28 = *(void *)(v47 + 72);
        uint64_t v29 = v43;
        uint64_t v11 = (void *)swift_allocObject();
        size_t result = _swift_stdlib_malloc_size(v11);
        if (!v28) {
          goto LABEL_34;
        }
        int64_t v30 = result - v29;
        if (result - v29 == 0x8000000000000000 && v28 == -1) {
          goto LABEL_35;
        }
        uint64_t v32 = v30 / v28;
        void v11[2] = v27;
        v11[3] = 2 * (v30 / v28);
        long long v33 = (char *)v11 + v29;
        uint64_t v34 = v17[3] >> 1;
        uint64_t v35 = v34 * v28;
        if (v17[2])
        {
          if (v11 < v17 || v33 >= (char *)v17 + v43 + v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v11 != v17)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          double v17[2] = 0;
        }
        uint64_t v12 = (uint64_t)&v33[v35];
        uint64_t v37 = (v32 & 0x7FFFFFFFFFFFFFFFLL) - v34;
        swift_release();
        uint64_t v18 = v42;
        BOOL v19 = __OFSUB__(v37, 1);
        uint64_t v14 = v37 - 1;
        if (v19)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v13;
      sub_2619FB7EC((uint64_t)v7, v12, &qword_26A947548);
      v12 += *(void *)(v47 + 72);
      v16 += v44;
      uint64_t v17 = v11;
      if (v45 == v13) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v14 = 0;
LABEL_29:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v38 = v11[3];
  if (v38 >= 2)
  {
    unint64_t v39 = v38 >> 1;
    BOOL v19 = __OFSUB__(v39, v14);
    uint64_t v40 = v39 - v14;
    if (v19) {
      goto LABEL_36;
    }
    void v11[2] = v40;
  }
  return (size_t)v11;
}

uint64_t sub_261AFFEE4(uint64_t a1)
{
  uint64_t v2 = sub_261B8E838();
  double v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 0:
      (*(void (**)(char *, void, double))(v3 + 104))(v6, *MEMORY[0x263F1B388], v4);
      v8.n128_u64[0] = 0x3FCE1E1E1E1E1E1ELL;
      v9.n128_u64[0] = 0x3FE4747474747474;
      uint64_t v10 = 0x3FEF3F3F3F3F3F3FLL;
      goto LABEL_7;
    case 1:
      (*(void (**)(char *, void, double))(v3 + 104))(v6, *MEMORY[0x263F1B388], v4);
      v8.n128_u64[0] = 0x3FD0D0D0D0D0D0D1;
      v9.n128_u64[0] = 0x3FEE3E3E3E3E3E3ELL;
      uint64_t v10 = 0x3FEC3C3C3C3C3C3CLL;
LABEL_7:
      v7.n128_u64[0] = v10;
      goto LABEL_13;
    case 2:
      (*(void (**)(char *, void, double))(v3 + 104))(v6, *MEMORY[0x263F1B388], v4);
      v8.n128_u64[0] = 0x3FE7B7B7B7B7B7B8;
      v9.n128_u64[0] = 1.0;
      v7.n128_u64[0] = 0;
      goto LABEL_13;
    case 3:
      (*(void (**)(char *, void, double))(v3 + 104))(v6, *MEMORY[0x263F1B388], v4);
      v9.n128_u64[0] = 0x3FE0505050505050;
      v7.n128_u64[0] = 0x3FA4141414141414;
      v8.n128_u64[0] = 1.0;
      goto LABEL_13;
    case 4:
      (*(void (**)(char *, void, double))(v3 + 104))(v6, *MEMORY[0x263F1B388], v4);
      v9.n128_u64[0] = 0x3FAA1A1A1A1A1A1ALL;
      v7.n128_u64[0] = 0x3FDB9B9B9B9B9B9CLL;
      v8.n128_u64[0] = 1.0;
      goto LABEL_13;
    case 5:
      (*(void (**)(char *, void, double))(v3 + 104))(v6, *MEMORY[0x263F1B388], v4);
      v9.n128_u64[0] = 0x3F94141414141414;
      v7.n128_u64[0] = 0x3FD9191919191919;
      v8.n128_u64[0] = 1.0;
      goto LABEL_13;
    case 6:
      (*(void (**)(char *, void, double))(v3 + 104))(v6, *MEMORY[0x263F1B388], v4);
      v8.n128_u64[0] = 1.0;
      v9.n128_u64[0] = 0;
      v7.n128_u64[0] = 1.0;
LABEL_13:
      uint64_t result = MEMORY[0x263E4C7A0](v6, v8, v9, v7, 1.0);
      break;
    default:
      uint64_t result = sub_261B8E858();
      break;
  }
  return result;
}

uint64_t sub_261B00180@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  if (*(unsigned char *)(v3 + 33)) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  return sub_261AFD628(a1, a2, *(void *)(v3 + 24), v4 | *(unsigned __int8 *)(v3 + 32), a3);
}

uint64_t sub_261B001A8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261B001E0(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947548);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_261B00240(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_261B002A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PowerZonesBarChartElement();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL static WorkoutChartProperties.ChartType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void static WorkoutChartProperties.power(unit:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(self, sel_whiteColor);
  id v5 = objc_msgSend(self, sel_powerColors);
  id v6 = objc_msgSend(v5, sel_nonGradientTextColor);

  if (v6)
  {
    id v7 = objc_msgSend(self, sel_wattUnit);
    id v8 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v7, 100.0);

    objc_msgSend(v8, sel_doubleValueForUnit_, a1);
    uint64_t v10 = v9;

    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.250980392, 0.250980392, 0.250980392, 1.0);
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.682352941, 0.705882353, 0.749019608, 1.0);
    id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.490196078, 0.596078431, 0.0, 0.1);
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.650980392, 1.0, 0.0, 0.53);
    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.301960784, 0.474509804, 0.0, 1.0);
    sub_261B8C1E8();
    uint64_t v16 = sub_261B8C1D8();
    *(void *)a2 = v16;
    *(void *)(a2 + 8) = 0x409C200000000000;
    *(double *)(a2 + 16) = 1800.0 / (double)v16;
    *(void *)(a2 + 24) = 4;
    *(unsigned char *)(a2 + 32) = 0;
    *(void *)(a2 + 40) = 0x4028000000000000;
    *(void *)(a2 + 48) = v6;
    *(void *)(a2 + 56) = 0x7265776F50;
    *(void *)(a2 + 64) = 0xE500000000000000;
    *(unsigned char *)(a2 + 72) = 0;
    *(void *)(a2 + 80) = v10;
    *(unsigned char *)(a2 + 88) = 1;
    *(void *)(a2 + 96) = v4;
    *(void *)(a2 + 104) = v11;
    *(void *)(a2 + 112) = v12;
    *(void *)(a2 + 120) = v13;
    *(void *)(a2 + 128) = v14;
    *(void *)(a2 + 136) = v15;
  }
  else
  {
    __break(1u);
  }
}

void static WorkoutChartProperties.elevation(unit:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = self;
  id v5 = objc_msgSend(v4, sel_elevationColors);
  id v6 = objc_msgSend(v5, sel_valueDisplayColor);

  id v7 = objc_msgSend(v4, sel_elevationColors);
  id v8 = objc_msgSend(v7, sel_nonGradientTextColor);

  if (v8)
  {
    id v9 = objc_msgSend(self, sel_meterUnit);
    id v10 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v9, 10.0);

    objc_msgSend(v10, sel_doubleValueForUnit_, a1);
    uint64_t v12 = v11;

    id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.250980392, 0.250980392, 0.250980392, 1.0);
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.682352941, 0.705882353, 0.749019608, 1.0);
    sub_261B8C1E8();
    uint64_t v15 = sub_261B8C1D8();
    *(void *)a2 = v15;
    *(void *)(a2 + 8) = 0x409C200000000000;
    *(double *)(a2 + 16) = 1800.0 / (double)v15;
    *(void *)(a2 + 24) = 4;
    *(unsigned char *)(a2 + 32) = 1;
    *(void *)(a2 + 40) = 0x4014000000000000;
    *(void *)(a2 + 48) = v8;
    *(void *)(a2 + 56) = 0x6F69746176656C45;
    *(void *)(a2 + 64) = 0xE90000000000006ELL;
    *(unsigned char *)(a2 + 72) = 1;
    *(void *)(a2 + 80) = v12;
    *(unsigned char *)(a2 + 88) = 1;
    *(void *)(a2 + 96) = v6;
    *(void *)(a2 + 104) = v13;
    *(void *)(a2 + 112) = v14;
    *(void *)(a2 + 120) = 0;
    *(void *)(a2 + 128) = 0;
    *(void *)(a2 + 136) = 0;
  }
  else
  {
    __break(1u);
  }
}

uint64_t WorkoutChartProperties.ChartType.hash(into:)()
{
  return sub_261B8FCA8();
}

uint64_t WorkoutChartProperties.ChartType.hashValue.getter()
{
  return sub_261B8FCE8();
}

uint64_t WorkoutChartProperties.maxOnScreenBuckets.getter()
{
  return *(void *)v0;
}

double WorkoutChartProperties.timeWindow.getter()
{
  return *(double *)(v0 + 8);
}

id WorkoutChartProperties.tintColor.getter()
{
  return *(id *)(v0 + 48);
}

uint64_t WorkoutChartProperties.init(timeWindow:maxOnScreenBuckets:horizontalSections:chartType:markWidth:highlightLatestSample:highlightColor:tintColor:valuesName:hasNegativeValues:minimumValueRange:gridColor:textColor:gradientStartColor:gradientEndColor:lineMarkColor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, char a13, long long a14, long long a15, uint64_t a16)
{
  char v16 = *a3;
  *(void *)a9 = result;
  *(double *)(a9 + 8) = a10;
  *(double *)(a9 + 16) = a10 / (double)result;
  *(void *)(a9 + 24) = a2;
  *(unsigned char *)(a9 + 32) = v16;
  *(double *)(a9 + 40) = a11;
  *(void *)(a9 + 48) = a6;
  *(void *)(a9 + 56) = a7;
  *(void *)(a9 + 64) = a8;
  *(unsigned char *)(a9 + 72) = a13;
  *(double *)(a9 + 80) = a12;
  *(unsigned char *)(a9 + 88) = a4;
  *(void *)(a9 + 96) = a5;
  *(_OWORD *)(a9 + 104) = a14;
  *(_OWORD *)(a9 + 120) = a15;
  *(void *)(a9 + 136) = a16;
  return result;
}

unint64_t sub_261B008A0()
{
  unint64_t result = qword_26A947558;
  if (!qword_26A947558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947558);
  }
  return result;
}

void destroy for WorkoutChartProperties(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 136);
}

uint64_t initializeWithCopy for WorkoutChartProperties(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  id v4 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  id v6 = *(void **)(a2 + 96);
  id v7 = *(void **)(a2 + 104);
  *(void *)(a1 + 96) = v6;
  *(void *)(a1 + 104) = v7;
  id v8 = *(void **)(a2 + 112);
  id v9 = *(void **)(a2 + 120);
  *(void *)(a1 + 112) = v8;
  *(void *)(a1 + 120) = v9;
  id v10 = *(void **)(a2 + 128);
  uint64_t v11 = *(void **)(a2 + 136);
  *(void *)(a1 + 128) = v10;
  *(void *)(a1 + 136) = v11;
  id v12 = v4;
  swift_bridgeObjectRetain();
  id v13 = v6;
  id v14 = v7;
  id v15 = v8;
  id v16 = v9;
  id v17 = v10;
  id v18 = v11;
  return a1;
}

uint64_t assignWithCopy for WorkoutChartProperties(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  id v4 = *(void **)(a2 + 48);
  uint64_t v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v4;
  id v6 = v4;

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  id v7 = *(void **)(a1 + 96);
  id v8 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v8;
  id v9 = v8;

  id v10 = *(void **)(a2 + 104);
  uint64_t v11 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 112);
  id v14 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v13;
  id v15 = v13;

  id v16 = *(void **)(a1 + 120);
  id v17 = *(void **)(a2 + 120);
  *(void *)(a1 + 120) = v17;
  id v18 = v17;

  BOOL v19 = *(void **)(a1 + 128);
  uint64_t v20 = *(void **)(a2 + 128);
  *(void *)(a1 + 128) = v20;
  id v21 = v20;

  uint64_t v22 = *(void **)(a1 + 136);
  uint64_t v23 = *(void **)(a2 + 136);
  *(void *)(a1 + 136) = v23;
  id v24 = v23;

  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for WorkoutChartProperties(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v4 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);

  long long v6 = *(void **)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);

  long long v7 = *(void **)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);

  id v8 = *(void **)(a1 + 136);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);

  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutChartProperties(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutChartProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutChartProperties()
{
  return &type metadata for WorkoutChartProperties;
}

unsigned char *storeEnumTagSinglePayload for WorkoutChartProperties.ChartType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261B00DB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutChartProperties.ChartType()
{
  return &type metadata for WorkoutChartProperties.ChartType;
}

uint64_t WorkoutTimeProvidedView.provider.getter()
{
  sub_261B01F98();
  return swift_unknownObjectRetain();
}

uint64_t sub_261B00E18@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WorkoutTimeProvidedView();
  *a1 = sub_261B01F98();
  return swift_unknownObjectRetain();
}

uint64_t sub_261B00E7C()
{
  uint64_t v0 = swift_unknownObjectRetain();
  return WorkoutTimeProvidedView.provider.setter(v0);
}

uint64_t WorkoutTimeProvidedView.provider.setter(uint64_t a1)
{
  uint64_t result = swift_unknownObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*WorkoutTimeProvidedView.provider.modify())()
{
  return nullsub_1;
}

uint64_t WorkoutTimeProvidedView.$provider.getter(uint64_t a1)
{
  return MEMORY[0x270EFFB88](*v1, v1[1], *(void *)(a1 + 16), *(void *)(*(void *)(a1 + 24) + 8));
}

uint64_t WorkoutTimeProvidedView.paused.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t WorkoutTimeProvidedView.paused.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*WorkoutTimeProvidedView.paused.modify())()
{
  return nullsub_1;
}

uint64_t WorkoutTimeProvidedView.init(provider:paused:)@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t result = sub_261B8D5E8();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = a1;
  return result;
}

uint64_t WorkoutTimeProvidedView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v108 = sub_261B8DBD8();
  uint64_t v106 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v105 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_261B8DED8();
  uint64_t v103 = *(void *)(v5 - 8);
  uint64_t v104 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v102 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_261B8D748() - 8;
  MEMORY[0x270FA5388](v101);
  uint64_t v100 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_261B8D668();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v94 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8ADD8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v109 = v9;
  uint64_t v110 = v10;
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v15 = (char *)&v74 - v14;
  uint64_t v79 = sub_261B8DE58();
  uint64_t v76 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  id v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E68);
  MEMORY[0x270FA5388](v75);
  uint64_t v77 = (uint64_t)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  id v21 = (char *)&v74 - v20;
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947560);
  uint64_t v86 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  long long v78 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947568) - 8;
  MEMORY[0x270FA5388](v83);
  long long v80 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947570) - 8;
  MEMORY[0x270FA5388](v85);
  uint64_t v84 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947578);
  MEMORY[0x270FA5388](v91);
  uint64_t v90 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947580);
  uint64_t v99 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v92 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947588);
  MEMORY[0x270FA5388](v98);
  uint64_t v93 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v2[1];
  uint64_t v74 = *v2;
  char v29 = *((unsigned char *)v2 + 16);
  uint64_t v31 = *(void *)(a1 + 16);
  uint64_t v30 = *(void *)(a1 + 24);
  swift_unknownObjectRetain();
  uint64_t v87 = v15;
  sub_261B8BEB8();
  swift_unknownObjectRelease();
  swift_unknownObjectRetain();
  uint64_t v81 = v31;
  uint64_t v82 = v30;
  sub_261B8BEA8();
  swift_unknownObjectRelease();
  uint64_t v32 = v109;
  uint64_t v33 = v110;
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v12, v15, v109);
  sub_261B8DE48();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v33 + 8);
  uint64_t v110 = v33 + 8;
  uint64_t v89 = v34;
  v34(v15, v32);
  uint64_t v35 = v76;
  uint64_t v36 = v79;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v21, v17, v79);
  v21[*(int *)(v75 + 36)] = v29;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v36);
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v31;
  *(void *)(v37 + 24) = v30;
  *(void *)(v37 + 32) = v74;
  *(void *)(v37 + 40) = v28;
  *(unsigned char *)(v37 + 48) = v29;
  sub_2619F86F0((uint64_t)v21, v77, &qword_26A944E68);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_261B01FD8;
  *(void *)(v38 + 24) = v37;
  sub_2619F8AB8(&qword_26A944E90, &qword_26A944E68);
  swift_unknownObjectRetain();
  unint64_t v39 = v78;
  sub_261B8D478();
  sub_2619F8754((uint64_t)v21, &qword_26A944E68);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = v86;
  uint64_t v42 = (uint64_t)v80;
  uint64_t v43 = v88;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v80, v39, v88);
  uint64_t v44 = v42 + *(int *)(v83 + 44);
  *(_WORD *)uint64_t v44 = 256;
  *(void *)(v44 + 8) = KeyPath;
  *(unsigned char *)(v44 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v43);
  uint64_t v45 = swift_getKeyPath();
  uint64_t v46 = v95;
  uint64_t v47 = v94;
  uint64_t v48 = v96;
  (*(void (**)(char *, void, uint64_t))(v95 + 104))(v94, *MEMORY[0x263F18DC8], v96);
  uint64_t v49 = (uint64_t)v84;
  uint64_t v50 = (uint64_t *)&v84[*(int *)(v85 + 44)];
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943A10);
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))((char *)v50 + *(int *)(v51 + 28), v47, v48);
  *uint64_t v50 = v45;
  sub_2619F86F0(v42, v49, &qword_26A947568);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  sub_2619F8754(v42, &qword_26A947568);
  uint64_t v52 = v100;
  char v53 = &v100[*(int *)(v101 + 28)];
  uint64_t v54 = *MEMORY[0x263F19860];
  uint64_t v55 = sub_261B8DBB8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 104))(v53, v54, v55);
  __asm { FMOV            V0.2D, #5.0 }
  *uint64_t v52 = _Q0;
  uint64_t v61 = v91;
  uint64_t v62 = (uint64_t)v90;
  uint64_t v63 = (uint64_t)&v90[*(int *)(v91 + 36)];
  sub_261A1396C((uint64_t)v52, v63);
  *(unsigned char *)(v63 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A943A38) + 36)) = 0;
  sub_2619F86F0(v49, v62, &qword_26A947570);
  sub_261A139D0((uint64_t)v52);
  sub_2619F8754(v49, &qword_26A947570);
  uint64_t v64 = v102;
  sub_261B8DEB8();
  unint64_t v65 = sub_261B02038();
  uint64_t v66 = v92;
  uint64_t v67 = v61;
  sub_261B8E6B8();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v64, v104);
  sub_2619F8754(v62, &qword_26A947578);
  sub_261B8C358();
  swift_unknownObjectRetain();
  uint64_t v68 = v87;
  sub_261B8ADC8();
  sub_261B8BE98();
  swift_unknownObjectRelease();
  v89(v68, v109);
  uint64_t v113 = sub_261B8C348();
  uint64_t v114 = v69;
  uint64_t v111 = v67;
  unint64_t v112 = v65;
  swift_getOpaqueTypeConformance2();
  sub_261A029C4();
  uint64_t v70 = (uint64_t)v93;
  uint64_t v71 = v97;
  sub_261B8E668();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v66, v71);
  uint64_t v72 = v105;
  sub_261B8DBC8();
  sub_261B8D678();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v72, v108);
  return sub_2619F8754(v70, &qword_26A947588);
}

uint64_t sub_261B01B6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_261B8ADD8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944EE0);
  sub_261B8D468();
  sub_261B8BE98();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_261B8C358();
  v11[0] = sub_261B8C338();
  v11[1] = v6;
  sub_261A029C4();
  uint64_t result = sub_261B8E3D8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 16) = v9 & 1;
  *(void *)(a1 + 24) = v10;
  return result;
}

uint64_t sub_261B01CDC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV9WorkoutUI32WorkoutTimeProvidedView_Previews16MockTimeProvider_timelineStartDate;
  uint64_t v2 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_261B01D7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCV9WorkoutUI32WorkoutTimeProvidedView_Previews16MockTimeProvider_timelineStartDate;
  uint64_t v4 = sub_261B8ADD8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

double sub_261B01DF4()
{
  return *(double *)(v0 + OBJC_IVAR____TtCV9WorkoutUI32WorkoutTimeProvidedView_Previews16MockTimeProvider_elapsedTime);
}

uint64_t sub_261B01E04@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WorkoutTimeProvidedView_Previews.MockTimeProvider();
  uint64_t result = sub_261B8D328();
  *a1 = result;
  return result;
}

uint64_t sub_261B01E44@<X0>(uint64_t a1@<X0>, void (*a2)(long long *__return_ptr, char *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944EE0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26A947650);
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t result = v9 - 8;
  if (*(void *)(v11 + 64) == v8)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    a2(&v14, (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    char v12 = v15;
    uint64_t v13 = v16;
    *(_OWORD *)a3 = v14;
    *(unsigned char *)(a3 + 16) = v12;
    *(void *)(a3 + 24) = v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_261B01F98()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_261B01FA0()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 49, 7);
}

uint64_t sub_261B01FD8@<X0>(uint64_t a1@<X8>)
{
  return sub_261B01B6C(a1);
}

uint64_t sub_261B01FE8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261B02020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_261B01E44(a1, *(void (**)(long long *__return_ptr, char *))(v2 + 16), a2);
}

unint64_t sub_261B02038()
{
  unint64_t result = qword_26A947590;
  if (!qword_26A947590)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947578);
    sub_261B020D8();
    sub_2619F8AB8(&qword_26A943A78, &qword_26A943A38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947590);
  }
  return result;
}

unint64_t sub_261B020D8()
{
  unint64_t result = qword_26A947598;
  if (!qword_26A947598)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947570);
    sub_261B02178();
    sub_2619F8AB8(&qword_26A943A70, &qword_26A943A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947598);
  }
  return result;
}

unint64_t sub_261B02178()
{
  unint64_t result = qword_26A9475A0;
  if (!qword_26A9475A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947568);
    sub_261B021F4();
    sub_2619FBA38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9475A0);
  }
  return result;
}

unint64_t sub_261B021F4()
{
  unint64_t result = qword_26A9475A8[0];
  if (!qword_26A9475A8[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947560);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A9475A8);
  }
  return result;
}

uint64_t sub_261B02260()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261B022AC()
{
  return 16;
}

__n128 sub_261B022B8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_261B022C8()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_261B022D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_261B02308(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t sub_261B02360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s9WorkoutUI39ViewedTrainingLoadDetailsAnalyticsEventVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_261B023E8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for WorkoutTimeProvidedView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_261B02440()
{
  return type metadata accessor for WorkoutTimeProvidedView_Previews.MockTimeProvider();
}

uint64_t type metadata accessor for WorkoutTimeProvidedView_Previews.MockTimeProvider()
{
  uint64_t result = qword_26A947630;
  if (!qword_26A947630) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261B02494()
{
  uint64_t result = sub_261B8ADD8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_261B02534()
{
  unint64_t result = qword_26A947640;
  if (!qword_26A947640)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947588);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947578);
    sub_261B02038();
    swift_getOpaqueTypeConformance2();
    sub_261B02668((unint64_t *)&qword_26A943A88, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947640);
  }
  return result;
}

uint64_t sub_261B02614()
{
  return MEMORY[0x263EFDDD8];
}

uint64_t sub_261B02620()
{
  return sub_261B02668(&qword_26A947648, (void (*)(uint64_t))type metadata accessor for WorkoutTimeProvidedView_Previews.MockTimeProvider);
}

uint64_t sub_261B02668(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261B026B4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_261B026EC()
{
  swift_getObjCClassMetadata();
  sub_261B02724();
  return swift_getObjCClassFromMetadata();
}

uint64_t sub_261B02724()
{
  return *(void *)(v0 + 80);
}

id sub_261B0272C(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for CustomLayerTypeView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id sub_261B027B8(double a1, double a2, double a3, double a4)
{
  return sub_261B0272C(a1, a2, a3, a4);
}

id sub_261B027DC(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for CustomLayerTypeView();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id sub_261B02854(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_261B027DC(a3);
}

id sub_261B0287C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CustomLayerTypeView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CustomLayerTypeView()
{
  return __swift_instantiateGenericMetadata();
}

BOOL static IntervalSecondaryMetric.DisplayType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t IntervalSecondaryMetric.DisplayType.hash(into:)()
{
  return sub_261B8FCA8();
}

uint64_t IntervalSecondaryMetric.DisplayType.hashValue.getter()
{
  return sub_261B8FCE8();
}

void static IntervalSecondaryMetric.displayType(for:activityMoveMode:)(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v4 = sub_261B8CE88();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)sub_261B8BC08();
  char v9 = 1;
  unsigned int v10 = objc_msgSend(self, sel_fiui_activitySupportsMetricType_activityType_activityMoveMode_, 1, v8, a1);

  uint64_t v11 = (void *)sub_261B8BC88();
  id v12 = objc_msgSend(v11, sel_goalTypeIdentifier);

  switch((unint64_t)v12)
  {
    case 0uLL:
    case 2uLL:
      if (v10) {
        char v9 = 0;
      }
      else {
        char v9 = 2;
      }
      break;
    case 1uLL:
      break;
    case 3uLL:
      char v9 = v10 ^ 1;
      break;
    default:
      sub_261B8C648();
      swift_retain_n();
      uint64_t v13 = sub_261B8CE78();
      os_log_type_t v14 = sub_261B8F4D8();
      int v15 = v14;
      if (os_log_type_enabled(v13, v14))
      {
        int v25 = v15;
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        uint64_t v27 = v24;
        uint64_t v23 = v16;
        *(_DWORD *)uint64_t v16 = 136315138;
        uint64_t v22 = v16 + 4;
        id v17 = (void *)sub_261B8BC88();
        objc_msgSend(v17, sel_goalTypeIdentifier);

        uint64_t v18 = _sSo18_HKWorkoutGoalTypeV9WorkoutUIE23accessibilityIdentifierSSvg_0();
        uint64_t v26 = sub_261AC9C40(v18, v19, &v27);
        sub_261B8F6F8();
        char v9 = 2;
        swift_release_n();
        swift_bridgeObjectRelease();
        uint64_t v20 = v23;
        uint64_t v21 = v24;
        swift_arrayDestroy();
        MEMORY[0x263E4E970](v21, -1, -1);
        MEMORY[0x263E4E970](v20, -1, -1);
      }
      else
      {

        char v9 = 2;
        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      break;
  }
  *a2 = v9;
}

uint64_t IntervalSecondaryMetric.init(intervalsMetricsPublisher:workoutStatePublisher:step:formattingManager:activityType:activityMoveMode:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  sub_261B8C548();
  sub_261A64C90(&qword_26A943468, MEMORY[0x263F87F58]);
  swift_retain();
  uint64_t v10 = sub_261B8D5E8();
  uint64_t v12 = v11;
  sub_261B8BB48();
  sub_261A64C90(&qword_26A943470, MEMORY[0x263F87C00]);
  uint64_t v13 = sub_261B8D5E8();
  uint64_t v15 = v14;
  uint64_t result = swift_release();
  *a5 = v10;
  a5[1] = v12;
  a5[2] = v13;
  a5[3] = v15;
  a5[4] = a1;
  a5[5] = a2;
  a5[6] = a3;
  a5[7] = a4;
  return result;
}

void IntervalSecondaryMetric.body.getter(uint64_t a1@<X8>)
{
  uint64_t v67 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  MEMORY[0x270FA5388](v2 - 8);
  char v58 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (int *)type metadata accessor for WorkoutTimeView();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v57 = (uint64_t)&v56 - v8;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9476D8);
  MEMORY[0x270FA5388](v56);
  uint64_t v60 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9476E0);
  MEMORY[0x270FA5388](v63);
  uint64_t v59 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v61 = (uint64_t)&v56 - v12;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9476E8);
  MEMORY[0x270FA5388](v65);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9476F0);
  MEMORY[0x270FA5388](v62);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9476F8);
  MEMORY[0x270FA5388](v66);
  uint64_t v64 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)v1[5];
  unint64_t v19 = (void *)v1[6];
  static IntervalSecondaryMetric.displayType(for:activityMoveMode:)(v1[7], &v68);
  if (v68)
  {
    if (v68 == 1)
    {
      swift_retain();
      uint64_t v20 = (uint64_t)v58;
      sub_261B8C518();
      swift_release();
      *(void *)uint64_t v6 = swift_getKeyPath();
      v6[8] = 0;
      *((void *)v6 + 2) = swift_getKeyPath();
      v6[24] = 0;
      uint64_t v21 = (uint64_t)&v6[v4[6]];
      uint64_t v22 = sub_261B8ADD8();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
      uint64_t v23 = v4[7];
      v6[v23] = 0;
      swift_retain();
      sub_261A1F3C0(v20, v21);
      v6[v23] = 0;
      uint64_t v24 = (uint64_t *)&v6[v4[8]];
      sub_261B8BB48();
      sub_261A64C90(&qword_26A943470, MEMORY[0x263F87C00]);
      uint64_t v25 = sub_261B8D5E8();
      uint64_t v27 = v26;
      sub_2619F8754(v20, &qword_26A943B38);
      *uint64_t v24 = v25;
      v24[1] = v27;
      uint64_t v28 = v57;
      sub_261A4C9A0((uint64_t)v6, v57);
      uint64_t v29 = sub_261B8E898();
      uint64_t v30 = v60;
      sub_261A64A30(v28, v60);
      *(void *)(v30 + *(int *)(v56 + 36)) = v29;
      sub_261A64A94(v28);
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v31 = (id)qword_26B416688;
      uint64_t v32 = sub_261B8AA48();
      uint64_t v34 = v33;

      id v35 = objc_msgSend(self, sel_secondaryLabelColor);
      uint64_t v36 = MEMORY[0x263E4C6F0](v35);
      uint64_t v37 = v59;
      sub_2619F86F0(v30, v59, &qword_26A9476D8);
      uint64_t v38 = (uint64_t *)(v37 + *(int *)(v63 + 36));
      *uint64_t v38 = v32;
      v38[1] = v34;
      void v38[2] = v36;
      v38[3] = 0x4008000000000000;
      sub_2619F8754(v30, &qword_26A9476D8);
      uint64_t v39 = v37;
      uint64_t v40 = v61;
      sub_261B03860(v39, v61);
      sub_2619F86F0(v40, (uint64_t)v16, &qword_26A9476E0);
      swift_storeEnumTagMultiPayload();
      sub_261A1E040();
      sub_261B0362C();
      uint64_t v41 = (uint64_t)v64;
      sub_261B8DD68();
      sub_2619F86F0(v41, (uint64_t)v14, &qword_26A9476F8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A947700);
      sub_261B035F0();
      sub_261B03714();
      sub_261B8DD68();
      sub_2619F8754(v41, &qword_26A9476F8);
      sub_2619F8754(v40, &qword_26A9476E0);
    }
    else
    {
      sub_261B8EC98();
      sub_261B8D4D8();
      char v53 = v70;
      uint64_t v54 = v71;
      char v55 = v72;
      *(void *)uint64_t v14 = v69;
      v14[8] = v53;
      *((void *)v14 + 2) = v54;
      v14[24] = v55;
      *((_OWORD *)v14 + 2) = v73;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A947700);
      sub_261B035F0();
      sub_261B03714();
      sub_261B8DD68();
    }
  }
  else
  {
    swift_retain();
    sub_261B8C4F8();
    uint64_t v43 = v42;
    swift_release();
    id v44 = v18;
    uint64_t v45 = FIUIDistanceTypeForActivityType();
    swift_retain();
    swift_retain();
    swift_retain();
    id v46 = v44;
    id v47 = v19;
    uint64_t v48 = (void *)sub_261B8BC88();
    char v49 = sub_261B8F608();

    swift_release();
    swift_release();
    swift_release();

    *(void *)uint64_t v16 = v43;
    uint64_t v50 = 42;
    if (v49) {
      uint64_t v50 = 0;
    }
    *((void *)v16 + 1) = v46;
    *((void *)v16 + 2) = v45;
    *((void *)v16 + 3) = 0;
    v16[32] = 1;
    *((void *)v16 + 5) = v50;
    swift_storeEnumTagMultiPayload();
    sub_261A1E040();
    sub_261B0362C();
    id v51 = v46;
    uint64_t v52 = (uint64_t)v64;
    sub_261B8DD68();
    sub_2619F86F0(v52, (uint64_t)v14, &qword_26A9476F8);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A947700);
    sub_261B035F0();
    sub_261B03714();
    sub_261B8DD68();
    sub_2619F8754(v52, &qword_26A9476F8);
  }
}

uint64_t sub_261B035F0()
{
  return sub_261B03D7C(&qword_26A947708, &qword_26A9476F8, (void (*)(void))sub_261A1E040, (void (*)(void))sub_261B0362C);
}

uint64_t sub_261B0362C()
{
  return sub_261B037C8(&qword_26A947710, &qword_26A9476E0, (void (*)(void))sub_261B03668, (void (*)(void))sub_261A1F190);
}

unint64_t sub_261B03668()
{
  unint64_t result = qword_26A947718;
  if (!qword_26A947718)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9476D8);
    sub_261A64C90(&qword_26A943F48, (void (*)(uint64_t))type metadata accessor for WorkoutTimeView);
    sub_261A561A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947718);
  }
  return result;
}

unint64_t sub_261B03714()
{
  unint64_t result = qword_26A947720;
  if (!qword_26A947720)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947700);
    sub_261B037C8(&qword_26A947728, &qword_26A947730, (void (*)(void))sub_261A26184, (void (*)(void))sub_261AECAE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947720);
  }
  return result;
}

uint64_t sub_261B037C8(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261B03860(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9476E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_261B038CC()
{
  unint64_t result = qword_26A947738;
  if (!qword_26A947738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947738);
  }
  return result;
}

uint64_t sub_261B03920()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeWithCopy for IntervalSecondaryMetric(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v7 = (void *)a2[6];
  uint64_t v6 = a2[7];
  a1[6] = v7;
  a1[7] = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  id v8 = v5;
  id v9 = v7;
  return a1;
}

void *assignWithCopy for IntervalSecondaryMetric(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[5];
  uint64_t v5 = (void *)a1[5];
  a1[5] = v4;
  id v6 = v4;

  uint64_t v7 = (void *)a2[6];
  id v8 = (void *)a1[6];
  a1[6] = v7;
  id v9 = v7;

  a1[7] = a2[7];
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for IntervalSecondaryMetric(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();

  uint64_t v5 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for IntervalSecondaryMetric(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IntervalSecondaryMetric(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IntervalSecondaryMetric()
{
  return &type metadata for IntervalSecondaryMetric;
}

uint64_t getEnumTagSinglePayload for IntervalSecondaryMetric.DisplayType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for IntervalSecondaryMetric.DisplayType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261B03CF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IntervalSecondaryMetric.DisplayType()
{
  return &type metadata for IntervalSecondaryMetric.DisplayType;
}

uint64_t sub_261B03D2C()
{
  return sub_261B03D7C(&qword_26A947740, &qword_26A947748, (void (*)(void))sub_261B035F0, (void (*)(void))sub_261B03714);
}

uint64_t sub_261B03D7C(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double MetricPlatterConstants.init()@<D0>(uint64_t a1@<X8>)
{
  *(double *)a1 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
  *(_OWORD *)(a1 + 8) = xmmword_261B95920;
  *(_OWORD *)(a1 + 24) = xmmword_261B95930;
  double result = 0.0;
  *(_OWORD *)(a1 + 40) = xmmword_261B95940;
  return result;
}

double MetricPlatterConstants.metricMaxHeight.getter()
{
  return *(double *)v0;
}

double MetricPlatterConstants.standardMetricPlatterSpacing.getter()
{
  return *(double *)(v0 + 8);
}

double MetricPlatterConstants.metricHorizontalInset.getter()
{
  return *(double *)(v0 + 16);
}

double MetricPlatterConstants.metricsViewBottomPadding.getter()
{
  return *(double *)(v0 + 24);
}

double MetricPlatterConstants.metricGraphHeight.getter()
{
  return *(double *)(v0 + 32);
}

double MetricPlatterConstants.metricGraphTopInset.getter()
{
  return *(double *)(v0 + 40);
}

double MetricPlatterConstants.heightOfChartLabels.getter()
{
  return *(double *)(v0 + 48);
}

uint64_t getEnumTagSinglePayload for MetricPlatterConstants(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MetricPlatterConstants(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 56) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MetricPlatterConstants()
{
  return &type metadata for MetricPlatterConstants;
}

UIImage *sub_261B03F1C(double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double v11 = 0.0;
  v80.origin.x = 0.0;
  v80.origin.y = 0.0;
  v80.size.width = 0.0;
  v80.size.height = 0.0;
  v73.origin.x = a2;
  v73.origin.y = a3;
  v73.size.width = a4;
  v73.size.height = a5;
  if (CGRectEqualToRect(v73, v80)) {
    return 0;
  }
  double v69 = a1;
  if (a2 != 0.0)
  {
    id v13 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v13, sel_scale);
    double v15 = v14;

    double v11 = CGRound(v15 * a2) / v15;
  }
  double v16 = 0.0;
  double v17 = 0.0;
  if (a3 != 0.0)
  {
    id v18 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v18, sel_scale);
    double v20 = v19;

    double v17 = CGRound(v20 * a3) / v20;
  }
  v74.origin.x = a2;
  v74.origin.y = a3;
  v74.size.width = a4;
  v74.size.height = a5;
  double Width = CGRectGetWidth(v74);
  if (Width != 0.0)
  {
    double v22 = Width;
    id v23 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v23, sel_scale);
    double v25 = v24;

    double v16 = CGRound(v22 * v25) / v25;
  }
  v75.origin.x = a2;
  v75.origin.y = a3;
  v75.size.width = a4;
  v75.size.height = a5;
  double Height = CGRectGetHeight(v75);
  double v27 = 0.0;
  double v28 = 0.0;
  if (Height != 0.0)
  {
    double v29 = Height;
    id v30 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v30, sel_scale);
    double v32 = v31;

    double v28 = CGRound(v29 * v32) / v32;
  }
  objc_msgSend(v5, sel_size);
  if (v33 != 0.0)
  {
    double v34 = v33;
    id v35 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v35, sel_scale);
    double v37 = v36;

    double v27 = CGRound(v34 * v37) / v37;
  }
  objc_msgSend(v5, sel_size);
  double v71 = 0.0;
  double v39 = 0.0;
  if (v38 != 0.0)
  {
    double v40 = v38;
    id v41 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v41, sel_scale);
    double v43 = v42;

    double v39 = CGRound(v40 * v43) / v43;
  }
  v76.origin.x = v11;
  v76.origin.y = v17;
  v76.size.width = v16;
  v76.size.height = v28;
  double v44 = CGRectGetWidth(v76) / v27;
  v77.origin.x = v11;
  v77.origin.y = v17;
  v77.size.width = v16;
  v77.size.height = v28;
  double v45 = CGRectGetHeight(v77) / v39;
  if (v44 > v45) {
    double v46 = v44;
  }
  else {
    double v46 = v45;
  }
  double v47 = v27 * v46;
  if (v47 != 0.0)
  {
    id v48 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v48, sel_scale);
    double v50 = v49;

    double v71 = CGRound(v47 * v50) / v50;
  }
  double v51 = v39 * v46;
  double v70 = 0.0;
  double v52 = 0.0;
  if (v51 != 0.0)
  {
    id v53 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v53, sel_scale);
    double v55 = v54;

    double v52 = CGRound(v51 * v55) / v55;
  }
  v78.origin.x = v11;
  v78.origin.y = v17;
  v78.size.width = v16;
  v78.size.height = v28;
  CGFloat v56 = CGRectGetWidth(v78) - v71;
  v79.origin.x = v11;
  v79.origin.y = v17;
  v79.size.width = v16;
  v79.size.height = v28;
  double v57 = v11 + v56 * 0.5;
  double v58 = v17 + (CGRectGetHeight(v79) - v52) * 0.5;
  if (v57 != 0.0)
  {
    id v59 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v59, sel_scale);
    double v61 = v60;

    double v70 = CGRound(v57 * v61) / v61;
  }
  double v62 = 0.0;
  if (v58 != 0.0)
  {
    id v63 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v63, sel_scale);
    double v65 = v64;

    double v62 = CGRound(v58 * v65) / v65;
  }
  v72.width = v16;
  v72.height = v28;
  UIGraphicsBeginImageContextWithOptions(v72, 0, 0.0);
  id v66 = objc_msgSend(self, sel_bezierPathWithRoundedRect_cornerRadius_, v11, v17, v16, v28, v69);
  objc_msgSend(v66, sel_addClip);
  objc_msgSend(v5, sel_drawInRect_, v70, v62, v71, v52);
  uint64_t v12 = UIGraphicsGetImageFromCurrentImageContext();
  uint64_t v67 = UIGraphicsGetImageFromCurrentImageContext();

  return v12;
}

double CGRound(double a1)
{
  return round(a1);
}

void sub_261B04464(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v28 = sub_261B8BF08();
  uint64_t v7 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  double v27 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10.n128_f64[0] = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v29 = MEMORY[0x263F8EE78];
  uint64_t v26 = *(void *)(a3 + 16);
  if (v26)
  {
    unint64_t v13 = 0;
    uint64_t v21 = a3;
    double v22 = (void (**)(char *, uint64_t))(v7 + 8);
    double v24 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v25 = v7 + 16;
    v20[0] = a1;
    v20[1] = a2;
    while (v13 < *(void *)(a3 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v15 = *(void *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16))(v12, a3 + v14 + v15 * v13, v28, v10);
      char v16 = a1(v12);
      if (v3)
      {
        (*v22)(v12, v28);
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      if (v16)
      {
        id v23 = *v24;
        v23(v27, v12, v28);
        uint64_t v17 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_261ACA338(0, *(void *)(v17 + 16) + 1, 1);
          uint64_t v17 = v29;
        }
        unint64_t v19 = *(void *)(v17 + 16);
        unint64_t v18 = *(void *)(v17 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_261ACA338(v18 > 1, v19 + 1, 1);
          uint64_t v17 = v29;
        }
        *(void *)(v17 + 16) = v19 + 1;
        v23((char *)(v17 + v14 + v19 * v15), v27, v28);
        uint64_t v29 = v17;
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        (*v22)(v12, v28);
      }
      if (v26 == ++v13) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

void sub_261B04708(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  uint64_t v23 = *(void *)(ViewModel - 8);
  MEMORY[0x270FA5388](ViewModel - 8);
  uint64_t v22 = (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v19 - v10;
  uint64_t v24 = MEMORY[0x263F8EE78];
  uint64_t v21 = *(void *)(a3 + 16);
  if (v21)
  {
    unint64_t v12 = 0;
    uint64_t v13 = MEMORY[0x263F8EE78];
    v19[1] = a2;
    uint64_t v20 = a3;
    v19[0] = a1;
    while (v12 < *(void *)(a3 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v15 = *(void *)(v23 + 72);
      sub_261B14374(a3 + v14 + v15 * v12, (uint64_t)v11);
      char v16 = a1(v11);
      if (v3)
      {
        sub_261B143D8((uint64_t)v11);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if (v16)
      {
        sub_261B14434((uint64_t)v11, v22);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_261ACA428(0, *(void *)(v13 + 16) + 1, 1);
        }
        uint64_t v13 = v24;
        unint64_t v18 = *(void *)(v24 + 16);
        unint64_t v17 = *(void *)(v24 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_261ACA428(v17 > 1, v18 + 1, 1);
          uint64_t v13 = v24;
        }
        *(void *)(v13 + 16) = v18 + 1;
        sub_261B14434(v22, v13 + v14 + v18 * v15);
        a3 = v20;
        a1 = (uint64_t (*)(char *))v19[0];
      }
      else
      {
        sub_261B143D8((uint64_t)v11);
      }
      if (v21 == ++v12) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_261B0493C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_261B04994(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8AE38();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_2619F8754(a1, &qword_26B416BC8);
    unint64_t v14 = sub_261ACB4B8(a2);
    if (v15)
    {
      unint64_t v16 = v14;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v18 = *v3;
      uint64_t v22 = *v3;
      uint64_t *v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_261AD0488();
        uint64_t v18 = v22;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(void *)(v18 + 56) + *(void *)(v10 + 72) * v16, v9);
      sub_261B25C20(v16, v18);
      uint64_t *v3 = v18;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_2619F8754((uint64_t)v8, &qword_26B416BC8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_261A0BF50((uint64_t)v13, a2, v19);
    uint64_t *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t static TrainingLoadViewModelProvider.createDayRange(now:days:gregorianCalendar:)@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v57 = a1;
  double v58 = a2;
  uint64_t v54 = a4;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BF8);
  MEMORY[0x270FA5388](v48);
  double v47 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  double v51 = (char *)&v43 - v7;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
  MEMORY[0x270FA5388](v55);
  double v52 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v56 = (uint64_t)&v43 - v10;
  uint64_t v11 = sub_261B8AFC8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_261B8ADD8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_261B8EEC8();
  uint64_t v49 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v43 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))(v18, v57, v15, v23);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v57 = v11;
  uint64_t v53 = v12 + 16;
  v26(v14, a3, v11);
  double v50 = v14;
  sub_261B8EEA8();
  sub_261B8EE98();
  sub_261B15664(&qword_26B416C08, MEMORY[0x263F090E8]);
  double v27 = v21;
  uint64_t v28 = v25;
  uint64_t result = sub_261B8F088();
  if (result)
  {
    uint64_t v30 = v48;
    double v31 = v51;
    double v32 = &v51[*(int *)(v48 + 48)];
    double v58 = v26;
    uint64_t v33 = v49;
    uint64_t v44 = a3;
    double v34 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
    double v46 = v27;
    v34(v51, v27, v19);
    double v43 = v32;
    double v45 = v28;
    v34(v32, v28, v19);
    id v35 = v47;
    double v36 = &v47[*(int *)(v30 + 48)];
    v34(v47, v31, v19);
    v34(v36, v32, v19);
    uint64_t v37 = v30;
    double v38 = v35;
    double v39 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
    uint64_t v40 = (uint64_t)v52;
    v39(v52, v38, v19);
    id v41 = *(void (**)(char *, uint64_t))(v33 + 8);
    v41(v36, v19);
    double v42 = &v38[*(int *)(v37 + 48)];
    v39(v38, v31, v19);
    v39(v42, v43, v19);
    v39((char *)(v40 + *(int *)(v55 + 36)), v42, v19);
    v41(v38, v19);
    sub_261B05128(v40, v56);
    v58(v50, v44, v57);
    sub_261B8C998();
    v41(v46, v19);
    return ((uint64_t (*)(char *, uint64_t))v41)(v45, v19);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_261B05128(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t TrainingLoadViewModelProviderOptions.rawValue.getter()
{
  return *(void *)v0;
}

WorkoutUI::TrainingLoadViewModelProviderOptions __swiftcall TrainingLoadViewModelProviderOptions.init(rawValue:)(WorkoutUI::TrainingLoadViewModelProviderOptions rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static TrainingLoadViewModelProviderOptions.workoutLoad.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static TrainingLoadViewModelProviderOptions.workoutLoadByActivity.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static TrainingLoadViewModelProviderOptions.allDayLoad.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void sub_261B051C4()
{
  uint64_t v0 = unk_270DA3030;
  if ((unk_270DA3030 & ~qword_270DA3028) == 0) {
    uint64_t v0 = 0;
  }
  uint64_t v1 = qword_270DA3038;
  if ((qword_270DA3038 & ~(v0 | qword_270DA3028)) == 0) {
    uint64_t v1 = 0;
  }
  qword_26B416C90 = v1 | v0 | qword_270DA3028;
}

uint64_t static TrainingLoadViewModelProviderOptions.defaultOptions.getter@<X0>(void *a1@<X8>)
{
  if (qword_26B416928 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_26B416C90;
  return result;
}

uint64_t sub_261B05258(char a1)
{
  return sub_261B05344(a1, (uint64_t)&unk_270DA90E0, (uint64_t)sub_261B14CC4, (uint64_t)&block_descriptor_108);
}

uint64_t sub_261B05280(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 24) = a2 & 1;
    return swift_release();
  }
  return result;
}

uint64_t sub_261B052D8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_261B0531C(char a1)
{
  return sub_261B05344(a1, (uint64_t)&unk_270DA9090, (uint64_t)sub_261B14C80, (uint64_t)&block_descriptor_101);
}

uint64_t sub_261B05344(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v18[0] = a4;
  uint64_t v7 = sub_261B8ED78();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_261B8ED98();
  uint64_t v11 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(void *)(v4 + 16);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(unsigned char *)(v15 + 24) = a1;
  aBlock[4] = a3;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_261B052D8;
  aBlock[3] = v18[0];
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  sub_261B8ED88();
  uint64_t v20 = MEMORY[0x263F8EE78];
  sub_261B15664((unint64_t *)&qword_26B416BF0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CB0);
  sub_261B156AC((unint64_t *)&qword_26B416CB8, &qword_26B416CB0);
  sub_261B8F7E8();
  MEMORY[0x263E4D450](0, v13, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
  swift_release();
  return swift_release();
}

uint64_t sub_261B05614(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 25) = a2 & 1;
    return swift_release();
  }
  return result;
}

uint64_t sub_261B0566C(char a1)
{
  return sub_261B05344(a1, (uint64_t)&unk_270DA9040, (uint64_t)sub_261B14C74, (uint64_t)&block_descriptor_94);
}

uint64_t sub_261B05694(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 26) = a2 & 1;
    return swift_release();
  }
  return result;
}

uint64_t sub_261B056EC(uint64_t result)
{
  uint64_t v1 = (void *)result;
  if (*(void *)(result + 32))
  {
    swift_retain();
    sub_261B8F3A8();
    uint64_t result = swift_release();
  }
  if (v1[5])
  {
    swift_retain();
    sub_261B8F3A8();
    uint64_t result = swift_release();
  }
  if (v1[6])
  {
    swift_retain();
    sub_261B8F3A8();
    uint64_t result = swift_release();
  }
  if (v1[8])
  {
    swift_retain();
    sub_261B8F3A8();
    return swift_release();
  }
  return result;
}

uint64_t sub_261B057F8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_261B05820(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_261B05848(uint64_t a1, char a2, uint64_t (*a3)(uint64_t (*)(), uint64_t), uint64_t a4)
{
  v22[1] = a4;
  double v23 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8AE38();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v22 - v14;
  sub_261B8AE28();
  v22[0] = *(void *)(v10 + 16);
  ((void (*)(char *, char *, uint64_t))v22[0])(v8, v15, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  swift_beginAccess();
  sub_261B04994((uint64_t)v8, a2);
  swift_endAccess();
  if (a2)
  {
    if (a2 == 1)
    {
      if (*(void *)(a1 + 48))
      {
        swift_retain();
        sub_261B8F3A8();
        swift_release();
      }
      *(unsigned char *)(a1 + 26) = 0;
    }
    else
    {
      if (*(void *)(a1 + 40))
      {
        swift_retain();
        sub_261B8F3A8();
        swift_release();
      }
      *(unsigned char *)(a1 + 25) = 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 32))
    {
      swift_retain();
      sub_261B8F3A8();
      swift_release();
    }
    *(unsigned char *)(a1 + 24) = 0;
  }
  uint64_t v16 = (void (*)(char *, char *, uint64_t))v22[0];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  v16(v12, v15, v9);
  unint64_t v18 = (*(unsigned __int8 *)(v10 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v17;
  *(unsigned char *)(v19 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v19 + v18, v12, v9);
  swift_retain();
  uint64_t v20 = v23(sub_261B14E88, v19);
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  swift_release();
  if (a2)
  {
    if (a2 == 1) {
      *(void *)(a1 + 48) = v20;
    }
    else {
      *(void *)(a1 + 40) = v20;
    }
  }
  else
  {
    *(void *)(a1 + 32) = v20;
  }
  return swift_release();
}

uint64_t sub_261B05BDC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v22 = a3;
  int v23 = a2;
  uint64_t v3 = sub_261B8ED78();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v25 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8ED98();
  uint64_t v24 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8AE38();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v20 = *(id *)(result + 16);
    swift_release();
    uint64_t v14 = swift_allocObject();
    uint64_t v21 = v6;
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v9);
    unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v14;
    *(unsigned char *)(v16 + 24) = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, v12, v9);
    aBlock[4] = sub_261B14F70;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_261B052D8;
    aBlock[3] = &block_descriptor_158;
    uint64_t v17 = _Block_copy(aBlock);
    swift_retain();
    sub_261B8ED88();
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_261B15664((unint64_t *)&qword_26B416BF0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CB0);
    sub_261B156AC((unint64_t *)&qword_26B416CB8, &qword_26B416CB0);
    unint64_t v18 = v25;
    sub_261B8F7E8();
    uint64_t v19 = v20;
    MEMORY[0x263E4D450](0, v8, v18, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v18, v3);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v21);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_261B05FFC(uint64_t a1, int a2, uint64_t a3)
{
  int v50 = a2;
  uint64_t v4 = sub_261B8CE88();
  uint64_t v48 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v49 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8AE38();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  double v46 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BD0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v44 - v16;
  MEMORY[0x270FA5388](v18);
  double v51 = (char *)&v44 - v19;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v21 = result;
  swift_beginAccess();
  double v47 = (unsigned char *)v21;
  uint64_t v22 = *(void *)(v21 + 56);
  uint64_t v23 = *(void *)(v22 + 16);
  uint64_t v45 = v4;
  if (v23 && (unint64_t v24 = sub_261ACB4B8(v50), (v25 & 1) != 0))
  {
    uint64_t v26 = (uint64_t)v51;
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v51, *(void *)(v22 + 56) + *(void *)(v7 + 72) * v24, v6);
    double v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v27(v26, 0, 1, v6);
  }
  else
  {
    double v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v26 = (uint64_t)v51;
    v27((uint64_t)v51, 1, 1, v6);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v17, a3, v6);
  v27((uint64_t)v17, 0, 1, v6);
  uint64_t v28 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_2619F86F0((uint64_t)v17, (uint64_t)v11, &qword_26B416BC8);
  sub_2619F86F0(v26, v28, &qword_26B416BC8);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v29((uint64_t)v11, 1, v6) == 1)
  {
    sub_2619F8754((uint64_t)v17, &qword_26B416BC8);
    int v30 = v29(v28, 1, v6);
    double v31 = v47;
    if (v30 == 1)
    {
      sub_2619F8754((uint64_t)v11, &qword_26B416BC8);
      uint64_t v32 = (uint64_t)v51;
LABEL_13:
      sub_2619F8754(v32, &qword_26B416BC8);
      if ((_BYTE)v50)
      {
        if (v50 == 1) {
          v31[26] = 1;
        }
        else {
          v31[25] = 1;
        }
      }
      else
      {
        v31[24] = 1;
      }
      return swift_release();
    }
    goto LABEL_11;
  }
  sub_2619F86F0((uint64_t)v11, (uint64_t)v14, &qword_26B416BC8);
  int v33 = v29(v28, 1, v6);
  double v31 = v47;
  if (v33 == 1)
  {
    sub_2619F8754((uint64_t)v17, &qword_26B416BC8);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
LABEL_11:
    sub_2619F8754((uint64_t)v11, &qword_26B416BD0);
    uint64_t v32 = (uint64_t)v51;
    goto LABEL_16;
  }
  double v34 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v46, v28, v6);
  sub_261B15664(&qword_26B416BC0, MEMORY[0x263F07508]);
  char v35 = sub_261B8F0A8();
  double v36 = *(void (**)(char *, uint64_t))(v7 + 8);
  v36(v34, v6);
  sub_2619F8754((uint64_t)v17, &qword_26B416BC8);
  v36(v14, v6);
  sub_2619F8754((uint64_t)v11, &qword_26B416BC8);
  uint64_t v32 = (uint64_t)v51;
  if (v35) {
    goto LABEL_13;
  }
LABEL_16:
  uint64_t v37 = v49;
  sub_261B8C618();
  double v38 = sub_261B8CE78();
  os_log_type_t v39 = sub_261B8F4D8();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v53 = v41;
    *(_DWORD *)uint64_t v40 = 136315138;
    LOBYTE(v52) = v50;
    uint64_t v42 = sub_261B8F138();
    uint64_t v52 = sub_261AC9C40(v42, v43, &v53);
    sub_261B8F6F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2619F0000, v38, v39, "Stale task %s requested finish, but a newer task is running. Ignoring.", v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v41, -1, -1);
    MEMORY[0x263E4E970](v40, -1, -1);

    swift_release();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v45);
  }
  else
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v37, v45);
  }
  return sub_2619F8754(v32, &qword_26B416BC8);
}

uint64_t sub_261B066B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_261B8CE88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8C618();
  uint64_t v6 = sub_261B8CE78();
  os_log_type_t v7 = sub_261B8F4D8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_2619F0000, v6, v7, "Canceling our model queries in deinit of the TaskHolder.", v8, 2u);
    MEMORY[0x263E4E970](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v9 = *(NSObject **)(v1 + 16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_261B144B0;
  *(void *)(v10 + 24) = v1;
  aBlock[4] = sub_261B1578C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_261B05820;
  aBlock[3] = &block_descriptor_116;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v11);
  _Block_release(v11);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();

  swift_release();
  uint64_t result = swift_release();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return v1;
  }
  return result;
}

uint64_t sub_261B0692C()
{
  sub_261B066B8();
  return swift_deallocClassInstance();
}

uint64_t sub_261B0695C()
{
  v8[0] = sub_261B8F558();
  uint64_t v1 = *(void *)(v8[0] - 8);
  MEMORY[0x270FA5388](v8[0]);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_261B8F538();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_261B8ED98();
  MEMORY[0x270FA5388](v5 - 8);
  sub_261A0CCCC(0, (unint64_t *)&qword_26B416D00);
  sub_261B8ED88();
  v8[1] = MEMORY[0x263F8EE78];
  sub_261B15664(&qword_26B416CF8, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CC0);
  sub_261B156AC(&qword_26B416CC8, &qword_26B416CC0);
  sub_261B8F7E8();
  (*(void (**)(char *, void, void))(v1 + 104))(v3, *MEMORY[0x263F8F130], v8[0]);
  *(void *)(v0 + 16) = sub_261B8F598();
  *(_WORD *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 26) = 0;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  uint64_t v6 = MEMORY[0x263F8EE80];
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = v6;
  *(void *)(v0 + 64) = 0;
  return v0;
}

uint64_t sub_261B06BD4()
{
  swift_getKeyPath();
  sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_261B06C74@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 24);
  return result;
}

uint64_t sub_261B06D1C()
{
  return swift_release();
}

uint64_t sub_261B06DEC(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_261B8C9E8();
  uint64_t v5 = *(void **)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  os_log_type_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v18 - v9;
  uint64_t v11 = v2 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  swift_beginAccess();
  uint64_t v12 = (void (*)(char *, uint64_t, uint64_t))v5[2];
  v12(v10, v11, v4);
  swift_beginAccess();
  uint64_t v13 = (void (*)(uint64_t, char *, uint64_t))v5[3];
  uint64_t v19 = a1;
  v13(v11, a1, v4);
  swift_endAccess();
  swift_getKeyPath();
  uint64_t v14 = v2 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  uint64_t v20 = v2;
  v18[0] = sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  v18[1] = v14;
  sub_261B8B038();
  swift_release();
  v12(v7, v11, v4);
  sub_261B15664(&qword_26B416910, MEMORY[0x263F42C20]);
  LOBYTE(v14) = sub_261B8F0A8();
  uint64_t v15 = (void (*)(char *, uint64_t))v5[1];
  v15(v7, v4);
  if ((v14 & 1) == 0)
  {
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    v18[-2] = v2;
    LOBYTE(v18[-1]) = 1;
    uint64_t v20 = v2;
    sub_261B8B028();
    swift_release();
    sub_261B0E1B4(0);
  }
  v15(v19, v4);
  return ((uint64_t (*)(char *, uint64_t))v15)(v10, v4);
}

void (*sub_261B070FC(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x50uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_261B8C9E8();
  v3[4] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v3[5] = v5;
  size_t v7 = *(void *)(v5 + 64);
  v3[6] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v3[7] = v8;
  uint64_t v9 = v1 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  swift_beginAccess();
  uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 16);
  v3[8] = v10;
  v3[9] = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v10(v8, v9, v4);
  return sub_261B07218;
}

void sub_261B07218(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = *(char **)(*a1 + 48);
  uint64_t v3 = *(void **)(*a1 + 56);
  if (a2)
  {
    uint64_t v5 = *(void *)(v2 + 32);
    uint64_t v6 = *(void *)(v2 + 40);
    (*(void (**)(void, void, uint64_t))(v2 + 64))(*(void *)(v2 + 48), *(void *)(v2 + 56), v5);
    sub_261B06DEC(v4);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v5);
  }
  else
  {
    sub_261B06DEC(*(char **)(v2 + 56));
  }
  free(v3);
  free(v4);
  free((void *)v2);
}

uint64_t sub_261B072C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  swift_beginAccess();
  uint64_t v5 = sub_261B8C9E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_261B073C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_261B8C9E8();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  uint64_t v9 = *a2;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B028();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_261B07548@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  swift_beginAccess();
  uint64_t v4 = sub_261B8C9E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for TrainingLoadViewModelProvider()
{
  uint64_t result = qword_26B416918;
  if (!qword_26B416918) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261B07698(uint64_t a1)
{
  swift_getKeyPath();
  sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B028();
  swift_release();
  uint64_t v2 = sub_261B8C9E8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_261B0779C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_261B8C9E8();
  double v4 = MEMORY[0x270FA5388](v3);
  double v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v7 + 16))(v6, a2, v4);
  return sub_261B06DEC(v6);
}

uint64_t sub_261B07870()
{
  return sub_261B0779C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void (*sub_261B0788C(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  void *v3 = v1;
  v3[6] = sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  void *v3 = v1;
  swift_getKeyPath();
  sub_261B8B058();
  swift_release();
  v3[7] = sub_261B070FC(v3);
  return sub_261B079A8;
}

void sub_261B079A8(void *a1)
{
}

uint64_t sub_261B079B4(uint64_t a1)
{
  uint64_t v2 = v1;
  double v4 = (void *)(v2 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__viewModels);
  swift_beginAccess();
  void *v4 = a1;
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t))(v2
                                      + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__unitTest_updatedViewModels);
  swift_getKeyPath();
  swift_retain();
  sub_261B8B038();
  swift_release();
  uint64_t v6 = swift_bridgeObjectRetain();
  v5(v6);
  swift_bridgeObjectRelease();
  return swift_release();
}

void (*sub_261B07B00(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__viewModels;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_261B07B6C;
}

void sub_261B07B6C(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    swift_getKeyPath();
    void *v3 = v4;
    sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
    sub_261B8B038();
    swift_release();
    uint64_t v5 = *(void (**)(uint64_t))(v4
                                        + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__unitTest_updatedViewModels);
    swift_getKeyPath();
    void *v3 = v4;
    swift_retain();
    sub_261B8B038();
    swift_release();
    uint64_t v6 = swift_bridgeObjectRetain();
    v5(v6);
    swift_release();
    swift_bridgeObjectRelease();
  }
  free(v3);
}

uint64_t sub_261B07CA8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  uint64_t v4 = (void *)(v3 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__viewModels);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_261B07D74()
{
  return swift_release();
}

uint64_t sub_261B07E54()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_261B07F20()
{
  return swift_release();
}

uint64_t sub_261B07FF4()
{
  return sub_261B15758();
}

void (*sub_261B0800C(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  void *v3 = v1;
  v3[6] = sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  void *v3 = v1;
  swift_getKeyPath();
  sub_261B8B058();
  swift_release();
  v3[7] = sub_261B07B00(v3);
  return sub_261B08128;
}

void sub_261B08128(void *a1)
{
}

uint64_t (*sub_261B08134())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_261B08190@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_261B08518(a1, &OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__isFetchingDataForNewDateRange, a2);
}

uint64_t sub_261B081A4()
{
  return swift_release();
}

uint64_t sub_261B08274()
{
  return sub_261B086C8((uint64_t)&unk_261B9A000, &OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__isFetchingDataForNewDateRange);
}

uint64_t sub_261B08290()
{
  return swift_release();
}

uint64_t sub_261B08360()
{
  return sub_261B156FC(&OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__isFetchingDataForNewDateRange);
}

void (*sub_261B08380(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  void *v3 = v1;
  v3[6] = sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  void *v3 = v1;
  swift_getKeyPath();
  sub_261B8B058();
  swift_release();
  v3[7] = sub_261B08134();
  return sub_261B0849C;
}

void sub_261B0849C(void *a1)
{
}

uint64_t (*sub_261B084A8())()
{
  return j__swift_endAccess;
}

uint64_t sub_261B08504@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_261B08518(a1, &OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__isLoadingWorkoutViewModelForTheFirstTime, a2);
}

uint64_t sub_261B08518@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, unsigned char *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  uint64_t v6 = (unsigned char *)(v5 + *a2);
  uint64_t result = swift_beginAccess();
  *a3 = *v6;
  return result;
}

uint64_t sub_261B085E4()
{
  return swift_release();
}

uint64_t sub_261B086B4()
{
  return sub_261B086C8((uint64_t)&unk_261B9A028, &OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__isLoadingWorkoutViewModelForTheFirstTime);
}

uint64_t sub_261B086C8(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  uint64_t v4 = (unsigned __int8 *)(v2 + *a2);
  swift_beginAccess();
  return *v4;
}

uint64_t sub_261B08788()
{
  return swift_release();
}

uint64_t sub_261B08858()
{
  return sub_261B156FC(&OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__isLoadingWorkoutViewModelForTheFirstTime);
}

void (*sub_261B08878(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  void *v3 = v1;
  v3[6] = sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  void *v3 = v1;
  swift_getKeyPath();
  sub_261B8B058();
  swift_release();
  v3[7] = sub_261B084A8();
  return sub_261B08994;
}

void sub_261B08994(void *a1)
{
}

void sub_261B089A0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  *uint64_t v1 = v1[4];
  swift_getKeyPath();
  sub_261B8B048();
  swift_release();
  free(v1);
}

uint64_t TrainingLoadViewModelProvider.__allocating_init(dayRange:healthStore:)(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_261B8C9E8();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  if (qword_26B416928 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_26B416C90;
  uint64_t v9 = _s9WorkoutUI29TrainingLoadViewModelProviderC8dayRange11healthStore7optionsAC13HealthBalance012GregorianDayI0V_So08HKHealthK0CAA0cdefG7OptionsVtcfC_0((uint64_t)v8, a2, &v12);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v9;
}

uint64_t sub_261B08B70@<X0>(uint64_t a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  v15[0] = a3;
  v15[1] = a1;
  uint64_t v4 = sub_261B8CA08();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_261B8AFC8();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = sub_261B8CBB8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8C9A8();
  sub_261B8C9C8();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *a2, v4);
  sub_261B8CBA8();
  sub_261B8CB98();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_261B08DA0(uint64_t a1, uint64_t a2)
{
  v13[1] = a2;
  uint64_t v2 = sub_261B8CA08();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_261B8AFC8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_261B8CBB8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8C9A8();
  sub_261B8C9C8();
  *uint64_t v5 = 13;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F42C50], v2);
  sub_261B8CBA8();
  sub_261B8CB98();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_261B08FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_261B8C9E8();
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  MEMORY[0x270FA5388](v6);
  double v36 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  uint64_t v8 = *(void *)(ViewModel - 8);
  MEMORY[0x270FA5388](ViewModel);
  uint64_t v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_261B8CA08();
  uint64_t v43 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  char v35 = ((char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  os_log_type_t v39 = (char *)v34 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B4166C8);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B0948C();
  swift_getKeyPath();
  uint64_t v17 = v2 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  uint64_t v45 = v3;
  v34[1] = sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  v34[2] = v17;
  sub_261B8B038();
  swift_release();
  uint64_t v18 = (uint64_t *)(v3 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__viewModels);
  swift_beginAccess();
  uint64_t v19 = *v18;
  uint64_t v20 = *(void *)(*v18 + 16);
  uint64_t v41 = a2;
  if (v20)
  {
    uint64_t v21 = v19 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v22 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_261B14374(v21, (uint64_t)v10);
      if (sub_261B8C9F8()) {
        break;
      }
      sub_261B143D8((uint64_t)v10);
      v21 += v22;
      if (!--v20) {
        goto LABEL_7;
      }
    }
    sub_261B14434((uint64_t)v10, (uint64_t)v16);
    uint64_t v23 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_7:
    uint64_t v23 = 1;
  }
  unint64_t v24 = v39;
  uint64_t v25 = v40;
  uint64_t v26 = ViewModel;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v16, v23, 1, ViewModel);
  swift_bridgeObjectRelease();
  uint64_t v27 = v43;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v28(v24, a1, v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v16, 1, v26) == 1)
  {
    uint64_t v29 = v35;
    v28((char *)v35, (uint64_t)v24, v25);
    swift_getKeyPath();
    uint64_t v44 = v3;
    int v30 = v24;
    sub_261B8B038();
    swift_release();
    uint64_t v31 = v3 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
    swift_beginAccess();
    uint64_t v32 = (uint64_t)v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, v31, v38);
    TrainingLoadViewModel.init(dataType:dayRange:chronologicalTrainingLoadDaySummaries:)(v29, v32, MEMORY[0x263F8EE78], v41);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v25);
    return sub_2619F8754((uint64_t)v16, &qword_26B4166C8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v25);
    return sub_261B14434((uint64_t)v16, v41);
  }
}

uint64_t sub_261B0948C()
{
  sub_261B8F578();
  if (v3 == 1) {
    sub_261B09588();
  }
  sub_261B8F578();
  if (v2 == 1) {
    sub_261B0AEB0();
  }
  uint64_t result = sub_261B8F578();
  if (v1 == 1) {
    return sub_261B0C858(0);
  }
  return result;
}

uint64_t sub_261B09588()
{
  uint64_t v1 = (uint64_t)v0;
  char v2 = *v0;
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CE0);
  uint64_t v3 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  CGRect v76 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v70 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v82 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_261B8CBF8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v83 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_261B8CA08();
  uint64_t v91 = *(void (**)(uint64_t, uint64_t))(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v89 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_261B8C9E8();
  uint64_t v87 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v88 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_261B8CE88();
  uint64_t v15 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8C618();
  uint64_t v18 = sub_261B8CE78();
  os_log_type_t v19 = sub_261B8F4D8();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v79 = v3;
  CGRect v78 = v7;
  uint64_t v84 = v10;
  uint64_t v81 = v11;
  CGRect v77 = v2;
  if (v20)
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    aBlock[0] = v22;
    *(_DWORD *)uint64_t v21 = 136446210;
    uint64_t v23 = sub_261B8FDA8();
    void aBlock[6] = sub_261AC9C40(v23, v24, aBlock);
    uint64_t v11 = v81;
    sub_261B8F6F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2619F0000, v18, v19, "[%{public}s] Spinning up startWorkoutsQuery", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v22, -1, -1);
    MEMORY[0x263E4E970](v21, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v85);
  swift_getKeyPath();
  aBlock[0] = v1;
  uint64_t v25 = sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  char v26 = *(unsigned char *)(v1 + 24);
  swift_getKeyPath();
  uint64_t v27 = v87;
  uint64_t v28 = v87 + 16;
  uint64_t v30 = (uint64_t)v89;
  uint64_t v29 = v90;
  if (v26)
  {
    aBlock[0] = v1;
    sub_261B8B038();
    swift_release();
    uint64_t v31 = v1 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
    swift_beginAccess();
    uint64_t v32 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v88, v31, v29);
    uint64_t v33 = (uint64_t)v82;
    sub_261B8C9A8();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v32, v29);
    unint64_t v34 = (unint64_t)v83;
    sub_261B8CBE8();
    sub_2619F8754(v33, &qword_26B416CA8);
    char v35 = v91;
    uint64_t v36 = v86;
    (*((void (**)(uint64_t, void, uint64_t))v91 + 13))(v30, *MEMORY[0x263F42C60], v86);
    sub_261B0F424(v34, v30);
    (*((void (**)(uint64_t, uint64_t))v35 + 1))(v30, v36);
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v34, v84);
    sub_261B05258(0);
    return 1;
  }
  aBlock[0] = v1;
  sub_261B8B038();
  swift_release();
  uint64_t v37 = v1 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  swift_beginAccess();
  uint64_t v38 = (uint64_t)v88;
  CGRect v75 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v75(v88, v37, v29);
  unsigned int v39 = *MEMORY[0x263F42C60];
  uint64_t v40 = v91;
  uint64_t v73 = v25;
  uint64_t v41 = (void (*)(void))*((void *)v91 + 13);
  unsigned int v72 = v39;
  uint64_t v74 = v28;
  uint64_t v42 = v86;
  double v71 = (void (*)(char *, void, uint64_t))v41;
  v41(v30);
  SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0 = _s9WorkoutUI13DemoUtilitiesV33fetchTrainingLoadSampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0(v38, v30);
  uint64_t v44 = v30;
  uint64_t v45 = SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0;
  uint64_t v85 = v1;
  double v47 = (void (*)(uint64_t, uint64_t))*((void *)v40 + 1);
  double v46 = (void (*)(uint64_t, uint64_t))((char *)v40 + 8);
  double v70 = v47;
  v47(v44, v42);
  uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v48(v38, v29);
  if (v45)
  {
    swift_getKeyPath();
    uint64_t v91 = v46;
    uint64_t v49 = v42;
    aBlock[0] = v85;
    sub_261B8B038();
    swift_release();
    uint64_t v50 = v90;
    v75((char *)v38, v37, v90);
    sub_261B8C9A8();
    v48(v38, v50);
    unint64_t v51 = (unint64_t)v83;
    sub_261B8CBD8();
    uint64_t v52 = (uint64_t)v89;
    v71(v89, v72, v49);
    sub_261B0F424(v51, v52);
    v70(v52, v49);
    sub_261B05258(0);
    (*(void (**)(unint64_t, uint64_t))(v81 + 8))(v51, v84);
    return 1;
  }
  uint64_t v91 = v48;
  uint64_t v54 = v75;
  uint64_t v55 = v85;
  uint64_t v56 = *(void (**)(char *))(v85
                                      + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeWorkoutLoadSummaryCollectionSequence);
  if (v56)
  {
    swift_getKeyPath();
    aBlock[0] = v55;
    sub_261B8B038();
    swift_release();
    uint64_t v57 = v88;
    uint64_t v58 = v37;
    uint64_t v59 = v90;
    v54(v88, v58, v90);
    double v60 = v76;
    v56(v57);
    v91((uint64_t)v57, v59);
    uint64_t v61 = v79;
    double v62 = v78;
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v60, v80);
    uint64_t v63 = *(void *)(v55 + 16);
    uint64_t v64 = swift_allocObject();
    uint64_t v65 = swift_weakInit();
    MEMORY[0x270FA5388](v65);
    *(&v70 - 4) = (void (*)(uint64_t, uint64_t))v64;
    *(&v70 - 3) = (void (*)(uint64_t, uint64_t))v62;
    *(&v70 - 2) = v77;
    id v66 = *(NSObject **)(v63 + 16);
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = v63;
    *(unsigned char *)(v67 + 24) = 0;
    *(void *)(v67 + 32) = sub_261B15308;
    *(void *)(v67 + 40) = &v70 - 6;
    uint64_t v68 = swift_allocObject();
    *(void *)(v68 + 16) = sub_261B15790;
    *(void *)(v68 + 24) = v67;
    aBlock[4] = (uint64_t)sub_261B1578C;
    aBlock[5] = v68;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_261B05820;
    aBlock[3] = (uint64_t)&block_descriptor_194;
    double v69 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v66, v69);
    _Block_release(v69);
    LOBYTE(v63) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v63)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v80);
      swift_release();
      return 0;
    }
  }
  else
  {
    sub_261B05258(1);
    return 2;
  }
  return result;
}

uint64_t sub_261B0A0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[12] = a7;
  v8[13] = a8;
  _OWORD v8[10] = a5;
  v8[11] = a6;
  v8[9] = a4;
  uint64_t v9 = sub_261B8CA08();
  v8[14] = v9;
  v8[15] = *(void *)(v9 - 8);
  v8[16] = swift_task_alloc();
  uint64_t v10 = sub_261B8CE88();
  v8[17] = v10;
  v8[18] = *(void *)(v10 - 8);
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  uint64_t v11 = sub_261B8CBF8();
  v8[21] = v11;
  v8[22] = *(void *)(v11 - 8);
  v8[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BE8);
  v8[24] = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CD8);
  v8[25] = v12;
  v8[26] = *(void *)(v12 - 8);
  v8[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261B0A2E0, 0, 0);
}

uint64_t sub_261B0A2E0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CE0);
  sub_261B8F3B8();
  swift_beginAccess();
  *(_DWORD *)(v0 + 248) = *MEMORY[0x263F42C60];
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_261B0A3E4;
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 200);
  return MEMORY[0x270FA20F8](v2, 0, 0, v3, v0 + 40);
}

uint64_t sub_261B0A3E4()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_261B0A9F0;
  }
  else {
    uint64_t v1 = sub_261B0A4F4;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_261B0A4F4()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = (*(uint64_t (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
    (*(void (**)(uint64_t))(v0 + 88))(v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 184), v1, v2);
    sub_261B8C618();
    uint64_t v7 = sub_261B8CE78();
    os_log_type_t v8 = sub_261B8F4D8();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 136);
    uint64_t v12 = *(void *)(v0 + 144);
    if (v9)
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v23 = v14;
      *(_DWORD *)uint64_t v13 = 136446210;
      uint64_t v15 = sub_261B8FDA8();
      *(void *)(v13 + 4) = sub_261AC9C40(v15, v16, &v23);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2619F0000, v7, v8, "[%{public}s] Received Workout load day summaries", (uint8_t *)v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v14, -1, -1);
      MEMORY[0x263E4E970](v13, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    uint64_t Strong = swift_weakLoadStrong();
    *(void *)(v0 + 232) = Strong;
    if (Strong)
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 120) + 104))(*(void *)(v0 + 128), *(unsigned int *)(v0 + 248), *(void *)(v0 + 112));
      sub_261B8F378();
      *(void *)(v0 + 240) = sub_261B8F368();
      uint64_t v19 = sub_261B8F328();
      return MEMORY[0x270FA2498](sub_261B0A87C, v19, v18);
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 176) + 8))(*(void *)(v0 + 184), *(void *)(v0 + 168));
      BOOL v20 = (void *)swift_task_alloc();
      *(void *)(v0 + 224) = v20;
      *BOOL v20 = v0;
      v20[1] = sub_261B0A3E4;
      uint64_t v21 = *(void *)(v0 + 192);
      uint64_t v22 = *(void *)(v0 + 200);
      return MEMORY[0x270FA20F8](v21, 0, 0, v22, v0 + 40);
    }
  }
}

uint64_t sub_261B0A87C()
{
  unint64_t v1 = v0[23];
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v4 = v0[14];
  swift_release();
  sub_261B0F424(v1, v2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x270FA2498](sub_261B0A92C, 0, 0);
}

uint64_t sub_261B0A92C()
{
  (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  unint64_t v1 = (void *)swift_task_alloc();
  v0[28] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_261B0A3E4;
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  return MEMORY[0x270FA20F8](v2, 0, 0, v3, v0 + 5);
}

uint64_t sub_261B0A9F0()
{
  uint64_t v23 = v0;
  (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
  unint64_t v1 = *(void **)(v0 + 40);
  sub_261B8C618();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_261B8CE78();
  os_log_type_t v5 = sub_261B8F4B8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void *)(v0 + 144);
    uint64_t v20 = *(void *)(v0 + 136);
    uint64_t v21 = *(void *)(v0 + 152);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v22 = v8;
    *(_DWORD *)uint64_t v7 = 136446466;
    uint64_t v9 = sub_261B8FDA8();
    *(void *)(v0 + 48) = sub_261AC9C40(v9, v10, &v22);
    sub_261B8F6F8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    *(void *)(v0 + 56) = v1;
    id v11 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943900);
    uint64_t v12 = sub_261B8F138();
    *(void *)(v0 + 64) = sub_261AC9C40(v12, v13, &v22);
    sub_261B8F6F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2619F0000, v4, v5, "[%{public}s] Received error for Workout load summary query: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v8, -1, -1);
    MEMORY[0x263E4E970](v7, -1, -1);

    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v21, v20);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 144);
    uint64_t v15 = *(void *)(v0 + 152);
    uint64_t v17 = *(void *)(v0 + 136);

    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  (*(void (**)(uint64_t))(v0 + 88))(v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_261B0ACBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CD0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2619F86F0(a1, (uint64_t)v8, &qword_26B416CD0);
  uint64_t v9 = sub_261B8F398();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2619F8754((uint64_t)v8, &qword_26B416CD0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_261B8F328();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_261B8F388();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    uint64_t v16[2] = v11;
    void v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_261B0AEB0()
{
  uint64_t v1 = (uint64_t)v0;
  id v2 = *v0;
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CE0);
  uint64_t v3 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  CGRect v76 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v70 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v82 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_261B8CBF8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v83 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_261B8CA08();
  uint64_t v91 = *(void (**)(uint64_t, uint64_t))(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v89 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_261B8C9E8();
  uint64_t v87 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v88 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_261B8CE88();
  uint64_t v15 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8C618();
  uint64_t v18 = sub_261B8CE78();
  os_log_type_t v19 = sub_261B8F4D8();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v79 = v3;
  CGRect v78 = v7;
  uint64_t v84 = v10;
  uint64_t v81 = v11;
  CGRect v77 = v2;
  if (v20)
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    aBlock[0] = v22;
    *(_DWORD *)uint64_t v21 = 136446210;
    uint64_t v23 = sub_261B8FDA8();
    void aBlock[6] = sub_261AC9C40(v23, v24, aBlock);
    uint64_t v11 = v81;
    sub_261B8F6F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2619F0000, v18, v19, "[%{public}s] Spinning up allDayQuery", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v22, -1, -1);
    MEMORY[0x263E4E970](v21, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v85);
  swift_getKeyPath();
  aBlock[0] = v1;
  uint64_t v25 = sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  char v26 = *(unsigned char *)(v1 + 24);
  swift_getKeyPath();
  uint64_t v27 = v87;
  uint64_t v28 = v87 + 16;
  uint64_t v30 = (uint64_t)v89;
  uint64_t v29 = v90;
  if (v26)
  {
    aBlock[0] = v1;
    sub_261B8B038();
    swift_release();
    uint64_t v31 = v1 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
    swift_beginAccess();
    uint64_t v32 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v88, v31, v29);
    uint64_t v33 = (uint64_t)v82;
    sub_261B8C9A8();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v32, v29);
    unint64_t v34 = (unint64_t)v83;
    sub_261B8CBE8();
    sub_2619F8754(v33, &qword_26B416CA8);
    char v35 = v91;
    uint64_t v36 = v86;
    (*((void (**)(uint64_t, void, uint64_t))v91 + 13))(v30, *MEMORY[0x263F42C58], v86);
    sub_261B0F424(v34, v30);
    (*((void (**)(uint64_t, uint64_t))v35 + 1))(v30, v36);
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v34, v84);
    sub_261B0566C(0);
    return 1;
  }
  aBlock[0] = v1;
  sub_261B8B038();
  swift_release();
  uint64_t v37 = v1 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  swift_beginAccess();
  uint64_t v38 = (uint64_t)v88;
  CGRect v75 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v75(v88, v37, v29);
  unsigned int v39 = *MEMORY[0x263F42C58];
  uint64_t v40 = v91;
  uint64_t v73 = v25;
  uint64_t v41 = (void (*)(void))*((void *)v91 + 13);
  unsigned int v72 = v39;
  uint64_t v74 = v28;
  uint64_t v42 = v86;
  double v71 = (void (*)(char *, void, uint64_t))v41;
  v41(v30);
  SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0 = _s9WorkoutUI13DemoUtilitiesV33fetchTrainingLoadSampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0(v38, v30);
  uint64_t v44 = v30;
  uint64_t v45 = SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0;
  uint64_t v85 = v1;
  double v47 = (void (*)(uint64_t, uint64_t))*((void *)v40 + 1);
  double v46 = (void (*)(uint64_t, uint64_t))((char *)v40 + 8);
  double v70 = v47;
  v47(v44, v42);
  uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v48(v38, v29);
  if (v45)
  {
    swift_getKeyPath();
    uint64_t v91 = v46;
    uint64_t v49 = v42;
    aBlock[0] = v85;
    sub_261B8B038();
    swift_release();
    uint64_t v50 = v90;
    v75((char *)v38, v37, v90);
    sub_261B8C9A8();
    v48(v38, v50);
    unint64_t v51 = (unint64_t)v83;
    sub_261B8CBD8();
    uint64_t v52 = (uint64_t)v89;
    v71(v89, v72, v49);
    sub_261B0F424(v51, v52);
    v70(v52, v49);
    sub_261B0566C(0);
    (*(void (**)(unint64_t, uint64_t))(v81 + 8))(v51, v84);
    return 1;
  }
  uint64_t v91 = v48;
  uint64_t v54 = v75;
  uint64_t v55 = v85;
  uint64_t v56 = *(void (**)(char *))(v85
                                      + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeAllDayLoadSummaryCollectionSequence);
  if (v56)
  {
    swift_getKeyPath();
    aBlock[0] = v55;
    sub_261B8B038();
    swift_release();
    uint64_t v57 = v88;
    uint64_t v58 = v37;
    uint64_t v59 = v90;
    v54(v88, v58, v90);
    double v60 = v76;
    v56(v57);
    v91((uint64_t)v57, v59);
    uint64_t v61 = v79;
    double v62 = v78;
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v60, v80);
    uint64_t v63 = *(void *)(v55 + 16);
    uint64_t v64 = swift_allocObject();
    uint64_t v65 = swift_weakInit();
    MEMORY[0x270FA5388](v65);
    *(&v70 - 4) = (void (*)(uint64_t, uint64_t))v64;
    *(&v70 - 3) = (void (*)(uint64_t, uint64_t))v62;
    *(&v70 - 2) = v77;
    id v66 = *(NSObject **)(v63 + 16);
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = v63;
    *(unsigned char *)(v67 + 24) = 1;
    *(void *)(v67 + 32) = sub_261B15160;
    *(void *)(v67 + 40) = &v70 - 6;
    uint64_t v68 = swift_allocObject();
    *(void *)(v68 + 16) = sub_261B15790;
    *(void *)(v68 + 24) = v67;
    aBlock[4] = (uint64_t)sub_261B1578C;
    aBlock[5] = v68;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_261B05820;
    aBlock[3] = (uint64_t)&block_descriptor_176;
    double v69 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v66, v69);
    _Block_release(v69);
    LOBYTE(v63) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v63)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v80);
      swift_release();
      return 0;
    }
  }
  else
  {
    sub_261B0566C(1);
    return 2;
  }
  return result;
}

uint64_t sub_261B0B9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v28 = a5;
  uint64_t v29 = a7;
  uint64_t v25 = a6;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CE0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CD0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_261B8F398();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a4, v8);
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v18 = (v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v20 + v17, v11, v8);
  *(void *)(v20 + v18) = v16;
  uint64_t v21 = (void *)(v20 + v19);
  uint64_t v22 = v27;
  *uint64_t v21 = v26;
  v21[1] = v22;
  *(void *)(v20 + ((v19 + 23) & 0xFFFFFFFFFFFFFFF8)) = v28;
  swift_retain();
  uint64_t v23 = sub_261B0ACBC((uint64_t)v14, v29, v20);
  sub_2619F8754((uint64_t)v14, &qword_26B416CD0);
  return v23;
}

uint64_t sub_261B0BC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[12] = a7;
  v8[13] = a8;
  _OWORD v8[10] = a5;
  v8[11] = a6;
  v8[9] = a4;
  uint64_t v9 = sub_261B8CA08();
  v8[14] = v9;
  v8[15] = *(void *)(v9 - 8);
  v8[16] = swift_task_alloc();
  uint64_t v10 = sub_261B8CE88();
  v8[17] = v10;
  v8[18] = *(void *)(v10 - 8);
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  uint64_t v11 = sub_261B8CBF8();
  v8[21] = v11;
  v8[22] = *(void *)(v11 - 8);
  v8[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BE8);
  v8[24] = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CD8);
  v8[25] = v12;
  v8[26] = *(void *)(v12 - 8);
  v8[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261B0BE7C, 0, 0);
}

uint64_t sub_261B0BE7C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CE0);
  sub_261B8F3B8();
  swift_beginAccess();
  *(_DWORD *)(v0 + 248) = *MEMORY[0x263F42C58];
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_261B0BF80;
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 200);
  return MEMORY[0x270FA20F8](v2, 0, 0, v3, v0 + 40);
}

uint64_t sub_261B0BF80()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_261B0C58C;
  }
  else {
    uint64_t v1 = sub_261B0C090;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_261B0C090()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = (*(uint64_t (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
    (*(void (**)(uint64_t))(v0 + 88))(v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 184), v1, v2);
    sub_261B8C618();
    uint64_t v7 = sub_261B8CE78();
    os_log_type_t v8 = sub_261B8F4D8();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 136);
    uint64_t v12 = *(void *)(v0 + 144);
    if (v9)
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v23 = v14;
      *(_DWORD *)uint64_t v13 = 136446210;
      uint64_t v15 = sub_261B8FDA8();
      *(void *)(v13 + 4) = sub_261AC9C40(v15, v16, &v23);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2619F0000, v7, v8, "[%{public}s] Received All day load day summaries", (uint8_t *)v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v14, -1, -1);
      MEMORY[0x263E4E970](v13, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    uint64_t Strong = swift_weakLoadStrong();
    *(void *)(v0 + 232) = Strong;
    if (Strong)
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 120) + 104))(*(void *)(v0 + 128), *(unsigned int *)(v0 + 248), *(void *)(v0 + 112));
      sub_261B8F378();
      *(void *)(v0 + 240) = sub_261B8F368();
      uint64_t v19 = sub_261B8F328();
      return MEMORY[0x270FA2498](sub_261B0C418, v19, v18);
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 176) + 8))(*(void *)(v0 + 184), *(void *)(v0 + 168));
      uint64_t v20 = (void *)swift_task_alloc();
      *(void *)(v0 + 224) = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_261B0BF80;
      uint64_t v21 = *(void *)(v0 + 192);
      uint64_t v22 = *(void *)(v0 + 200);
      return MEMORY[0x270FA20F8](v21, 0, 0, v22, v0 + 40);
    }
  }
}

uint64_t sub_261B0C418()
{
  unint64_t v1 = v0[23];
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v4 = v0[14];
  swift_release();
  sub_261B0F424(v1, v2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x270FA2498](sub_261B0C4C8, 0, 0);
}

uint64_t sub_261B0C4C8()
{
  (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  unint64_t v1 = (void *)swift_task_alloc();
  v0[28] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_261B0BF80;
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  return MEMORY[0x270FA20F8](v2, 0, 0, v3, v0 + 5);
}

uint64_t sub_261B0C58C()
{
  uint64_t v23 = v0;
  (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
  unint64_t v1 = *(void **)(v0 + 40);
  sub_261B8C618();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_261B8CE78();
  os_log_type_t v5 = sub_261B8F4B8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void *)(v0 + 144);
    uint64_t v20 = *(void *)(v0 + 136);
    uint64_t v21 = *(void *)(v0 + 152);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v22 = v8;
    *(_DWORD *)uint64_t v7 = 136446466;
    uint64_t v9 = sub_261B8FDA8();
    *(void *)(v0 + 48) = sub_261AC9C40(v9, v10, &v22);
    sub_261B8F6F8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    *(void *)(v0 + 56) = v1;
    id v11 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943900);
    uint64_t v12 = sub_261B8F138();
    *(void *)(v0 + 64) = sub_261AC9C40(v12, v13, &v22);
    sub_261B8F6F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2619F0000, v4, v5, "[%{public}s] Received error for all day summary query: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v8, -1, -1);
    MEMORY[0x263E4E970](v7, -1, -1);

    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v21, v20);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 144);
    uint64_t v15 = *(void *)(v0 + 152);
    uint64_t v17 = *(void *)(v0 + 136);

    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  (*(void (**)(uint64_t))(v0 + 88))(v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_261B0C858(int a1)
{
  uint64_t v2 = (uint64_t)v1;
  LODWORD(v93) = a1;
  id v3 = *v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CE0);
  uint64_t v91 = *(void (***)(char *, uint64_t, uint64_t))(v4 - 8);
  unint64_t v92 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v88 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v81 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v84 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_261B8CBF8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_261B8CA08();
  uint64_t v85 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v96 = (char **)((char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v99 = sub_261B8C9E8();
  uint64_t v86 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v98 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_261B8CE88();
  uint64_t v17 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v19 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8C618();
  uint64_t v20 = sub_261B8CE78();
  os_log_type_t v21 = sub_261B8F4D8();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v89 = v3;
  uint64_t v90 = v8;
  if (v22)
  {
    uint64_t v83 = v11;
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v95 = v2;
    uint64_t v25 = v24;
    aBlock[0] = v24;
    uint64_t v82 = v12;
    *(_DWORD *)uint64_t v23 = 136446210;
    uint64_t v81 = v14;
    uint64_t v26 = sub_261B8FDA8();
    uint64_t v102 = sub_261AC9C40(v26, v27, aBlock);
    uint64_t v14 = v81;
    uint64_t v12 = v82;
    sub_261B8F6F8();
    uint64_t v11 = v83;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2619F0000, v20, v21, "[%{public}s] Spinning up workoutsByActivityTypeQuery", v23, 0xCu);
    swift_arrayDestroy();
    uint64_t v28 = v25;
    uint64_t v2 = v95;
    MEMORY[0x263E4E970](v28, -1, -1);
    MEMORY[0x263E4E970](v23, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v94);
  swift_getKeyPath();
  uint64_t v29 = v2 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  aBlock[0] = v2;
  uint64_t v30 = sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  if (*(unsigned char *)(v2 + 24))
  {
    swift_getKeyPath();
    aBlock[0] = v2;
    sub_261B8B038();
    swift_release();
    uint64_t v31 = v2 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
    swift_beginAccess();
    uint64_t v32 = v86;
    uint64_t v33 = v98;
    uint64_t v34 = v31;
    uint64_t v35 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v98, v34, v99);
    uint64_t v36 = (uint64_t)v84;
    sub_261B8C9A8();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v35);
    uint64_t v37 = 1;
    sub_261B8CBE8();
    sub_2619F8754(v36, &qword_26B416CA8);
    uint64_t v39 = (uint64_t)v96;
    uint64_t v38 = v97;
    void *v96 = 13;
    uint64_t v40 = v85;
    (*(void (**)(uint64_t, void, uint64_t))(v85 + 104))(v39, *MEMORY[0x263F42C50], v38);
    sub_261B0F424((unint64_t)v14, v39);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v38);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_261B0531C(0);
    return v37;
  }
  if ((v93 & 1) == 0)
  {
    uint64_t v56 = *(void (**)(char *))(v2
                                        + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeWorkoutLoadByActivityTypeSummaryCollectionSequence);
    if (!v56)
    {
      sub_261B0531C(1);
      return 2;
    }
    swift_getKeyPath();
    aBlock[0] = v2;
    sub_261B8B038();
    swift_release();
    uint64_t v57 = v2 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
    swift_beginAccess();
    uint64_t v58 = v86;
    double v60 = v98;
    uint64_t v59 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v98, v57, v99);
    uint64_t v61 = v88;
    v56(v60);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v59);
    double v62 = v90;
    uint64_t v63 = v91;
    v91[4](v90, (uint64_t)v61, v92);
    uint64_t v64 = *(void *)(v2 + 16);
    sub_261B0531C(0);
    uint64_t v65 = swift_allocObject();
    uint64_t v66 = swift_weakInit();
    MEMORY[0x270FA5388](v66);
    *(&v81 - 4) = (char *)v65;
    *(&v81 - 3) = v62;
    *(&v81 - 2) = v89;
    uint64_t v67 = *(NSObject **)(v64 + 16);
    uint64_t v68 = swift_allocObject();
    *(void *)(v68 + 16) = v64;
    *(unsigned char *)(v68 + 24) = 2;
    *(void *)(v68 + 32) = sub_261B14DF0;
    *(void *)(v68 + 40) = &v81 - 6;
    uint64_t v69 = swift_allocObject();
    *(void *)(v69 + 16) = sub_261B14E64;
    *(void *)(v69 + 24) = v68;
    aBlock[4] = (uint64_t)sub_261B1578C;
    aBlock[5] = v69;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_261B05820;
    aBlock[3] = (uint64_t)&block_descriptor_147;
    double v70 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v67, v70);
    _Block_release(v70);
    LOBYTE(v64) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((v64 & 1) == 0)
    {
      ((void (*)(char *, unint64_t))v63[1])(v62, v92);
      swift_release();
      return 0;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v100 = MEMORY[0x263F8EE78];
  uint64_t result = (uint64_t)objc_msgSend(self, sel__allWorkoutActivityTypes);
  if (result)
  {
    uint64_t v42 = (void *)result;
    uint64_t v81 = v14;
    uint64_t v82 = v12;
    sub_261A0CCCC(0, (unint64_t *)&qword_26A947430);
    unint64_t v43 = sub_261B8F2D8();

    uint64_t v95 = v2;
    uint64_t v83 = v11;
    if (v43 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_261B8F9D8();
      uint64_t v44 = result;
      if (result) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v44)
      {
LABEL_9:
        if (v44 >= 1)
        {
          unint64_t v92 = v43 & 0xC000000000000001;
          uint64_t v93 = v95 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
          swift_beginAccess();
          uint64_t v45 = 0;
          uint64_t v91 = (void (**)(char *, uint64_t, uint64_t))(v86 + 16);
          LODWORD(v90) = *MEMORY[0x263F42C50];
          uint64_t v89 = (char *)(v85 + 104);
          uint64_t v88 = (char *)(v85 + 8);
          uint64_t v87 = (void (**)(uint64_t, uint64_t))(v86 + 8);
          uint64_t v94 = v43;
          double v46 = v96;
          do
          {
            if (v92) {
              id v47 = (id)MEMORY[0x263E4D7B0](v45, v43);
            }
            else {
              id v47 = *(id *)(v43 + 8 * v45 + 32);
            }
            uint64_t v48 = v47;
            id v49 = objc_msgSend(v47, sel_unsignedIntegerValue);
            swift_getKeyPath();
            uint64_t v102 = v95;
            uint64_t v50 = v30;
            uint64_t v51 = v29;
            sub_261B8B038();
            swift_release();
            uint64_t v52 = (uint64_t)v98;
            uint64_t v53 = v99;
            (*v91)(v98, v93, v99);
            *double v46 = v49;
            uint64_t v54 = v97;
            (*(void (**)(void *, void, uint64_t))v89)(v46, v90, v97);
            SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0 = _s9WorkoutUI13DemoUtilitiesV33fetchTrainingLoadSampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0(v52, (uint64_t)v46);
            (*(void (**)(void *, uint64_t))v88)(v46, v54);
            (*v87)(v52, v53);
            if (SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0) {
              sub_261AC733C((uint64_t)SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0);
            }

            ++v45;
            uint64_t v29 = v51;
            uint64_t v30 = v50;
            unint64_t v43 = v94;
          }
          while (v44 != v45);
          goto LABEL_22;
        }
        __break(1u);
        goto LABEL_27;
      }
    }
LABEL_22:
    swift_bridgeObjectRelease_n();
    if (*(void *)(v100 + 16))
    {
      swift_getKeyPath();
      uint64_t v71 = v95;
      uint64_t v102 = v95;
      sub_261B8B038();
      swift_release();
      uint64_t v72 = v71 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
      swift_beginAccess();
      uint64_t v73 = v86;
      uint64_t v74 = v98;
      uint64_t v75 = v72;
      uint64_t v76 = v99;
      (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v98, v75, v99);
      sub_261B8C9A8();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v76);
      swift_bridgeObjectRetain();
      unint64_t v77 = (unint64_t)v81;
      sub_261B8CBD8();
      uint64_t v79 = (uint64_t)v96;
      uint64_t v78 = v97;
      void *v96 = 13;
      uint64_t v80 = v85;
      (*(void (**)(uint64_t, void, uint64_t))(v85 + 104))(v79, *MEMORY[0x263F42C50], v78);
      sub_261B0F424(v77, v79);
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v79, v78);
      (*(void (**)(unint64_t, uint64_t))(v82 + 8))(v77, v83);
    }
    sub_261B0531C(0);
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_261B0D5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[12] = a7;
  v8[13] = a8;
  _OWORD v8[10] = a5;
  v8[11] = a6;
  v8[9] = a4;
  uint64_t v9 = sub_261B8CA08();
  v8[14] = v9;
  v8[15] = *(void *)(v9 - 8);
  v8[16] = swift_task_alloc();
  uint64_t v10 = sub_261B8CE88();
  v8[17] = v10;
  v8[18] = *(void *)(v10 - 8);
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  uint64_t v11 = sub_261B8CBF8();
  v8[21] = v11;
  v8[22] = *(void *)(v11 - 8);
  v8[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BE8);
  v8[24] = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CD8);
  v8[25] = v12;
  v8[26] = *(void *)(v12 - 8);
  v8[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261B0D7D0, 0, 0);
}

uint64_t sub_261B0D7D0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CE0);
  sub_261B8F3B8();
  swift_beginAccess();
  *(_DWORD *)(v0 + 248) = *MEMORY[0x263F42C50];
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_261B0D8D4;
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 200);
  return MEMORY[0x270FA20F8](v2, 0, 0, v3, v0 + 40);
}

uint64_t sub_261B0D8D4()
{
  swift_task_dealloc();
  if (v0) {
    unint64_t v1 = sub_261B0DEE8;
  }
  else {
    unint64_t v1 = sub_261B0D9E4;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_261B0D9E4()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = (*(uint64_t (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
    (*(void (**)(uint64_t))(v0 + 88))(v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 184), v1, v2);
    sub_261B8C618();
    uint64_t v7 = sub_261B8CE78();
    os_log_type_t v8 = sub_261B8F4D8();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 136);
    uint64_t v12 = *(void *)(v0 + 144);
    if (v9)
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v24 = v14;
      *(_DWORD *)uint64_t v13 = 136446210;
      uint64_t v15 = sub_261B8FDA8();
      *(void *)(v13 + 4) = sub_261AC9C40(v15, v16, &v24);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2619F0000, v7, v8, "[%{public}s] Received Workout load by activity type day summaries", (uint8_t *)v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v14, -1, -1);
      MEMORY[0x263E4E970](v13, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    uint64_t Strong = swift_weakLoadStrong();
    *(void *)(v0 + 232) = Strong;
    if (Strong)
    {
      uint64_t v18 = *(void *)(v0 + 120);
      **(void **)(v0 + 128) = 13;
      (*(void (**)(void))(v18 + 104))();
      sub_261B8F378();
      *(void *)(v0 + 240) = sub_261B8F368();
      uint64_t v20 = sub_261B8F328();
      return MEMORY[0x270FA2498](sub_261B0DD74, v20, v19);
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 176) + 8))(*(void *)(v0 + 184), *(void *)(v0 + 168));
      os_log_type_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 224) = v21;
      *os_log_type_t v21 = v0;
      v21[1] = sub_261B0D8D4;
      uint64_t v22 = *(void *)(v0 + 192);
      uint64_t v23 = *(void *)(v0 + 200);
      return MEMORY[0x270FA20F8](v22, 0, 0, v23, v0 + 40);
    }
  }
}

uint64_t sub_261B0DD74()
{
  unint64_t v1 = v0[23];
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v4 = v0[14];
  swift_release();
  sub_261B0F424(v1, v2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x270FA2498](sub_261B0DE24, 0, 0);
}

uint64_t sub_261B0DE24()
{
  (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  unint64_t v1 = (void *)swift_task_alloc();
  v0[28] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_261B0D8D4;
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  return MEMORY[0x270FA20F8](v2, 0, 0, v3, v0 + 5);
}

uint64_t sub_261B0DEE8()
{
  uint64_t v23 = v0;
  (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
  unint64_t v1 = *(void **)(v0 + 40);
  sub_261B8C618();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_261B8CE78();
  os_log_type_t v5 = sub_261B8F4B8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void *)(v0 + 144);
    uint64_t v20 = *(void *)(v0 + 136);
    uint64_t v21 = *(void *)(v0 + 152);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v22 = v8;
    *(_DWORD *)uint64_t v7 = 136446466;
    uint64_t v9 = sub_261B8FDA8();
    *(void *)(v0 + 48) = sub_261AC9C40(v9, v10, &v22);
    sub_261B8F6F8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    *(void *)(v0 + 56) = v1;
    id v11 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943900);
    uint64_t v12 = sub_261B8F138();
    *(void *)(v0 + 64) = sub_261AC9C40(v12, v13, &v22);
    sub_261B8F6F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2619F0000, v4, v5, "    [%{public}s] Received error for Workout load by activity type summary query: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v8, -1, -1);
    MEMORY[0x263E4E970](v7, -1, -1);

    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v21, v20);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 144);
    uint64_t v15 = *(void *)(v0 + 152);
    uint64_t v17 = *(void *)(v0 + 136);

    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  (*(void (**)(uint64_t))(v0 + 88))(v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_261B0E1B4(char a1)
{
  id v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CD0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  uint64_t v23 = v2;
  char v24 = a1;
  aBlock[0] = v2;
  sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B028();
  swift_release();
  uint64_t v8 = v2[2];
  uint64_t v9 = *(NSObject **)(v8 + 16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_261B144B0;
  *(void *)(v10 + 24) = v8;
  aBlock[4] = sub_2619FFE24;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_261B05820;
  aBlock[3] = &block_descriptor_4;
  id v11 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v11);
  _Block_release(v11);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v9)
  {
    __break(1u);
  }
  else
  {
    int v13 = sub_261B09588();
    int v14 = sub_261B0AEB0();
    BOOL v16 = v13 == 1 || v14 == 1;
    sub_261B0C858(v16);
    uint64_t v17 = sub_261B8F398();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
    uint64_t v18 = swift_allocObject();
    swift_weakInit();
    uint64_t v19 = (void *)swift_allocObject();
    void v19[2] = 0;
    v19[3] = 0;
    void v19[4] = v18;
    v19[5] = v4;
    uint64_t v20 = sub_261B0ACBC((uint64_t)v7, (uint64_t)&unk_26A947758, (uint64_t)v19);
    sub_2619F8754((uint64_t)v7, &qword_26B416CD0);
    uint64_t v21 = *(void *)(v8 + 64);
    *(void *)(v8 + 64) = v20;
    swift_retain();
    if (v21)
    {
      swift_retain();
      sub_261B8F3A8();
      swift_release_n();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_261B0E530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  uint64_t v6 = sub_261B8CE88();
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BA8);
  v5[11] = swift_task_alloc();
  uint64_t v7 = sub_261B8F5C8();
  v5[12] = v7;
  v5[13] = *(void *)(v7 - 8);
  v5[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261B0E67C, 0, 0);
}

uint64_t sub_261B0E67C()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  sub_261B8F5D8();

  sub_261B8F5B8();
  swift_beginAccess();
  uint64_t v2 = sub_261B15664(&qword_26B416D08, MEMORY[0x263F07C88]);
  id v3 = (void *)swift_task_alloc();
  v0[15] = v3;
  void *v3 = v0;
  v3[1] = sub_261B0E7D4;
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[12];
  return MEMORY[0x270FA1E80](v4, v5, v2);
}

uint64_t sub_261B0E7D4()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_261B0EC44;
  }
  else {
    uint64_t v2 = sub_261B0E8E8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_261B0E8E8()
{
  uint64_t v23 = v0;
  uint64_t v1 = v0[11];
  uint64_t v2 = sub_261B8A898();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    sub_261B8C618();
    uint64_t v5 = sub_261B8CE78();
    os_log_type_t v6 = sub_261B8F4D8();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v9 = v0[9];
    uint64_t v8 = v0[10];
    uint64_t v10 = v0[8];
    if (v7)
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v22 = v12;
      *(_DWORD *)uint64_t v11 = 136446210;
      uint64_t v13 = sub_261B8FDA8();
      *(void *)(v11 + 4) = sub_261AC9C40(v13, v14, &v22);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2619F0000, v5, v6, "[%{public}s] did receive significantTimeChangeNotification notification", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v12, -1, -1);
      MEMORY[0x263E4E970](v11, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    uint64_t Strong = swift_weakLoadStrong();
    v0[17] = Strong;
    if (Strong)
    {
      sub_261B8F378();
      v0[18] = sub_261B8F368();
      uint64_t v17 = sub_261B8F328();
      return MEMORY[0x270FA2498](sub_261B0ECC8, v17, v16);
    }
    else
    {
      sub_2619F8754(v0[11], &qword_26B416BA8);
      uint64_t v18 = sub_261B15664(&qword_26B416D08, MEMORY[0x263F07C88]);
      uint64_t v19 = (void *)swift_task_alloc();
      v0[15] = v19;
      *uint64_t v19 = v0;
      v19[1] = sub_261B0E7D4;
      uint64_t v20 = v0[11];
      uint64_t v21 = v0[12];
      return MEMORY[0x270FA1E80](v20, v21, v18);
    }
  }
}

uint64_t sub_261B0EC44()
{
  *(void *)(v0 + 40) = *(void *)(v0 + 128);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943900);
  uint64_t v1 = MEMORY[0x263F8E628];
  uint64_t v2 = swift_dynamicCast();
  uint64_t v3 = MEMORY[0x263F8E658];
  return MEMORY[0x270FA0678](v2, v1, v3);
}

uint64_t sub_261B0ECC8()
{
  swift_release();
  sub_261B0EE24();
  swift_release();
  return MEMORY[0x270FA2498](sub_261B0ED3C, 0, 0);
}

uint64_t sub_261B0ED3C()
{
  sub_2619F8754(v0[11], &qword_26B416BA8);
  uint64_t v1 = sub_261B15664(&qword_26B416D08, MEMORY[0x263F07C88]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = (uint64_t)v2;
  void *v2 = v0;
  v2[1] = sub_261B0E7D4;
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  return MEMORY[0x270FA1E80](v3, v4, v1);
}

uint64_t sub_261B0EE24()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_261B8AF08();
  uint64_t v48 = *(void *)(v2 - 8);
  uint64_t v49 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v45 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_261B8AFC8();
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v43 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_261B8ADD8();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v41 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C98);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v40 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_261B8C9E8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)v40 - v21;
  type metadata accessor for TrainingLoadViewModelProvider();
  swift_getKeyPath();
  uint64_t v23 = v0 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  uint64_t v52 = v1;
  v40[1] = sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  _OWORD v40[2] = v23;
  sub_261B8B038();
  swift_release();
  uint64_t v50 = v1;
  uint64_t v24 = v1 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v24, v16);
  sub_261B8C9A8();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v17 + 8);
  v25(v19, v16);
  uint64_t v26 = sub_261B8EEC8();
  uint64_t v27 = *(void *)(v26 - 8);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v12, v15, v26);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  v28(v12, 0, 1, v26);
  v28(v9, 1, 1, v26);
  uint64_t v29 = sub_261B1376C((uint64_t)v12, (uint64_t)v9);
  sub_2619F8754((uint64_t)v9, &qword_26B416C98);
  sub_2619F8754((uint64_t)v12, &qword_26B416C98);
  uint64_t result = sub_2619F8754((uint64_t)v15, &qword_26B416CA8);
  BOOL v31 = __OFSUB__(v29, 1);
  uint64_t v32 = (void (*)(char *, uint64_t, uint64_t))(v29 - 1);
  if (v31)
  {
    __break(1u);
  }
  else
  {
    uint64_t v33 = (uint64_t)v41;
    sub_261B8ADA8();
    uint64_t v35 = v48;
    uint64_t v34 = v49;
    uint64_t v36 = v45;
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v45, *MEMORY[0x263F07740], v49);
    uint64_t v37 = (uint64_t)v43;
    sub_261B8AF18();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
    static TrainingLoadViewModelProvider.createDayRange(now:days:gregorianCalendar:)(v33, v32, v37, (uint64_t)v22);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v37, v47);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v33, v44);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    uint64_t v39 = v50;
    v40[-2] = v50;
    v40[-1] = v22;
    uint64_t v51 = v39;
    sub_261B8B028();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v25)(v22, v16);
  }
  return result;
}

uint64_t sub_261B0F424(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v141 = sub_261B8C9E8();
  uint64_t v133 = *(void *)(v141 - 8);
  MEMORY[0x270FA5388](v141);
  uint64_t v140 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_261B8CAD8();
  uint64_t v130 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  uint64_t v128 = (char *)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  long long v136 = (char *)&v119 - v9;
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  uint64_t v143 = *(void *)(ViewModel - 8);
  MEMORY[0x270FA5388](ViewModel - 8);
  uint64_t v138 = (uint64_t)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v147 = (uint64_t)&v119 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v146 = (uint64_t)&v119 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v132 = (uint64_t)&v119 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v129 = (uint64_t)&v119 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v119 - v21;
  uint64_t v23 = sub_261B8CA08();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = ((char *)&v119 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v119 - v29;
  long long v137 = *(void (**)(char *, uint64_t, uint64_t, double))(v24 + 16);
  v137((char *)&v119 - v29, a2, v23, v28);
  unsigned int v31 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v30, v23);
  int v32 = *MEMORY[0x263F42C50];
  unsigned int v139 = v31;
  uint64_t v142 = v3;
  uint64_t v145 = v23;
  uint64_t v120 = v24;
  uint64_t v144 = v26;
  uint64_t v119 = a2;
  unint64_t v131 = a1;
  if (v31 != v32)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v23);
    swift_getKeyPath();
    unsigned __int8 v150 = v3;
    sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
    sub_261B8B038();
    swift_release();
    uint64_t v51 = (void *)((char *)v3 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__viewModels);
    uint64_t v52 = swift_beginAccess();
    uint64_t v53 = *v51;
    MEMORY[0x270FA5388](v52);
    *(&v119 - 2) = a2;
    swift_bridgeObjectRetain();
    uint64_t v54 = v53;
    unint64_t KeyPath = 0;
    sub_261B04708((uint64_t (*)(char *))sub_261B14DD0, (uint64_t)(&v119 - 4), v54);
    uint64_t v56 = a2;
    unint64_t v58 = v57;
    ((void (*)(NSObject *, uint64_t, uint64_t))v137)(v26, v56, v23);
    swift_getKeyPath();
    unint64_t v149 = (unint64_t)v3;
    sub_261B8B038();
    swift_release();
    uint64_t v59 = (char *)v3 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
    swift_beginAccess();
    uint64_t v60 = (uint64_t)v140;
    (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v140, v59, v141);
    uint64_t v61 = sub_261B8CBC8();
    uint64_t v62 = v138;
    TrainingLoadViewModel.init(dataType:dayRange:chronologicalTrainingLoadDaySummaries:)(v26, v60, v61, v138);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v62;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_77;
    }
    goto LABEL_17;
  }
  unint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = (uint64_t)v3 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  unsigned __int8 v150 = v3;
  long long v137 = (void (*)(char *, uint64_t, uint64_t, double))sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  uint64_t v138 = v33;
  sub_261B8B038();
  swift_release();
  uint64_t v34 = (void *)((char *)v3 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__viewModels);
  swift_beginAccess();
  uint64_t v35 = *v34;
  unint64_t v58 = MEMORY[0x263F8EE78];
  unint64_t v149 = MEMORY[0x263F8EE78];
  uint64_t v36 = *(void *)(v35 + 16);
  uint64_t v37 = swift_bridgeObjectRetain();
  *(void *)&long long v127 = v36;
  if (v36)
  {
    unint64_t v38 = 0;
    LODWORD(v125) = *MEMORY[0x263F42C60];
    unint64_t v58 = v24 + 104;
    uint64_t v39 = (void (**)(NSObject *, uint64_t))(v24 + 8);
    unsigned int v121 = *MEMORY[0x263F42C58];
    unint64_t v124 = v24 + 104;
    uint64_t v123 = (void (**)(NSObject *, uint64_t))(v24 + 8);
    uint64_t v126 = v37;
    while (1)
    {
      if (v38 >= *(void *)(v37 + 16))
      {
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
        goto LABEL_76;
      }
      uint64_t v41 = *(void **)(v143 + 72);
      char v135 = (unint64_t *)((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
      long long v134 = v41;
      sub_261B14374((uint64_t)v135 + v37 + (void)v41 * v38, (uint64_t)v22);
      unint64_t KeyPath = *(void *)v58;
      uint64_t v42 = v144;
      uint64_t v24 = v145;
      (*(void (**)(NSObject *, void, uint64_t))v58)(v144, v125, v145);
      char v43 = sub_261B8C9F8();
      uint64_t v44 = *v39;
      (*v39)(v42, v24);
      uint64_t v45 = v129;
      sub_261B14374((uint64_t)v22, v129);
      if (v43) {
        break;
      }
      ((void (*)(NSObject *, void, uint64_t))KeyPath)(v42, v121, v24);
      char v46 = sub_261B8C9F8();
      v44(v42, v24);
      sub_261B143D8(v45);
      if (v46) {
        goto LABEL_11;
      }
      sub_261B143D8((uint64_t)v22);
      uint64_t v40 = v133;
      uint64_t v37 = v126;
      unint64_t v58 = v124;
      uint64_t v39 = v123;
LABEL_6:
      if ((void)v127 == ++v38)
      {
        unint64_t v58 = v149;
        goto LABEL_22;
      }
    }
    sub_261B143D8(v45);
LABEL_11:
    sub_261B14434((uint64_t)v22, v132);
    unint64_t v47 = v149;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_261ACA428(0, *(void *)(v47 + 16) + 1, 1);
      unint64_t v47 = v149;
    }
    unint64_t v58 = v124;
    uint64_t v39 = v123;
    uint64_t v24 = (uint64_t)v135;
    uint64_t v48 = v134;
    unint64_t v50 = *(void *)(v47 + 16);
    unint64_t v49 = *(void *)(v47 + 24);
    unint64_t KeyPath = v50 + 1;
    if (v50 >= v49 >> 1)
    {
      sub_261ACA428(v49 > 1, v50 + 1, 1);
      unint64_t v47 = v149;
    }
    *(void *)(v47 + 16) = KeyPath;
    sub_261B14434(v132, v47 + v24 + v50 * (void)v48);
    uint64_t v40 = v133;
    uint64_t v37 = v126;
    goto LABEL_6;
  }
  uint64_t v40 = v133;
LABEL_22:
  swift_bridgeObjectRelease();
  uint64_t v67 = sub_261B8CBC8();
  unint64_t v149 = MEMORY[0x263F8EE80];
  uint64_t v68 = *(void *)(v67 + 16);
  uint64_t v69 = v122;
  if (v68)
  {
    unint64_t v125 = v58;
    long long v134 = *(void **)(v130 + 16);
    uint64_t v70 = *(unsigned __int8 *)(v130 + 80);
    uint64_t v71 = (v70 + 32) & ~v70;
    uint64_t v126 = v67;
    uint64_t v72 = v67 + v71;
    unint64_t v58 = *(void *)(v130 + 72);
    uint64_t v132 = v71;
    unint64_t v131 = v71 + v58;
    uint64_t v129 = v70 | 7;
    v130 += 16;
    char v135 = (unint64_t *)(v130 + 16);
    unint64_t v73 = MEMORY[0x263F8EE80];
    long long v127 = xmmword_261B93F70;
    ((void (*)(char *, uint64_t, uint64_t))v134)(v136, v67 + v71, v122);
    while (1)
    {
      uint64_t v75 = sub_261B8CA98();
      if (v76) {
        uint64_t v24 = 3000;
      }
      else {
        uint64_t v24 = v75;
      }
      unint64_t v78 = sub_261ACB524(v24);
      uint64_t v79 = *(void *)(v73 + 16);
      BOOL v80 = (v77 & 1) == 0;
      uint64_t v81 = v79 + v80;
      if (__OFADD__(v79, v80)) {
        goto LABEL_73;
      }
      char v82 = v77;
      if (*(void *)(v73 + 24) < v81)
      {
        sub_261ACE4D4(v81, 1);
        unint64_t v73 = v149;
        unint64_t v83 = sub_261ACB524(v24);
        if ((v82 & 1) != (v84 & 1))
        {
          type metadata accessor for HKWorkoutActivityType(0);
          sub_261B8FBF8();
          __break(1u);
LABEL_79:
          uint64_t result = swift_release();
          __break(1u);
          return result;
        }
        unint64_t v78 = v83;
      }
      if (v82)
      {
        uint64_t v85 = *(void *)(v73 + 56);
        unint64_t KeyPath = *v135;
        ((void (*)(char *, char *, uint64_t))*v135)(v128, v136, v69);
        unint64_t v86 = *(void *)(v85 + 8 * v78);
        char v87 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v85 + 8 * v78) = v86;
        if ((v87 & 1) == 0)
        {
          unint64_t v86 = sub_261A0B728(0, *(void *)(v86 + 16) + 1, 1, v86);
          *(void *)(v85 + 8 * v78) = v86;
        }
        unint64_t v89 = *(void *)(v86 + 16);
        unint64_t v88 = *(void *)(v86 + 24);
        if (v89 >= v88 >> 1)
        {
          unint64_t v86 = sub_261A0B728(v88 > 1, v89 + 1, 1, v86);
          *(void *)(v85 + 8 * v78) = v86;
        }
        uint64_t v40 = v133;
        *(void *)(v86 + 16) = v89 + 1;
        uint64_t v74 = v86 + v132 + v89 * v58;
        uint64_t v69 = v122;
        ((void (*)(uint64_t, char *, uint64_t))KeyPath)(v74, v128, v122);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A9438D0);
        unint64_t KeyPath = swift_allocObject();
        *(_OWORD *)(KeyPath + 16) = v127;
        ((void (*)(unint64_t, char *, uint64_t))*v135)(KeyPath + v132, v136, v69);
        *(void *)(v73 + 8 * (v78 >> 6) + 64) |= 1 << v78;
        uint64_t v90 = 8 * v78;
        *(void *)(*(void *)(v73 + 48) + v90) = v24;
        *(void *)(*(void *)(v73 + 56) + v90) = KeyPath;
        uint64_t v91 = *(void *)(v73 + 16);
        BOOL v92 = __OFADD__(v91, 1);
        uint64_t v93 = v91 + 1;
        if (v92) {
          goto LABEL_75;
        }
        *(void *)(v73 + 16) = v93;
      }
      v72 += v58;
      if (!--v68)
      {
        swift_bridgeObjectRelease();
        unint64_t v58 = v125;
        goto LABEL_43;
      }
      ((void (*)(char *, uint64_t, uint64_t))v134)(v136, v72, v69);
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v73 = MEMORY[0x263F8EE80];
LABEL_43:
  uint64_t v94 = *(void *)(v73 + 64);
  long long v134 = (void *)(v73 + 64);
  uint64_t v95 = 1 << *(unsigned char *)(v73 + 32);
  uint64_t v96 = -1;
  if (v95 < 64) {
    uint64_t v96 = ~(-1 << v95);
  }
  uint64_t v24 = v96 & v94;
  long long v136 = (char *)v142 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  swift_beginAccess();
  uint64_t v97 = 0;
  char v135 = (unint64_t *)((unint64_t)(v95 + 63) >> 6);
  uint64_t v98 = (void (**)(NSObject *, void, uint64_t))(v120 + 104);
  uint64_t v99 = (void (**)(char *, char *, uint64_t))(v40 + 16);
  uint64_t v100 = v144;
  if (!v24) {
    goto LABEL_47;
  }
LABEL_46:
  unint64_t v101 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  for (unint64_t i = v101 | (v97 << 6); ; unint64_t i = __clz(__rbit64(v104)) + (v97 << 6))
  {
    uint64_t v106 = 8 * i;
    uint64_t v107 = *(void *)(*(void *)(v73 + 56) + v106);
    v100->isa = *(Class *)(*(void *)(v73 + 48) + v106);
    (*v98)(v100, v139, v145);
    swift_getKeyPath();
    uint64_t v148 = v142;
    swift_bridgeObjectRetain();
    sub_261B8B038();
    swift_release();
    uint64_t v108 = (uint64_t)v140;
    (*v99)(v140, v136, v141);
    uint64_t v109 = v146;
    TrainingLoadViewModel.init(dataType:dayRange:chronologicalTrainingLoadDaySummaries:)(v100, v108, v107, v146);
    sub_261B14374(v109, v147);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v58 = sub_261A0B75C(0, *(void *)(v58 + 16) + 1, 1, v58);
    }
    unint64_t KeyPath = *(void *)(v58 + 16);
    unint64_t v110 = *(void *)(v58 + 24);
    if (KeyPath >= v110 >> 1) {
      unint64_t v58 = sub_261A0B75C(v110 > 1, KeyPath + 1, 1, v58);
    }
    *(void *)(v58 + 16) = KeyPath + 1;
    sub_261B14434(v147, v58+ ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80))+ *(void *)(v143 + 72) * KeyPath);
    sub_261B143D8(v146);
    if (v24) {
      goto LABEL_46;
    }
LABEL_47:
    uint64_t v103 = v97 + 1;
    if (__OFADD__(v97, 1)) {
      goto LABEL_74;
    }
    if (v103 >= (uint64_t)v135)
    {
LABEL_67:
      swift_release();
      unint64_t KeyPath = 0;
      uint64_t v66 = v120;
      goto LABEL_68;
    }
    unint64_t v104 = v134[v103];
    ++v97;
    if (!v104)
    {
      uint64_t v97 = v103 + 1;
      if (v103 + 1 >= (uint64_t)v135) {
        goto LABEL_67;
      }
      unint64_t v104 = v134[v97];
      if (!v104)
      {
        uint64_t v97 = v103 + 2;
        if (v103 + 2 >= (uint64_t)v135) {
          goto LABEL_67;
        }
        unint64_t v104 = v134[v97];
        if (!v104) {
          break;
        }
      }
    }
LABEL_60:
    uint64_t v24 = (v104 - 1) & v104;
  }
  uint64_t v105 = v103 + 3;
  if (v105 >= (uint64_t)v135) {
    goto LABEL_67;
  }
  unint64_t v104 = v134[v105];
  if (v104)
  {
    uint64_t v97 = v105;
    goto LABEL_60;
  }
  while (1)
  {
    uint64_t v97 = v105 + 1;
    if (__OFADD__(v105, 1)) {
      break;
    }
    if (v97 >= (uint64_t)v135) {
      goto LABEL_67;
    }
    unint64_t v104 = v134[v97];
    ++v105;
    if (v104) {
      goto LABEL_60;
    }
  }
LABEL_76:
  __break(1u);
LABEL_77:
  unint64_t v58 = sub_261A0B75C(0, *(void *)(v58 + 16) + 1, 1, v58);
LABEL_17:
  unint64_t v65 = *(void *)(v58 + 16);
  unint64_t v64 = *(void *)(v58 + 24);
  uint64_t v66 = v120;
  if (v65 >= v64 >> 1) {
    unint64_t v58 = sub_261A0B75C(v64 > 1, v65 + 1, 1, v58);
  }
  *(void *)(v58 + 16) = v65 + 1;
  sub_261B14434(v24, v58+ ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80))+ *(void *)(v143 + 72) * v65);
LABEL_68:
  uint64_t v148 = (void *)v58;
  swift_bridgeObjectRetain_n();
  sub_261B10ACC(&v148);
  if (KeyPath) {
    goto LABEL_79;
  }
  swift_bridgeObjectRelease_n();
  uint64_t v111 = v148;
  uint64_t v112 = swift_getKeyPath();
  MEMORY[0x270FA5388](v112);
  uint64_t v113 = v142;
  *(&v119 - 2) = (uint64_t)v142;
  *(&v119 - 1) = (uint64_t)v111;
  uint64_t v148 = v113;
  sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B028();
  swift_release();
  swift_release();
  uint64_t v115 = v144;
  uint64_t v114 = v145;
  (*(void (**)(NSObject *, void, uint64_t))(v66 + 104))(v144, *MEMORY[0x263F42C60], v145);
  LOBYTE(v111) = sub_261B8C9F8();
  uint64_t result = (*(uint64_t (**)(NSObject *, uint64_t))(v66 + 8))(v115, v114);
  if (v111)
  {
    uint64_t v117 = swift_getKeyPath();
    MEMORY[0x270FA5388](v117);
    *(&v119 - 2) = (uint64_t)v113;
    *((unsigned char *)&v119 - 8) = 0;
    uint64_t v148 = v113;
    sub_261B8B028();
    swift_release();
    uint64_t v118 = swift_getKeyPath();
    MEMORY[0x270FA5388](v118);
    *(&v119 - 2) = (uint64_t)v113;
    *((unsigned char *)&v119 - 8) = 0;
    uint64_t v148 = v113;
    sub_261B8B028();
    return swift_release();
  }
  return result;
}

BOOL sub_261B10560(uint64_t a1)
{
  uint64_t v2 = sub_261B8CA08();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, a1, v2, v4);
  sub_261B15664(&qword_26B416BE0, MEMORY[0x263F42C68]);
  char v7 = sub_261B8F0A8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (v7 & 1) == 0;
}

uint64_t sub_261B106A8()
{
  swift_getKeyPath();
  sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__unitTest_updatedViewModels);
  swift_retain();
  return v1;
}

uint64_t sub_261B10764@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__unitTest_updatedViewModels);
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__unitTest_updatedViewModels + 8);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  *a2 = sub_261B14DA4;
  a2[1] = v6;
  return swift_retain();
}

uint64_t sub_261B10848(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  swift_getKeyPath();
  sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  swift_retain();
  sub_261B8B028();
  swift_release();
  return swift_release();
}

uint64_t TrainingLoadViewModelProvider.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  uint64_t v2 = sub_261B8C9E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_261AD5928(*(void *)(v0
                          + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeAllDayLoadSummaryCollectionSequence));
  sub_261AD5928(*(void *)(v0
                          + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeWorkoutLoadSummaryCollectionSequence));
  sub_261AD5928(*(void *)(v0
                          + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeWorkoutLoadByActivityTypeSummaryCollectionSequence));
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  uint64_t v4 = sub_261B8B078();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t TrainingLoadViewModelProvider.__deallocating_deinit()
{
  TrainingLoadViewModelProvider.deinit();
  return swift_deallocClassInstance();
}

void sub_261B10ACC(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for TrainingLoadViewModel(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_261B13B1C(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_261B10B74(v5);
  *a1 = v3;
}

void sub_261B10B74(uint64_t *a1)
{
  uint64_t v2 = sub_261B8CA08();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  v217 = (char *)&v202 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v226 = (char *)&v202 - v6;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v202 - v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v202 - v11;
  MEMORY[0x270FA5388](v13);
  v207 = (char *)&v202 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v208 = (char *)&v202 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v202 - v18;
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  uint64_t v225 = *(void *)(ViewModel - 8);
  MEMORY[0x270FA5388](ViewModel);
  uint64_t v214 = (uint64_t)&v202 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v242 = (uint64_t)&v202 - v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v231 = (uint64_t)&v202 - v24;
  MEMORY[0x270FA5388](v25);
  uint64_t v246 = (uint64_t)&v202 - v26;
  MEMORY[0x270FA5388](v27);
  uint64_t v218 = (uint64_t)&v202 - v28;
  MEMORY[0x270FA5388](v29);
  uint64_t v224 = (uint64_t)&v202 - v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v210 = (uint64_t)&v202 - v32;
  MEMORY[0x270FA5388](v33);
  uint64_t v211 = (uint64_t)&v202 - v34;
  uint64_t v35 = a1[1];
  uint64_t v36 = sub_261B8FB68();
  if (v36 >= v35)
  {
    if (v35 < 0) {
      goto LABEL_209;
    }
    if (v35) {
      sub_261B121E4(0, v35, 1, a1);
    }
    return;
  }
  if (v35 >= 0) {
    uint64_t v37 = v35;
  }
  else {
    uint64_t v37 = v35 + 1;
  }
  if (v35 < -1) {
    goto LABEL_217;
  }
  uint64_t v209 = v36;
  if (v35 < 2)
  {
    unint64_t v223 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v225 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v225 + 80));
    uint64_t v206 = MEMORY[0x263F8EE78];
    if (v35 != 1)
    {
      unint64_t v44 = *(void *)(MEMORY[0x263F8EE78] + 16);
      char v43 = (char *)MEMORY[0x263F8EE78];
LABEL_172:
      if (v44 >= 2)
      {
        uint64_t v194 = *a1;
        uint64_t v193 = v206;
        while (1)
        {
          unint64_t v195 = v44 - 2;
          if (v44 < 2) {
            goto LABEL_204;
          }
          if (!v194) {
            goto LABEL_216;
          }
          uint64_t v196 = v43;
          uint64_t v197 = *(void *)&v43[16 * v195 + 32];
          uint64_t v198 = *(void *)&v43[16 * v44 + 24];
          uint64_t v199 = v228;
          sub_261B12834(v194 + *(void *)(v225 + 72) * v197, v194 + *(void *)(v225 + 72) * *(void *)&v43[16 * v44 + 16], v194 + *(void *)(v225 + 72) * v198, v223);
          if (v199) {
            goto LABEL_185;
          }
          if (v198 < v197) {
            goto LABEL_205;
          }
          uint64_t v228 = 0;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v196 = sub_261B13758((uint64_t)v196);
          }
          if (v195 >= *((void *)v196 + 2)) {
            goto LABEL_206;
          }
          uint64_t v200 = &v196[16 * v195 + 32];
          *(void *)uint64_t v200 = v197;
          *((void *)v200 + 1) = v198;
          unint64_t v201 = *((void *)v196 + 2);
          if (v44 > v201) {
            goto LABEL_207;
          }
          memmove(&v196[16 * v44 + 16], &v196[16 * v44 + 32], 16 * (v201 - v44));
          char v43 = v196;
          *((void *)v196 + 2) = v201 - 1;
          unint64_t v44 = v201 - 1;
          if (v201 <= 2) {
            goto LABEL_185;
          }
        }
      }
      uint64_t v193 = v206;
LABEL_185:
      swift_bridgeObjectRelease();
      *(void *)(v193 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v204 = (unint64_t *)v9;
  }
  else
  {
    uint64_t v204 = (unint64_t *)v9;
    uint64_t v38 = v37 >> 1;
    uint64_t v39 = sub_261B8F308();
    *(void *)(v39 + 16) = v38;
    uint64_t v40 = *(unsigned __int8 *)(v225 + 80);
    uint64_t v206 = v39;
    unint64_t v223 = v39 + ((v40 + 32) & ~v40);
  }
  uint64_t v41 = 0;
  uint64_t v42 = *MEMORY[0x263F42C60];
  v238 = (void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  uint64_t v227 = (void (**)(char *, uint64_t))(v3 + 8);
  unsigned int v232 = *MEMORY[0x263F42C58];
  uint64_t v222 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v221 = (uint64_t (**)(unint64_t *, uint64_t))(v3 + 88);
  int v220 = *MEMORY[0x263F42C50];
  char v216 = (char **)(v3 + 96);
  char v43 = (char *)MEMORY[0x263F8EE78];
  uint64_t v241 = v2;
  uint64_t v205 = (unint64_t *)v12;
  v239 = v19;
  unsigned int v240 = v42;
LABEL_16:
  uint64_t v45 = (uint64_t)v41;
  v213 = v43;
  uint64_t v219 = v41;
  if ((uint64_t)(v41 + 1) >= v35)
  {
    uint64_t v53 = (uint64_t)(v41 + 1);
    goto LABEL_70;
  }
  uint64_t v236 = v35;
  uint64_t v46 = *a1;
  uint64_t v47 = *(void *)(v225 + 72);
  uint64_t v244 = (uint64_t)(v41 + 1);
  sub_261B14374(v46 + v47 * (void)(v41 + 1), v211);
  uint64_t v212 = v46;
  uint64_t v245 = v47;
  uint64_t v48 = v46 + v47 * v45;
  uint64_t v49 = v210;
  sub_261B14374(v48, v210);
  unint64_t v50 = *v238;
  (*v238)(v19, v42, v2);
  LOBYTE(v47) = sub_261B8C9F8();
  uint64_t v51 = *v227;
  (*v227)(v19, v2);
  uint64_t v234 = v51;
  if ((v47 & 1) == 0)
  {
    v50(v19, v42, v2);
    char v54 = sub_261B8C9F8();
    v51(v19, v2);
    if (v54 & 1) != 0 || (uint64_t v55 = v232, v50(v19, v232, v2), v56 = sub_261B8C9F8(), v51(v19, v2), (v56))
    {
      LODWORD(v235) = 0;
      uint64_t v52 = v210;
      goto LABEL_23;
    }
    v50(v19, v55, v2);
    uint64_t v49 = v210;
    char v179 = sub_261B8C9F8();
    v51(v19, v2);
    if ((v179 & 1) == 0)
    {
      uint64_t v180 = *(int *)(ViewModel + 36);
      double v181 = *(double *)(v211 + v180);
      if (*(unsigned char *)(v211 + v180 + 8)) {
        double v181 = 0.0;
      }
      uint64_t v182 = v49 + v180;
      uint64_t v52 = v49;
      uint64_t v183 = v216;
      uint64_t v45 = (uint64_t)v219;
      if (*(unsigned char *)(v182 + 8))
      {
        uint64_t v35 = v236;
        if (v181 <= 0.0)
        {
          if (v181 < 0.0)
          {
LABEL_158:
            LODWORD(v235) = 0;
            goto LABEL_24;
          }
LABEL_162:
          v243 = v50;
          uint64_t v184 = *v222;
          v185 = (unint64_t *)v208;
          (*v222)(v208, v211, v2);
          unint64_t v186 = *v221;
          int v187 = (*v221)(v185, v2);
          int v188 = v220;
          if (v187 == v220)
          {
            v237 = *v183;
            ((void (*)(unint64_t *, uint64_t))v237)(v185, v2);
            unint64_t v189 = *v185;
            unint64_t v190 = (unint64_t *)v207;
            v184(v207, v210, v2);
            if (v186(v190, v2) == v188)
            {
              ((void (*)(unint64_t *, uint64_t))v237)(v190, v2);
              BOOL v191 = v189 < *v190;
LABEL_168:
              LODWORD(v235) = v191;
              uint64_t v19 = v239;
              uint64_t v52 = v210;
              uint64_t v45 = (uint64_t)v219;
              uint64_t v35 = v236;
              unint64_t v50 = v243;
              goto LABEL_24;
            }
            uint64_t v192 = (char *)v190;
          }
          else
          {
            uint64_t v192 = (char *)v185;
          }
          v234(v192, v2);
          BOOL v191 = 1;
          goto LABEL_168;
        }
      }
      else
      {
        uint64_t v35 = v236;
        if (*(double *)v182 >= v181)
        {
          if (v181 < *(double *)v182) {
            goto LABEL_158;
          }
          goto LABEL_162;
        }
      }
      LODWORD(v235) = 1;
      goto LABEL_24;
    }
  }
  LODWORD(v235) = 1;
  uint64_t v52 = v49;
LABEL_23:
  uint64_t v45 = (uint64_t)v219;
  uint64_t v35 = v236;
LABEL_24:
  sub_261B143D8(v52);
  sub_261B143D8(v211);
  uint64_t v53 = v45 + 2;
  if (v45 + 2 >= v35)
  {
    uint64_t v42 = v240;
    goto LABEL_56;
  }
  uint64_t v229 = v245 * v244;
  uint64_t v57 = v212;
  unint64_t v215 = v245 * v53;
  v243 = v50;
  while (1)
  {
    v237 = (char *)v53;
    sub_261B14374(v57 + v215, v224);
    uint64_t v244 = v57;
    uint64_t v58 = v218;
    sub_261B14374(v57 + v229, v218);
    uint64_t v59 = v240;
    v50(v19, v240, v2);
    char v60 = sub_261B8C9F8();
    uint64_t v61 = v234;
    v234(v19, v2);
    if (v60)
    {
      int v62 = 1;
      uint64_t v63 = v58;
LABEL_31:
      uint64_t v35 = v236;
      unint64_t v50 = v243;
      goto LABEL_32;
    }
    v243(v19, v59, v2);
    char v64 = sub_261B8C9F8();
    v61(v19, v2);
    if (v64 & 1) != 0 || (uint64_t v65 = v232, v243(v19, v232, v2), v66 = sub_261B8C9F8(), v61(v19, v2), (v66))
    {
      int v62 = 0;
      uint64_t v63 = v218;
      goto LABEL_31;
    }
    uint64_t v67 = v65;
    uint64_t v68 = v243;
    v243(v19, v67, v2);
    uint64_t v69 = v218;
    char v70 = sub_261B8C9F8();
    v61(v19, v2);
    if (v70)
    {
      int v62 = 1;
      uint64_t v63 = v69;
LABEL_37:
      uint64_t v35 = v236;
      unint64_t v50 = v68;
      goto LABEL_32;
    }
    uint64_t v71 = *(int *)(ViewModel + 36);
    double v72 = *(double *)(v224 + v71);
    if (*(unsigned char *)(v224 + v71 + 8)) {
      double v72 = 0.0;
    }
    uint64_t v73 = v69 + v71;
    uint64_t v63 = v69;
    uint64_t v35 = v236;
    if (*(unsigned char *)(v73 + 8))
    {
      unint64_t v50 = v68;
      if (v72 > 0.0) {
        goto LABEL_47;
      }
      if (v72 < 0.0) {
        goto LABEL_49;
      }
    }
    else
    {
      unint64_t v50 = v68;
      if (*(double *)v73 < v72)
      {
LABEL_47:
        int v62 = 1;
        goto LABEL_32;
      }
      if (v72 < *(double *)v73)
      {
LABEL_49:
        int v62 = 0;
        goto LABEL_32;
      }
    }
    uint64_t v74 = *v222;
    uint64_t v75 = v205;
    (*v222)((char *)v205, v224, v2);
    char v76 = *v221;
    int v77 = (*v221)(v75, v2);
    int v78 = v220;
    if (v77 == v220)
    {
      v233 = a1;
      uint64_t v203 = (void (*)(unint64_t *, uint64_t, uint64_t))v74;
      uint64_t v202 = *v216;
      ((void (*)(unint64_t *, uint64_t))v202)(v75, v2);
      unint64_t v79 = *v75;
      BOOL v80 = v204;
      v203(v204, v218, v2);
      if (v76(v80, v2) == v78)
      {
        ((void (*)(unint64_t *, uint64_t))v202)(v80, v2);
        int v62 = v79 < *v80;
      }
      else
      {
        v234((char *)v80, v2);
        int v62 = 1;
      }
      a1 = v233;
      uint64_t v19 = v239;
      uint64_t v63 = v218;
      goto LABEL_37;
    }
    v234((char *)v75, v2);
    int v62 = 1;
    uint64_t v19 = v239;
    uint64_t v63 = v218;
    uint64_t v35 = v236;
    unint64_t v50 = v68;
LABEL_32:
    sub_261B143D8(v63);
    sub_261B143D8(v224);
    if (v235 != v62) {
      break;
    }
    uint64_t v53 = (uint64_t)(v237 + 1);
    uint64_t v57 = v244 + v245;
    if ((char *)v35 == v237 + 1)
    {
      uint64_t v53 = v35;
      uint64_t v42 = v240;
      goto LABEL_55;
    }
  }
  uint64_t v42 = v240;
  uint64_t v53 = (uint64_t)v237;
LABEL_55:
  uint64_t v45 = (uint64_t)v219;
LABEL_56:
  if (v235)
  {
    if (v53 < v45) {
      goto LABEL_210;
    }
    if (v45 < v53)
    {
      uint64_t v81 = v45;
      uint64_t v82 = 0;
      uint64_t v83 = v245 * (v53 - 1);
      uint64_t v84 = v53 * v245;
      uint64_t v85 = v81;
      uint64_t v86 = v81 * v245;
      do
      {
        if (v85 != v53 + v82 - 1)
        {
          uint64_t v88 = v53;
          uint64_t v89 = v212;
          if (!v212) {
            goto LABEL_215;
          }
          unint64_t v90 = v212 + v86;
          uint64_t v244 = v212 + v83;
          sub_261B14434(v212 + v86, v214);
          if (v86 < v83 || v90 >= v89 + v84)
          {
            uint64_t v87 = v244;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            uint64_t v87 = v244;
            if (v86 != v83) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          sub_261B14434(v214, v87);
          uint64_t v53 = v88;
        }
        ++v85;
        --v82;
        v83 -= v245;
        v84 -= v245;
        v86 += v245;
      }
      while (v85 < v53 + v82);
      uint64_t v2 = v241;
      uint64_t v19 = v239;
      uint64_t v42 = v240;
      uint64_t v45 = (uint64_t)v219;
      uint64_t v35 = v236;
    }
  }
LABEL_70:
  if (v53 >= v35) {
    goto LABEL_105;
  }
  if (__OFSUB__(v53, v45)) {
    goto LABEL_208;
  }
  if (v53 - v45 >= v209) {
    goto LABEL_105;
  }
  if (__OFADD__(v45, v209)) {
    goto LABEL_211;
  }
  if (v45 + v209 >= v35) {
    uint64_t v91 = v35;
  }
  else {
    uint64_t v91 = v45 + v209;
  }
  if (v91 >= v45)
  {
    if (v53 == v91) {
      goto LABEL_105;
    }
    BOOL v92 = *(void (**)(char *, uint64_t))(v225 + 72);
    uint64_t v93 = (void)v92 * (v53 - 1);
    v233 = a1;
    uint64_t v234 = v92;
    uint64_t v94 = v53 * (void)v92;
    uint64_t v95 = v231;
    uint64_t v96 = v227;
    uint64_t v212 = v91;
    while (2)
    {
      uint64_t v98 = 0;
      uint64_t v99 = v219;
      uint64_t v236 = v93;
      v237 = (char *)v53;
      uint64_t v235 = v94;
LABEL_84:
      v243 = (void (*)(char *, uint64_t, uint64_t))v99;
      uint64_t v100 = *a1;
      uint64_t v245 = v94 + v98;
      sub_261B14374(v94 + v98 + v100, v246);
      uint64_t v244 = v93 + v98;
      sub_261B14374(v93 + v98 + v100, v95);
      unint64_t v101 = v239;
      uint64_t v102 = *v238;
      uint64_t v103 = v241;
      (*v238)(v239, v240, v241);
      LOBYTE(v100) = sub_261B8C9F8();
      unint64_t v104 = *v96;
      (*v96)(v101, v103);
      if (v100) {
        goto LABEL_101;
      }
      uint64_t v105 = v239;
      uint64_t v106 = v241;
      v102(v239, v240, v241);
      char v107 = sub_261B8C9F8();
      v104(v105, v106);
      if (v107 & 1) != 0 || (v102(v105, v232, v106), char v108 = sub_261B8C9F8(), v104(v105, v106), (v108))
      {
LABEL_80:
        uint64_t v95 = v231;
        sub_261B143D8(v231);
        sub_261B143D8(v246);
        a1 = v233;
        uint64_t v93 = v236;
        uint64_t v97 = v237;
        uint64_t v94 = v235;
        goto LABEL_81;
      }
      v102(v105, v232, v106);
      uint64_t v95 = v231;
      char v109 = sub_261B8C9F8();
      v104(v105, v106);
      if (v109)
      {
LABEL_101:
        sub_261B143D8(v95);
        sub_261B143D8(v246);
        uint64_t v94 = v235;
        uint64_t v93 = v236;
      }
      else
      {
        uint64_t v229 = (uint64_t)v104;
        uint64_t v110 = *(int *)(ViewModel + 36);
        double v111 = *(double *)(v246 + v110);
        if (*(unsigned char *)(v246 + v110 + 8)) {
          double v111 = 0.0;
        }
        uint64_t v112 = v95 + v110;
        if (*(unsigned char *)(v112 + 8))
        {
          BOOL v113 = v111 < 0.0;
          uint64_t v95 = v231;
          if (v111 > 0.0) {
            goto LABEL_101;
          }
        }
        else
        {
          uint64_t v95 = v231;
          if (*(double *)v112 < v111) {
            goto LABEL_101;
          }
          BOOL v113 = v111 < *(double *)v112;
        }
        uint64_t v114 = v241;
        if (v113) {
          goto LABEL_80;
        }
        uint64_t v115 = *v222;
        uint64_t v116 = v226;
        (*v222)(v226, v246, v241);
        uint64_t v117 = *v221;
        int v118 = (*v221)((unint64_t *)v116, v114);
        int v119 = v220;
        if (v118 != v220
          || (uint64_t v120 = (unint64_t *)v226,
              unsigned int v121 = *v216,
              ((void (*)(char *, uint64_t))*v216)(v226, v114),
              unint64_t v215 = *v120,
              uint64_t v116 = v217,
              v115(v217, v231, v114),
              v117((unint64_t *)v116, v114) != v119))
        {
          uint64_t v96 = v227;
          ((void (*)(char *, uint64_t))v229)(v116, v114);
          uint64_t v95 = v231;
          goto LABEL_101;
        }
        uint64_t v122 = (unint64_t *)v217;
        ((void (*)(char *, uint64_t))v121)(v217, v114);
        unint64_t v123 = *v122;
        uint64_t v95 = v231;
        sub_261B143D8(v231);
        sub_261B143D8(v246);
        uint64_t v96 = v227;
        uint64_t v94 = v235;
        uint64_t v93 = v236;
        if (v215 >= v123)
        {
          a1 = v233;
          uint64_t v97 = v237;
LABEL_81:
          uint64_t v53 = (uint64_t)(v97 + 1);
          v93 += (uint64_t)v234;
          v94 += (uint64_t)v234;
          if (v53 != v212) {
            continue;
          }
          uint64_t v53 = v212;
          uint64_t v2 = v241;
          uint64_t v19 = v239;
          uint64_t v42 = v240;
          uint64_t v45 = (uint64_t)v219;
LABEL_105:
          if (v53 < v45) {
            goto LABEL_203;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v237 = (char *)v53;
          if (isUniquelyReferenced_nonNull_native) {
            char v43 = v213;
          }
          else {
            char v43 = sub_261B13500(0, *((void *)v213 + 2) + 1, 1, v213);
          }
          unint64_t v128 = *((void *)v43 + 2);
          unint64_t v127 = *((void *)v43 + 3);
          unint64_t v44 = v128 + 1;
          if (v128 >= v127 >> 1) {
            char v43 = sub_261B13500((char *)(v127 > 1), v128 + 1, 1, v43);
          }
          *((void *)v43 + 2) = v44;
          uint64_t v129 = v43 + 32;
          uint64_t v130 = &v43[16 * v128 + 32];
          unint64_t v131 = v237;
          *(void *)uint64_t v130 = v219;
          *((void *)v130 + 1) = v131;
          if (v128)
          {
            while (2)
            {
              unint64_t v132 = v44 - 1;
              if (v44 >= 4)
              {
                long long v137 = &v129[16 * v44];
                uint64_t v138 = *((void *)v137 - 8);
                uint64_t v139 = *((void *)v137 - 7);
                BOOL v143 = __OFSUB__(v139, v138);
                uint64_t v140 = v139 - v138;
                if (v143) {
                  goto LABEL_192;
                }
                uint64_t v142 = *((void *)v137 - 6);
                uint64_t v141 = *((void *)v137 - 5);
                BOOL v143 = __OFSUB__(v141, v142);
                uint64_t v135 = v141 - v142;
                char v136 = v143;
                if (v143) {
                  goto LABEL_193;
                }
                unint64_t v144 = v44 - 2;
                uint64_t v145 = &v129[16 * v44 - 32];
                uint64_t v147 = *(void *)v145;
                uint64_t v146 = *((void *)v145 + 1);
                BOOL v143 = __OFSUB__(v146, v147);
                uint64_t v148 = v146 - v147;
                if (v143) {
                  goto LABEL_195;
                }
                BOOL v143 = __OFADD__(v135, v148);
                uint64_t v149 = v135 + v148;
                if (v143) {
                  goto LABEL_198;
                }
                if (v149 >= v140)
                {
                  uint64_t v167 = &v129[16 * v132];
                  uint64_t v169 = *(void *)v167;
                  uint64_t v168 = *((void *)v167 + 1);
                  BOOL v143 = __OFSUB__(v168, v169);
                  uint64_t v170 = v168 - v169;
                  if (v143) {
                    goto LABEL_202;
                  }
                  BOOL v160 = v135 < v170;
                }
                else
                {
LABEL_124:
                  if (v136) {
                    goto LABEL_194;
                  }
                  unint64_t v144 = v44 - 2;
                  unsigned __int8 v150 = &v129[16 * v44 - 32];
                  uint64_t v152 = *(void *)v150;
                  uint64_t v151 = *((void *)v150 + 1);
                  BOOL v153 = __OFSUB__(v151, v152);
                  uint64_t v154 = v151 - v152;
                  char v155 = v153;
                  if (v153) {
                    goto LABEL_197;
                  }
                  long long v156 = &v129[16 * v132];
                  uint64_t v158 = *(void *)v156;
                  uint64_t v157 = *((void *)v156 + 1);
                  BOOL v143 = __OFSUB__(v157, v158);
                  uint64_t v159 = v157 - v158;
                  if (v143) {
                    goto LABEL_200;
                  }
                  if (__OFADD__(v154, v159)) {
                    goto LABEL_201;
                  }
                  if (v154 + v159 < v135) {
                    goto LABEL_136;
                  }
                  BOOL v160 = v135 < v159;
                }
                if (v160) {
                  unint64_t v132 = v144;
                }
              }
              else
              {
                if (v44 == 3)
                {
                  uint64_t v134 = *((void *)v43 + 4);
                  uint64_t v133 = *((void *)v43 + 5);
                  BOOL v143 = __OFSUB__(v133, v134);
                  uint64_t v135 = v133 - v134;
                  char v136 = v143;
                  goto LABEL_124;
                }
                uint64_t v161 = *((void *)v43 + 4);
                uint64_t v162 = *((void *)v43 + 5);
                BOOL v143 = __OFSUB__(v162, v161);
                uint64_t v154 = v162 - v161;
                char v155 = v143;
LABEL_136:
                if (v155) {
                  goto LABEL_196;
                }
                uint64_t v163 = &v129[16 * v132];
                uint64_t v165 = *(void *)v163;
                uint64_t v164 = *((void *)v163 + 1);
                BOOL v143 = __OFSUB__(v164, v165);
                uint64_t v166 = v164 - v165;
                if (v143) {
                  goto LABEL_199;
                }
                if (v166 < v154) {
                  goto LABEL_15;
                }
              }
              unint64_t v171 = v132 - 1;
              if (v132 - 1 >= v44)
              {
                __break(1u);
LABEL_189:
                __break(1u);
LABEL_190:
                __break(1u);
LABEL_191:
                __break(1u);
LABEL_192:
                __break(1u);
LABEL_193:
                __break(1u);
LABEL_194:
                __break(1u);
LABEL_195:
                __break(1u);
LABEL_196:
                __break(1u);
LABEL_197:
                __break(1u);
LABEL_198:
                __break(1u);
LABEL_199:
                __break(1u);
LABEL_200:
                __break(1u);
LABEL_201:
                __break(1u);
LABEL_202:
                __break(1u);
LABEL_203:
                __break(1u);
LABEL_204:
                __break(1u);
LABEL_205:
                __break(1u);
LABEL_206:
                __break(1u);
LABEL_207:
                __break(1u);
LABEL_208:
                __break(1u);
LABEL_209:
                __break(1u);
LABEL_210:
                __break(1u);
LABEL_211:
                __break(1u);
                goto LABEL_212;
              }
              if (!*a1) {
                goto LABEL_214;
              }
              uint64_t v172 = v43;
              uint64_t v173 = &v129[16 * v171];
              uint64_t v174 = *(void *)v173;
              uint64_t v175 = &v129[16 * v132];
              uint64_t v176 = *((void *)v175 + 1);
              uint64_t v177 = v228;
              sub_261B12834(*a1 + *(void *)(v225 + 72) * *(void *)v173, *a1 + *(void *)(v225 + 72) * *(void *)v175, *a1 + *(void *)(v225 + 72) * v176, v223);
              if (v177)
              {
                uint64_t v193 = v206;
                goto LABEL_185;
              }
              if (v176 < v174) {
                goto LABEL_189;
              }
              if (v132 > *((void *)v172 + 2)) {
                goto LABEL_190;
              }
              *(void *)uint64_t v173 = v174;
              *(void *)&v129[16 * v171 + 8] = v176;
              unint64_t v178 = *((void *)v172 + 2);
              if (v132 >= v178) {
                goto LABEL_191;
              }
              uint64_t v228 = 0;
              unint64_t v44 = v178 - 1;
              memmove(&v129[16 * v132], v175 + 16, 16 * (v178 - 1 - v132));
              char v43 = v172;
              *((void *)v172 + 2) = v178 - 1;
              uint64_t v2 = v241;
              uint64_t v19 = v239;
              uint64_t v42 = v240;
              if (v178 <= 2) {
                goto LABEL_15;
              }
              continue;
            }
          }
          unint64_t v44 = 1;
LABEL_15:
          uint64_t v35 = a1[1];
          uint64_t v41 = v237;
          if ((uint64_t)v237 >= v35) {
            goto LABEL_172;
          }
          goto LABEL_16;
        }
      }
      break;
    }
    a1 = v233;
    uint64_t v124 = *v233;
    if (!*v233) {
      goto LABEL_213;
    }
    uint64_t v125 = v124 + v93 + v98;
    sub_261B14434(v124 + v94 + v98, v242);
    swift_arrayInitWithTakeFrontToBack();
    sub_261B14434(v242, v125);
    v98 -= (uint64_t)v234;
    uint64_t v99 = (char *)v243 + 1;
    uint64_t v97 = v237;
    if (v237 == (char *)v243 + 1) {
      goto LABEL_81;
    }
    goto LABEL_84;
  }
LABEL_212:
  __break(1u);
LABEL_213:
  __break(1u);
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  __break(1u);
LABEL_217:
  sub_261B8F9B8();
  __break(1u);
}

void sub_261B121E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v68 = a4;
  uint64_t v48 = a1;
  uint64_t v6 = sub_261B8CA08();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v51 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v55 = (char *)&v46 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v46 - v12;
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  MEMORY[0x270FA5388](ViewModel);
  uint64_t v65 = (uint64_t)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v46 - v16;
  MEMORY[0x270FA5388](v18);
  uint64_t v70 = (uint64_t)&v46 - v20;
  uint64_t v61 = a3;
  uint64_t v47 = a2;
  if (a3 != a2)
  {
    uint64_t v21 = *(void *)(v19 + 72);
    unsigned int v63 = *MEMORY[0x263F42C60];
    int v62 = (void (**)(char *, void, uint64_t))(v7 + 104);
    uint64_t v22 = (void (**)(char *, uint64_t))(v7 + 8);
    unsigned int v58 = *MEMORY[0x263F42C58];
    uint64_t v53 = (uint64_t (**)(char *, uint64_t))(v7 + 88);
    char v54 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    int v52 = *MEMORY[0x263F42C50];
    unint64_t v50 = (void (**)(char *, uint64_t))(v7 + 96);
    uint64_t v23 = v21 * (v61 - 1);
    uint64_t v59 = v21;
    uint64_t v69 = v21 * v61;
    char v64 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v57 = v17;
LABEL_6:
    uint64_t v24 = 0;
    uint64_t v25 = v48;
    uint64_t v60 = v23;
    while (1)
    {
      uint64_t v26 = *v68;
      uint64_t v67 = v69 + v24;
      sub_261B14374(v69 + v24 + v26, v70);
      uint64_t v66 = v23 + v24;
      sub_261B14374(v23 + v24 + v26, (uint64_t)v17);
      uint64_t v27 = *v62;
      (*v62)(v13, v63, v6);
      LOBYTE(v26) = sub_261B8C9F8();
      uint64_t v28 = *v22;
      (*v22)(v13, v6);
      if (v26) {
        goto LABEL_25;
      }
      v27(v13, v63, v6);
      char v29 = sub_261B8C9F8();
      uint64_t v22 = v64;
      v28(v13, v6);
      if (v29 & 1) != 0 || (v27(v13, v58, v6), char v30 = sub_261B8C9F8(), v28(v13, v6), (v30))
      {
LABEL_4:
        uint64_t v17 = v57;
        sub_261B143D8((uint64_t)v57);
        sub_261B143D8(v70);
        uint64_t v23 = v60;
LABEL_5:
        v23 += v59;
        v69 += v59;
        if (++v61 == v47) {
          return;
        }
        goto LABEL_6;
      }
      v27(v13, v58, v6);
      uint64_t v17 = v57;
      char v31 = sub_261B8C9F8();
      v28(v13, v6);
      if (v31) {
        goto LABEL_25;
      }
      uint64_t v32 = *(int *)(ViewModel + 36);
      double v33 = *(double *)(v70 + v32);
      if (*(unsigned char *)(v70 + v32 + 8)) {
        double v33 = 0.0;
      }
      uint64_t v34 = &v17[v32];
      if (v34[8])
      {
        uint64_t v17 = v57;
        if (v33 > 0.0) {
          goto LABEL_25;
        }
        uint64_t v22 = v64;
        if (v33 < 0.0) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v17 = v57;
        if (*(double *)v34 < v33) {
          goto LABEL_25;
        }
        uint64_t v22 = v64;
        if (v33 < *(double *)v34) {
          goto LABEL_4;
        }
      }
      uint64_t v35 = v55;
      uint64_t v36 = *v54;
      (*v54)(v55, v70, v6);
      uint64_t v37 = *v53;
      int v38 = (*v53)(v35, v6);
      if (v38 != v52) {
        break;
      }
      uint64_t v39 = v55;
      uint64_t v40 = *v50;
      (*v50)(v55, v6);
      unint64_t v49 = *(void *)v39;
      uint64_t v35 = v51;
      v36(v51, (uint64_t)v57, v6);
      int v41 = v37(v35, v6);
      if (v41 != v52) {
        break;
      }
      uint64_t v42 = (unint64_t *)v51;
      v40(v51, v6);
      unint64_t v43 = *v42;
      uint64_t v17 = v57;
      sub_261B143D8((uint64_t)v57);
      sub_261B143D8(v70);
      uint64_t v22 = v64;
      uint64_t v23 = v60;
      if (v49 >= v43) {
        goto LABEL_5;
      }
LABEL_26:
      uint64_t v44 = *v68;
      if (!*v68)
      {
        __break(1u);
        return;
      }
      uint64_t v45 = v44 + v23 + v24;
      sub_261B14434(v44 + v69 + v24, v65);
      swift_arrayInitWithTakeFrontToBack();
      sub_261B14434(v65, v45);
      v24 -= v59;
      if (v61 == ++v25) {
        goto LABEL_5;
      }
    }
    v28(v35, v6);
    uint64_t v17 = v57;
LABEL_25:
    sub_261B143D8((uint64_t)v17);
    sub_261B143D8(v70);
    uint64_t v22 = v64;
    uint64_t v23 = v60;
    goto LABEL_26;
  }
}

uint64_t sub_261B12834(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_261B8CA08();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v108 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  char v109 = (char *)&v100 - v12;
  MEMORY[0x270FA5388](v13);
  BOOL v113 = (char *)&v100 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v114 = (char *)&v100 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v100 - v18;
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  MEMORY[0x270FA5388](ViewModel);
  uint64_t v112 = (unint64_t *)((char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v21);
  uint64_t v121 = (uint64_t)&v100 - v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v117 = (void (**)(char *, uint64_t))((char *)&v100 - v24);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v100 - v26;
  uint64_t v122 = *(void *)(v28 + 72);
  if (!v122)
  {
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
  if (a2 - a1 == 0x8000000000000000 && v122 == -1) {
    goto LABEL_106;
  }
  int64_t v29 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v122 == -1) {
    goto LABEL_107;
  }
  uint64_t v30 = (uint64_t)(a2 - a1) / v122;
  unint64_t v126 = a4;
  unint64_t v127 = a1;
  uint64_t v31 = v29 / v122;
  uint64_t v120 = v8;
  unint64_t v123 = a3;
  if (v30 >= v29 / v122)
  {
    if (v31 < 0) {
      goto LABEL_108;
    }
    uint64_t v34 = v31 * v122;
    uint64_t v35 = (uint64_t)v112;
    if (a4 < a2 || a2 + v34 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v65 = a4 + v34;
    unint64_t v125 = a4 + v34;
    unint64_t v127 = a2;
    unint64_t v116 = a1;
    if (v34 < 1 || a1 >= a2)
    {
LABEL_63:
      sub_261B13614(&v127, &v126, (uint64_t *)&v125, type metadata accessor for TrainingLoadViewModel);
      return 1;
    }
    uint64_t v122 = -v122;
    LODWORD(v114) = *MEMORY[0x263F42C60];
    BOOL v113 = (char *)(v9 + 104);
    uint64_t v117 = (void (**)(char *, uint64_t))(v9 + 8);
    LODWORD(v111) = *MEMORY[0x263F42C58];
    char v107 = (void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    int v68 = *MEMORY[0x263F42C50];
    uint64_t v115 = (void (*)(char *, uint64_t))a4;
    uint64_t v110 = v19;
    uint64_t v106 = (uint64_t (**)(char *, uint64_t))(v9 + 88);
    int v105 = v68;
    unint64_t v104 = (void (**)(char *, uint64_t))(v9 + 96);
    while (1)
    {
      uint64_t v69 = v122;
      sub_261B14374(v65 + v122, v121);
      unint64_t v124 = a2;
      unint64_t v118 = a2 + v69;
      sub_261B14374(a2 + v69, v35);
      uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))v113;
      uint64_t v71 = v114;
      uint64_t v72 = v35;
      uint64_t v73 = v120;
      (*(void (**)(char *, void, uint64_t))v113)(v19, v114, v120);
      char v74 = sub_261B8C9F8();
      uint64_t v75 = *v117;
      (*v117)(v19, v73);
      if (v74)
      {
        BOOL v76 = 1;
        unint64_t v77 = v123;
        uint64_t v35 = v72;
        goto LABEL_69;
      }
      v70(v19, v71, v73);
      char v78 = sub_261B8C9F8();
      v75(v19, v73);
      if (v78) {
        break;
      }
      uint64_t v79 = v111;
      v70(v19, v111, v73);
      char v80 = sub_261B8C9F8();
      v75(v19, v73);
      if (v80) {
        break;
      }
      v70(v19, v79, v73);
      uint64_t v88 = v112;
      char v89 = sub_261B8C9F8();
      v75(v19, v73);
      if (v89)
      {
        BOOL v76 = 1;
        unint64_t v77 = v123;
        uint64_t v35 = (uint64_t)v88;
        unint64_t v81 = (unint64_t)v115;
        uint64_t v19 = v110;
        goto LABEL_70;
      }
      uint64_t v90 = *(int *)(ViewModel + 36);
      double v91 = *(double *)(v121 + v90);
      if (*(unsigned char *)(v121 + v90 + 8)) {
        double v91 = 0.0;
      }
      BOOL v92 = (double *)((char *)v88 + v90);
      uint64_t v35 = (uint64_t)v88;
      unint64_t v82 = v124;
      if ((_BYTE)v92[1])
      {
        unint64_t v77 = v123;
        unint64_t v81 = (unint64_t)v115;
        if (v91 > 0.0) {
          goto LABEL_96;
        }
        uint64_t v19 = v110;
        if (v91 >= 0.0) {
          goto LABEL_98;
        }
      }
      else
      {
        unint64_t v77 = v123;
        unint64_t v81 = (unint64_t)v115;
        if (*v92 < v91)
        {
LABEL_96:
          BOOL v76 = 1;
          uint64_t v19 = v110;
          goto LABEL_71;
        }
        uint64_t v19 = v110;
        if (v91 >= *v92)
        {
LABEL_98:
          uint64_t v93 = v109;
          uint64_t v94 = v120;
          uint64_t v103 = *v107;
          v103(v109, v121, v120);
          uint64_t v102 = *v106;
          int v95 = v102(v93, v94);
          int v96 = v105;
          if (v95 == v105)
          {
            unint64_t v101 = *v104;
            v101(v93, v94);
            unint64_t v100 = *(void *)v93;
            uint64_t v97 = v108;
            v103(v108, (uint64_t)v112, v94);
            if (v102(v97, v94) == v96)
            {
              v101(v97, v94);
              BOOL v76 = v100 < *(void *)v97;
LABEL_104:
              unint64_t v77 = v123;
              uint64_t v35 = (uint64_t)v112;
              goto LABEL_71;
            }
            uint64_t v98 = v97;
            uint64_t v99 = v94;
          }
          else
          {
            uint64_t v98 = v93;
            uint64_t v99 = v94;
          }
          v75(v98, v99);
          BOOL v76 = 1;
          goto LABEL_104;
        }
      }
      BOOL v76 = 0;
LABEL_71:
      uint64_t v83 = v122;
      unint64_t v84 = v77 + v122;
      sub_261B143D8(v35);
      sub_261B143D8(v121);
      if (v76)
      {
        if (v77 < v82 || v84 >= v82)
        {
          unint64_t v87 = v118;
          swift_arrayInitWithTakeFrontToBack();
          unint64_t v85 = v87;
        }
        else
        {
          unint64_t v85 = v118;
          if (v77 != v82)
          {
            swift_arrayInitWithTakeBackToFront();
            unint64_t v85 = v118;
          }
        }
        v127 += v83;
      }
      else
      {
        unint64_t v86 = v125;
        v125 += v83;
        if (v77 < v86 || v84 >= v86)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v77 != v86)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v85 = v82;
      }
      unint64_t v65 = v125;
      if (v125 > v81)
      {
        a2 = v85;
        unint64_t v123 = v84;
        if (v85 > v116) {
          continue;
        }
      }
      goto LABEL_63;
    }
    BOOL v76 = 0;
    unint64_t v77 = v123;
    uint64_t v35 = (uint64_t)v112;
LABEL_69:
    unint64_t v81 = (unint64_t)v115;
LABEL_70:
    unint64_t v82 = v124;
    goto LABEL_71;
  }
  if ((v30 & 0x8000000000000000) == 0)
  {
    uint64_t v32 = v30 * v122;
    double v33 = v117;
    if (a4 < a1 || a1 + v32 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v118 = a4 + v32;
    unint64_t v125 = a4 + v32;
    if (v32 >= 1 && a2 < a3)
    {
      LODWORD(v121) = *MEMORY[0x263F42C60];
      uint64_t v37 = (void (**)(char *, void, uint64_t))(v9 + 104);
      int v38 = (void (**)(char *, uint64_t))(v9 + 8);
      LODWORD(v116) = *MEMORY[0x263F42C58];
      double v111 = (uint64_t (**)(char *, uint64_t))(v9 + 88);
      uint64_t v112 = (void *)(v9 + 16);
      LODWORD(v109) = *MEMORY[0x263F42C50];
      char v108 = (char *)(v9 + 96);
      while (1)
      {
        unint64_t v124 = a2;
        sub_261B14374(a2, (uint64_t)v27);
        sub_261B14374(a4, (uint64_t)v33);
        uint64_t v39 = *v37;
        uint64_t v40 = v33;
        uint64_t v41 = v120;
        (*v37)(v19, v121, v120);
        char v42 = sub_261B8C9F8();
        unint64_t v43 = *v38;
        (*v38)(v19, v41);
        if (v42) {
          goto LABEL_24;
        }
        v39(v19, v121, v41);
        char v46 = sub_261B8C9F8();
        v43(v19, v41);
        if (v46 & 1) != 0 || (v39(v19, v116, v41), char v47 = sub_261B8C9F8(), v43(v19, v41), (v47))
        {
LABEL_31:
          double v33 = v117;
          sub_261B143D8((uint64_t)v117);
          sub_261B143D8((uint64_t)v27);
LABEL_32:
          unint64_t v44 = v127;
          unint64_t v48 = v126 + v122;
          unint64_t v49 = v124;
          if (v127 < v126 || v127 >= v48)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v127 != v126)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v126 = v48;
          unint64_t v45 = v49;
          goto LABEL_47;
        }
        v39(v19, v116, v41);
        uint64_t v40 = v117;
        char v50 = sub_261B8C9F8();
        v43(v19, v41);
        if (v50) {
          goto LABEL_24;
        }
        uint64_t v51 = *(int *)(ViewModel + 36);
        double v52 = *(double *)&v27[v51];
        if (v27[v51 + 8]) {
          double v52 = 0.0;
        }
        uint64_t v53 = (double *)((char *)v40 + v51);
        if ((_BYTE)v53[1])
        {
          uint64_t v54 = v120;
          uint64_t v40 = v117;
          if (v52 > 0.0) {
            goto LABEL_24;
          }
          if (v52 < 0.0) {
            goto LABEL_31;
          }
        }
        else
        {
          uint64_t v54 = v120;
          uint64_t v40 = v117;
          if (*v53 < v52) {
            goto LABEL_24;
          }
          if (v52 < *v53) {
            goto LABEL_31;
          }
        }
        uint64_t v55 = (void (*)(char *, char *, void))*v112;
        char v56 = v114;
        ((void (*)(char *, char *, uint64_t))*v112)(v114, v27, v54);
        uint64_t v57 = *v111;
        int v58 = (*v111)(v56, v54);
        if (v58 != v109) {
          break;
        }
        uint64_t v59 = v114;
        uint64_t v115 = *(void (**)(char *, uint64_t))v108;
        v115(v114, v54);
        uint64_t v60 = (void (*)(char *, void (**)(char *, uint64_t), uint64_t))v55;
        unint64_t v61 = *(void *)v59;
        char v56 = v113;
        v60(v113, v117, v54);
        int v62 = v57(v56, v54);
        if (v62 != v109) {
          break;
        }
        unsigned int v63 = (unint64_t *)v113;
        v115(v113, v54);
        unint64_t v64 = *v63;
        double v33 = v117;
        sub_261B143D8((uint64_t)v117);
        sub_261B143D8((uint64_t)v27);
        if (v61 >= v64) {
          goto LABEL_32;
        }
LABEL_25:
        unint64_t v44 = v127;
        unint64_t v45 = v124 + v122;
        if (v127 < v124 || v127 >= v45)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v127 == v124)
        {
          unint64_t v44 = v124;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_47:
        unint64_t v127 = v44 + v122;
        a4 = v126;
        if (v126 < v118)
        {
          a2 = v45;
          if (v45 < v123) {
            continue;
          }
        }
        goto LABEL_63;
      }
      v43(v56, v54);
      uint64_t v40 = v117;
LABEL_24:
      sub_261B143D8((uint64_t)v40);
      sub_261B143D8((uint64_t)v27);
      double v33 = v40;
      goto LABEL_25;
    }
    goto LABEL_63;
  }
LABEL_108:
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

char *sub_261B13500(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A947780);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_261B135FC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_261B13614(a1, a2, a3, MEMORY[0x263F87DB8]);
}

uint64_t sub_261B13614(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_261B8FA18();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_261B13758(uint64_t a1)
{
  return sub_261B13500(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_261B1376C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8EEC8();
  unint64_t v5 = *(void **)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v13[*(int *)(v14 + 56)];
  sub_2619F86F0(a1, (uint64_t)v13, &qword_26B416C98);
  sub_2619F86F0(a2, v15, &qword_26B416C98);
  uint64_t v16 = (uint64_t (*)(char *, uint64_t, uint64_t))v5[6];
  LODWORD(a1) = v16(v13, 1, v4);
  int v17 = v16((char *)v15, 1, v4);
  int v18 = v17;
  if (a1 == 1)
  {
    if (v17 == 1) {
      return 0;
    }
  }
  else
  {
    uint64_t v16 = (uint64_t (*)(char *, uint64_t, uint64_t))v5[4];
    v16(v10, (uint64_t)v13, v4);
    if (v18 != 1)
    {
LABEL_11:
      v16(v7, v15, v4);
      sub_261B15664(&qword_26B416C18, MEMORY[0x263F090E8]);
      sub_261B8F728();
      uint64_t v22 = (void (*)(char *, uint64_t))v5[1];
      v22(v7, v4);
      v22(v10, v4);
      return v24;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
    sub_261B15664(&qword_26B416C18, MEMORY[0x263F090E8]);
    sub_261B8F728();
    uint64_t v20 = (void (*)(char *, uint64_t))v5[1];
    ++v5;
    v20(v10, v4);
    uint64_t result = v24 + 1;
    if (!__OFADD__(v24, 1)) {
      return result;
    }
    __break(1u);
  }
  ((void (*)(char *, uint64_t, uint64_t))v5[4])(v10, v15, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
  sub_261B15664(&qword_26B416C18, MEMORY[0x263F090E8]);
  sub_261B8F728();
  uint64_t v21 = (void (*)(char *, uint64_t))v5[1];
  ++v5;
  v21(v10, v4);
  uint64_t result = v24 - 1;
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_261B13B08(void *a1)
{
  return sub_261ACA7DC(0, a1[2], 0, a1);
}

uint64_t sub_261B13B1C(void *a1)
{
  return sub_261ACAAC4(0, a1[2], 0, a1);
}

uint64_t sub_261B13B30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_261B13B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v44 = a6;
  uint64_t v45 = a7;
  uint64_t v49 = a1;
  uint64_t v14 = sub_261B8C9E8();
  uint64_t v48 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v43 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_261B8CA08();
  uint64_t v17 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = ((char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  uint64_t v46 = *(void *)(ViewModel - 8);
  MEMORY[0x270FA5388](ViewModel - 8);
  uint64_t v40 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TrainingLoadViewModelProvider.TaskHolder();
  swift_allocObject();
  *(void *)(v7 + 16) = sub_261B0695C();
  *(void *)(v7 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__viewModels) = MEMORY[0x263F8EE78];
  *(unsigned char *)(v7 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__isFetchingDataForNewDateRange) = 0;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__isLoadingWorkoutViewModelForTheFirstTime) = 1;
  uint64_t v21 = (void *)(v7 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__unitTest_updatedViewModels);
  *uint64_t v21 = nullsub_1;
  v21[1] = 0;
  sub_261B8B068();
  uint64_t v47 = v15;
  uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v39(v7 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange, a1, v14);
  uint64_t v22 = (uint64_t *)(v7
                  + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeAllDayLoadSummaryCollectionSequence);
  *uint64_t v22 = a2;
  v22[1] = a3;
  uint64_t v23 = (uint64_t *)(v7
                  + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeWorkoutLoadSummaryCollectionSequence);
  *uint64_t v23 = a4;
  v23[1] = a5;
  uint64_t v24 = (uint64_t *)(v7
                  + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeWorkoutLoadByActivityTypeSummaryCollectionSequence);
  uint64_t v25 = v44;
  uint64_t v26 = v45;
  *uint64_t v24 = v44;
  v24[1] = v26;
  *(unsigned char *)(v7 + 24) = 0;
  uint64_t v27 = v41;
  (*(void (**)(NSObject *, void, uint64_t))(v17 + 104))(v41, *MEMORY[0x263F42C60], v42);
  uint64_t v28 = (uint64_t)v43;
  v39((uint64_t)v43, v49, v48);
  uint64_t v29 = (uint64_t)v40;
  sub_261AD5A10(a2);
  sub_261AD5A10(a4);
  sub_261AD5A10(v25);
  uint64_t v30 = v29;
  TrainingLoadViewModel.init(dataType:dayRange:chronologicalTrainingLoadDaySummaries:)(v27, v28, MEMORY[0x263F8EE78], v29);
  swift_getKeyPath();
  uint64_t v50 = v8;
  sub_261B15664(&qword_26B416C88, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider);
  sub_261B8B038();
  swift_release();
  uint64_t v50 = v8;
  swift_getKeyPath();
  sub_261B8B058();
  swift_release();
  uint64_t v31 = (unint64_t *)(v8 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__viewModels);
  swift_beginAccess();
  unint64_t v32 = *v31;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t *v31 = v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v32 = sub_261A0B75C(0, *(void *)(v32 + 16) + 1, 1, v32);
    unint64_t *v31 = v32;
  }
  unint64_t v35 = *(void *)(v32 + 16);
  unint64_t v34 = *(void *)(v32 + 24);
  if (v35 >= v34 >> 1)
  {
    unint64_t v32 = sub_261A0B75C(v34 > 1, v35 + 1, 1, v32);
    unint64_t *v31 = v32;
  }
  *(void *)(v32 + 16) = v35 + 1;
  sub_261B14434(v30, v32+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v35);
  swift_endAccess();
  swift_getKeyPath();
  uint64_t v50 = v8;
  sub_261B8B038();
  swift_release();
  uint64_t v36 = *(void (**)(uint64_t))(v8
                                       + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__unitTest_updatedViewModels);
  swift_getKeyPath();
  uint64_t v50 = v8;
  swift_retain();
  sub_261B8B038();
  swift_release();
  uint64_t v37 = swift_bridgeObjectRetain();
  v36(v37);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v50 = v8;
  swift_getKeyPath();
  sub_261B8B048();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49, v48);
  return v8;
}

uint64_t _s9WorkoutUI29TrainingLoadViewModelProviderC8dayRange11healthStore7optionsAC13HealthBalance012GregorianDayI0V_So08HKHealthK0CAA0cdefG7OptionsVtcfC_0(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = sub_261B8C9E8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  uint64_t v27 = v7;
  uint64_t v28 = v6;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v25 = v9;
  uint64_t v29 = a1;
  v14(v9, a1, v6);
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  if ((v10 & 4) != 0)
  {
    swift_retain();
    uint64_t v15 = sub_261B15614;
    uint64_t v16 = v11;
  }
  uint64_t v26 = v11;
  if (v10)
  {
    swift_retain();
    uint64_t v17 = sub_261B15638;
    uint64_t v18 = v12;
    if ((v10 & 2) != 0) {
      goto LABEL_5;
    }
LABEL_7:
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    goto LABEL_8;
  }
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  if ((v10 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_5:
  swift_retain();
  uint64_t v19 = sub_261B1565C;
  uint64_t v20 = v13;
LABEL_8:
  type metadata accessor for TrainingLoadViewModelProvider();
  swift_allocObject();
  id v21 = a2;
  uint64_t v22 = sub_261B13B68((uint64_t)v25, (uint64_t)v15, v16, (uint64_t)v17, v18, (uint64_t)v19, v20);
  sub_261AD5928((uint64_t)v19);
  sub_261AD5928((uint64_t)v17);
  sub_261AD5928((uint64_t)v15);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  return v22;
}

uint64_t sub_261B14374(uint64_t a1, uint64_t a2)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 16))(a2, a1, ViewModel);
  return a2;
}

uint64_t sub_261B143D8(uint64_t a1)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 8))(a1, ViewModel);
  return a1;
}

uint64_t sub_261B14434(uint64_t a1, uint64_t a2)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 32))(a2, a1, ViewModel);
  return a2;
}

void sub_261B144A0()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 24) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_261B144B0()
{
  return sub_261B056EC(v0);
}

uint64_t sub_261B144B8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261B144C8()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_261B14500()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_261B14540(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_261AF5CBC;
  return sub_261B0E530(a1, v4, v5, v7, v6);
}

unint64_t sub_261B14604()
{
  unint64_t result = qword_26A947760;
  if (!qword_26A947760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947760);
  }
  return result;
}

unint64_t sub_261B1465C()
{
  unint64_t result = qword_26A947768;
  if (!qword_26A947768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947768);
  }
  return result;
}

unint64_t sub_261B146B4()
{
  unint64_t result = qword_26A947770;
  if (!qword_26A947770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947770);
  }
  return result;
}

unint64_t sub_261B1470C()
{
  unint64_t result = qword_26A947778;
  if (!qword_26A947778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947778);
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadViewModelProviderOptions()
{
  return &type metadata for TrainingLoadViewModelProviderOptions;
}

uint64_t sub_261B14770()
{
  return type metadata accessor for TrainingLoadViewModelProvider();
}

uint64_t sub_261B14778()
{
  uint64_t result = sub_261B8C9E8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_261B8B078();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for TrainingLoadViewModelProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TrainingLoadViewModelProvider);
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.dayRange.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.dayRange.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.dayRange.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.viewModels.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.viewModels.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.viewModels.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.isFetchingDataForNewDateRange.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.isFetchingDataForNewDateRange.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.isFetchingDataForNewDateRange.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.startQuery(isFaking:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t type metadata accessor for TrainingLoadViewModelProvider.TaskHolder()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for TrainingLoadViewModelProvider.TaskType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261B14BE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadViewModelProvider.TaskType()
{
  return &type metadata for TrainingLoadViewModelProvider.TaskType;
}

unint64_t sub_261B14C20()
{
  unint64_t result = qword_26B416C78;
  if (!qword_26B416C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B416C78);
  }
  return result;
}

uint64_t sub_261B14C74()
{
  return sub_261B05694(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_261B14C80()
{
  return sub_261B05614(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_261B14C8C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 25, 7);
}

uint64_t sub_261B14CC4()
{
  return sub_261B05280(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_261B14CD0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261B14CE8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261B14D20(uint64_t a1)
{
  unint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_261B14D58()
{
  uint64_t v1 = v0[4];
  unint64_t v2 = (void *)(v0[2] + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__unitTest_updatedViewModels);
  void *v2 = v0[3];
  v2[1] = v1;
  swift_retain();
  return swift_release();
}

uint64_t sub_261B14DA4(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

BOOL sub_261B14DD0(uint64_t a1)
{
  return sub_261B10560(a1);
}

uint64_t sub_261B14DF0(uint64_t a1, uint64_t a2)
{
  return sub_261B0B9EC(a1, a2, v2[2], v2[3], v2[4], (uint64_t)&unk_270DA92E8, (uint64_t)&unk_26A947790);
}

uint64_t sub_261B14E2C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_261B14E64()
{
  return sub_261B05848(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(uint64_t (**)(uint64_t (*)(), uint64_t))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_261B14E74()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261B14E88()
{
  return sub_261B14F88((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_261B05BDC);
}

uint64_t objectdestroy_150Tm()
{
  uint64_t v1 = sub_261B8AE38();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 25) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_261B14F70()
{
  return sub_261B14F88((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_261B05FFC);
}

uint64_t sub_261B14F88(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(sub_261B8AE38() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = *(unsigned __int8 *)(v1 + 24);
  return a1(v3, v5, v4);
}

uint64_t sub_261B15008(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B416CE0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = *(void *)(v1 + v6);
  uint64_t v12 = *(void *)(v1 + v7);
  uint64_t v13 = *(void *)(v1 + v7 + 8);
  uint64_t v14 = *(void *)(v1 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_261AF6548;
  return sub_261B0D5B0(a1, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_261B15160(uint64_t a1, uint64_t a2)
{
  return sub_261B0B9EC(a1, a2, v2[2], v2[3], v2[4], (uint64_t)&unk_270DA9388, (uint64_t)&unk_26A9477A0);
}

uint64_t sub_261B1519C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261B151B0(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B416CE0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = *(void *)(v1 + v6);
  uint64_t v12 = *(void *)(v1 + v7);
  uint64_t v13 = *(void *)(v1 + v7 + 8);
  uint64_t v14 = *(void *)(v1 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_261AF6548;
  return sub_261B0BC5C(a1, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_261B15308(uint64_t a1, uint64_t a2)
{
  return sub_261B0B9EC(a1, a2, v2[2], v2[3], v2[4], (uint64_t)&unk_270DA9428, (uint64_t)&unk_26A9477B0);
}

uint64_t sub_261B15344()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t objectdestroy_161Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CE0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_261B15460(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B416CE0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = *(void *)(v1 + v6);
  uint64_t v12 = *(void *)(v1 + v7);
  uint64_t v13 = *(void *)(v1 + v7 + 8);
  uint64_t v14 = *(void *)(v1 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_261AF6548;
  return sub_261B0A0C0(a1, v8, v9, v10, v11, v12, v13, v14);
}

void sub_261B155B8(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

void sub_261B155C4(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 26);
}

void sub_261B155D0(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 25);
}

uint64_t sub_261B155DC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_261B15614@<X0>(uint64_t a1@<X8>)
{
  return sub_261B08B70(*(void *)(v1 + 16), MEMORY[0x263F42C58], a1);
}

uint64_t sub_261B15638@<X0>(uint64_t a1@<X8>)
{
  return sub_261B08B70(*(void *)(v1 + 16), MEMORY[0x263F42C60], a1);
}

uint64_t sub_261B1565C(uint64_t a1)
{
  return sub_261B08DA0(a1, *(void *)(v1 + 16));
}

uint64_t sub_261B15664(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261B156AC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261B156FC(void *a1)
{
  char v2 = *(unsigned char *)(v1 + 24);
  uint64_t v3 = (unsigned char *)(*(void *)(v1 + 16) + *a1);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = v2;
  return result;
}

uint64_t sub_261B15758()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_261B079B4(v0);
}

uint64_t sub_261B157D8()
{
  return sub_261B07870();
}

void sub_261B157F0()
{
}

double CGFloat.pixelsToPoints()(double a1)
{
  id v2 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v2, sel_scale);
  double v4 = v3;

  return a1 / v4;
}

uint64_t sub_261B1586C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_261B15894(uint64_t *a1, uint64_t (**a2)())
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *a2 = sub_261B17078;
  a2[1] = (uint64_t (*)())v5;
  return result;
}

uint64_t TrainingLoadWorkoutsAddUpView.onNext.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t TrainingLoadWorkoutsAddUpView.onNext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TrainingLoadWorkoutsAddUpView.onNext.modify())()
{
  return nullsub_1;
}

uint64_t TrainingLoadWorkoutsAddUpView.init(onNext:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_261B15994@<X0>(uint64_t a1@<X8>)
{
  uint64_t v120 = a1;
  unint64_t v103 = sub_261B8C988();
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  unint64_t v101 = (char *)v96 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_261B8E1F8();
  uint64_t v118 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  uint64_t v115 = (char *)v96 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943488);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v104 = (char *)v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_261B8E258();
  uint64_t v117 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  uint64_t v112 = (char *)v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9455A0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v121 = (char *)v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9477B8);
  MEMORY[0x270FA5388](v8 - 8);
  double v111 = (char *)v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v124 = (void (*)(void))((char *)v96 - v11);
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9477C0);
  uint64_t v127 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v123);
  uint64_t v105 = (uint64_t)v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v114 = (uint64_t)v96 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v122 = (uint64_t)v96 - v16;
  uint64_t v17 = sub_261B8AA68();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v18 = sub_261B8AA18();
  uint64_t v125 = *(void *)(v18 - 8);
  uint64_t v126 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  unint64_t v128 = (char *)v96 - v22;
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v23 = (id)qword_26B416688;
  sub_261B8AA48();

  id v24 = (id)qword_26B416688;
  uint64_t v25 = sub_261B8AA48();
  uint64_t v27 = v26;

  id v28 = (id)qword_26B416688;
  uint64_t v29 = sub_261B8AA48();
  uint64_t v31 = v30;

  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_261B92AA0;
  uint64_t v33 = MEMORY[0x263F8D310];
  *(void *)(v32 + 56) = MEMORY[0x263F8D310];
  unint64_t v34 = sub_261A2B2E8();
  *(void *)(v32 + 32) = v25;
  *(void *)(v32 + 40) = v27;
  *(void *)(v32 + 96) = v33;
  *(void *)(v32 + 104) = v34;
  *(void *)(v32 + 64) = v34;
  *(void *)(v32 + 72) = v29;
  uint64_t v110 = v29;
  *(void *)(v32 + 80) = v31;
  swift_bridgeObjectRetain();
  int v119 = v31;
  swift_bridgeObjectRetain();
  sub_261B8F0C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8AA58();
  unint64_t v35 = v128;
  sub_261B8AA28();
  uint64_t v36 = v125;
  uint64_t v37 = v126;
  uint64_t v106 = *(void (**)(char *, char *, uint64_t))(v125 + 16);
  v106(v20, v35, v126);
  uint64_t v129 = v25;
  uint64_t v130 = v27;
  uint64_t v38 = sub_261B8AEF8();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = (uint64_t)v121;
  char v109 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56);
  uint64_t v108 = v39 + 56;
  v109(v121, 1, 1, v38);
  uint64_t v41 = v20;
  uint64_t v42 = sub_261B170A0(&qword_26A9477C8, MEMORY[0x263F06828]);
  sub_261A029C4();
  unint64_t v43 = v124;
  char v107 = (void (*)(char *, uint64_t))v42;
  sub_261B8AAD8();
  sub_2619F8754(v40, &qword_26A9455A0);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v36 + 8);
  v44(v41, v37);
  swift_bridgeObjectRelease();
  uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v127 + 48);
  v127 += 48;
  if (v45((uint64_t)v43, 1, v123) == 1)
  {
    uint64_t v46 = v128;
    swift_bridgeObjectRelease();
    uint64_t v48 = v125;
    uint64_t v47 = v126;
    uint64_t v49 = (void (*)(void, void, void))v124;
  }
  else
  {
    sub_261B170E8((uint64_t)v124, v122);
    uint64_t v50 = v126;
    v106(v41, v128, v126);
    uint64_t v129 = v110;
    uint64_t v130 = v119;
    uint64_t v51 = (uint64_t)v121;
    v109(v121, 1, 1, v38);
    uint64_t v52 = (uint64_t)v111;
    sub_261B8AAD8();
    sub_2619F8754(v51, &qword_26A9455A0);
    v44(v41, v50);
    swift_bridgeObjectRelease();
    if (v45(v52, 1, v123) != 1)
    {
      sub_261B170E8(v52, v114);
      uint64_t v54 = v105;
      sub_2619F86F0(v122, v105, &qword_26A9477C0);
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      v96[1] = swift_getKeyPath();
      LODWORD(v127) = *MEMORY[0x263F1A6C8];
      uint64_t v56 = v117;
      uint64_t v57 = *(void (**)(void))(v117 + 104);
      uint64_t v121 = (char *)(v117 + 104);
      unint64_t v124 = v57;
      int v58 = v112;
      uint64_t v59 = v113;
      v57();
      LODWORD(v111) = *MEMORY[0x263F1A610];
      uint64_t v60 = v111;
      uint64_t v61 = sub_261B8E118();
      uint64_t v62 = *(void *)(v61 - 8);
      unsigned int v63 = *(void (**)(void, void))(v62 + 104);
      uint64_t v110 = v62 + 104;
      int v119 = (void (*)(void, void, void))v63;
      uint64_t v64 = (uint64_t)v104;
      uint64_t v65 = v60;
      uint64_t v66 = v61;
      uint64_t v98 = v61;
      v63(v104, v65);
      uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
      uint64_t v108 = v62 + 56;
      char v109 = v67;
      v67((char *)v64, 0, 1, v66);
      sub_261B8E1A8();
      sub_2619F8754(v64, &qword_26A943488);
      int v68 = *(void (**)(char *, uint64_t))(v56 + 8);
      uint64_t v117 = v56 + 8;
      char v107 = v68;
      v68(v58, v59);
      LODWORD(v106) = *MEMORY[0x263F1A680];
      uint64_t v69 = v118;
      uint64_t v70 = *(void (**)(void))(v118 + 104);
      uint64_t v99 = v118 + 104;
      unint64_t v100 = (void (*)(char *, void, uint64_t))v70;
      uint64_t v71 = v115;
      uint64_t v72 = v116;
      v70(v115);
      sub_261B8E218();
      swift_release();
      uint64_t v73 = *(void (**)(char *, uint64_t))(v69 + 8);
      uint64_t v118 = v69 + 8;
      uint64_t v97 = v73;
      v73(v71, v72);
      sub_261B8E168();
      uint64_t v74 = sub_261B8E1D8();
      swift_release();
      uint64_t v131 = v74;
      v96[0] = sub_2619F8AB8(&qword_26A9477D8, &qword_26A9477C0);
      uint64_t v75 = (void (*)(uint64_t *, void))sub_261B8AA38();
      v96[2] = sub_261B17170();
      sub_261B8AAA8();
      v75(&v129, 0);
      sub_2619F8754(v54, &qword_26A9477C0);
      sub_2619F86F0(v122, v54, &qword_26A9477C0);
      uint64_t v76 = swift_getKeyPath();
      MEMORY[0x270FA5388](v76);
      swift_getKeyPath();
      uint64_t v77 = v102;
      char v78 = v101;
      unint64_t v79 = v103;
      (*(void (**)(char *, void, unint64_t))(v102 + 104))(v101, *MEMORY[0x263F42BE0], v103);
      uint64_t v80 = TrainingLoadBand.color.getter();
      (*(void (**)(char *, unint64_t))(v77 + 8))(v78, v79);
      uint64_t v131 = v80;
      unint64_t v81 = (void (*)(uint64_t *, void))sub_261B8AA38();
      unint64_t v103 = sub_261B17268();
      sub_261B8AAA8();
      v81(&v129, 0);
      sub_2619F8754(v54, &qword_26A9477C0);
      uint64_t v82 = v114;
      sub_2619F86F0(v114, v54, &qword_26A9477C0);
      uint64_t v83 = swift_getKeyPath();
      MEMORY[0x270FA5388](v83);
      swift_getKeyPath();
      unint64_t v84 = v112;
      uint64_t v85 = v113;
      ((void (*)(char *, void, uint64_t))v124)(v112, v127, v113);
      uint64_t v86 = v98;
      v119(v64, v111, v98);
      v109((char *)v64, 0, 1, v86);
      sub_261B8E1A8();
      sub_2619F8754(v64, &qword_26A943488);
      v107(v84, v85);
      unint64_t v87 = v115;
      uint64_t v88 = v116;
      v100(v115, v106, v116);
      sub_261B8E218();
      swift_release();
      v97(v87, v88);
      sub_261B8E168();
      uint64_t v89 = sub_261B8E1D8();
      swift_release();
      uint64_t v131 = v89;
      uint64_t v90 = v128;
      double v91 = (void (*)(uint64_t *, void))sub_261B8AA38();
      sub_261B8AAA8();
      v91(&v129, 0);
      sub_2619F8754(v54, &qword_26A9477C0);
      uint64_t v92 = v82;
      sub_2619F86F0(v82, v54, &qword_26A9477C0);
      uint64_t v93 = swift_getKeyPath();
      MEMORY[0x270FA5388](v93);
      swift_getKeyPath();
      uint64_t v131 = sub_261B8E8B8();
      uint64_t v94 = (void (*)(uint64_t *, void))sub_261B8AA38();
      uint64_t v47 = v126;
      sub_261B8AAA8();
      v94(&v129, 0);
      sub_2619F8754(v54, &qword_26A9477C0);
      sub_2619F8754(v92, &qword_26A9477C0);
      sub_2619F8754(v122, &qword_26A9477C0);
      uint64_t v48 = v125;
      uint64_t v53 = v90;
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v48 + 32))(v120, v53, v47);
    }
    uint64_t v47 = v50;
    uint64_t v46 = v128;
    sub_2619F8754(v122, &qword_26A9477C0);
    uint64_t v49 = (void (*)(void, void, void))v52;
    uint64_t v48 = v125;
  }
  sub_2619F8754((uint64_t)v49, &qword_26A9477B8);
  uint64_t v53 = v46;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v48 + 32))(v120, v53, v47);
}

uint64_t sub_261B16A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_261B8F0A8() & 1;
}

uint64_t TrainingLoadWorkoutsAddUpView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943318);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943320);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v1;
  uint64_t v12 = v1[1];
  *(void *)uint64_t v11 = sub_261B8DBE8();
  *((void *)v11 + 1) = 0;
  unsigned char v11[16] = 0;
  uint64_t v14 = &v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A943330) + 44)];
  uint64_t v30 = v13;
  uint64_t v32 = v13;
  uint64_t v33 = v12;
  sub_261B8DF88();
  type metadata accessor for TrainingLoadOnboardingCore();
  sub_261B170A0((unint64_t *)&qword_26A943338, (void (*)(uint64_t))type metadata accessor for TrainingLoadOnboardingCore);
  sub_261B8D378();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v15(v5, v8, v2);
  v15(v14, v5, v2);
  uint64_t v16 = &v14[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A943340) + 48)];
  *(void *)uint64_t v16 = 0;
  v16[8] = 1;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v8, v2);
  v17(v5, v2);
  uint64_t v18 = sub_261B8DBE8();
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v19 = (id)qword_26B416688;
  uint64_t v20 = sub_261B8AA48();
  uint64_t v22 = v21;

  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v30;
  *(void *)(v23 + 24) = v12;
  swift_retain();
  int v24 = sub_261B8D498();
  char v25 = MEMORY[0x263E4BEE0]((2 * v24));
  uint64_t v26 = sub_261B8D6B8();
  uint64_t v27 = v31;
  sub_2619F86F0((uint64_t)v11, v31, &qword_26A943320);
  uint64_t v28 = v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A943328) + 36);
  *(void *)uint64_t v28 = v20;
  *(void *)(v28 + 8) = v22;
  *(void *)(v28 + 16) = sub_2619FFE24;
  *(void *)(v28 + 24) = v23;
  *(void *)(v28 + 32) = v26;
  *(void *)(v28 + 40) = 0;
  *(unsigned char *)(v28 + 48) = 1;
  *(unsigned char *)(v28 + 49) = v25;
  *(void *)(v28 + 56) = v18;
  return sub_2619F8754((uint64_t)v11, &qword_26A943320);
}

uint64_t sub_261B16E78@<X0>(void *a1@<X8>)
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = (id)qword_26B416688;
  uint64_t v3 = sub_261B8AA48();
  uint64_t v5 = v4;

  uint64_t OnboardingCore = type metadata accessor for TrainingLoadOnboardingCore();
  uint64_t result = sub_261B15994((uint64_t)a1 + *(int *)(OnboardingCore + 24));
  *a1 = 0xD00000000000002ALL;
  a1[1] = 0x8000000261BA1D70;
  a1[2] = v3;
  a1[3] = v5;
  return result;
}

uint64_t sub_261B16F94@<X0>(void *a1@<X8>)
{
  return sub_261B16E78(a1);
}

uint64_t sub_261B16F9C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261B16FD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261B16FF4@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = sub_261A43960;
  a2[1] = (uint64_t (*)())v5;
  return swift_retain();
}

ValueMetadata *type metadata accessor for TrainingLoadWorkoutsAddUpView()
{
  return &type metadata for TrainingLoadWorkoutsAddUpView;
}

uint64_t sub_261B17078()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_261B170A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261B170E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9477C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_261B17150()
{
}

unint64_t sub_261B17170()
{
  unint64_t result = qword_26A9477D0;
  if (!qword_26A9477D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9477D0);
  }
  return result;
}

void sub_261B171C4()
{
}

uint64_t sub_261B171EC()
{
  return 8;
}

uint64_t sub_261B171F8()
{
  return swift_release();
}

uint64_t sub_261B17200(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_261B1720C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_261B16A60(a1, a2, a3, &qword_26A9477F0) & 1;
}

uint64_t sub_261B17230(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_26A9477F0);
}

void *sub_261B1723C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_261B17248()
{
}

unint64_t sub_261B17268()
{
  unint64_t result = qword_26A9477E0;
  if (!qword_26A9477E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9477E0);
  }
  return result;
}

void sub_261B172BC()
{
}

uint64_t sub_261B172E4()
{
  return 8;
}

uint64_t sub_261B172F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_261B16A60(a1, a2, a3, &qword_26A9477E8) & 1;
}

uint64_t sub_261B17314(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_26A9477E8);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_261B8F038();
}

ValueMetadata *type metadata accessor for EffortGraphLayout()
{
  return &type metadata for EffortGraphLayout;
}

double sub_261B17388(uint64_t a1)
{
  double v2 = 3.0;
  if ((unint64_t)(a1 - 1) <= 7) {
    double v2 = dbl_261B9A538[a1 - 1];
  }
  return ((double)a1 + -1.0) * ((*v1 + v1[2] * -3.0) / 10.0) + v1[2] * v2;
}

double sub_261B173DC(uint64_t a1)
{
  double v2 = 3.0;
  if ((unint64_t)(a1 - 1) <= 7) {
    double v2 = dbl_261B9A538[a1 - 1];
  }
  return (((double)a1 + -1.0) * ((*v1 - v1[2] * 3.0) / 10.0) + v1[2] * v2)
       / (v1[2] * 3.0 + (*v1 - v1[2] * 3.0) / 10.0 * 9.0);
}

uint64_t sub_261B17440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v54 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946110);
  uint64_t v55 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v53 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8BF08();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v57 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v59 = (char *)&v50 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v50 - v15;
  sub_261B8C438();
  double v18 = v17;
  uint64_t v19 = sub_261B8C458();
  uint64_t v52 = a1;
  uint64_t v20 = *(void *)(a1 + 24);
  uint64_t v21 = MEMORY[0x263F8EE78];
  uint64_t v61 = v20;
  uint64_t v62 = MEMORY[0x263F8EE78];
  uint64_t v22 = *(void *)(v20 + 16);
  swift_bridgeObjectRetain();
  uint64_t v60 = v22;
  if (!v22)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v62 = v21;
    uint64_t v45 = swift_allocObject();
    uint64_t v46 = v52;
    *(void *)(v45 + 16) = v52;
    *(double *)(v45 + 24) = a3;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A947810);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946128);
    sub_2619F8AB8(&qword_26A947818, &qword_26A947810);
    sub_2619F8AB8(&qword_26A946120, &qword_26A946128);
    sub_261B1B248();
    uint64_t v47 = v53;
    uint64_t v48 = sub_261B8EBC8();
    MEMORY[0x270FA5388](v48);
    *((double *)&v50 - 4) = a3;
    *((double *)&v50 - 3) = a4;
    uint64_t v49 = v46;
    sub_261B8CFF8();
    sub_261A98C5C(&qword_26A946118, &qword_26A946110, &qword_26A946120, &qword_26A946128);
    sub_261B8CF98();
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v47, v7);
  }
  uint64_t v51 = v7;
  unint64_t v23 = 0;
  double v24 = (v18 + v18) / (double)v19;
  double v25 = a3 - v24;
  double v26 = v24 + a4;
  uint64_t v58 = v10 + 16;
  uint64_t v27 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v56 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t result = v61;
  while (v23 < *(void *)(result + 16))
  {
    unint64_t v31 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v32 = *(void *)(v10 + 72);
    uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
    v33(v16, result + v31 + v32 * v23, v9);
    sub_261B8BEF8();
    double v35 = v34;
    uint64_t v36 = v59;
    v33(v59, (unint64_t)v16, v9);
    if (v25 > v35)
    {
      uint64_t v29 = v36;
      uint64_t v30 = *v27;
      (*v27)(v29, v9);
    }
    else
    {
      uint64_t v37 = v36;
      sub_261B8BEF8();
      double v39 = v38;
      uint64_t v30 = *v27;
      (*v27)(v37, v9);
      if (v39 <= v26)
      {
        uint64_t v40 = *v56;
        (*v56)(v57, v16, v9);
        uint64_t v41 = v62;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_261ACA338(0, *(void *)(v41 + 16) + 1, 1);
          uint64_t v41 = v62;
        }
        unint64_t v43 = *(void *)(v41 + 16);
        unint64_t v42 = *(void *)(v41 + 24);
        unint64_t v44 = v43 + 1;
        if (v43 >= v42 >> 1)
        {
          unint64_t v50 = v43 + 1;
          sub_261ACA338(v42 > 1, v43 + 1, 1);
          unint64_t v44 = v50;
          uint64_t v41 = v62;
        }
        *(void *)(v41 + 16) = v44;
        v40((char *)(v41 + v31 + v43 * v32), v57, v9);
        uint64_t v62 = v41;
        goto LABEL_5;
      }
    }
    v30(v16, v9);
LABEL_5:
    ++v23;
    uint64_t result = v61;
    if (v60 == v23)
    {
      uint64_t v21 = v62;
      uint64_t v7 = v51;
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_261B17994@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v30 = a2;
  uint64_t v34 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946148);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  uint64_t v33 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946228);
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v27 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_261B8BF08();
  uint64_t v13 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  double v18 = (char *)&v27 - v17;
  sub_261A94384((uint64_t)&v27 - v17, a4);
  sub_261A94384((uint64_t)v15, a5);
  uint64_t v19 = *(void *)(a1 + 24);
  uint64_t v36 = v18;
  uint64_t v37 = v15;
  swift_bridgeObjectRetain();
  sub_261B04464((uint64_t (*)(char *))sub_261B1B220, (uint64_t)v35, v19);
  uint64_t v41 = v20;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947810);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A946160);
  sub_2619F8AB8(&qword_26A947818, &qword_26A947810);
  sub_2619F8AB8(&qword_26A946158, &qword_26A946160);
  sub_261B1B248();
  sub_261B8EBC8();
  long long v21 = v30[1];
  long long v38 = *v30;
  long long v39 = v21;
  uint64_t v40 = *((void *)v30 + 4);
  sub_261A98C5C(&qword_26A946150, &qword_26A946148, &qword_26A946158, &qword_26A946160);
  uint64_t v22 = v27;
  uint64_t v23 = v32;
  sub_261B8CF38();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v23);
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v34, v22, v31);
  double v24 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v25 = v28;
  v24(v15, v28);
  return ((uint64_t (*)(char *, uint64_t))v24)(v18, v25);
}

uint64_t sub_261B17D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v57 = a3;
  uint64_t v61 = a4;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9477F8) - 8;
  MEMORY[0x270FA5388](v60);
  uint64_t v59 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947800);
  uint64_t v51 = *(void *)(v55 - 8);
  uint64_t v9 = v51;
  MEMORY[0x270FA5388](v55);
  uint64_t v54 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v62 = (uint64_t)&v49 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946188);
  uint64_t v50 = *(void *)(v13 - 8);
  uint64_t v14 = v50;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v49 - v18;
  uint64_t v58 = sub_261B8BF08();
  uint64_t v56 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  long long v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261A94384((uint64_t)v21, a5);
  sub_261B8BEF8();
  double v23 = v22;
  double v24 = *(double *)(a1 + 48);
  sub_261B8BED8();
  uint64_t v53 = v19;
  sub_261B1A598(*(double *)&a2, (uint64_t)v19, v23, v24, v25);
  double v26 = *(void **)(a1 + 16);
  sub_261B8BEF8();
  double v28 = v27;
  sub_261B8BED8();
  uint64_t v29 = v62;
  sub_261B1A980(v26, a2, v57, v62, v28, v30);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v52 = v16;
  v31(v16, v19, v13);
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v33 = v54;
  uint64_t v34 = v29;
  uint64_t v35 = v55;
  v32(v54, v34, v55);
  sub_261B8D278();
  uint64_t v36 = v59;
  uint64_t v37 = v16;
  uint64_t v38 = v13;
  v31(v59, v37, v13);
  sub_261B8D308();
  sub_261A99034();
  sub_261A990D4();
  uint64_t v39 = v60;
  uint64_t v40 = &v36[*(int *)(v60 + 56)];
  uint64_t v41 = v33;
  v32(v40, (uint64_t)v33, v35);
  uint64_t v42 = v50;
  uint64_t v43 = v61;
  (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v61, v36, v38);
  uint64_t v44 = v43 + *(int *)(v39 + 56);
  uint64_t v45 = v51;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v44, v40, v35);
  uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
  v46(v62, v35);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v42 + 8);
  v47(v53, v38);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v21, v58);
  v46((uint64_t)v41, v35);
  return ((uint64_t (*)(char *, uint64_t))v47)(v52, v38);
}

uint64_t sub_261B181C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v53 = a3;
  uint64_t v59 = a4;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947840) - 8;
  MEMORY[0x270FA5388](v58);
  uint64_t v57 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9461A0);
  uint64_t v48 = *(void *)(v54 - 8);
  uint64_t v9 = v48;
  MEMORY[0x270FA5388](v54);
  uint64_t v52 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v46 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946188);
  uint64_t v47 = *(void *)(v14 - 8);
  uint64_t v15 = v47;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v46 - v19;
  uint64_t v21 = sub_261B8BF08();
  uint64_t v55 = *(void *)(v21 - 8);
  uint64_t v56 = v21;
  MEMORY[0x270FA5388](v21);
  double v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261A94384((uint64_t)v23, a5);
  sub_261B8BEF8();
  double v25 = v24;
  double v26 = *(double *)(a1 + 48);
  sub_261B8BED8();
  uint64_t v51 = v20;
  sub_261B1A598(*(double *)&a2, (uint64_t)v20, v25, v26, v27);
  sub_261B8BEF8();
  double v29 = v28;
  sub_261B8BED8();
  uint64_t v49 = v13;
  sub_261B1AE28(a2, v53, (uint64_t)v13, v29, v30);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v50 = v17;
  uint64_t v46 = v14;
  v31(v17, v20, v14);
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v33 = v52;
  uint64_t v34 = v13;
  uint64_t v35 = v54;
  v32(v52, v34, v54);
  sub_261B8D278();
  uint64_t v36 = v57;
  v31(v57, v17, v14);
  sub_261B8D308();
  sub_261A99034();
  uint64_t v37 = v58;
  uint64_t v38 = &v36[*(int *)(v58 + 56)];
  v32(v38, v33, v35);
  uint64_t v39 = v46;
  uint64_t v40 = v47;
  uint64_t v41 = v59;
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v59, v36, v46);
  uint64_t v42 = v48;
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v41 + *(int *)(v37 + 56), v38, v35);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v42 + 8);
  v43(v49, v35);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v40 + 8);
  v44(v51, v39);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v56);
  v43(v33, v35);
  return ((uint64_t (*)(char *, uint64_t))v44)(v50, v39);
}

uint64_t sub_261B18604()
{
  return sub_261B8D158();
}

uint64_t sub_261B18670@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  unsigned int v63 = a2;
  uint64_t v73 = a3;
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947858) - 8;
  MEMORY[0x270FA5388](v72);
  uint64_t v71 = (char *)v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_261B8D258();
  uint64_t v67 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v64 = (char *)v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459C0);
  uint64_t v70 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v66 = (char *)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947860);
  uint64_t v80 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  char v78 = (char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v79 = (char *)v57 - v9;
  uint64_t v76 = sub_261B8E838();
  uint64_t v83 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v75 = (char *)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459C8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v74 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459D0);
  MEMORY[0x270FA5388](v13 - 8);
  MEMORY[0x270FA5388](v14);
  v57[1] = (char *)v57 - v15;
  MEMORY[0x270FA5388](v16);
  v57[2] = (char *)v57 - v17;
  uint64_t v61 = sub_261B8D1C8();
  uint64_t v62 = *(void **)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v19 = (char *)v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947868);
  uint64_t v82 = *(void **)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  unint64_t v81 = (char *)v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  unint64_t v84 = (char *)v57 - v22;
  unint64_t v60 = 0x8000000261BA1F80;
  sub_261B8DB98();
  v57[3] = a1;
  sub_261B8BEF8();
  uint64_t v88 = v23;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  uint64_t v88 = *((void *)v63 + 6);
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  sub_261B8BED8();
  uint64_t v88 = v24;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  uint64_t v88 = 0;
  unint64_t v89 = 0xE000000000000000;
  sub_261B8F1C8();
  sub_261B8F428();
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8D1A8();
  unsigned int v58 = *MEMORY[0x263F1B388];
  double v25 = *(void (**)(void))(v83 + 104);
  v83 += 104;
  uint64_t v59 = (void (*)(char *, void, uint64_t))v25;
  double v26 = v75;
  v25(v75);
  uint64_t v88 = MEMORY[0x263E4C7A0](v26, 0.192156863, 0.192156863, 0.192156863, 1.0);
  double v27 = v81;
  uint64_t v28 = v61;
  sub_261B8CF38();
  swift_release();
  ((void (*)(char *, uint64_t))v62[1])(v19, v28);
  double v29 = (void (*)(uint64_t, char *, uint64_t))v82[4];
  uint64_t v62 = v82 + 4;
  unsigned int v63 = v29;
  v29((uint64_t)v84, v27, v77);
  sub_261B8DB98();
  sub_261B8BEF8();
  uint64_t v88 = v30;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  sub_261B8BED8();
  uint64_t v88 = v31;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  uint64_t v88 = 0;
  unint64_t v89 = 0xE000000000000000;
  sub_261B8F1C8();
  sub_261B8F428();
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = v64;
  sub_261B8D238();
  sub_261B8D3F8();
  uint64_t v33 = MEMORY[0x263EFCD48];
  uint64_t v34 = v66;
  uint64_t v35 = v65;
  sub_261B8CFD8();
  sub_261A7D408((uint64_t)&v88);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v32, v35);
  uint64_t v36 = v75;
  v59(v75, v58, v76);
  uint64_t v37 = MEMORY[0x263E4C7A0](v36, 0.31372549, 0.31372549, 0.31372549, 1.0);
  uint64_t v86 = v33;
  uint64_t v87 = v37;
  uint64_t v85 = v35;
  swift_getOpaqueTypeConformance2();
  uint64_t v38 = v78;
  uint64_t v39 = v68;
  sub_261B8CF38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v34, v39);
  uint64_t v41 = v79;
  uint64_t v40 = v80;
  uint64_t v83 = *(void *)(v80 + 32);
  uint64_t v42 = v69;
  ((void (*)(char *, char *, uint64_t))v83)(v79, v38, v69);
  uint64_t v43 = v81;
  uint64_t v44 = (void (*)(char *, char *, uint64_t))v82[2];
  uint64_t v45 = v77;
  v44(v81, v84, v77);
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  uint64_t v47 = v38;
  uint64_t v48 = v42;
  v46(v47, v41, v42);
  uint64_t v49 = v71;
  v44(v71, v43, v45);
  uint64_t v50 = v72;
  uint64_t v51 = &v49[*(int *)(v72 + 56)];
  uint64_t v52 = v78;
  v46(v51, v78, v48);
  uint64_t v53 = v73;
  v63(v73, v49, v45);
  ((void (*)(uint64_t, char *, uint64_t))v83)(v53 + *(int *)(v50 + 56), v51, v48);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v80 + 8);
  v54(v79, v48);
  uint64_t v55 = (void (*)(char *, uint64_t))v82[1];
  v55(v84, v45);
  v54(v52, v48);
  return ((uint64_t (*)(char *, uint64_t))v55)(v81, v45);
}

uint64_t sub_261B1932C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459D0);
  MEMORY[0x270FA5388](v0 - 8);
  MEMORY[0x270FA5388](v1);
  MEMORY[0x270FA5388](v2);
  MEMORY[0x270FA5388](v3);
  sub_261B8DB98();
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_261B8CFE8();
}

BOOL sub_261B19570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_261B8BF08();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v23 - v10;
  sub_261B8BEF8();
  double v13 = v12;
  sub_261B8BEF8();
  double v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v16(v11, a1, v5);
  v16(v8, a3, v5);
  if (v13 <= v15)
  {
    sub_261B8BEF8();
    double v19 = v18;
    sub_261B8BEF8();
    BOOL v17 = v19 <= v20;
  }
  else
  {
    BOOL v17 = 0;
  }
  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v8, v5);
  v21(v11, v5);
  return v17;
}

uint64_t sub_261B1970C()
{
  return sub_261B8D158();
}

uint64_t sub_261B19774@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947838) - 8;
  MEMORY[0x270FA5388](v57);
  uint64_t v56 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_261B8D258();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  uint64_t v55 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v52 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459C0);
  uint64_t v64 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v62 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unsigned int v63 = (char *)&v46 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459C8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v50 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459D0);
  MEMORY[0x270FA5388](v12 - 8);
  MEMORY[0x270FA5388](v13);
  MEMORY[0x270FA5388](v14);
  uint64_t v59 = (void (*)(char *, char *, uint64_t))((char *)&v46 - v15);
  uint64_t v51 = sub_261B8D1C8();
  uint64_t v61 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  unint64_t v60 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v65 = (char *)&v46 - v18;
  unint64_t v49 = 0x8000000261BA1F80;
  sub_261B8DB98();
  sub_261B8BEF8();
  unint64_t v66 = v19;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  unint64_t v66 = *(void *)(a1 + 48);
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  sub_261B8BED8();
  unint64_t v66 = v20;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  unint64_t v47 = 0xD000000000000017;
  unint64_t v48 = 0x8000000261BA1FC0;
  unint64_t v66 = 0xD000000000000017;
  unint64_t v67 = 0x8000000261BA1FC0;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8D1A8();
  sub_261B8DB98();
  sub_261B8BEF8();
  unint64_t v66 = v21;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  sub_261B8BED8();
  unint64_t v66 = v22;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  unint64_t v66 = v47;
  unint64_t v67 = v48;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = v52;
  sub_261B8D238();
  sub_261B8D3F8();
  uint64_t v24 = v62;
  uint64_t v25 = v54;
  sub_261B8CFD8();
  sub_261A7D408((uint64_t)&v66);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v25);
  double v27 = v63;
  uint64_t v26 = v64;
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
  uint64_t v28 = v53;
  v59(v63, v24, v53);
  double v29 = v60;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  uint64_t v31 = v51;
  v30(v60, v65, v51);
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  uint64_t v33 = v24;
  uint64_t v34 = v28;
  v32(v33, v27, v28);
  uint64_t v35 = v56;
  uint64_t v36 = v29;
  uint64_t v37 = v31;
  v30(v56, v36, v31);
  uint64_t v38 = v57;
  uint64_t v39 = &v35[*(int *)(v57 + 56)];
  uint64_t v40 = v62;
  v32(v39, v62, v34);
  uint64_t v41 = v61;
  uint64_t v42 = v58;
  (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v58, v35, v37);
  v59((char *)(v42 + *(int *)(v38 + 56)), v39, v34);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v64 + 8);
  v43(v63, v34);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v41 + 8);
  v44(v65, v37);
  v43(v40, v34);
  return ((uint64_t (*)(char *, uint64_t))v44)(v60, v37);
}

uint64_t sub_261B19FC4@<X0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, uint64_t a4@<D0>)
{
  uint64_t v31 = a2;
  uint64_t v41 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459D0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v30 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v32 = sub_261B8D278();
  uint64_t v34 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946130);
  uint64_t v38 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946188);
  uint64_t v39 = *(void *)(v14 - 8);
  uint64_t v40 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946258);
  uint64_t v36 = *(void *)(v17 - 8);
  uint64_t v37 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v35 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = *a1;
  sub_261B8DB98();
  double v20 = v19 + 0.0;
  if (v19 + 0.0 < INFINITY) {
    *(void *)&v20 += (*(uint64_t *)&v20 >> 63) | 1;
  }
  *(double *)uint64_t v46 = v20;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  v46[0] = *(void *)(v31 + 48);
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  v46[0] = a4;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8D268();
  v46[0] = sub_261B8E898();
  uint64_t v21 = MEMORY[0x263F1B440];
  uint64_t v22 = MEMORY[0x263EFCD60];
  uint64_t v23 = MEMORY[0x263F1B420];
  uint64_t v24 = v32;
  sub_261B8CF38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v24);
  sub_261B8D3F8();
  uint64_t v42 = v24;
  uint64_t v43 = v21;
  uint64_t v44 = v22;
  uint64_t v45 = v23;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v26 = v33;
  sub_261B8CFD8();
  sub_261A7D408((uint64_t)v46);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v26);
  uint64_t v42 = v26;
  uint64_t v43 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  double v27 = v35;
  uint64_t v28 = v40;
  sub_261B8CFC8();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v28);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v36 + 32))(v41, v27, v37);
}

uint64_t sub_261B1A598@<X0>(double a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  double v28 = a1;
  uint64_t v29 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459D0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v24 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_261B8D278();
  uint64_t v25 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946130);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v26 = v15;
  uint64_t v27 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8DB98();
  v34[0] = a3;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  v34[0] = a4;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  v34[0] = a5;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8D268();
  v34[0] = v28;
  uint64_t v19 = MEMORY[0x263F1B440];
  uint64_t v20 = MEMORY[0x263EFCD60];
  uint64_t v21 = MEMORY[0x263F1B420];
  sub_261B8CF38();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v12);
  sub_261B8D3F8();
  uint64_t v30 = v12;
  uint64_t v31 = v19;
  uint64_t v32 = v20;
  uint64_t v33 = v21;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = v26;
  sub_261B8CFD8();
  sub_261A7D408((uint64_t)v34);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v18, v22);
}

uint64_t sub_261B1A980@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v31 = a3;
  uint64_t v11 = sub_261B8D0D8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9461A0);
  uint64_t v32 = *(void *)(v15 - 8);
  uint64_t v33 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B1ADE8();
  uint64_t v18 = (void *)sub_261B8F628();
  char v19 = sub_261B8F6A8();

  uint64_t v35 = v12;
  uint64_t v36 = v11;
  uint64_t v34 = a4;
  if ((v19 & 1) != 0
    || (uint64_t v20 = (void *)sub_261B8F638(), v21 = sub_261B8F6A8(), v20, (v21 & 1) != 0)
    || (uint64_t v22 = (void *)sub_261B8F648(), v23 = sub_261B8F6A8(), v22, (v23 & 1) != 0))
  {
    unint64_t v37 = 0x74756F5265636152;
    unint64_t v38 = 0xEA00000000005F65;
    swift_bridgeObjectRetain();
    sub_261B8F1C8();
    swift_bridgeObjectRelease();
    sub_261B8F1C8();
    sub_261B8F1C8();
    swift_bridgeObjectRelease();
    sub_261B8E998();
    uint64_t v24 = sub_261B1AE28(a2, v31, (uint64_t)v17, a5, a6);
    MEMORY[0x270FA5388](v24);
    sub_261B8D0C8();
    sub_261B8EC98();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9461A8);
    uint64_t v25 = sub_261B8D308();
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9461B0);
    unint64_t v27 = sub_261A99034();
    unint64_t v37 = v25;
    unint64_t v38 = v26;
    uint64_t v39 = MEMORY[0x263EFCD88];
    unint64_t v40 = v27;
    swift_getOpaqueTypeConformance2();
    sub_261A990D4();
    uint64_t v28 = v33;
    sub_261B8CEF8();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v28);
    return swift_release();
  }
  else
  {
    unint64_t v37 = 0;
    unint64_t v38 = 0xE000000000000000;
    sub_261B8F8C8();
    swift_bridgeObjectRelease();
    unint64_t v37 = 0xD00000000000002BLL;
    unint64_t v38 = 0x8000000261BA1F50;
    id v30 = objc_msgSend(a1, sel_description, v31);
    sub_261B8F0F8();

    sub_261B8F1C8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_261B8F9C8();
    __break(1u);
  }
  return result;
}

unint64_t sub_261B1ADE8()
{
  unint64_t result = qword_26A947808;
  if (!qword_26A947808)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A947808);
  }
  return result;
}

uint64_t sub_261B1AE28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  v15[0] = a2;
  v15[1] = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459D0);
  MEMORY[0x270FA5388](v8 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_261B8D308();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8DB98();
  double v16 = a4;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  double v16 = a5;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8D2F8();
  v15[4] = v15[0];
  v15[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9461B0);
  sub_261A99034();
  sub_261B8CFA8();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

double sub_261B1B0A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_261B8D3F8();
  swift_retain();
  uint64_t v6 = sub_261B8EC98();
  uint64_t v8 = v7;
  swift_retain();
  uint64_t v9 = sub_261B8EC98();
  uint64_t v11 = v10;
  sub_261B8EC98();
  sub_261B8D4D8();
  *(void *)a3 = a2;
  *(_WORD *)(a3 + 8) = 256;
  *(void *)(a3 + 16) = v13;
  *(void *)(a3 + 24) = v14;
  *(void *)(a3 + 32) = v15;
  *(void *)(a3 + 40) = v16;
  *(void *)(a3 + 48) = v17;
  *(void *)(a3 + 56) = a1;
  *(_WORD *)(a3 + 64) = 256;
  *(void *)(a3 + 72) = v6;
  *(void *)(a3 + 80) = v8;
  *(void *)(a3 + 88) = v9;
  *(void *)(a3 + 96) = v11;
  *(void *)(a3 + 104) = v18;
  *(unsigned char *)(a3 + 112) = v19;
  *(void *)(a3 + 120) = v20;
  *(unsigned char *)(a3 + 128) = v21;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  return result;
}

uint64_t sub_261B1B1DC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

double sub_261B1B218@<D0>(uint64_t a1@<X8>)
{
  return sub_261B1B0A0(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

BOOL sub_261B1B220(uint64_t a1)
{
  return sub_261B19570(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_261B1B240()
{
  return sub_261B1970C();
}

unint64_t sub_261B1B248()
{
  unint64_t result = qword_26A947820;
  if (!qword_26A947820)
  {
    sub_261B8BF08();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947820);
  }
  return result;
}

uint64_t sub_261B1B2A0@<X0>(uint64_t a1@<X8>)
{
  return sub_261B19774(*(void *)(v1 + 24), a1);
}

unint64_t sub_261B1B2A8()
{
  unint64_t result = qword_26A947830;
  if (!qword_26A947830)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947828);
    sub_261B8D258();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947830);
  }
  return result;
}

uint64_t sub_261B1B360()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261B1B398()
{
  return sub_261B18604();
}

uint64_t sub_261B1B3A4()
{
  return sub_261B1932C();
}

uint64_t sub_261B1B3B0@<X0>(uint64_t a1@<X8>)
{
  return sub_261B18670(*(void *)(v1 + 16), *(void (**)(uint64_t, char *, uint64_t))(v1 + 24), a1);
}

unint64_t sub_261B1B3BC()
{
  unint64_t result = qword_26A947850;
  if (!qword_26A947850)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947848);
    sub_261B8D1C8();
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9459C0);
    sub_261B8D258();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947850);
  }
  return result;
}

id VignetteView.__allocating_init(cornerRadius:)(double a1)
{
  id v3 = objc_allocWithZone(v1);
  return VignetteView.init(cornerRadius:)(a1);
}

id VignetteView.init(cornerRadius:)(double a1)
{
  v22.receiver = v1;
  v22.super_class = (Class)type metadata accessor for VignetteView();
  id v3 = objc_msgSendSuper2(&v22, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, sel_setAlpha_, 0.15);
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_clearColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  objc_msgSend(v3, sel_setClipsToBounds_, 1);
  id v6 = objc_msgSend(v3, sel_layer);
  sub_261B8F0F8();
  id v7 = objc_allocWithZone(MEMORY[0x263F157C8]);
  uint64_t v8 = (void *)sub_261B8F0B8();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithType_, v8);

  objc_msgSend(v6, sel_setCompositingFilter_, v9);
  id v10 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v10, sel_setCornerRadius_, a1);

  id v11 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v11, sel_setCornerCurve_, *MEMORY[0x263F15A20]);

  id v12 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v12, sel_setInvertsShadow_, 1);

  id v13 = objc_msgSend(v3, sel_layer);
  id v14 = objc_msgSend(v4, sel_whiteColor);
  id v15 = objc_msgSend(v14, sel_CGColor);

  objc_msgSend(v13, sel_setShadowColor_, v15);
  id v16 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v16, sel_setShadowOffset_, 0.0, 0.0);

  id v17 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v17, sel_setShadowRadius_, 10.0);

  id v18 = objc_msgSend(v3, sel_layer);
  LODWORD(v19) = 1.0;
  objc_msgSend(v18, sel_setShadowOpacity_, v19);

  id v20 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v20, sel_setShadowPathIsBounds_, 1);

  return v3;
}

uint64_t type metadata accessor for VignetteView()
{
  return self;
}

void sub_261B1B900(uint64_t a1)
{
  if (a1)
  {
    id v2 = objc_msgSend(v1, sel_layer);
    id v3 = objc_msgSend(self, sel_whiteColor);
  }
  else
  {
    id v2 = objc_msgSend(v1, sel_layer);
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 0.882352941, 1.0);
  }
  id v4 = objc_msgSend(v3, sel_CGColor);

  objc_msgSend(v2, sel_setShadowColor_, v4);
}

id VignetteView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void VignetteView.init(frame:)()
{
}

id VignetteView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VignetteView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for VignetteView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VignetteView);
}

uint64_t dispatch thunk of VignetteView.__allocating_init(cornerRadius:)()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of VignetteView.update(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x58))();
}

WorkoutUI::TrainingLoadDayWidget __swiftcall TrainingLoadDayWidget.init(healthStore:)(HKHealthStore healthStore)
{
  v1->super.isa = (Class)0xD000000000000015;
  v1[1].super.isa = (Class)0x8000000261B9A590;
  v1[2].super.isa = healthStore.super.isa;
  result.kind._countAndFlagsBits = (uint64_t)healthStore.super.isa;
  return result;
}

WorkoutUI::TrainingLoadDayWidget __swiftcall TrainingLoadDayWidget.init()()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  *uint64_t v1 = 0xD000000000000015;
  v1[1] = 0x8000000261B9A590;
  v1[2] = v2;
  result.healthStore.super.isa = v4;
  result.kind._object = v3;
  result.kind._countAndFlagsBits = (uint64_t)v2;
  return result;
}

uint64_t TrainingLoadDayWidget.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416680);
  uint64_t v48 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416668);
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  MEMORY[0x270FA5388](v5);
  id v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416658);
  *(void *)&long long v52 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  unint64_t v49 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416660);
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v56 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v53 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = *(void **)(v1 + 16);
  id v11 = v58;
  type metadata accessor for TrainingLoadDayWidgetEntryView();
  sub_261B1C5A0();
  sub_261B1C5F8();
  swift_bridgeObjectRetain();
  id v47 = v11;
  sub_261B8EF88();
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v12 = (id)qword_26B416688;
  uint64_t v13 = sub_261B8AA48();
  uint64_t v15 = v14;

  uint64_t v58 = (void *)v13;
  uint64_t v59 = v15;
  unint64_t v16 = sub_261B1C64C();
  unint64_t v17 = sub_261A029C4();
  uint64_t v18 = MEMORY[0x263F8D310];
  sub_261B8DD48();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v4, v2);
  id v19 = (id)qword_26B416688;
  uint64_t v20 = sub_261B8AA48();
  uint64_t v22 = v21;

  uint64_t v62 = v20;
  uint64_t v63 = v22;
  uint64_t v58 = (void *)v2;
  uint64_t v59 = v18;
  unint64_t v60 = v16;
  unint64_t v61 = v17;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v24 = v49;
  uint64_t v25 = (void *)v51;
  sub_261B8DD18();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void *))(v50 + 8))(v7, v25);
  swift_bridgeObjectRetain();
  id v26 = v47;
  if (FIIsTinkerVegaOrFitnessJunior())
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v27 = v24;
    swift_bridgeObjectRetain();
    id v28 = v26;
    uint64_t v29 = (void *)sub_261B8F0B8();
    int v30 = MGGetSInt32Answer();

    swift_bridgeObjectRelease_n();
    if (v30 != 3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B4166B8);
      uint64_t v31 = sub_261B8EF38();
      uint64_t v32 = v25;
      uint64_t v33 = *(void *)(v31 - 8);
      unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_261B93F70;
      (*(void (**)(unint64_t, void, uint64_t))(v33 + 104))(v35 + v34, *MEMORY[0x263F1FCD8], v31);
      uint64_t v25 = v32;
    }
    uint64_t v24 = v27;
  }
  uint64_t v58 = v25;
  uint64_t v59 = MEMORY[0x263F8D310];
  unint64_t v60 = OpaqueTypeConformance2;
  unint64_t v61 = v17;
  uint64_t v36 = swift_getOpaqueTypeConformance2();
  unint64_t v38 = v53;
  uint64_t v37 = v54;
  sub_261B8DD28();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v24, v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B4166C0);
  sub_261B8EF58();
  uint64_t v39 = swift_allocObject();
  long long v52 = xmmword_261B93F70;
  *(_OWORD *)(v39 + 16) = xmmword_261B93F70;
  sub_261B8EF48();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B4166B8);
  uint64_t v40 = sub_261B8EF38();
  uint64_t v41 = *(void *)(v40 - 8);
  unint64_t v42 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = v52;
  (*(void (**)(unint64_t, void, uint64_t))(v41 + 104))(v43 + v42, *MEMORY[0x263F1FCD8], v40);
  uint64_t v58 = (void *)v37;
  uint64_t v59 = v36;
  swift_getOpaqueTypeConformance2();
  uint64_t v44 = v56;
  sub_261B8DD38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v38, v44);
}

uint64_t sub_261B1C4D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t DayEntry = type metadata accessor for TrainingLoadDayEntry();
  MEMORY[0x270FA5388](DayEntry - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261AF64E0(a1, (uint64_t)v6);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)(a2 + *(int *)(type metadata accessor for TrainingLoadDayWidgetEntryView() + 20)) = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9431F0);
  swift_storeEnumTagMultiPayload();
  return sub_261A82554((uint64_t)v6, a2);
}

unint64_t sub_261B1C5A0()
{
  unint64_t result = qword_26B4166A8;
  if (!qword_26B4166A8)
  {
    type metadata accessor for TrainingLoadDayWidgetEntryView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B4166A8);
  }
  return result;
}

unint64_t sub_261B1C5F8()
{
  unint64_t result = qword_26B4166B0;
  if (!qword_26B4166B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B4166B0);
  }
  return result;
}

unint64_t sub_261B1C64C()
{
  unint64_t result = qword_26B416678;
  if (!qword_26B416678)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B416680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B416678);
  }
  return result;
}

uint64_t sub_261B1C6A8()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_261B1C6C4@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  *a1 = 0xD000000000000015;
  a1[1] = 0x8000000261B9A590;
  a1[2] = result;
  return result;
}

void destroy for TrainingLoadDayWidget(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

void *_s9WorkoutUI21TrainingLoadDayWidgetVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for TrainingLoadDayWidget(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for TrainingLoadDayWidget(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for TrainingLoadDayWidget()
{
  return &type metadata for TrainingLoadDayWidget;
}

uint64_t sub_261B1C858()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261B1C984()
{
  return sub_261B8D9F8();
}

id WorkoutConfigurationView.init(workoutConfiguration:formattingManager:showAddButton:showStartWorkoutButton:overrideSaveWorkoutAction:startWorkoutAction:overrideDismissAction:referenceIntervalWorkoutConfiguration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_261B51FE8();
  sub_261B8EA08();
  *(unsigned char *)(a9 + 24) = v29;
  *(void *)(a9 + 32) = v30;
  unint64_t v16 = (int *)type metadata accessor for WorkoutConfigurationView();
  unint64_t v17 = (uint64_t *)(a9 + v16[9]);
  *unint64_t v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = (void *)(a9 + v16[10]);
  id v19 = (void *)(a9 + v16[11]);
  uint64_t v20 = v16[13];
  uint64_t v21 = (void *)(a9 + v16[12]);
  uint64_t v22 = v16[14];
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  *(void *)(a9 + v22) = result;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 17) = a4;
  void *v18 = a5;
  v18[1] = a6;
  *id v19 = a7;
  v19[1] = a8;
  *uint64_t v21 = a10;
  v21[1] = a11;
  *(void *)(a9 + v20) = a12;
  return result;
}

uint64_t WorkoutConfigurationView.body.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947870);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = &v5[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_261B1CC24(v0, (uint64_t)v3);
  uint64_t v6 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947878);
  sub_261B1F588();
  sub_2619F8AB8(&qword_26A947898, &qword_26A947878);
  sub_261B8E7A8();
  return sub_2619F8754((uint64_t)v3, &qword_26A947870);
}

id sub_261B1CC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = type metadata accessor for WorkoutConfigurationView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947890);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_261B1CEB4((uint64_t)&v35);
  long long v27 = v35;
  uint64_t v26 = v36;
  int v25 = v37;
  uint64_t v11 = *(void *)(a1 + 32);
  char v30 = *(unsigned char *)(a1 + 24);
  uint64_t v31 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9478C8);
  sub_261B8EA38();
  uint64_t v12 = v33;
  uint64_t v24 = v32;
  int v23 = v34;
  uint64_t v13 = *(void **)a1;
  char v29 = *(void **)(a1 + 8);
  sub_261B20600(a1, (uint64_t)v6);
  unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = swift_allocObject();
  sub_261B20668((uint64_t)v6, v15 + v14);
  sub_261B20600(a1, (uint64_t)v6);
  uint64_t v16 = swift_allocObject();
  sub_261B20668((uint64_t)v6, v16 + v14);
  *(_OWORD *)uint64_t v10 = v27;
  *((void *)v10 + 2) = v26;
  *((_WORD *)v10 + 12) = v25;
  *((void *)v10 + 4) = v24;
  *((void *)v10 + 5) = v12;
  v10[48] = v23;
  unint64_t v17 = v29;
  *((void *)v10 + 7) = v13;
  *((void *)v10 + 8) = v17;
  *((void *)v10 + 9) = sub_261B20780;
  *((void *)v10 + 10) = v15;
  *((void *)v10 + 11) = sub_261B207F4;
  *((void *)v10 + 12) = v16;
  uint64_t v18 = (uint64_t *)&v10[*(int *)(v8 + 64)];
  uint64_t *v18 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  swift_storeEnumTagMultiPayload();
  sub_261B20850((uint64_t)v10, v28);
  id v19 = v13;
  uint64_t v20 = v29;
  return v20;
}

void sub_261B1CEB4(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)v1;
  sub_261B8B848();
  uint64_t v4 = swift_dynamicCastClass();
  uint64_t v29 = a1;
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = *(void **)(v1 + 8);
    unsigned __int8 v34 = (void *)v4;
    long long v35 = v6;
    uint64_t v36 = 0;
    unsigned __int8 v37 = 0;
    sub_261B21070();
    sub_261B210C4();
    id v7 = v3;
    id v8 = v6;
    id v28 = v5;
    id v9 = v8;
    sub_261B8DD68();
    sub_261B21150(v30, v31, v32, v33);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A947900);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A947908);
    sub_261B20FE8(&qword_26A947910, &qword_26A947900, (void (*)(void))sub_261B21070, (void (*)(void))sub_261B210C4);
    a1 = v29;
    sub_261B20FE8(&qword_26A947928, &qword_26A947908, (void (*)(void))sub_261B20F08, (void (*)(void))sub_261B20F5C);
    sub_261B8DD68();

    sub_261B2119C(v30, v31, v32, v33);
LABEL_5:

    goto LABEL_6;
  }
  sub_261B8B988();
  uint64_t v10 = swift_dynamicCastClass();
  if (v10)
  {
    unsigned __int8 v34 = (void *)v10;
    long long v35 = *(void **)(v1 + 8);
    uint64_t v36 = *(void **)(v1 + *(int *)(type metadata accessor for WorkoutConfigurationView() + 52));
    unsigned __int8 v37 = 1;
    sub_261B21070();
    sub_261B210C4();
    id v27 = v3;
    id v11 = v35;
    id v12 = v36;
    id v28 = v34;
    id v9 = v11;
    id v13 = v12;
    sub_261B8DD68();
    sub_261B21150(v30, v31, v32, v33);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A947900);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A947908);
    sub_261B20FE8(&qword_26A947910, &qword_26A947900, (void (*)(void))sub_261B21070, (void (*)(void))sub_261B210C4);
    sub_261B20FE8(&qword_26A947928, &qword_26A947908, (void (*)(void))sub_261B20F08, (void (*)(void))sub_261B20F5C);
    sub_261B8DD68();

    sub_261B2119C(v30, v31, v32, v33);
    goto LABEL_5;
  }
  sub_261B8B918();
  uint64_t v19 = swift_dynamicCastClass();
  if (v19)
  {
    uint64_t v20 = (void *)v19;
    uint64_t v21 = *(void **)(v1 + 8);
    unsigned __int8 v34 = (void *)v19;
    long long v35 = v21;
    LOBYTE(v36) = 0;
  }
  else
  {
    sub_261B8B818();
    uint64_t v22 = swift_dynamicCastClass();
    if (!v22)
    {
      unint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      __int16 v18 = -256;
      goto LABEL_10;
    }
    uint64_t v20 = (void *)v22;
    uint64_t v21 = *(void **)(v1 + 8);
    unsigned __int8 v34 = (void *)v22;
    long long v35 = v21;
    LOBYTE(v36) = 1;
  }
  sub_261B20F08();
  sub_261B20F5C();
  id v23 = v3;
  id v24 = v21;
  id v25 = v20;
  id v26 = v24;
  sub_261B8DD68();
  sub_261B20FB0(v30, v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947900);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947908);
  sub_261B20FE8(&qword_26A947910, &qword_26A947900, (void (*)(void))sub_261B21070, (void (*)(void))sub_261B210C4);
  sub_261B20FE8(&qword_26A947928, &qword_26A947908, (void (*)(void))sub_261B20F08, (void (*)(void))sub_261B20F5C);
  sub_261B8DD68();

  sub_261B21118(v30, v31);
LABEL_6:
  unint64_t v14 = v34;
  uint64_t v15 = v35;
  uint64_t v16 = v36;
  if (v38) {
    __int16 v17 = 256;
  }
  else {
    __int16 v17 = 0;
  }
  __int16 v18 = v17 | v37;
LABEL_10:
  *(void *)a1 = v14;
  *(void *)(a1 + 8) = v15;
  *(void *)(a1 + 16) = v16;
  *(_WORD *)(a1 + 24) = v18;
}

uint64_t sub_261B1D438(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8D518();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for WorkoutConfigurationView();
  id v9 = *(void (**)(void *))(a2 + *(int *)(v8 + 40));
  if (!v9) {
    return sub_261B1E71C(a1);
  }
  uint64_t v10 = v8;
  swift_retain();
  v9(a1);
  id v11 = *(void (**)(uint64_t))(a2 + *(int *)(v10 + 48));
  if (v11)
  {
    uint64_t v12 = swift_retain();
    v11(v12);
    sub_261AD5928((uint64_t)v11);
    return sub_261AD5928((uint64_t)v9);
  }
  else
  {
    sub_2619FAB90((uint64_t)v7);
    sub_261B8D508();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return sub_261AD5928((uint64_t)v9);
  }
}

uint64_t sub_261B1D5E4()
{
  uint64_t v1 = sub_261B8C1B8();
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = type metadata accessor for WorkoutConfigurationView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = sub_261B8BA88();
  unint64_t v7 = v6;
  unsigned int v15 = getpid();
  uint64_t v8 = *(void **)(v0 + *(int *)(v2 + 56));
  id v9 = (void *)sub_261B8AC08();
  sub_261B20600(v0, (uint64_t)&v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  sub_261B20668((uint64_t)&v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v11 + v10);
  aBlock[4] = sub_261B20A58;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_261AC6BE0;
  aBlock[3] = &block_descriptor_5;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v8, sel__startWatchAppWithWorkoutPlanData_processIdentifier_completion_, v9, v15, v12);
  _Block_release(v12);

  return sub_261A340C4(v5, v7);
}

uint64_t sub_261B1D8BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9478B0);
  MEMORY[0x270FA5388](v3);
  uint64_t v46 = (uint64_t)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_261B8DDB8();
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9478B8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9478C0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v45 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v41 - v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v20 = *(void *)(a1 + 32);
  LOBYTE(v48) = *(unsigned char *)(a1 + 24);
  uint64_t v49 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9478C8);
  sub_261B8EA18();
  id v47 = v19;
  uint64_t v43 = v7;
  if ((v50 & 0xFB) != 0)
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9478D0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v16, 1, 1, v21);
    uint64_t v22 = sub_2619F8AB8(&qword_26A9478D8, &qword_26A9478B8);
    uint64_t v48 = v8;
    uint64_t v49 = v22;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    MEMORY[0x263E4BCA0](v16, v21, OpaqueTypeConformance2);
    sub_2619F8754((uint64_t)v16, &qword_26A9478C0);
  }
  else
  {
    uint64_t v24 = sub_261B8DD98();
    MEMORY[0x270FA5388](v24);
    *(&v41 - 2) = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9478E0);
    uint64_t v42 = v9;
    sub_261B204F0();
    sub_261B8D408();
    uint64_t v25 = sub_2619F8AB8(&qword_26A9478D8, &qword_26A9478B8);
    MEMORY[0x263E4BC90](v11, v8, v25);
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9478D0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v16, 0, 1, v26);
    uint64_t v48 = v8;
    uint64_t v49 = v25;
    uint64_t v27 = swift_getOpaqueTypeConformance2();
    uint64_t v28 = v26;
    uint64_t v9 = v42;
    MEMORY[0x263E4BCA0](v16, v28, v27);
    sub_2619F8754((uint64_t)v16, &qword_26A9478C0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v29 = *(void *)(a1 + 32);
  LOBYTE(v48) = *(unsigned char *)(a1 + 24);
  uint64_t v49 = v29;
  sub_261B8EA18();
  if ((v50 & 0xFB) != 0)
  {
    uint64_t v30 = sub_261B8DDA8();
    MEMORY[0x270FA5388](v30);
    *(&v41 - 2) = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9478E0);
    sub_261B204F0();
    sub_261B8D408();
    uint64_t v31 = sub_2619F8AB8(&qword_26A9478D8, &qword_26A9478B8);
    MEMORY[0x263E4BC90](v11, v8, v31);
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9478D0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v16, 0, 1, v32);
    uint64_t v48 = v8;
    uint64_t v49 = v31;
    uint64_t v33 = swift_getOpaqueTypeConformance2();
    uint64_t v34 = (uint64_t)v45;
    MEMORY[0x263E4BCA0](v16, v32, v33);
    sub_2619F8754((uint64_t)v16, &qword_26A9478C0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9478D0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v16, 1, 1, v35);
    uint64_t v36 = sub_2619F8AB8(&qword_26A9478D8, &qword_26A9478B8);
    uint64_t v48 = v8;
    uint64_t v49 = v36;
    uint64_t v37 = swift_getOpaqueTypeConformance2();
    uint64_t v34 = (uint64_t)v45;
    MEMORY[0x263E4BCA0](v16, v35, v37);
    sub_2619F8754((uint64_t)v16, &qword_26A9478C0);
  }
  uint64_t v38 = (uint64_t)v47;
  uint64_t v39 = v46 + *(int *)(v3 + 48);
  sub_261B2043C((uint64_t)v47, v46);
  sub_261B2043C(v34, v39);
  sub_261B8DC48();
  sub_2619F8754(v34, &qword_26A9478C0);
  return sub_2619F8754(v38, &qword_26A9478C0);
}

uint64_t sub_261B1DFC0(uint64_t a1)
{
  uint64_t v2 = sub_261B8D518();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8C1B8();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v7 + 104))(v10, *MEMORY[0x263F87DE0], v6, v8);
  sub_261B8C1C8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v11 = *(void (**)(uint64_t))(a1 + *(int *)(type metadata accessor for WorkoutConfigurationView() + 48));
  if (v11)
  {
    uint64_t v12 = swift_retain();
    v11(v12);
    return sub_261AD5928((uint64_t)v11);
  }
  else
  {
    sub_2619FAB90((uint64_t)v5);
    sub_261B8D508();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_261B1E1A8@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = (id)qword_26B416688;
  sub_261B8AA48();

  sub_261A029C4();
  uint64_t result = sub_261B8E3D8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_261B1E2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = type metadata accessor for WorkoutConfigurationView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946E00);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B20600(a1, (uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  sub_261B20668((uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  sub_261B8EA58();
  uint64_t v12 = sub_261B8E898();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = v18;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v18, v9, v6);
  uint64_t v15 = (uint64_t *)(v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A9478E0) + 36));
  *uint64_t v15 = KeyPath;
  v15[1] = v12;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_261B1E4D0(uint64_t a1)
{
  uint64_t v2 = sub_261B8D518();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(uint64_t))(a1 + *(int *)(type metadata accessor for WorkoutConfigurationView() + 48));
  if (v6)
  {
    uint64_t v7 = swift_retain();
    v6(v7);
    return sub_261AD5928((uint64_t)v6);
  }
  else
  {
    sub_2619FAB90((uint64_t)v5);
    sub_261B8D508();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_261B1E608@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = (id)qword_26B416688;
  sub_261B8AA48();

  sub_261A029C4();
  uint64_t result = sub_261B8E3D8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_261B1E71C(void *a1)
{
  uint64_t v2 = sub_261B8C1B8();
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = type metadata accessor for WorkoutConfigurationView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = sub_261B8BA88();
  unint64_t v8 = v7;
  id v9 = objc_msgSend(self, sel_sharedInstance);
  unint64_t v10 = (void *)sub_261B8AC08();
  sub_261B20600(v16[1], (uint64_t)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_261B20668((uint64_t)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  aBlock[4] = sub_261B20E84;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_261AC6BE0;
  aBlock[3] = &block_descriptor_32;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = a1;
  swift_release();
  objc_msgSend(v9, sel_saveWorkoutCompositionData_completion_, v10, v13);
  _Block_release(v13);

  return sub_261A340C4(v6, v8);
}

uint64_t sub_261B1EACC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = sub_261B8ED78();
  uint64_t v23 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_261B8ED98();
  uint64_t v21 = *(void *)(v8 - 8);
  uint64_t v22 = v8;
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WorkoutConfigurationView();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11 - 8);
  sub_261A46578();
  id v14 = (void *)sub_261B8F568();
  sub_261B20600(a3, (uint64_t)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  sub_261B20668((uint64_t)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  aBlock[4] = sub_261B20C7C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_261B052D8;
  aBlock[3] = &block_descriptor_26_0;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = a2;
  swift_release();
  sub_261B8ED88();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_261A467A4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CB0);
  sub_2619F8AB8((unint64_t *)&qword_26B416CB8, &qword_26B416CB0);
  sub_261B8F7E8();
  MEMORY[0x263E4D450](0, v10, v7, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v10, v22);
}

uint64_t sub_261B1EE0C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8D518();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_261B8C1B8();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_261B93F70;
    uint64_t v26 = a1;
    id v14 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943900);
    uint64_t v15 = sub_261B8F128();
    uint64_t v17 = v16;
    *(void *)(inited + 56) = MEMORY[0x263F8D310];
    *(void *)(inited + 64) = sub_261A2B2E8();
    *(void *)(inited + 32) = v15;
    *(void *)(inited + 40) = v17;
    uint64_t v18 = sub_261B8F4B8();
    sub_261A407F4((uint64_t)"WorkoutKitXPCServiceHelper failed to open workout app. Error: %@", 64, 2, v18, inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945040);
    swift_arrayDestroy();
    (*(void (**)(unsigned char *, void, uint64_t))(v9 + 104))(v12, *MEMORY[0x263F87DD0], v8);
    sub_261B8C1C8();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t v19 = *(void *)(a2 + 32);
    LOBYTE(v26) = *(unsigned char *)(a2 + 24);
    uint64_t v27 = v19;
    char v25 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9478C8);
    return sub_261B8EA28();
  }
  else
  {
    (*(void (**)(unsigned char *, void, uint64_t, double))(v9 + 104))(v12, *MEMORY[0x263F87DD8], v8, v10);
    sub_261B8C1C8();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t v21 = *(void *)(a2 + 32);
    LOBYTE(v26) = *(unsigned char *)(a2 + 24);
    uint64_t v27 = v21;
    char v25 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9478C8);
    sub_261B8EA28();
    uint64_t v22 = *(void (**)(uint64_t))(a2 + *(int *)(type metadata accessor for WorkoutConfigurationView() + 48));
    if (v22)
    {
      uint64_t v23 = swift_retain();
      v22(v23);
      return sub_261AD5928((uint64_t)v22);
    }
    else
    {
      sub_2619FAB90((uint64_t)v7);
      sub_261B8D508();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

void sub_261B1F170(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_261B8C1B8();
  uint64_t v8 = *(void *)(v7 - 8);
  v9.n128_f64[0] = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2 || (a1 & 1) != 0)
  {
    (*(void (**)(char *, void, uint64_t, __n128))(v8 + 104))(v11, *MEMORY[0x263F87DC8], v7, v9);
    sub_261B8C1C8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    uint64_t v19 = *(void *)(a4 + 32);
    char v22 = *(unsigned char *)(a4 + 24);
    uint64_t v23 = v19;
    char v21 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9478C8);
    sub_261B8EA28();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_261B93F70;
    swift_getErrorValue();
    id v13 = a2;
    uint64_t v14 = sub_261B8FC08();
    uint64_t v16 = v15;
    *(void *)(inited + 56) = MEMORY[0x263F8D310];
    *(void *)(inited + 64) = sub_261A2B2E8();
    *(void *)(inited + 32) = v14;
    *(void *)(inited + 40) = v16;
    uint64_t v17 = sub_261B8F4B8();
    sub_261A407F4((uint64_t)"WorkoutKitXPCServiceHelper failed to save workout plan. Error: %@", 65, 2, v17, inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945040);
    swift_arrayDestroy();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, *MEMORY[0x263F87DD0], v7);
    sub_261B8C1C8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    uint64_t v18 = *(void *)(a4 + 32);
    char v22 = *(unsigned char *)(a4 + 24);
    uint64_t v23 = v18;
    char v21 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9478C8);
    sub_261B8EA28();
  }
}

uint64_t sub_261B1F40C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947870);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = &v5[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_261B1CC24(v0, (uint64_t)v3);
  uint64_t v6 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947878);
  sub_261B1F588();
  sub_2619F8AB8(&qword_26A947898, &qword_26A947878);
  sub_261B8E7A8();
  return sub_2619F8754((uint64_t)v3, &qword_26A947870);
}

uint64_t type metadata accessor for WorkoutConfigurationView()
{
  uint64_t result = qword_26A9478A0;
  if (!qword_26A9478A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261B1F580@<X0>(uint64_t a1@<X8>)
{
  return sub_261B1D8BC(*(void *)(v1 + 16), a1);
}

unint64_t sub_261B1F588()
{
  unint64_t result = qword_26A947880;
  if (!qword_26A947880)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947870);
    sub_2619F8AB8(&qword_26A947888, &qword_26A947890);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947880);
  }
  return result;
}

uint64_t sub_261B1F620()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for WorkoutConfigurationView(char *a1, char **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    *((void *)a1 + 1) = v8;
    *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
    a1[24] = *((unsigned char *)a2 + 24);
    *((void *)a1 + 4) = a2[4];
    uint64_t v9 = a3[9];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char **)((char *)a2 + v9);
    uint64_t v12 = v5;
    id v13 = v8;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_261B8D518();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v10, v11, v14);
    }
    else
    {
      *(void *)uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[10];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = (char **)((char *)a2 + v15);
    if (*v17)
    {
      uint64_t v18 = v17[1];
      *(void *)uint64_t v16 = *v17;
      *((void *)v16 + 1) = v18;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    }
    uint64_t v19 = a3[11];
    uint64_t v20 = &a1[v19];
    char v21 = (char **)((char *)a2 + v19);
    if (*v21)
    {
      uint64_t v22 = v21[1];
      *(void *)uint64_t v20 = *v21;
      *((void *)v20 + 1) = v22;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    }
    uint64_t v23 = a3[12];
    uint64_t v24 = &a1[v23];
    char v25 = (char **)((char *)a2 + v23);
    if (*v25)
    {
      uint64_t v26 = v25[1];
      *(void *)uint64_t v24 = *v25;
      *((void *)v24 + 1) = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    }
    uint64_t v27 = a3[13];
    uint64_t v28 = a3[14];
    uint64_t v29 = *(char **)((char *)a2 + v27);
    *(void *)&a1[v27] = v29;
    uint64_t v30 = *(char **)((char *)a2 + v28);
    *(void *)&a1[v28] = v30;
    id v31 = v29;
    id v32 = v30;
  }
  return a1;
}

void destroy for WorkoutConfigurationView(id *a1, int *a2)
{
  swift_release();
  int v4 = (char *)a1 + a2[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_261B8D518();
    (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  if (*(id *)((char *)a1 + a2[10])) {
    swift_release();
  }
  if (*(id *)((char *)a1 + a2[11])) {
    swift_release();
  }
  if (*(id *)((char *)a1 + a2[12])) {
    swift_release();
  }

  uint64_t v6 = *(id *)((char *)a1 + a2[14]);
}

uint64_t initializeWithCopy for WorkoutConfigurationView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v8 = a3[9];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  id v11 = v6;
  id v12 = v7;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_261B8D518();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v10, v13);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[10];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  if (*v16)
  {
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  if (*v20)
  {
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  }
  uint64_t v22 = a3[12];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  if (*v24)
  {
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  }
  uint64_t v26 = a3[13];
  uint64_t v27 = a3[14];
  uint64_t v28 = *(void **)(a2 + v26);
  *(void *)(a1 + v26) = v28;
  uint64_t v29 = *(void **)(a2 + v27);
  *(void *)(a1 + v27) = v29;
  id v30 = v28;
  id v31 = v29;
  return a1;
}

uint64_t assignWithCopy for WorkoutConfigurationView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v12 = a3[9];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_2619F8754(a1 + v12, &qword_26A943200);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_261B8D518();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v16 = a3[10];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a1 + v16);
  uint64_t v20 = *(void *)(a2 + v16);
  if (v19)
  {
    if (v20)
    {
      uint64_t v21 = *(void *)(v18 + 8);
      *uint64_t v17 = v20;
      v17[1] = v21;
      swift_retain();
      swift_release();
      goto LABEL_13;
    }
    swift_release();
  }
  else if (v20)
  {
    uint64_t v22 = *(void *)(v18 + 8);
    *uint64_t v17 = v20;
    v17[1] = v22;
    swift_retain();
    goto LABEL_13;
  }
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
LABEL_13:
  uint64_t v23 = a3[11];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = a2 + v23;
  uint64_t v26 = *(void *)(a1 + v23);
  uint64_t v27 = *(void *)(a2 + v23);
  if (v26)
  {
    if (v27)
    {
      uint64_t v28 = *(void *)(v25 + 8);
      *uint64_t v24 = v27;
      v24[1] = v28;
      swift_retain();
      swift_release();
      goto LABEL_20;
    }
    swift_release();
  }
  else if (v27)
  {
    uint64_t v29 = *(void *)(v25 + 8);
    *uint64_t v24 = v27;
    v24[1] = v29;
    swift_retain();
    goto LABEL_20;
  }
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
LABEL_20:
  uint64_t v30 = a3[12];
  id v31 = (void *)(a1 + v30);
  uint64_t v32 = a2 + v30;
  uint64_t v33 = *(void *)(a1 + v30);
  uint64_t v34 = *(void *)(a2 + v30);
  if (!v33)
  {
    if (v34)
    {
      uint64_t v36 = *(void *)(v32 + 8);
      void *v31 = v34;
      v31[1] = v36;
      swift_retain();
      goto LABEL_27;
    }
LABEL_26:
    *(_OWORD *)id v31 = *(_OWORD *)v32;
    goto LABEL_27;
  }
  if (!v34)
  {
    swift_release();
    goto LABEL_26;
  }
  uint64_t v35 = *(void *)(v32 + 8);
  void *v31 = v34;
  v31[1] = v35;
  swift_retain();
  swift_release();
LABEL_27:
  uint64_t v37 = a3[13];
  uint64_t v38 = *(void **)(a1 + v37);
  uint64_t v39 = *(void **)(a2 + v37);
  *(void *)(a1 + v37) = v39;
  id v40 = v39;

  uint64_t v41 = a3[14];
  uint64_t v42 = *(void **)(a2 + v41);
  uint64_t v43 = *(void **)(a1 + v41);
  *(void *)(a1 + v41) = v42;
  id v44 = v42;

  return a1;
}

uint64_t initializeWithTake for WorkoutConfigurationView(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_261B8D518();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[10];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = *v13;
  if (*v13)
  {
    uint64_t v15 = v13[1];
    *uint64_t v12 = v14;
    v12[1] = v15;
  }
  else
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  }
  uint64_t v16 = a3[11];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v19 = *v18;
  if (*v18)
  {
    uint64_t v20 = v18[1];
    *uint64_t v17 = v19;
    v17[1] = v20;
  }
  else
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  }
  uint64_t v21 = a3[12];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v24 = *v23;
  if (*v23)
  {
    uint64_t v25 = v23[1];
    *uint64_t v22 = v24;
    v22[1] = v25;
  }
  else
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  }
  uint64_t v26 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v26) = *(void *)(a2 + v26);
  return a1;
}

uint64_t assignWithTake for WorkoutConfigurationView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v8 = a3[9];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_2619F8754(a1 + v8, &qword_26A943200);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_261B8D518();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a1 + v13);
  uint64_t v17 = *(void *)(a2 + v13);
  if (v16)
  {
    if (v17)
    {
      uint64_t v18 = *(void *)(v15 + 8);
      void *v14 = v17;
      v14[1] = v18;
      swift_release();
      goto LABEL_12;
    }
    swift_release();
  }
  else if (v17)
  {
    uint64_t v19 = *(void *)(v15 + 8);
    void *v14 = v17;
    v14[1] = v19;
    goto LABEL_12;
  }
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
LABEL_12:
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)(a1 + v20);
  uint64_t v24 = *(void *)(a2 + v20);
  if (v23)
  {
    if (v24)
    {
      uint64_t v25 = *(void *)(v22 + 8);
      *uint64_t v21 = v24;
      v21[1] = v25;
      swift_release();
      goto LABEL_19;
    }
    swift_release();
  }
  else if (v24)
  {
    uint64_t v26 = *(void *)(v22 + 8);
    *uint64_t v21 = v24;
    v21[1] = v26;
    goto LABEL_19;
  }
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
LABEL_19:
  uint64_t v27 = a3[12];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = a2 + v27;
  uint64_t v30 = *(void *)(a1 + v27);
  uint64_t v31 = *(void *)(a2 + v27);
  if (!v30)
  {
    if (v31)
    {
      uint64_t v33 = *(void *)(v29 + 8);
      *uint64_t v28 = v31;
      v28[1] = v33;
      goto LABEL_26;
    }
LABEL_25:
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    goto LABEL_26;
  }
  if (!v31)
  {
    swift_release();
    goto LABEL_25;
  }
  uint64_t v32 = *(void *)(v29 + 8);
  *uint64_t v28 = v31;
  v28[1] = v32;
  swift_release();
LABEL_26:
  uint64_t v34 = a3[13];
  uint64_t v35 = *(void **)(a1 + v34);
  *(void *)(a1 + v34) = *(void *)(a2 + v34);

  uint64_t v36 = a3[14];
  uint64_t v37 = *(void **)(a1 + v36);
  *(void *)(a1 + v36) = *(void *)(a2 + v36);

  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutConfigurationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261B20158);
}

uint64_t sub_261B20158(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944CD0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutConfigurationView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261B20220);
}

void *sub_261B20220(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944CD0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_261B202CC()
{
  sub_261A2CE08();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_261B20398()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261B2043C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9478C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261B204A4@<X0>(uint64_t a1@<X8>)
{
  return sub_261B1E2C0(*(void *)(v1 + 16), a1);
}

unint64_t sub_261B204F0()
{
  unint64_t result = qword_26A9478E8;
  if (!qword_26A9478E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9478E0);
    sub_2619F8AB8(&qword_26A946E08, &qword_26A946E00);
    sub_2619F8AB8((unint64_t *)&qword_26A943AF0, &qword_26A943AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9478E8);
  }
  return result;
}

uint64_t sub_261B205B4@<X0>(uint64_t a1@<X8>)
{
  return sub_261B1E2C0(*(void *)(v1 + 16), a1);
}

uint64_t sub_261B20600(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutConfigurationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261B20668(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutConfigurationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261B206CC()
{
  return sub_261B20708(sub_261B1DFC0);
}

uint64_t sub_261B206F0()
{
  return sub_261B20708(sub_261B1E4D0);
}

uint64_t sub_261B20708(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for WorkoutConfigurationView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3);
}

uint64_t sub_261B20780(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for WorkoutConfigurationView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_261B1D438(a1, v4);
}

uint64_t sub_261B207F4()
{
  return sub_261B1D5E4();
}

uint64_t sub_261B20850(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_4()
{
  uint64_t v1 = (int *)type metadata accessor for WorkoutConfigurationView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;

  swift_release();
  uint64_t v6 = v0 + v3 + v1[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_261B8D518();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  if (*(void *)(v5 + v1[10])) {
    swift_release();
  }
  if (*(void *)(v5 + v1[11])) {
    swift_release();
  }
  if (*(void *)(v5 + v1[12])) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_261B20A58(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for WorkoutConfigurationView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_261B1EACC(a1, a2, v6);
}

uint64_t sub_261B20AD8()
{
  uint64_t v1 = (int *)type metadata accessor for WorkoutConfigurationView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v5 = v0 + v3;
  swift_release();
  uint64_t v6 = v0 + v3 + v1[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_261B8D518();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  if (*(void *)(v5 + v1[10])) {
    swift_release();
  }
  if (*(void *)(v5 + v1[11])) {
    swift_release();
  }
  if (*(void *)(v5 + v1[12])) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_261B20C7C()
{
  uint64_t v1 = *(void *)(type metadata accessor for WorkoutConfigurationView() - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_261B1EE0C(v2, v3);
}

uint64_t sub_261B20CE0()
{
  uint64_t v1 = (int *)type metadata accessor for WorkoutConfigurationView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v5 = v0 + v3;
  swift_release();
  uint64_t v6 = v0 + v3 + v1[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_261B8D518();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  if (*(void *)(v5 + v1[10])) {
    swift_release();
  }
  if (*(void *)(v5 + v1[11])) {
    swift_release();
  }
  if (*(void *)(v5 + v1[12])) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

void sub_261B20E84(char a1, void *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for WorkoutConfigurationView() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  sub_261B1F170(a1, a2, v6, v7);
}

unint64_t sub_261B20F08()
{
  unint64_t result = qword_26A9478F0;
  if (!qword_26A9478F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9478F0);
  }
  return result;
}

unint64_t sub_261B20F5C()
{
  unint64_t result = qword_26A9478F8;
  if (!qword_26A9478F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9478F8);
  }
  return result;
}

id sub_261B20FB0(void *a1, void *a2)
{
  id v2 = a1;
  return a2;
}

uint64_t sub_261B20FE8(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261B21070()
{
  unint64_t result = qword_26A947918;
  if (!qword_26A947918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947918);
  }
  return result;
}

unint64_t sub_261B210C4()
{
  unint64_t result = qword_26A947920;
  if (!qword_26A947920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947920);
  }
  return result;
}

void sub_261B21118(void *a1, void *a2)
{
}

id sub_261B21150(void *a1, void *a2, void *a3, char a4)
{
  if (a4) {
    id v5 = a3;
  }
  id v6 = a1;
  return a2;
}

void sub_261B2119C(void *a1, void *a2, void *a3, char a4)
{
  if (a4)
  {
  }
}

uint64_t BreadcrumbMapView.init(locationPositionPublisher:)@<X0>(uint64_t *a1@<X8>)
{
  sub_261B8C588();
  sub_261A28A80((unint64_t *)&qword_26A944008, MEMORY[0x263F87F68]);
  uint64_t result = sub_261B8D5E8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_261B21290()
{
  byte_26A947930 = 1;
  qword_26A947938 = 0x4034000000000000;
}

void *BreadcrumbMapView.makeUIView(context:)()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for WKUIBreadcrumbMapView());
  swift_retain();
  WKUIBreadcrumbMapView.init(locationPositionPublisher:)();
  id v2 = v1;
  id v3 = objc_msgSend(v1, sel_layer);
  if (qword_26A942EB0 != -1) {
    swift_once();
  }
  objc_msgSend(v3, sel_setCornerRadius_, *(double *)&qword_26A947938);

  id v4 = objc_msgSend(v2, sel_layer);
  objc_msgSend(v4, sel_setCornerCurve_, *MEMORY[0x263F15A20]);

  objc_msgSend(v2, sel_setZoomEnabled_, byte_26A947930);
  return v2;
}

uint64_t BreadcrumbMapView.updateUIView(_:context:)(void *a1)
{
  uint64_t v2 = sub_261B8ED78();
  uint64_t v15 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_261B8ED98();
  uint64_t v5 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261A46578();
  uint64_t v8 = (void *)sub_261B8F568();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  aBlock[4] = sub_261B217F0;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_261B052D8;
  aBlock[3] = &block_descriptor_6;
  uint64_t v10 = _Block_copy(aBlock);
  a1;
  swift_release();
  sub_261B8ED88();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_261A28A80((unint64_t *)&qword_26B416BF0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CB0);
  sub_261B21800();
  sub_261B8F7E8();
  MEMORY[0x263E4D450](0, v7, v4, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v14);
  swift_retain();
  unint64_t v11 = sub_261B8C578();
  swift_release();
  sub_261AFA568(v11);
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v12 = sub_261B8C568();
  swift_release();
  sub_261AFA244(v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_261B216C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_261B21884();
  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_261B2172C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_261B21884();
  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_261B21790()
{
}

uint64_t sub_261B217B8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_261B217F0()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_becomeFirstResponder);
}

unint64_t sub_261B21800()
{
  unint64_t result = qword_26B416CB8;
  if (!qword_26B416CB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B416CB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B416CB8);
  }
  return result;
}

unint64_t sub_261B2185C(uint64_t a1)
{
  unint64_t result = sub_261B21884();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_261B21884()
{
  unint64_t result = qword_26A947940;
  if (!qword_26A947940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947940);
  }
  return result;
}

ValueMetadata *type metadata accessor for BreadcrumbMapView()
{
  return &type metadata for BreadcrumbMapView;
}

uint64_t WorkoutAssetLoadStatus.description.getter(uint64_t a1)
{
  uint64_t result = 0x646575657571;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x676E6964616F6CLL;
      break;
    case 2:
      uint64_t result = 0x6574656C706D6F63;
      break;
    case 3:
      uint64_t result = 0x64656C696166;
      break;
    case 4:
      uint64_t result = 0x656C6C65636E6163;
      break;
    case 5:
      uint64_t result = 0x6564616F4C746F6ELL;
      break;
    case 6:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      sub_261B8FBD8();
      __break(1u);
      JUMPOUT(0x261B219E0);
  }
  return result;
}

unint64_t WorkoutAssetLoadStatus.init(rawValue:)(unint64_t a1)
{
  return sub_261B21A58(a1);
}

unint64_t sub_261B21A1C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_261B21A58(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_261B21A50()
{
  return WorkoutAssetLoadStatus.description.getter(*v0);
}

unint64_t sub_261B21A58(unint64_t result)
{
  if (result > 6) {
    return 0;
  }
  return result;
}

unint64_t sub_261B21A6C()
{
  unint64_t result = qword_26A947948;
  if (!qword_26A947948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947948);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutAssetLoadStatus()
{
  return &type metadata for WorkoutAssetLoadStatus;
}

unsigned char *storeEnumTagSinglePayload for WorkoutUIFeatures(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x261B21B6CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutUIFeatures()
{
  return &type metadata for WorkoutUIFeatures;
}

unint64_t sub_261B21BA8()
{
  unint64_t result = qword_26A947950;
  if (!qword_26A947950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947950);
  }
  return result;
}

const char *sub_261B21BFC()
{
  return "WorkoutUI";
}

const char *sub_261B21C10()
{
  return "OpenWorkoutButtonInViewer";
}

uint64_t sub_261B21C6C()
{
  return sub_261B8B208();
}

uint64_t sub_261B21CE0()
{
  return sub_261B8B1F8();
}

id sub_261B21E60()
{
  uint64_t v0 = sub_261B8B788();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8B1E8();
  unsigned int v4 = (objc_class *)type metadata accessor for ArtworkBridge();
  id v5 = objc_allocWithZone(v4);
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 16))((uint64_t)v5 + OBJC_IVAR___SMArtwork_artwork, v3, v0);
  v8.receiver = v5;
  v8.super_class = v4;
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

id MediaMomentBridge.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MediaMomentBridge.init()()
{
}

id MediaMomentBridge.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaMomentBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MediaMomentBridge()
{
  uint64_t result = qword_26A947958;
  if (!qword_26A947958) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261B22118()
{
  return type metadata accessor for MediaMomentBridge();
}

uint64_t sub_261B22120()
{
  uint64_t result = sub_261B8B218();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MediaMomentBridge(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MediaMomentBridge);
}

uint64_t dispatch thunk of MediaMomentBridge.startTime.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of MediaMomentBridge.duration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MediaMomentBridge.artwork.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

double sub_261B2226C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9460C8);
  double v0 = COERCE_DOUBLE(swift_allocObject());
  *(_OWORD *)(*(void *)&v0 + 16) = xmmword_261B92AA0;
  sub_261B8E898();
  uint64_t v1 = sub_261B8E8A8();
  swift_release();
  *(void *)(*(void *)&v0 + 32) = v1;
  sub_261B8E898();
  uint64_t v2 = sub_261B8E8A8();
  swift_release();
  *(void *)(*(void *)&v0 + 40) = v2;
  *(double *)&long long v4 = v0;
  sub_261B8F2E8();
  sub_261B8ED58();
  sub_261B8ED68();
  MEMORY[0x263E4CB30](*(void *)&v0);
  sub_261B8D5D8();
  double result = v0;
  xmmword_26A947968 = v4;
  unk_26A947978 = v5;
  qword_26A947988 = v6;
  return result;
}

uint64_t static EffortColors.buttonBackground.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26A942EB8 != -1) {
    swift_once();
  }
  *(void *)a1 = xmmword_26A947968;
  *(_OWORD *)(a1 + 8) = *(long long *)((char *)&xmmword_26A947968 + 8);
  *(_OWORD *)(a1 + 24) = unk_26A947980;
  return swift_bridgeObjectRetain();
}

uint64_t sub_261B223FC()
{
  uint64_t v0 = sub_261B8E838();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9460C8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_261B92AA0;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F1B388], v0);
  *(void *)(v4 + 32) = MEMORY[0x263E4C7A0](v3, 0.109803922, 0.109803922, 0.117647059, 1.0);
  *(void *)(v4 + 40) = sub_261B8E878();
  uint64_t v7 = v4;
  sub_261B8F2E8();
  uint64_t result = MEMORY[0x263E4CB30](v7);
  qword_26A947990 = result;
  return result;
}

uint64_t static EffortColors.defaultGradient.getter()
{
  if (qword_26A942EC0 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t _s9WorkoutUI12EffortColorsV9textColor8exertion05SwiftB00F0V0A4Core18AppleExertionScaleOSg_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_261B8E838();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  long long v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v6 - 8);
  objc_super v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8C2D8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v25 - v14;
  sub_261A65018(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_261B23558((uint64_t)v8);
    sub_261B8E898();
    uint64_t v16 = sub_261B8E8A8();
    swift_release();
    return v16;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v13, v9);
  if (v17 == *MEMORY[0x263F87E90])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3FC999999999999ALL;
    v19.n128_u64[0] = 0x3FE9D9D9D9D9D9DALL;
    v20.n128_u64[0] = 0x3FE1515151515151;
LABEL_20:
    uint64_t v16 = MEMORY[0x263E4C7A0](v5, v18, v19, v20, 1.0);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    return v16;
  }
  int v21 = v17;
  if (v17 == *MEMORY[0x263F87E98])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3F70101010101010;
    v19.n128_u64[0] = 0x3FEA9A9A9A9A9A9BLL;
    v20.n128_u64[0] = 0x3FE7575757575757;
    goto LABEL_20;
  }
  if (v17 == *MEMORY[0x263F87EA0])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v19.n128_u64[0] = 0x3FE6969696969697;
    v20.n128_u64[0] = 0x3FEB1B1B1B1B1B1BLL;
    v18.n128_u64[0] = 0;
    goto LABEL_20;
  }
  if (v17 == *MEMORY[0x263F87EA8])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3FD5555555555555;
    v19.n128_u64[0] = 0x3FE5D5D5D5D5D5D6;
LABEL_19:
    v20.n128_u64[0] = 1.0;
    goto LABEL_20;
  }
  if (v17 == *MEMORY[0x263F87EB0])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3FD1919191919192;
    v19.n128_u64[0] = 0x3FD9191919191919;
    v20.n128_u64[0] = 0x3FEDDDDDDDDDDDDELL;
    goto LABEL_20;
  }
  if (v17 == *MEMORY[0x263F87EB8])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3FE0303030303030;
    v19.n128_u64[0] = 0x3FD9191919191919;
    goto LABEL_19;
  }
  if (v17 == *MEMORY[0x263F87EC0])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3FE7373737373737;
    v19.n128_u64[0] = 0x3FDC5C5C5C5C5C5CLL;
    goto LABEL_19;
  }
  if (v17 == *MEMORY[0x263F87EC8])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3FE999999999999ALL;
    v19.n128_u64[0] = 0x3FD7171717171717;
    goto LABEL_19;
  }
  if (v17 == *MEMORY[0x263F87ED0])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v19.n128_u64[0] = 0x3FDB1B1B1B1B1B1BLL;
    v20.n128_u64[0] = 0x3FECBCBCBCBCBCBDLL;
    v18.n128_u64[0] = 1.0;
    goto LABEL_20;
  }
  if (v17 == *MEMORY[0x263F87ED8])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v19.n128_u64[0] = 0x3FD5959595959596;
    v20.n128_u64[0] = 0x3FE6D6D6D6D6D6D7;
    v18.n128_u64[0] = 1.0;
    goto LABEL_20;
  }
  int v23 = *MEMORY[0x263F87EE0];
  sub_261B8E898();
  uint64_t v16 = sub_261B8E8A8();
  swift_release();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v15, v9);
  if (v21 != v23) {
    v24(v13, v9);
  }
  return v16;
}

uint64_t sub_261B22BB4(uint64_t a1)
{
  uint64_t v2 = sub_261B8E838();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  long long v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v6 - 8);
  objc_super v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8C2D8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v25 - v14;
  sub_261A65018(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_261B23558((uint64_t)v8);
    return sub_261B8E878();
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v17 == *MEMORY[0x263F87E90])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3F88181818181818;
    v19.n128_u64[0] = 0x3FC5959595959596;
    v20.n128_u64[0] = 0x3FC3939393939394;
LABEL_16:
    uint64_t v16 = MEMORY[0x263E4C7A0](v5, v18, v19, v20, 1.0);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    return v16;
  }
  int v21 = v17;
  if (v17 == *MEMORY[0x263F87E98])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3F98181818181818;
    v19.n128_u64[0] = 0x3FC4141414141414;
    v20.n128_u64[0] = 0x3FC6161616161616;
    goto LABEL_16;
  }
  if (v17 == *MEMORY[0x263F87EA0])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3FA4141414141414;
    v19.n128_u64[0] = 0x3FC1919191919192;
    v20.n128_u64[0] = 0x3FC6969696969697;
    goto LABEL_16;
  }
  if (v17 == *MEMORY[0x263F87EA8])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3FAA1A1A1A1A1A1ALL;
    v19.n128_u64[0] = 0x3FB5151515151515;
LABEL_15:
    v20.n128_u64[0] = 0x3FCF9F9F9F9F9FA0;
    goto LABEL_16;
  }
  if (v17 == *MEMORY[0x263F87EB0])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3FA2121212121212;
    v19.n128_u64[0] = 0x3F88181818181818;
    v20.n128_u64[0] = 0x3FC7171717171717;
    goto LABEL_16;
  }
  if (v17 == *MEMORY[0x263F87EB8])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3FC0909090909091;
    v19.n128_u64[0] = 0x3FAA1A1A1A1A1A1ALL;
    goto LABEL_15;
  }
  if (v17 == *MEMORY[0x263F87EC0])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3FD1111111111111;
    v19.n128_u64[0] = 0x3F90101010101010;
    v20.n128_u64[0] = 0x3FD8989898989899;
    goto LABEL_16;
  }
  if (v17 == *MEMORY[0x263F87EC8])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3FD2525252525252;
    v19.n128_u64[0] = 0x3F80101010101010;
    v20.n128_u64[0] = 0x3FD5959595959596;
    goto LABEL_16;
  }
  if (v17 == *MEMORY[0x263F87ED0])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3FD7575757575757;
    v20.n128_u64[0] = 0x3FCA1A1A1A1A1A1ALL;
LABEL_26:
    v19.n128_u64[0] = 0;
    goto LABEL_16;
  }
  if (v17 == *MEMORY[0x263F87ED8])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    v18.n128_u64[0] = 0x3FD7575757575757;
    v20.n128_u64[0] = 0x3FBB1B1B1B1B1B1BLL;
    goto LABEL_26;
  }
  int v23 = *MEMORY[0x263F87EE0];
  uint64_t v16 = sub_261B8E878();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v15, v9);
  if (v21 != v23) {
    v24(v12, v9);
  }
  return v16;
}

uint64_t _s9WorkoutUI12EffortColorsV8gradient8exertion05SwiftB08GradientV0A4Core18AppleExertionScaleOSg_tFZ_0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_261B8C2D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261A65018(a1, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_261B23558((uint64_t)v7);
    if (qword_26A942EC0 != -1) {
      swift_once();
    }
    uint64_t v12 = qword_26A947990;
    swift_bridgeObjectRetain();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v13(v4, v11, v8);
    uint64_t v14 = *(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56);
    v14(v4, 0, 1, v8);
    _s9WorkoutUI12EffortColorsV9textColor8exertion05SwiftB00F0V0A4Core18AppleExertionScaleOSg_tFZ_0((uint64_t)v4);
    sub_261B23558((uint64_t)v4);
    sub_261B8E8A8();
    swift_release();
    v13(v4, v11, v8);
    v14(v4, 0, 1, v8);
    sub_261B22BB4((uint64_t)v4);
    sub_261B23558((uint64_t)v4);
    v13(v4, v11, v8);
    v14(v4, 0, 1, v8);
    sub_261B22BB4((uint64_t)v4);
    sub_261B8E8A8();
    swift_release();
    sub_261B23558((uint64_t)v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943908);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_261B94B90;
    swift_retain();
    *(void *)(v15 + 32) = sub_261B8EC48();
    *(void *)(v15 + 40) = v16;
    swift_retain();
    *(void *)(v15 + 48) = sub_261B8EC48();
    *(void *)(v15 + 56) = v17;
    swift_retain();
    *(void *)(v15 + 64) = sub_261B8EC48();
    *(void *)(v15 + 72) = v18;
    uint64_t v12 = MEMORY[0x263E4CB20](v15);
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v12;
}

ValueMetadata *type metadata accessor for EffortColors()
{
  return &type metadata for EffortColors;
}

uint64_t sub_261B23558(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_261B235B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_261B8FC98();
    sub_261B8F188();
    uint64_t v6 = sub_261B8FCE8();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_261B8FBA8() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_261B8FBA8() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_261B236F0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_261B8FC98();
    sub_261B8B388();
    sub_261B8F188();
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_261B8FCE8();
    uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v5 = v3 & ~v4;
    uint64_t v6 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
    {
      uint64_t v7 = sub_261B8B388();
      uint64_t v9 = v8;
      if (v7 == sub_261B8B388() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      char v12 = sub_261B8FBA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_18:
        char v20 = 1;
        return v20 & 1;
      }
      uint64_t v13 = ~v4;
      unint64_t v14 = (v5 + 1) & v13;
      if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
      {
        while (1)
        {
          uint64_t v15 = sub_261B8B388();
          uint64_t v17 = v16;
          if (v15 == sub_261B8B388() && v17 == v18) {
            break;
          }
          char v20 = sub_261B8FBA8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            unint64_t v14 = (v14 + 1) & v13;
            if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14)) {
              continue;
            }
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  char v20 = 0;
  return v20 & 1;
}

id sub_261B238B4()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TaskFinalizer()), sel_init);
  qword_26A947998 = (uint64_t)result;
  return result;
}

uint64_t (*sub_261B238E4())()
{
  return j__swift_endAccess;
}

id sub_261B23940()
{
  uint64_t v11 = sub_261B8F558();
  uint64_t v1 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_261B8F538();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_261B8ED98();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v10 = OBJC_IVAR___WOTaskFinalizer_queue;
  v9[1] = sub_261A46578();
  uint64_t v6 = v0;
  sub_261B8ED88();
  uint64_t v13 = MEMORY[0x263F8EE78];
  sub_261B29210(&qword_26B416CF8, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CC0);
  sub_261B156AC(&qword_26B416CC8, &qword_26B416CC0);
  sub_261B8F7E8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v11);
  *(void *)(v9[2] + v10) = sub_261B8F598();
  *(void *)&v6[OBJC_IVAR___WOTaskFinalizer_tasks] = MEMORY[0x263F8EE80];
  *(void *)&v6[OBJC_IVAR___WOTaskFinalizer_finalizedIdentifiers] = MEMORY[0x263F8EE88];

  uint64_t v7 = (objc_class *)type metadata accessor for TaskFinalizer();
  v12.receiver = v6;
  v12.super_class = v7;
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t static TaskFinalizer.appendTask(identifier:task:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_261B24A1C(a1, a2, a3, a4, sub_261B23D04);
}

uint64_t sub_261B23D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v20[0] = a3;
  uint64_t v8 = sub_261B8ED78();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_261B8ED98();
  uint64_t v12 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  unint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)(v4 + OBJC_IVAR___WOTaskFinalizer_queue);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v16[2] = v15;
  void v16[3] = a1;
  uint64_t v17 = v20[0];
  void v16[4] = a2;
  v16[5] = v17;
  v16[6] = a4;
  aBlock[4] = sub_261B29180;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_261B052D8;
  aBlock[3] = &block_descriptor_61;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_261B8ED88();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_261B29210((unint64_t *)&qword_26B416BF0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CB0);
  sub_261B156AC((unint64_t *)&qword_26B416CB8, &qword_26B416CB0);
  sub_261B8F7E8();
  MEMORY[0x263E4D450](0, v14, v11, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
  swift_release();
  return swift_release();
}

void sub_261B24010(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1 + 16;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x263E4EA60](v9);
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    sub_261B24098(a2, a3, a4, a5);
  }
}

uint64_t sub_261B24098(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_261B8ED78();
  uint64_t v65 = *(void *)(v10 - 8);
  uint64_t v66 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v63 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_261B8ED98();
  uint64_t v62 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  unint64_t v61 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_261B8CE88();
  uint64_t v68 = *(void *)(v13 - 8);
  uint64_t v69 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v60 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v60 - v20;
  uint64_t v22 = (uint64_t *)(v4 + OBJC_IVAR___WOTaskFinalizer_tasks);
  swift_beginAccess();
  uint64_t v23 = *v22;
  uint64_t v24 = *(void *)(*v22 + 16);
  uint64_t v67 = a3;
  uint64_t v70 = a1;
  if (v24)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_261ACB228(a1, a2);
    if (v26)
    {
      uint64_t v27 = *(void *)(*(void *)(v23 + 56) + 8 * v25);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v27 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = MEMORY[0x263F8EE78];
  }
  uint64_t v73 = v27;
  uint64_t v28 = (uint64_t *)(v5 + OBJC_IVAR___WOTaskFinalizer_finalizedIdentifiers);
  swift_beginAccess();
  uint64_t v29 = *v28;
  swift_bridgeObjectRetain();
  char v30 = sub_261B235B8(v70, a2, v29);
  swift_bridgeObjectRelease();
  if ((v30 & 1) == 0) {
    goto LABEL_15;
  }
  if (*(void *)(v27 + 16))
  {
    sub_261B8C648();
    swift_bridgeObjectRetain_n();
    uint64_t v31 = sub_261B8CE78();
    os_log_type_t v32 = sub_261B8F4D8();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v66 = a4;
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      aBlock[0] = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v72 = sub_261AC9C40(v70, a2, aBlock);
      a4 = v66;
      sub_261B8F6F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2619F0000, v31, v32, "Finalizer: Identifier %s is currently being finalized, enqueueing new task.", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v34, -1, -1);
      MEMORY[0x263E4E970](v33, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v21, v69);
LABEL_15:
    sub_261B8C648();
    swift_bridgeObjectRetain_n();
    uint64_t v41 = sub_261B8CE78();
    os_log_type_t v42 = sub_261B8F4D8();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v66 = a4;
      uint64_t v45 = v44;
      aBlock[0] = v44;
      *(_DWORD *)uint64_t v43 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v46 = v70;
      uint64_t v72 = sub_261AC9C40(v70, a2, aBlock);
      sub_261B8F6F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2619F0000, v41, v42, "Finalizer: Enqueueing new task for identifier %s", v43, 0xCu);
      swift_arrayDestroy();
      uint64_t v47 = v45;
      a4 = v66;
      MEMORY[0x263E4E970](v47, -1, -1);
      MEMORY[0x263E4E970](v43, -1, -1);

      (*(void (**)(char *, uint64_t))(v68 + 8))(v15, v69);
      uint64_t v48 = v67;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v15, v69);
      uint64_t v48 = v67;
      uint64_t v46 = v70;
    }
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = v48;
    *(void *)(v49 + 24) = a4;
    swift_retain();
    sub_261B28A78(0, 0, (uint64_t)sub_2619FFE24, v49);
    uint64_t v50 = v73;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v72 = *v22;
    *uint64_t v22 = 0x8000000000000000;
    sub_261A0C0B8(v50, v46, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v22 = v72;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  swift_bridgeObjectRelease();
  sub_261B8C648();
  swift_bridgeObjectRetain_n();
  uint64_t v35 = sub_261B8CE78();
  os_log_type_t v36 = sub_261B8F4D8();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = a4;
    uint64_t v39 = swift_slowAlloc();
    aBlock[0] = v39;
    *(_DWORD *)uint64_t v37 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_261AC9C40(v70, a2, aBlock);
    sub_261B8F6F8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2619F0000, v35, v36, "Finalizer: Identifier %s was already finalized, just running task", v37, 0xCu);
    swift_arrayDestroy();
    uint64_t v40 = v39;
    a4 = v38;
    MEMORY[0x263E4E970](v40, -1, -1);
    MEMORY[0x263E4E970](v37, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v68 + 8))(v18, v69);
  uint64_t v53 = v67;
  sub_261A46578();
  uint64_t v54 = (void *)sub_261B8F568();
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = v53;
  *(void *)(v55 + 24) = a4;
  aBlock[4] = (uint64_t)sub_2619FFE24;
  aBlock[5] = v55;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_261B052D8;
  aBlock[3] = (uint64_t)&block_descriptor_7;
  uint64_t v56 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v57 = v61;
  sub_261B8ED88();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_261B29210((unint64_t *)&qword_26B416BF0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CB0);
  sub_261B156AC((unint64_t *)&qword_26B416CB8, &qword_26B416CB0);
  uint64_t v58 = v63;
  uint64_t v59 = v66;
  sub_261B8F7E8();
  MEMORY[0x263E4D450](0, v57, v58, v56);
  _Block_release(v56);

  (*(void (**)(char *, uint64_t))(v65 + 8))(v58, v59);
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v57, v64);
}

uint64_t static TaskFinalizer.replaceTasks(identifier:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_261B24A1C(a1, a2, a3, a4, sub_261B24B8C);
}

uint64_t sub_261B24A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (qword_26A942EC8 != -1) {
    swift_once();
  }
  return a5(a1, a2, a3, a4);
}

uint64_t sub_261B24B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(NSObject **)&v4[OBJC_IVAR___WOTaskFinalizer_queue];
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v4;
  v10[3] = a1;
  _DWORD v10[4] = a2;
  v10[5] = a3;
  v10[6] = a4;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_261B290D8;
  *(void *)(v11 + 24) = v10;
  void v16[4] = sub_261B29258;
  v16[5] = v11;
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 1107296256;
  uint64_t v16[2] = sub_261B05820;
  void v16[3] = &block_descriptor_52;
  uint64_t v12 = _Block_copy(v16);
  uint64_t v13 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v12);
  _Block_release(v12);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_261B24D10(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v36 = a2;
  uint64_t v9 = sub_261B8CE88();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8C648();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = a1;
  uint64_t v14 = sub_261B8CE78();
  os_log_type_t v15 = sub_261B8F4D8();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v35 = a4;
  if (!v16)
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v24 = v36;
    goto LABEL_9;
  }
  uint64_t v33 = v9;
  uint64_t v34 = a5;
  uint64_t v17 = swift_slowAlloc();
  uint64_t v32 = swift_slowAlloc();
  v38[0] = v32;
  *(_DWORD *)uint64_t v17 = 134218242;
  uint64_t v18 = &v13[OBJC_IVAR___WOTaskFinalizer_tasks];
  swift_beginAccess();
  uint64_t v19 = *(void *)v18;
  uint64_t v20 = *(void *)(v19 + 16);
  swift_bridgeObjectRetain();
  if (!v20) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v21 = sub_261ACB228(v36, a3);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t v23 = MEMORY[0x263F8EE78];
    goto LABEL_8;
  }
  uint64_t v23 = *(void *)(*(void *)(v19 + 56) + 8 * v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v25 = *(void *)(v23 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v37[0] = v25;
  sub_261B8F6F8();
  swift_bridgeObjectRelease();

  *(_WORD *)(v17 + 12) = 2080;
  swift_bridgeObjectRetain();
  uint64_t v26 = v36;
  v37[0] = sub_261AC9C40(v36, a3, v38);
  sub_261B8F6F8();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_2619F0000, v14, v15, "Finalizer: Replacing %ld tasks for %s", (uint8_t *)v17, 0x16u);
  uint64_t v27 = v32;
  swift_arrayDestroy();
  MEMORY[0x263E4E970](v27, -1, -1);
  MEMORY[0x263E4E970](v17, -1, -1);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v33);
  uint64_t v24 = v26;
  a5 = v34;
LABEL_9:
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_261B238E4();
  char v30 = sub_261B250CC(v37, v24, a3);
  if (*v29)
  {
    *uint64_t v29 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRelease();
  }
  ((void (*)(void *, void))v30)(v37, 0);
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t *, void))v28)(v38, 0);
  return sub_261B24098(v24, a3, v35, a5);
}

void (*sub_261B250CC(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_261B28CD8(v6, a2, a3);
  return sub_261B2514C;
}

void sub_261B2514C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t static TaskFinalizer.finalize(identifier:)(uint64_t a1, uint64_t a2)
{
  if (qword_26A942EC8 != -1) {
    swift_once();
  }
  return sub_261B2529C(a1, a2);
}

uint64_t sub_261B2529C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(NSObject **)&v2[OBJC_IVAR___WOTaskFinalizer_queue];
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_261B28C4C;
  *(void *)(v7 + 24) = v6;
  uint64_t v29 = sub_261A43960;
  uint64_t v30 = v7;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_261B05820;
  uint64_t v28 = &block_descriptor_25;
  uint64_t v8 = _Block_copy(&aBlock);
  uint64_t v9 = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v8);
  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    for (unint64_t i = 0; ; unint64_t i = sub_261B28CBC)
    {
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      uint64_t v13 = (void *)swift_allocObject();
      void v13[2] = v9;
      v13[3] = a1;
      v13[4] = a2;
      v13[5] = &v23;
      uint64_t v14 = v9;
      swift_bridgeObjectRetain();
      sub_261AD5928((uint64_t)i);
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = sub_261B28CBC;
      *(void *)(v15 + 24) = v13;
      uint64_t v29 = sub_261B29258;
      uint64_t v30 = v15;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v26 = 1107296256;
      uint64_t v27 = sub_261B05820;
      uint64_t v28 = &block_descriptor_35;
      BOOL v16 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      dispatch_sync(v5, v16);
      _Block_release(v16);
      char v17 = swift_isEscapingClosureAtFileLocation();
      uint64_t result = swift_release();
      if (v17) {
        break;
      }
      uint64_t v18 = v23;
      if (!v23 || (uint64_t v19 = swift_retain(), v18(v19), sub_261AD5928((uint64_t)v18), v21 = (uint64_t)v23, v20 = v24, !v23))
      {
        sub_261AD5A10(0);
        sub_261AD5928(0);
        sub_261AD5928((uint64_t)v23);
        swift_release();
        return swift_release();
      }
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v21;
      *(void *)(v22 + 24) = v20;
      sub_261AD5A10(v21);
      sub_261AD5928((uint64_t)sub_261B1578C);
      sub_261AD5928((uint64_t)v23);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_261B2560C(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = sub_261B8CE88();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_261B26614(&v27, a2, a3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_261B8C648();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = a1;
  uint64_t v11 = sub_261B8CE78();
  os_log_type_t v12 = sub_261B8F4D8();
  if (!os_log_type_enabled(v11, v12))
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v24 = v6;
  uint64_t v13 = swift_slowAlloc();
  uint64_t v23 = swift_slowAlloc();
  uint64_t v27 = v23;
  *(_DWORD *)uint64_t v13 = 136315394;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_261AC9C40(a2, a3, &v27);
  sub_261B8F6F8();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v13 + 12) = 2048;
  uint64_t v14 = &v10[OBJC_IVAR___WOTaskFinalizer_tasks];
  swift_beginAccess();
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *(void *)(v15 + 16);
  swift_bridgeObjectRetain();
  if (!v16) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v17 = sub_261ACB228(a2, a3);
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x263F8EE78];
    goto LABEL_8;
  }
  uint64_t v19 = *(void *)(*(void *)(v15 + 56) + 8 * v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v21 = *(void *)(v19 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v25 = v21;
  sub_261B8F6F8();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_2619F0000, v11, v12, "Finalizer: Finalized identifier %s, running %ld tasks", (uint8_t *)v13, 0x16u);
  uint64_t v22 = v23;
  swift_arrayDestroy();
  MEMORY[0x263E4E970](v22, -1, -1);
  MEMORY[0x263E4E970](v13, -1, -1);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v24);
}

uint64_t sub_261B25954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = (uint64_t *)(a1 + OBJC_IVAR___WOTaskFinalizer_tasks);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (!*(void *)(*v7 + 16))
  {
    uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16)) {
      goto LABEL_8;
    }
LABEL_5:
    os_log_type_t v12 = 0;
    uint64_t v13 = 0;
LABEL_11:
    uint64_t v19 = *a4;
    *a4 = (uint64_t)v12;
    a4[1] = v13;
    sub_261AD5928(v19);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v7;
    *uint64_t v7 = 0x8000000000000000;
    sub_261A0C0B8((uint64_t)v11, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v7 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_261ACB228(a2, a3);
  if (v10)
  {
    uint64_t v11 = *(void **)(*(void *)(v8 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v11[2]) {
    goto LABEL_5;
  }
LABEL_8:
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    uint64_t v15 = v11[2];
    if (v15)
    {
LABEL_10:
      uint64_t v16 = v15 - 1;
      unint64_t v17 = &v11[2 * v15 - 2];
      uint64_t v13 = swift_allocObject();
      long long v18 = *((_OWORD *)v17 + 2);
      void v11[2] = v16;
      *(_OWORD *)(v13 + 16) = v18;
      os_log_type_t v12 = sub_261A43958;
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = (uint64_t)sub_261B2907C(v11);
    uint64_t v11 = (void *)result;
    uint64_t v15 = *(void *)(result + 16);
    if (v15) {
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

id TaskFinalizer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TaskFinalizer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TaskFinalizer()
{
  return self;
}

uint64_t method lookup function for TaskFinalizer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TaskFinalizer);
}

uint64_t sub_261B25BE8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_261B25C20(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_261B8F7F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_261B8FC98();
        sub_261B8FCA8();
        uint64_t result = sub_261B8FCE8();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        uint64_t v11 = (unsigned char *)(v10 + v3);
        os_log_type_t v12 = (unsigned char *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *uint64_t v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(sub_261B8AE38() - 8) + 72);
        int64_t v15 = v14 * v3;
        uint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_261B25E14(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_261B8F7F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_261B8FC98();
        swift_bridgeObjectRetain();
        sub_261B8F188();
        uint64_t v9 = sub_261B8FCE8();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          os_log_type_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *os_log_type_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          int64_t v15 = (void *)(v14 + 8 * v3);
          int64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *int64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_261B25FEC(uint64_t a1, char *a2)
{
  int64_t v3 = v2;
  uint64_t v6 = sub_261B8AE38();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_261B29210(&qword_26B416BB8, MEMORY[0x263F07508]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_261B8F018();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    int64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    unint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_261B29210(&qword_26B416BC0, MEMORY[0x263F07508]);
      char v21 = sub_261B8F0A8();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        int64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_261B273BC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_261B26310(void *a1, void *a2)
{
  return sub_261B26358(a1, a2, (void (*)(void))type metadata accessor for ArtworkBridge, &qword_26A9479C0, (void (*)(void))type metadata accessor for ArtworkBridge);
}

uint64_t sub_261B26334(void *a1, void *a2)
{
  return sub_261B26358(a1, a2, (void (*)(void))type metadata accessor for MediaMomentBridge, &qword_26A9479B8, (void (*)(void))type metadata accessor for MediaMomentBridge);
}

uint64_t sub_261B26358(void *a1, void *a2, void (*a3)(void), uint64_t *a4, void (*a5)(void))
{
  uint64_t v9 = v5;
  uint64_t v12 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v12 < 0) {
      uint64_t v13 = *v5;
    }
    else {
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v14 = a2;
    uint64_t v15 = sub_261B8F838();

    if (v15)
    {
      swift_bridgeObjectRelease();

      a3(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v37;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_261B8F828();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v27 = sub_261B267C4(v13, result + 1, a4, a5);
    uint64_t v38 = v27;
    unint64_t v28 = *(void *)(v27 + 16);
    if (*(void *)(v27 + 24) <= v28)
    {
      uint64_t v33 = v28 + 1;
      id v34 = v14;
      sub_261B26DBC(v33, a4);
      uint64_t v29 = v38;
    }
    else
    {
      uint64_t v29 = v27;
      id v30 = v14;
    }
    sub_261B27338((uint64_t)v14, v29);
    *uint64_t v9 = v29;
    swift_bridgeObjectRelease();
    *a1 = v14;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_261B8F698();
    uint64_t v18 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v19 = v17 & ~v18;
    if ((*(void *)(v12 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
    {
      a3(0);
      id v20 = *(id *)(*(void *)(v12 + 48) + 8 * v19);
      char v21 = sub_261B8F6A8();

      if (v21)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v25 = *(void **)(*(void *)(*v5 + 48) + 8 * v19);
        *a1 = v25;
        id v26 = v25;
        return 0;
      }
      uint64_t v22 = ~v18;
      while (1)
      {
        unint64_t v19 = (v19 + 1) & v22;
        if (((*(void *)(v12 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          break;
        }
        id v23 = *(id *)(*(void *)(v12 + 48) + 8 * v19);
        char v24 = sub_261B8F6A8();

        if (v24) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    id v32 = a2;
    sub_261B2765C((uint64_t)v32, v19, isUniquelyReferenced_nonNull_native, a4, a5);
    *uint64_t v5 = v39;
    swift_bridgeObjectRelease();
    *a1 = v32;
  }
  return 1;
}

uint64_t sub_261B26614(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_261B8FC98();
  swift_bridgeObjectRetain();
  sub_261B8F188();
  uint64_t v8 = sub_261B8FCE8();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_261B8FBA8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_261B8FBA8() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_261B277E8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_261B267C4(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void))
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v6 = sub_261B8F888();
    uint64_t v19 = v6;
    sub_261B8F818();
    if (sub_261B8F848())
    {
      a4(0);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_261B26DBC(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        uint64_t result = sub_261B8F698();
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (sub_261B8F848());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v6;
}

uint64_t sub_261B269C0()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_261B8AE38();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9479C8);
  uint64_t v5 = sub_261B8F878();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    char v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      id v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_261B29210(&qword_26B416BB8, MEMORY[0x263F07508]);
      uint64_t result = sub_261B8F018();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_261B26DBC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_261B8F878();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    char v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_261B8F698();
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v6;
  return result;
}

uint64_t sub_261B27058()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450D8);
  uint64_t v3 = sub_261B8F878();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_261B8FC98();
      sub_261B8F188();
      uint64_t result = sub_261B8FCE8();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *int64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_261B27338(uint64_t a1, uint64_t a2)
{
  sub_261B8F698();
  unint64_t result = sub_261B8F808();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_261B273BC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_261B8AE38();
  uint64_t v7 = *(void *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_261B269C0();
  }
  else
  {
    if (v12 > v11)
    {
      sub_261B27984();
      goto LABEL_12;
    }
    sub_261B27F80();
  }
  uint64_t v13 = *v3;
  sub_261B29210(&qword_26B416BB8, MEMORY[0x263F07508]);
  uint64_t v14 = sub_261B8F018();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    int64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_261B29210(&qword_26B416BC0, MEMORY[0x263F07508]);
      char v22 = sub_261B8F0A8();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_261B8FBE8();
  __break(1u);
  return result;
}

void sub_261B2765C(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, void (*a5)(void))
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_261B26DBC(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_261B27C28(a4);
      goto LABEL_14;
    }
    sub_261B28330(v11, a4);
  }
  uint64_t v12 = *v5;
  uint64_t v13 = sub_261B8F698();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    a5(0);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = sub_261B8F6A8();

    if (v16)
    {
LABEL_13:
      sub_261B8FBE8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = sub_261B8F6A8();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

uint64_t sub_261B277E8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_261B27058();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_261B27DCC();
      goto LABEL_22;
    }
    sub_261B285A8();
  }
  uint64_t v11 = *v4;
  sub_261B8FC98();
  sub_261B8F188();
  uint64_t result = sub_261B8FCE8();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    id v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_261B8FBA8(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_261B8FBE8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        id v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_261B8FBA8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_261B27984()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_261B8AE38();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9479C8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_261B8F868();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

id sub_261B27C28(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_261B8F868();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    int64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_261B27DCC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_261B8F868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    int64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_261B27F80()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_261B8AE38();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9479C8);
  uint64_t v7 = sub_261B8F878();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_261B29210(&qword_26B416BB8, MEMORY[0x263F07508]);
    uint64_t result = sub_261B8F018();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_261B28330(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_261B8F878();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v3 = v6;
    return result;
  }
  char v29 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    id v21 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_261B8F698();
    uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_261B285A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450D8);
  uint64_t v3 = sub_261B8F878();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_261B8FC98();
    swift_bridgeObjectRetain();
    sub_261B8F188();
    uint64_t result = sub_261B8FCE8();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_261B28858(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_261A0B728(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    unint64_t *v3 = v5;
  }
  uint64_t v14 = sub_261B8CAD8();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = v5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v17 = *(void *)(v15 + 72);
  unint64_t v18 = v16 + v17 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v19 = *(void *)(v5 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_35;
  }
  if (v20 < 0)
  {
LABEL_37:
    uint64_t result = sub_261B8FA18();
    __break(1u);
    return result;
  }
  unint64_t v21 = v18 + v17;
  unint64_t v22 = v16 + v17 * a2;
  if (v18 + v17 < v22 || v21 >= v22 + v20 * v17)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v21 != v22)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v24 = *(void *)(v5 + 16);
  BOOL v25 = __OFADD__(v24, v9);
  uint64_t v26 = v24 + v9;
  if (v25)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  *(void *)(v5 + 16) = v26;
LABEL_25:
  if (v17 >= 1) {
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(v18, a3, v14);
  }
  return sub_261B291B0(a3);
}

char *sub_261B28A78(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  int64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    int64_t v6 = sub_261A0B790(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  unint64_t v16 = &v6[2 * a1 + 4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9438C8);
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = v6[2];
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v16 + 2);
    unint64_t v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20]) {
      uint64_t result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = v6[2];
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *unint64_t v16 = a3;
      v16[1] = a4;
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_261B8FA18();
  __break(1u);
  return result;
}

uint64_t sub_261B28C04()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_261B28C3C()
{
  return sub_261B4D5CC(*(void *)(v0 + 16));
}

uint64_t sub_261B28C44()
{
  return objectdestroy_18Tm(40);
}

uint64_t sub_261B28C4C()
{
  return sub_261B2560C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_261B28C58()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261B28C68()
{
  return objectdestroy_18Tm(48);
}

uint64_t objectdestroy_18Tm(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_261B28CBC()
{
  return sub_261B25954(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(uint64_t **)(v0 + 40));
}

uint64_t sub_261B28CC8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void (*sub_261B28CD8(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  int64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_261B28F90(v6);
  v6[10] = sub_261B28DF8(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_261B28D84;
}

void sub_261B28D84(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_261B28DF8(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  unint64_t v5 = v4;
  uint64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v4;
  v10[1] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_261ACB228(a2, a3);
  *((unsigned char *)v10 + 40) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      _DWORD v10[4] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*(void *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *uint64_t v10 = v19;
        return sub_261B28F40;
      }
LABEL_11:
      uint64_t v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_261AD0714();
      goto LABEL_7;
    }
    sub_261ACE7B0(v16, a4 & 1);
    unint64_t v20 = sub_261ACB228(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      unint64_t v13 = v20;
      _DWORD v10[4] = v20;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))sub_261B8FBF8();
  __break(1u);
  return result;
}

void sub_261B28F40(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_261B28FCC(*a1, *((unsigned char *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_261B28F90(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_261B28FC0;
}

uint64_t sub_261B28FC0(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_261B28FCC(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a1;
  if (*a1)
  {
    if (a2)
    {
      *(void *)(*(void *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_261ACF058(a4, a5, a6, v8, (void *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_261B25E14(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

void *sub_261B2907C(void *a1)
{
  return sub_261A0B790(0, a1[2], 0, a1);
}

uint64_t sub_261B29090()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_261B290D8()
{
  return sub_261B29198((uint64_t (*)(void, void, void, void, void))sub_261B24D10);
}

uint64_t sub_261B290F0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261B29100()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_261B29138()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_261B29180()
{
  return sub_261B29198((uint64_t (*)(void, void, void, void, void))sub_261B24010);
}

uint64_t sub_261B29198(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_261B291B0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416930);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_261B29210(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CadenceMetricView.init(activityType:cadence:metricType:formattingManager:visualAlertDescription:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t result = swift_getKeyPath();
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(unsigned char *)(a8 + 16) = a3 & 1;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(void *)(a8 + 40) = a6;
  *(void *)(a8 + 48) = a7;
  *(void *)(a8 + 56) = result;
  *(unsigned char *)(a8 + 64) = 0;
  return result;
}

uint64_t sub_261B29314()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void **)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 56);
  char v5 = *(unsigned char *)(v0 + 64);
  switch(v2)
  {
    case 15:
      swift_bridgeObjectRetain();
      id v6 = v1;
      id v7 = v3;
      sub_2619F7774(v4, v5);
      sub_2619F7774(v4, v5);
      sub_2619FA43C(v4, v5, &v13);
      sub_2619F7790(v4, v5);
      swift_bridgeObjectRelease();

      sub_2619F7790(v4, v5);
      if (v13 <= 8u && ((1 << v13) & 0x181) != 0)
      {
        if (qword_26B416690 == -1)
        {
LABEL_8:
          swift_beginAccess();
          id v8 = (id)qword_26B416688;
LABEL_12:
          uint64_t v9 = sub_261B8AA48();

          return v9;
        }
      }
      else if (qword_26B416690 == -1)
      {
        goto LABEL_8;
      }
      swift_once();
      goto LABEL_8;
    case 50:
      if (qword_26B416690 == -1) {
        goto LABEL_11;
      }
      goto LABEL_15;
    case 16:
      if (qword_26B416690 == -1)
      {
LABEL_11:
        swift_beginAccess();
        id v8 = (id)qword_26B416688;
        goto LABEL_12;
      }
LABEL_15:
      swift_once();
      goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  id v11 = v1;
  id v12 = v3;
  sub_2619F7774(v4, v5);
  sub_261B8F8C8();
  sub_261B8F1C8();
  type metadata accessor for HKWorkoutMetricType(0);
  sub_261B8F9A8();
  sub_261B8F1C8();
  uint64_t result = sub_261B8F9C8();
  __break(1u);
  return result;
}

uint64_t sub_261B296FC()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void **)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 56);
  char v5 = *(unsigned char *)(v0 + 64);
  switch(v2)
  {
    case 15:
      swift_bridgeObjectRetain();
      id v6 = v1;
      id v7 = v3;
      sub_2619F7774(v4, v5);
      sub_2619F7774(v4, v5);
      sub_2619FA43C(v4, v5, &v13);
      sub_2619F7790(v4, v5);
      swift_bridgeObjectRelease();

      sub_2619F7790(v4, v5);
      if (v13 <= 8u && ((1 << v13) & 0x181) != 0)
      {
        if (qword_26B416690 == -1)
        {
LABEL_8:
          swift_beginAccess();
          id v8 = (id)qword_26B416688;
LABEL_12:
          uint64_t v9 = sub_261B8AA48();

          return v9;
        }
      }
      else if (qword_26B416690 == -1)
      {
        goto LABEL_8;
      }
      swift_once();
      goto LABEL_8;
    case 50:
      if (qword_26B416690 == -1) {
        goto LABEL_11;
      }
      goto LABEL_15;
    case 16:
      if (qword_26B416690 == -1)
      {
LABEL_11:
        swift_beginAccess();
        id v8 = (id)qword_26B416688;
        goto LABEL_12;
      }
LABEL_15:
      swift_once();
      goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  id v11 = v1;
  id v12 = v3;
  sub_2619F7774(v4, v5);
  sub_261B8F8C8();
  sub_261B8F1C8();
  type metadata accessor for HKWorkoutMetricType(0);
  sub_261B8F9A8();
  sub_261B8F1C8();
  uint64_t result = sub_261B8F9C8();
  __break(1u);
  return result;
}

uint64_t sub_261B29AE4()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 56);
  char v5 = *(unsigned char *)(v0 + 64);
  swift_bridgeObjectRetain();
  id v6 = v1;
  id v7 = v2;
  sub_2619F7774(v4, v5);
  sub_2619F7774(v4, v5);
  sub_2619FA43C(v4, v5, &v10);
  sub_2619F7790(v4, v5);
  swift_bridgeObjectRelease();

  sub_2619F7790(v4, v5);
  if (v10 == 8)
  {
    swift_bridgeObjectRetain();
  }
  else if (objc_msgSend(v6, sel_effectiveTypeIdentifier) == (id)13)
  {
    return sub_261B296FC();
  }
  else
  {
    return sub_261B29314();
  }
  return v3;
}

uint64_t sub_261B29C38()
{
  uint64_t v1 = sub_261B8ABA8();
  uint64_t v25 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v24 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_261B8FB88();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8AEF8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9453F8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v23 - v13;
  MEMORY[0x270FA5388](v15);
  char v17 = (char *)&v23 - v16;
  if (*(unsigned char *)(v0 + 16))
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v18 = (id)qword_26B416688;
    uint64_t v19 = sub_261B8AA48();
  }
  else
  {
    uint64_t v27 = *(void *)(v0 + 8);
    sub_261B8AE68();
    sub_261A63D24();
    sub_261B8AAE8();
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8E220], v3);
    MEMORY[0x263E489F0](v6, 0, 1, v8);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    unint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
    v20(v11, v8);
    char v21 = v24;
    sub_261B8AB98();
    MEMORY[0x263E48A00](v21, v8);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v26);
    v20(v14, v8);
    sub_2619F8AB8((unint64_t *)&qword_26A945408, &qword_26A9453F8);
    sub_261B8EFD8();
    v20(v17, v8);
    return v28;
  }
  return v19;
}

uint64_t sub_261B2A098()
{
  uint64_t v1 = *(void **)v0;
  if (*(unsigned char *)(v0 + 16))
  {
    if (objc_msgSend(v1, sel_effectiveTypeIdentifier) == (id)13)
    {
      if (qword_26B416690 == -1) {
        goto LABEL_8;
      }
    }
    else if (qword_26B416690 == -1)
    {
LABEL_8:
      swift_beginAccess();
      id v6 = (id)qword_26B416688;
      uint64_t v7 = sub_261B8AA48();

      return v7;
    }
    swift_once();
    goto LABEL_8;
  }
  id v2 = objc_msgSend(self, sel_localizedShortCadenceUnitStringForActivityType_, objc_msgSend(v1, sel_identifier));
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v27 = sub_261B8F0F8();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v8 = sub_261B29AE4();
  if (v9)
  {
    sub_261A029C4();
    uint64_t v8 = sub_261B8F788();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945650);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_261B94B90;
  uint64_t v13 = sub_261B29C38();
  uint64_t v15 = v14;
  *(void *)(inited + 32) = v13;
  *(void *)(inited + 40) = v14;
  *(void *)(inited + 48) = v27;
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 64) = v8;
  *(void *)(inited + 72) = v11;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_261A0B1E4(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v18 = v16[2];
  unint64_t v17 = v16[3];
  unint64_t v19 = v18 + 1;
  if (v18 >= v17 >> 1) {
    uint64_t v16 = sub_261A0B1E4((void *)(v17 > 1), v18 + 1, 1, v16);
  }
  uint64_t v16[2] = v19;
  unint64_t v20 = &v16[2 * v18];
  v20[4] = v13;
  v20[5] = v15;
  if (v5)
  {
    unint64_t v21 = v16[3];
    swift_bridgeObjectRetain();
    if (v19 >= v21 >> 1) {
      uint64_t v16 = sub_261A0B1E4((void *)(v21 > 1), v18 + 2, 1, v16);
    }
    uint64_t v16[2] = v18 + 2;
    uint64_t v22 = &v16[2 * v19];
    unsigned char v22[4] = v27;
    v22[5] = v5;
  }
  if (v11)
  {
    unint64_t v23 = v16[2];
    unint64_t v24 = v16[3];
    swift_bridgeObjectRetain();
    if (v23 >= v24 >> 1) {
      uint64_t v16 = sub_261A0B1E4((void *)(v24 > 1), v23 + 1, 1, v16);
    }
    uint64_t v16[2] = v23 + 1;
    uint64_t v25 = &v16[2 * v23];
    v25[4] = v8;
    v25[5] = v11;
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943578);
  sub_2619F8AB8((unint64_t *)&qword_26A943580, &qword_26A943578);
  uint64_t v7 = sub_261B8F048();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t CadenceMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_261B29C38();
  uint64_t v17 = v5;
  uint64_t v18 = v4;
  id v6 = objc_msgSend(self, sel_localizedShortCadenceUnitStringForActivityType_, objc_msgSend(v3, sel_identifier));
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_261B8F0F8();
    uint64_t v15 = v9;
    uint64_t v16 = v8;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v16 = 0;
  }
  uint64_t v14 = sub_261B29AE4();
  uint64_t v11 = v10;
  uint64_t result = sub_261B2A098();
  *(void *)a1 = v18;
  *(void *)(a1 + 8) = v17;
  *(void *)(a1 + 16) = v16;
  *(void *)(a1 + 24) = v15;
  *(void *)(a1 + 32) = v14;
  *(void *)(a1 + 40) = v11;
  *(_WORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = result;
  *(void *)(a1 + 64) = v13;
  return result;
}

uint64_t sub_261B2A6A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for CadenceMetricView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 56);
  char v3 = *(unsigned char *)(a1 + 64);
  return sub_2619F7790(v2, v3);
}

uint64_t initializeWithCopy for CadenceMetricView(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  char v8 = *(unsigned char *)(a2 + 64);
  id v9 = v3;
  id v10 = v5;
  swift_bridgeObjectRetain();
  sub_2619F7774(v7, v8);
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = v8;
  return a1;
}

uint64_t assignWithCopy for CadenceMetricView(uint64_t a1, void **a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *a2;
  id v6 = v4;

  uint64_t v7 = v2[1];
  *(unsigned char *)(a1 + 16) = *((unsigned char *)v2 + 16);
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 24) = v2[3];
  char v8 = v2[4];
  id v9 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v8;
  id v10 = v8;

  *(void *)(a1 + 40) = v2[5];
  *(void *)(a1 + 48) = v2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = (uint64_t)v2[7];
  LOBYTE(v2) = *((unsigned char *)v2 + 64);
  sub_2619F7774(v11, (char)v2);
  uint64_t v12 = *(void *)(a1 + 56);
  char v13 = *(unsigned char *)(a1 + 64);
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = (_BYTE)v2;
  sub_2619F7790(v12, v13);
  return a1;
}

uint64_t assignWithTake for CadenceMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  id v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;

  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  char v8 = *(unsigned char *)(a2 + 64);
  uint64_t v9 = *(void *)(a1 + 56);
  char v10 = *(unsigned char *)(a1 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = v8;
  sub_2619F7790(v9, v10);
  return a1;
}

ValueMetadata *type metadata accessor for CadenceMetricView()
{
  return &type metadata for CadenceMetricView;
}

uint64_t _HKWorkoutGoalType.displayName(formattingManager:)(void *a1, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      if (qword_26B416690 != -1) {
        goto LABEL_15;
      }
      goto LABEL_9;
    case 1:
      if (qword_26B416690 == -1) {
        goto LABEL_9;
      }
      goto LABEL_15;
    case 2:
      if (qword_26B416690 == -1) {
        goto LABEL_9;
      }
      goto LABEL_15;
    case 3:
      id v6 = (void *)sub_261B8F0B8();
      id v7 = objc_msgSend(a1, sel_localizationKeyForEnergyBaseKey_, v6);

      if (!v7)
      {
        __break(1u);
        JUMPOUT(0x261B2AC68);
      }
      sub_261B8F0F8();

      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v2 = (id)qword_26B416688;
      uint64_t v3 = sub_261B8AA48();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    default:
      if (qword_26B416690 == -1) {
        goto LABEL_9;
      }
LABEL_15:
      swift_once();
LABEL_9:
      swift_beginAccess();
      id v2 = (id)qword_26B416688;
      uint64_t v3 = sub_261B8AA48();
LABEL_10:

      return v3;
  }
}

uint64_t _HKWorkoutGoalType.displayNameShort(formattingManager:)(void *a1, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      if (qword_26B416690 != -1) {
        goto LABEL_15;
      }
      goto LABEL_9;
    case 1:
      if (qword_26B416690 == -1) {
        goto LABEL_9;
      }
      goto LABEL_15;
    case 2:
      if (qword_26B416690 == -1) {
        goto LABEL_9;
      }
      goto LABEL_15;
    case 3:
      id v6 = (void *)sub_261B8F0B8();
      id v7 = objc_msgSend(a1, sel_localizationKeyForEnergyBaseKey_, v6);

      if (!v7)
      {
        __break(1u);
        JUMPOUT(0x261B2B004);
      }
      sub_261B8F0F8();

      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v2 = (id)qword_26B416688;
      uint64_t v3 = sub_261B8AA48();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    default:
      if (qword_26B416690 == -1) {
        goto LABEL_9;
      }
LABEL_15:
      swift_once();
LABEL_9:
      swift_beginAccess();
      id v2 = (id)qword_26B416688;
      uint64_t v3 = sub_261B8AA48();
LABEL_10:

      return v3;
  }
}

uint64_t _HKWorkoutGoalType.accessibilityLabel(formattingManager:)(uint64_t a1, uint64_t a2)
{
  return sub_261B2B2C4(a2);
}

uint64_t NLSessionActivityGoal.displayNameShort(formattingManager:)(void *a1)
{
  if (sub_261B8F608())
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v3 = (id)qword_26B416688;
    uint64_t v4 = sub_261B8AA48();

    return v4;
  }
  else
  {
    id v6 = objc_msgSend(v1, sel_goalTypeIdentifier);
    return _HKWorkoutGoalType.displayNameShort(formattingManager:)(a1, (uint64_t)v6);
  }
}

uint64_t NLSessionActivityGoal.accessibilityLabel(formattingManager:)()
{
  if (sub_261B8F608())
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v1 = (id)qword_26B416688;
    uint64_t v2 = sub_261B8AA48();

    return v2;
  }
  else
  {
    id v4 = objc_msgSend(v0, sel_goalTypeIdentifier);
    return sub_261B2B2C4((uint64_t)v4);
  }
}

uint64_t NLSessionActivityGoal.accessibilityIdentifier.getter()
{
  if (sub_261B8F608()) {
    return 0xD000000000000011;
  }
  objc_msgSend(v0, sel_goalTypeIdentifier);
  return _sSo18_HKWorkoutGoalTypeV9WorkoutUIE23accessibilityIdentifierSSvg_0();
}

uint64_t sub_261B2B2C4(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      if (qword_26B416690 != -1) {
        goto LABEL_10;
      }
      break;
    case 2:
      if (qword_26B416690 != -1) {
        goto LABEL_10;
      }
      break;
    case 3:
      if (qword_26B416690 != -1) {
        goto LABEL_10;
      }
      break;
    default:
      if (qword_26B416690 != -1) {
LABEL_10:
      }
        swift_once();
      break;
  }
  swift_beginAccess();
  id v1 = (id)qword_26B416688;
  uint64_t v2 = sub_261B8AA48();

  return v2;
}

unint64_t AssetBundleReasonBridge.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

unint64_t sub_261B2B55C()
{
  unint64_t result = qword_26A9479D0;
  if (!qword_26A9479D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9479D0);
  }
  return result;
}

uint64_t *sub_261B2B5B0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AssetBundleReasonBridge()
{
  return &type metadata for AssetBundleReasonBridge;
}

uint64_t sub_261B2B5DC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v47 = a3;
  uint64_t v5 = sub_261B8C988();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8E838();
  uint64_t v46 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C30);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_261B8EF18();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  unint64_t v21 = (char *)&v46 - v20;
  if ((a1 & 1) == 0)
  {
    sub_261B2BCEC(a2, (uint64_t)v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      sub_261B2BD54((uint64_t)v14);
      double v23 = 0.4;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
      sub_261B8EF08();
      sub_261B2BE10();
      char v24 = sub_261B8F0A8();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v16 + 8);
      v25(v19, v15);
      v25(v21, v15);
      if (v24) {
        double v23 = 0.4;
      }
      else {
        double v23 = 0.25;
      }
    }
    switch((char)v47)
    {
      case 2:
        uint64_t v41 = (unsigned int *)MEMORY[0x263F42BE8];
        goto LABEL_14;
      case 3:
        uint64_t v41 = (unsigned int *)MEMORY[0x263F42BE0];
        goto LABEL_14;
      case 4:
        uint64_t v41 = (unsigned int *)MEMORY[0x263F42BF0];
LABEL_14:
        uint64_t v43 = v48;
        uint64_t v42 = v49;
        (*(void (**)(char *, void, uint64_t))(v49 + 104))(v8, *v41, v48);
        TrainingLoadBand.background.getter();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v43);
        uint64_t v44 = sub_261B8E8A8();
        swift_release();
        uint64_t v50 = v44;
        return sub_261B8D4E8();
      case 5:
      case 6:
        uint64_t v35 = v48;
        uint64_t v34 = v49;
        (*(void (**)(char *, void, uint64_t))(v49 + 104))(v8, *MEMORY[0x263F42C00], v48);
        uint64_t v36 = TrainingLoadBand.background.getter();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v35);
        (*(void (**)(char *, void, uint64_t))(v46 + 104))(v11, *MEMORY[0x263F1B388], v9);
        uint64_t v37 = MEMORY[0x263E4C7A0](v11, 0.152941176, 0.0745098039, 0.352941176, 1.0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A9460C8);
        uint64_t v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = xmmword_261B92AA0;
        *(void *)(v38 + 32) = v36;
        *(void *)(v38 + 40) = v37;
        uint64_t v50 = v38;
        sub_261B8F2E8();
        uint64_t v39 = v50;
        swift_retain();
        swift_retain();
        sub_261B8ED28();
        sub_261B8ED38();
        MEMORY[0x263E4CB30](v39);
        sub_261B8D5D8();
        float v40 = v23;
        uint64_t v50 = v54;
        long long v51 = v55;
        long long v52 = v56;
        float v53 = v40;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A9479D8);
        sub_261B2BDB4();
        uint64_t v33 = sub_261B8D4E8();
        swift_release();
        swift_release();
        return v33;
      default:
        (*(void (**)(char *, void, uint64_t))(v46 + 104))(v11, *MEMORY[0x263F1B388], v9);
        uint64_t v26 = MEMORY[0x263E4C7A0](v11, 0.647058824, 0.145098039, 0.494117647, 1.0);
        uint64_t v28 = v48;
        uint64_t v27 = v49;
        (*(void (**)(char *, void, uint64_t))(v49 + 104))(v8, *MEMORY[0x263F42BF8], v48);
        uint64_t v29 = TrainingLoadBand.background.getter();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v28);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A9460C8);
        uint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_261B92AA0;
        *(void *)(v30 + 32) = v26;
        *(void *)(v30 + 40) = v29;
        uint64_t v50 = v30;
        sub_261B8F2E8();
        uint64_t v31 = v50;
        swift_retain();
        swift_retain();
        sub_261B8ED28();
        sub_261B8ED38();
        MEMORY[0x263E4CB30](v31);
        sub_261B8D5D8();
        float v32 = v23;
        uint64_t v50 = v54;
        long long v51 = v55;
        long long v52 = v56;
        float v53 = v32;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A9479D8);
        sub_261B2BDB4();
        uint64_t v33 = sub_261B8D4E8();
        swift_release();
        swift_release();
        return v33;
    }
  }
  sub_261B8E898();
  uint64_t v22 = sub_261B8E8A8();
  swift_release();
  uint64_t v50 = v22;
  return sub_261B8D4E8();
}

uint64_t sub_261B2BCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261B2BD54(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_261B2BDB4()
{
  unint64_t result = qword_26A9479E0;
  if (!qword_26A9479E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9479D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9479E0);
  }
  return result;
}

unint64_t sub_261B2BE10()
{
  unint64_t result = qword_26A9479E8;
  if (!qword_26A9479E8)
  {
    sub_261B8EF18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9479E8);
  }
  return result;
}

void *MetricNavigationTracker.__allocating_init(eventHub:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  uint64_t v4 = sub_261B2CA74(a1, a2);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t MetricNavigationTracker.eventHub.getter()
{
  return swift_unknownObjectRetain();
}

void *MetricNavigationTracker.init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_261B2CA74(a1, a2);
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_261B2BF20()
{
  uint64_t v0 = sub_261B8B098();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  BOOL v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_261B8C8A8();
    sub_261B2C08C((uint64_t)v3);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

uint64_t sub_261B2C030()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + OBJC_IVAR____TtC9WorkoutUI23MetricNavigationTracker_isBackNavigation) = 1;
    return swift_release();
  }
  return result;
}

uint64_t sub_261B2C08C(uint64_t a1)
{
  uint64_t v76 = a1;
  uint64_t v2 = sub_261B8C8D8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v74 = v2;
  uint64_t v75 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v73 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_261B8B4F8();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v72 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944FB0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v71 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944FB8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v69 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944FC0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v67 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944FC8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v65 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = (void (*)(uint64_t, uint64_t, uint64_t))sub_261B8B678();
  uint64_t v15 = *((void *)v58 - 1);
  MEMORY[0x270FA5388](v58);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_261B8B548();
  uint64_t v68 = *(void *)(v70 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v70);
  uint64_t v64 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v66 = (char *)&v54 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F78);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v62 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v54 - v24;
  uint64_t v26 = sub_261B8B6E8();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v1 + OBJC_IVAR____TtC9WorkoutUI23MetricNavigationTracker_lastPageViewed;
  swift_beginAccess();
  uint64_t v63 = v30;
  sub_261B2CE64(v30, (uint64_t)v25);
  uint64_t v31 = sub_261B8B098();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = v31;
  int v34 = (*(uint64_t (**)(char *, uint64_t))(v32 + 48))(v25, 1);
  sub_261B2CCC0((uint64_t)v25);
  if (v34 == 1)
  {
    uint64_t v35 = (unsigned int *)MEMORY[0x263F6AC20];
  }
  else if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9WorkoutUI23MetricNavigationTracker_isBackNavigation) == 1)
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC9WorkoutUI23MetricNavigationTracker_isBackNavigation) = 0;
    uint64_t v35 = (unsigned int *)MEMORY[0x263F6AC30];
  }
  else
  {
    uint64_t v35 = (unsigned int *)MEMORY[0x263F6AC28];
  }
  uint64_t v36 = *v35;
  uint64_t v61 = v27;
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 104);
  uint64_t v59 = v29;
  uint64_t v60 = v26;
  v37(v29, v36, v26);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v17, v29, v26);
  (*(void (**)(char *, void, void *))(v15 + 104))(v17, *MEMORY[0x263F6A4F8], v58);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
  uint64_t v57 = v32 + 16;
  uint64_t v58 = v38;
  uint64_t v39 = (uint64_t)v62;
  uint64_t v55 = v33;
  v38((uint64_t)v62, v76, v33);
  long long v56 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56);
  v56(v39, 0, 1, v33);
  uint64_t v40 = sub_261B8B5E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v65, 1, 1, v40);
  uint64_t v41 = sub_261B8B5F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v67, 1, 1, v41);
  uint64_t v42 = v69;
  sub_261B8B568();
  uint64_t v43 = sub_261B8B578();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 0, 1, v43);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944FD0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v71, 1, 1, v44);
  uint64_t v45 = sub_261B8B698();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v72, 1, 1, v45);
  uint64_t v46 = v66;
  sub_261B8B538();
  uint64_t v47 = v68;
  uint64_t v48 = v70;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v64, v46, v70);
  uint64_t v49 = v73;
  sub_261B8C8E8();
  swift_getObjectType();
  sub_261B2CF7C(&qword_26A944FD8, MEMORY[0x263F6B720]);
  uint64_t v50 = v74;
  sub_261B8CCF8();
  uint64_t v51 = v55;
  v58(v39, v76, v55);
  v56(v39, 0, 1, v51);
  uint64_t v52 = v63;
  swift_beginAccess();
  sub_261B2CECC(v39, v52);
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v49, v50);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
  return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v59, v60);
}

uint64_t MetricNavigationTracker.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_261B2CCC0(v0 + OBJC_IVAR____TtC9WorkoutUI23MetricNavigationTracker_lastPageViewed);
  return v0;
}

uint64_t MetricNavigationTracker.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_261B2CCC0(v0 + OBJC_IVAR____TtC9WorkoutUI23MetricNavigationTracker_lastPageViewed);
  return swift_deallocClassInstance();
}

uint64_t sub_261B2CA48()
{
  return swift_unknownObjectRetain();
}

void *sub_261B2CA74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (char *)v2 + OBJC_IVAR____TtC9WorkoutUI23MetricNavigationTracker_lastPageViewed;
  uint64_t v7 = sub_261B8B098();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v3[2] = a1;
  v3[3] = a2;
  sub_261B8CD68();
  swift_allocObject();
  swift_unknownObjectRetain_n();
  v3[4] = sub_261B8CD58();
  *((unsigned char *)v3 + OBJC_IVAR____TtC9WorkoutUI23MetricNavigationTracker_isBackNavigation) = 0;
  swift_getObjectType();
  sub_261B8C8B8();
  swift_allocObject();
  swift_weakInit();
  sub_261B2CF7C(&qword_26A944F80, MEMORY[0x263F6B6F0]);
  sub_261B8CD08();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  sub_261B8C908();
  swift_allocObject();
  swift_weakInit();
  sub_261B2CF7C(&qword_26A947A00, MEMORY[0x263F6B808]);
  sub_261B8CD08();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v3;
}

uint64_t sub_261B2CCC0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of MetricNavigationTracking.eventHub.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_261B2CD34()
{
  return type metadata accessor for MetricNavigationTracker();
}

uint64_t type metadata accessor for MetricNavigationTracker()
{
  uint64_t result = qword_26A9479F0;
  if (!qword_26A9479F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_261B2CD88()
{
  sub_261A50874();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MetricNavigationTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MetricNavigationTracker);
}

uint64_t dispatch thunk of MetricNavigationTracker.__allocating_init(eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_261B2CE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261B2CECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_261B2CF34()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_261B2CF6C()
{
  return sub_261B2BF20();
}

uint64_t sub_261B2CF74()
{
  return sub_261B2C030();
}

uint64_t sub_261B2CF7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_261B2CFC8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for PreviewStepMetricView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for PreviewStepMetricView(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for PreviewStepMetricView()
{
  return &type metadata for PreviewStepMetricView;
}

uint64_t sub_261B2D0B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261B2D0CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a1;
  uint64_t v71 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947AB8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947AA8);
  MEMORY[0x270FA5388](v62);
  uint64_t v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947A98);
  MEMORY[0x270FA5388](v63);
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947A88);
  MEMORY[0x270FA5388](v64);
  uint64_t v65 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947A78);
  MEMORY[0x270FA5388](v70);
  uint64_t v66 = (uint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v67 = (uint64_t)&v61 - v12;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947AE0);
  MEMORY[0x270FA5388](v69);
  uint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_261B8C688();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v61 - v20;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v61 - v23;
  uint64_t v25 = sub_261B8BCE8();
  v72[3] = v25;
  v72[4] = sub_261B2F308((unint64_t *)&qword_26A943490, MEMORY[0x263F87CE8]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v72);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v25 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F87CE0], v25);
  LOBYTE(v25) = sub_261B8C6E8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
  if (v25)
  {
    sub_261B8BC98();
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v24, v15);
    int v27 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v21, v15);
    if (v27 == *MEMORY[0x263F87F80]
      || v27 == *MEMORY[0x263F87F78]
      || v27 == *MEMORY[0x263F87F88]
      || v27 == *MEMORY[0x263F87F90])
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v15);
      uint64_t v53 = sub_261B8E948();
      unsigned __int8 v54 = sub_261B8DFD8();
      unsigned __int8 v55 = sub_261B8DFF8();
      char v56 = sub_261B8DFE8();
      sub_261B8DFE8();
      if (sub_261B8DFE8() != v54) {
        char v56 = sub_261B8DFE8();
      }
      sub_261B8DFE8();
      if (sub_261B8DFE8() != v55) {
        char v56 = sub_261B8DFE8();
      }
      sub_261B8D358();
      *(void *)uint64_t v14 = v53;
      v14[8] = v56;
      *((void *)v14 + 2) = v57;
      *((void *)v14 + 3) = v58;
      *((void *)v14 + 4) = v59;
      *((void *)v14 + 5) = v60;
      v14[48] = 0;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A947A68);
      sub_261B2EFE4();
      sub_261B2F058();
      return sub_261B8DD68();
    }
    else
    {
      uint64_t result = sub_261B8F9C8();
      __break(1u);
    }
  }
  else
  {
    sub_261B8BC98();
    unint64_t v28 = sub_261B8C678();
    unint64_t v30 = v29;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v31 = sub_261B2D944(0x7FFFFFFFFFFFFFFFLL, 1, v28, v30);
    sub_261B2DE18(v31, (uint64_t)v4);
    swift_bridgeObjectRelease();
    sub_2619F86F0((uint64_t)v4, (uint64_t)v6, &qword_26A947AB8);
    uint64_t v32 = &v6[*(int *)(v62 + 36)];
    *(void *)uint64_t v32 = 0;
    *((_WORD *)v32 + 4) = 1;
    sub_2619F8754((uint64_t)v4, &qword_26A947AB8);
    uint64_t KeyPath = swift_getKeyPath();
    sub_2619F86F0((uint64_t)v6, (uint64_t)v8, &qword_26A947AA8);
    int v34 = (uint64_t *)&v8[*(int *)(v63 + 36)];
    uint64_t *v34 = KeyPath;
    v34[1] = 0x3FE0000000000000;
    sub_2619F8754((uint64_t)v6, &qword_26A947AA8);
    uint64_t v35 = swift_getKeyPath();
    uint64_t v36 = v65;
    sub_2619F86F0((uint64_t)v8, v65, &qword_26A947A98);
    uint64_t v37 = v36 + *(int *)(v64 + 36);
    *(void *)uint64_t v37 = v35;
    *(void *)(v37 + 8) = 1;
    *(unsigned char *)(v37 + 16) = 0;
    sub_2619F8754((uint64_t)v8, &qword_26A947A98);
    unsigned __int8 v38 = sub_261B8DFD8();
    unsigned __int8 v39 = sub_261B8DFF8();
    char v40 = sub_261B8DFE8();
    sub_261B8DFE8();
    if (sub_261B8DFE8() != v38) {
      char v40 = sub_261B8DFE8();
    }
    sub_261B8DFE8();
    if (sub_261B8DFE8() != v39) {
      char v40 = sub_261B8DFE8();
    }
    sub_261B8D358();
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    uint64_t v49 = v66;
    sub_2619F86F0(v36, v66, &qword_26A947A88);
    uint64_t v50 = v49 + *(int *)(v70 + 36);
    *(unsigned char *)uint64_t v50 = v40;
    *(void *)(v50 + 8) = v42;
    *(void *)(v50 + 16) = v44;
    *(void *)(v50 + 24) = v46;
    *(void *)(v50 + 32) = v48;
    *(unsigned char *)(v50 + 40) = 0;
    sub_2619F8754(v36, &qword_26A947A88);
    uint64_t v51 = v67;
    sub_2619FB7EC(v49, v67, &qword_26A947A78);
    sub_2619F86F0(v51, (uint64_t)v14, &qword_26A947A78);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A947A68);
    sub_261B2EFE4();
    sub_261B2F058();
    sub_261B8DD68();
    return sub_2619F8754(v51, &qword_26A947A78);
  }
  return result;
}

uint64_t sub_261B2D944(uint64_t a1, char a2, unint64_t a3, unint64_t a4)
{
  if (a1 < 0)
  {
LABEL_50:
    uint64_t result = sub_261B8F9B8();
    __break(1u);
  }
  else
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = MEMORY[0x263F8EE78];
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = v9;
    *(void *)(v9 + 16) = 15;
    uint64_t v11 = HIBYTE(a4) & 0xF;
    if (a1)
    {
      uint64_t v12 = (a4 & 0x2000000000000000) != 0 ? HIBYTE(a4) & 0xF : a3 & 0xFFFFFFFFFFFFLL;
      if (v12)
      {
        uint64_t v41 = a1;
        unint64_t v45 = 4 * v12;
        uint64_t v13 = (void *)MEMORY[0x263F8EE78];
        unint64_t v14 = 15;
        unint64_t v15 = 15;
        uint64_t v42 = (void *)a3;
        uint64_t v43 = v9;
        while (1)
        {
          uint64_t v16 = sub_261B8F248();
          unint64_t v18 = v17;
          if (!((v17 & 0x2000000000000000) != 0 ? HIBYTE(v17) & 0xF : v16 & 0xFFFFFFFFFFFFLL)) {
            break;
          }
          if ((v17 & 0x1000000000000000) != 0)
          {
            uint64_t v20 = sub_261B8F8B8();
          }
          else
          {
            if ((v17 & 0x2000000000000000) == 0 && (v16 & 0x1000000000000000) == 0) {
              sub_261B8F928();
            }
            uint64_t v20 = sub_261B8F938();
          }
          uint64_t v4 = v20;
          swift_bridgeObjectRelease();
          if ((v4 - 14) > 0xFFFFFFFB || (v4 - 8232) < 2 || v4 == 133)
          {
            if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
            {
              unint64_t v14 = sub_261B8F1A8();
              *(void *)(v10 + 16) = v14;
              unint64_t v15 = v14;
            }
            else
            {
              if (v14 >> 14 < v15 >> 14) {
                goto LABEL_49;
              }
              unint64_t v21 = a4;
              uint64_t v22 = sub_261B8F268();
              uint64_t v24 = v23;
              uint64_t v26 = v25;
              uint64_t v4 = v27;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v13 = sub_261A0B8A0(0, v13[2] + 1, 1, v13);
              }
              unint64_t v28 = v13;
              unint64_t v29 = v13[2];
              unint64_t v30 = v28;
              unint64_t v31 = v28[3];
              if (v29 >= v31 >> 1) {
                unint64_t v30 = sub_261A0B8A0((void *)(v31 > 1), v29 + 1, 1, v30);
              }
              v30[2] = v29 + 1;
              uint64_t v32 = &v30[4 * v29];
              uint64_t v13 = v30;
              v32[4] = v22;
              v32[5] = v24;
              v32[6] = v26;
              v32[7] = v4;
              *(void *)(v8 + 16) = v30;
              a4 = v21;
              a3 = (unint64_t)v42;
              unint64_t v15 = sub_261B8F1A8();
              uint64_t v10 = v43;
              *(void *)(v43 + 16) = v15;
              unint64_t v14 = v15;
              if (v13[2] == v41)
              {
LABEL_38:
                if (v45 == v15 >> 14 && (a2 & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_46;
                }
                if (v45 < v15 >> 14)
                {
LABEL_49:
                  sub_261B8F9B8();
                  __break(1u);
                  goto LABEL_50;
                }
                a3 = (unint64_t)v13;
                unint64_t v15 = sub_261B8F268();
                unint64_t v18 = v34;
                uint64_t v13 = v35;
                uint64_t v4 = v36;
                swift_bridgeObjectRelease();
                if (swift_isUniquelyReferenced_nonNull_native())
                {
LABEL_43:
                  unint64_t v38 = *(void *)(a3 + 16);
                  unint64_t v37 = *(void *)(a3 + 24);
                  if (v38 >= v37 >> 1) {
                    a3 = (unint64_t)sub_261A0B8A0((void *)(v37 > 1), v38 + 1, 1, (void *)a3);
                  }
                  *(void *)(a3 + 16) = v38 + 1;
                  unsigned __int8 v39 = (void *)(a3 + 32 * v38);
                  v39[4] = v15;
                  v39[5] = v18;
                  _OWORD v39[6] = v13;
                  v39[7] = v4;
                  uint64_t v13 = (void *)a3;
                  *(void *)(v8 + 16) = a3;
                  goto LABEL_46;
                }
LABEL_48:
                a3 = (unint64_t)sub_261A0B8A0(0, *(void *)(a3 + 16) + 1, 1, (void *)a3);
                goto LABEL_43;
              }
            }
          }
          else
          {
            unint64_t v14 = sub_261B8F1A8();
          }
          if (v45 == v14 >> 14) {
            goto LABEL_38;
          }
        }
        __break(1u);
        goto LABEL_48;
      }
    }
    if ((a4 & 0x2000000000000000) == 0) {
      uint64_t v11 = a3 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v33 = 7;
    if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) != 0) {
      uint64_t v33 = 11;
    }
    sub_261B2EDE0(v33 | (v11 << 16), v9, a2 & 1, v8);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v8 + 16);
LABEL_46:
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    return (uint64_t)v13;
  }
  return result;
}

uint64_t sub_261B2DE18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v21[1] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947AD8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947AE8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8C688();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13 == 1)
  {
    sub_261B8BC98();
    uint64_t v14 = sub_261B8C678();
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v22 = v14;
    uint64_t v23 = v16;
    sub_261A029C4();
    *(void *)uint64_t v8 = sub_261B8E3D8();
    *((void *)v8 + 1) = v17;
    v8[16] = v18 & 1;
    *((void *)v8 + 3) = v19;
    swift_storeEnumTagMultiPayload();
    sub_2619F8AB8(&qword_26A947AD0, &qword_26A947AD8);
    return sub_261B8DD68();
  }
  else
  {
    _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
    *(void *)uint64_t v5 = sub_261B8DBE8();
    *((void *)v5 + 1) = 0xC000000000000000;
    unsigned char v5[16] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A947AF0);
    uint64_t v22 = 0;
    uint64_t v23 = v13;
    swift_getKeyPath();
    *(void *)(swift_allocObject() + 16) = a1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435F0);
    sub_261A03EF0();
    sub_261B8EBE8();
    sub_2619F86F0((uint64_t)v5, (uint64_t)v8, &qword_26A947AD8);
    swift_storeEnumTagMultiPayload();
    sub_2619F8AB8(&qword_26A947AD0, &qword_26A947AD8);
    sub_261B8DD68();
    return sub_2619F8754((uint64_t)v5, &qword_26A947AD8);
  }
}

void *sub_261B2E1B4@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*result < *(void *)(a2 + 16))
  {
    sub_261B2F3A0();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_261B8E3D8();
    *(void *)a3 = result;
    *(void *)(a3 + 8) = v4;
    *(unsigned char *)(a3 + 16) = v5 & 1;
    *(void *)(a3 + 24) = v6;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_261B2E248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v77 = a3;
  uint64_t v75 = sub_261B8D748();
  MEMORY[0x270FA5388](v75);
  uint64_t v76 = (uint64_t *)((char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_261B8E978();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947A08);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947A10);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947A18);
  uint64_t v18 = v17 - 8;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947A20);
  MEMORY[0x270FA5388](v69);
  uint64_t v78 = (uint64_t)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947A28);
  MEMORY[0x270FA5388](v70);
  uint64_t v79 = (uint64_t)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947A30);
  MEMORY[0x270FA5388](v71);
  uint64_t v74 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947A38);
  MEMORY[0x270FA5388](v72);
  uint64_t v73 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = a1;
  sub_261B2EB7C(a1);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F1B540], v6);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = (uint64_t *)&v16[*(int *)(v14 + 44)];
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E30);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v26 + *(int *)(v27 + 28), v9, v6);
  *uint64_t v26 = KeyPath;
  sub_2619F86F0((uint64_t)v12, (uint64_t)v16, &qword_26A947A08);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_2619F8754((uint64_t)v12, &qword_26A947A08);
  uint64_t v28 = swift_getKeyPath();
  sub_2619F86F0((uint64_t)v16, (uint64_t)v20, &qword_26A947A10);
  unint64_t v29 = (uint64_t *)&v20[*(int *)(v18 + 44)];
  *unint64_t v29 = v28;
  v29[1] = a2;
  swift_retain();
  sub_2619F8754((uint64_t)v16, &qword_26A947A10);
  if (qword_26A942C98 != -1) {
    swift_once();
  }
  if (qword_26A942CA8 != -1) {
    swift_once();
  }
  sub_261B8EC98();
  sub_261B8D4D8();
  uint64_t v30 = v78;
  sub_2619F86F0((uint64_t)v20, v78, &qword_26A947A18);
  unint64_t v31 = (_OWORD *)(v30 + *(int *)(v69 + 36));
  long long v32 = v85;
  _OWORD *v31 = v84;
  v31[1] = v32;
  v31[2] = v86;
  sub_2619F8754((uint64_t)v20, &qword_26A947A18);
  uint64_t v33 = sub_261B8BCE8();
  uint64_t v82 = v33;
  uint64_t v34 = sub_261B2F308((unint64_t *)&qword_26A943490, MEMORY[0x263F87CE8]);
  uint64_t v83 = v34;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v81);
  uint64_t v36 = *MEMORY[0x263F87CE0];
  unint64_t v37 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104);
  v37(boxed_opaque_existential_1, v36, v33);
  LOBYTE(v30) = sub_261B8C6E8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
  if ((v30 & 1) != 0 || !v80)
  {
    v81[0] = sub_261B8E858();
    sub_261B2EF4C();
    sub_261B8E8F8();
  }
  else
  {
    swift_retain();
    unint64_t v38 = (void *)sub_261B8BC88();
    id v39 = objc_msgSend(v38, sel_goalTypeIdentifier);

    char v40 = _HKWorkoutGoalType.color.getter((uint64_t)v39);
    MEMORY[0x263E4C7B0](v40);
    swift_release();
  }
  uint64_t v82 = v33;
  uint64_t v83 = v34;
  uint64_t v41 = __swift_allocate_boxed_opaque_existential_1(v81);
  v37(v41, v36, v33);
  sub_261B8C6E8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
  uint64_t v42 = sub_261B8E8A8();
  swift_release();
  char v43 = sub_261B8DFA8();
  uint64_t v44 = v78;
  uint64_t v45 = v36;
  uint64_t v46 = v34;
  uint64_t v47 = v79;
  sub_2619F86F0(v78, v79, &qword_26A947A20);
  uint64_t v48 = v47 + *(int *)(v70 + 36);
  *(void *)uint64_t v48 = v42;
  *(unsigned char *)(v48 + 8) = v43;
  uint64_t v49 = v44;
  uint64_t v50 = v80;
  sub_2619F8754(v49, &qword_26A947A20);
  uint64_t v82 = v33;
  uint64_t v83 = v46;
  uint64_t v51 = __swift_allocate_boxed_opaque_existential_1(v81);
  v37(v51, v45, v33);
  char v52 = sub_261B8C6E8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
  if ((v52 & 1) != 0 || !v50)
  {
    v81[0] = sub_261B8E858();
    sub_261B2EF4C();
    uint64_t v56 = sub_261B8E8F8();
  }
  else
  {
    swift_retain();
    uint64_t v53 = (void *)sub_261B8BC88();
    id v54 = objc_msgSend(v53, sel_goalTypeIdentifier);

    unsigned __int8 v55 = _HKWorkoutGoalType.color.getter((uint64_t)v54);
    uint64_t v56 = MEMORY[0x263E4C7B0](v55);
    swift_release();
  }
  uint64_t v57 = (uint64_t)v74;
  uint64_t v58 = swift_getKeyPath();
  uint64_t v59 = v79;
  sub_2619F86F0(v79, v57, &qword_26A947A28);
  uint64_t v60 = (uint64_t *)(v57 + *(int *)(v71 + 36));
  *uint64_t v60 = v58;
  v60[1] = v56;
  sub_2619F8754(v59, &qword_26A947A28);
  if (qword_26A942C88 != -1) {
    swift_once();
  }
  uint64_t v61 = qword_26A9447C0;
  uint64_t v62 = v76;
  uint64_t v63 = (char *)v76 + *(int *)(v75 + 20);
  uint64_t v64 = *MEMORY[0x263F19860];
  uint64_t v65 = sub_261B8DBB8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v65 - 8) + 104))(v63, v64, v65);
  *uint64_t v62 = v61;
  v62[1] = v61;
  uint64_t v66 = (uint64_t)v73;
  uint64_t v67 = (uint64_t)&v73[*(int *)(v72 + 36)];
  sub_261A1396C((uint64_t)v62, v67);
  *(_WORD *)(v67 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A944190) + 36)) = 256;
  sub_2619F86F0(v57, v66, &qword_26A947A30);
  sub_261A139D0((uint64_t)v62);
  sub_2619F8754(v57, &qword_26A947A30);
  return sub_2619FB7EC(v66, v77, &qword_26A947A38);
}

uint64_t sub_261B2EB7C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947A48);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947A50);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946778);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v11 = swift_retain();
    sub_261B2D0CC(v11, (uint64_t)v4);
    sub_2619F86F0((uint64_t)v4, (uint64_t)v7, &qword_26A947A48);
    swift_storeEnumTagMultiPayload();
    sub_261B2EFA8();
    sub_261ABC908();
    sub_261B8DD68();
    swift_release();
    uint64_t v12 = (uint64_t)v4;
    uint64_t v13 = &qword_26A947A48;
  }
  else
  {
    v15[1] = sub_261B8E918();
    sub_261B8E588();
    swift_release();
    sub_2619F86F0((uint64_t)v10, (uint64_t)v7, &qword_26A946778);
    swift_storeEnumTagMultiPayload();
    sub_261B2EFA8();
    sub_261ABC908();
    sub_261B8DD68();
    uint64_t v12 = (uint64_t)v10;
    uint64_t v13 = &qword_26A946778;
  }
  return sub_2619F8754(v12, v13);
}

uint64_t sub_261B2EDD8@<X0>(uint64_t a1@<X8>)
{
  return sub_261B2E248(*v1, v1[1], a1);
}

uint64_t sub_261B2EDE0(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_261B8F268();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    uint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v14 = sub_261A0B8A0(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      uint64_t v14 = sub_261A0B8A0((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    void v14[2] = v17 + 1;
    uint64_t v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_261B8F9B8();
  __break(1u);
  return result;
}

unint64_t sub_261B2EF4C()
{
  unint64_t result = qword_26A947A40;
  if (!qword_26A947A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947A40);
  }
  return result;
}

uint64_t sub_261B2EFA8()
{
  return sub_261B2F87C(&qword_26A947A58, &qword_26A947A48, (void (*)(void))sub_261B2EFE4, (void (*)(void))sub_261B2F058);
}

unint64_t sub_261B2EFE4()
{
  unint64_t result = qword_26A947A60;
  if (!qword_26A947A60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947A68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947A60);
  }
  return result;
}

uint64_t sub_261B2F058()
{
  return sub_261B2F614(&qword_26A947A70, &qword_26A947A78, (void (*)(void))sub_261B2F088);
}

unint64_t sub_261B2F088()
{
  unint64_t result = qword_26A947A80;
  if (!qword_26A947A80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947A88);
    sub_261B2F128();
    sub_2619F8AB8(&qword_26A9430E8, &qword_26A9430F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947A80);
  }
  return result;
}

unint64_t sub_261B2F128()
{
  unint64_t result = qword_26A947A90;
  if (!qword_26A947A90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947A98);
    sub_261B2F614(&qword_26A947AA0, &qword_26A947AA8, (void (*)(void))sub_261B2F1F4);
    sub_2619F8AB8(&qword_26A943050, &qword_26A943058);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947A90);
  }
  return result;
}

unint64_t sub_261B2F1F4()
{
  unint64_t result = qword_26A947AB0;
  if (!qword_26A947AB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947AB8);
    sub_261B2F268();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947AB0);
  }
  return result;
}

unint64_t sub_261B2F268()
{
  unint64_t result = qword_26A947AC0;
  if (!qword_26A947AC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947AC8);
    sub_2619F8AB8(&qword_26A947AD0, &qword_26A947AD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947AC0);
  }
  return result;
}

uint64_t sub_261B2F308(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261B2F360()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void *sub_261B2F398@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_261B2E1B4(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_261B2F3A0()
{
  unint64_t result = qword_26A947AF8;
  if (!qword_26A947AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947AF8);
  }
  return result;
}

uint64_t sub_261B2F3F4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

unint64_t sub_261B2F408()
{
  unint64_t result = qword_26A947B00;
  if (!qword_26A947B00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947A38);
    sub_261B2F4A8();
    sub_2619F8AB8(&qword_26A9441C0, &qword_26A944190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947B00);
  }
  return result;
}

unint64_t sub_261B2F4A8()
{
  unint64_t result = qword_26A947B08;
  if (!qword_26A947B08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947A30);
    sub_261B2F548();
    sub_2619F8AB8((unint64_t *)&qword_26A943AF0, &qword_26A943AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947B08);
  }
  return result;
}

unint64_t sub_261B2F548()
{
  unint64_t result = qword_26A947B10;
  if (!qword_26A947B10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947A28);
    sub_261B2F614(&qword_26A947B18, &qword_26A947A20, (void (*)(void))sub_261B2F690);
    sub_2619F8AB8((unint64_t *)&qword_26A944358, &qword_26A944360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947B10);
  }
  return result;
}

uint64_t sub_261B2F614(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261B2F690()
{
  unint64_t result = qword_26A947B20;
  if (!qword_26A947B20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947A18);
    sub_261B2F730();
    sub_2619F8AB8((unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947B20);
  }
  return result;
}

unint64_t sub_261B2F730()
{
  unint64_t result = qword_26A947B28;
  if (!qword_26A947B28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947A10);
    sub_261B2F7D0();
    sub_2619F8AB8(&qword_26A947070, &qword_26A944E30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947B28);
  }
  return result;
}

unint64_t sub_261B2F7D0()
{
  unint64_t result = qword_26A947B30;
  if (!qword_26A947B30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947A08);
    sub_261B2F87C(&qword_26A947B38, &qword_26A947B40, (void (*)(void))sub_261B2EFA8, (void (*)(void))sub_261ABC908);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947B30);
  }
  return result;
}

uint64_t sub_261B2F87C(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id AssetBundleBridge.__allocating_init(assetBundle:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  unint64_t v4 = &v3[OBJC_IVAR___SMAssetBundle_assetBundle];
  uint64_t v5 = sub_261B8B188();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v3;
  v9.super_class = v1;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

unint64_t static AssetBundleBridge.bundleReasonBridge(for:)(uint64_t a1, char a2)
{
  if (a2 == -1 || (a2 & 1) == 0) {
    return 2;
  }
  unint64_t result = sub_261B8B168();
  if (result >= 2) {
    return 2;
  }
  return result;
}

uint64_t sub_261B2FA44()
{
  return sub_261B8B118();
}

uint64_t sub_261B2FA88()
{
  return sub_261B8B148();
}

id sub_261B2FACC(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  uint64_t v5 = (void *)sub_261B8F0B8();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_261B2FB48()
{
  return sub_261B8B158();
}

uint64_t sub_261B2FBD8()
{
  char v0 = sub_261B8B128();
  if (v1) {
    return qword_261B9AF90[v0];
  }
  else {
    return 6;
  }
}

unint64_t sub_261B2FC54()
{
  sub_261B8B178();
  if ((v0 & 1) == 0) {
    return 2;
  }
  unint64_t result = sub_261B8B168();
  if (result >= 2) {
    return 2;
  }
  return result;
}

id AssetBundleBridge.init(assetBundle:)(uint64_t a1)
{
  uint64_t v3 = &v1[OBJC_IVAR___SMAssetBundle_assetBundle];
  uint64_t v4 = sub_261B8B188();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for AssetBundleBridge();
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v6;
}

uint64_t type metadata accessor for AssetBundleBridge()
{
  uint64_t result = qword_26A947B50;
  if (!qword_26A947B50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id AssetBundleBridge.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AssetBundleBridge.init()()
{
}

id AssetBundleBridge.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AssetBundleBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_261B2FF10()
{
  return type metadata accessor for AssetBundleBridge();
}

uint64_t sub_261B2FF18()
{
  uint64_t result = sub_261B8B188();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AssetBundleBridge(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AssetBundleBridge);
}

uint64_t dispatch thunk of AssetBundleBridge.identifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of AssetBundleBridge.workoutIdentifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AssetBundleBridge.downloadingDeviceIdentifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AssetBundleBridge.loadStatus.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AssetBundleBridge.reason.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AssetBundleBridge.__allocating_init(assetBundle:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_261B300D8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_261B8F9D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t result = sub_261ACA464(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x263E4D7B0](i, a1);
        type metadata accessor for CGColor(0);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_261ACA464(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_261ACA464(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_261A0CCBC(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      objc_super v8 = (id *)(a1 + 32);
      type metadata accessor for CGColor(0);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_261ACA464(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_261ACA464(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_261A0CCBC(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_261B3030C(uint64_t a1)
{
  uint64_t v2 = sub_261B8B378();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946940);
  uint64_t v6 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  objc_super v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_261ACA4C0(0, v9, 0);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v17 = *(void *)(v11 + 56);
    uint64_t v18 = v12;
    do
    {
      v18(v5, v13, v2);
      swift_dynamicCast();
      uint64_t v10 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_261ACA4C0(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v20;
      }
      unint64_t v15 = *(void *)(v10 + 16);
      unint64_t v14 = *(void *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_261ACA4C0(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v20;
      }
      *(void *)(v10 + 16) = v15 + 1;
      sub_261B317AC((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v15);
      v13 += v17;
      --v9;
    }
    while (v9);
  }
  return v10;
}

char *GuidedWorkoutBackgroundView.__allocating_init(cornerRadius:)(double a1)
{
  id v3 = objc_allocWithZone(v1);
  return GuidedWorkoutBackgroundView.init(cornerRadius:)(a1);
}

char *GuidedWorkoutBackgroundView.init(cornerRadius:)(double a1)
{
  uint64_t v3 = OBJC_IVAR___SMGuidedWorkoutBackgroundView_imageView;
  id v4 = objc_allocWithZone(MEMORY[0x263F82828]);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  uint64_t v6 = &v5[OBJC_IVAR___SMGuidedWorkoutBackgroundView_currentBounds];
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *(void *)&v5[OBJC_IVAR___SMGuidedWorkoutBackgroundView_gradientLayer] = 0;
  *(void *)&v5[OBJC_IVAR___SMGuidedWorkoutBackgroundView_vignetteView] = 0;
  *(double *)&v5[OBJC_IVAR___SMGuidedWorkoutBackgroundView_cornerRadius] = a1;

  v27.receiver = v5;
  v27.super_class = (Class)type metadata accessor for GuidedWorkoutBackgroundView();
  uint64_t v7 = (char *)objc_msgSendSuper2(&v27, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v8 = OBJC_IVAR___SMGuidedWorkoutBackgroundView_imageView;
  int64_t v9 = *(void **)&v7[OBJC_IVAR___SMGuidedWorkoutBackgroundView_imageView];
  uint64_t v10 = v7;
  objc_msgSend(v9, sel_setContentMode_, 2);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v10, sel_addSubview_, v9);
  uint64_t v11 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9443E8);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_261B94510;
  id v13 = objc_msgSend(v9, sel_leadingAnchor);
  id v14 = objc_msgSend(v10, sel_leadingAnchor);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

  *(void *)(v12 + 32) = v15;
  id v16 = objc_msgSend(*(id *)&v7[v8], sel_trailingAnchor);
  id v17 = objc_msgSend(v10, sel_trailingAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(void *)(v12 + 40) = v18;
  id v19 = objc_msgSend(*(id *)&v7[v8], sel_topAnchor);
  id v20 = objc_msgSend(v10, sel_topAnchor);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(void *)(v12 + 48) = v21;
  id v22 = objc_msgSend(*(id *)&v7[v8], sel_bottomAnchor);
  id v23 = objc_msgSend(v10, sel_bottomAnchor);
  id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

  *(void *)(v12 + 56) = v24;
  sub_261B8F2E8();
  sub_261A0CCCC(0, qword_26A9443F0);
  uint64_t v25 = (void *)sub_261B8F2C8();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_activateConstraints_, v25);

  return v10;
}

uint64_t type metadata accessor for GuidedWorkoutBackgroundView()
{
  return self;
}

id sub_261B30950()
{
  objc_msgSend(v0, sel_bounds);
  v30.origin.x = 0.0;
  v30.origin.y = 0.0;
  v30.size.width = 0.0;
  v30.size.height = 0.0;
  id result = (id)CGRectEqualToRect(v28, v30);
  if ((result & 1) == 0)
  {
    uint64_t v2 = &v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_currentBounds];
    CGFloat v3 = *(double *)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_currentBounds];
    CGFloat v4 = *(double *)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_currentBounds + 8];
    CGFloat v5 = *(double *)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_currentBounds + 16];
    CGFloat v6 = *(double *)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_currentBounds + 24];
    objc_msgSend(v0, sel_bounds);
    v31.origin.x = v7;
    v31.origin.y = v8;
    v31.size.width = v9;
    v31.size.height = v10;
    v29.origin.x = v3;
    v29.origin.y = v4;
    v29.size.width = v5;
    v29.size.height = v6;
    id result = (id)CGRectEqualToRect(v29, v31);
    if ((result & 1) == 0)
    {
      objc_msgSend(v0, sel_bounds);
      *(void *)uint64_t v2 = v11;
      *((void *)v2 + 1) = v12;
      *((void *)v2 + 2) = v13;
      *((void *)v2 + 3) = v14;
      id v15 = self;
      objc_msgSend(v15, sel_begin);
      objc_msgSend(v15, sel_setDisableActions_, 1);
      id v16 = *(void **)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_gradientLayer];
      if (v16)
      {
        id v17 = v16;
        objc_msgSend(v0, sel_bounds);
        objc_msgSend(v17, sel_setFrame_);
      }
      id v18 = *(void **)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_imageView];
      id v19 = objc_msgSend(v18, sel_image);
      if (!v19
        || (double v20 = *(double *)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_cornerRadius],
            objc_msgSend(v0, sel_bounds),
            (uint64_t v25 = sub_261B03F1C(v20, v21, v22, v23, v24)) == 0))
      {
        uint64_t v25 = (UIImage *)v19;
      }
      uint64_t v26 = v25;
      objc_msgSend(v18, sel_setImage_, v25);

      return objc_msgSend(v15, sel_commit);
    }
  }
  return result;
}

char *sub_261B30B90(void *a1, void *a2)
{
  CGFloat v3 = v2;
  CGFloat v6 = *(void **)&v3[OBJC_IVAR___SMGuidedWorkoutBackgroundView_imageView];
  if (!a1
    || (double v7 = *(double *)&v3[OBJC_IVAR___SMGuidedWorkoutBackgroundView_cornerRadius],
        objc_msgSend(v3, sel_bounds),
        (uint64_t v12 = sub_261B03F1C(v7, v8, v9, v10, v11)) == 0))
  {
    uint64_t v12 = a1;
  }
  uint64_t v13 = v12;
  objc_msgSend(v6, sel_setImage_, v12);

  if (!a2 || (id result = (char *)sub_261A71C44((uint64_t)objc_msgSend(a2, sel_integerValue)), (v15 & 1) != 0))
  {
    if (a1)
    {
LABEL_13:
      return (char *)sub_261B30EF8();
    }
  }
  else if (a1)
  {
    if ((unint64_t)(result - 3) < 2) {
      return result;
    }
    if (result == (char *)2)
    {
      return (char *)sub_261B30F20();
    }
    if (result != (char *)1)
    {
      id result = (char *)sub_261B8FBD8();
      __break(1u);
      return result;
    }
    goto LABEL_13;
  }
  id v16 = *(void **)&v3[OBJC_IVAR___SMGuidedWorkoutBackgroundView_gradientLayer];
  if (v16) {
    objc_msgSend(v16, sel_setHidden_, 1);
  }
  id result = *(char **)&v3[OBJC_IVAR___SMGuidedWorkoutBackgroundView_vignetteView];
  if (result)
  {
    return (char *)objc_msgSend(result, sel_setHidden_, 1);
  }
  return result;
}

void sub_261B30DF8(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___SMGuidedWorkoutBackgroundView_vignetteView);
  if (v2)
  {
    id v4 = v2;
    sub_261B1B900(a1);
  }
}

id sub_261B30EF8()
{
  return sub_261B30F48(&OBJC_IVAR___SMGuidedWorkoutBackgroundView_gradientLayer, (uint64_t (*)(void))sub_261B30FF4, &OBJC_IVAR___SMGuidedWorkoutBackgroundView_vignetteView);
}

id sub_261B30F20()
{
  return sub_261B30F48(&OBJC_IVAR___SMGuidedWorkoutBackgroundView_vignetteView, (uint64_t (*)(void))sub_261B31260, &OBJC_IVAR___SMGuidedWorkoutBackgroundView_gradientLayer);
}

id sub_261B30F48(uint64_t *a1, uint64_t (*a2)(void), void *a3)
{
  uint64_t v5 = *a1;
  CGFloat v6 = *(void **)(v3 + *a1);
  double v7 = v6;
  uint64_t v8 = (uint64_t)v6;
  if (!v6)
  {
    uint64_t v8 = a2(0);
    double v7 = *(void **)(v3 + v5);
  }
  *(void *)(v3 + v5) = v8;
  id v9 = v6;

  CGFloat v10 = *(void **)(v3 + v5);
  if (v10) {
    objc_msgSend(v10, sel_setHidden_, 0);
  }
  id result = *(id *)(v3 + *a3);
  if (result)
  {
    return objc_msgSend(result, sel_setHidden_, 1);
  }
  return result;
}

id sub_261B30FF4()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157D0]), sel_init);
  id v3 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v3, sel_activeAppearance);

  unint64_t v4 = sub_261A806DC();
  sub_261B300D8(v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_261B8F2C8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setColors_, v5);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9443E8);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_261B96F60;
  sub_261A0CCCC(0, (unint64_t *)&qword_26A947430);
  *(void *)(v6 + 32) = sub_261B8F688();
  *(void *)(v6 + 40) = sub_261B8F678();
  *(void *)(v6 + 48) = sub_261B8F678();
  sub_261B8F2E8();
  double v7 = (void *)sub_261B8F2C8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setLocations_, v7);

  objc_msgSend(v2, sel_setStartPoint_, 0.5, 0.0);
  objc_msgSend(v2, sel_setEndPoint_, 0.5, 1.0);
  sub_261B8F0F8();
  id v8 = objc_allocWithZone(MEMORY[0x263F157C8]);
  id v9 = v2;
  CGFloat v10 = (void *)sub_261B8F0B8();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v8, sel_initWithType_, v10);

  objc_msgSend(v9, sel_setCompositingFilter_, v11);
  id v12 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v12, sel_addSublayer_, v9);

  return v9;
}

id sub_261B31260()
{
  uint64_t v1 = v0;
  double v2 = *(double *)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_cornerRadius];
  id v3 = objc_allocWithZone((Class)type metadata accessor for VignetteView());
  id v4 = VignetteView.init(cornerRadius:)(v2);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_addSubview_, v4);
  uint64_t v5 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9443E8);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_261B94510;
  id v7 = objc_msgSend(v4, sel_leadingAnchor);
  id v8 = *(void **)&v1[OBJC_IVAR___SMGuidedWorkoutBackgroundView_imageView];
  id v9 = objc_msgSend(v8, sel_leadingAnchor);
  id v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v9);

  *(void *)(v6 + 32) = v10;
  id v11 = objc_msgSend(v4, sel_trailingAnchor);
  id v12 = objc_msgSend(v8, sel_trailingAnchor);
  id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(void *)(v6 + 40) = v13;
  id v14 = objc_msgSend(v4, sel_topAnchor);
  id v15 = objc_msgSend(v8, sel_topAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(void *)(v6 + 48) = v16;
  id v17 = objc_msgSend(v4, sel_bottomAnchor);
  id v18 = objc_msgSend(v8, sel_bottomAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(void *)(v6 + 56) = v19;
  sub_261B8F2E8();
  sub_261A0CCCC(0, qword_26A9443F0);
  double v20 = (void *)sub_261B8F2C8();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_activateConstraints_, v20);

  return v4;
}

id GuidedWorkoutBackgroundView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void GuidedWorkoutBackgroundView.init(frame:)()
{
}

id GuidedWorkoutBackgroundView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GuidedWorkoutBackgroundView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for GuidedWorkoutBackgroundView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for GuidedWorkoutBackgroundView);
}

uint64_t dispatch thunk of GuidedWorkoutBackgroundView.__allocating_init(cornerRadius:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of GuidedWorkoutBackgroundView.update(image:with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of GuidedWorkoutBackgroundView.update(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

void sub_261B316F8()
{
  uint64_t v1 = OBJC_IVAR___SMGuidedWorkoutBackgroundView_imageView;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
  objc_super v2 = &v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_currentBounds];
  *(_OWORD *)objc_super v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *(void *)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_gradientLayer] = 0;
  *(void *)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_vignetteView] = 0;

  sub_261B8F9C8();
  __break(1u);
}

uint64_t sub_261B317AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261B3185C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_isExternalSessionActive);
  swift_beginAccess();
  return *v1;
}

id sub_261B3193C()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_observers);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void sub_261B319F4(void **a1, void *a2)
{
  objc_super v2 = *a1;
  id v3 = (void **)(*a2 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_observers);
  swift_beginAccess();
  uint64_t v4 = *v3;
  char *v3 = v2;
  id v5 = v2;
}

id ExternalSeymourSessionStatusProvider.__allocating_init(dependenciesWrapper:appBundleIdentifier:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  id v8 = objc_allocWithZone((Class)type metadata accessor for ExternalSeymourSessionStatusProvider());
  uint64_t v9 = swift_retain();
  id v10 = ExternalSeymourSessionStatusProvider.init(dependencies:appBundleIdentifier:)(v9, a2, a3);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

id ExternalSeymourSessionStatusProvider.init(dependenciesWrapper:appBundleIdentifier:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_allocWithZone((Class)type metadata accessor for ExternalSeymourSessionStatusProvider());
  uint64_t v7 = swift_retain();
  id v8 = ExternalSeymourSessionStatusProvider.init(dependencies:appBundleIdentifier:)(v7, a2, a3);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v8;
}

id ExternalSeymourSessionStatusProvider.__allocating_init(dependencies:appBundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return ExternalSeymourSessionStatusProvider.init(dependencies:appBundleIdentifier:)(a1, a2, a3);
}

uint64_t type metadata accessor for ExternalSeymourSessionStatusProvider()
{
  uint64_t result = qword_26A947BC0;
  if (!qword_26A947BC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id ExternalSeymourSessionStatusProvider.init(dependencies:appBundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = v3;
  sub_261B8ACF8();
  v6[OBJC_IVAR___NLExternalSeymourSessionStatusProvider_isExternalSessionActive] = 0;
  id v7 = &v6[OBJC_IVAR___NLExternalSeymourSessionStatusProvider_appBundleIdentifier];
  *id v7 = a2;
  v7[1] = a3;
  id v8 = objc_msgSend(self, sel_weakObjectsHashTable);
  *(void *)&v6[OBJC_IVAR___NLExternalSeymourSessionStatusProvider_observers] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947B98);
  sub_261B8B298();
  sub_261A4E500(v15, (uint64_t)&v6[OBJC_IVAR___NLExternalSeymourSessionStatusProvider_sessionClient]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945008);
  sub_261B8B298();
  uint64_t v9 = *((void *)&v15[0] + 1);
  id v10 = &v6[OBJC_IVAR___NLExternalSeymourSessionStatusProvider_eventHub];
  *id v10 = *(void *)&v15[0];
  v10[1] = v9;
  sub_261B8CD68();
  swift_allocObject();
  swift_unknownObjectRetain_n();
  *(void *)&v6[OBJC_IVAR___NLExternalSeymourSessionStatusProvider_subscriptionToken] = sub_261B8CD58();

  v14.receiver = v6;
  v14.super_class = (Class)type metadata accessor for ExternalSeymourSessionStatusProvider();
  id v11 = objc_msgSendSuper2(&v14, sel_init);
  swift_getObjectType();
  sub_261B8CD48();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v12 = v11;
  sub_261B8CD08();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  sub_261B8CD98();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_261B8CD08();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  objc_msgSend(v12, sel_updateStatus);
  swift_unknownObjectRelease();

  swift_release();
  return v12;
}

uint64_t sub_261B32034()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_261B3206C(uint64_t a1)
{
  sub_261B32088(a1, v1);
}

void sub_261B32088(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  id v3 = (void *)MEMORY[0x263E4EA60](v2);
  if (v3)
  {
    uint64_t v4 = v3;
    objc_msgSend(v3, sel_updateStatus);
  }
}

id ExternalSeymourSessionStatusProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ExternalSeymourSessionStatusProvider.init()()
{
}

id ExternalSeymourSessionStatusProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExternalSeymourSessionStatusProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall ExternalSeymourSessionStatusProvider.updateStatus()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450A0);
  uint64_t v67 = *(void *)(v1 - 8);
  uint64_t v68 = v1;
  uint64_t v66 = *(void *)(v67 + 64);
  MEMORY[0x270FA5388](v1);
  uint64_t v64 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v74 = (char *)&v54 - v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F90);
  uint64_t v71 = *(void *)(v5 - 8);
  uint64_t v72 = v5;
  uint64_t v70 = *(void *)(v71 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v69 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v65 = (char *)&v54 - v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v73 = (char *)&v54 - v10;
  uint64_t v11 = sub_261B8ADD8();
  uint64_t v75 = *(void *)(v11 - 8);
  uint64_t v12 = v75;
  uint64_t v13 = *(void *)(v75 + 64);
  MEMORY[0x270FA5388](v11);
  objc_super v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v17 = (char *)&v54 - v16;
  sub_261B8ADC8();
  uint64_t v18 = v0;
  uint64_t v19 = v0 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_lastUpdateTimestamp;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 40))(v19, v17, v11);
  swift_endAccess();
  double v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v60 = v17;
  v20(v17, v19, v11);
  uint64_t v62 = (void (*)(char *, char *, uint64_t))v20;
  uint64_t v63 = v12 + 16;
  uint64_t v61 = v18;
  __swift_project_boxed_opaque_existential_1((void *)(v18 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_sessionClient), *(void *)(v18 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_sessionClient + 24));
  sub_261B8CC98();
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v54 = v14;
  v20(v14, (uint64_t)v17, v11);
  uint64_t v22 = v75;
  uint64_t v23 = *(unsigned __int8 *)(v75 + 80);
  uint64_t v58 = v23 | 7;
  uint64_t v59 = (v23 + 16) & ~v23;
  uint64_t v24 = v59;
  unint64_t v57 = ((v13 + v59 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v25 = (v13 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v56 = v25;
  uint64_t v26 = swift_allocObject();
  unsigned __int8 v55 = *(void (**)(uint64_t, char *, uint64_t))(v22 + 32);
  v55(v26 + v24, v14, v11);
  *(void *)(v26 + v25) = v21;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_261B32BFC;
  *(void *)(v27 + 24) = v26;
  uint64_t v28 = v67;
  uint64_t v29 = v68;
  CGRect v30 = v64;
  CGRect v31 = v74;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v74, v68);
  unint64_t v32 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v33 = (v66 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v34 + v32, v30, v29);
  uint64_t v35 = (uint64_t (**)(uint64_t))(v34 + v33);
  *uint64_t v35 = sub_261B33348;
  v35[1] = (uint64_t (*)(uint64_t))v27;
  uint64_t v66 = MEMORY[0x263F8EE60] + 8;
  uint64_t v36 = v65;
  sub_261B8B798();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v29);
  uint64_t v37 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v38 = v54;
  id v39 = v60;
  v62(v54, v60, v11);
  uint64_t v40 = swift_allocObject();
  v55(v40 + v59, v38, v11);
  *(void *)(v40 + v56) = v37;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = sub_261B33424;
  *(void *)(v41 + 24) = v40;
  uint64_t v42 = v71;
  uint64_t v43 = v72;
  uint64_t v44 = v69;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v69, v36, v72);
  uint64_t v45 = v42;
  unint64_t v46 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  unint64_t v47 = (v70 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v48 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v48 + v46, v44, v43);
  uint64_t v49 = (uint64_t (**)(void *))(v48 + v47);
  *uint64_t v49 = sub_261A88F7C;
  v49[1] = (uint64_t (*)(void *))v41;
  uint64_t v50 = v73;
  sub_261B8B798();
  uint64_t v51 = *(void (**)(char *, uint64_t))(v45 + 8);
  v51(v36, v43);
  char v52 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_261B8B7A8();
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = 0;
  *(void *)(v53 + 24) = 0;
  v52(sub_261A53C98, v53);
  swift_release();
  swift_release();
  v51(v50, v43);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v39, v11);
}

void sub_261B3296C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_261B8ADD8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8ADC8();
  sub_261B338A8(&qword_26A9464A0, MEMORY[0x263F07490]);
  char v8 = sub_261B8F068();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    uint64_t v9 = a3 + 16;
    swift_beginAccess();
    uint64_t v10 = MEMORY[0x263E4EA60](v9);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      uint64_t v13 = *(void *)(v10 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_appBundleIdentifier);
      uint64_t v12 = *(void *)(v10 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_appBundleIdentifier + 8);
      swift_bridgeObjectRetain();

      if (sub_261B8B7B8() == v13 && v14 == v12)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v16 = sub_261B8FBA8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0) {
          goto LABEL_8;
        }
      }
      swift_beginAccess();
      uint64_t v20 = MEMORY[0x263E4EA60](v9);
      if (!v20) {
        return;
      }
      uint64_t v18 = (void *)v20;
      uint64_t v21 = (unsigned char *)(v20 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_isExternalSessionActive);
      swift_beginAccess();
      if (*v21 != 1) {
        goto LABEL_16;
      }
      *uint64_t v21 = 0;
      goto LABEL_15;
    }
LABEL_8:
    swift_beginAccess();
    uint64_t v17 = MEMORY[0x263E4EA60](v9);
    if (!v17) {
      return;
    }
    uint64_t v18 = (void *)v17;
    uint64_t v19 = (unsigned char *)(v17 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_isExternalSessionActive);
    swift_beginAccess();
    if (*v19) {
      goto LABEL_16;
    }
    *uint64_t v19 = 1;
LABEL_15:
    objc_msgSend(v18, sel_notifyObservers);
LABEL_16:
  }
}

void sub_261B32BFC(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_261B8ADD8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_261B3296C(a1, v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_261B32CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_261B8B2C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_261B8ADD8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8ADC8();
  sub_261B338A8(&qword_26A9464A0, MEMORY[0x263F07490]);
  char v12 = sub_261B8F068();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    uint64_t v13 = a3 + 16;
    swift_getErrorValue();
    uint64_t v14 = sub_261B8FC28();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F69300], v4);
    sub_261B338A8(&qword_26A947BD0, MEMORY[0x263F69330]);
    uint64_t v15 = sub_261B8FC28();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v14 == v15)
    {
      uint64_t v16 = sub_261B8F4D8();
      sub_261A407F4((uint64_t)"[ExternalSeymourSessionStatusObserver] No active session found.", 63, 2, v16, MEMORY[0x263F8EE78]);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_261B93F70;
      swift_getErrorValue();
      uint64_t v18 = MEMORY[0x263E4DB10](v25[8], v25[9]);
      uint64_t v20 = v19;
      *(void *)(inited + 56) = MEMORY[0x263F8D310];
      *(void *)(inited + 64) = sub_261A2B2E8();
      *(void *)(inited + 32) = v18;
      *(void *)(inited + 40) = v20;
      uint64_t v21 = sub_261B8F4D8();
      sub_261A407F4((uint64_t)"[ExternalSeymourSessionStatusObserver] Error querying active session: %@", 72, 2, v21, inited);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A945040);
      swift_arrayDestroy();
    }
    swift_beginAccess();
    uint64_t v22 = MEMORY[0x263E4EA60](v13);
    if (v22)
    {
      uint64_t v23 = (void *)v22;
      uint64_t v24 = (unsigned char *)(v22 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_isExternalSessionActive);
      swift_beginAccess();
      if (*v24 == 1)
      {
        *uint64_t v24 = 0;
        objc_msgSend(v23, sel_notifyObservers);
      }
    }
  }
}

id ExternalSeymourSessionStatusProvider.addObserver(_:)(uint64_t a1)
{
  return sub_261B330C4(a1, (SEL *)&selRef_addObject_);
}

id ExternalSeymourSessionStatusProvider.removeObserver(_:)(uint64_t a1)
{
  return sub_261B330C4(a1, (SEL *)&selRef_removeObject_);
}

id sub_261B330C4(uint64_t a1, SEL *a2)
{
  uint64_t v5 = (id *)(v2 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_observers);
  swift_beginAccess();
  return objc_msgSend(*v5, *a2, a1);
}

id sub_261B33134(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v6 = (id *)(a1 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_observers);
  swift_beginAccess();
  return objc_msgSend(*v6, *a4, a3);
}

Swift::Void __swiftcall ExternalSeymourSessionStatusProvider.notifyObservers()()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_observers);
  swift_beginAccess();
  id v2 = objc_msgSend(*v1, sel_allObjects);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947BB8);
  unint64_t v3 = sub_261B8F2D8();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_261B8F9D8();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v5 = (unsigned __int8 *)(v0 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_isExternalSessionActive);
    swift_beginAccess();
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = (void *)MEMORY[0x263E4D7B0](i, v3);
      }
      else
      {
        uint64_t v7 = *(void **)(v3 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      objc_msgSend(v7, sel_statusDidChangeWith_, *v5);
      swift_unknownObjectRelease();
    }
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_261B33348(uint64_t a1)
{
  return sub_261A88920(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_261B33350()
{
  return objectdestroy_7Tm(&qword_26A9450A0);
}

uint64_t sub_261B3335C(uint64_t a1, uint64_t a2)
{
  return sub_261B33530(a1, a2, &qword_26A9450A0, sub_261A528A8);
}

uint64_t objectdestroy_4Tm_0()
{
  uint64_t v1 = sub_261B8ADD8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

void sub_261B33424(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_261B8ADD8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_261B32CA4(a1, v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_261B334CC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261B33504()
{
  return objectdestroy_7Tm(&qword_26A944F90);
}

uint64_t sub_261B33510(uint64_t a1, uint64_t a2)
{
  return sub_261B33530(a1, a2, &qword_26A944F90, sub_261A890AC);
}

uint64_t sub_261B33530(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = (uint64_t *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  return a4(a1, a2, v9, v11, v12);
}

uint64_t sub_261B335F4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261B33634@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_isExternalSessionActive);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_261B33688(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_isExternalSessionActive);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = v2;
  return result;
}

id sub_261B336D8@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_observers);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_261B33740()
{
  return type metadata accessor for ExternalSeymourSessionStatusProvider();
}

uint64_t sub_261B33748()
{
  uint64_t result = sub_261B8ADD8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ExternalSeymourSessionStatusProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ExternalSeymourSessionStatusProvider);
}

uint64_t dispatch thunk of ExternalSeymourSessionStatusProvider.isExternalSessionActive.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ExternalSeymourSessionStatusProvider.observers.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ExternalSeymourSessionStatusProvider.__allocating_init(dependencies:appBundleIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t sub_261B338A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for EffortValueButton()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for EffortValueButton(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EffortValueButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for EffortValueButton(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for EffortValueButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EffortValueButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EffortValueButton()
{
  return &type metadata for EffortValueButton;
}

uint64_t sub_261B33B48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261B33B64()
{
  uint64_t result = sub_261B8E1B8();
  qword_26A947BD8 = result;
  return result;
}

uint64_t sub_261B33B84()
{
  uint64_t result = sub_261B8E1B8();
  qword_26A947BE0 = result;
  return result;
}

uint64_t sub_261B33BA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E30);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (void *)((char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_261B8E978();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v11 = sub_261B8E948();
    uint64_t v12 = (unsigned int *)MEMORY[0x263F1B540];
  }
  else
  {
    v16[1] = *(void *)v1;
    uint64_t v16[2] = sub_261B8FB78();
    void v16[3] = v10;
    sub_261B8F1C8();
    uint64_t v11 = sub_261B8E918();
    uint64_t v12 = (unsigned int *)MEMORY[0x263F1B530];
  }
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *v12, v6);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v3 + 28), v9, v6);
  *uint64_t v5 = KeyPath;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E38);
  sub_2619F86F0((uint64_t)v5, (uint64_t)a1 + *(int *)(v14 + 36), &qword_26A944E30);
  *a1 = v11;
  swift_retain();
  sub_2619F8754((uint64_t)v5, &qword_26A944E30);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

uint64_t sub_261B33DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_261B8DB08();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947C28);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947C18);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947C08);
  uint64_t v18 = v17 - 8;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = sub_261B8DAD8();
  *((void *)v12 + 1) = 0;
  v12[16] = 0;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947C48);
  sub_261B3416C(a1, (uint64_t)&v12[*(int *)(v21 + 44)]);
  sub_261B8DAF8();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  sub_261B35DC8(&qword_26A947C50, MEMORY[0x263F197F0]);
  uint64_t v22 = sub_261B8D4F8();
  sub_2619F86F0((uint64_t)v12, (uint64_t)v16, &qword_26A947C28);
  *(void *)&v16[*(int *)(v14 + 44)] = v22;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  sub_2619F8754((uint64_t)v12, &qword_26A947C28);
  sub_261B8EC98();
  sub_261B8D778();
  sub_2619F86F0((uint64_t)v16, (uint64_t)v20, &qword_26A947C18);
  uint64_t v23 = &v20[*(int *)(v18 + 44)];
  long long v24 = v36;
  *((_OWORD *)v23 + 4) = v35;
  *((_OWORD *)v23 + 5) = v24;
  *((_OWORD *)v23 + 6) = v37;
  long long v25 = v32;
  *(_OWORD *)uint64_t v23 = v31;
  *((_OWORD *)v23 + 1) = v25;
  long long v26 = v34;
  *((_OWORD *)v23 + 2) = v33;
  *((_OWORD *)v23 + 3) = v26;
  sub_2619F8754((uint64_t)v16, &qword_26A947C18);
  uint64_t v27 = v30;
  sub_2619F86F0((uint64_t)v20, v30, &qword_26A947C08);
  *(void *)(v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A947BF0) + 36)) = 0x402C000000000000;
  return sub_2619F8754((uint64_t)v20, &qword_26A947C08);
}

uint64_t sub_261B3416C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v222 = a2;
  uint64_t v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947C58);
  MEMORY[0x270FA5388](v221);
  uint64_t v196 = (uint64_t)&v189 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E30);
  MEMORY[0x270FA5388](v217);
  unint64_t v190 = (uint64_t *)((char *)&v189 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947C60);
  MEMORY[0x270FA5388](v191);
  uint64_t v193 = (uint64_t)&v189 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943398);
  MEMORY[0x270FA5388](v192);
  uint64_t v194 = (uint64_t)&v189 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9433A0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v225 = (uint64_t)&v189 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v195 = (uint64_t)&v189 - v10;
  uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947C68);
  MEMORY[0x270FA5388](v218);
  uint64_t v220 = (uint64_t)&v189 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947C70);
  MEMORY[0x270FA5388](v219);
  uint64_t v216 = (uint64_t)&v189 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944840);
  MEMORY[0x270FA5388](v210);
  uint64_t v214 = (uint64_t *)((char *)&v189 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_261B8D7B8();
  uint64_t v212 = *(void *)(v14 - 8);
  uint64_t v213 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v211 = (char *)&v189 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947C78);
  MEMORY[0x270FA5388](v209);
  unint64_t v215 = (char *)&v189 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v223 = (uint64_t)&v189 - v18;
  uint64_t v19 = sub_261B8DB88();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v208 = (uint64_t)&v189 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_261B8DED8();
  uint64_t v206 = *(void *)(v21 - 8);
  uint64_t v207 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v205 = (char *)&v189 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9440C8);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v199 = (char *)&v189 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_261B8E978();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v189 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E38);
  MEMORY[0x270FA5388](v189);
  uint64_t v30 = (uint64_t *)((char *)&v189 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947C80);
  MEMORY[0x270FA5388](v31);
  long long v33 = (char *)&v189 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947C88);
  MEMORY[0x270FA5388](v197);
  long long v35 = (char *)&v189 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947C90);
  MEMORY[0x270FA5388](v198);
  long long v37 = (char *)&v189 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947C98);
  MEMORY[0x270FA5388](v201);
  uint64_t v200 = (uint64_t)&v189 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947CA0);
  uint64_t v203 = *(void *)(v39 - 8);
  uint64_t v204 = v39;
  MEMORY[0x270FA5388](v39);
  uint64_t v202 = (char *)&v189 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947CA8);
  MEMORY[0x270FA5388](v41 - 8);
  MEMORY[0x270FA5388](v42);
  if (*(uint64_t *)a1 > 0 || (*(unsigned char *)(a1 + 24) & 1) != 0)
  {
    uint64_t v195 = *(void *)a1;
    uint64_t v196 = a1;
    uint64_t v224 = v44;
    uint64_t v225 = (uint64_t)&v189 - v43;
    sub_261B33BA4(v30);
    (*(void (**)(char *, void, uint64_t))(v26 + 104))(v28, *MEMORY[0x263F1B530], v25);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v106 = (uint64_t *)&v33[*(int *)(v31 + 36)];
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))((char *)v106 + *(int *)(v217 + 28), v28, v25);
    uint64_t *v106 = KeyPath;
    sub_2619F86F0((uint64_t)v30, (uint64_t)v33, &qword_26A944E38);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    sub_2619F8754((uint64_t)v30, &qword_26A944E38);
    uint64_t v107 = (uint64_t)v199;
    sub_261B8DC28();
    uint64_t v108 = sub_261B8DC38();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v107, 0, 1, v108);
    uint64_t v109 = swift_getKeyPath();
    uint64_t v110 = (uint64_t *)&v35[*(int *)(v197 + 36)];
    uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947038);
    sub_2619F86F0(v107, (uint64_t)v110 + *(int *)(v111 + 28), &qword_26A9440C8);
    *uint64_t v110 = v109;
    sub_2619F86F0((uint64_t)v33, (uint64_t)v35, &qword_26A947C80);
    sub_2619F8754(v107, &qword_26A9440C8);
    sub_2619F8754((uint64_t)v33, &qword_26A947C80);
    if (qword_26A942ED0 != -1) {
      swift_once();
    }
    uint64_t v112 = qword_26A947BD8;
    uint64_t v113 = swift_getKeyPath();
    sub_2619F86F0((uint64_t)v35, (uint64_t)v37, &qword_26A947C88);
    uint64_t v114 = (uint64_t *)&v37[*(int *)(v198 + 36)];
    *uint64_t v114 = v113;
    v114[1] = v112;
    swift_retain();
    sub_2619F8754((uint64_t)v35, &qword_26A947C88);
    LOBYTE(v112) = sub_261B8DFD8();
    sub_261B8D358();
    uint64_t v116 = v115;
    uint64_t v118 = v117;
    uint64_t v120 = v119;
    uint64_t v122 = v121;
    uint64_t v123 = v200;
    sub_2619F86F0((uint64_t)v37, v200, &qword_26A947C90);
    uint64_t v124 = v201;
    uint64_t v125 = v123 + *(int *)(v201 + 36);
    *(unsigned char *)uint64_t v125 = v112;
    *(void *)(v125 + 8) = v116;
    *(void *)(v125 + 16) = v118;
    *(void *)(v125 + 24) = v120;
    *(void *)(v125 + 32) = v122;
    *(unsigned char *)(v125 + 40) = 0;
    sub_2619F8754((uint64_t)v37, &qword_26A947C90);
    uint64_t v126 = v205;
    sub_261B8DEB8();
    uint64_t v127 = sub_261B360EC(&qword_26A947CC8, &qword_26A947C98, (void (*)(void))sub_261B36168);
    unint64_t v128 = v202;
    sub_261B8E6B8();
    (*(void (**)(char *, uint64_t))(v206 + 8))(v126, v207);
    sub_2619F8754(v123, &qword_26A947C98);
    sub_261B8DB78();
    sub_261B8DB68();
    *(void *)&long long v226 = v195;
    sub_261B8DB38();
    sub_261B8DB68();
    sub_261B8DBA8();
    *(void *)&long long v226 = v124;
    *((void *)&v226 + 1) = v127;
    swift_getOpaqueTypeConformance2();
    uint64_t v129 = v224;
    uint64_t v130 = v204;
    sub_261B8E658();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v203 + 8))(v128, v130);
    sub_2619FB7EC(v129, v225, &qword_26A947CA8);
    uint64_t v131 = *(void *)(v196 + 16);
    *(void *)&long long v226 = *(void *)(v196 + 8);
    *((void *)&v226 + 1) = v131;
    sub_261A029C4();
    swift_bridgeObjectRetain();
    uint64_t v132 = sub_261B8E3D8();
    uint64_t v134 = v133;
    char v136 = v135;
    if (qword_26A942ED8 != -1) {
      swift_once();
    }
    char v137 = v136 & 1;
    uint64_t v138 = sub_261B8E368();
    uint64_t v208 = v138;
    uint64_t v140 = v139;
    uint64_t v142 = v141;
    uint64_t v217 = v141;
    char v144 = v143 & 1;
    sub_261A02A18(v132, v134, v137);
    swift_bridgeObjectRelease();
    uint64_t v145 = swift_getKeyPath();
    char v146 = sub_261B8DFD8();
    sub_261B8D358();
    uint64_t v148 = v147;
    uint64_t v150 = v149;
    uint64_t v152 = v151;
    uint64_t v154 = v153;
    char v155 = sub_261B8DFF8();
    sub_261B8D358();
    *(void *)&long long v226 = v138;
    *((void *)&v226 + 1) = v140;
    LOBYTE(v227) = v144;
    *((void *)&v227 + 1) = v142;
    *(void *)&long long v228 = v145;
    *((void *)&v228 + 1) = 0x3FE0000000000000;
    LOBYTE(v229) = v146;
    *((void *)&v229 + 1) = v148;
    *(void *)&long long v230 = v150;
    *((void *)&v230 + 1) = v152;
    *(void *)&long long v231 = v154;
    BYTE8(v231) = 0;
    LOBYTE(v232) = v155;
    *((void *)&v232 + 1) = v156;
    *(void *)&v233[0] = v157;
    *((void *)&v233[0] + 1) = v158;
    *(void *)&v233[1] = v159;
    BYTE8(v233[1]) = 0;
    BOOL v160 = v211;
    sub_261B8D7A8();
    uint64_t v161 = swift_getKeyPath();
    uint64_t v163 = v213;
    uint64_t v162 = v214;
    uint64_t v164 = v212;
    (*(void (**)(char *, char *, uint64_t))(v212 + 16))((char *)v214 + *(int *)(v210 + 28), v160, v213);
    *uint64_t v162 = v161;
    uint64_t v165 = v215;
    sub_2619F86F0((uint64_t)v162, (uint64_t)&v215[*(int *)(v209 + 36)], &qword_26A944840);
    long long v166 = v233[0];
    v165[6] = v232;
    v165[7] = v166;
    *(_OWORD *)((char *)v165 + 121) = *(_OWORD *)((char *)v233 + 9);
    long long v167 = v229;
    v165[2] = v228;
    v165[3] = v167;
    long long v168 = v231;
    v165[4] = v230;
    v165[5] = v168;
    long long v169 = v227;
    *uint64_t v165 = v226;
    v165[1] = v169;
    sub_261A43A48((uint64_t)&v226);
    sub_2619F8754((uint64_t)v162, &qword_26A944840);
    (*(void (**)(char *, uint64_t))(v164 + 8))(v160, v163);
    sub_261A02A18(v208, v140, v144);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v170 = v223;
    sub_2619FB7EC((uint64_t)v165, v223, &qword_26A947C78);
    uint64_t v217 = sub_261B8E918();
    sub_261B8E0D8();
    sub_261B8E148();
    uint64_t v171 = sub_261B8E1D8();
    swift_release();
    uint64_t v172 = swift_getKeyPath();
    LODWORD(v164) = sub_261B8DE28();
    LOBYTE(v145) = sub_261B8DFF8();
    sub_261B8D358();
    uint64_t v174 = v173;
    uint64_t v176 = v175;
    uint64_t v178 = v177;
    uint64_t v180 = v179;
    uint64_t v213 = v175;
    uint64_t v214 = (uint64_t *)v173;
    uint64_t v212 = v177;
    uint64_t v181 = v145;
    uint64_t v182 = v224;
    sub_2619F86F0(v225, v224, &qword_26A947CA8);
    sub_2619F86F0(v170, (uint64_t)v165, &qword_26A947C78);
    uint64_t v183 = v216;
    sub_2619F86F0(v182, v216, &qword_26A947CA8);
    uint64_t v184 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26A947CF0);
    sub_2619F86F0((uint64_t)v165, v183 + v184[12], &qword_26A947C78);
    uint64_t v185 = v183 + v184[16];
    *(void *)uint64_t v185 = 0;
    *(unsigned char *)(v185 + 8) = 1;
    uint64_t v186 = v183 + v184[20];
    uint64_t v187 = v217;
    *(void *)uint64_t v186 = v217;
    *(void *)(v186 + 8) = v172;
    *(void *)(v186 + 16) = v171;
    *(void *)(v186 + 24) = v164;
    uint64_t v209 = v164;
    uint64_t v210 = v181;
    *(void *)(v186 + 32) = v181;
    *(void *)(v186 + 40) = v174;
    *(void *)(v186 + 48) = v176;
    *(void *)(v186 + 56) = v178;
    *(void *)(v186 + 64) = v180;
    *(unsigned char *)(v186 + 72) = 0;
    sub_261B36410(v187);
    swift_retain();
    uint64_t v211 = (char *)v172;
    swift_retain();
    swift_retain();
    sub_261B36460(v187);
    sub_2619F8754((uint64_t)v165, &qword_26A947C78);
    sub_2619F8754(v224, &qword_26A947CA8);
    sub_2619F86F0(v183, v220, &qword_26A947C70);
    swift_storeEnumTagMultiPayload();
    sub_2619F8AB8(&qword_26A947CB8, &qword_26A947C70);
    sub_2619F8AB8(&qword_26A947CC0, &qword_26A947C58);
    sub_261B8DD68();
    swift_release();
    swift_release();
    swift_release();
    sub_2619F8754(v183, &qword_26A947C70);
    sub_2619F8754(v223, &qword_26A947C78);
    uint64_t v103 = v225;
    unint64_t v104 = &qword_26A947CA8;
  }
  else
  {
    uint64_t v45 = sub_261B8E918();
    uint64_t v46 = v25;
    (*(void (**)(char *, void, uint64_t))(v26 + 104))(v28, *MEMORY[0x263F1B530], v25);
    uint64_t v47 = swift_getKeyPath();
    uint64_t v48 = v190;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))((char *)v190 + *(int *)(v217 + 28), v28, v46);
    *uint64_t v48 = v47;
    sub_2619F86F0((uint64_t)v48, (uint64_t)v30 + *(int *)(v189 + 36), &qword_26A944E30);
    *uint64_t v30 = v45;
    swift_retain();
    sub_2619F8754((uint64_t)v48, &qword_26A944E30);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v46);
    swift_release();
    if (qword_26A942ED0 != -1) {
      swift_once();
    }
    uint64_t v49 = qword_26A947BD8;
    uint64_t v50 = swift_getKeyPath();
    uint64_t v51 = v193;
    sub_2619F86F0((uint64_t)v30, v193, &qword_26A944E38);
    char v52 = (uint64_t *)(v51 + *(int *)(v191 + 36));
    *char v52 = v50;
    v52[1] = v49;
    swift_retain();
    sub_2619F8754((uint64_t)v30, &qword_26A944E38);
    uint64_t v53 = v194;
    sub_2619F86F0(v51, v194, &qword_26A947C60);
    *(void *)(v53 + *(int *)(v192 + 36)) = 0;
    sub_2619F8754(v51, &qword_26A947C60);
    uint64_t v54 = sub_261B8EC98();
    uint64_t v55 = v225;
    sub_2619FF8FC(0.0, 1, 0.0, 1, 0.0, 0, 0.0, 1, v225, 0.0, 1, 0.0, 1, v54, v56);
    sub_2619F8754(v53, &qword_26A943398);
    uint64_t v57 = v195;
    sub_2619FB7EC(v55, v195, &qword_26A9433A0);
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v58 = (id)qword_26B416688;
    uint64_t v59 = sub_261B8AA48();
    uint64_t v61 = v60;

    *(void *)&long long v226 = v59;
    *((void *)&v226 + 1) = v61;
    sub_261A029C4();
    uint64_t v62 = sub_261B8E3D8();
    uint64_t v64 = v63;
    char v66 = v65;
    if (qword_26A942ED8 != -1) {
      swift_once();
    }
    char v67 = v66 & 1;
    uint64_t v68 = sub_261B8E368();
    uint64_t v70 = v69;
    char v72 = v71;
    uint64_t v74 = v73;
    sub_261A02A18(v62, v64, v67);
    swift_bridgeObjectRelease();
    unsigned __int8 v75 = sub_261B8DFD8();
    unsigned __int8 v76 = sub_261B8DFF8();
    char v77 = sub_261B8DFE8();
    sub_261B8DFE8();
    if (sub_261B8DFE8() != v75) {
      char v77 = sub_261B8DFE8();
    }
    sub_261B8DFE8();
    if (sub_261B8DFE8() != v76) {
      char v77 = sub_261B8DFE8();
    }
    sub_261B8D358();
    uint64_t v79 = v78;
    uint64_t v81 = v80;
    uint64_t v83 = v82;
    uint64_t v85 = v84;
    uint64_t v86 = swift_getKeyPath();
    uint64_t v87 = swift_getKeyPath();
    uint64_t v88 = swift_getKeyPath();
    *(void *)&long long v243 = v68;
    *((void *)&v243 + 1) = v70;
    LOBYTE(v244) = v72 & 1;
    *((void *)&v244 + 1) = v74;
    LOBYTE(v245) = v77;
    *((void *)&v245 + 1) = v79;
    *(void *)&long long v246 = v81;
    *((void *)&v246 + 1) = v83;
    *(void *)&long long v247 = v85;
    BYTE8(v247) = 0;
    *(void *)&long long v248 = v86;
    *((void *)&v248 + 1) = 0x3FE3333333333333;
    *(void *)&long long v249 = v87;
    *((void *)&v249 + 1) = 2;
    LOBYTE(v250) = 0;
    *((void *)&v250 + 1) = v88;
    char v251 = 1;
    uint64_t v89 = v225;
    sub_2619F86F0(v57, v225, &qword_26A9433A0);
    long long v240 = v249;
    long long v241 = v250;
    char v242 = v251;
    long long v236 = v245;
    long long v237 = v246;
    long long v238 = v247;
    long long v239 = v248;
    long long v234 = v243;
    long long v235 = v244;
    uint64_t v90 = v196;
    sub_2619F86F0(v89, v196, &qword_26A9433A0);
    uint64_t v91 = v90 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A947CB0) + 48);
    long long v92 = v239;
    long long v93 = v240;
    v252[6] = v240;
    v252[7] = v241;
    long long v94 = v237;
    long long v95 = v238;
    v252[4] = v238;
    v252[5] = v239;
    long long v96 = v235;
    long long v97 = v236;
    v252[2] = v236;
    v252[3] = v237;
    v252[0] = v234;
    v252[1] = v235;
    long long v98 = v239;
    long long v99 = v241;
    *(_OWORD *)(v91 + 96) = v240;
    *(_OWORD *)(v91 + 112) = v99;
    long long v101 = v234;
    long long v100 = v235;
    long long v102 = v237;
    *(_OWORD *)(v91 + 32) = v236;
    *(_OWORD *)(v91 + 48) = v102;
    *(_OWORD *)(v91 + 64) = v238;
    *(_OWORD *)(v91 + 80) = v98;
    *(_OWORD *)uint64_t v91 = v234;
    *(_OWORD *)(v91 + 16) = v100;
    long long v232 = v93;
    v233[0] = v241;
    long long v228 = v97;
    long long v229 = v94;
    long long v230 = v95;
    long long v231 = v92;
    char v253 = v242;
    *(unsigned char *)(v91 + 128) = v242;
    LOBYTE(v233[1]) = v242;
    long long v226 = v101;
    long long v227 = v96;
    sub_261B35F24((uint64_t)v252);
    sub_261B35F24((uint64_t)&v243);
    sub_261B35F98((uint64_t)&v226);
    sub_2619F8754(v89, &qword_26A9433A0);
    sub_2619F86F0(v90, v220, &qword_26A947C58);
    swift_storeEnumTagMultiPayload();
    sub_2619F8AB8(&qword_26A947CB8, &qword_26A947C70);
    sub_2619F8AB8(&qword_26A947CC0, &qword_26A947C58);
    sub_261B8DD68();
    sub_2619F8754(v90, &qword_26A947C58);
    sub_261B35F98((uint64_t)&v243);
    uint64_t v103 = v57;
    unint64_t v104 = &qword_26A9433A0;
  }
  return sub_2619F8754(v103, v104);
}

uint64_t sub_261B358C8()
{
  uint64_t v1 = sub_261B8D708();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947BE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v9 = *(_OWORD *)(v0 + 16);
  v15[0] = *(_OWORD *)v0;
  v15[1] = v9;
  long long v15[2] = *(_OWORD *)(v0 + 32);
  char v16 = *(unsigned char *)(v0 + 48);
  uint64_t v10 = swift_allocObject();
  long long v11 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v10 + 32) = v11;
  *(_OWORD *)(v10 + 48) = *(_OWORD *)(v0 + 32);
  *(unsigned char *)(v10 + 64) = *(unsigned char *)(v0 + 48);
  uint64_t v14 = v15;
  sub_261B35C10((uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947BF0);
  sub_261B35C5C();
  sub_261B8EA58();
  sub_261B8D6F8();
  sub_2619F8AB8(&qword_26A947C40, &qword_26A947BE8);
  sub_261B35DC8((unint64_t *)&qword_26A947010, MEMORY[0x263F18FD0]);
  sub_261B8E518();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_261B35B68()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 65, 7);
}

uint64_t sub_261B35BB0()
{
  return sub_261B8EB48();
}

uint64_t sub_261B35C08@<X0>(uint64_t a1@<X8>)
{
  return sub_261B33DF4(*(void *)(v1 + 16), a1);
}

uint64_t sub_261B35C10(uint64_t a1)
{
  return a1;
}

unint64_t sub_261B35C5C()
{
  unint64_t result = qword_26A947BF8;
  if (!qword_26A947BF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947BF0);
    sub_261B360EC(&qword_26A947C00, &qword_26A947C08, (void (*)(void))sub_261B35D04);
    sub_261AB3954();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947BF8);
  }
  return result;
}

unint64_t sub_261B35D04()
{
  unint64_t result = qword_26A947C10;
  if (!qword_26A947C10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947C18);
    sub_2619F8AB8(&qword_26A947C20, &qword_26A947C28);
    sub_2619F8AB8(&qword_26A947C30, &qword_26A947C38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947C10);
  }
  return result;
}

uint64_t sub_261B35DC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261B35E10()
{
  return sub_261B8D8B8();
}

uint64_t sub_261B35E34(uint64_t a1)
{
  uint64_t v2 = sub_261B8D7B8();
  double v3 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, double))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_261B8D8C8();
}

uint64_t sub_261B35F24(uint64_t a1)
{
  return a1;
}

uint64_t sub_261B35F98(uint64_t a1)
{
  return a1;
}

uint64_t sub_261B3600C()
{
  return sub_261B8D938();
}

uint64_t sub_261B36030()
{
  return sub_261B8D938();
}

uint64_t sub_261B36054(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9440C8);
  MEMORY[0x270FA5388](v2 - 8);
  sub_2619F86F0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26A9440C8);
  return sub_261B8D948();
}

uint64_t sub_261B360EC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261B36168()
{
  unint64_t result = qword_26A947CD0;
  if (!qword_26A947CD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947C90);
    sub_261B36208();
    sub_2619F8AB8((unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947CD0);
  }
  return result;
}

unint64_t sub_261B36208()
{
  unint64_t result = qword_26A947CD8;
  if (!qword_26A947CD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947C88);
    sub_261B362A8();
    sub_2619F8AB8(&qword_26A947CE8, &qword_26A947038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947CD8);
  }
  return result;
}

unint64_t sub_261B362A8()
{
  unint64_t result = qword_26A947CE0;
  if (!qword_26A947CE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947C80);
    sub_261B36348();
    sub_2619F8AB8(&qword_26A947070, &qword_26A944E30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947CE0);
  }
  return result;
}

unint64_t sub_261B36348()
{
  unint64_t result = qword_26A947068;
  if (!qword_26A947068)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944E38);
    sub_2619F8AB8(&qword_26A947070, &qword_26A944E30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947068);
  }
  return result;
}

uint64_t sub_261B363E8()
{
  return sub_261B8D8B8();
}

uint64_t sub_261B36410(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_261B36460(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_261B364AC()
{
  return swift_getOpaqueTypeConformance2();
}

void AnimatedWorkoutGlyph.init(activityType:iconSize:animated:)(void *a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947CF8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = (int *)type metadata accessor for AnimatedWorkoutGlyph();
  *(void *)(a3 + v9[8]) = 0x3FA1111111111111;
  sub_261B8ADC8();
  *(void *)a3 = a1;
  *(unsigned char *)(a3 + 8) = a2;
  id v10 = a1;
  FIUIIconSize();
  *(void *)(a3 + 16) = v11;
  *(void *)(a3 + 24) = v12;
  id v13 = (id)FIUISpriteSheetWorkoutIconImage();
  if (v13)
  {
    uint64_t v14 = v13;
    unint64_t v35 = 0;
    uint64_t v15 = FIUISpriteSheetNumberOfFrames();
    *(void *)(a3 + v9[10]) = v15;
    unint64_t v16 = v35;
    *(void *)(a3 + v9[9]) = v35;
    id v17 = v14;
    sub_261B8E908();
    uint64_t v18 = *MEMORY[0x263F1B510];
    uint64_t v19 = sub_261B8E968();
    uint64_t v20 = *(void *)(v19 - 8);
    id v34 = v10;
    uint64_t v21 = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v8, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v8, 0, 1, v19);
    uint64_t v22 = sub_261B8E938();
    swift_release();
    sub_261B36938((uint64_t)v8);
    *(void *)(a3 + v9[11]) = v22;
    objc_msgSend(v17, sel_size);
    double v24 = v23 / (double)v16;
    objc_msgSend(v17, sel_size);
    double v26 = v25 / ceil((double)(unint64_t)v15 / (double)v16);
    uint64_t v27 = (double *)(a3 + v9[12]);
    *uint64_t v27 = v24;
    v27[1] = v26;
    objc_msgSend(v17, sel_size);
    double v29 = v28 * 0.5 - v24 * 0.5;
    objc_msgSend(v17, sel_size);
    double v31 = v30;

    uint64_t v32 = (double *)(a3 + v9[13]);
    *uint64_t v32 = v29;
    v32[1] = v31 * 0.5 - v26 * 0.5;
  }
  else
  {
    unint64_t v35 = 0;
    unint64_t v36 = 0xE000000000000000;
    sub_261B8F8C8();
    swift_bridgeObjectRelease();
    unint64_t v35 = 0xD000000000000028;
    unint64_t v36 = 0x8000000261BA2C30;
    id v33 = objc_msgSend(v10, sel_description);
    sub_261B8F0F8();

    sub_261B8F1C8();
    swift_bridgeObjectRelease();
    sub_261B8F9C8();
    __break(1u);
  }
}

uint64_t type metadata accessor for AnimatedWorkoutGlyph()
{
  uint64_t result = qword_26A947D80;
  if (!qword_26A947D80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261B36938(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947CF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_261B36998()
{
  uint64_t v1 = type metadata accessor for AnimatedWorkoutGlyph();
  unint64_t result = sub_261B8AD28();
  if (v3 < 0.0) {
    double v3 = 0.0;
  }
  double v4 = floor(v3 / *(double *)(v0 + *(int *)(v1 + 32)));
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 <= -1.0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v4 >= 1.84467441e19)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v5 = *(void *)(v0 + *(int *)(v1 + 40));
  if (v5) {
    return (unint64_t)v4 % v5;
  }
LABEL_11:
  __break(1u);
  return result;
}

void AnimatedWorkoutGlyph.body.getter(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947D00);
  MEMORY[0x270FA5388](v39);
  double v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v4 = (int *)type metadata accessor for AnimatedWorkoutGlyph();
  uint64_t v38 = *((void *)v4 - 1);
  uint64_t v5 = *(void *)(v38 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = sub_261B8DE88();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  long long v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947D08);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  if (*(unsigned char *)(v1 + 8) == 1)
  {
    uint64_t v36 = v18;
    uint64_t v37 = (char *)&v35 - v17;
    uint64_t v35 = v19;
    sub_261B8DE78();
    sub_261B37498(v1, (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v20 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v21 = swift_allocObject();
    sub_261B375FC((uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_261B37660;
    *(void *)(v22 + 24) = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A947D28);
    sub_261B37724();
    sub_261B37194(&qword_26A947D20, &qword_26A947D28, (void (*)(void))sub_261B37064);
    sub_261B8D478();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    uint64_t v23 = v35;
    uint64_t v24 = v36;
    double v25 = v37;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v37, v15, v36);
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v3, v25, v24);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A947D10);
    sub_261B36FCC();
    sub_261B37194(&qword_26A947D60, &qword_26A947D10, (void (*)(void))sub_261B37214);
    sub_261B8DD68();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v24);
  }
  else if (*(void *)(v1 + v4[9]))
  {
    double v26 = (double *)(v1 + v4[13]);
    uint64_t v27 = (double *)(v1 + v4[12]);
    double v28 = *v26 - *v27 * 0.0;
    uint64_t v29 = *(void *)(v1 + v4[11]);
    double v30 = v26[1] - v27[1] * 0.0;
    swift_retain();
    sub_261B8EC98();
    sub_261B8D4D8();
    uint64_t v31 = v41;
    char v32 = v42;
    uint64_t v33 = v43;
    char v34 = v44;
    *(void *)double v3 = v29;
    *((double *)v3 + 1) = v28;
    *((double *)v3 + 2) = v30;
    *((void *)v3 + 3) = v31;
    v3[32] = v32;
    *((void *)v3 + 5) = v33;
    v3[48] = v34;
    *(_OWORD *)(v3 + 56) = v45;
    *((_WORD *)v3 + 36) = 0;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A947D10);
    sub_261B36FCC();
    sub_261B37194(&qword_26A947D60, &qword_26A947D10, (void (*)(void))sub_261B37214);
    sub_261B8DD68();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_261B36FCC()
{
  unint64_t result = qword_26A947D18;
  if (!qword_26A947D18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947D08);
    sub_261B37194(&qword_26A947D20, &qword_26A947D28, (void (*)(void))sub_261B37064);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947D18);
  }
  return result;
}

uint64_t sub_261B37064()
{
  return sub_261B37244(&qword_26A947D30, &qword_26A947D38, (void (*)(void))sub_261B37094);
}

uint64_t sub_261B37094()
{
  return sub_261B37244(&qword_26A947D40, &qword_26A947D48, (void (*)(void))sub_261B370C4);
}

unint64_t sub_261B370C4()
{
  unint64_t result = qword_26A947D50;
  if (!qword_26A947D50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947D58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947D50);
  }
  return result;
}

unint64_t sub_261B37138()
{
  unint64_t result = qword_26A944240;
  if (!qword_26A944240)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944248);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944240);
  }
  return result;
}

uint64_t sub_261B37194(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_261B37138();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261B37214()
{
  return sub_261B37244(&qword_26A947D68, &qword_26A947D70, (void (*)(void))sub_261B370C4);
}

uint64_t sub_261B37244(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261B372C0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_261B8ADD8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for AnimatedWorkoutGlyph();
  uint64_t v9 = *(void *)(a1 + v8[11]);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944EE0);
  sub_261B8D468();
  unint64_t v10 = sub_261B36998();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  unint64_t v12 = *(void *)(a1 + v8[9]);
  if (v12)
  {
    uint64_t v13 = v8[12];
    uint64_t v14 = (double *)(a1 + v8[13]);
    double v15 = *v14 - *(double *)(a1 + v13) * (double)(v10 % v12);
    double v16 = v14[1] - *(double *)(a1 + v13 + 8) * (double)(v10 / v12);
    sub_261B8EC98();
    uint64_t result = sub_261B8D4D8();
    uint64_t v17 = v21;
    char v18 = v22;
    uint64_t v19 = v23;
    char v20 = v24;
    *(void *)a2 = v9;
    *(double *)(a2 + 8) = v15;
    *(double *)(a2 + 16) = v16;
    *(void *)(a2 + 24) = sub_261A281B4;
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + 40) = v17;
    *(unsigned char *)(a2 + 48) = v18;
    *(void *)(a2 + 56) = v19;
    *(unsigned char *)(a2 + 64) = v20;
    *(_OWORD *)(a2 + 72) = v25;
    *(_WORD *)(a2 + 88) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_261B37498(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnimatedWorkoutGlyph();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261B374FC()
{
  uint64_t v1 = (int *)(type metadata accessor for AnimatedWorkoutGlyph() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;

  uint64_t v7 = v6 + v1[9];
  uint64_t v8 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_261B375FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnimatedWorkoutGlyph();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261B37660@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for AnimatedWorkoutGlyph() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_261B372C0(v4, a1);
}

uint64_t sub_261B376E4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261B3771C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_261A4DC3C(a1, *(void (**)(uint64_t *__return_ptr, char *))(v2 + 16), a2);
}

unint64_t sub_261B37724()
{
  unint64_t result = qword_26A947D78;
  if (!qword_26A947D78)
  {
    sub_261B8DE88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947D78);
  }
  return result;
}

uint64_t sub_261B3777C()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for AnimatedWorkoutGlyph(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v7 = a1;
    a1[8] = *((unsigned char *)a2 + 8);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    uint64_t v8 = a3[7];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_261B8ADD8();
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = a3[9];
    *(void *)&v7[a3[8]] = *(char **)((char *)a2 + a3[8]);
    *(void *)&v7[v14] = *(char **)((char *)a2 + v14);
    uint64_t v15 = a3[11];
    *(void *)&v7[a3[10]] = *(char **)((char *)a2 + a3[10]);
    *(void *)&v7[v15] = *(char **)((char *)a2 + v15);
    uint64_t v16 = a3[13];
    *(_OWORD *)&v7[a3[12]] = *(_OWORD *)((char *)a2 + a3[12]);
    *(_OWORD *)&v7[v16] = *(_OWORD *)((char *)a2 + v16);
  }
  swift_retain();
  return v7;
}

uint64_t destroy for AnimatedWorkoutGlyph(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_261B8ADD8();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_release();
}

uint64_t initializeWithCopy for AnimatedWorkoutGlyph(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_261B8ADD8();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v6;
  v11(v8, v9, v10);
  uint64_t v13 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AnimatedWorkoutGlyph(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  uint64_t v13 = a3[12];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  void *v14 = *v15;
  v14[1] = v15[1];
  uint64_t v16 = a3[13];
  uint64_t v17 = (void *)(a1 + v16);
  char v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  return a1;
}

uint64_t initializeWithTake for AnimatedWorkoutGlyph(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  uint64_t v11 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for AnimatedWorkoutGlyph(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_release();
  uint64_t v13 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimatedWorkoutGlyph(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261B37D50);
}

uint64_t sub_261B37D50(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_261B8ADD8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AnimatedWorkoutGlyph(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261B37E14);
}

void *sub_261B37E14(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_261B8ADD8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_261B37EBC()
{
  uint64_t result = sub_261B8ADD8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_261B37F94()
{
  unint64_t result = qword_26A947D90;
  if (!qword_26A947D90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947D98);
    sub_261B36FCC();
    sub_261B37194(&qword_26A947D60, &qword_26A947D10, (void (*)(void))sub_261B37214);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947D90);
  }
  return result;
}

uint64_t sub_261B38034(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947DA8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v49 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947DB0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947DB8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (FIUICurrentLanguageRequiresTallScript())
  {
    char v14 = sub_261B8DFA8();
    sub_261B8D358();
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947DC0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v13, a1, v23);
    char v24 = &v13[*(int *)(v11 + 36)];
    *char v24 = v14;
    *((void *)v24 + 1) = v16;
    *((void *)v24 + 2) = v18;
    *((void *)v24 + 3) = v20;
    *((void *)v24 + 4) = v22;
    v24[40] = 0;
    sub_2619F86F0((uint64_t)v13, (uint64_t)v10, &qword_26A947DB8);
    swift_storeEnumTagMultiPayload();
    sub_261B3855C();
    sub_261B385E0(&qword_26A947DD8, &qword_26A947DA8, (void (*)(void))sub_261B3855C);
    sub_261B8DD68();
    uint64_t v25 = (uint64_t)v13;
    double v26 = &qword_26A947DB8;
  }
  else
  {
    char v27 = sub_261B8DFD8();
    sub_261B8D358();
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947DC0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v13, a1, v36);
    uint64_t v37 = &v13[*(int *)(v11 + 36)];
    char *v37 = v27;
    *((void *)v37 + 1) = v29;
    *((void *)v37 + 2) = v31;
    *((void *)v37 + 3) = v33;
    *((void *)v37 + 4) = v35;
    v37[40] = 0;
    char v38 = sub_261B8DFF8();
    sub_261B8D358();
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    sub_2619F86F0((uint64_t)v13, (uint64_t)v4, &qword_26A947DB8);
    uint64_t v47 = &v4[*(int *)(v2 + 36)];
    *uint64_t v47 = v38;
    *((void *)v47 + 1) = v40;
    *((void *)v47 + 2) = v42;
    *((void *)v47 + 3) = v44;
    *((void *)v47 + 4) = v46;
    v47[40] = 0;
    sub_2619F8754((uint64_t)v13, &qword_26A947DB8);
    sub_261B384F4((uint64_t)v4, (uint64_t)v7);
    sub_2619F86F0((uint64_t)v7, (uint64_t)v10, &qword_26A947DA8);
    swift_storeEnumTagMultiPayload();
    sub_261B3855C();
    sub_261B385E0(&qword_26A947DD8, &qword_26A947DA8, (void (*)(void))sub_261B3855C);
    sub_261B8DD68();
    uint64_t v25 = (uint64_t)v7;
    double v26 = &qword_26A947DA8;
  }
  return sub_2619F8754(v25, v26);
}

void View.pickerTextPadding()()
{
}

uint64_t sub_261B38410()
{
  return swift_getWitnessTable();
}

unint64_t sub_261B38474()
{
  unint64_t result = qword_26A947DA0;
  if (!qword_26A947DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947DA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PickerTextPadding()
{
  return &type metadata for PickerTextPadding;
}

uint64_t sub_261B384D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261B384F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261B3855C()
{
  return sub_261B385E0(&qword_26A947DC8, &qword_26A947DB8, (void (*)(void))sub_261B38584);
}

unint64_t sub_261B38584()
{
  unint64_t result = qword_26A947DD0;
  if (!qword_26A947DD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947DC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947DD0);
  }
  return result;
}

uint64_t sub_261B385E0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261B38664()
{
  unint64_t result = qword_26A947DE0;
  if (!qword_26A947DE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947DE8);
    sub_261B3855C();
    sub_261B385E0(&qword_26A947DD8, &qword_26A947DA8, (void (*)(void))sub_261B3855C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947DE0);
  }
  return result;
}

uint64_t FlightsClimbedMetricView.init(flightsClimbed:formattingManager:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(double *)a2 = a3;
  *(void *)(a2 + 8) = result;
  return result;
}

void FlightsClimbedMetricView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v24 = sub_261B8FB88();
  uint64_t v3 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8AEF8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9453F8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v24 - v12;
  double v25 = *v1;
  double v14 = v25;
  sub_261B8AE68();
  sub_261A63D24();
  sub_261B8AAE8();
  uint64_t v15 = v24;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8E220], v24);
  MEMORY[0x263E489F0](v5, 0, 1, v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v15);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v10, v7);
  sub_261B38A20();
  sub_261B8EFD8();
  v16(v13, v7);
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v14 <= -1.0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v14 >= 1.84467441e19)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v17 = v26;
  uint64_t v18 = v27;
  id v19 = (id)MEMORY[0x263E4DE80]((unint64_t)v14);
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = sub_261B8F0F8();
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v23 = 0;
  }
  *(void *)a1 = v17;
  *(void *)(a1 + 8) = v18;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = v21;
  *(void *)(a1 + 40) = v23;
  *(_WORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
}

unint64_t sub_261B38A20()
{
  unint64_t result = qword_26A945408;
  if (!qword_26A945408)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9453F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945408);
  }
  return result;
}

uint64_t sub_261B38A7C()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for FlightsClimbedMetricView(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = v3;
  return a1;
}

void *assignWithCopy for FlightsClimbedMetricView(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = (void *)a2[1];
  id v4 = (void *)a1[1];
  a1[1] = v3;
  id v5 = v3;

  return a1;
}

void *assignWithTake for FlightsClimbedMetricView(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = (void *)a1[1];
  a1[1] = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for FlightsClimbedMetricView()
{
  return &type metadata for FlightsClimbedMetricView;
}

uint64_t RaceElevationMetricView.init(racePosition:positionOnRoute:ghostPositionOnRoute:chartProperties:formattingManager:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v12 = (int *)type metadata accessor for RaceElevationMetricView();
  uint64_t v13 = a4 + v12[9];
  *(void *)uint64_t v13 = swift_getKeyPath();
  *(unsigned char *)(v13 + 8) = 0;
  uint64_t v14 = v12[10];
  if (qword_26A942EE8 != -1) {
    swift_once();
  }
  *(double *)(a4 + v14) = *(double *)&qword_26A953708 * 0.5;
  *(void *)(a4 + v12[11]) = 0x4014000000000000;
  uint64_t v15 = sub_261B8BDE8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(a4, a1, v15);
  *(double *)(a4 + v12[5]) = a5;
  *(double *)(a4 + v12[7]) = a6;
  *(void *)(a4 + v12[8]) = a2;
  *(void *)(a4 + v12[6]) = a3;
  return result;
}

uint64_t type metadata accessor for RaceElevationMetricView()
{
  uint64_t result = qword_26A947E50;
  if (!qword_26A947E50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t RaceElevationMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v157 = a1;
  uint64_t v170 = sub_261B8BDE8();
  uint64_t v163 = *(void *)(v170 - 8);
  MEMORY[0x270FA5388](v170);
  uint64_t v164 = (char *)&v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  long long v166 = (char *)&v134 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946398);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947DF0);
  uint64_t v167 = *(void *)(v165 - 8);
  MEMORY[0x270FA5388](v165);
  uint64_t v10 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947DF8);
  uint64_t v160 = *(void *)(v161 - 8);
  MEMORY[0x270FA5388](v161);
  uint64_t v12 = (char *)&v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947E00);
  uint64_t v162 = *(void *)(v168 - 8);
  MEMORY[0x270FA5388](v168);
  uint64_t v159 = (char *)&v134 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947E08);
  uint64_t v141 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  long long v169 = (char *)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947E10);
  uint64_t v144 = *(void *)(v145 - 8);
  MEMORY[0x270FA5388](v145);
  uint64_t v156 = (char *)&v134 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947E18);
  MEMORY[0x270FA5388](v143);
  uint64_t v147 = (char *)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947E20);
  MEMORY[0x270FA5388](v146);
  uint64_t v149 = (uint64_t)&v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947E28);
  MEMORY[0x270FA5388](v148);
  uint64_t v153 = (char *)&v134 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947E30);
  MEMORY[0x270FA5388](v150);
  uint64_t v154 = (char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947E38);
  MEMORY[0x270FA5388](v151);
  uint64_t v21 = (char *)&v134 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947E40);
  MEMORY[0x270FA5388](v152);
  uint64_t v23 = (int *)((char *)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = (int *)type metadata accessor for RaceElevationMetricView();
  uint64_t v25 = v24[7];
  uint64_t v26 = v24[8];
  uint64_t v27 = *(void **)(v2 + v26);
  char v155 = v24;
  uint64_t v28 = v24[5];
  sub_261A96144(v2, v27, *(double *)(v2 + v28), *(double *)(v2 + v25));
  unint64_t v29 = sub_261B39C6C();
  uint64_t v158 = v12;
  uint64_t v30 = v165;
  sub_261B8E418();
  (*(void (**)(char *, uint64_t))(v167 + 8))(v10, v30);
  uint64_t v31 = *(void *)(v2 + v26);
  double v32 = *(double *)(v31 + 48);
  double v33 = *(double *)(v31 + 56);
  if (v32 > v33)
  {
    __break(1u);
  }
  else
  {
    uint64_t v139 = (char *)v23;
    uint64_t v140 = v21;
    double v173 = v32;
    double v174 = v33;
    uint64_t v167 = v28;
    uint64_t v34 = v26;
    uint64_t v35 = sub_261B8D318();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v36 + 56);
    uint64_t v138 = v35;
    char v137 = v37;
    uint64_t v136 = v36 + 56;
    ((void (*)(char *, uint64_t, uint64_t))v37)(v8, 1, 1);
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946428);
    *(void *)&long long v175 = v30;
    *((void *)&v175 + 1) = v29;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v40 = v25;
    unint64_t v41 = sub_261B39CC8();
    uint64_t v42 = v159;
    uint64_t v43 = v161;
    uint64_t v44 = v158;
    sub_261B8E458();
    uint64_t v165 = (uint64_t)v8;
    sub_2619F8754((uint64_t)v8, &qword_26A946398);
    (*(void (**)(char *, uint64_t))(v160 + 8))(v44, v43);
    *(void *)&long long v175 = v43;
    *((void *)&v175 + 1) = v38;
    uint64_t v160 = v38;
    *(void *)&long long v176 = OpaqueTypeConformance2;
    *((void *)&v176 + 1) = v41;
    uint64_t v158 = (char *)v41;
    uint64_t v45 = swift_getOpaqueTypeConformance2();
    uint64_t v46 = v168;
    uint64_t v135 = v45;
    sub_261B8E3F8();
    (*(void (**)(char *, uint64_t))(v162 + 8))(v42, v46);
    uint64_t v162 = v34;
    uint64_t v47 = *(void *)(v2 + v34);
    double v48 = *(double *)(v2 + v167);
    uint64_t v161 = v40;
    double v49 = *(double *)(v2 + v40);
    uint64_t v50 = v163;
    uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v163 + 16);
    char v52 = v166;
    uint64_t v8 = (char *)v2;
    uint64_t v53 = v170;
    v51(v166, v2, v170);
    uint64_t v54 = *(uint64_t (**)(char *, uint64_t))(v50 + 88);
    int v55 = v54(v52, v53);
    int v56 = *MEMORY[0x263F87D78];
    if (v55 == *MEMORY[0x263F87D78])
    {
      uint64_t v57 = v50;
      double v58 = sub_261A942E8(v48, v49);
    }
    else
    {
      double v58 = *(double *)(v47 + 32);
      uint64_t v57 = v50;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v166, v170);
    }
    uint64_t v59 = *(void *)(v2 + v162);
    double v60 = *(double *)(v2 + v167);
    double v61 = *(double *)(v2 + v161);
    uint64_t v62 = v164;
    uint64_t v63 = v170;
    v51(v164, v2, v170);
    if (v54(v62, v63) == v56)
    {
      v64.n128_f64[0] = sub_261A942E8(v60, v61);
      double v66 = v65;
    }
    else
    {
      double v66 = *(double *)(v59 + 40);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v62, v63);
    }
    uint64_t v2 = v157;
    uint64_t v21 = v140;
    uint64_t v26 = (uint64_t)v139;
    uint64_t v30 = v165;
    unint64_t v29 = (unint64_t)v156;
    uint64_t v23 = v155;
    char v67 = v169;
    if (v58 <= v66)
    {
      double v171 = v58;
      double v172 = v66;
      v137(v165, 1, 1, v138, v64);
      *(void *)&long long v175 = v168;
      *((void *)&v175 + 1) = v135;
      swift_getOpaqueTypeConformance2();
      uint64_t v68 = v142;
      sub_261B8E438();
      sub_2619F8754(v30, &qword_26A946398);
      (*(void (**)(char *, uint64_t))(v141 + 8))(v67, v68);
      LOBYTE(v30) = sub_261B8DFB8();
      if (qword_26A942EE0 == -1) {
        goto LABEL_10;
      }
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_30:
  swift_once();
LABEL_10:
  sub_261B8D358();
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v74 = v73;
  uint64_t v76 = v75;
  uint64_t v77 = v144;
  uint64_t v78 = (uint64_t)v147;
  uint64_t v79 = v145;
  (*(void (**)(char *, unint64_t, uint64_t))(v144 + 16))(v147, v29, v145);
  uint64_t v80 = v78 + *(int *)(v143 + 36);
  *(unsigned char *)uint64_t v80 = v30;
  *(void *)(v80 + 8) = v70;
  *(void *)(v80 + 16) = v72;
  *(void *)(v80 + 24) = v74;
  *(void *)(v80 + 32) = v76;
  *(unsigned char *)(v80 + 40) = 0;
  (*(void (**)(unint64_t, uint64_t))(v77 + 8))(v29, v79);
  LOBYTE(v77) = sub_261B8DFD8();
  unsigned __int8 v81 = sub_261B8DFF8();
  char v82 = sub_261B8DFE8();
  sub_261B8DFE8();
  if (sub_261B8DFE8() != v77) {
    char v82 = sub_261B8DFE8();
  }
  sub_261B8DFE8();
  if (sub_261B8DFE8() != v81) {
    char v82 = sub_261B8DFE8();
  }
  uint64_t v83 = &v8[v23[9]];
  uint64_t v84 = *(void *)v83;
  char v85 = v83[8];
  sub_2619F7774(*(void *)v83, v85);
  sub_2619FA43C(v84, v85, &v175);
  sub_2619F7790(v84, v85);
  uint64_t v86 = (uint64_t)v154;
  sub_261B8D358();
  uint64_t v88 = v87;
  uint64_t v90 = v89;
  uint64_t v92 = v91;
  uint64_t v94 = v93;
  uint64_t v95 = v149;
  sub_2619F86F0(v78, v149, &qword_26A947E18);
  uint64_t v96 = v95 + *(int *)(v146 + 36);
  *(unsigned char *)uint64_t v96 = v82;
  *(void *)(v96 + 8) = v88;
  *(void *)(v96 + 16) = v90;
  *(void *)(v96 + 24) = v92;
  *(void *)(v96 + 32) = v94;
  *(unsigned char *)(v96 + 40) = 0;
  sub_2619F8754(v78, &qword_26A947E18);
  uint64_t v97 = *(void *)v83;
  LOBYTE(v84) = v83[8];
  sub_2619F7774(*(void *)v83, v84);
  sub_2619FA43C(v97, v84, &v175);
  sub_2619F7790(v97, v84);
  if (v175 <= 8u && ((1 << v175) & 0x181) != 0)
  {
    uint64_t v98 = (uint64_t)v153;
    if (qword_26A942EF0 != -1) {
      swift_once();
    }
  }
  else
  {
    uint64_t v98 = (uint64_t)v153;
  }
  sub_261B8EC98();
  sub_261B8D4D8();
  sub_2619F86F0(v95, v98, &qword_26A947E20);
  long long v99 = (_OWORD *)(v98 + *(int *)(v148 + 36));
  long long v100 = v176;
  *long long v99 = v175;
  v99[1] = v100;
  v99[2] = v177;
  sub_2619F8754(v95, &qword_26A947E20);
  char v101 = sub_261B8DFB8();
  if (qword_26A942EF8 != -1) {
    swift_once();
  }
  sub_261B8D358();
  uint64_t v103 = v102;
  uint64_t v105 = v104;
  uint64_t v107 = v106;
  uint64_t v109 = v108;
  sub_2619F86F0(v98, v86, &qword_26A947E28);
  uint64_t v110 = v86 + *(int *)(v150 + 36);
  *(unsigned char *)uint64_t v110 = v101;
  *(void *)(v110 + 8) = v103;
  *(void *)(v110 + 16) = v105;
  *(void *)(v110 + 24) = v107;
  *(void *)(v110 + 32) = v109;
  *(unsigned char *)(v110 + 40) = 0;
  sub_2619F8754(v98, &qword_26A947E28);
  char v111 = sub_261B8DFC8();
  if (qword_26A942F00 != -1) {
    swift_once();
  }
  sub_261B8D358();
  uint64_t v113 = v112;
  uint64_t v115 = v114;
  uint64_t v117 = v116;
  uint64_t v119 = v118;
  sub_2619F86F0(v86, (uint64_t)v21, &qword_26A947E30);
  uint64_t v120 = &v21[*(int *)(v151 + 36)];
  *uint64_t v120 = v111;
  *((void *)v120 + 1) = v113;
  *((void *)v120 + 2) = v115;
  *((void *)v120 + 3) = v117;
  *((void *)v120 + 4) = v119;
  v120[40] = 0;
  sub_2619F8754(v86, &qword_26A947E30);
  unsigned __int8 v121 = sub_261B8DFD8();
  unsigned __int8 v122 = sub_261B8DFF8();
  char v123 = sub_261B8DFE8();
  sub_261B8DFE8();
  if (sub_261B8DFE8() != v121) {
    char v123 = sub_261B8DFE8();
  }
  sub_261B8DFE8();
  if (sub_261B8DFE8() != v122) {
    char v123 = sub_261B8DFE8();
  }
  sub_261B8D358();
  uint64_t v125 = v124;
  uint64_t v127 = v126;
  uint64_t v129 = v128;
  uint64_t v131 = v130;
  sub_2619F86F0((uint64_t)v21, v26, &qword_26A947E38);
  uint64_t v132 = v26 + *(int *)(v152 + 36);
  *(unsigned char *)uint64_t v132 = v123;
  *(void *)(v132 + 8) = v125;
  *(void *)(v132 + 16) = v127;
  *(void *)(v132 + 24) = v129;
  *(void *)(v132 + 32) = v131;
  *(unsigned char *)(v132 + 40) = 0;
  sub_2619F8754((uint64_t)v21, &qword_26A947E38);
  return sub_261B39D34(v26, v2);
}

unint64_t sub_261B39C6C()
{
  unint64_t result = qword_26A947E48;
  if (!qword_26A947E48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947DF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947E48);
  }
  return result;
}

unint64_t sub_261B39CC8()
{
  unint64_t result = qword_26A946430;
  if (!qword_26A946430)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946428);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946430);
  }
  return result;
}

uint64_t sub_261B39D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261B39D9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for RaceElevationMetricView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_261B8BDE8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    uint64_t v10 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v10) = *(uint64_t *)((char *)a2 + v10);
    uint64_t v11 = a3[9];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = *(void *)v13;
    char v15 = v13[8];
    id v16 = v9;
    swift_retain();
    sub_2619F7774(v14, v15);
    *(void *)uint64_t v12 = v14;
    v12[8] = v15;
    uint64_t v17 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
  }
  return a1;
}

uint64_t destroy for RaceElevationMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8BDE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = *(void *)v5;
  char v7 = *(unsigned char *)(v5 + 8);
  return sub_2619F7790(v6, v7);
}

uint64_t initializeWithCopy for RaceElevationMetricView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8BDE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  uint64_t v9 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void *)v12;
  char v14 = *(unsigned char *)(v12 + 8);
  id v15 = v8;
  swift_retain();
  sub_2619F7774(v13, v14);
  *(void *)uint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v14;
  uint64_t v16 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  return a1;
}

uint64_t assignWithCopy for RaceElevationMetricView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8BDE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  uint64_t v11 = a3[9];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_2619F7774(*(void *)v13, v15);
  uint64_t v16 = *(void *)v12;
  char v17 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = v15;
  sub_2619F7790(v16, v17);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for RaceElevationMetricView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8BDE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[9];
  uint64_t v10 = a3[10];
  uint64_t v11 = a1 + v9;
  uint64_t v12 = a2 + v9;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for RaceElevationMetricView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8BDE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  swift_release();
  uint64_t v10 = a3[9];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = *v12;
  LOBYTE(v12) = *((unsigned char *)v12 + 8);
  uint64_t v14 = *(void *)v11;
  char v15 = *(unsigned char *)(v11 + 8);
  *(void *)uint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = (_BYTE)v12;
  sub_2619F7790(v14, v15);
  uint64_t v16 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for RaceElevationMetricView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261B3A34C);
}

uint64_t sub_261B3A34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8BDE8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for RaceElevationMetricView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261B3A420);
}

uint64_t sub_261B3A420(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_261B8BDE8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_261B3A4DC()
{
  uint64_t result = sub_261B8BDE8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_261B3A5A0()
{
  return sub_261B3A614(&qword_26A947E60, &qword_26A947E40, (void (*)(void))sub_261B3A5E4);
}

uint64_t sub_261B3A5E4()
{
  return sub_261B3A614(&qword_26A947E68, &qword_26A947E38, (void (*)(void))sub_261B3A690);
}

uint64_t sub_261B3A614(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261B3A690()
{
  return sub_261B3A614(&qword_26A947E70, &qword_26A947E30, (void (*)(void))sub_261B3A6C0);
}

uint64_t sub_261B3A6C0()
{
  return sub_261B3A614(&qword_26A947E78, &qword_26A947E28, (void (*)(void))sub_261B3A6F0);
}

uint64_t sub_261B3A6F0()
{
  return sub_261B3A614(&qword_26A947E80, &qword_26A947E20, (void (*)(void))sub_261B3A720);
}

unint64_t sub_261B3A720()
{
  unint64_t result = qword_26A947E88;
  if (!qword_26A947E88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947E18);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947E08);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946428);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947E00);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947DF8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947DF0);
    sub_261B39C6C();
    swift_getOpaqueTypeConformance2();
    sub_261B39CC8();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947E88);
  }
  return result;
}

id ContributorBridge.__allocating_init(contributor:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = &v3[OBJC_IVAR___SMContributor_contributor];
  uint64_t v5 = sub_261B8B1D8();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v3;
  v9.super_class = v1;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

id ContributorBridge.init(contributor:)(uint64_t a1)
{
  uint64_t v3 = &v1[OBJC_IVAR___SMContributor_contributor];
  uint64_t v4 = sub_261B8B1D8();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for ContributorBridge();
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v6;
}

uint64_t type metadata accessor for ContributorBridge()
{
  uint64_t result = qword_26A947E90;
  if (!qword_26A947E90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261B3AAD4()
{
  return sub_261B8B1A8();
}

id sub_261B3AB18(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  uint64_t v5 = (void *)sub_261B8F0B8();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_261B3AB94()
{
  return sub_261B8B1B8();
}

uint64_t sub_261B3ABC0()
{
  uint64_t result = sub_261B8B1C8();
  if ((v2 & 1) == 0)
  {
    sub_261A49E4C(result, v1, 0);
    return 6;
  }
  return result;
}

id ContributorBridge.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ContributorBridge.init()()
{
}

id ContributorBridge.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContributorBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_261B3AD34()
{
  return type metadata accessor for ContributorBridge();
}

uint64_t sub_261B3AD3C()
{
  uint64_t result = sub_261B8B1D8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ContributorBridge(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ContributorBridge);
}

uint64_t dispatch thunk of ContributorBridge.__allocating_init(contributor:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ContributorBridge.identifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ContributorBridge.name.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ContributorBridge.role.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t destroy for WorkoutConfigurationThumbnailView(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for WorkoutConfigurationThumbnailView(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  id v6 = v3;
  id v7 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WorkoutConfigurationThumbnailView(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  objc_super v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WorkoutConfigurationThumbnailView(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutConfigurationThumbnailView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutConfigurationThumbnailView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutConfigurationThumbnailView()
{
  return &type metadata for WorkoutConfigurationThumbnailView;
}

uint64_t sub_261B3B084()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261B3B0A0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v70 = a3;
  uint64_t v71 = a4;
  uint64_t v5 = a2;
  uint64_t v73 = a2;
  uint64_t v69 = a1;
  uint64_t v76 = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947EA0);
  MEMORY[0x270FA5388](v6 - 8);
  objc_super v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947EA8);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947EB0);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947EB8);
  uint64_t v18 = v17 - 8;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947EC0) - 8;
  MEMORY[0x270FA5388](v72);
  uint64_t v22 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947EC8) - 8;
  MEMORY[0x270FA5388](v75);
  uint64_t v74 = (uint64_t)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)objc_super v8 = sub_261B8DAD8();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947ED0);
  sub_261B3B53C(v69, v5, v70, v71, &v8[*(int *)(v24 + 44)]);
  LOBYTE(v5) = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_2619F86F0((uint64_t)v8, (uint64_t)v12, &qword_26A947EA0);
  double v33 = &v12[*(int *)(v10 + 44)];
  *double v33 = v5;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_2619F8754((uint64_t)v8, &qword_26A947EA0);
  LOBYTE(v8) = sub_261B8DFD8();
  sub_261B8D358();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  sub_2619F86F0((uint64_t)v12, (uint64_t)v16, &qword_26A947EA8);
  uint64_t v42 = &v16[*(int *)(v14 + 44)];
  *uint64_t v42 = (char)v8;
  *((void *)v42 + 1) = v35;
  *((void *)v42 + 2) = v37;
  *((void *)v42 + 3) = v39;
  *((void *)v42 + 4) = v41;
  v42[40] = 0;
  sub_2619F8754((uint64_t)v12, &qword_26A947EA8);
  LOBYTE(v12) = sub_261B8DFC8();
  sub_261B8D358();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  sub_2619F86F0((uint64_t)v16, (uint64_t)v20, &qword_26A947EB0);
  uint64_t v51 = &v20[*(int *)(v18 + 44)];
  *uint64_t v51 = (char)v12;
  *((void *)v51 + 1) = v44;
  *((void *)v51 + 2) = v46;
  *((void *)v51 + 3) = v48;
  *((void *)v51 + 4) = v50;
  v51[40] = 0;
  sub_2619F8754((uint64_t)v16, &qword_26A947EB0);
  LOBYTE(v12) = sub_261B8DFF8();
  sub_261B8D358();
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  sub_2619F86F0((uint64_t)v20, (uint64_t)v22, &qword_26A947EB8);
  double v60 = &v22[*(int *)(v72 + 44)];
  *double v60 = (char)v12;
  *((void *)v60 + 1) = v53;
  *((void *)v60 + 2) = v55;
  *((void *)v60 + 3) = v57;
  *((void *)v60 + 4) = v59;
  v60[40] = 0;
  sub_2619F8754((uint64_t)v20, &qword_26A947EB8);
  sub_261B8EC98();
  sub_261B8D4D8();
  uint64_t v61 = v74;
  sub_2619F86F0((uint64_t)v22, v74, &qword_26A947EC0);
  uint64_t v62 = (_OWORD *)(v61 + *(int *)(v75 + 44));
  long long v63 = v78;
  *uint64_t v62 = v77;
  v62[1] = v63;
  void v62[2] = v79;
  sub_2619F8754((uint64_t)v22, &qword_26A947EC0);
  id v64 = WorkoutConfiguration.displayThumbnailColor.getter();
  uint64_t v65 = MEMORY[0x263E4C7B0](v64);
  LOBYTE(v12) = sub_261B8DFA8();
  uint64_t v66 = v76;
  sub_2619F86F0(v61, v76, &qword_26A947EC8);
  uint64_t v67 = v66 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A947ED8) + 36);
  *(void *)uint64_t v67 = v65;
  *(unsigned char *)(v67 + 8) = (_BYTE)v12;
  return sub_2619F8754(v61, &qword_26A947EC8);
}

uint64_t sub_261B3B53C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v45 = a5;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947EE0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v44 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v35[-v8];
  MEMORY[0x270FA5388](v10);
  uint64_t v43 = &v35[-v11];
  uint64_t v12 = sub_261B8AED8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v35[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_261B8AEF8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = &v35[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_261B8AEB8();
  sub_261B8AEE8();
  uint64_t v20 = *(void (**)(unsigned char *, uint64_t))(v17 + 8);
  v20(v19, v16);
  uint64_t v37 = sub_261B8AEC8();
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
  v21(v15, v12);
  sub_261B8AEB8();
  sub_261B8AEE8();
  v20(v19, v16);
  uint64_t v22 = sub_261B8AEC8();
  uint64_t v38 = v12;
  v21(v15, v12);
  if (v22 == 2) {
    uint64_t v23 = sub_261B8DC08();
  }
  else {
    uint64_t v23 = sub_261B8DBF8();
  }
  BOOL v36 = v37 == 2;
  LODWORD(v37) = v37 != 2;
  *(void *)uint64_t v9 = v23;
  *((void *)v9 + 1) = 0x4010000000000000;
  v9[16] = 0;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947EE8);
  sub_261B3B8E8(v39, v40, v41, v42, (uint64_t)&v9[*(int *)(v24 + 44)]);
  uint64_t v25 = (uint64_t)v9;
  uint64_t v26 = v43;
  sub_2619FB7EC(v25, (uint64_t)v43, &qword_26A947EE0);
  sub_261B8AEB8();
  sub_261B8AEE8();
  v20(v19, v16);
  uint64_t v27 = sub_261B8AEC8();
  v21(v15, v38);
  BOOL v28 = v27 == 2;
  BOOL v29 = v27 != 2;
  uint64_t v30 = v44;
  sub_2619F86F0((uint64_t)v26, (uint64_t)v44, &qword_26A947EE0);
  uint64_t v31 = v45;
  *uint64_t v45 = 0;
  *((unsigned char *)v31 + 8) = v36;
  *((unsigned char *)v31 + 9) = v37;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947EF0);
  sub_2619F86F0((uint64_t)v30, (uint64_t)v31 + *(int *)(v32 + 48), &qword_26A947EE0);
  double v33 = (char *)v31 + *(int *)(v32 + 64);
  *(void *)double v33 = 0;
  v33[8] = v29;
  v33[9] = v28;
  sub_2619F8754((uint64_t)v26, &qword_26A947EE0);
  return sub_2619F8754((uint64_t)v30, &qword_26A947EE0);
}

id sub_261B3B8E8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947EF8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  char v85 = (uint64_t *)((char *)&v82 - v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v82 - v16;
  uint64_t v18 = sub_261B8AED8();
  uint64_t v103 = *(void *)(v18 - 8);
  uint64_t v104 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v102 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_261B8AEF8();
  uint64_t v100 = *(void *)(v20 - 8);
  uint64_t v101 = v20;
  MEMORY[0x270FA5388](v20);
  long long v99 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943488);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947F00);
  uint64_t v95 = *(void *)(v25 - 8);
  uint64_t v96 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v93 = (char *)&v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947F08);
  MEMORY[0x270FA5388](v27);
  uint64_t v94 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947F10);
  MEMORY[0x270FA5388](v98);
  uint64_t v84 = (char *)&v82 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v97 = (uint64_t)&v82 - v31;
  double v33 = MEMORY[0x270FA5388](v32);
  uint64_t v105 = (uint64_t)&v82 - v34;
  id v35 = objc_msgSend(a1, sel_symbolName, v33);
  uint64_t v91 = v12;
  uint64_t v90 = a5;
  uint64_t v89 = v17;
  uint64_t v88 = a4;
  uint64_t v87 = a3;
  uint64_t v86 = a1;
  uint64_t v92 = v27;
  if (v35)
  {
    BOOL v36 = v35;
    sub_261B8F0F8();

    uint64_t v37 = sub_261B8E918();
  }
  else
  {
    id result = (id)FIUIStaticWorkoutIconImage();
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v39 = result;
    id v40 = objc_msgSend(result, sel_imageWithRenderingMode_, 2);

    uint64_t v37 = sub_261B8E908();
  }
  uint64_t v41 = v37;
  uint64_t v42 = WorkoutConfiguration.displayColor.getter();
  uint64_t v43 = MEMORY[0x263E4C7B0](v42);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v45 = sub_261B8E118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v24, 1, 1, v45);
  uint64_t v46 = sub_261B8E188();
  sub_2619F8754((uint64_t)v24, &qword_26A943488);
  uint64_t v47 = swift_getKeyPath();
  uint64_t v106 = v41;
  uint64_t v107 = KeyPath;
  uint64_t v108 = v43;
  uint64_t v109 = v47;
  uint64_t v110 = v46;
  sub_261B8E158();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A947F18);
  sub_261B3CBE8();
  uint64_t v48 = v93;
  sub_261B8E4F8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v83 = a2;
  uint64_t v49 = WorkoutConfiguration.displayColor.getter();
  uint64_t v50 = MEMORY[0x263E4C7B0](v49);
  uint64_t v51 = swift_getKeyPath();
  uint64_t v53 = (uint64_t)v94;
  uint64_t v52 = v95;
  uint64_t v54 = v96;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v94, v48, v96);
  uint64_t v55 = (uint64_t *)(v53 + *(int *)(v92 + 36));
  *uint64_t v55 = v51;
  v55[1] = v50;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v48, v54);
  uint64_t v56 = v99;
  sub_261B8AEB8();
  uint64_t v57 = v102;
  sub_261B8AEE8();
  uint64_t v58 = v101;
  uint64_t v100 = *(void *)(v100 + 8);
  ((void (*)(char *, uint64_t))v100)(v56, v101);
  uint64_t v59 = sub_261B8AEC8();
  uint64_t v60 = v104;
  uint64_t v61 = *(void (**)(char *, uint64_t))(v103 + 8);
  v61(v57, v104);
  if (v59 == 2) {
    double v62 = -1.0;
  }
  else {
    double v62 = 1.0;
  }
  sub_261B8ED48();
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v67 = v97;
  sub_2619F86F0(v53, v97, &qword_26A947F08);
  uint64_t v68 = v67 + *(int *)(v98 + 36);
  *(double *)uint64_t v68 = v62;
  *(void *)(v68 + 8) = 0x3FF0000000000000;
  *(void *)(v68 + 16) = v64;
  *(void *)(v68 + 24) = v66;
  sub_2619F8754(v53, &qword_26A947F08);
  sub_2619FB7EC(v67, v105, &qword_26A947F10);
  sub_261B8AEB8();
  sub_261B8AEE8();
  ((void (*)(char *, uint64_t))v100)(v56, v58);
  uint64_t v69 = sub_261B8AEC8();
  v61(v57, v60);
  if (v69 == 2) {
    uint64_t v70 = sub_261B8DC08();
  }
  else {
    uint64_t v70 = sub_261B8DBF8();
  }
  uint64_t v71 = (uint64_t)v91;
  uint64_t v72 = v90;
  uint64_t v73 = (uint64_t)v89;
  uint64_t v74 = v88;
  uint64_t v75 = v87;
  uint64_t v76 = v86;
  uint64_t v77 = (uint64_t)v85;
  uint64_t v78 = (uint64_t)v84;
  *char v85 = v70;
  *(void *)(v77 + 8) = 0;
  *(unsigned char *)(v77 + 16) = 0;
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947F38);
  sub_261B3C134(v76, v83, v75, v74, (uint64_t *)(v77 + *(int *)(v79 + 44)));
  sub_2619FB7EC(v77, v73, &qword_26A947EF8);
  uint64_t v80 = v105;
  sub_2619F86F0(v105, v78, &qword_26A947F10);
  sub_2619F86F0(v73, v71, &qword_26A947EF8);
  sub_2619F86F0(v78, v72, &qword_26A947F10);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947F40);
  sub_2619F86F0(v71, v72 + *(int *)(v81 + 48), &qword_26A947EF8);
  sub_2619F8754(v73, &qword_26A947EF8);
  sub_2619F8754(v80, &qword_26A947F10);
  sub_2619F8754(v71, &qword_26A947EF8);
  return (id)sub_2619F8754(v78, &qword_26A947F10);
}

uint64_t sub_261B3C134@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v67 = a3;
  uint64_t v68 = a4;
  uint64_t v66 = a2;
  uint64_t v5 = a1;
  v59[1] = a1;
  uint64_t v71 = a5;
  uint64_t v6 = sub_261B8E078();
  uint64_t v69 = *(void *)(v6 - 8);
  uint64_t v70 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v63 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947F48);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947F50) - 8;
  MEMORY[0x270FA5388](v62);
  uint64_t v60 = (uint64_t)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947F58) - 8;
  MEMORY[0x270FA5388](v65);
  uint64_t v61 = (uint64_t)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v64 = (uint64_t)v59 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943488);
  double v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = objc_msgSend(v5, sel_localizedName, v16);
  uint64_t v20 = sub_261B8F0F8();
  uint64_t v22 = v21;

  uint64_t v72 = v20;
  uint64_t v73 = v22;
  sub_261A029C4();
  uint64_t v23 = sub_261B8E3D8();
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  uint64_t v28 = sub_261B8E118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v18, 1, 1, v28);
  sub_261B8E188();
  sub_2619F8754((uint64_t)v18, &qword_26A943488);
  uint64_t v29 = sub_261B8E368();
  uint64_t v31 = v30;
  LOBYTE(v5) = v32;
  swift_release();
  sub_261A02A18(v23, v25, v27);
  swift_bridgeObjectRelease();
  sub_261B8E128();
  uint64_t v33 = sub_261B8E2F8();
  uint64_t v35 = v34;
  LOBYTE(v22) = v36 & 1;
  sub_261A02A18(v29, v31, v5 & 1);
  swift_bridgeObjectRelease();
  sub_261B8E898();
  uint64_t v37 = sub_261B8E318();
  uint64_t v39 = v38;
  LOBYTE(v31) = v40;
  v59[0] = v41;
  swift_release();
  LOBYTE(v23) = v31 & 1;
  sub_261A02A18(v33, v35, v22);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)uint64_t v10 = sub_261B8DAD8();
  *((void *)v10 + 1) = 0x4010000000000000;
  v10[16] = 0;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947F60);
  sub_261B3C6F8(v67, v68, (uint64_t)&v10[*(int *)(v43 + 44)]);
  sub_261B8E148();
  uint64_t v44 = v63;
  sub_261B8E068();
  uint64_t v45 = sub_261B8E178();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v44, v70);
  uint64_t v46 = swift_getKeyPath();
  uint64_t v47 = v60;
  sub_2619F86F0((uint64_t)v10, v60, &qword_26A947F48);
  uint64_t v48 = (uint64_t *)(v47 + *(int *)(v62 + 44));
  *uint64_t v48 = v46;
  v48[1] = v45;
  sub_2619F8754((uint64_t)v10, &qword_26A947F48);
  uint64_t v49 = WorkoutConfiguration.displayColor.getter();
  uint64_t v50 = MEMORY[0x263E4C7B0](v49);
  uint64_t v51 = swift_getKeyPath();
  uint64_t v52 = v61;
  sub_2619F86F0(v47, v61, &qword_26A947F50);
  uint64_t v53 = (uint64_t *)(v52 + *(int *)(v65 + 44));
  *uint64_t v53 = v51;
  v53[1] = v50;
  sub_2619F8754(v47, &qword_26A947F50);
  uint64_t v54 = v64;
  sub_2619FB7EC(v52, v64, &qword_26A947F58);
  sub_2619F86F0(v54, v52, &qword_26A947F58);
  uint64_t v55 = v71;
  *uint64_t v71 = v37;
  v55[1] = v39;
  *((unsigned char *)v55 + 16) = v23;
  v55[3] = v59[0];
  unsigned char v55[4] = KeyPath;
  v55[5] = 0;
  *((unsigned char *)v55 + 48) = 1;
  uint64_t v56 = v55;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947F68);
  sub_2619F86F0(v52, (uint64_t)v56 + *(int *)(v57 + 48), &qword_26A947F58);
  sub_261A001D0(v37, v39, v23);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2619F8754(v54, &qword_26A947F58);
  sub_2619F8754(v52, &qword_26A947F58);
  sub_261A02A18(v37, v39, v23);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_261B3C6F8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E30);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_261B8E978();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_261B8DB88();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A947F70);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20.n128_f64[0] = MEMORY[0x270FA5388](v16);
  if (a2)
  {
    uint64_t v37 = (uint64_t)&v36 - v19;
    uint64_t v39 = v18;
    uint64_t v40 = a3;
    uint64_t v42 = v17;
    sub_261B8DB78();
    sub_261B8DB68();
    sub_261B8B8E8();
    uint64_t v21 = swift_dynamicCastClass();
    uint64_t v38 = v5;
    if (!v21)
    {
      sub_261B8B818();
      if (!swift_dynamicCastClass()) {
        WorkoutConfiguration.displaySymbolName.getter();
      }
    }
    sub_261B8E948();
    sub_261B8DB48();
    swift_release();
    sub_261B8DB68();
    sub_261B8DB58();
    sub_261B8DB68();
    sub_261B8DBA8();
    uint64_t v24 = sub_261B8E3B8();
    uint64_t v26 = v25;
    uint64_t v41 = v27;
    char v29 = v28 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F1B538], v8);
    uint64_t v31 = v8;
    uint64_t v32 = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v7 + *(int *)(v38 + 28), v11, v31);
    *uint64_t v7 = v32;
    sub_2619F86F0((uint64_t)v7, (uint64_t)&v15[*(int *)(v42 + 36)], &qword_26A944E30);
    *(void *)uint64_t v15 = v24;
    *((void *)v15 + 1) = v26;
    v15[16] = v29;
    *((void *)v15 + 3) = v41;
    *((void *)v15 + 4) = KeyPath;
    *((void *)v15 + 5) = 0;
    v15[48] = 1;
    sub_261A001D0(v24, v26, v29);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2619F8754((uint64_t)v7, &qword_26A944E30);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v31);
    sub_261A02A18(v24, v26, v29);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v33 = v37;
    sub_2619FB7EC((uint64_t)v15, v37, &qword_26A947F70);
    uint64_t v34 = v33;
    uint64_t v35 = v40;
    sub_2619FB7EC(v34, v40, &qword_26A947F70);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v35, 0, 1, v42);
  }
  else
  {
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v18 + 56);
    return v22(a3, 1, 1, v20);
  }
}

uint64_t sub_261B3CBCC@<X0>(uint64_t a1@<X8>)
{
  return sub_261B3B0A0(*(void **)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_261B3CBE8()
{
  unint64_t result = qword_26A947F20;
  if (!qword_26A947F20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947F18);
    sub_261B3CC88();
    sub_2619F8AB8((unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947F20);
  }
  return result;
}

unint64_t sub_261B3CC88()
{
  unint64_t result = qword_26A947F28;
  if (!qword_26A947F28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947F30);
    sub_2619F8AB8((unint64_t *)&qword_26A943AF0, &qword_26A943AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947F28);
  }
  return result;
}

unint64_t sub_261B3CD3C()
{
  unint64_t result = qword_26A947F78;
  if (!qword_26A947F78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947ED8);
    sub_261B3CE38(&qword_26A947F80, &qword_26A947EC8, (void (*)(void))sub_261B3CE08);
    sub_2619F8AB8((unint64_t *)&qword_26A944358, &qword_26A944360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947F78);
  }
  return result;
}

uint64_t sub_261B3CE08()
{
  return sub_261B3CE38(&qword_26A947F88, &qword_26A947EC0, (void (*)(void))sub_261B3CEB4);
}

uint64_t sub_261B3CE38(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261B3CEB4()
{
  return sub_261B3CE38(&qword_26A947F90, &qword_26A947EB8, (void (*)(void))sub_261B3CEE4);
}

uint64_t sub_261B3CEE4()
{
  return sub_261B3CE38(&qword_26A947F98, &qword_26A947EB0, (void (*)(void))sub_261B3CF14);
}

unint64_t sub_261B3CF14()
{
  unint64_t result = qword_26A947FA0;
  if (!qword_26A947FA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947EA8);
    sub_2619F8AB8(&qword_26A947FA8, &qword_26A947EA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947FA0);
  }
  return result;
}

double Image.scaledToFit(size:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_261B8E928();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x263F1B4B8], v2, v4);
  uint64_t v7 = sub_261B8E988();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  sub_261B8EC98();
  sub_261B8D4D8();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1;
  long long v8 = v10[1];
  *(_OWORD *)(a1 + 24) = v10[0];
  *(_OWORD *)(a1 + 40) = v8;
  double result = *(double *)&v11;
  *(_OWORD *)(a1 + 56) = v11;
  return result;
}

unint64_t sub_261B3D128()
{
  unint64_t result = qword_26A947FB0;
  if (!qword_26A947FB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947FB8);
    sub_261A8D444();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A947FB0);
  }
  return result;
}

uint64_t sub_261B3D1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8DD58();
  double v5 = MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(void *)(a2 - 8) + 16))((char *)&v8 - v6, a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return sub_261B8DD68();
}

uint64_t sub_261B3D29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_261B8DD58();
  double v6 = MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(void *)(a3 - 8) + 16))((char *)&v9 - v7, a1, a3, v6);
  swift_storeEnumTagMultiPayload();
  return sub_261B8DD68();
}

void __swiftcall MetricTextDescriptor.init(value:unit:description:stale:includesSlashes:accessibilityLabel:)(WorkoutUI::MetricTextDescriptor *__return_ptr retstr, Swift::String value, Swift::String_optional unit, Swift::String_optional description, Swift::Bool stale, Swift::Bool includesSlashes, Swift::String_optional accessibilityLabel)
{
  retstr->value = value;
  retstr->unit = unit;
  retstr->description = description;
  retstr->stale = stale;
  retstr->includesSlashes = includesSlashes;
  retstr->accessibilityLabel = accessibilityLabel;
}

void __swiftcall MetricText.init(_:)(WorkoutUI::MetricText *__return_ptr retstr, WorkoutUI::MetricTextDescriptor *a2)
{
  object = a2->value._object;
  Swift::Bool stale = a2->stale;
  Swift::Bool includesSlashes = a2->includesSlashes;
  retstr->descriptor.value._countAndFlagsBits = a2->value._countAndFlagsBits;
  retstr->descriptor.value._object = object;
  Swift::String_optional description = a2->description;
  retstr->descriptor.unit = a2->unit;
  retstr->descriptor.Swift::String_optional description = description;
  retstr->descriptor.Swift::Bool stale = stale;
  retstr->descriptor.Swift::Bool includesSlashes = includesSlashes;
  retstr->descriptor.accessibilityLabel = a2->accessibilityLabel;
}

void __swiftcall MetricText.init(value:unit:description:stale:includesSlashes:)(WorkoutUI::MetricText *__return_ptr retstr, Swift::String value, Swift::String_optional unit, Swift::String_optional description, Swift::Bool stale, Swift::Bool includesSlashes)
{
  retstr->descriptor.value = value;
  retstr->descriptor.unit = unit;
  retstr->descriptor.Swift::String_optional description = description;
  retstr->descriptor.Swift::Bool stale = stale;
  retstr->descriptor.Swift::Bool includesSlashes = includesSlashes;
  retstr->descriptor.accessibilityLabel.value._countAndFlagsBits = 0;
  retstr->descriptor.accessibilityLabel.value._object = 0;
}

uint64_t MetricTextWithAccessory.init(value:unit:description:stale:includesSlashes:accessoryAsSuffix:accessoryView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, char a10, uint64_t (*a11)(void))
{
  *(void *)&long long v12 = a1;
  *((void *)&v12 + 1) = a2;
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  uint64_t v16 = a6;
  char v17 = a7;
  char v18 = a8;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  return MetricTextWithAccessory.init(_:accessoryAsSuffix:accessoryView:)(&v12, a10, a11, a9);
}

uint64_t MetricTextWithAccessory.init(_:accessoryAsSuffix:accessoryView:)@<X0>(long long *a1@<X0>, char a2@<W1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  long long v15 = a1[1];
  long long v16 = *a1;
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v7 = *((void *)a1 + 5);
  char v8 = *((unsigned char *)a1 + 48);
  char v9 = *((unsigned char *)a1 + 49);
  uint64_t v11 = *((void *)a1 + 7);
  uint64_t v10 = *((void *)a1 + 8);
  *(unsigned char *)(a4 + 72) = 0;
  uint64_t v12 = type metadata accessor for MetricTextWithAccessory();
  uint64_t v13 = a4 + *(int *)(v12 + 44);
  *(void *)uint64_t v13 = swift_getKeyPath();
  *(unsigned char *)(v13 + 8) = 0;
  *(void *)(a4 + *(int *)(v12 + 48)) = 0x3FD6666666666666;
  *(_OWORD *)a4 = v16;
  *(_OWORD *)(a4 + 16) = v15;
  *(void *)(a4 + 32) = v6;
  *(void *)(a4 + 40) = v7;
  *(unsigned char *)(a4 + 48) = v8;
  *(unsigned char *)(a4 + 49) = v9;
  *(void *)(a4 + 56) = v11;
  *(void *)(a4 + 64) = v10;
  *(unsigned char *)(a4 + 72) = a2;
  return a3();
}

uint64_t type metadata accessor for MetricTextWithAccessory()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_261B3D55C@<X0>(void (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X2>, void (*a3)(uint64_t)@<X4>, char a4@<W6>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a1();
  uint64_t v13 = type metadata accessor for MetricTextWatchOS();
  uint64_t v14 = a2();
  a3(v14);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(a6 + *(int *)(v13 + 92), a5, a10);
  *(unsigned char *)(a6 + *(int *)(v13 + 96)) = a4;
  return result;
}

uint64_t sub_261B3D674@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v24 = a1[2];
  sub_261B8D688();
  sub_261B8D688();
  uint64_t v23 = a1[3];
  sub_261B8D688();
  swift_getTupleTypeMetadata2();
  sub_261B8ECE8();
  swift_getWitnessTable();
  sub_261B8EA78();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9430F0);
  sub_261B8D688();
  uint64_t v3 = a1[4];
  uint64_t v21 = a1;
  uint64_t v22 = v3;
  sub_261B8D688();
  sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9443D0);
  sub_261B8D688();
  sub_261B8D688();
  sub_261B8D688();
  uint64_t v4 = a1[5];
  swift_getTupleTypeMetadata2();
  sub_261B8ECE8();
  swift_getTupleTypeMetadata2();
  sub_261B8ECE8();
  sub_261B8DD78();
  swift_getTupleTypeMetadata2();
  sub_261B8ECE8();
  swift_getWitnessTable();
  uint64_t v5 = sub_261B8EA78();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v21 - v7;
  uint64_t v9 = sub_261B8D688();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  long long v15 = (char *)&v21 - v14;
  sub_261B8DA98();
  uint64_t v27 = v24;
  uint64_t v28 = v23;
  uint64_t v29 = v22;
  uint64_t v30 = v4;
  long long v16 = *((_OWORD *)v21 + 4);
  long long v31 = *((_OWORD *)v21 + 3);
  long long v32 = v16;
  uint64_t v33 = v25;
  sub_261B8EA68();
  uint64_t WitnessTable = swift_getWitnessTable();
  View.metricRow(padding:)(v5, WitnessTable, 0.0);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  unint64_t v18 = sub_261A70FC8();
  uint64_t v34 = WitnessTable;
  unint64_t v35 = v18;
  swift_getWitnessTable();
  sub_261A8FE78(v12, v9);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v12, v9);
  sub_261A8FE78(v15, v9);
  return ((uint64_t (*)(char *, uint64_t))v19)(v15, v9);
}

void sub_261B3DAE0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v79 = a1;
  uint64_t v80 = a8;
  uint64_t v106 = a7;
  uint64_t v107 = a6;
  uint64_t v115 = a5;
  uint64_t v78 = a4;
  uint64_t v104 = a9;
  uint64_t v114 = a10;
  uint64_t v85 = sub_261B8D688();
  uint64_t v13 = sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9443D0);
  uint64_t v14 = sub_261B8D688();
  uint64_t v15 = sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9430F0);
  uint64_t v16 = sub_261B8D688();
  swift_getTupleTypeMetadata2();
  uint64_t v17 = sub_261B8ECE8();
  v74[4] = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  v74[3] = (char *)v74 - v18;
  swift_getTupleTypeMetadata2();
  uint64_t v19 = sub_261B8ECE8();
  v74[2] = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  v74[1] = (char *)v74 - v20;
  uint64_t v102 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v98 = (char *)v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v113 = (char *)v74 - v24;
  uint64_t v89 = v13;
  uint64_t v82 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v81 = (char *)v74 - v26;
  uint64_t v93 = v14;
  uint64_t v84 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v83 = (char *)v74 - v28;
  uint64_t v95 = v15;
  uint64_t v88 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v86 = (char *)v74 - v30;
  uint64_t v105 = v16;
  uint64_t v92 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v94 = (char *)v74 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v110 = (char *)v74 - v34;
  uint64_t v112 = v35;
  uint64_t v103 = v17;
  uint64_t v36 = sub_261B8DD78();
  uint64_t v100 = *(void *)(v36 - 8);
  uint64_t v101 = v36;
  MEMORY[0x270FA5388](v36);
  long long v99 = (char *)v74 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  char v111 = (char *)v74 - v39;
  uint64_t v75 = a2;
  sub_261B8D688();
  sub_261B8D688();
  uint64_t v40 = a3;
  uint64_t v76 = a3;
  sub_261B8D688();
  swift_getTupleTypeMetadata2();
  sub_261B8ECE8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v41 = sub_261B8EA78();
  uint64_t v109 = *(void (***)(char *, uint64_t))(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v43 = (char *)v74 - v42;
  uint64_t v44 = sub_261B8D688();
  uint64_t v108 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v96 = (char *)v74 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v46);
  uint64_t v48 = (char *)v74 - v47;
  MEMORY[0x270FA5388](v49);
  uint64_t v51 = (void (**)(char *, uint64_t))((char *)v74 - v50);
  sub_261B8DA98();
  uint64_t v116 = a2;
  uint64_t v117 = v40;
  uint64_t v52 = v78;
  uint64_t v53 = v79;
  uint64_t v118 = v78;
  uint64_t v119 = v115;
  uint64_t v120 = v107;
  uint64_t v121 = v106;
  uint64_t v54 = v80;
  uint64_t v122 = v80;
  uint64_t v123 = v114;
  uint64_t v124 = v79;
  sub_261B8EA68();
  uint64_t v55 = swift_getWitnessTable();
  sub_261B8E818();
  v109[1](v43, v41);
  uint64_t v56 = sub_2619F8AB8(&qword_26A9430E8, &qword_26A9430F0);
  uint64_t v145 = v55;
  uint64_t v146 = v56;
  uint64_t v77 = v56;
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v109 = v51;
  uint64_t v87 = v57;
  sub_261A8FE78(v48, v44);
  uint64_t v58 = *(void (**)(void, void))(v108 + 8);
  uint64_t WitnessTable = v44;
  uint64_t v90 = v58;
  uint64_t v91 = v108 + 8;
  v58(v48, v44);
  uint64_t v137 = v75;
  uint64_t v138 = v76;
  uint64_t v139 = v52;
  uint64_t v140 = v115;
  uint64_t v141 = v107;
  uint64_t v142 = v106;
  uint64_t v143 = v54;
  uint64_t v144 = v114;
  uint64_t v59 = type metadata accessor for MetricTextWatchOS();
  if (*(unsigned char *)(v53 + *(int *)(v59 + 96)) == 1)
  {
    uint64_t v60 = v81;
    View.metricDescriptionFont(multiline:)(1, v52, v54);
    unint64_t v61 = sub_2619F7460();
    uint64_t v129 = v54;
    unint64_t v130 = v61;
    uint64_t v62 = swift_getWitnessTable();
    unint64_t v63 = sub_2619F7558();
    uint64_t v127 = v62;
    unint64_t v128 = v63;
    uint64_t v64 = v89;
    uint64_t v65 = swift_getWitnessTable();
    sub_261B8E5B8();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v60, v64);
    uint64_t v66 = sub_2619F8AB8(&qword_26A9443C8, &qword_26A9443D0);
    uint64_t v125 = v65;
    uint64_t v126 = v66;
    swift_getWitnessTable();
    View.bodyHyphenation()();
  }
  sub_261A8FE78(v53 + *(int *)(v59 + 92), v115);
  uint64_t v67 = v81;
  View.metricDescriptionFont(multiline:)(1, v52, v54);
  unint64_t v68 = sub_2619F7460();
  uint64_t v135 = v54;
  unint64_t v136 = v68;
  uint64_t v69 = swift_getWitnessTable();
  unint64_t v70 = sub_2619F7558();
  uint64_t v133 = v69;
  unint64_t v134 = v70;
  uint64_t v71 = v89;
  uint64_t v72 = swift_getWitnessTable();
  sub_261B8E5B8();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v67, v71);
  uint64_t v73 = sub_2619F8AB8(&qword_26A9443C8, &qword_26A9443D0);
  uint64_t v131 = v72;
  uint64_t v132 = v73;
  swift_getWitnessTable();
  View.bodyHyphenation()();
}

void sub_261B3E7B8()
{
  (*(void (**)(uint64_t, uint64_t))(v0[14] + 8))(v3, v1);
  unint64_t v6 = sub_261A7B298();
  *(void *)(v5 - 232) = v2;
  *(void *)(v5 - 224) = v6;
  uint64_t v7 = v0[25];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = v0[24];
  sub_261B8E818();
  (*(void (**)(uint64_t, uint64_t))(v0[18] + 8))(v4, v7);
  uint64_t v10 = v0[7];
  *(void *)(v5 - 248) = WitnessTable;
  *(void *)(v5 - 240) = v10;
  uint64_t v11 = v0[35];
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v13 = v0[40];
  sub_261A8FE78(v9, v11);
  uint64_t v14 = v0[22];
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v0[37] = v15;
  v15(v9, v11);
  uint64_t v16 = v0[32];
  uint64_t v17 = v0[28];
  uint64_t v18 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v16 + 16))(v17, v0[43], v18);
  *(void *)(v5 - 168) = v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v9, v13, v11);
  *(void *)(v5 - 160) = v9;
  v0[71] = v18;
  v0[72] = v11;
  v0[69] = v0[44];
  v0[70] = v12;
  uint64_t v19 = v0[3];
  sub_261A2CEA4(v5 - 168, 2uLL, (uint64_t)(v0 + 71));
  ((void (*)(uint64_t, uint64_t))v0[37])(v9, v11);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v20(v17, v18);
  uint64_t v21 = v0[42];
  swift_getWitnessTable();
  uint64_t v22 = v0[33];
  swift_getWitnessTable();
  sub_261B3D29C(v19, v21, v22);
  (*(void (**)(uint64_t, uint64_t))(v0[4] + 8))(v19, v22);
  ((void (*)(void, uint64_t))v0[37])(v0[40], v11);
  v20(v0[43], v0[45]);
  JUMPOUT(0x261B3E9DCLL);
}

uint64_t sub_261B3EB2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v61 = a8;
  uint64_t v60 = a7;
  uint64_t v59 = a5;
  uint64_t v58 = a4;
  uint64_t v55 = a3;
  uint64_t v50 = a1;
  uint64_t v63 = a9;
  uint64_t v57 = a10;
  uint64_t v53 = sub_261B8D688();
  uint64_t v62 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v54 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v56 = (char *)&v43 - v14;
  uint64_t v47 = a2;
  uint64_t v15 = sub_261B8D688();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v43 - v17;
  uint64_t v19 = sub_261B8D688();
  uint64_t v46 = *(void *)(v19 - 8);
  uint64_t v20 = v46;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v48 = (char *)&v43 - v24;
  uint64_t v44 = a6;
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, a2, a6);
  unint64_t v25 = sub_2619FBA38();
  uint64_t v77 = a6;
  unint64_t v78 = v25;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_261B8E7F8();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v75 = WitnessTable;
  uint64_t v76 = MEMORY[0x263F190E0];
  uint64_t v45 = v19;
  uint64_t v51 = swift_getWitnessTable();
  sub_261A8FE78(v22, v19);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v20 + 8);
  uint64_t v49 = v20 + 8;
  uint64_t v52 = v27;
  v27(v22, v19);
  uint64_t v28 = v55;
  uint64_t v67 = (char *)v47;
  unint64_t v68 = (char *)v55;
  uint64_t v69 = v58;
  uint64_t v70 = v59;
  uint64_t v29 = v60;
  uint64_t v71 = v44;
  uint64_t v72 = v60;
  uint64_t v73 = v61;
  uint64_t v74 = v57;
  type metadata accessor for MetricTextWatchOS();
  uint64_t v30 = v54;
  View.metricUnitFont()(v28, v29);
  unint64_t v31 = sub_261B4B320();
  v66[2] = v29;
  v66[3] = v31;
  uint64_t v32 = v53;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v34 = v56;
  sub_261A8FE78(v30, v32);
  uint64_t v35 = v62;
  uint64_t v36 = *(void (**)(char *, uint64_t))(v62 + 8);
  v36(v30, v32);
  uint64_t v37 = v22;
  uint64_t v38 = v22;
  uint64_t v39 = v48;
  uint64_t v40 = v45;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v38, v48, v45);
  uint64_t v67 = v37;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v30, v34, v32);
  unint64_t v68 = v30;
  v66[0] = v40;
  v66[1] = v32;
  uint64_t v64 = v51;
  uint64_t v65 = v33;
  sub_261A2CEA4((uint64_t)&v67, 2uLL, (uint64_t)v66);
  v36(v34, v32);
  uint64_t v41 = v52;
  v52(v39, v40);
  v36(v30, v32);
  return v41(v37, v40);
}

uint64_t sub_261B3F058@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 100);
  uint64_t v5 = *(void *)v4;
  char v6 = *(unsigned char *)(v4 + 8);
  sub_2619F7774(*(void *)v4, v6);
  sub_2619FA43C(v5, v6, a2);
  return sub_2619F7790(v5, v6);
}

uint64_t sub_261B3F0C8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(uint64_t)@<X2>, void (*a3)(uint64_t)@<X4>, uint64_t a4@<X6>, char a5@<W7>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14 = (int *)type metadata accessor for MetricTextiOSPlatter();
  uint64_t v15 = a6 + v14[25];
  *(void *)uint64_t v15 = swift_getKeyPath();
  *(unsigned char *)(v15 + 8) = 0;
  uint64_t v16 = v14[26];
  *(double *)(a6 + v16) = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(0.425, 0.5, 0.5, 0.5, 0.5, 0.6, 0.6);
  uint64_t v17 = v14[27];
  *(double *)(a6 + v17) = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(3.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0);
  uint64_t v18 = v14[28];
  *(double *)(a6 + v18) = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(-3.0, -6.0, -6.0, 6.0, 6.0, 6.0, 6.0);
  uint64_t v19 = a1();
  uint64_t v20 = a2(v19);
  a3(v20);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(a6 + v14[23], a4, a10);
  *(unsigned char *)(a6 + v14[24]) = a5;
  return result;
}

uint64_t sub_261B3F27C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v258 = a2;
  uint64_t v252 = a1[2];
  uint64_t v3 = sub_261B8D688();
  uint64_t v372 = v3;
  uint64_t v4 = a1[3];
  uint64_t v263 = sub_261B8D688();
  uint64_t v373 = v263;
  uint64_t v5 = a1[4];
  uint64_t v254 = a1;
  uint64_t v250 = v5;
  sub_261B8D688();
  uint64_t v374 = sub_261B8D688();
  uint64_t v375 = MEMORY[0x263F1B6B0];
  uint64_t v6 = v374;
  swift_getTupleTypeMetadata();
  uint64_t v7 = sub_261B8ECE8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v231 = v7;
  uint64_t v8 = sub_261B8EA78();
  uint64_t v269 = sub_261B8DD78();
  uint64_t v240 = *(void *)(v269 - 8);
  MEMORY[0x270FA5388](v269);
  uint64_t v246 = (uint64_t)&v214 - v9;
  uint64_t v268 = v8;
  uint64_t v232 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v10);
  long long v229 = (char *)&v214 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  long long v239 = (char *)&v214 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943058);
  uint64_t v372 = sub_261B8D688();
  uint64_t v251 = v4;
  sub_261B8D688();
  uint64_t v373 = sub_261B8D688();
  v262 = (void (*)(uint64_t, uint64_t))a1[5];
  uint64_t v14 = sub_261B8D688();
  uint64_t v374 = v14;
  uint64_t v265 = v6;
  sub_261B8D688();
  uint64_t v375 = sub_261B8D688();
  swift_getTupleTypeMetadata();
  uint64_t v15 = sub_261B8ECE8();
  uint64_t v224 = swift_getWitnessTable();
  uint64_t v225 = v15;
  uint64_t v16 = sub_261B8EB18();
  uint64_t v227 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  long long v226 = (char *)&v214 - v17;
  uint64_t v261 = v18;
  uint64_t v19 = sub_261B8D688();
  uint64_t v244 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  long long v228 = (char *)&v214 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  long long v237 = (char *)&v214 - v22;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9443D0);
  uint64_t v260 = v3;
  sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9430F0);
  uint64_t v372 = sub_261B8D688();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9481B8);
  uint64_t v24 = v263;
  uint64_t v373 = v23;
  uint64_t v374 = v263;
  uint64_t v375 = v14;
  swift_getTupleTypeMetadata();
  sub_261B8ECE8();
  swift_getWitnessTable();
  sub_261B8EA78();
  sub_261B8D688();
  sub_261B8D688();
  swift_getTupleTypeMetadata2();
  uint64_t v25 = sub_261B8ECE8();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v222 = v25;
  uint64_t v220 = v26;
  uint64_t v27 = sub_261B8EAF8();
  uint64_t v28 = sub_261B8D688();
  uint64_t v270 = v19;
  uint64_t v29 = sub_261B8DD78();
  uint64_t v238 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v245 = (uint64_t)&v214 - v30;
  uint64_t v266 = v27;
  uint64_t v221 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v219 = (char *)&v214 - v32;
  uint64_t v267 = v28;
  uint64_t v243 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v223 = (char *)&v214 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  long long v236 = (char *)&v214 - v36;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9443D0);
  sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9445E8);
  uint64_t v372 = sub_261B8D688();
  uint64_t v373 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9481B8);
  uint64_t v374 = v24;
  uint64_t v37 = v262;
  uint64_t v375 = (uint64_t)v262;
  uint64_t v376 = MEMORY[0x263F1B6B0];
  swift_getTupleTypeMetadata();
  sub_261B8ECE8();
  swift_getWitnessTable();
  sub_261B8EA78();
  sub_261B8D688();
  sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9439E8);
  sub_261B8D688();
  swift_getTupleTypeMetadata3();
  sub_261B8ECE8();
  uint64_t v214 = swift_getWitnessTable();
  uint64_t v38 = sub_261B8EAF8();
  uint64_t v216 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  unint64_t v215 = (char *)&v214 - v39;
  uint64_t v265 = v40;
  uint64_t v41 = sub_261B8D688();
  uint64_t v218 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v217 = (char *)&v214 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v43);
  long long v234 = (char *)&v214 - v44;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9443D0);
  uint64_t v372 = sub_261B8D688();
  uint64_t v373 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9481B8);
  uint64_t v374 = v24;
  uint64_t v375 = (uint64_t)v37;
  swift_getTupleTypeMetadata();
  sub_261B8ECE8();
  swift_getWitnessTable();
  sub_261B8EA78();
  swift_getTupleTypeMetadata3();
  sub_261B8ECE8();
  swift_getWitnessTable();
  uint64_t v45 = sub_261B8EA78();
  uint64_t v264 = v41;
  uint64_t v46 = sub_261B8DD78();
  uint64_t v235 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v242 = (uint64_t)&v214 - v47;
  uint64_t v259 = v48;
  uint64_t v253 = v29;
  uint64_t v49 = sub_261B8DD78();
  uint64_t v248 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  long long v247 = (char *)&v214 - v50;
  uint64_t v260 = v45;
  uint64_t v241 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v53 = (char *)&v214 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v54);
  v233 = (char *)&v214 - v55;
  uint64_t v56 = sub_261B8DD78();
  uint64_t v256 = *(void *)(v56 - 8);
  uint64_t v257 = v56;
  MEMORY[0x270FA5388](v56);
  uint64_t v58 = (char *)&v214 - v57;
  uint64_t v59 = (uint64_t)v254;
  uint64_t v60 = v255;
  uint64_t v61 = sub_261B3F058((uint64_t)v254, &v371);
  uint64_t v263 = (uint64_t)v58;
  uint64_t v249 = v49;
  switch(v371)
  {
    case 2:
      uint64_t v62 = sub_261B8DA98();
      MEMORY[0x270FA5388](v62);
      uint64_t v63 = v251;
      *(&v214 - 10) = v252;
      *(&v214 - 9) = v63;
      uint64_t v208 = v250;
      uint64_t v209 = v262;
      long long v64 = *(_OWORD *)(v59 + 64);
      long long v210 = *(_OWORD *)(v59 + 48);
      long long v211 = v64;
      uint64_t v212 = v60;
      sub_261B8EA68();
      v262 = (void (*)(uint64_t, uint64_t))MEMORY[0x263F1B650];
      uint64_t v65 = v260;
      uint64_t v66 = swift_getWitnessTable();
      uint64_t v67 = v233;
      sub_261A8FE78(v53, v65);
      uint64_t v68 = v241 + 8;
      uint64_t v69 = *(void (**)(char *, uint64_t))(v241 + 8);
      v69(v53, v65);
      uint64_t v255 = v69;
      uint64_t v241 = v68;
      sub_261A8FE78(v67, v65);
      uint64_t v70 = swift_getWitnessTable();
      unint64_t v71 = sub_261A70FC8();
      uint64_t v283 = v70;
      unint64_t v284 = v71;
      uint64_t v72 = swift_getWitnessTable();
      sub_261B3D1A4((uint64_t)v53, v65);
      v69(v53, v65);
      uint64_t v281 = v66;
      uint64_t v282 = v72;
      uint64_t v73 = v259;
      uint64_t v254 = (void *)swift_getWitnessTable();
      uint64_t v279 = swift_getWitnessTable();
      uint64_t v280 = MEMORY[0x263F19100];
      uint64_t v74 = swift_getWitnessTable();
      uint64_t v277 = swift_getWitnessTable();
      uint64_t v278 = MEMORY[0x263F18C10];
      uint64_t v75 = swift_getWitnessTable();
      uint64_t v275 = v74;
      uint64_t v276 = v75;
      uint64_t v76 = swift_getWitnessTable();
      uint64_t v77 = (uint64_t)v247;
      uint64_t v78 = v242;
      uint64_t v79 = (uint64_t)v254;
      sub_261B3D1A4(v242, v73);
      (*(void (**)(uint64_t, uint64_t))(v235 + 8))(v78, v73);
      uint64_t v273 = v79;
      uint64_t v274 = v76;
      uint64_t v80 = v249;
      swift_getWitnessTable();
      uint64_t v271 = swift_getWitnessTable();
      uint64_t v272 = MEMORY[0x263F1A820];
      swift_getWitnessTable();
      sub_261B3D1A4(v77, v80);
      (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v77, v80);
      v255(v233, v65);
      break;
    case 3:
      MEMORY[0x270FA5388](v61);
      uint64_t v100 = v251;
      *(&v214 - 10) = v252;
      *(&v214 - 9) = v100;
      uint64_t v208 = v250;
      uint64_t v209 = v262;
      long long v210 = *(_OWORD *)(v59 + 48);
      sub_261B8DBE8();
      uint64_t v101 = v219;
      sub_261B8EAE8();
      uint64_t v102 = sub_261B8EC98();
      uint64_t v104 = v103;
      uint64_t v105 = (void (*)(char *, uint64_t))v266;
      uint64_t v106 = swift_getWitnessTable();
      uint64_t v212 = v105;
      uint64_t v213 = v106;
      *(void *)&long long v211 = v102;
      *((void *)&v211 + 1) = v104;
      BYTE8(v210) = 1;
      *(void *)&long long v210 = 0;
      LOBYTE(v209) = 1;
      uint64_t v208 = 0;
      uint64_t v107 = (uint64_t)v223;
      sub_261B8E758();
      (*(void (**)(char *, void))(v221 + 8))(v101, v105);
      uint64_t v311 = v106;
      uint64_t v312 = MEMORY[0x263F19100];
      uint64_t v108 = v267;
      uint64_t v109 = swift_getWitnessTable();
      uint64_t v110 = v236;
      sub_261A8FE78(v107, v108);
      uint64_t v111 = v243 + 8;
      uint64_t v112 = *(void (**)(uint64_t, uint64_t))(v243 + 8);
      v112(v107, v108);
      v262 = v112;
      uint64_t v243 = v111;
      sub_261A8FE78(v110, v108);
      uint64_t v309 = swift_getWitnessTable();
      uint64_t v310 = MEMORY[0x263F18C10];
      uint64_t v113 = swift_getWitnessTable();
      sub_261B3D1A4(v107, v108);
      v112(v107, v108);
      uint64_t v255 = (void (*)(char *, uint64_t))MEMORY[0x263F1B650];
      uint64_t v114 = swift_getWitnessTable();
      uint64_t v115 = swift_getWitnessTable();
      unint64_t v116 = sub_261A70FC8();
      uint64_t v307 = v115;
      unint64_t v308 = v116;
      uint64_t v117 = swift_getWitnessTable();
      uint64_t v305 = v114;
      uint64_t v306 = v117;
      uint64_t v118 = v259;
      uint64_t v119 = swift_getWitnessTable();
      uint64_t v303 = v109;
      uint64_t v304 = v113;
      uint64_t v120 = v253;
      uint64_t v121 = swift_getWitnessTable();
      uint64_t v122 = (uint64_t)v247;
      uint64_t v123 = v245;
      sub_261B3D29C(v245, v118, v120);
      (*(void (**)(uint64_t, uint64_t))(v238 + 8))(v123, v120);
      uint64_t v301 = v119;
      uint64_t v302 = v121;
      uint64_t v124 = v249;
      swift_getWitnessTable();
      uint64_t v299 = swift_getWitnessTable();
      uint64_t v300 = MEMORY[0x263F1A820];
      swift_getWitnessTable();
      sub_261B3D1A4(v122, v124);
      (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v122, v124);
      uint64_t v125 = v236;
      uint64_t v126 = v108;
      goto LABEL_6;
    case 4:
      sub_261B8DBE8();
      uint64_t v127 = sub_261B8DAA8();
      MEMORY[0x270FA5388](v127);
      uint64_t v128 = v251;
      *(&v214 - 10) = v252;
      *(&v214 - 9) = v128;
      uint64_t v208 = v250;
      uint64_t v209 = v262;
      long long v129 = *(_OWORD *)(v59 + 64);
      long long v210 = *(_OWORD *)(v59 + 48);
      long long v211 = v129;
      uint64_t v212 = v60;
      unint64_t v130 = v226;
      sub_261B8EB08();
      sub_261B8DF98();
      uint64_t v131 = v261;
      uint64_t v132 = swift_getWitnessTable();
      uint64_t v133 = (uint64_t)v228;
      sub_261B8E798();
      (*(void (**)(char *, uint64_t))(v227 + 8))(v130, v131);
      uint64_t v325 = v132;
      uint64_t v326 = MEMORY[0x263F18C10];
      uint64_t v254 = (void *)MEMORY[0x263F18E48];
      uint64_t v134 = v270;
      uint64_t v135 = swift_getWitnessTable();
      unint64_t v136 = v237;
      sub_261A8FE78(v133, v134);
      uint64_t v137 = v244 + 8;
      uint64_t v138 = *(void (**)(uint64_t, uint64_t))(v244 + 8);
      v138(v133, v134);
      uint64_t v139 = v138;
      v262 = v138;
      uint64_t v244 = v137;
      sub_261A8FE78(v136, v134);
      uint64_t v323 = swift_getWitnessTable();
      uint64_t v324 = MEMORY[0x263F19100];
      uint64_t v140 = v267;
      uint64_t v141 = swift_getWitnessTable();
      uint64_t v142 = v245;
      sub_261B3D29C(v133, v140, v134);
      v139(v133, v134);
      uint64_t v255 = (void (*)(char *, uint64_t))MEMORY[0x263F1B650];
      uint64_t v143 = swift_getWitnessTable();
      uint64_t v144 = swift_getWitnessTable();
      unint64_t v145 = sub_261A70FC8();
      uint64_t v321 = v144;
      unint64_t v322 = v145;
      uint64_t v146 = swift_getWitnessTable();
      uint64_t v319 = v143;
      uint64_t v320 = v146;
      uint64_t v147 = v259;
      uint64_t v148 = swift_getWitnessTable();
      uint64_t v317 = v141;
      uint64_t v318 = v135;
      uint64_t v149 = v253;
      uint64_t v150 = swift_getWitnessTable();
      uint64_t v151 = (uint64_t)v247;
      sub_261B3D29C(v142, v147, v149);
      (*(void (**)(uint64_t, uint64_t))(v238 + 8))(v142, v149);
      uint64_t v315 = v148;
      uint64_t v316 = v150;
      uint64_t v152 = v249;
      swift_getWitnessTable();
      uint64_t v313 = swift_getWitnessTable();
      uint64_t v314 = MEMORY[0x263F1A820];
      swift_getWitnessTable();
      sub_261B3D1A4(v151, v152);
      (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v151, v152);
      uint64_t v125 = v237;
      uint64_t v126 = v270;
LABEL_6:
      v262((uint64_t)v125, v126);
      break;
    case 5:
      uint64_t v153 = sub_261B8DBF8();
      MEMORY[0x270FA5388](v153);
      uint64_t v154 = v251;
      *(&v214 - 10) = v252;
      *(&v214 - 9) = v154;
      uint64_t v208 = v250;
      uint64_t v209 = v262;
      long long v155 = *(_OWORD *)(v59 + 64);
      long long v210 = *(_OWORD *)(v59 + 48);
      long long v211 = v155;
      uint64_t v212 = v60;
      uint64_t v156 = v215;
      sub_261B8EAE8();
      uint64_t v254 = (void *)MEMORY[0x263F1B6E0];
      uint64_t v157 = v265;
      uint64_t v158 = swift_getWitnessTable();
      uint64_t v159 = (uint64_t)v217;
      View.metricRow(padding:)(v157, v158, 0.0);
      (*(void (**)(char *, uint64_t))(v216 + 8))(v156, v157);
      unint64_t v160 = sub_261A70FC8();
      uint64_t v297 = v158;
      unint64_t v298 = v160;
      uint64_t v161 = v264;
      uint64_t v162 = swift_getWitnessTable();
      uint64_t v163 = v234;
      sub_261A8FE78(v159, v161);
      uint64_t v164 = *(void (**)(uint64_t, uint64_t))(v218 + 8);
      v164(v159, v161);
      uint64_t v165 = v164;
      v262 = v164;
      sub_261A8FE78(v163, v161);
      uint64_t v255 = (void (*)(char *, uint64_t))MEMORY[0x263F1B650];
      uint64_t v166 = v260;
      uint64_t v167 = swift_getWitnessTable();
      uint64_t v168 = v242;
      sub_261B3D29C(v159, v166, v161);
      v165(v159, v161);
      uint64_t v295 = v167;
      uint64_t v296 = v162;
      uint64_t v169 = v259;
      uint64_t v170 = swift_getWitnessTable();
      uint64_t v293 = swift_getWitnessTable();
      uint64_t v294 = MEMORY[0x263F19100];
      uint64_t v171 = swift_getWitnessTable();
      uint64_t v291 = swift_getWitnessTable();
      uint64_t v292 = MEMORY[0x263F18C10];
      uint64_t v172 = swift_getWitnessTable();
      uint64_t v289 = v171;
      uint64_t v290 = v172;
      uint64_t v173 = swift_getWitnessTable();
      uint64_t v174 = (uint64_t)v247;
      sub_261B3D1A4(v168, v169);
      (*(void (**)(uint64_t, uint64_t))(v235 + 8))(v168, v169);
      uint64_t v287 = v170;
      uint64_t v288 = v173;
      uint64_t v175 = v249;
      swift_getWitnessTable();
      uint64_t v285 = swift_getWitnessTable();
      uint64_t v286 = MEMORY[0x263F1A820];
      swift_getWitnessTable();
      sub_261B3D1A4(v174, v175);
      (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v174, v175);
      v262((uint64_t)v234, v161);
      break;
    case 6:
      uint64_t v176 = sub_261B8DA98();
      MEMORY[0x270FA5388](v176);
      uint64_t v177 = v251;
      *(&v214 - 10) = v252;
      *(&v214 - 9) = v177;
      uint64_t v208 = v250;
      uint64_t v209 = v262;
      long long v178 = *(_OWORD *)(v59 + 64);
      long long v210 = *(_OWORD *)(v59 + 48);
      long long v211 = v178;
      uint64_t v212 = v60;
      uint64_t v179 = (uint64_t)v229;
      sub_261B8EA68();
      uint64_t v180 = v268;
      uint64_t v181 = swift_getWitnessTable();
      uint64_t v182 = v239;
      sub_261A8FE78(v179, v180);
      uint64_t v183 = *(void (**)(uint64_t, uint64_t))(v232 + 8);
      v183(v179, v180);
      v262 = v183;
      sub_261A8FE78(v182, v180);
      sub_261B3D1A4(v179, v180);
      v183(v179, v180);
      uint64_t v184 = swift_getWitnessTable();
      uint64_t v185 = swift_getWitnessTable();
      unint64_t v186 = sub_261A70FC8();
      uint64_t v339 = v185;
      unint64_t v340 = v186;
      uint64_t v187 = swift_getWitnessTable();
      uint64_t v337 = v184;
      uint64_t v338 = v187;
      uint64_t v188 = swift_getWitnessTable();
      uint64_t v335 = swift_getWitnessTable();
      uint64_t v336 = MEMORY[0x263F19100];
      uint64_t v189 = swift_getWitnessTable();
      uint64_t v333 = swift_getWitnessTable();
      uint64_t v334 = MEMORY[0x263F18C10];
      uint64_t v190 = swift_getWitnessTable();
      uint64_t v331 = v189;
      uint64_t v332 = v190;
      uint64_t v191 = swift_getWitnessTable();
      uint64_t v329 = v188;
      uint64_t v330 = v191;
      uint64_t v192 = v249;
      swift_getWitnessTable();
      uint64_t v327 = v181;
      uint64_t v328 = MEMORY[0x263F1A820];
      uint64_t v193 = v269;
      swift_getWitnessTable();
      uint64_t v194 = v246;
      sub_261B3D29C(v246, v192, v193);
      (*(void (**)(uint64_t, uint64_t))(v240 + 8))(v194, v193);
      v262((uint64_t)v239, v180);
      break;
    default:
      uint64_t v81 = MEMORY[0x263F19100];
      sub_261B8DB98();
      LOWORD(v213) = 256;
      uint64_t v212 = 0;
      uint64_t v254 = (void *)sub_261B8E3B8();
      uint64_t v255 = v82;
      v262 = v83;
      uint64_t v372 = (uint64_t)v254;
      uint64_t v373 = (uint64_t)v82;
      LODWORD(v252) = v84 & 1;
      LOBYTE(v374) = v84 & 1;
      uint64_t v375 = (uint64_t)v83;
      uint64_t v85 = v268;
      uint64_t v86 = swift_getWitnessTable();
      uint64_t v87 = v246;
      uint64_t v88 = v85;
      uint64_t v89 = v86;
      sub_261B3D29C((uint64_t)&v372, v88, MEMORY[0x263F1A830]);
      uint64_t v90 = swift_getWitnessTable();
      uint64_t v91 = swift_getWitnessTable();
      unint64_t v92 = sub_261A70FC8();
      uint64_t v369 = v91;
      unint64_t v370 = v92;
      uint64_t v93 = swift_getWitnessTable();
      uint64_t v367 = v90;
      uint64_t v368 = v93;
      uint64_t v94 = v49;
      uint64_t v95 = swift_getWitnessTable();
      uint64_t v365 = swift_getWitnessTable();
      uint64_t v366 = v81;
      uint64_t v96 = swift_getWitnessTable();
      uint64_t v363 = swift_getWitnessTable();
      uint64_t v364 = MEMORY[0x263F18C10];
      uint64_t v97 = swift_getWitnessTable();
      uint64_t v361 = v96;
      uint64_t v362 = v97;
      uint64_t v98 = swift_getWitnessTable();
      uint64_t v359 = v95;
      uint64_t v360 = v98;
      swift_getWitnessTable();
      uint64_t v357 = v89;
      uint64_t v358 = MEMORY[0x263F1A820];
      uint64_t v99 = v269;
      swift_getWitnessTable();
      sub_261B3D29C(v87, v94, v99);
      (*(void (**)(uint64_t, uint64_t))(v240 + 8))(v87, v99);
      sub_261A02A18((uint64_t)v254, (uint64_t)v255, v252);
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v195 = swift_getWitnessTable();
  uint64_t v196 = swift_getWitnessTable();
  unint64_t v197 = sub_261A70FC8();
  uint64_t v355 = v196;
  unint64_t v356 = v197;
  uint64_t v198 = swift_getWitnessTable();
  uint64_t v353 = v195;
  uint64_t v354 = v198;
  uint64_t v199 = swift_getWitnessTable();
  uint64_t v351 = swift_getWitnessTable();
  uint64_t v352 = MEMORY[0x263F19100];
  uint64_t v200 = swift_getWitnessTable();
  uint64_t v349 = swift_getWitnessTable();
  uint64_t v350 = MEMORY[0x263F18C10];
  uint64_t v201 = swift_getWitnessTable();
  uint64_t v347 = v200;
  uint64_t v348 = v201;
  uint64_t v202 = swift_getWitnessTable();
  uint64_t v345 = v199;
  uint64_t v346 = v202;
  uint64_t v203 = swift_getWitnessTable();
  uint64_t v343 = swift_getWitnessTable();
  uint64_t v344 = MEMORY[0x263F1A820];
  uint64_t v204 = swift_getWitnessTable();
  uint64_t v341 = v203;
  uint64_t v342 = v204;
  uint64_t v205 = v257;
  swift_getWitnessTable();
  uint64_t v206 = v263;
  sub_261A8FE78(v263, v205);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v256 + 8))(v206, v205);
}

uint64_t sub_261B41410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v56 = a7;
  uint64_t v57 = a8;
  uint64_t v52 = a6;
  uint64_t v55 = a1;
  uint64_t v68 = a9;
  uint64_t v54 = a10;
  uint64_t v48 = a4;
  uint64_t v63 = sub_261B8D688();
  uint64_t v62 = sub_261B8D688();
  uint64_t v66 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v60 = (char *)&v48 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9439E8);
  uint64_t v65 = sub_261B8D688();
  uint64_t v67 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v61 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  long long v64 = (char *)&v48 - v17;
  uint64_t v49 = a2;
  sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9443D0);
  uint64_t v93 = sub_261B8D688();
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9481B8);
  uint64_t v50 = a3;
  uint64_t v95 = (uint64_t *)sub_261B8D688();
  uint64_t v96 = a5;
  uint64_t v51 = a5;
  swift_getTupleTypeMetadata();
  sub_261B8ECE8();
  swift_getWitnessTable();
  uint64_t v69 = sub_261B8EA78();
  uint64_t v71 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v70 = (char *)&v48 - v21;
  sub_261B8DA98();
  uint64_t v72 = a2;
  uint64_t v73 = a3;
  uint64_t v74 = a4;
  uint64_t v75 = a5;
  uint64_t v22 = v52;
  uint64_t v23 = v56;
  uint64_t v24 = v57;
  uint64_t v76 = v52;
  uint64_t v77 = v56;
  uint64_t v25 = v54;
  uint64_t v78 = v57;
  uint64_t v79 = v54;
  uint64_t v80 = v55;
  sub_261B8EA68();
  uint64_t v26 = v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_261A8FE78(v19, v26);
  uint64_t v27 = *(void (**)(void, void))(v71 + 8);
  uint64_t v58 = v71 + 8;
  uint64_t v59 = v27;
  v27(v19, v26);
  uint64_t v28 = (uint64_t)v48;
  uint64_t v93 = v49;
  uint64_t v94 = v50;
  uint64_t v95 = v48;
  uint64_t v96 = v51;
  uint64_t v97 = v22;
  uint64_t v98 = v23;
  uint64_t v99 = v24;
  uint64_t v100 = v25;
  type metadata accessor for MetricTextiOSPlatter();
  uint64_t v29 = v60;
  View.metricDescriptionFont(multiline:)(1, v28, v24);
  id v30 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v93 = MEMORY[0x263E4C6F0](v30);
  unint64_t v31 = sub_2619F7460();
  uint64_t v91 = v24;
  unint64_t v92 = v31;
  uint64_t v32 = swift_getWitnessTable();
  unint64_t v33 = sub_2619F7558();
  uint64_t v89 = v32;
  unint64_t v90 = v33;
  uint64_t v34 = v62;
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v36 = v61;
  sub_261B8E5F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v29, v34);
  uint64_t v37 = sub_2619F8AB8((unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
  uint64_t v87 = v35;
  uint64_t v88 = v37;
  uint64_t v38 = v65;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = v64;
  sub_261A8FE78(v36, v38);
  uint64_t v41 = v67;
  uint64_t v42 = *(void (**)(char *, uint64_t))(v67 + 8);
  v42(v36, v38);
  uint64_t v43 = v19;
  uint64_t v44 = v19;
  uint64_t v45 = v69;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v44, v70, v69);
  uint64_t v93 = (uint64_t)v43;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v36, v40, v38);
  uint64_t v85 = 0;
  char v86 = 1;
  uint64_t v94 = (uint64_t)v36;
  uint64_t v95 = &v85;
  v84[0] = v45;
  v84[1] = v38;
  v84[2] = MEMORY[0x263F1B6B0];
  uint64_t v81 = WitnessTable;
  uint64_t v82 = v39;
  uint64_t v83 = MEMORY[0x263F1B698];
  sub_261A2CEA4((uint64_t)&v93, 3uLL, (uint64_t)v84);
  v42(v40, v38);
  uint64_t v46 = (uint64_t (*)(char *, uint64_t))v59;
  v59(v70, v45);
  v42(v36, v38);
  return v46(v43, v45);
}

uint64_t sub_261B41A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(void, void)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v75 = a7;
  uint64_t v76 = a8;
  uint64_t v82 = a6;
  uint64_t v85 = a5;
  uint64_t v74 = a4;
  uint64_t v70 = a3;
  uint64_t v65 = a1;
  uint64_t v79 = a9;
  uint64_t v78 = *(void *)(a5 - 8);
  uint64_t v84 = a10;
  MEMORY[0x270FA5388](a1);
  char v86 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v77 = (char *)&v57 - v13;
  uint64_t v14 = sub_261B8D688();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v72 = v14;
  uint64_t v73 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v87 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v71 = (char *)&v57 - v18;
  uint64_t v64 = a2;
  uint64_t v19 = sub_261B8D688();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v57 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9443D0);
  uint64_t v23 = sub_261B8D688();
  uint64_t v83 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v81 = (char *)&v57 - v27;
  uint64_t v28 = a2;
  uint64_t v29 = v82;
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, v28, (uint64_t)v82);
  unint64_t v66 = sub_2619FBA38();
  uint64_t v104 = v29;
  unint64_t v105 = v66;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_261B8E5B8();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v31 = sub_2619F8AB8(&qword_26A9443C8, &qword_26A9443D0);
  uint64_t v102 = WitnessTable;
  uint64_t v103 = v31;
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v80 = v25;
  sub_261A8FE78(v25, v23);
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t))(v83 + 8);
  uint64_t v68 = v83 + 8;
  uint64_t v69 = v32;
  v32(v25, v23);
  sub_261B8EC98();
  sub_261B8D4D8();
  uint64_t v63 = v106;
  int v62 = v107;
  uint64_t v61 = v108;
  int v60 = v109;
  uint64_t v58 = v111;
  uint64_t v59 = v110;
  uint64_t v33 = v70;
  uint64_t v94 = v64;
  uint64_t v95 = v70;
  uint64_t v34 = v75;
  uint64_t v96 = v74;
  uint64_t v97 = v85;
  uint64_t v98 = v82;
  uint64_t v99 = v75;
  uint64_t v100 = v76;
  uint64_t v101 = v84;
  uint64_t v35 = type metadata accessor for MetricTextiOSPlatter();
  uint64_t v36 = v65;
  uint64_t v37 = v87;
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, v33, v34);
  v93[4] = v34;
  v93[5] = v66;
  uint64_t v38 = v72;
  uint64_t v76 = swift_getWitnessTable();
  uint64_t v39 = v71;
  sub_261A8FE78(v37, v38);
  uint64_t v40 = v73;
  uint64_t v82 = *(void (**)(void, void))(v73 + 8);
  v82(v37, v38);
  uint64_t v41 = v36 + *(int *)(v35 + 92);
  uint64_t v42 = v77;
  uint64_t v43 = v85;
  sub_261A8FE78(v41, v85);
  uint64_t v44 = v80;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v80, v81, v23);
  uint64_t v94 = 0;
  LOBYTE(v95) = 1;
  uint64_t v96 = v63;
  LOBYTE(v97) = v62;
  uint64_t v98 = v61;
  LOBYTE(v99) = v60;
  uint64_t v100 = v59;
  uint64_t v101 = v58;
  v93[0] = v44;
  v93[1] = &v94;
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  uint64_t v46 = v87;
  uint64_t v47 = v39;
  v45(v87, v39, v38);
  v93[2] = v46;
  uint64_t v48 = v78;
  uint64_t v49 = v86;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v86, v42, v43);
  v93[3] = v49;
  v92[0] = v23;
  uint64_t v50 = v23;
  v92[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9481B8);
  v92[2] = v38;
  v92[3] = v43;
  uint64_t v88 = v67;
  uint64_t v89 = sub_261B4B280(&qword_26A9481C0, &qword_26A9481B8);
  uint64_t v90 = v76;
  uint64_t v91 = v84;
  sub_261A2CEA4((uint64_t)v93, 4uLL, (uint64_t)v92);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v48 + 8);
  v51(v42, v43);
  uint64_t v52 = v47;
  uint64_t v53 = (void (*)(char *, uint64_t))v82;
  v82(v52, v38);
  uint64_t v54 = v23;
  uint64_t v55 = v69;
  v69(v81, v54);
  v51(v86, v43);
  v53(v87, v38);
  return v55(v80, v50);
}

uint64_t sub_261B42118@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v81 = a4;
  uint64_t v82 = a8;
  uint64_t v78 = a6;
  uint64_t v79 = a7;
  uint64_t v75 = a2;
  uint64_t v76 = a3;
  uint64_t v80 = a1;
  uint64_t v71 = a9;
  uint64_t v77 = a10;
  uint64_t v63 = sub_261B8D688();
  uint64_t v11 = sub_261B8D688();
  uint64_t v65 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v64 = (char *)&v57 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9439E8);
  uint64_t v66 = v11;
  uint64_t v70 = sub_261B8D688();
  uint64_t v67 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v69 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v68 = (char *)&v57 - v15;
  sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9443D0);
  sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9445E8);
  uint64_t v108 = (uint64_t *)sub_261B8D688();
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9481B8);
  uint64_t v110 = sub_261B8D688();
  uint64_t v111 = a5;
  uint64_t v112 = MEMORY[0x263F1B6B0];
  swift_getTupleTypeMetadata();
  sub_261B8ECE8();
  swift_getWitnessTable();
  uint64_t v16 = sub_261B8EA78();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v57 - v18;
  uint64_t v20 = sub_261B8D688();
  int v60 = *(void (***)(char *, uint64_t))(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v57 - v21;
  uint64_t v74 = sub_261B8D688();
  uint64_t v61 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  int v62 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v57 - v25;
  MEMORY[0x270FA5388](v27);
  uint64_t v73 = (char *)&v57 - v28;
  sub_261B8DA98();
  uint64_t v83 = v75;
  uint64_t v84 = v76;
  uint64_t v85 = v81;
  uint64_t v86 = a5;
  uint64_t v72 = a5;
  uint64_t v87 = v78;
  uint64_t v88 = v79;
  uint64_t v89 = v82;
  uint64_t v90 = v77;
  uint64_t v91 = v80;
  sub_261B8EA68();
  if ((FIUICurrentLanguageNeedsExtendedLineSpacing() & 1) == 0)
  {
    uint64_t v108 = v75;
    uint64_t v109 = v76;
    uint64_t v110 = v81;
    uint64_t v111 = v72;
    uint64_t v112 = v78;
    uint64_t v113 = v79;
    uint64_t v114 = v82;
    uint64_t v115 = v77;
    type metadata accessor for MetricTextiOSPlatter();
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_261B8E778();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  sub_261B8EC98();
  uint64_t v106 = WitnessTable;
  uint64_t v107 = MEMORY[0x263F189A8];
  uint64_t v56 = swift_getWitnessTable();
  sub_261B8E758();
  v60[1](v22, v20);
  uint64_t v104 = v56;
  uint64_t v105 = MEMORY[0x263F19100];
  uint64_t v30 = v74;
  uint64_t v58 = swift_getWitnessTable();
  sub_261A8FE78(v26, v30);
  uint64_t v31 = v61;
  uint64_t v32 = *(void (***)(char *, uint64_t))(v61 + 8);
  uint64_t v59 = v61 + 8;
  int v60 = v32;
  ((void (*)(char *, uint64_t))v32)(v26, v30);
  uint64_t v108 = v75;
  uint64_t v109 = v76;
  uint64_t v33 = v81;
  uint64_t v34 = v82;
  uint64_t v110 = v81;
  uint64_t v111 = v72;
  uint64_t v112 = v78;
  uint64_t v113 = v79;
  uint64_t v114 = v82;
  uint64_t v115 = v77;
  type metadata accessor for MetricTextiOSPlatter();
  uint64_t v35 = v64;
  View.metricDescriptionFont(multiline:)(0, v33, v34);
  id v36 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v108 = (uint64_t *)MEMORY[0x263E4C6F0](v36);
  unint64_t v37 = sub_2619F7460();
  uint64_t v102 = v34;
  unint64_t v103 = v37;
  uint64_t v38 = swift_getWitnessTable();
  unint64_t v39 = sub_2619F7558();
  uint64_t v100 = v38;
  unint64_t v101 = v39;
  uint64_t v40 = v66;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = v69;
  sub_261B8E5F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v35, v40);
  uint64_t v43 = sub_2619F8AB8((unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
  uint64_t v98 = v41;
  uint64_t v99 = v43;
  uint64_t v44 = v70;
  uint64_t v82 = swift_getWitnessTable();
  uint64_t v45 = v68;
  sub_261A8FE78(v42, v44);
  uint64_t v46 = v67;
  uint64_t v47 = *(void (**)(char *, uint64_t))(v67 + 8);
  v47(v42, v44);
  uint64_t v96 = 0;
  char v97 = 1;
  uint64_t v108 = &v96;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  uint64_t v49 = v62;
  uint64_t v51 = v73;
  uint64_t v50 = v74;
  v48(v62, v73, v74);
  uint64_t v109 = (uint64_t)v49;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v42, v45, v44);
  uint64_t v110 = (uint64_t)v42;
  v95[0] = MEMORY[0x263F1B6B0];
  v95[1] = v50;
  v95[2] = v44;
  uint64_t v92 = MEMORY[0x263F1B698];
  uint64_t v93 = v58;
  uint64_t v94 = v82;
  sub_261A2CEA4((uint64_t)&v108, 3uLL, (uint64_t)v95);
  v47(v45, v44);
  uint64_t v52 = v50;
  uint64_t v53 = v50;
  uint64_t v54 = v60;
  ((void (*)(char *, uint64_t))v60)(v51, v52);
  v47(v42, v44);
  return ((uint64_t (*)(char *, uint64_t))v54)(v49, v53);
}

uint64_t sub_261B42A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void (*a7)(void, void)@<X6>, void (*a8)(void, void)@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v69 = a4;
  uint64_t v70 = a8;
  uint64_t v81 = a5;
  uint64_t v82 = a7;
  uint64_t v76 = a1;
  uint64_t v74 = a9;
  uint64_t v73 = *(void *)(a5 - 8);
  uint64_t v77 = a10;
  MEMORY[0x270FA5388](a1);
  uint64_t v84 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v83 = (char *)&v59 - v15;
  uint64_t v68 = v16;
  uint64_t v17 = sub_261B8D688();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v71 = v17;
  uint64_t v72 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v79 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v80 = (char *)&v59 - v21;
  uint64_t v22 = sub_261B8D688();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v59 - v24;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9443D0);
  uint64_t v26 = sub_261B8D688();
  uint64_t v67 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v59 - v27;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9445E8);
  uint64_t v75 = sub_261B8D688();
  uint64_t v78 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v85 = (char *)&v59 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v86 = (char *)&v59 - v31;
  uint64_t v96 = a2;
  uint64_t v97 = a3;
  uint64_t v98 = v69;
  uint64_t v99 = v81;
  uint64_t v100 = a6;
  unint64_t v101 = v82;
  uint64_t v102 = v70;
  uint64_t v103 = a10;
  uint64_t v66 = type metadata accessor for MetricTextiOSPlatter();
  View.metricValueFont(includesSlashes:smallCaps:)(*(unsigned char *)(v76 + *(int *)(v66 + 96)), 1, a2, a6);
  unint64_t v65 = sub_2619FBA38();
  v95[11] = a6;
  v95[12] = v65;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_261B8E5B8();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  uint64_t v33 = sub_2619F8AB8(&qword_26A9443C8, &qword_26A9443D0);
  v95[9] = WitnessTable;
  v95[10] = v33;
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v35 = v85;
  sub_261B8E708();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v28, v26);
  uint64_t v36 = sub_2619F8AB8(&qword_26A9445E0, &qword_26A9445E8);
  v95[7] = v34;
  v95[8] = v36;
  uint64_t v37 = v75;
  uint64_t v67 = swift_getWitnessTable();
  sub_261A8FE78(v35, v37);
  uint64_t v38 = *(void (**)(void, void))(v78 + 8);
  uint64_t v69 = v78 + 8;
  uint64_t v70 = v38;
  v38(v35, v37);
  sub_261B8EC98();
  sub_261B8D4D8();
  uint64_t v64 = v104;
  int v63 = v105;
  uint64_t v62 = v106;
  int v61 = v107;
  uint64_t v59 = v109;
  int v60 = v108;
  uint64_t v39 = v66;
  uint64_t v40 = v76;
  uint64_t v41 = v79;
  uint64_t v42 = v82;
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, v68, (uint64_t)v82);
  v95[5] = v42;
  v95[6] = v65;
  uint64_t v43 = v71;
  uint64_t v68 = swift_getWitnessTable();
  uint64_t v44 = v80;
  sub_261A8FE78(v41, v43);
  uint64_t v45 = v72;
  uint64_t v82 = *(void (**)(void, void))(v72 + 8);
  v82(v41, v43);
  uint64_t v46 = v40 + *(int *)(v39 + 92);
  uint64_t v47 = v83;
  uint64_t v48 = v81;
  sub_261A8FE78(v46, v81);
  uint64_t v49 = v85;
  uint64_t v50 = v75;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v85, v86, v75);
  uint64_t v96 = 0;
  LOBYTE(v97) = 1;
  uint64_t v98 = v64;
  LOBYTE(v99) = v63;
  uint64_t v100 = v62;
  LOBYTE(v101) = v61;
  uint64_t v102 = v60;
  uint64_t v103 = v59;
  v95[0] = v49;
  v95[1] = &v96;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v41, v44, v43);
  v95[2] = v41;
  uint64_t v51 = v73;
  uint64_t v52 = v84;
  uint64_t v53 = v48;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v84, v47, v48);
  uint64_t v93 = 0;
  char v94 = 0;
  void v95[3] = v52;
  v95[4] = &v93;
  v92[0] = v50;
  v92[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9481B8);
  v92[2] = v43;
  v92[3] = v48;
  void v92[4] = MEMORY[0x263F1B6B0];
  uint64_t v87 = v67;
  uint64_t v54 = MEMORY[0x263F1B698];
  uint64_t v88 = sub_261B4B280(&qword_26A9481C0, &qword_26A9481B8);
  uint64_t v89 = v68;
  uint64_t v90 = v77;
  uint64_t v91 = v54;
  sub_261A2CEA4((uint64_t)v95, 5uLL, (uint64_t)v92);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v51 + 8);
  v55(v83, v48);
  uint64_t v56 = (void (*)(char *, uint64_t))v82;
  v82(v80, v43);
  uint64_t v57 = (uint64_t (*)(char *, uint64_t))v70;
  v70(v86, v50);
  v55(v84, v53);
  v56(v79, v43);
  return v57(v85, v50);
}

uint64_t sub_261B431F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v64 = a1;
  uint64_t v65 = a8;
  uint64_t v80 = a6;
  uint64_t v81 = a7;
  uint64_t v77 = a9;
  uint64_t v78 = a4;
  uint64_t v79 = a10;
  uint64_t v70 = sub_261B8D688();
  uint64_t v13 = sub_261B8D688();
  uint64_t v72 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v66 = (char *)&v57 - v14;
  uint64_t v73 = v15;
  uint64_t v16 = sub_261B8D688();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v74 = v16;
  uint64_t v75 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v76 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v69 = (char *)&v57 - v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v71 = (char *)&v57 - v22;
  uint64_t v58 = a2;
  sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9443D0);
  sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9430F0);
  uint64_t v95 = sub_261B8D688();
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9481B8);
  uint64_t v57 = a3;
  uint64_t v97 = sub_261B8D688();
  uint64_t v59 = a5;
  uint64_t v98 = sub_261B8D688();
  swift_getTupleTypeMetadata();
  sub_261B8ECE8();
  swift_getWitnessTable();
  uint64_t v23 = sub_261B8EA78();
  uint64_t v68 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v57 - v24;
  uint64_t v26 = sub_261B8D688();
  uint64_t v60 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v67 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v57 - v29;
  MEMORY[0x270FA5388](v31);
  uint64_t v82 = (char *)&v57 - v32;
  sub_261B8DA98();
  uint64_t v83 = a2;
  uint64_t v84 = a3;
  uint64_t v85 = v78;
  uint64_t v86 = a5;
  uint64_t v87 = v80;
  uint64_t v88 = v81;
  uint64_t v33 = v65;
  uint64_t v89 = v65;
  uint64_t v90 = v79;
  uint64_t v91 = v64;
  sub_261B8EA68();
  sub_261B8EC98();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_261B8E758();
  uint64_t v34 = v23;
  uint64_t v35 = v66;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v25, v34);
  uint64_t v103 = WitnessTable;
  uint64_t v104 = MEMORY[0x263F19100];
  uint64_t v61 = swift_getWitnessTable();
  sub_261A8FE78(v30, v26);
  uint64_t v36 = v60;
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t))(v60 + 8);
  uint64_t v68 = v26;
  uint64_t v62 = v37;
  uint64_t v63 = v60 + 8;
  v37(v30, v26);
  uint64_t v95 = v58;
  uint64_t v96 = v57;
  uint64_t v38 = v78;
  uint64_t v97 = v78;
  uint64_t v98 = v59;
  uint64_t v99 = v80;
  uint64_t v100 = v81;
  uint64_t v101 = v33;
  uint64_t v102 = v79;
  type metadata accessor for MetricTextiOSPlatter();
  View.metricDescriptionFont(multiline:)(0, v38, v33);
  FIUICurrentLanguageNeedsExtendedLineSpacing();
  unint64_t v39 = sub_2619F7460();
  v94[6] = v33;
  v94[7] = v39;
  uint64_t v40 = swift_getWitnessTable();
  unint64_t v41 = sub_2619F7558();
  v94[4] = v40;
  v94[5] = v41;
  uint64_t v42 = v73;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = v69;
  sub_261B8E778();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v35, v42);
  v94[2] = v43;
  v94[3] = MEMORY[0x263F189A8];
  uint64_t v45 = v74;
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v47 = v71;
  sub_261A8FE78(v44, v45);
  uint64_t v48 = v75;
  uint64_t v49 = *(void (**)(char *, uint64_t))(v75 + 8);
  v49(v44, v45);
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  uint64_t v52 = v67;
  uint64_t v51 = v68;
  v50(v67, v82, v68);
  uint64_t v95 = (uint64_t)v52;
  uint64_t v53 = v76;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v76, v47, v45);
  uint64_t v96 = (uint64_t)v53;
  v94[0] = v51;
  v94[1] = v45;
  uint64_t v92 = v61;
  uint64_t v93 = v46;
  sub_261A2CEA4((uint64_t)&v95, 2uLL, (uint64_t)v94);
  v49(v47, v45);
  uint64_t v54 = v62;
  v62(v82, v51);
  v49(v53, v45);
  return v54(v52, v51);
}

uint64_t sub_261B43974@<X0>(void (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void (*a8)(void, void)@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v79 = a7;
  uint64_t v80 = a8;
  uint64_t v76 = a5;
  uint64_t v78 = a4;
  uint64_t v74 = a3;
  uint64_t v89 = a1;
  uint64_t v84 = a9;
  uint64_t v77 = a10;
  uint64_t v12 = sub_261B8D688();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v82 = v12;
  uint64_t v83 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v93 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v81 = (char *)&v61 - v16;
  uint64_t v75 = sub_261B8D688();
  uint64_t v88 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v91 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v87 = (char *)&v61 - v19;
  uint64_t v69 = a2;
  uint64_t v20 = sub_261B8D688();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v61 - v22;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9443D0);
  uint64_t v24 = sub_261B8D688();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v61 - v26;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9430F0);
  uint64_t v28 = sub_261B8D688();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v85 = v28;
  uint64_t v86 = v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v90 = (char *)&v61 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v92 = (char *)&v61 - v32;
  uint64_t v68 = a6;
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, a2, a6);
  unint64_t v70 = sub_2619FBA38();
  uint64_t v112 = a6;
  unint64_t v113 = v70;
  uint64_t v33 = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_261B8E5B8();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  uint64_t v35 = sub_2619F8AB8(&qword_26A9443C8, &qword_26A9443D0);
  uint64_t v110 = WitnessTable;
  uint64_t v111 = v35;
  uint64_t v61 = v33;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v37 = v90;
  sub_261B8E818();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  uint64_t v38 = sub_2619F8AB8(&qword_26A9430E8, &qword_26A9430F0);
  uint64_t v108 = v36;
  uint64_t v109 = v38;
  uint64_t v39 = v85;
  uint64_t v71 = swift_getWitnessTable();
  sub_261A8FE78(v37, v39);
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t))(v86 + 8);
  uint64_t v72 = v86 + 8;
  uint64_t v73 = v40;
  v40(v37, v39);
  sub_261B8EC98();
  sub_261B8D4D8();
  uint64_t v67 = v114;
  int v66 = v115;
  uint64_t v65 = v116;
  int v64 = v117;
  uint64_t v62 = v119;
  uint64_t v63 = v118;
  uint64_t v41 = v74;
  uint64_t v100 = v69;
  uint64_t v101 = v74;
  uint64_t v42 = v79;
  uint64_t v43 = v76;
  uint64_t v44 = v77;
  uint64_t v102 = v78;
  uint64_t v103 = v76;
  uint64_t v104 = v68;
  uint64_t v105 = v79;
  uint64_t v106 = v80;
  uint64_t v107 = v77;
  type metadata accessor for MetricTextiOSPlatter();
  uint64_t v45 = v91;
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, v41, v42);
  v99[6] = v42;
  v99[7] = v70;
  uint64_t v46 = v75;
  uint64_t v79 = swift_getWitnessTable();
  uint64_t v47 = v87;
  sub_261A8FE78(v45, v46);
  uint64_t v80 = *(void (**)(void, void))(v88 + 8);
  v80(v45, v46);
  uint64_t v48 = v93;
  View.metricUnitFont()(v43, v44);
  unint64_t v49 = sub_261B4B320();
  unsigned char v99[4] = v44;
  v99[5] = v49;
  uint64_t v50 = v82;
  uint64_t v78 = swift_getWitnessTable();
  uint64_t v51 = v81;
  sub_261A8FE78(v48, v50);
  uint64_t v52 = v83;
  uint64_t v89 = *(void (**)(char *, uint64_t))(v83 + 8);
  v89(v48, v50);
  uint64_t v53 = v85;
  uint64_t v54 = v90;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v90, v92, v85);
  uint64_t v100 = 0;
  LOBYTE(v101) = 1;
  uint64_t v102 = v67;
  LOBYTE(v103) = v66;
  uint64_t v104 = v65;
  LOBYTE(v105) = v64;
  uint64_t v106 = v63;
  uint64_t v107 = v62;
  v99[0] = v54;
  v99[1] = &v100;
  uint64_t v55 = v91;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v91, v47, v46);
  v99[2] = v55;
  uint64_t v56 = v93;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v93, v51, v50);
  v99[3] = v56;
  v98[0] = v53;
  v98[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9481B8);
  v98[2] = v46;
  v98[3] = v50;
  uint64_t v94 = v71;
  uint64_t v95 = sub_261B4B280(&qword_26A9481C0, &qword_26A9481B8);
  uint64_t v96 = v79;
  uint64_t v97 = v78;
  sub_261A2CEA4((uint64_t)v99, 4uLL, (uint64_t)v98);
  uint64_t v57 = v89;
  v89(v51, v50);
  uint64_t v58 = (void (*)(char *, uint64_t))v80;
  v80(v87, v46);
  uint64_t v59 = v73;
  v73(v92, v53);
  v57(v93, v50);
  v58(v91, v46);
  return v59(v90, v53);
}

uint64_t sub_261B4419C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(void, void)@<X5>, void (*a7)(void, void)@<X6>, void (*a8)(void, void)@<X7>, uint64_t a9@<X8>, void (*a10)(void, void))
{
  uint64_t v107 = a7;
  uint64_t v108 = a8;
  uint64_t v90 = a6;
  uint64_t v103 = a1;
  uint64_t v104 = a5;
  uint64_t v106 = a4;
  uint64_t v100 = a9;
  uint64_t v101 = a3;
  uint64_t v111 = a10;
  uint64_t v96 = sub_261B8D688();
  uint64_t v93 = sub_261B8D688();
  uint64_t v98 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v91 = (char *)&v80 - v11;
  uint64_t v94 = sub_261B8D688();
  uint64_t v99 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v92 = (char *)&v80 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943058);
  uint64_t v113 = sub_261B8D688();
  uint64_t v97 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  uint64_t v120 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v95 = (char *)&v80 - v15;
  uint64_t v118 = sub_261B8D688();
  uint64_t v114 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  unsigned __int8 v117 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v112 = (char *)&v80 - v18;
  uint64_t v83 = sub_261B8D688();
  uint64_t v86 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v82 = (char *)&v80 - v19;
  uint64_t v116 = sub_261B8D688();
  uint64_t v110 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  unsigned __int8 v115 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v119 = (char *)&v80 - v22;
  uint64_t v23 = sub_261B8D688();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v80 - v25;
  uint64_t v27 = sub_261B8D688();
  uint64_t v109 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v80 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v105 = (char *)&v80 - v31;
  uint64_t v32 = v90;
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, a2, (uint64_t)v90);
  uint64_t v126 = a2;
  uint64_t v127 = v101;
  uint64_t v128 = v106;
  uint64_t v129 = v104;
  unint64_t v130 = v32;
  uint64_t v131 = v107;
  uint64_t v132 = v108;
  uint64_t v133 = v111;
  uint64_t v81 = type metadata accessor for MetricTextiOSPlatter();
  uint64_t v87 = *(int *)(v81 + 104);
  unint64_t v33 = sub_2619FBA38();
  v125[20] = v32;
  v125[21] = v33;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_261B8E688();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  uint64_t v84 = sub_2619F8AB8(&qword_26A943050, &qword_26A943058);
  uint64_t v85 = v27;
  v125[18] = WitnessTable;
  v125[19] = v84;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v102 = v29;
  sub_261A8FE78(v29, v27);
  uint64_t v35 = *(void (**)(void, void))(v109 + 8);
  uint64_t v89 = v109 + 8;
  uint64_t v90 = v35;
  v35(v29, v27);
  uint64_t v36 = v82;
  uint64_t v37 = v107;
  View.metricUnitFont()(v101, (uint64_t)v107);
  uint64_t v38 = sub_261B8DAA8();
  unint64_t v39 = sub_261B4B320();
  v125[16] = v37;
  v125[17] = v39;
  uint64_t v40 = v83;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = v115;
  MEMORY[0x263E4C470](v38, sub_261B44CA4, 0, v40, v41);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v36, v40);
  unint64_t v43 = sub_261B4B374();
  v125[14] = v41;
  v125[15] = v43;
  uint64_t v44 = v116;
  uint64_t v86 = swift_getWitnessTable();
  sub_261A8FE78(v42, v44);
  uint64_t v45 = *(void (**)(void, void))(v110 + 8);
  uint64_t v101 = v110 + 8;
  uint64_t v107 = v45;
  v45(v42, v44);
  uint64_t v46 = v117;
  uint64_t v47 = v111;
  View.metricUnitFont()(v104, (uint64_t)v111);
  v125[12] = v47;
  v125[13] = v39;
  uint64_t v48 = v118;
  uint64_t v83 = swift_getWitnessTable();
  sub_261A8FE78(v46, v48);
  unint64_t v49 = *(void (**)(void, void))(v114 + 8);
  uint64_t v104 = v114 + 8;
  uint64_t v111 = v49;
  v49(v46, v48);
  uint64_t v50 = v91;
  uint64_t v51 = v108;
  View.metricDescriptionFont(multiline:)(0, v106, (uint64_t)v108);
  uint64_t v52 = sub_261B8DAA8();
  unint64_t v53 = sub_2619F7460();
  v125[10] = v51;
  v125[11] = v53;
  uint64_t v54 = swift_getWitnessTable();
  unint64_t v55 = sub_2619F7558();
  v125[8] = v54;
  v125[9] = v55;
  uint64_t v56 = v93;
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v58 = v92;
  MEMORY[0x263E4C470](v52, sub_261B44CE0, 0, v56, v57);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v50, v56);
  v125[6] = v57;
  v125[7] = v43;
  uint64_t v59 = v94;
  uint64_t v60 = swift_getWitnessTable();
  uint64_t v61 = v120;
  sub_261B8E688();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v58, v59);
  v125[4] = v60;
  v125[5] = v84;
  uint64_t v62 = v113;
  uint64_t v106 = swift_getWitnessTable();
  uint64_t v63 = v95;
  sub_261A8FE78(v61, v62);
  uint64_t v64 = v97;
  uint64_t v108 = *(void (**)(void, void))(v97 + 8);
  v108(v61, v62);
  uint64_t v65 = v102;
  uint64_t v66 = v85;
  (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v102, v105, v85);
  uint64_t v126 = (uint64_t)v65;
  uint64_t v68 = v115;
  uint64_t v67 = v116;
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v115, v119, v116);
  uint64_t v127 = (uint64_t)v68;
  uint64_t v69 = v117;
  uint64_t v70 = v118;
  uint64_t v71 = v112;
  (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v117, v112, v118);
  uint64_t v128 = (uint64_t)v69;
  uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  uint64_t v73 = v120;
  v72(v120, v63, v62);
  uint64_t v129 = (uint64_t)v73;
  v125[0] = v66;
  v125[1] = v67;
  v125[2] = v70;
  v125[3] = v62;
  uint64_t v121 = v88;
  uint64_t v122 = v86;
  uint64_t v123 = v83;
  uint64_t v124 = v106;
  sub_261A2CEA4((uint64_t)&v126, 4uLL, (uint64_t)v125);
  uint64_t v74 = v62;
  uint64_t v75 = (void (*)(char *, uint64_t))v108;
  v108(v63, v74);
  uint64_t v76 = (void (*)(char *, uint64_t))v111;
  v111(v71, v70);
  uint64_t v77 = (void (*)(char *, uint64_t))v107;
  v107(v119, v67);
  uint64_t v78 = (uint64_t (*)(char *, uint64_t))v90;
  v90(v105, v66);
  v75(v120, v113);
  v76(v117, v118);
  v77(v115, v116);
  return v78(v102, v66);
}

double sub_261B44CA4()
{
  uint64_t v0 = sub_261B8DAA8();
  double v1 = MEMORY[0x263E4B500](v0);
  sub_261B8D628();
  return v1 - v2;
}

double sub_261B44CE0()
{
  uint64_t v0 = sub_261B8DAA8();
  double v1 = MEMORY[0x263E4B500](v0);
  if (FIUICurrentLanguageNeedsExtendedLineSpacing()) {
    double v2 = 1.8;
  }
  else {
    double v2 = 1.4;
  }
  sub_261B8D628();
  return v1 - v2 * v3;
}

uint64_t sub_261B44D40@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v59 = a7;
  uint64_t v58 = a6;
  uint64_t v57 = a4;
  uint64_t v70 = a3;
  uint64_t v51 = a2;
  uint64_t v67 = a8;
  uint64_t v56 = a9;
  uint64_t v64 = sub_261B8D688();
  uint64_t v65 = sub_261B8D688();
  uint64_t v66 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v60 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v63 = (char *)&v50 - v13;
  uint64_t v69 = sub_261B8D688();
  uint64_t v72 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v52 = (char *)&v50 - v17;
  uint64_t v18 = sub_261B8D688();
  uint64_t v54 = *(void *)(v18 - 8);
  uint64_t v19 = v54;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v71 = (char *)&v50 - v23;
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, a1, a5);
  unint64_t v24 = sub_2619FBA38();
  uint64_t v94 = a5;
  unint64_t v95 = v24;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v68 = v21;
  uint64_t v53 = v18;
  sub_261A8FE78(v21, v18);
  uint64_t v25 = *(void (**)(void, void))(v19 + 8);
  uint64_t v61 = v19 + 8;
  uint64_t v62 = (uint64_t (*)(char *, uint64_t))v25;
  v25(v21, v18);
  uint64_t v26 = v51;
  uint64_t v86 = a1;
  uint64_t v87 = (char *)v51;
  uint64_t v88 = v70;
  uint64_t v89 = v57;
  uint64_t v27 = v58;
  uint64_t v90 = a5;
  uint64_t v91 = v58;
  uint64_t v28 = v59;
  uint64_t v92 = v59;
  uint64_t v93 = v56;
  type metadata accessor for MetricTextiOSPlatter();
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, v26, v27);
  uint64_t v84 = v27;
  unint64_t v85 = v24;
  uint64_t v29 = v69;
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v30 = v52;
  uint64_t v31 = v15;
  sub_261A8FE78(v15, v29);
  uint64_t v57 = *(uint64_t **)(v72 + 8);
  uint64_t v58 = v72 + 8;
  ((void (*)(char *, uint64_t))v57)(v15, v29);
  uint64_t v32 = v60;
  View.metricDescriptionFont(multiline:)(1, v70, v28);
  unint64_t v33 = sub_2619F7460();
  uint64_t v82 = v28;
  unint64_t v83 = v33;
  uint64_t v34 = swift_getWitnessTable();
  unint64_t v35 = sub_2619F7558();
  uint64_t v80 = v34;
  unint64_t v81 = v35;
  uint64_t v36 = v65;
  uint64_t v70 = swift_getWitnessTable();
  uint64_t v37 = v63;
  sub_261A8FE78(v32, v36);
  uint64_t v38 = v66;
  unint64_t v39 = *(void (**)(char *, uint64_t))(v66 + 8);
  v39(v32, v36);
  uint64_t v40 = v68;
  uint64_t v41 = v53;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v68, v71, v53);
  uint64_t v86 = (uint64_t)v40;
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
  uint64_t v50 = v31;
  unint64_t v43 = v30;
  uint64_t v44 = v30;
  uint64_t v45 = v69;
  v42(v31, v44, v69);
  uint64_t v87 = v31;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v32, v37, v36);
  uint64_t v78 = 0;
  char v79 = 1;
  uint64_t v88 = (uint64_t)v32;
  uint64_t v89 = &v78;
  uint64_t v46 = v41;
  v77[0] = v41;
  v77[1] = v45;
  v77[2] = v36;
  v77[3] = MEMORY[0x263F1B6B0];
  uint64_t v73 = WitnessTable;
  uint64_t v74 = v56;
  uint64_t v75 = v70;
  uint64_t v76 = MEMORY[0x263F1B698];
  sub_261A2CEA4((uint64_t)&v86, 4uLL, (uint64_t)v77);
  v39(v37, v36);
  uint64_t v47 = v57;
  ((void (*)(char *, uint64_t))v57)(v43, v45);
  uint64_t v48 = v62;
  v62(v71, v46);
  v39(v32, v36);
  ((void (*)(char *, uint64_t))v47)(v50, v45);
  return v48(v68, v46);
}

uint64_t sub_261B4541C()
{
  double v1 = v0;
  if (v0[8])
  {
    uint64_t v2 = v0[7];
  }
  else
  {
    uint64_t v3 = v0[4];
    if (v0[5])
    {
      sub_261A029C4();
      uint64_t v3 = sub_261B8F788();
      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v5 = 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945650);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_261B94B90;
    uint64_t v8 = *v1;
    uint64_t v7 = v1[1];
    *(void *)(inited + 32) = *v1;
    *(void *)(inited + 40) = v7;
    uint64_t v10 = v1[2];
    uint64_t v9 = v1[3];
    *(void *)(inited + 48) = v10;
    *(void *)(inited + 56) = v9;
    *(void *)(inited + 64) = v3;
    *(void *)(inited + 72) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_261A0B1E4(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v13 = v11[2];
    unint64_t v12 = v11[3];
    unint64_t v14 = v13 + 1;
    if (v13 >= v12 >> 1) {
      uint64_t v11 = sub_261A0B1E4((void *)(v12 > 1), v13 + 1, 1, v11);
    }
    void v11[2] = v14;
    uint64_t v15 = &v11[2 * v13];
    v15[4] = v8;
    v15[5] = v7;
    if (v9)
    {
      unint64_t v16 = v11[3];
      swift_bridgeObjectRetain();
      if (v14 >= v16 >> 1) {
        uint64_t v11 = sub_261A0B1E4((void *)(v16 > 1), v13 + 2, 1, v11);
      }
      void v11[2] = v13 + 2;
      uint64_t v17 = &v11[2 * v14];
      v17[4] = v10;
      v17[5] = v9;
    }
    if (v5)
    {
      unint64_t v18 = v11[2];
      unint64_t v19 = v11[3];
      swift_bridgeObjectRetain();
      if (v18 >= v19 >> 1) {
        uint64_t v11 = sub_261A0B1E4((void *)(v19 > 1), v18 + 1, 1, v11);
      }
      void v11[2] = v18 + 1;
      uint64_t v20 = &v11[2 * v18];
      v20[4] = v3;
      v20[5] = v5;
    }
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943578);
    sub_2619F8AB8((unint64_t *)&qword_26A943580, &qword_26A943578);
    uint64_t v2 = sub_261B8F048();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_261B45690@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 44);
  uint64_t v5 = *(void *)v4;
  char v6 = *(unsigned char *)(v4 + 8);
  sub_2619F7774(*(void *)v4, v6);
  sub_2619FA43C(v5, v6, a2);
  return sub_2619F7790(v5, v6);
}

uint64_t MetricTextWithAccessory.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v141 = a1;
  uint64_t v147 = a2;
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947FC0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947FC8);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A947FD0);
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v151 = sub_261B46B18();
  unint64_t v6 = sub_261B46BD8();
  unint64_t v7 = sub_261B46CEC();
  uint64_t v154 = *(void *)(a1 + 24);
  uint64_t v177 = v152;
  uint64_t v178 = v3;
  uint64_t v126 = v3;
  uint64_t v179 = v4;
  uint64_t v180 = v5;
  uint64_t v150 = v5;
  unint64_t v181 = v151;
  unint64_t v182 = v6;
  unint64_t v124 = v6;
  unint64_t v183 = v7;
  uint64_t v184 = v154;
  uint64_t v8 = type metadata accessor for MetricTextiOSPlatter();
  uint64_t v130 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v127 = (uint64_t)&v116 - v9;
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A948020);
  uint64_t v10 = sub_261B8D688();
  uint64_t v132 = *(char ***)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v129 = (char *)&v116 - v11;
  swift_getTupleTypeMetadata2();
  uint64_t v12 = sub_261B8ECE8();
  uint64_t v131 = v8;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = sub_2619F8AB8(&qword_26A948028, &qword_26A948020);
  uint64_t v123 = WitnessTable;
  uint64_t v175 = WitnessTable;
  uint64_t v176 = v14;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v157 = v10;
  uint64_t v177 = v10;
  uint64_t v178 = v12;
  uint64_t v146 = v15;
  uint64_t v179 = v15;
  uint64_t v180 = v16;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v133 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v125 = (char *)&v116 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v128 = (char *)&v116 - v20;
  uint64_t v177 = v152;
  uint64_t v178 = v4;
  uint64_t v21 = v150;
  uint64_t v137 = v4;
  uint64_t v179 = v4;
  uint64_t v180 = v150;
  unint64_t v181 = v151;
  unint64_t v182 = v7;
  unint64_t v136 = v7;
  unint64_t v183 = v7;
  uint64_t v184 = v154;
  type metadata accessor for MetricTextWatchOS();
  uint64_t v22 = sub_261B8D688();
  uint64_t v122 = swift_getWitnessTable();
  uint64_t v173 = v122;
  uint64_t v174 = v14;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v177 = v22;
  uint64_t v178 = v12;
  uint64_t v149 = v12;
  uint64_t v155 = v23;
  uint64_t v179 = v23;
  uint64_t v180 = v16;
  uint64_t v145 = v16;
  uint64_t v24 = swift_getOpaqueTypeMetadata2();
  uint64_t v140 = OpaqueTypeMetadata2;
  uint64_t v25 = v148;
  uint64_t v26 = sub_261B8DD78();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v139 = (char *)&v116 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(qword_26A948030);
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v31 = (char *)&v116 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v135 = (char *)&v116 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = swift_checkMetadataState();
  uint64_t v118 = *(void *)(v120 - 8);
  MEMORY[0x270FA5388](v120);
  uint64_t v117 = (uint64_t)&v116 - v35;
  uint64_t v36 = swift_checkMetadataState();
  uint64_t v121 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v119 = (char *)&v116 - v37;
  uint64_t v138 = v24;
  uint64_t v38 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v41 = (char *)&v116 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)&v116 - v43;
  uint64_t v156 = v26;
  uint64_t v144 = sub_261B8DD78();
  uint64_t v143 = *(void *)(v144 - 8);
  MEMORY[0x270FA5388](v144);
  uint64_t v142 = (char *)&v116 - v45;
  uint64_t v46 = v141;
  uint64_t v47 = sub_261B45690(v141, &v172);
  uint64_t v153 = v36;
  if (((1 << v172) & 0x7C) != 0)
  {
    MEMORY[0x270FA5388](v47);
    uint64_t v134 = v27;
    uint64_t v48 = v150;
    MEMORY[0x270FA5388](v49);
    double v51 = MEMORY[0x270FA5388](v50);
    uint64_t v52 = v25 + *(int *)(v46 + 40);
    uint64_t v53 = (uint64_t)v135;
    (*(void (**)(char *, uint64_t, uint64_t, double))(v32 + 16))(v135, v52, v48, v51);
    uint64_t v54 = v127;
    sub_261B3F0C8((uint64_t (*)(void))sub_261B46FA8, (uint64_t (*)(uint64_t))sub_261B471F0, (void (*)(uint64_t))sub_261B4BE34, v53, *(unsigned char *)(v25 + 49), v127, v152, v126, v137, v48);
    swift_getKeyPath();
    uint64_t v55 = *MEMORY[0x263F18F70];
    uint64_t v56 = sub_261B8D6E8();
    uint64_t v57 = *(void *)(v56 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 104))(v31, v55, v56);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v31, 0, 1, v56);
    uint64_t v58 = v129;
    uint64_t v59 = v131;
    sub_261B8E528();
    swift_release();
    sub_261B472B4((uint64_t)v31);
    uint64_t v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v130 + 8))(v54, v59);
    MEMORY[0x270FA5388](v60);
    uint64_t v61 = swift_checkMetadataState();
    uint64_t v62 = (uint64_t)v125;
    uint64_t v63 = v157;
    uint64_t v64 = v146;
    uint64_t v65 = v145;
    sub_261B8E648();
    ((void (*)(char *, uint64_t))v132[1])(v58, v63);
    uint64_t v177 = v63;
    uint64_t v178 = v61;
    uint64_t v179 = v64;
    uint64_t v180 = v65;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v67 = v128;
    uint64_t v68 = v140;
    sub_261A8FE78(v62, v140);
    uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v133 + 8);
    v69(v62, v68);
    sub_261A8FE78(v67, v68);
    uint64_t v177 = v153;
    uint64_t v178 = v61;
    uint64_t v179 = v155;
    uint64_t v180 = v65;
    uint64_t v70 = swift_getOpaqueTypeConformance2();
    uint64_t v71 = (uint64_t)v139;
    sub_261B3D29C(v62, v138, v68);
    v69(v62, v68);
    uint64_t v160 = v70;
    uint64_t v161 = OpaqueTypeConformance2;
    uint64_t v72 = v156;
    swift_getWitnessTable();
    uint64_t v73 = v142;
    sub_261B3D1A4(v71, v72);
    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v71, v72);
    v69((uint64_t)v67, v68);
    uint64_t v74 = v149;
  }
  else if (((1 << v172) & 0x181) != 0)
  {
    uint64_t v132 = &v116;
    MEMORY[0x270FA5388](v47);
    uint64_t v133 = v38;
    uint64_t v75 = v150;
    uint64_t v134 = v27;
    MEMORY[0x270FA5388](v76);
    uint64_t v116 = v44;
    double v78 = MEMORY[0x270FA5388](v77);
    char v79 = *(unsigned char *)(v25 + 72);
    uint64_t v80 = v25 + *(int *)(v46 + 40);
    uint64_t v81 = (uint64_t)v135;
    (*(void (**)(char *, uint64_t, uint64_t, double))(v32 + 16))(v135, v80, v75, v78);
    uint64_t v82 = v117;
    sub_261B3D55C((void (*)(void))sub_261B4BE30, (uint64_t (*)(void))sub_261B47554, (void (*)(uint64_t))sub_261B47560, v79, v81, v117, v152, v137, v137, v75);
    swift_getKeyPath();
    uint64_t v83 = *MEMORY[0x263F18F70];
    uint64_t v84 = sub_261B8D6E8();
    uint64_t v85 = *(void *)(v84 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 104))(v31, v83, v84);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v31, 0, 1, v84);
    uint64_t v86 = v119;
    uint64_t v87 = v120;
    sub_261B8E528();
    swift_release();
    sub_261B472B4((uint64_t)v31);
    uint64_t v88 = (*(uint64_t (**)(uint64_t, uint64_t))(v118 + 8))(v82, v87);
    MEMORY[0x270FA5388](v88);
    uint64_t v74 = v149;
    uint64_t v89 = swift_checkMetadataState();
    uint64_t v90 = v153;
    uint64_t v91 = v155;
    uint64_t v92 = v145;
    sub_261B8E648();
    (*(void (**)(char *, uint64_t))(v121 + 8))(v86, v90);
    uint64_t v177 = v90;
    uint64_t v178 = v89;
    uint64_t v179 = v91;
    uint64_t v180 = v92;
    uint64_t v93 = swift_getOpaqueTypeConformance2();
    uint64_t v94 = v116;
    uint64_t v95 = v138;
    sub_261A8FE78(v41, v138);
    uint64_t v96 = *(void (**)(char *, uint64_t))(v133 + 8);
    v96(v41, v95);
    sub_261A8FE78(v94, v95);
    uint64_t v177 = v157;
    uint64_t v178 = v89;
    uint64_t v64 = v146;
    uint64_t v179 = v146;
    uint64_t v180 = v92;
    uint64_t v97 = swift_getOpaqueTypeConformance2();
    uint64_t v98 = (uint64_t)v139;
    sub_261B3D1A4((uint64_t)v41, v95);
    v96(v41, v95);
    uint64_t v158 = v93;
    uint64_t v159 = v97;
    uint64_t v99 = v156;
    swift_getWitnessTable();
    uint64_t v73 = v142;
    sub_261B3D1A4(v98, v99);
    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v98, v99);
    v96(v116, v95);
    uint64_t v65 = v92;
  }
  else
  {
    sub_261B8DB98();
    uint64_t v100 = sub_261B8E3B8();
    uint64_t v102 = v101;
    uint64_t v177 = v100;
    uint64_t v178 = v101;
    char v104 = v103 & 1;
    LOBYTE(v179) = v103 & 1;
    uint64_t v180 = v105;
    uint64_t v74 = v149;
    uint64_t v168 = v36;
    uint64_t v169 = v149;
    uint64_t v106 = v145;
    uint64_t v170 = v155;
    uint64_t v171 = v145;
    uint64_t v107 = swift_getOpaqueTypeConformance2();
    uint64_t v168 = v157;
    uint64_t v169 = v74;
    uint64_t v64 = v146;
    uint64_t v170 = v146;
    uint64_t v171 = v106;
    uint64_t v65 = v106;
    uint64_t v108 = swift_getOpaqueTypeConformance2();
    uint64_t v166 = v107;
    uint64_t v167 = v108;
    uint64_t v109 = v156;
    swift_getWitnessTable();
    uint64_t v110 = v142;
    sub_261B3D29C((uint64_t)&v177, v109, MEMORY[0x263F1A830]);
    uint64_t v111 = v102;
    uint64_t v73 = v110;
    sub_261A02A18(v100, v111, v104);
    swift_bridgeObjectRelease();
  }
  uint64_t v177 = v153;
  uint64_t v178 = v74;
  uint64_t v179 = v155;
  uint64_t v180 = v65;
  uint64_t v112 = swift_getOpaqueTypeConformance2();
  uint64_t v177 = v157;
  uint64_t v178 = v74;
  uint64_t v179 = v64;
  uint64_t v180 = v65;
  uint64_t v113 = swift_getOpaqueTypeConformance2();
  uint64_t v164 = v112;
  uint64_t v165 = v113;
  uint64_t v162 = swift_getWitnessTable();
  uint64_t v163 = MEMORY[0x263F1A820];
  uint64_t v114 = v144;
  swift_getWitnessTable();
  sub_261A8FE78(v73, v114);
  return (*(uint64_t (**)(char *, uint64_t))(v143 + 8))(v73, v114);
}